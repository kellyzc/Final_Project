

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 15 21:46:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.10
    37                           ; Generated 31/07/2019 GMT
    38                           ; 
    39                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304                           
   305                           	psect	idataBANK0
   306  04FE                     __pidataBANK0:	
   307                           
   308                           ;initializer for _scoreboard
   309  04FE  3405               	retlw	5
   310  04FF  3400               	retlw	0
   311                           
   312                           ;initializer for _gameboard
   313  0500  3408               	retlw	8
   314  0501  3400               	retlw	0
   315                           
   316                           	psect	strings
   317  040E                     __pstrings:	
   318  040E                     stringtab:	
   319  040E                     __stringtab:	
   320  040E                     stringcode:	
   321                           ;	String table - string pointers are 1 byte each
   322                           
   323  040E                     stringdir:	
   324  040E  3004               	movlw	high stringdir
   325  040F  008A               	movwf	10
   326  0410  0804               	movf	4,w
   327  0411  0A84               	incf	4,f
   328  0412  0782               	addwf	2,f
   329  0413                     __stringbase:	
   330  0413  3400               	retlw	0
   331  0414                     __end_of__stringtab:	
   332  0414                     _board_r2:	
   333  0414  3454               	retlw	84
   334  0415  3448               	retlw	72
   335  0416  3449               	retlw	73
   336  0417  3453               	retlw	83
   337  0418  3420               	retlw	32
   338  0419  3449               	retlw	73
   339  041A  3453               	retlw	83
   340  041B  3420               	retlw	32
   341  041C  3452               	retlw	82
   342  041D  344F               	retlw	79
   343  041E  3457               	retlw	87
   344  041F  3420               	retlw	32
   345  0420  3432               	retlw	50
   346  0421  342E               	retlw	46
   347  0422  342E               	retlw	46
   348  0423  342E               	retlw	46
   349  0424  3400               	retlw	0
   350  0425                     __end_of_board_r2:	
   351  0425                     _board_r1:	
   352  0425  3430               	retlw	48
   353  0426  3431               	retlw	49
   354  0427  3432               	retlw	50
   355  0428  3433               	retlw	51
   356  0429  3434               	retlw	52
   357  042A  3435               	retlw	53
   358  042B  3436               	retlw	54
   359  042C  3437               	retlw	55
   360  042D  3438               	retlw	56
   361  042E  3439               	retlw	57
   362  042F  3441               	retlw	65
   363  0430  3442               	retlw	66
   364  0431  3443               	retlw	67
   365  0432  3444               	retlw	68
   366  0433  3445               	retlw	69
   367  0434  3446               	retlw	70
   368  0435  3400               	retlw	0
   369  0436                     __end_of_board_r1:	
   370  000E                     _TMR1	set	14
   371  0015                     _CCPR1	set	21
   372  0001                     _TMR0	set	1
   373  001A                     _RCREG	set	26
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0	set	31
   376  0006                     _PORTB	set	6
   377  0012                     _T2CON	set	18
   378  0005                     _PORTA	set	5
   379  0008                     _PORTD	set	8
   380  005A                     _T0IF	set	90
   381  0065                     _RCIF	set	101
   382  00FB                     _CHS1	set	251
   383  0066                     _ADIF	set	102
   384  005E                     _PEIE	set	94
   385  005F                     _GIE	set	95
   386  0080                     _TMR1ON	set	128
   387  0086                     _TMR1GE	set	134
   388  0085                     _T1CKPS1	set	133
   389  0084                     _T1CKPS0	set	132
   390  0081                     _TMR1CS	set	129
   391  00B8                     _CCP1M0	set	184
   392  00B9                     _CCP1M1	set	185
   393  00BA                     _CCP1M2	set	186
   394  00BB                     _CCP1M3	set	187
   395  0062                     _CCP1IF	set	98
   396  00F9                     _GO	set	249
   397  0061                     _TMR2IF	set	97
   398  00C4                     _CREN	set	196
   399  0081                     _OPTION_REG	set	129
   400  009E                     _ADRESL	set	158
   401  009F                     _ADCON1	set	159
   402  0086                     _TRISB	set	134
   403  0095                     _WPUB	set	149
   404  0092                     _PR2	set	146
   405  0099                     _SPBRG	set	153
   406  0087                     _TRISC	set	135
   407  0085                     _TRISA	set	133
   408  0088                     _TRISD	set	136
   409  0466                     _ADIE	set	1126
   410  040F                     _nRBPU	set	1039
   411  0461                     _TMR2IE	set	1121
   412  04C2                     _BRGH	set	1218
   413  04C4                     _SYNC	set	1220
   414  0465                     _RCIE	set	1125
   415  04C5                     _TXEN	set	1221
   416  0478                     _SCS	set	1144
   417  0189                     _ANSELH	set	393
   418  0188                     _ANSEL	set	392
   419  0C3B                     _BRG16	set	3131
   420                           
   421                           ; #config settings
   422  0000                     
   423                           	psect	cinit
   424  0013                     start_initialization:	
   425  0013                     __initialization:	
   426                           
   427                           ; Initialize objects allocated to BANK0
   428  0013  120A  118A  24FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   429  0018  00BF               	movwf	__pdataBANK0& (0+127)
   430  0019  120A  118A  24FF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   431  001E  00C0               	movwf	(__pdataBANK0+1)& (0+127)
   432  001F  120A  118A  2500  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   433  0024  00C1               	movwf	(__pdataBANK0+2)& (0+127)
   434  0025  120A  118A  2501  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   435  002A  00C2               	movwf	(__pdataBANK0+3)& (0+127)
   436                           
   437                           ; Clear objects allocated to BANK0
   438  002B  01B5               	clrf	__pbssBANK0& (0+127)
   439  002C  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   440  002D  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   441  002E  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   442  002F  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   443  0030  01BA               	clrf	(__pbssBANK0+5)& (0+127)
   444  0031  01BB               	clrf	(__pbssBANK0+6)& (0+127)
   445  0032  01BC               	clrf	(__pbssBANK0+7)& (0+127)
   446  0033  01BD               	clrf	(__pbssBANK0+8)& (0+127)
   447  0034  01BE               	clrf	(__pbssBANK0+9)& (0+127)
   448                           
   449                           ; Clear objects allocated to COMMON
   450  0035  01FC               	clrf	__pbssCOMMON& (0+127)
   451  0036  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   452  0037                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  0037                     __end_of__initialization:	
   456  0037  0183               	clrf	3
   457  0038  120A  118A  29FB   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssCOMMON
   460  007C                     __pbssCOMMON:	
   461  007C                     _recieved_char:	
   462  007C                     	ds	1
   463  007D                     _cursor_move_delay_count:	
   464  007D                     	ds	1
   465                           
   466                           	psect	bssBANK0
   467  0035                     __pbssBANK0:	
   468  0035                     _joystick_y_pos:	
   469  0035                     	ds	2
   470  0037                     _joystick_x_pos:	
   471  0037                     	ds	2
   472  0039                     _cursor_fast:	
   473  0039                     	ds	1
   474  003A                     _cursor_movable:	
   475  003A                     	ds	1
   476  003B                     _delay_loops:	
   477  003B                     	ds	1
   478  003C                     _cursor_solid:	
   479  003C                     	ds	1
   480  003D                     _current_char:	
   481  003D                     	ds	1
   482  003E                     _cursor_pos:	
   483  003E                     	ds	1
   484                           
   485                           	psect	dataBANK0
   486  003F                     __pdataBANK0:	
   487  003F                     _scoreboard:	
   488  003F                     	ds	2
   489  0041                     _gameboard:	
   490  0041                     	ds	2
   491                           
   492                           	psect	cstackCOMMON
   493  0070                     __pcstackCOMMON:	
   494  0070                     ?_joystick_init:	
   495  0070                     ?_gameboard_init:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_update_gameboard_from_input:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_time_init:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_get_current_char:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_toggle_cursor:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_update_cursor:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_main:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_interrupt_handler:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_tmr0_init:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_Delay20us:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?i1_Delay20us:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??i1_Delay20us:	
   529                           ; 1 bytes @ 0x0
   530                           
   531                           
   532                           ; 1 bytes @ 0x0
   533  0070                     	ds	1
   534  0071                     i1Delay20us@next:	
   535                           
   536                           ; 1 bytes @ 0x1
   537  0071                     	ds	1
   538  0072                     ?i1_lcd_write:	
   539  0072                     i1lcd_write@CmdChar:	
   540                           ; 1 bytes @ 0x2
   541                           
   542                           
   543                           ; 1 bytes @ 0x2
   544  0072                     	ds	1
   545  0073                     i1lcd_write@port:	
   546                           
   547                           ; 2 bytes @ 0x3
   548  0073                     	ds	2
   549  0075                     ??i1_lcd_write:	
   550                           
   551                           ; 1 bytes @ 0x5
   552  0075                     	ds	2
   553  0077                     i1lcd_write@mode:	
   554                           
   555                           ; 1 bytes @ 0x7
   556  0077                     	ds	1
   557  0078                     ?i1_lcd_putch:	
   558  0078                     i1lcd_putch@port:	
   559                           ; 1 bytes @ 0x8
   560                           
   561                           
   562                           ; 2 bytes @ 0x8
   563  0078                     	ds	2
   564  007A                     ??i1_lcd_putch:	
   565                           
   566                           ; 1 bytes @ 0xA
   567  007A                     	ds	1
   568  007B                     i1lcd_putch@character:	
   569                           
   570                           ; 1 bytes @ 0xB
   571  007B                     	ds	1
   572                           
   573                           	psect	cstackBANK0
   574  0020                     __pcstackBANK0:	
   575  0020                     ??_interrupt_handler:	
   576                           
   577                           ; 1 bytes @ 0x0
   578  0020                     	ds	4
   579  0024                     ??_joystick_init:	
   580  0024                     ??_time_init:	
   581                           ; 1 bytes @ 0x4
   582                           
   583  0024                     ??_get_current_char:	
   584                           ; 1 bytes @ 0x4
   585                           
   586  0024                     ??_tmr0_init:	
   587                           ; 1 bytes @ 0x4
   588                           
   589  0024                     ?_DelayMs:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0024                     ??_Delay20us:	
   593                           ; 1 bytes @ 0x4
   594                           
   595  0024                     DelayMs@millis:	
   596                           ; 1 bytes @ 0x4
   597                           
   598                           
   599                           ; 2 bytes @ 0x4
   600  0024                     	ds	1
   601  0025                     Delay20us@next:	
   602                           
   603                           ; 1 bytes @ 0x5
   604  0025                     	ds	1
   605  0026                     ??_DelayMs:	
   606  0026                     ?_lcd_write:	
   607                           ; 1 bytes @ 0x6
   608                           
   609  0026                     lcd_write@CmdChar:	
   610                           ; 1 bytes @ 0x6
   611                           
   612                           
   613                           ; 1 bytes @ 0x6
   614  0026                     	ds	1
   615  0027                     lcd_write@port:	
   616                           
   617                           ; 2 bytes @ 0x7
   618  0027                     	ds	2
   619  0029                     ??_lcd_write:	
   620                           
   621                           ; 1 bytes @ 0x9
   622  0029                     	ds	2
   623  002B                     lcd_write@mode:	
   624                           
   625                           ; 1 bytes @ 0xB
   626  002B                     	ds	1
   627  002C                     ?_lcd_putch:	
   628  002C                     ?_lcd_clear:	
   629                           ; 1 bytes @ 0xC
   630                           
   631  002C                     ?_lcd_puts:	
   632                           ; 1 bytes @ 0xC
   633                           
   634  002C                     ?_lcd_goto:	
   635                           ; 1 bytes @ 0xC
   636                           
   637  002C                     lcd_clear@port:	
   638                           ; 1 bytes @ 0xC
   639                           
   640  002C                     lcd_puts@port:	
   641                           ; 2 bytes @ 0xC
   642                           
   643  002C                     lcd_putch@port:	
   644                           ; 2 bytes @ 0xC
   645                           
   646  002C                     lcd_goto@port:	
   647                           ; 2 bytes @ 0xC
   648                           
   649                           
   650                           ; 2 bytes @ 0xC
   651  002C                     	ds	2
   652  002E                     ?_lcd_init:	
   653  002E                     ??_lcd_putch:	
   654                           ; 1 bytes @ 0xE
   655                           
   656  002E                     ??_lcd_clear:	
   657                           ; 1 bytes @ 0xE
   658                           
   659  002E                     ??_lcd_puts:	
   660                           ; 1 bytes @ 0xE
   661                           
   662  002E                     ??_lcd_goto:	
   663                           ; 1 bytes @ 0xE
   664                           
   665  002E                     lcd_init@port:	
   666                           ; 1 bytes @ 0xE
   667                           
   668                           
   669                           ; 2 bytes @ 0xE
   670  002E                     	ds	1
   671  002F                     lcd_puts@string:	
   672  002F                     lcd_putch@character:	
   673                           ; 1 bytes @ 0xF
   674                           
   675  002F                     lcd_goto@position:	
   676                           ; 1 bytes @ 0xF
   677                           
   678                           
   679                           ; 1 bytes @ 0xF
   680  002F                     	ds	1
   681  0030                     ??_lcd_init:	
   682  0030                     ??_gameboard_init:	
   683                           ; 1 bytes @ 0x10
   684                           
   685  0030                     ??_toggle_cursor:	
   686                           ; 1 bytes @ 0x10
   687                           
   688  0030                     ??_update_cursor:	
   689                           ; 1 bytes @ 0x10
   690                           
   691                           
   692                           ; 1 bytes @ 0x10
   693  0030                     	ds	1
   694  0031                     gameboard_init@cursor_init_pos:	
   695                           
   696                           ; 1 bytes @ 0x11
   697  0031                     	ds	1
   698  0032                     update_cursor@move_delay_count:	
   699                           
   700                           ; 1 bytes @ 0x12
   701  0032                     	ds	1
   702  0033                     ??_update_gameboard_from_input:	
   703                           
   704                           ; 1 bytes @ 0x13
   705  0033                     	ds	2
   706  0035                     ??_main:	
   707                           
   708                           	psect	maintext
   709  01FB                     __pmaintext:	
   710                           ; 1 bytes @ 0x15
   711 ;;
   712 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   713 ;;
   714 ;; *************** function _main *****************
   715 ;; Defined at:
   716 ;;		line 58 in file "concentration.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : B00/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0
   733 ;;      Totals:         0       0       0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels required when called:    9
   736 ;; This function calls:
   737 ;;		_gameboard_init
   738 ;;		_joystick_init
   739 ;;		_lcd_init
   740 ;;		_lcd_putch
   741 ;;		_update_gameboard_from_input
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _main
   749  01FB                     _main:	
   750  01FB                     l1451:	
   751                           ;incstack = 0
   752 ;; hardware stack exceeded
   753                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   754                           
   755                           
   756                           ;concentration.c: 60:     SCS = 0;
   757  01FB  1683               	bsf	3,5	;RP0=1, select bank1
   758  01FC  1303               	bcf	3,6	;RP1=0, select bank1
   759  01FD  100F               	bcf	15,0	;volatile
   760  01FE                     l1453:	
   761                           
   762                           ;concentration.c: 62:     TRISD = 0;
   763  01FE  0188               	clrf	8	;volatile
   764                           
   765                           ;concentration.c: 63:     TRISA = 0;
   766  01FF  0185               	clrf	5	;volatile
   767                           
   768                           ;concentration.c: 64:     ANSEL = 0;
   769  0200  1683               	bsf	3,5	;RP0=1, select bank3
   770  0201  1703               	bsf	3,6	;RP1=1, select bank3
   771  0202  0188               	clrf	8	;volatile
   772  0203                     l1455:	
   773                           
   774                           ;concentration.c: 65:     lcd_init(gameboard);
   775  0203  1283               	bcf	3,5	;RP0=0, select bank0
   776  0204  1303               	bcf	3,6	;RP1=0, select bank0
   777  0205  0841               	movf	_gameboard,w
   778  0206  00AE               	movwf	lcd_init@port
   779  0207  0842               	movf	_gameboard+1,w
   780  0208  00AF               	movwf	lcd_init@port+1
   781  0209  120A  118A  225A  120A  118A  	fcall	_lcd_init
   782  020E                     l1457:	
   783                           
   784                           ;concentration.c: 66:     lcd_init(scoreboard);
   785  020E  3005               	movlw	5
   786  020F  1283               	bcf	3,5	;RP0=0, select bank0
   787  0210  1303               	bcf	3,6	;RP1=0, select bank0
   788  0211  00AE               	movwf	lcd_init@port
   789  0212  3000               	movlw	0
   790  0213  00AF               	movwf	lcd_init@port+1
   791  0214  120A  118A  225A  120A  118A  	fcall	_lcd_init
   792  0219                     l1459:	
   793                           
   794                           ;concentration.c: 68:     joystick_init();
   795  0219  120A  118A  2436  120A  118A  	fcall	_joystick_init
   796  021E                     l1461:	
   797                           
   798                           ;concentration.c: 69:     gameboard_init(0x45);
   799  021E  3045               	movlw	69
   800  021F  120A  118A  2194  120A  118A  	fcall	_gameboard_init
   801  0224                     l1463:	
   802                           
   803                           ;concentration.c: 71:     recieved_char = 0x00;
   804  0224  01FC               	clrf	_recieved_char
   805  0225                     l1465:	
   806                           
   807                           ;concentration.c: 72:     TRISC = 0x80;
   808  0225  3080               	movlw	128
   809  0226  1683               	bsf	3,5	;RP0=1, select bank1
   810  0227  1303               	bcf	3,6	;RP1=0, select bank1
   811  0228  0087               	movwf	7	;volatile
   812  0229                     l1467:	
   813                           
   814                           ;concentration.c: 73:     TXEN = 1;
   815  0229  1698               	bsf	24,5	;volatile
   816  022A                     l1469:	
   817                           
   818                           ;concentration.c: 75:     CREN = 1;
   819  022A  1283               	bcf	3,5	;RP0=0, select bank0
   820  022B  1303               	bcf	3,6	;RP1=0, select bank0
   821  022C  1618               	bsf	24,4	;volatile
   822  022D                     l1471:	
   823                           
   824                           ;concentration.c: 77:     RCIE = 1;
   825  022D  1683               	bsf	3,5	;RP0=1, select bank1
   826  022E  1303               	bcf	3,6	;RP1=0, select bank1
   827  022F  168C               	bsf	12,5	;volatile
   828  0230                     l1473:	
   829                           
   830                           ;concentration.c: 78:     SYNC = 0;
   831  0230  1218               	bcf	24,4	;volatile
   832  0231                     l1475:	
   833                           
   834                           ;concentration.c: 79:     BRGH = 1;
   835  0231  1518               	bsf	24,2	;volatile
   836  0232                     l1477:	
   837                           
   838                           ;concentration.c: 80:     BRG16 = 0;
   839  0232  1683               	bsf	3,5	;RP0=1, select bank3
   840  0233  1703               	bsf	3,6	;RP1=1, select bank3
   841  0234  1187               	bcf	7,3	;volatile
   842  0235                     l1479:	
   843                           
   844                           ;concentration.c: 81:     SPBRG = 10;
   845  0235  300A               	movlw	10
   846  0236  1683               	bsf	3,5	;RP0=1, select bank1
   847  0237  1303               	bcf	3,6	;RP1=0, select bank1
   848  0238  0099               	movwf	25	;volatile
   849  0239                     l1481:	
   850                           
   851                           ;concentration.c: 83:     lcd_putch('X', gameboard);
   852  0239  1283               	bcf	3,5	;RP0=0, select bank0
   853  023A  1303               	bcf	3,6	;RP1=0, select bank0
   854  023B  0841               	movf	_gameboard,w
   855  023C  00AC               	movwf	lcd_putch@port
   856  023D  0842               	movf	_gameboard+1,w
   857  023E  00AD               	movwf	lcd_putch@port+1
   858  023F  3058               	movlw	88
   859  0240  120A  118A  24AC  120A  118A  	fcall	_lcd_putch
   860  0245                     l1483:	
   861                           
   862                           ;concentration.c: 84:     lcd_putch('X', scoreboard);
   863  0245  3005               	movlw	5
   864  0246  1283               	bcf	3,5	;RP0=0, select bank0
   865  0247  1303               	bcf	3,6	;RP1=0, select bank0
   866  0248  00AC               	movwf	lcd_putch@port
   867  0249  3000               	movlw	0
   868  024A  00AD               	movwf	lcd_putch@port+1
   869  024B  3058               	movlw	88
   870  024C  120A  118A  24AC  120A  118A  	fcall	_lcd_putch
   871  0251                     l1485:	
   872                           
   873                           ;concentration.c: 90:         update_gameboard_from_input();
   874  0251  120A  118A  203B  120A  118A  	fcall	_update_gameboard_from_input
   875  0256  2A51               	goto	l1485
   876  0257  120A  118A  2810   	ljmp	start
   877  025A                     __end_of_main:	
   878                           
   879                           	psect	text1
   880  003B                     __ptext1:	
   881 ;; *************** function _update_gameboard_from_input *****************
   882 ;; Defined at:
   883 ;;		line 113 in file "concentration.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0
   899 ;;      Temps:          0       2       0       0       0
   900 ;;      Totals:         0       2       0       0       0
   901 ;;Total ram usage:        2 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    8
   904 ;; This function calls:
   905 ;;		_toggle_cursor
   906 ;;		_update_cursor
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _update_gameboard_from_input
   914  003B                     _update_gameboard_from_input:	
   915  003B                     l1387:	
   916                           ;incstack = 0
   917 ;; hardware stack exceeded
   918                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
   919                           
   920                           
   921                           ;concentration.c: 115:     if(GO == 0) {
   922  003B  1283               	bcf	3,5	;RP0=0, select bank0
   923  003C  1303               	bcf	3,6	;RP1=0, select bank0
   924  003D  189F               	btfsc	31,1	;volatile
   925  003E  2840               	goto	u431
   926  003F  2841               	goto	u430
   927  0040                     u431:	
   928  0040  2842               	goto	l160
   929  0041                     u430:	
   930  0041                     l1389:	
   931                           
   932                           ;concentration.c: 116:         GO = 1;
   933  0041  149F               	bsf	31,1	;volatile
   934  0042                     l160:	
   935                           ;concentration.c: 117:     }
   936                           
   937                           
   938                           ;concentration.c: 119:     if(CCP1IF == 1) {
   939  0042  1D0C               	btfss	12,2	;volatile
   940  0043  2845               	goto	u441
   941  0044  2846               	goto	u440
   942  0045                     u441:	
   943  0045  2866               	goto	l1401
   944  0046                     u440:	
   945  0046                     l1391:	
   946                           
   947                           ;concentration.c: 120:         if(delay_loops == 0) {
   948  0046  083B               	movf	_delay_loops,w
   949  0047  1D03               	btfss	3,2
   950  0048  284A               	goto	u451
   951  0049  284B               	goto	u450
   952  004A                     u451:	
   953  004A  2855               	goto	l1397
   954  004B                     u450:	
   955  004B                     l1393:	
   956                           
   957                           ;concentration.c: 121:             delay_loops = 25;
   958  004B  3019               	movlw	25
   959  004C  00B3               	movwf	??_update_gameboard_from_input
   960  004D  0833               	movf	??_update_gameboard_from_input,w
   961  004E  00BB               	movwf	_delay_loops
   962  004F                     l1395:	
   963                           
   964                           ;concentration.c: 122:             toggle_cursor();
   965  004F  120A  118A  238B  120A  118A  	fcall	_toggle_cursor
   966                           
   967                           ;concentration.c: 123:         } else {
   968  0054  2857               	goto	l163
   969  0055                     l1397:	
   970                           
   971                           ;concentration.c: 124:             delay_loops--;
   972  0055  3001               	movlw	1
   973  0056  02BB               	subwf	_delay_loops,f
   974  0057                     l163:	
   975                           ;concentration.c: 125:         }
   976                           
   977                           
   978                           ;concentration.c: 126:         CCPR1 = TMR1+50000;
   979  0057  1283               	bcf	3,5	;RP0=0, select bank0
   980  0058  1303               	bcf	3,6	;RP1=0, select bank0
   981  0059  080E               	movf	14,w	;volatile
   982  005A  3E50               	addlw	80
   983  005B  00B3               	movwf	??_update_gameboard_from_input
   984  005C  080F               	movf	15,w	;volatile
   985  005D  1803               	skipnc
   986  005E  3E01               	addlw	1
   987  005F  3EC3               	addlw	195
   988  0060  00B4               	movwf	??_update_gameboard_from_input+1
   989  0061  0833               	movf	??_update_gameboard_from_input,w
   990  0062  0095               	movwf	21	;volatile
   991  0063  0834               	movf	??_update_gameboard_from_input+1,w
   992  0064  0096               	movwf	22	;volatile
   993  0065                     l1399:	
   994                           
   995                           ;concentration.c: 127:         CCP1IF = 0;
   996  0065  110C               	bcf	12,2	;volatile
   997  0066                     l1401:	
   998                           
   999                           ;concentration.c: 130:     if(joystick_x_pos > 900) {
  1000  0066  0838               	movf	_joystick_x_pos+1,w
  1001  0067  3A80               	xorlw	128
  1002  0068  00FF               	movwf	btemp+1
  1003  0069  3083               	movlw	131
  1004  006A  027F               	subwf	btemp+1,w
  1005  006B  1D03               	skipz
  1006  006C  286F               	goto	u465
  1007  006D  3085               	movlw	133
  1008  006E  0237               	subwf	_joystick_x_pos,w
  1009  006F                     u465:	
  1010  006F  1C03               	skipc
  1011  0070  2872               	goto	u461
  1012  0071  2873               	goto	u460
  1013  0072                     u461:	
  1014  0072  2883               	goto	l1409
  1015  0073                     u460:	
  1016  0073                     l1403:	
  1017                           
  1018                           ;concentration.c: 131:         if(cursor_movable) {
  1019  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0075  083A               	movf	_cursor_movable,w
  1022  0076  1903               	btfsc	3,2
  1023  0077  2879               	goto	u471
  1024  0078  287A               	goto	u470
  1025  0079                     u471:	
  1026  0079  292A               	goto	l182
  1027  007A                     u470:	
  1028  007A                     l1405:	
  1029                           
  1030                           ;concentration.c: 132:             cursor_pos--;
  1031  007A  3001               	movlw	1
  1032  007B  02BE               	subwf	_cursor_pos,f
  1033  007C                     l1407:	
  1034                           
  1035                           ;concentration.c: 133:             update_cursor(30);
  1036  007C  301E               	movlw	30
  1037  007D  120A  118A  212B  120A  118A  	fcall	_update_cursor
  1038  0082  292A               	goto	l182
  1039  0083                     l1409:	
  1040  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0085  0838               	movf	_joystick_x_pos+1,w
  1043  0086  3A80               	xorlw	128
  1044  0087  00FF               	movwf	btemp+1
  1045  0088  3080               	movlw	128
  1046  0089  027F               	subwf	btemp+1,w
  1047  008A  1D03               	skipz
  1048  008B  288E               	goto	u485
  1049  008C  3064               	movlw	100
  1050  008D  0237               	subwf	_joystick_x_pos,w
  1051  008E                     u485:	
  1052  008E  1803               	skipnc
  1053  008F  2891               	goto	u481
  1054  0090  2892               	goto	u480
  1055  0091                     u481:	
  1056  0091  28A4               	goto	l1417
  1057  0092                     u480:	
  1058  0092                     l1411:	
  1059                           
  1060                           ;concentration.c: 136:         if(cursor_movable) {
  1061  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0094  083A               	movf	_cursor_movable,w
  1064  0095  1903               	btfsc	3,2
  1065  0096  2898               	goto	u491
  1066  0097  2899               	goto	u490
  1067  0098                     u491:	
  1068  0098  292A               	goto	l182
  1069  0099                     u490:	
  1070  0099                     l1413:	
  1071                           
  1072                           ;concentration.c: 137:             cursor_pos++;
  1073  0099  3001               	movlw	1
  1074  009A  00B3               	movwf	??_update_gameboard_from_input
  1075  009B  0833               	movf	??_update_gameboard_from_input,w
  1076  009C  07BE               	addwf	_cursor_pos,f
  1077  009D                     l1415:	
  1078                           
  1079                           ;concentration.c: 138:             update_cursor(30);
  1080  009D  301E               	movlw	30
  1081  009E  120A  118A  212B  120A  118A  	fcall	_update_cursor
  1082  00A3  292A               	goto	l182
  1083  00A4                     l1417:	
  1084  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1085  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1086  00A6  0838               	movf	_joystick_x_pos+1,w
  1087  00A7  3A80               	xorlw	128
  1088  00A8  00FF               	movwf	btemp+1
  1089  00A9  3082               	movlw	130
  1090  00AA  027F               	subwf	btemp+1,w
  1091  00AB  1D03               	skipz
  1092  00AC  28AF               	goto	u505
  1093  00AD  3059               	movlw	89
  1094  00AE  0237               	subwf	_joystick_x_pos,w
  1095  00AF                     u505:	
  1096  00AF  1C03               	skipc
  1097  00B0  28B2               	goto	u501
  1098  00B1  28B3               	goto	u500
  1099  00B2                     u501:	
  1100  00B2  28C3               	goto	l1425
  1101  00B3                     u500:	
  1102  00B3                     l1419:	
  1103                           
  1104                           ;concentration.c: 141:         if(cursor_movable) {
  1105  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00B5  083A               	movf	_cursor_movable,w
  1108  00B6  1903               	btfsc	3,2
  1109  00B7  28B9               	goto	u511
  1110  00B8  28BA               	goto	u510
  1111  00B9                     u511:	
  1112  00B9  292A               	goto	l182
  1113  00BA                     u510:	
  1114  00BA                     l1421:	
  1115                           
  1116                           ;concentration.c: 142:             cursor_pos--;
  1117  00BA  3001               	movlw	1
  1118  00BB  02BE               	subwf	_cursor_pos,f
  1119  00BC                     l1423:	
  1120                           
  1121                           ;concentration.c: 143:             update_cursor(60);
  1122  00BC  303C               	movlw	60
  1123  00BD  120A  118A  212B  120A  118A  	fcall	_update_cursor
  1124  00C2  292A               	goto	l182
  1125  00C3                     l1425:	
  1126  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1127  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1128  00C5  0838               	movf	_joystick_x_pos+1,w
  1129  00C6  3A80               	xorlw	128
  1130  00C7  00FF               	movwf	btemp+1
  1131  00C8  3081               	movlw	129
  1132  00C9  027F               	subwf	btemp+1,w
  1133  00CA  1D03               	skipz
  1134  00CB  28CE               	goto	u525
  1135  00CC  3090               	movlw	144
  1136  00CD  0237               	subwf	_joystick_x_pos,w
  1137  00CE                     u525:	
  1138  00CE  1803               	skipnc
  1139  00CF  28D1               	goto	u521
  1140  00D0  28D2               	goto	u520
  1141  00D1                     u521:	
  1142  00D1  28E4               	goto	l1433
  1143  00D2                     u520:	
  1144  00D2                     l1427:	
  1145                           
  1146                           ;concentration.c: 146:         if(cursor_movable) {
  1147  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1149  00D4  083A               	movf	_cursor_movable,w
  1150  00D5  1903               	btfsc	3,2
  1151  00D6  28D8               	goto	u531
  1152  00D7  28D9               	goto	u530
  1153  00D8                     u531:	
  1154  00D8  292A               	goto	l182
  1155  00D9                     u530:	
  1156  00D9                     l1429:	
  1157                           
  1158                           ;concentration.c: 147:             cursor_pos++;
  1159  00D9  3001               	movlw	1
  1160  00DA  00B3               	movwf	??_update_gameboard_from_input
  1161  00DB  0833               	movf	??_update_gameboard_from_input,w
  1162  00DC  07BE               	addwf	_cursor_pos,f
  1163  00DD                     l1431:	
  1164                           
  1165                           ;concentration.c: 148:             update_cursor(60);
  1166  00DD  303C               	movlw	60
  1167  00DE  120A  118A  212B  120A  118A  	fcall	_update_cursor
  1168  00E3  292A               	goto	l182
  1169  00E4                     l1433:	
  1170  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1171  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1172  00E6  0836               	movf	_joystick_y_pos+1,w
  1173  00E7  3A80               	xorlw	128
  1174  00E8  00FF               	movwf	btemp+1
  1175  00E9  3082               	movlw	130
  1176  00EA  027F               	subwf	btemp+1,w
  1177  00EB  1D03               	skipz
  1178  00EC  28EF               	goto	u545
  1179  00ED  30BD               	movlw	189
  1180  00EE  0235               	subwf	_joystick_y_pos,w
  1181  00EF                     u545:	
  1182  00EF  1C03               	skipc
  1183  00F0  28F2               	goto	u541
  1184  00F1  28F3               	goto	u540
  1185  00F2                     u541:	
  1186  00F2  2905               	goto	l1441
  1187  00F3                     u540:	
  1188  00F3                     l1435:	
  1189                           
  1190                           ;concentration.c: 151:         if(cursor_movable) {
  1191  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1192  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1193  00F5  083A               	movf	_cursor_movable,w
  1194  00F6  1903               	btfsc	3,2
  1195  00F7  28F9               	goto	u551
  1196  00F8  28FA               	goto	u550
  1197  00F9                     u551:	
  1198  00F9  292A               	goto	l182
  1199  00FA                     u550:	
  1200  00FA                     l1437:	
  1201                           
  1202                           ;concentration.c: 152:             cursor_pos ^= 0x40;
  1203  00FA  3040               	movlw	64
  1204  00FB  00B3               	movwf	??_update_gameboard_from_input
  1205  00FC  0833               	movf	??_update_gameboard_from_input,w
  1206  00FD  06BE               	xorwf	_cursor_pos,f
  1207  00FE                     l1439:	
  1208                           
  1209                           ;concentration.c: 153:             update_cursor(62);
  1210  00FE  303E               	movlw	62
  1211  00FF  120A  118A  212B  120A  118A  	fcall	_update_cursor
  1212  0104  292A               	goto	l182
  1213  0105                     l1441:	
  1214  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0107  0836               	movf	_joystick_y_pos+1,w
  1217  0108  3A80               	xorlw	128
  1218  0109  00FF               	movwf	btemp+1
  1219  010A  3081               	movlw	129
  1220  010B  027F               	subwf	btemp+1,w
  1221  010C  1D03               	skipz
  1222  010D  2910               	goto	u565
  1223  010E  302C               	movlw	44
  1224  010F  0235               	subwf	_joystick_y_pos,w
  1225  0110                     u565:	
  1226  0110  1803               	skipnc
  1227  0111  2913               	goto	u561
  1228  0112  2914               	goto	u560
  1229  0113                     u561:	
  1230  0113  2926               	goto	l179
  1231  0114                     u560:	
  1232  0114                     l1443:	
  1233                           
  1234                           ;concentration.c: 156:         if(cursor_movable) {
  1235  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0116  083A               	movf	_cursor_movable,w
  1238  0117  1903               	btfsc	3,2
  1239  0118  291A               	goto	u571
  1240  0119  291B               	goto	u570
  1241  011A                     u571:	
  1242  011A  292A               	goto	l182
  1243  011B                     u570:	
  1244  011B                     l1445:	
  1245                           
  1246                           ;concentration.c: 157:             cursor_pos ^= 0x40;
  1247  011B  3040               	movlw	64
  1248  011C  00B3               	movwf	??_update_gameboard_from_input
  1249  011D  0833               	movf	??_update_gameboard_from_input,w
  1250  011E  06BE               	xorwf	_cursor_pos,f
  1251  011F                     l1447:	
  1252                           
  1253                           ;concentration.c: 158:             update_cursor(62);
  1254  011F  303E               	movlw	62
  1255  0120  120A  118A  212B  120A  118A  	fcall	_update_cursor
  1256  0125  292A               	goto	l182
  1257  0126                     l179:	
  1258                           
  1259                           ;concentration.c: 161:         cursor_movable = 1;
  1260  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0128  01BA               	clrf	_cursor_movable
  1263  0129  0ABA               	incf	_cursor_movable,f
  1264  012A                     l182:	
  1265  012A  0008               	return
  1266  012B                     __end_of_update_gameboard_from_input:	
  1267                           
  1268                           	psect	text2
  1269  012B                     __ptext2:	
  1270 ;; *************** function _update_cursor *****************
  1271 ;; Defined at:
  1272 ;;		line 165 in file "concentration.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  move_delay_c    1    wreg     unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  move_delay_c    1   18[BANK0 ] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         0       1       0       0       0
  1288 ;;      Temps:          0       2       0       0       0
  1289 ;;      Totals:         0       3       0       0       0
  1290 ;;Total ram usage:        3 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    7
  1293 ;; This function calls:
  1294 ;;		_get_current_char
  1295 ;;		_lcd_goto
  1296 ;;		_lcd_putch
  1297 ;; This function is called by:
  1298 ;;		_update_gameboard_from_input
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _update_cursor
  1304  012B                     _update_cursor:	
  1305                           
  1306                           ;incstack = 0
  1307 ;; hardware stack exceeded
  1308                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1309                           ;update_cursor@move_delay_count stored from wreg
  1310  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1311  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1312  012D  00B2               	movwf	update_cursor@move_delay_count
  1313  012E                     l1277:	
  1314                           
  1315                           ;concentration.c: 166:     cursor_movable = 0;
  1316  012E  01BA               	clrf	_cursor_movable
  1317  012F                     l1279:	
  1318                           
  1319                           ;concentration.c: 167:     cursor_move_delay_count = move_delay_count;
  1320  012F  0832               	movf	update_cursor@move_delay_count,w
  1321  0130  00B0               	movwf	??_update_cursor
  1322  0131  0830               	movf	??_update_cursor,w
  1323  0132  00FD               	movwf	_cursor_move_delay_count
  1324                           
  1325                           ;concentration.c: 168:     switch(cursor_pos) {
  1326  0133  2945               	goto	l1291
  1327  0134                     l1281:	
  1328                           
  1329                           ;concentration.c: 170:             cursor_pos = 0x00;
  1330  0134  01BE               	clrf	_cursor_pos
  1331                           
  1332                           ;concentration.c: 171:             break;
  1333  0135  295B               	goto	l1293
  1334  0136                     l1283:	
  1335                           
  1336                           ;concentration.c: 173:             cursor_pos = 0x40;
  1337  0136  3040               	movlw	64
  1338  0137  00B0               	movwf	??_update_cursor
  1339  0138  0830               	movf	??_update_cursor,w
  1340  0139  00BE               	movwf	_cursor_pos
  1341                           
  1342                           ;concentration.c: 174:             break;
  1343  013A  295B               	goto	l1293
  1344  013B                     l1285:	
  1345                           
  1346                           ;concentration.c: 176:             cursor_pos = 0x0F;
  1347  013B  300F               	movlw	15
  1348  013C  00B0               	movwf	??_update_cursor
  1349  013D  0830               	movf	??_update_cursor,w
  1350  013E  00BE               	movwf	_cursor_pos
  1351                           
  1352                           ;concentration.c: 177:             break;
  1353  013F  295B               	goto	l1293
  1354  0140                     l1287:	
  1355                           
  1356                           ;concentration.c: 179:             cursor_pos = 0x4F;
  1357  0140  304F               	movlw	79
  1358  0141  00B0               	movwf	??_update_cursor
  1359  0142  0830               	movf	??_update_cursor,w
  1360  0143  00BE               	movwf	_cursor_pos
  1361                           
  1362                           ;concentration.c: 180:             break;
  1363  0144  295B               	goto	l1293
  1364  0145                     l1291:	
  1365  0145  083E               	movf	_cursor_pos,w
  1366  0146  00B0               	movwf	??_update_cursor
  1367  0147  01B1               	clrf	??_update_cursor+1
  1368                           
  1369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1370                           ; Switch size 1, requested type "simple"
  1371                           ; Number of cases is 1, Range of values is 0 to 0
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte            4     3 (average)
  1375                           ; direct_byte           11     8 (fixed)
  1376                           ; jumptable            260     6 (fixed)
  1377                           ;	Chosen strategy is simple_byte
  1378  0148  0831               	movf	??_update_cursor+1,w
  1379  0149  3A00               	xorlw	0	; case 0
  1380  014A  1903               	skipnz
  1381  014B  294D               	goto	l1531
  1382  014C  295B               	goto	l1293
  1383  014D                     l1531:	
  1384                           
  1385                           ; Switch size 1, requested type "simple"
  1386                           ; Number of cases is 4, Range of values is 16 to 255
  1387                           ; switch strategies available:
  1388                           ; Name         Instructions Cycles
  1389                           ; simple_byte           13     7 (average)
  1390                           ; jumptable            263     9 (fixed)
  1391                           ;	Chosen strategy is simple_byte
  1392  014D  0830               	movf	??_update_cursor,w
  1393  014E  3A10               	xorlw	16	; case 16
  1394  014F  1903               	skipnz
  1395  0150  2934               	goto	l1281
  1396  0151  3A2F               	xorlw	47	; case 63
  1397  0152  1903               	skipnz
  1398  0153  2940               	goto	l1287
  1399  0154  3A6F               	xorlw	111	; case 80
  1400  0155  1903               	skipnz
  1401  0156  2936               	goto	l1283
  1402  0157  3AAF               	xorlw	175	; case 255
  1403  0158  1903               	skipnz
  1404  0159  293B               	goto	l1285
  1405  015A  295B               	goto	l1293
  1406  015B                     l1293:	
  1407                           
  1408                           ;concentration.c: 182:     lcd_putch(current_char, gameboard);
  1409  015B  0841               	movf	_gameboard,w
  1410  015C  00AC               	movwf	lcd_putch@port
  1411  015D  0842               	movf	_gameboard+1,w
  1412  015E  00AD               	movwf	lcd_putch@port+1
  1413  015F  083D               	movf	_current_char,w
  1414  0160  120A  118A  24AC  120A  118A  	fcall	_lcd_putch
  1415                           
  1416                           ;concentration.c: 183:     lcd_goto(cursor_pos, gameboard);
  1417  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0167  0841               	movf	_gameboard,w
  1420  0168  00AC               	movwf	lcd_goto@port
  1421  0169  0842               	movf	_gameboard+1,w
  1422  016A  00AD               	movwf	lcd_goto@port+1
  1423  016B  083E               	movf	_cursor_pos,w
  1424  016C  120A  118A  245B  120A  118A  	fcall	_lcd_goto
  1425                           
  1426                           ;concentration.c: 184:     get_current_char();
  1427  0171  120A  118A  23E4  120A  118A  	fcall	_get_current_char
  1428  0176                     l1295:	
  1429                           
  1430                           ;concentration.c: 185:     if(cursor_solid == 1) {
  1431  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0178  033C               	decf	_cursor_solid,w
  1434  0179  1D03               	btfss	3,2
  1435  017A  297C               	goto	u411
  1436  017B  297D               	goto	u410
  1437  017C                     u411:	
  1438  017C  2993               	goto	l192
  1439  017D                     u410:	
  1440  017D                     l1297:	
  1441                           
  1442                           ;concentration.c: 186:         lcd_putch(0xFF, gameboard);
  1443  017D  0841               	movf	_gameboard,w
  1444  017E  00AC               	movwf	lcd_putch@port
  1445  017F  0842               	movf	_gameboard+1,w
  1446  0180  00AD               	movwf	lcd_putch@port+1
  1447  0181  30FF               	movlw	255
  1448  0182  120A  118A  24AC  120A  118A  	fcall	_lcd_putch
  1449                           
  1450                           ;concentration.c: 187:         lcd_goto(cursor_pos, gameboard);
  1451  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0189  0841               	movf	_gameboard,w
  1454  018A  00AC               	movwf	lcd_goto@port
  1455  018B  0842               	movf	_gameboard+1,w
  1456  018C  00AD               	movwf	lcd_goto@port+1
  1457  018D  083E               	movf	_cursor_pos,w
  1458  018E  120A  118A  245B  120A  118A  	fcall	_lcd_goto
  1459  0193                     l192:	
  1460  0193  0008               	return
  1461  0194                     __end_of_update_cursor:	
  1462                           
  1463                           	psect	text3
  1464  038B                     __ptext3:	
  1465 ;; *************** function _toggle_cursor *****************
  1466 ;; Defined at:
  1467 ;;		line 191 in file "concentration.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0
  1484 ;;      Totals:         0       0       0       0       0
  1485 ;;Total ram usage:        0 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    7
  1488 ;; This function calls:
  1489 ;;		_lcd_goto
  1490 ;;		_lcd_putch
  1491 ;; This function is called by:
  1492 ;;		_update_gameboard_from_input
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _toggle_cursor
  1498  038B                     _toggle_cursor:	
  1499  038B                     l1265:	
  1500                           ;incstack = 0
  1501 ;; hardware stack exceeded
  1502                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1503                           
  1504                           
  1505                           ;concentration.c: 192:     if(cursor_solid == 0) {
  1506  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1507  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1508  038D  083C               	movf	_cursor_solid,w
  1509  038E  1D03               	btfss	3,2
  1510  038F  2B91               	goto	u401
  1511  0390  2B92               	goto	u400
  1512  0391                     u401:	
  1513  0391  2BA1               	goto	l1271
  1514  0392                     u400:	
  1515  0392                     l1267:	
  1516                           
  1517                           ;concentration.c: 193:         lcd_putch(0xFF, gameboard);
  1518  0392  0841               	movf	_gameboard,w
  1519  0393  00AC               	movwf	lcd_putch@port
  1520  0394  0842               	movf	_gameboard+1,w
  1521  0395  00AD               	movwf	lcd_putch@port+1
  1522  0396  30FF               	movlw	255
  1523  0397  120A  118A  24AC  120A  118A  	fcall	_lcd_putch
  1524  039C                     l1269:	
  1525                           
  1526                           ;concentration.c: 194:         cursor_solid = 1;
  1527  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1528  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1529  039E  01BC               	clrf	_cursor_solid
  1530  039F  0ABC               	incf	_cursor_solid,f
  1531                           
  1532                           ;concentration.c: 195:     } else {
  1533  03A0  2BAE               	goto	l1275
  1534  03A1                     l1271:	
  1535                           
  1536                           ;concentration.c: 196:         lcd_putch(current_char, gameboard);
  1537  03A1  0841               	movf	_gameboard,w
  1538  03A2  00AC               	movwf	lcd_putch@port
  1539  03A3  0842               	movf	_gameboard+1,w
  1540  03A4  00AD               	movwf	lcd_putch@port+1
  1541  03A5  083D               	movf	_current_char,w
  1542  03A6  120A  118A  24AC  120A  118A  	fcall	_lcd_putch
  1543  03AB                     l1273:	
  1544                           
  1545                           ;concentration.c: 197:         cursor_solid = 0;
  1546  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1547  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1548  03AD  01BC               	clrf	_cursor_solid
  1549  03AE                     l1275:	
  1550                           
  1551                           ;concentration.c: 199:     lcd_goto(cursor_pos, gameboard);
  1552  03AE  0841               	movf	_gameboard,w
  1553  03AF  00AC               	movwf	lcd_goto@port
  1554  03B0  0842               	movf	_gameboard+1,w
  1555  03B1  00AD               	movwf	lcd_goto@port+1
  1556  03B2  083E               	movf	_cursor_pos,w
  1557  03B3  120A  118A  245B  120A  118A  	fcall	_lcd_goto
  1558  03B8                     l197:	
  1559  03B8  0008               	return
  1560  03B9                     __end_of_toggle_cursor:	
  1561                           
  1562                           	psect	text4
  1563  04AC                     __ptext4:	
  1564 ;; *************** function _lcd_putch *****************
  1565 ;; Defined at:
  1566 ;;		line 136 in file "lcd4bits.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  character       1    wreg     unsigned char 
  1569 ;;  port            2   12[BANK0 ] PTR unsigned char 
  1570 ;;		 -> PORTA(1), PORTD(1), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  character       1   15[BANK0 ] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       2       0       0       0
  1583 ;;      Locals:         0       1       0       0       0
  1584 ;;      Temps:          0       1       0       0       0
  1585 ;;      Totals:         0       4       0       0       0
  1586 ;;Total ram usage:        4 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    6
  1589 ;; This function calls:
  1590 ;;		_lcd_write
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;;		_update_cursor
  1594 ;;		_toggle_cursor
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _lcd_putch
  1600  04AC                     _lcd_putch:	
  1601                           
  1602                           ;incstack = 0
  1603 ;; hardware stack exceeded
  1604                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1605                           ;lcd_putch@character stored from wreg
  1606  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1607  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1608  04AE  00AF               	movwf	lcd_putch@character
  1609  04AF                     l1229:	
  1610                           
  1611                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  1612  04AF  082F               	movf	lcd_putch@character,w
  1613  04B0  00AE               	movwf	??_lcd_putch
  1614  04B1  082E               	movf	??_lcd_putch,w
  1615  04B2  00A6               	movwf	lcd_write@CmdChar
  1616  04B3  082C               	movf	lcd_putch@port,w
  1617  04B4  00A7               	movwf	lcd_write@port
  1618  04B5  082D               	movf	lcd_putch@port+1,w
  1619  04B6  00A8               	movwf	lcd_write@port+1
  1620  04B7  3010               	movlw	16
  1621  04B8  120A  118A  22AC  120A  118A  	fcall	_lcd_write
  1622  04BD                     l257:	
  1623  04BD  0008               	return
  1624  04BE                     __end_of_lcd_putch:	
  1625                           
  1626                           	psect	text5
  1627  025A                     __ptext5:	
  1628 ;; *************** function _lcd_init *****************
  1629 ;; Defined at:
  1630 ;;		line 155 in file "lcd4bits.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  port            2   14[BANK0 ] PTR unsigned char 
  1633 ;;		 -> PORTA(1), PORTD(1), 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       2       0       0       0
  1646 ;;      Locals:         0       0       0       0       0
  1647 ;;      Temps:          0       1       0       0       0
  1648 ;;      Totals:         0       3       0       0       0
  1649 ;;Total ram usage:        3 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    7
  1652 ;; This function calls:
  1653 ;;		_DelayMs
  1654 ;;		_lcd_clear
  1655 ;;		_lcd_write
  1656 ;;		_tmr0_init
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _lcd_init
  1664  025A                     _lcd_init:	
  1665  025A                     l1317:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1668                           
  1669                           
  1670                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  1671  025A  120A  118A  24F4  120A  118A  	fcall	_tmr0_init
  1672  025F                     l1319:	
  1673                           
  1674                           ;lcd4bits.c: 158:     *port = 0;
  1675  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0261  082E               	movf	lcd_init@port,w
  1678  0262  0084               	movwf	4
  1679  0263  1783               	bsf	3,7
  1680  0264  1C2F               	btfss	lcd_init@port+1,0
  1681  0265  1383               	bcf	3,7
  1682  0266  0180               	clrf	0
  1683  0267                     l1321:	
  1684                           
  1685                           ;lcd4bits.c: 159:     DelayMs(15);
  1686  0267  300F               	movlw	15
  1687  0268  00A4               	movwf	DelayMs@millis
  1688  0269  3000               	movlw	0
  1689  026A  00A5               	movwf	DelayMs@millis+1
  1690  026B  120A  118A  2493  120A  118A  	fcall	_DelayMs
  1691  0270                     l1323:	
  1692                           
  1693                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  1694  0270  3028               	movlw	40
  1695  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0273  00B0               	movwf	??_lcd_init
  1698  0274  0830               	movf	??_lcd_init,w
  1699  0275  00A6               	movwf	lcd_write@CmdChar
  1700  0276  082E               	movf	lcd_init@port,w
  1701  0277  00A7               	movwf	lcd_write@port
  1702  0278  082F               	movf	lcd_init@port+1,w
  1703  0279  00A8               	movwf	lcd_write@port+1
  1704  027A  3000               	movlw	0
  1705  027B  120A  118A  22AC  120A  118A  	fcall	_lcd_write
  1706  0280                     l1325:	
  1707                           
  1708                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  1709  0280  300C               	movlw	12
  1710  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0283  00B0               	movwf	??_lcd_init
  1713  0284  0830               	movf	??_lcd_init,w
  1714  0285  00A6               	movwf	lcd_write@CmdChar
  1715  0286  082E               	movf	lcd_init@port,w
  1716  0287  00A7               	movwf	lcd_write@port
  1717  0288  082F               	movf	lcd_init@port+1,w
  1718  0289  00A8               	movwf	lcd_write@port+1
  1719  028A  3000               	movlw	0
  1720  028B  120A  118A  22AC  120A  118A  	fcall	_lcd_write
  1721  0290                     l1327:	
  1722                           
  1723                           ;lcd4bits.c: 162:     lcd_clear(port);
  1724  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0292  082E               	movf	lcd_init@port,w
  1727  0293  00AC               	movwf	lcd_clear@port
  1728  0294  082F               	movf	lcd_init@port+1,w
  1729  0295  00AD               	movwf	lcd_clear@port+1
  1730  0296  120A  118A  2479  120A  118A  	fcall	_lcd_clear
  1731  029B                     l1329:	
  1732                           
  1733                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  1734  029B  3006               	movlw	6
  1735  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1736  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1737  029E  00B0               	movwf	??_lcd_init
  1738  029F  0830               	movf	??_lcd_init,w
  1739  02A0  00A6               	movwf	lcd_write@CmdChar
  1740  02A1  082E               	movf	lcd_init@port,w
  1741  02A2  00A7               	movwf	lcd_write@port
  1742  02A3  082F               	movf	lcd_init@port+1,w
  1743  02A4  00A8               	movwf	lcd_write@port+1
  1744  02A5  3000               	movlw	0
  1745  02A6  120A  118A  22AC  120A  118A  	fcall	_lcd_write
  1746  02AB                     l263:	
  1747  02AB  0008               	return
  1748  02AC                     __end_of_lcd_init:	
  1749                           
  1750                           	psect	text6
  1751  04F4                     __ptext6:	
  1752 ;; *************** function _tmr0_init *****************
  1753 ;; Defined at:
  1754 ;;		line 72 in file "lcd4bits.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       1       0       0       0
  1771 ;;      Totals:         0       1       0       0       0
  1772 ;;Total ram usage:        1 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    4
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_lcd_init
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _tmr0_init
  1784  04F4                     _tmr0_init:	
  1785  04F4                     l1303:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  1788                           
  1789                           
  1790                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  1791  04F4  30C0               	movlw	192
  1792  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1793  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1794  04F7  00A4               	movwf	??_tmr0_init
  1795  04F8  0824               	movf	??_tmr0_init,w
  1796  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  1797  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  1798  04FB  0581               	andwf	1,f	;volatile
  1799  04FC                     l1305:	
  1800                           
  1801                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  1802  04FC  1501               	bsf	1,2	;volatile
  1803  04FD                     l228:	
  1804  04FD  0008               	return
  1805  04FE                     __end_of_tmr0_init:	
  1806                           
  1807                           	psect	text7
  1808  0436                     __ptext7:	
  1809 ;; *************** function _joystick_init *****************
  1810 ;; Defined at:
  1811 ;;		line 224 in file "concentration.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0
  1828 ;;      Totals:         0       0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    4
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _joystick_init
  1841  0436                     _joystick_init:	
  1842  0436                     l1331:	
  1843                           ;incstack = 0
  1844                           ; Regs used in _joystick_init: [wreg+status,2]
  1845                           
  1846                           
  1847                           ;concentration.c: 225:     joystick_x_pos = 512;
  1848  0436  3000               	movlw	0
  1849  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0439  00B7               	movwf	_joystick_x_pos
  1852  043A  3002               	movlw	2
  1853  043B  00B8               	movwf	_joystick_x_pos+1
  1854                           
  1855                           ;concentration.c: 226:     joystick_y_pos = 512;
  1856  043C  3000               	movlw	0
  1857  043D  00B5               	movwf	_joystick_y_pos
  1858  043E  3002               	movlw	2
  1859  043F  00B6               	movwf	_joystick_y_pos+1
  1860  0440                     l1333:	
  1861                           
  1862                           ;concentration.c: 227:     PORTB = 0;
  1863  0440  0186               	clrf	6	;volatile
  1864  0441                     l1335:	
  1865                           
  1866                           ;concentration.c: 228:     nRBPU = 0;
  1867  0441  1683               	bsf	3,5	;RP0=1, select bank1
  1868  0442  1303               	bcf	3,6	;RP1=0, select bank1
  1869  0443  1381               	bcf	1,7	;volatile
  1870  0444                     l1337:	
  1871                           
  1872                           ;concentration.c: 229:     WPUB = 0x20;
  1873  0444  3020               	movlw	32
  1874  0445  0095               	movwf	21	;volatile
  1875  0446                     l1339:	
  1876                           
  1877                           ;concentration.c: 230:     TRISB = 0x38;
  1878  0446  3038               	movlw	56
  1879  0447  0086               	movwf	6	;volatile
  1880  0448                     l1341:	
  1881                           
  1882                           ;concentration.c: 231:     ANSELH = 0x0A;
  1883  0448  300A               	movlw	10
  1884  0449  1683               	bsf	3,5	;RP0=1, select bank3
  1885  044A  1703               	bsf	3,6	;RP1=1, select bank3
  1886  044B  0089               	movwf	9	;volatile
  1887  044C                     l1343:	
  1888                           
  1889                           ;concentration.c: 232:     GIE = 1;
  1890  044C  178B               	bsf	11,7	;volatile
  1891  044D                     l1345:	
  1892                           
  1893                           ;concentration.c: 233:     PEIE = 1;
  1894  044D  170B               	bsf	11,6	;volatile
  1895  044E                     l1347:	
  1896                           
  1897                           ;concentration.c: 234:     ADIF = 0;
  1898  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1899  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0450  130C               	bcf	12,6	;volatile
  1901  0451                     l1349:	
  1902                           
  1903                           ;concentration.c: 235:     ADIE = 1;
  1904  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0453  170C               	bsf	12,6	;volatile
  1907  0454                     l1351:	
  1908                           
  1909                           ;concentration.c: 236:     ADCON1 = 0x80;
  1910  0454  3080               	movlw	128
  1911  0455  009F               	movwf	31	;volatile
  1912  0456                     l1353:	
  1913                           
  1914                           ;concentration.c: 237:     ADCON0 = 0xA5;
  1915  0456  30A5               	movlw	165
  1916  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0459  009F               	movwf	31	;volatile
  1919  045A                     l208:	
  1920  045A  0008               	return
  1921  045B                     __end_of_joystick_init:	
  1922                           
  1923                           	psect	text8
  1924  0194                     __ptext8:	
  1925 ;; *************** function _gameboard_init *****************
  1926 ;; Defined at:
  1927 ;;		line 94 in file "concentration.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  cursor_init_    1    wreg     unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  cursor_init_    1   17[BANK0 ] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       0       0       0       0
  1942 ;;      Locals:         0       1       0       0       0
  1943 ;;      Temps:          0       1       0       0       0
  1944 ;;      Totals:         0       2       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    7
  1948 ;; This function calls:
  1949 ;;		_get_current_char
  1950 ;;		_lcd_clear
  1951 ;;		_lcd_goto
  1952 ;;		_lcd_puts
  1953 ;;		_time_init
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _gameboard_init
  1961  0194                     _gameboard_init:	
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1965                           ;gameboard_init@cursor_init_pos stored from wreg
  1966  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0196  00B1               	movwf	gameboard_init@cursor_init_pos
  1969  0197                     l1355:	
  1970                           
  1971                           ;concentration.c: 95:     time_init();
  1972  0197  120A  118A  24DC  120A  118A  	fcall	_time_init
  1973  019C                     l1357:	
  1974                           
  1975                           ;concentration.c: 96:     lcd_clear(gameboard);
  1976  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1977  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1978  019E  0841               	movf	_gameboard,w
  1979  019F  00AC               	movwf	lcd_clear@port
  1980  01A0  0842               	movf	_gameboard+1,w
  1981  01A1  00AD               	movwf	lcd_clear@port+1
  1982  01A2  120A  118A  2479  120A  118A  	fcall	_lcd_clear
  1983  01A7                     l1359:	
  1984                           
  1985                           ;concentration.c: 97:     lcd_puts(board_r1, gameboard);
  1986  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1987  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1988  01A9  0841               	movf	_gameboard,w
  1989  01AA  00AC               	movwf	lcd_puts@port
  1990  01AB  0842               	movf	_gameboard+1,w
  1991  01AC  00AD               	movwf	lcd_puts@port+1
  1992  01AD  3012               	movlw	(low ((_board_r1-__stringbase)| (0+32768)))& (0+255)
  1993  01AE  120A  118A  23B9  120A  118A  	fcall	_lcd_puts
  1994  01B3                     l1361:	
  1995                           
  1996                           ;concentration.c: 98:     lcd_goto(0x40, gameboard);
  1997  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1998  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1999  01B5  0841               	movf	_gameboard,w
  2000  01B6  00AC               	movwf	lcd_goto@port
  2001  01B7  0842               	movf	_gameboard+1,w
  2002  01B8  00AD               	movwf	lcd_goto@port+1
  2003  01B9  3040               	movlw	64
  2004  01BA  120A  118A  245B  120A  118A  	fcall	_lcd_goto
  2005  01BF                     l1363:	
  2006                           
  2007                           ;concentration.c: 99:     lcd_puts(board_r2, gameboard);
  2008  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2009  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2010  01C1  0841               	movf	_gameboard,w
  2011  01C2  00AC               	movwf	lcd_puts@port
  2012  01C3  0842               	movf	_gameboard+1,w
  2013  01C4  00AD               	movwf	lcd_puts@port+1
  2014  01C5  3001               	movlw	(low ((_board_r2-__stringbase)| (0+32768)))& (0+255)
  2015  01C6  120A  118A  23B9  120A  118A  	fcall	_lcd_puts
  2016  01CB                     l1365:	
  2017                           
  2018                           ;concentration.c: 100:     cursor_pos = cursor_init_pos;
  2019  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2020  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2021  01CD  0831               	movf	gameboard_init@cursor_init_pos,w
  2022  01CE  00B0               	movwf	??_gameboard_init
  2023  01CF  0830               	movf	??_gameboard_init,w
  2024  01D0  00BE               	movwf	_cursor_pos
  2025  01D1                     l1367:	
  2026                           
  2027                           ;concentration.c: 101:     cursor_solid = 0;
  2028  01D1  01BC               	clrf	_cursor_solid
  2029  01D2                     l1369:	
  2030                           
  2031                           ;concentration.c: 102:     get_current_char();
  2032  01D2  120A  118A  23E4  120A  118A  	fcall	_get_current_char
  2033  01D7                     l1371:	
  2034                           
  2035                           ;concentration.c: 103:     delay_loops = 0;
  2036  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2037  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2038  01D9  01BB               	clrf	_delay_loops
  2039  01DA                     l1373:	
  2040                           
  2041                           ;concentration.c: 104:     cursor_movable = 1;
  2042  01DA  01BA               	clrf	_cursor_movable
  2043  01DB  0ABA               	incf	_cursor_movable,f
  2044  01DC                     l1375:	
  2045                           
  2046                           ;concentration.c: 105:     lcd_goto(cursor_pos, gameboard);
  2047  01DC  0841               	movf	_gameboard,w
  2048  01DD  00AC               	movwf	lcd_goto@port
  2049  01DE  0842               	movf	_gameboard+1,w
  2050  01DF  00AD               	movwf	lcd_goto@port+1
  2051  01E0  083E               	movf	_cursor_pos,w
  2052  01E1  120A  118A  245B  120A  118A  	fcall	_lcd_goto
  2053  01E6                     l1377:	
  2054                           
  2055                           ;concentration.c: 106:     cursor_move_delay_count = 255;
  2056  01E6  30FF               	movlw	255
  2057  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2058  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2059  01E9  00B0               	movwf	??_gameboard_init
  2060  01EA  0830               	movf	??_gameboard_init,w
  2061  01EB  00FD               	movwf	_cursor_move_delay_count
  2062  01EC                     l1379:	
  2063                           
  2064                           ;concentration.c: 107:     PR2 = 250;
  2065  01EC  30FA               	movlw	250
  2066  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2067  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2068  01EF  0092               	movwf	18	;volatile
  2069  01F0                     l1381:	
  2070                           
  2071                           ;concentration.c: 108:     TMR2IF = 0;
  2072  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2073  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2074  01F2  108C               	bcf	12,1	;volatile
  2075  01F3                     l1383:	
  2076                           
  2077                           ;concentration.c: 109:     TMR2IE = 1;
  2078  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2079  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2080  01F5  148C               	bsf	12,1	;volatile
  2081  01F6                     l1385:	
  2082                           
  2083                           ;concentration.c: 110:     T2CON = 0x56;
  2084  01F6  3056               	movlw	86
  2085  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2086  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2087  01F9  0092               	movwf	18	;volatile
  2088  01FA                     l157:	
  2089  01FA  0008               	return
  2090  01FB                     __end_of_gameboard_init:	
  2091                           
  2092                           	psect	text9
  2093  04DC                     __ptext9:	
  2094 ;; *************** function _time_init *****************
  2095 ;; Defined at:
  2096 ;;		line 212 in file "concentration.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		None
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    4
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_gameboard_init
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _time_init
  2126  04DC                     _time_init:	
  2127  04DC                     l1251:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _time_init: []
  2130                           
  2131                           
  2132                           ;concentration.c: 213:     CCP1M3 = 1;
  2133  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2134  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2135  04DE  1597               	bsf	23,3	;volatile
  2136                           
  2137                           ;concentration.c: 214:     CCP1M2 = 0;
  2138  04DF  1117               	bcf	23,2	;volatile
  2139                           
  2140                           ;concentration.c: 215:     CCP1M1 = 1;
  2141  04E0  1497               	bsf	23,1	;volatile
  2142                           
  2143                           ;concentration.c: 216:     CCP1M0 = 0;
  2144  04E1  1017               	bcf	23,0	;volatile
  2145                           
  2146                           ;concentration.c: 217:     TMR1CS = 0;
  2147  04E2  1090               	bcf	16,1	;volatile
  2148                           
  2149                           ;concentration.c: 218:     T1CKPS0 = 0;
  2150  04E3  1210               	bcf	16,4	;volatile
  2151                           
  2152                           ;concentration.c: 219:     T1CKPS1 = 0;
  2153  04E4  1290               	bcf	16,5	;volatile
  2154                           
  2155                           ;concentration.c: 220:     TMR1GE = 0;
  2156  04E5  1310               	bcf	16,6	;volatile
  2157                           
  2158                           ;concentration.c: 221:     TMR1ON = 1;
  2159  04E6  1410               	bsf	16,0	;volatile
  2160  04E7                     l205:	
  2161  04E7  0008               	return
  2162  04E8                     __end_of_time_init:	
  2163                           
  2164                           	psect	text10
  2165  03B9                     __ptext10:	
  2166 ;; *************** function _lcd_puts *****************
  2167 ;; Defined at:
  2168 ;;		line 129 in file "lcd4bits.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  string          1    wreg     PTR const unsigned char 
  2171 ;;		 -> board_r2(17), board_r1(17), 
  2172 ;;  port            2   12[BANK0 ] PTR unsigned char 
  2173 ;;		 -> PORTD(1), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  string          1   15[BANK0 ] PTR const unsigned char 
  2176 ;;		 -> board_r2(17), board_r1(17), 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         0       2       0       0       0
  2187 ;;      Locals:         0       1       0       0       0
  2188 ;;      Temps:          0       1       0       0       0
  2189 ;;      Totals:         0       4       0       0       0
  2190 ;;Total ram usage:        4 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    6
  2193 ;; This function calls:
  2194 ;;		_lcd_write
  2195 ;; This function is called by:
  2196 ;;		_gameboard_init
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _lcd_puts
  2202  03B9                     _lcd_puts:	
  2203                           
  2204                           ;incstack = 0
  2205 ;; using string table level
  2206                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2207                           ;lcd_puts@string stored from wreg
  2208  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2209  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2210  03BB  00AF               	movwf	lcd_puts@string
  2211  03BC                     l1257:	
  2212                           
  2213                           ;lcd4bits.c: 130:     while (*string != 0) {
  2214  03BC  2BD7               	goto	l1263
  2215  03BD                     l1259:	
  2216                           
  2217                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  2218  03BD  082F               	movf	lcd_puts@string,w
  2219  03BE  0084               	movwf	4
  2220  03BF  120A  118A  240E  120A  118A  	fcall	stringdir
  2221  03C4  00AE               	movwf	??_lcd_puts
  2222  03C5  082E               	movf	??_lcd_puts,w
  2223  03C6  00A6               	movwf	lcd_write@CmdChar
  2224  03C7  082C               	movf	lcd_puts@port,w
  2225  03C8  00A7               	movwf	lcd_write@port
  2226  03C9  082D               	movf	lcd_puts@port+1,w
  2227  03CA  00A8               	movwf	lcd_write@port+1
  2228  03CB  3010               	movlw	16
  2229  03CC  120A  118A  22AC  120A  118A  	fcall	_lcd_write
  2230  03D1                     l1261:	
  2231  03D1  3001               	movlw	1
  2232  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2233  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2234  03D4  00AE               	movwf	??_lcd_puts
  2235  03D5  082E               	movf	??_lcd_puts,w
  2236  03D6  07AF               	addwf	lcd_puts@string,f
  2237  03D7                     l1263:	
  2238                           
  2239                           ;lcd4bits.c: 130:     while (*string != 0) {
  2240  03D7  082F               	movf	lcd_puts@string,w
  2241  03D8  0084               	movwf	4
  2242  03D9  120A  118A  240E  120A  118A  	fcall	stringdir
  2243  03DE  3A00               	xorlw	0
  2244  03DF  1D03               	skipz
  2245  03E0  2BE2               	goto	u391
  2246  03E1  2BE3               	goto	u390
  2247  03E2                     u391:	
  2248  03E2  2BBD               	goto	l1259
  2249  03E3                     u390:	
  2250  03E3                     l254:	
  2251  03E3  0008               	return
  2252  03E4                     __end_of_lcd_puts:	
  2253                           
  2254                           	psect	text11
  2255  045B                     __ptext11:	
  2256 ;; *************** function _lcd_goto *****************
  2257 ;; Defined at:
  2258 ;;		line 146 in file "lcd4bits.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  position        1    wreg     unsigned char 
  2261 ;;  port            2   12[BANK0 ] PTR unsigned char 
  2262 ;;		 -> PORTD(1), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  position        1   15[BANK0 ] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       2       0       0       0
  2275 ;;      Locals:         0       1       0       0       0
  2276 ;;      Temps:          0       1       0       0       0
  2277 ;;      Totals:         0       4       0       0       0
  2278 ;;Total ram usage:        4 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    6
  2281 ;; This function calls:
  2282 ;;		_DelayMs
  2283 ;;		_lcd_write
  2284 ;; This function is called by:
  2285 ;;		_gameboard_init
  2286 ;;		_update_cursor
  2287 ;;		_toggle_cursor
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _lcd_goto
  2293  045B                     _lcd_goto:	
  2294                           
  2295                           ;incstack = 0
  2296 ;; hardware stack exceeded
  2297                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2298                           ;lcd_goto@position stored from wreg
  2299  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2300  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2301  045D  00AF               	movwf	lcd_goto@position
  2302  045E                     l1231:	
  2303                           
  2304                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  2305  045E  082F               	movf	lcd_goto@position,w
  2306  045F  3E80               	addlw	128
  2307  0460  00AE               	movwf	??_lcd_goto
  2308  0461  082E               	movf	??_lcd_goto,w
  2309  0462  00A6               	movwf	lcd_write@CmdChar
  2310  0463  082C               	movf	lcd_goto@port,w
  2311  0464  00A7               	movwf	lcd_write@port
  2312  0465  082D               	movf	lcd_goto@port+1,w
  2313  0466  00A8               	movwf	lcd_write@port+1
  2314  0467  3000               	movlw	0
  2315  0468  120A  118A  22AC  120A  118A  	fcall	_lcd_write
  2316  046D                     l1233:	
  2317                           
  2318                           ;lcd4bits.c: 149:     DelayMs(2);
  2319  046D  3002               	movlw	2
  2320  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2321  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0470  00A4               	movwf	DelayMs@millis
  2323  0471  3000               	movlw	0
  2324  0472  00A5               	movwf	DelayMs@millis+1
  2325  0473  120A  118A  2493  120A  118A  	fcall	_DelayMs
  2326  0478                     l260:	
  2327  0478  0008               	return
  2328  0479                     __end_of_lcd_goto:	
  2329                           
  2330                           	psect	text12
  2331  0479                     __ptext12:	
  2332 ;; *************** function _lcd_clear *****************
  2333 ;; Defined at:
  2334 ;;		line 123 in file "lcd4bits.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  port            2   12[BANK0 ] PTR unsigned char 
  2337 ;;		 -> PORTA(1), PORTD(1), 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       2       0       0       0
  2350 ;;      Locals:         0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         0       2       0       0       0
  2353 ;;Total ram usage:        2 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    6
  2356 ;; This function calls:
  2357 ;;		_DelayMs
  2358 ;;		_lcd_write
  2359 ;; This function is called by:
  2360 ;;		_gameboard_init
  2361 ;;		_lcd_init
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _lcd_clear
  2367  0479                     _lcd_clear:	
  2368  0479                     l1253:	
  2369                           ;incstack = 0
  2370                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2371                           
  2372                           
  2373                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  2374  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2375  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2376  047B  01A6               	clrf	lcd_write@CmdChar
  2377  047C  0AA6               	incf	lcd_write@CmdChar,f
  2378  047D  082C               	movf	lcd_clear@port,w
  2379  047E  00A7               	movwf	lcd_write@port
  2380  047F  082D               	movf	lcd_clear@port+1,w
  2381  0480  00A8               	movwf	lcd_write@port+1
  2382  0481  3000               	movlw	0
  2383  0482  120A  118A  22AC  120A  118A  	fcall	_lcd_write
  2384  0487                     l1255:	
  2385                           
  2386                           ;lcd4bits.c: 125:     DelayMs(2);
  2387  0487  3002               	movlw	2
  2388  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2390  048A  00A4               	movwf	DelayMs@millis
  2391  048B  3000               	movlw	0
  2392  048C  00A5               	movwf	DelayMs@millis+1
  2393  048D  120A  118A  2493  120A  118A  	fcall	_DelayMs
  2394  0492                     l248:	
  2395  0492  0008               	return
  2396  0493                     __end_of_lcd_clear:	
  2397                           
  2398                           	psect	text13
  2399  02AC                     __ptext13:	
  2400 ;; *************** function _lcd_write *****************
  2401 ;; Defined at:
  2402 ;;		line 110 in file "lcd4bits.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  mode            1    wreg     unsigned char 
  2405 ;;  CmdChar         1    6[BANK0 ] unsigned char 
  2406 ;;  port            2    7[BANK0 ] PTR unsigned char 
  2407 ;;		 -> PORTA(1), PORTD(1), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  mode            1   11[BANK0 ] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         0       3       0       0       0
  2420 ;;      Locals:         0       1       0       0       0
  2421 ;;      Temps:          0       2       0       0       0
  2422 ;;      Totals:         0       6       0       0       0
  2423 ;;Total ram usage:        6 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    5
  2426 ;; This function calls:
  2427 ;;		_Delay20us
  2428 ;; This function is called by:
  2429 ;;		_lcd_clear
  2430 ;;		_lcd_puts
  2431 ;;		_lcd_putch
  2432 ;;		_lcd_goto
  2433 ;;		_lcd_init
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function _lcd_write
  2439  02AC                     _lcd_write:	
  2440                           
  2441                           ;incstack = 0
  2442 ;; hardware stack exceeded
  2443                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2444                           ;lcd_write@mode stored from wreg
  2445  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2446  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2447  02AE  00AB               	movwf	lcd_write@mode
  2448  02AF                     l1219:	
  2449                           
  2450                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  2451  02AF  0826               	movf	lcd_write@CmdChar,w
  2452  02B0  00A9               	movwf	??_lcd_write
  2453  02B1  3004               	movlw	4
  2454  02B2                     u355:	
  2455  02B2  1003               	clrc
  2456  02B3  0CA9               	rrf	??_lcd_write,f
  2457  02B4  3EFF               	addlw	-1
  2458  02B5  1D03               	skipz
  2459  02B6  2AB2               	goto	u355
  2460  02B7  0829               	movf	??_lcd_write,w
  2461  02B8  3E20               	addlw	32
  2462  02B9  042B               	iorwf	lcd_write@mode,w
  2463  02BA  00AA               	movwf	??_lcd_write+1
  2464  02BB  0827               	movf	lcd_write@port,w
  2465  02BC  0084               	movwf	4
  2466  02BD  1783               	bsf	3,7
  2467  02BE  1C28               	btfss	lcd_write@port+1,0
  2468  02BF  1383               	bcf	3,7
  2469  02C0  082A               	movf	??_lcd_write+1,w
  2470  02C1  0080               	movwf	0
  2471  02C2                     l1221:	
  2472                           
  2473                           ;lcd4bits.c: 112:     Delay20us();
  2474  02C2  120A  118A  24CE  120A  118A  	fcall	_Delay20us
  2475  02C7                     l1223:	
  2476                           
  2477                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  2478  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2479  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2480  02C9  0827               	movf	lcd_write@port,w
  2481  02CA  0084               	movwf	4
  2482  02CB  1783               	bsf	3,7
  2483  02CC  1C28               	btfss	lcd_write@port+1,0
  2484  02CD  1383               	bcf	3,7
  2485  02CE  0800               	movf	0,w
  2486  02CF  39DF               	andlw	223
  2487  02D0  00A9               	movwf	??_lcd_write
  2488  02D1  0827               	movf	lcd_write@port,w
  2489  02D2  0084               	movwf	4
  2490  02D3  1783               	bsf	3,7
  2491  02D4  1C28               	btfss	lcd_write@port+1,0
  2492  02D5  1383               	bcf	3,7
  2493  02D6  0829               	movf	??_lcd_write,w
  2494  02D7  0080               	movwf	0
  2495  02D8                     l1225:	
  2496                           
  2497                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  2498  02D8  0826               	movf	lcd_write@CmdChar,w
  2499  02D9  390F               	andlw	15
  2500  02DA  3E20               	addlw	32
  2501  02DB  042B               	iorwf	lcd_write@mode,w
  2502  02DC  00A9               	movwf	??_lcd_write
  2503  02DD  0827               	movf	lcd_write@port,w
  2504  02DE  0084               	movwf	4
  2505  02DF  1783               	bsf	3,7
  2506  02E0  1C28               	btfss	lcd_write@port+1,0
  2507  02E1  1383               	bcf	3,7
  2508  02E2  0829               	movf	??_lcd_write,w
  2509  02E3  0080               	movwf	0
  2510  02E4                     l1227:	
  2511                           
  2512                           ;lcd4bits.c: 116:     Delay20us();
  2513  02E4  120A  118A  24CE  120A  118A  	fcall	_Delay20us
  2514                           
  2515                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  2516  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2517  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2518  02EB  0827               	movf	lcd_write@port,w
  2519  02EC  0084               	movwf	4
  2520  02ED  1783               	bsf	3,7
  2521  02EE  1C28               	btfss	lcd_write@port+1,0
  2522  02EF  1383               	bcf	3,7
  2523  02F0  0800               	movf	0,w
  2524  02F1  39DF               	andlw	223
  2525  02F2  00A9               	movwf	??_lcd_write
  2526  02F3  0827               	movf	lcd_write@port,w
  2527  02F4  0084               	movwf	4
  2528  02F5  1783               	bsf	3,7
  2529  02F6  1C28               	btfss	lcd_write@port+1,0
  2530  02F7  1383               	bcf	3,7
  2531  02F8  0829               	movf	??_lcd_write,w
  2532  02F9  0080               	movwf	0
  2533  02FA                     l245:	
  2534  02FA  0008               	return
  2535  02FB                     __end_of_lcd_write:	
  2536                           
  2537                           	psect	text14
  2538  04CE                     __ptext14:	
  2539 ;; *************** function _Delay20us *****************
  2540 ;; Defined at:
  2541 ;;		line 99 in file "lcd4bits.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  next            1    5[BANK0 ] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         0       1       0       0       0
  2557 ;;      Temps:          0       1       0       0       0
  2558 ;;      Totals:         0       2       0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    4
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_lcd_write
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _Delay20us
  2571  04CE                     _Delay20us:	
  2572  04CE                     l1199:	
  2573                           ;incstack = 0
  2574 ;; hardware stack exceeded
  2575                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  2576                           
  2577                           
  2578                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  2579  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2580  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2581  04D0  01A5               	clrf	Delay20us@next
  2582  04D1                     l1205:	
  2583  04D1  3001               	movlw	1
  2584  04D2  00A4               	movwf	??_Delay20us
  2585  04D3  0824               	movf	??_Delay20us,w
  2586  04D4  07A5               	addwf	Delay20us@next,f
  2587  04D5                     l1207:	
  2588  04D5  3008               	movlw	8
  2589  04D6  0225               	subwf	Delay20us@next,w
  2590  04D7  1C03               	skipc
  2591  04D8  2CDA               	goto	u321
  2592  04D9  2CDB               	goto	u320
  2593  04DA                     u321:	
  2594  04DA  2CD1               	goto	l1205
  2595  04DB                     u320:	
  2596  04DB                     l242:	
  2597  04DB  0008               	return
  2598  04DC                     __end_of_Delay20us:	
  2599                           
  2600                           	psect	text15
  2601  0493                     __ptext15:	
  2602 ;; *************** function _DelayMs *****************
  2603 ;; Defined at:
  2604 ;;		line 86 in file "lcd4bits.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  millis          2    4[BANK0 ] unsigned int 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       2       0       0       0
  2619 ;;      Locals:         0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         0       2       0       0       0
  2622 ;;Total ram usage:        2 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    4
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_lcd_clear
  2629 ;;		_lcd_goto
  2630 ;;		_lcd_init
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           
  2635                           ;psect for function _DelayMs
  2636  0493                     _DelayMs:	
  2637  0493                     l1209:	
  2638                           ;incstack = 0
  2639                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  2640                           
  2641                           
  2642                           ;lcd4bits.c: 87:     while (millis != 0) {
  2643  0493  2CA3               	goto	l1217
  2644  0494                     l1211:	
  2645                           
  2646                           ;lcd4bits.c: 88:         TMR0 = 100;
  2647  0494  3064               	movlw	100
  2648  0495  0081               	movwf	1	;volatile
  2649  0496                     l1213:	
  2650                           
  2651                           ;lcd4bits.c: 89:         T0IF = 0;
  2652  0496  110B               	bcf	11,2	;volatile
  2653  0497                     l233:	
  2654                           ;lcd4bits.c: 90:         while(T0IF == 0);
  2655                           
  2656  0497  1D0B               	btfss	11,2	;volatile
  2657  0498  2C9A               	goto	u331
  2658  0499  2C9B               	goto	u330
  2659  049A                     u331:	
  2660  049A  2C97               	goto	l233
  2661  049B                     u330:	
  2662  049B                     l1215:	
  2663                           
  2664                           ;lcd4bits.c: 91:         millis--;
  2665  049B  3001               	movlw	1
  2666  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2667  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2668  049E  02A4               	subwf	DelayMs@millis,f
  2669  049F  3000               	movlw	0
  2670  04A0  1C03               	skipc
  2671  04A1  03A5               	decf	DelayMs@millis+1,f
  2672  04A2  02A5               	subwf	DelayMs@millis+1,f
  2673  04A3                     l1217:	
  2674                           
  2675                           ;lcd4bits.c: 87:     while (millis != 0) {
  2676  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2677  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2678  04A5  0824               	movf	DelayMs@millis,w
  2679  04A6  0425               	iorwf	DelayMs@millis+1,w
  2680  04A7  1D03               	btfss	3,2
  2681  04A8  2CAA               	goto	u341
  2682  04A9  2CAB               	goto	u340
  2683  04AA                     u341:	
  2684  04AA  2C94               	goto	l1211
  2685  04AB                     u340:	
  2686  04AB                     l237:	
  2687  04AB  0008               	return
  2688  04AC                     __end_of_DelayMs:	
  2689                           
  2690                           	psect	text16
  2691  03E4                     __ptext16:	
  2692 ;; *************** function _get_current_char *****************
  2693 ;; Defined at:
  2694 ;;		line 202 in file "concentration.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       1       0       0       0
  2711 ;;      Totals:         0       1       0       0       0
  2712 ;;Total ram usage:        1 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    4
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_gameboard_init
  2719 ;;		_update_cursor
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _get_current_char
  2725  03E4                     _get_current_char:	
  2726  03E4                     l1235:	
  2727                           ;incstack = 0
  2728                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath]
  2729                           
  2730                           
  2731                           ;concentration.c: 203:     if((cursor_pos>>4) == 4) {
  2732  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2733  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2734  03E6  083E               	movf	_cursor_pos,w
  2735  03E7  00A4               	movwf	??_get_current_char
  2736  03E8  3004               	movlw	4
  2737  03E9                     u365:	
  2738  03E9  1003               	clrc
  2739  03EA  0CA4               	rrf	??_get_current_char,f
  2740  03EB  3EFF               	addlw	-1
  2741  03EC  1D03               	skipz
  2742  03ED  2BE9               	goto	u365
  2743  03EE  3004               	movlw	4
  2744  03EF  0624               	xorwf	??_get_current_char,w
  2745  03F0  1D03               	btfss	3,2
  2746  03F1  2BF3               	goto	u371
  2747  03F2  2BF4               	goto	u370
  2748  03F3                     u371:	
  2749  03F3  2C01               	goto	l1239
  2750  03F4                     u370:	
  2751  03F4                     l1237:	
  2752                           
  2753                           ;concentration.c: 204:         current_char = board_r2[cursor_pos&0x0F];
  2754  03F4  083E               	movf	_cursor_pos,w
  2755  03F5  390F               	andlw	15
  2756  03F6  3E01               	addlw	low ((_board_r2-__stringbase)| (0+32768))
  2757  03F7  0084               	movwf	4
  2758  03F8  120A  118A  240E  120A  118A  	fcall	stringdir
  2759  03FD  00A4               	movwf	??_get_current_char
  2760  03FE  0824               	movf	??_get_current_char,w
  2761  03FF  00BD               	movwf	_current_char
  2762                           
  2763                           ;concentration.c: 205:     } else {
  2764  0400  2C0D               	goto	l202
  2765  0401                     l1239:	
  2766                           
  2767                           ;concentration.c: 206:         current_char = board_r1[cursor_pos&0x0F];
  2768  0401  083E               	movf	_cursor_pos,w
  2769  0402  390F               	andlw	15
  2770  0403  3E12               	addlw	low ((_board_r1-__stringbase)| (0+32768))
  2771  0404  0084               	movwf	4
  2772  0405  120A  118A  240E  120A  118A  	fcall	stringdir
  2773  040A  00A4               	movwf	??_get_current_char
  2774  040B  0824               	movf	??_get_current_char,w
  2775  040C  00BD               	movwf	_current_char
  2776  040D                     l202:	
  2777  040D  0008               	return
  2778  040E                     __end_of_get_current_char:	
  2779                           
  2780                           	psect	text17
  2781  0344                     __ptext17:	
  2782 ;; *************** function _interrupt_handler *****************
  2783 ;; Defined at:
  2784 ;;		line 240 in file "concentration.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0
  2800 ;;      Temps:          0       4       0       0       0
  2801 ;;      Totals:         0       4       0       0       0
  2802 ;;Total ram usage:        4 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    3
  2805 ;; This function calls:
  2806 ;;		i1_lcd_putch
  2807 ;; This function is called by:
  2808 ;;		Interrupt level 1
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function _interrupt_handler
  2814  0344                     _interrupt_handler:	
  2815  0344                     i1l1487:	
  2816                           
  2817                           ;concentration.c: 241:     if(ADIF) {
  2818  0344  1F0C               	btfss	12,6	;volatile
  2819  0345  2B47               	goto	u58_21
  2820  0346  2B48               	goto	u58_20
  2821  0347                     u58_21:	
  2822  0347  2B60               	goto	i1l1501
  2823  0348                     u58_20:	
  2824  0348                     i1l1489:	
  2825                           
  2826                           ;concentration.c: 242:         if(CHS1 == 1) {
  2827  0348  1D9F               	btfss	31,3	;volatile
  2828  0349  2B4B               	goto	u59_21
  2829  034A  2B4C               	goto	u59_20
  2830  034B                     u59_21:	
  2831  034B  2B56               	goto	i1l1495
  2832  034C                     u59_20:	
  2833  034C                     i1l1491:	
  2834                           
  2835                           ;concentration.c: 243:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  2836  034C  081E               	movf	30,w	;volatile
  2837  034D  00B8               	movwf	_joystick_x_pos+1
  2838  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2839  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0350  081E               	movf	30,w	;volatile
  2841  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0353  00B7               	movwf	_joystick_x_pos
  2844  0354                     i1l1493:	
  2845                           
  2846                           ;concentration.c: 244:             CHS1 = 0;
  2847  0354  119F               	bcf	31,3	;volatile
  2848                           
  2849                           ;concentration.c: 245:         } else {
  2850  0355  2B5F               	goto	i1l1499
  2851  0356                     i1l1495:	
  2852                           
  2853                           ;concentration.c: 246:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  2854  0356  081E               	movf	30,w	;volatile
  2855  0357  00B6               	movwf	_joystick_y_pos+1
  2856  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2857  0359  1303               	bcf	3,6	;RP1=0, select bank1
  2858  035A  081E               	movf	30,w	;volatile
  2859  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2860  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2861  035D  00B5               	movwf	_joystick_y_pos
  2862  035E                     i1l1497:	
  2863                           
  2864                           ;concentration.c: 247:             CHS1 = 1;
  2865  035E  159F               	bsf	31,3	;volatile
  2866  035F                     i1l1499:	
  2867                           
  2868                           ;concentration.c: 249:         ADIF = 0;
  2869  035F  130C               	bcf	12,6	;volatile
  2870  0360                     i1l1501:	
  2871                           
  2872                           ;concentration.c: 251:     if(TMR2IF) {
  2873  0360  1C8C               	btfss	12,1	;volatile
  2874  0361  2B63               	goto	u60_21
  2875  0362  2B64               	goto	u60_20
  2876  0363                     u60_21:	
  2877  0363  2B6E               	goto	i1l216
  2878  0364                     u60_20:	
  2879  0364                     i1l1503:	
  2880                           
  2881                           ;concentration.c: 252:         cursor_move_delay_count--;
  2882  0364  3001               	movlw	1
  2883  0365  02FD               	subwf	_cursor_move_delay_count,f
  2884                           
  2885                           ;concentration.c: 253:         if(cursor_move_delay_count == 0) {
  2886  0366  087D               	movf	_cursor_move_delay_count,w
  2887  0367  1D03               	btfss	3,2
  2888  0368  2B6A               	goto	u61_21
  2889  0369  2B6B               	goto	u61_20
  2890  036A                     u61_21:	
  2891  036A  2B6D               	goto	i1l217
  2892  036B                     u61_20:	
  2893  036B                     i1l1505:	
  2894                           
  2895                           ;concentration.c: 254:             cursor_movable = 1;
  2896  036B  01BA               	clrf	_cursor_movable
  2897  036C  0ABA               	incf	_cursor_movable,f
  2898  036D                     i1l217:	
  2899                           ;concentration.c: 255:         }
  2900                           
  2901                           
  2902                           ;concentration.c: 256:         TMR2IF = 0;
  2903  036D  108C               	bcf	12,1	;volatile
  2904  036E                     i1l216:	
  2905                           ;concentration.c: 257:     }
  2906                           
  2907                           
  2908                           ;concentration.c: 258:     if(RCIF) {
  2909  036E  1E8C               	btfss	12,5	;volatile
  2910  036F  2B71               	goto	u62_21
  2911  0370  2B72               	goto	u62_20
  2912  0371                     u62_21:	
  2913  0371  2B80               	goto	i1l219
  2914  0372                     u62_20:	
  2915  0372                     i1l1507:	
  2916                           
  2917                           ;concentration.c: 259:         recieved_char = RCREG;
  2918  0372  081A               	movf	26,w	;volatile
  2919  0373  00A0               	movwf	??_interrupt_handler
  2920  0374  0820               	movf	??_interrupt_handler,w
  2921  0375  00FC               	movwf	_recieved_char
  2922  0376                     i1l1509:	
  2923                           
  2924                           ;concentration.c: 260:         lcd_putch(recieved_char, gameboard);
  2925  0376  0841               	movf	_gameboard,w
  2926  0377  00F8               	movwf	i1lcd_putch@port
  2927  0378  0842               	movf	_gameboard+1,w
  2928  0379  00F9               	movwf	i1lcd_putch@port+1
  2929  037A  087C               	movf	_recieved_char,w
  2930  037B  120A  118A  24BE  120A  118A  	fcall	i1_lcd_putch
  2931  0380                     i1l219:	
  2932  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0382  0823               	movf	??_interrupt_handler+3,w
  2935  0383  008A               	movwf	10
  2936  0384  0822               	movf	??_interrupt_handler+2,w
  2937  0385  0084               	movwf	4
  2938  0386  0E21               	swapf	(??_interrupt_handler+1)^0,w
  2939  0387  0083               	movwf	3
  2940  0388  0EFE               	swapf	btemp,f
  2941  0389  0E7E               	swapf	btemp,w
  2942  038A  0009               	retfie
  2943  038B                     __end_of_interrupt_handler:	
  2944                           
  2945                           	psect	intentry
  2946  0004                     __pintentry:	
  2947                           ;incstack = 0
  2948 ;; hardware stack exceeded
  2949                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2950                           
  2951  0004                     interrupt_function:	
  2952  007E                     saved_w	set	btemp
  2953  0004  00FE               	movwf	btemp
  2954  0005  0E03               	swapf	3,w
  2955  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0008  00A1               	movwf	??_interrupt_handler+1
  2958  0009  0804               	movf	4,w
  2959  000A  00A2               	movwf	??_interrupt_handler+2
  2960  000B  080A               	movf	10,w
  2961  000C  00A3               	movwf	??_interrupt_handler+3
  2962  000D  120A  118A  2B44   	ljmp	_interrupt_handler
  2963                           
  2964                           	psect	text18
  2965  04BE                     __ptext18:	
  2966 ;; *************** function i1_lcd_putch *****************
  2967 ;; Defined at:
  2968 ;;		line 136 in file "lcd4bits.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  character       1    wreg     unsigned char 
  2971 ;;  port            2    8[COMMON] PTR unsigned char 
  2972 ;;		 -> PORTA(1), PORTD(1), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  character       1   11[COMMON] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         2       0       0       0       0
  2985 ;;      Locals:         1       0       0       0       0
  2986 ;;      Temps:          1       0       0       0       0
  2987 ;;      Totals:         4       0       0       0       0
  2988 ;;Total ram usage:        4 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    2
  2991 ;; This function calls:
  2992 ;;		i1_lcd_write
  2993 ;; This function is called by:
  2994 ;;		_interrupt_handler
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function i1_lcd_putch
  3000  04BE                     i1_lcd_putch:	
  3001                           
  3002                           ;incstack = 0
  3003 ;; hardware stack exceeded
  3004                           ; Regs used in i1_lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3005                           ;i1lcd_putch@character stored from wreg
  3006  04BE  00FB               	movwf	i1lcd_putch@character
  3007  04BF                     i1l1449:	
  3008                           
  3009                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  3010  04BF  087B               	movf	i1lcd_putch@character,w
  3011  04C0  00FA               	movwf	??i1_lcd_putch
  3012  04C1  087A               	movf	??i1_lcd_putch,w
  3013  04C2  00F2               	movwf	i1lcd_write@CmdChar
  3014  04C3  0878               	movf	i1lcd_putch@port,w
  3015  04C4  00F3               	movwf	i1lcd_write@port
  3016  04C5  0879               	movf	i1lcd_putch@port+1,w
  3017  04C6  00F4               	movwf	i1lcd_write@port+1
  3018  04C7  3010               	movlw	16
  3019  04C8  120A  118A  22FB  120A  118A  	fcall	i1_lcd_write
  3020  04CD                     i1l257:	
  3021  04CD  0008               	return
  3022  04CE                     __end_ofi1_lcd_putch:	
  3023                           
  3024                           	psect	text19
  3025  02FB                     __ptext19:	
  3026 ;; *************** function i1_lcd_write *****************
  3027 ;; Defined at:
  3028 ;;		line 110 in file "lcd4bits.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  mode            1    wreg     unsigned char 
  3031 ;;  CmdChar         1    2[COMMON] unsigned char 
  3032 ;;  port            2    3[COMMON] PTR unsigned char 
  3033 ;;		 -> PORTA(1), PORTD(1), 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  mode            1    7[COMMON] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3045 ;;      Params:         3       0       0       0       0
  3046 ;;      Locals:         1       0       0       0       0
  3047 ;;      Temps:          2       0       0       0       0
  3048 ;;      Totals:         6       0       0       0       0
  3049 ;;Total ram usage:        6 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    1
  3052 ;; This function calls:
  3053 ;;		i1_Delay20us
  3054 ;; This function is called by:
  3055 ;;		i1_lcd_putch
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function i1_lcd_write
  3061  02FB                     i1_lcd_write:	
  3062                           
  3063                           ;incstack = 0
  3064 ;; hardware stack exceeded
  3065                           ; Regs used in i1_lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3066                           ;i1lcd_write@mode stored from wreg
  3067  02FB  00F7               	movwf	i1lcd_write@mode
  3068  02FC                     i1l1307:	
  3069                           
  3070                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  3071  02FC  0872               	movf	i1lcd_write@CmdChar,w
  3072  02FD  00F5               	movwf	??i1_lcd_write
  3073  02FE  3004               	movlw	4
  3074  02FF                     u42_25:	
  3075  02FF  1003               	clrc
  3076  0300  0CF5               	rrf	??i1_lcd_write,f
  3077  0301  3EFF               	addlw	-1
  3078  0302  1D03               	skipz
  3079  0303  2AFF               	goto	u42_25
  3080  0304  0875               	movf	??i1_lcd_write,w
  3081  0305  3E20               	addlw	32
  3082  0306  0477               	iorwf	i1lcd_write@mode,w
  3083  0307  00F6               	movwf	??i1_lcd_write+1
  3084  0308  0873               	movf	i1lcd_write@port,w
  3085  0309  0084               	movwf	4
  3086  030A  1783               	bsf	3,7
  3087  030B  1C74               	btfss	i1lcd_write@port+1,0
  3088  030C  1383               	bcf	3,7
  3089  030D  0876               	movf	??i1_lcd_write+1,w
  3090  030E  0080               	movwf	0
  3091  030F                     i1l1309:	
  3092                           
  3093                           ;lcd4bits.c: 112:     Delay20us();
  3094  030F  120A  118A  24E8  120A  118A  	fcall	i1_Delay20us
  3095  0314                     i1l1311:	
  3096                           
  3097                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  3098  0314  0873               	movf	i1lcd_write@port,w
  3099  0315  0084               	movwf	4
  3100  0316  1783               	bsf	3,7
  3101  0317  1C74               	btfss	i1lcd_write@port+1,0
  3102  0318  1383               	bcf	3,7
  3103  0319  0800               	movf	0,w
  3104  031A  39DF               	andlw	223
  3105  031B  00F5               	movwf	??i1_lcd_write
  3106  031C  0873               	movf	i1lcd_write@port,w
  3107  031D  0084               	movwf	4
  3108  031E  1783               	bsf	3,7
  3109  031F  1C74               	btfss	i1lcd_write@port+1,0
  3110  0320  1383               	bcf	3,7
  3111  0321  0875               	movf	??i1_lcd_write,w
  3112  0322  0080               	movwf	0
  3113  0323                     i1l1313:	
  3114                           
  3115                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  3116  0323  0872               	movf	i1lcd_write@CmdChar,w
  3117  0324  390F               	andlw	15
  3118  0325  3E20               	addlw	32
  3119  0326  0477               	iorwf	i1lcd_write@mode,w
  3120  0327  00F5               	movwf	??i1_lcd_write
  3121  0328  0873               	movf	i1lcd_write@port,w
  3122  0329  0084               	movwf	4
  3123  032A  1783               	bsf	3,7
  3124  032B  1C74               	btfss	i1lcd_write@port+1,0
  3125  032C  1383               	bcf	3,7
  3126  032D  0875               	movf	??i1_lcd_write,w
  3127  032E  0080               	movwf	0
  3128  032F                     i1l1315:	
  3129                           
  3130                           ;lcd4bits.c: 116:     Delay20us();
  3131  032F  120A  118A  24E8  120A  118A  	fcall	i1_Delay20us
  3132                           
  3133                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  3134  0334  0873               	movf	i1lcd_write@port,w
  3135  0335  0084               	movwf	4
  3136  0336  1783               	bsf	3,7
  3137  0337  1C74               	btfss	i1lcd_write@port+1,0
  3138  0338  1383               	bcf	3,7
  3139  0339  0800               	movf	0,w
  3140  033A  39DF               	andlw	223
  3141  033B  00F5               	movwf	??i1_lcd_write
  3142  033C  0873               	movf	i1lcd_write@port,w
  3143  033D  0084               	movwf	4
  3144  033E  1783               	bsf	3,7
  3145  033F  1C74               	btfss	i1lcd_write@port+1,0
  3146  0340  1383               	bcf	3,7
  3147  0341  0875               	movf	??i1_lcd_write,w
  3148  0342  0080               	movwf	0
  3149  0343                     i1l245:	
  3150  0343  0008               	return
  3151  0344                     __end_ofi1_lcd_write:	
  3152                           
  3153                           	psect	text20
  3154  04E8                     __ptext20:	
  3155 ;; *************** function i1_Delay20us *****************
  3156 ;; Defined at:
  3157 ;;		line 99 in file "lcd4bits.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  Delay20us       1    1[COMMON] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0
  3173 ;;      Temps:          1       0       0       0       0
  3174 ;;      Totals:         2       0       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		i1_lcd_write
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function i1_Delay20us
  3186  04E8                     i1_Delay20us:	
  3187  04E8                     i1l1241:	
  3188                           ;incstack = 0
  3189 ;; hardware stack exceeded
  3190                           ; Regs used in i1_Delay20us: [wreg+status,2+status,0]
  3191                           
  3192                           
  3193                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  3194  04E8  01F1               	clrf	i1Delay20us@next
  3195  04E9                     i1l1247:	
  3196  04E9  3001               	movlw	1
  3197  04EA  00F0               	movwf	??i1_Delay20us
  3198  04EB  0870               	movf	??i1_Delay20us,w
  3199  04EC  07F1               	addwf	i1Delay20us@next,f
  3200  04ED                     i1l1249:	
  3201  04ED  3008               	movlw	8
  3202  04EE  0271               	subwf	i1Delay20us@next,w
  3203  04EF  1C03               	skipc
  3204  04F0  2CF2               	goto	u38_21
  3205  04F1  2CF3               	goto	u38_20
  3206  04F2                     u38_21:	
  3207  04F2  2CE9               	goto	i1l1247
  3208  04F3                     u38_20:	
  3209  04F3                     i1l242:	
  3210  04F3  0008               	return
  3211  04F4                     __end_ofi1_Delay20us:	
  3212  007E                     btemp	set	126	;btemp
  3213  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    34
    Data        4
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     21      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> board_r2(CODE[17]), board_r1(CODE[17]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    _interrupt_handler->i1_lcd_putch
    i1_lcd_putch->i1_lcd_write
    i1_lcd_write->i1_Delay20us

Critical Paths under _main in BANK0

    _main->_update_gameboard_from_input
    _update_gameboard_from_input->_update_cursor
    _update_cursor->_lcd_goto
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_goto
    _toggle_cursor->_lcd_putch
    _lcd_putch->_lcd_write
    _lcd_init->_lcd_clear
    _gameboard_init->_lcd_goto
    _gameboard_init->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18667
                     _gameboard_init
                      _joystick_init
                           _lcd_init
                          _lcd_putch
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0    7792
                                             19 BANK0      2     2      0
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        3     3      0    3907
                                             16 BANK0      3     3      0
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    3885
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    1880
                                             12 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    3598
                                             14 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       2     2      0    5397
                                             16 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             4     2      2    1615
                                             12 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    2005
                                             12 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    1755
                                             12 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    1330
                                              6 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      46
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     251
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                    4     4      0     388
                                              0 BANK0      4     4      0
                        i1_lcd_putch
 ---------------------------------------------------------------------------------
 (7) i1_lcd_putch                                          4     2      2     388
                                              8 COMMON     4     2      2
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (8) i1_lcd_write                                          6     3      3     318
                                              2 COMMON     6     3      3
                        i1_Delay20us
 ---------------------------------------------------------------------------------
 (9) i1_Delay20us                                          2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gameboard_init
     _get_current_char
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
     _time_init
   _joystick_init
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_putch
     _lcd_write
       _Delay20us
   _update_gameboard_from_input
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         _lcd_write
           _Delay20us
     _update_cursor
       _get_current_char
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         _lcd_write
           _Delay20us

 _interrupt_handler (ROOT)
   i1_lcd_putch
     i1_lcd_write
       i1_Delay20us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 15 21:46:33 2020

                                   pc 0002   __end_of_update_gameboard_from_input 012B  
         _update_gameboard_from_input 003B                           __CFG_CP$OFF 0000  
                       _update_cursor 012B                                    _GO 00F9  
                                  fsr 0004                                   l202 040D  
                                 l205 04E7                                   l208 045A  
                                 l160 0042                                   l233 0497  
                                 l242 04DB                                   l163 0057  
                                 l260 0478                                   l228 04FD  
                                 l237 04AB                                   l245 02FA  
                                 l157 01FA                                   l254 03E3  
                                 l182 012A                                   l263 02AB  
                                 l248 0492                                   l192 0193  
                                 l257 04BD                                   l179 0126  
                                 l197 03B8                                   _GIE 005F  
                                 u320 04DB                                   u400 0392  
                                 u321 04DA                                   u401 0391  
                                 u330 049B                                   u410 017D  
                                 u331 049A                                   u411 017C  
                                 u340 04AB                                   u500 00B3  
                                 u341 04AA                                   u501 00B2  
                                 u510 00BA                                   u430 0041  
                                 _PR2 0092                                   u511 00B9  
                                 u431 0040                                   u520 00D2  
                                 u440 0046                                   u521 00D1  
                                 u505 00AF                                   u441 0045  
                                 u370 03F4                                   u530 00D9  
                                 u450 004B                          __CFG_CPD$OFF 0000  
                                 u371 03F3                                   u355 02B2  
                                 u531 00D8                                   u451 004A  
                                 u540 00F3                                   u460 0073  
                                 u365 03E9                                   u541 00F2  
                                 u525 00CE                                   u461 0072  
                                 u390 03E3                                   u550 00FA  
                                 u470 007A                                   u391 03E2  
                                 u551 00F9                                   u471 0079  
                                 u560 0114                                   u480 0092  
                                 u561 0113                                   u545 00EF  
                                 u481 0091                                   u465 006F  
                                 u570 011B                                   u490 0099  
                                 u571 011A                                   u491 0098  
                                 u565 0110                                   u485 008E  
                                 _SCS 0478                                   fsr0 0004  
                                 indf 0000                          __CFG_FOSC$HS 0000  
                        __CFG_LVP$OFF 0000                        ?_toggle_cursor 0070  
                       lcd_clear@port 002C                                  l1211 0494  
                                l1213 0496                                  l1205 04D1  
                                l1221 02C2                                  l1215 049B  
                                l1207 04D5                                  l1223 02C7  
                                l1231 045E                                  l1303 04F4  
                                l1217 04A3                                  l1209 0493  
                                l1225 02D8                                  l1233 046D  
                                l1305 04FC                                  l1321 0267  
                                l1401 0066                                  l1235 03E4  
                                l1227 02E4                                  l1219 02AF  
                                l1251 04DC                                  l1331 0436  
                                l1323 0270                                  l1411 0092  
                                l1403 0073                                  l1237 03F4  
                                l1253 0479                                  l1261 03D1  
                                l1341 0448                                  l1333 0440  
                                l1325 0280                                  l1317 025A  
                                l1229 04AF                                  l1421 00BA  
                                l1413 0099                                  l1405 007A  
                                l1239 0401                                  l1255 0487  
                                l1263 03D7                                  l1351 0454  
                                l1343 044C                                  l1335 0441  
                                l1327 0290                                  l1319 025F  
                                l1271 03A1                                  l1431 00DD  
                                l1423 00BC                                  l1415 009D  
                                l1407 007C                                  l1257 03BC  
                                l1361 01B3                                  l1353 0456  
                                l1345 044D                                  l1337 0444  
                                l1329 029B                                  l1273 03AB  
                                l1265 038B                                  l1281 0134  
                                l1441 0105                                  l1433 00E4  
                                l1425 00C3                                  l1417 00A4  
                                l1409 0083                                  l1259 03BD  
                                l1371 01D7                                  l1363 01BF  
                                l1355 0197                                  l1347 044E  
                                l1339 0446                                  l1275 03AE  
                                l1267 0392                                  l1531 014D  
                                l1283 0136                                  l1291 0145  
                                l1443 0114                                  l1435 00F3  
                                l1427 00D2                                  l1419 00B3  
                                l1451 01FB                                  l1381 01F0  
                                l1373 01DA                                  l1365 01CB  
                                l1357 019C                                  l1349 0451  
                                l1269 039C                                  l1285 013B  
                                l1293 015B                                  l1277 012E  
                                l1445 011B                                  l1437 00FA  
                                l1429 00D9                                  l1461 021E  
                                l1453 01FE                                  l1199 04CE  
                                l1383 01F3                                  l1375 01DC  
                                l1367 01D1                                  l1359 01A7  
                                l1295 0176                                  l1287 0140  
                                l1279 012F                                  l1447 011F  
                                l1439 00FE                                  l1391 0046  
                                l1471 022D                                  l1463 0224  
                                l1455 0203                                  l1385 01F6  
                                l1377 01E6                                  l1369 01D2  
                                l1297 017D                                  l1393 004B  
                                l1481 0239                                  l1473 0230  
                                l1465 0225                                  l1457 020E  
                                l1379 01EC                                  l1395 004F  
                                l1387 003B                                  l1483 0245  
                                l1475 0231                                  l1467 0229  
                                l1459 0219                                  l1397 0055  
                                l1389 0041                                  l1485 0251  
                                l1477 0232                                  l1469 022A  
                                l1399 0065                                  l1479 0235  
                                _ADIE 0466                                  _ADIF 0066  
                                _CHS1 00FB                                  _BRGH 04C2  
                                _CREN 00C4                                  _T0IF 005A  
                                _PEIE 005E                                  _RCIE 0465  
                                _RCIF 0065                                  _TMR0 0001  
                                _TMR1 000E                                  _TXEN 04C5  
                                _SYNC 04C4                                  _WPUB 0095  
                        __CFG_WRT$OFF 0000                                  _main 01FB  
                                btemp 007E                          lcd_init@port 002E  
                                start 0010                          lcd_goto@port 002C  
                       __CFG_IESO$OFF 0000                       i1Delay20us@next 0071  
                     __end_of_DelayMs 04AC                         __CFG_MCLRE$ON 0000  
                         i1_lcd_putch 04BE                           i1_lcd_write 02FB  
                      ?_update_cursor 0070                                 ?_main 0070  
                               _CCPR1 0015                                 _BRG16 0C3B  
                       __CFG_WDTE$OFF 0000                                 _ANSEL 0188  
                               _T2CON 0012                                 i1l216 036E  
                               i1l217 036D                                 i1l242 04F3  
                               i1l219 0380                                 i1l245 0343  
                               i1l257 04CD                                 _RCREG 001A  
                               _SPBRG 0099                                 u42_25 02FF  
                               _PORTA 0005                                 _PORTB 0006  
                               _PORTD 0008                                 u60_20 0364  
                               u60_21 0363                                 u61_20 036B  
                               u61_21 036A                                 u38_20 04F3  
                               u62_20 0372                                 u38_21 04F2  
                               u62_21 0371                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                                 u58_20 0348  
                               u58_21 0347                                 u59_20 034C  
                               u59_21 034B                        __CFG_FCMEN$OFF 0000  
                               _nRBPU 040F                          lcd_puts@port 002C  
                      __CFG_BOREN$OFF 0000                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                       DelayMs@millis 0024                       __initialization 0013  
                        __end_of_main 025A                    __size_of_Delay20us 000E  
                              ??_main 0035                       ??_toggle_cursor 0030  
                        ?i1_Delay20us 0070                                _ADCON0 001F  
                              _ADCON1 009F                                _CCP1M0 00B8  
                              _CCP1M1 00B9                                _CCP1M2 00BA  
                              _CCP1M3 00BB                                _CCP1IF 0062  
                              _ADRESH 001E                                _ADRESL 009E  
                              _ANSELH 0189                    i1lcd_write@CmdChar 0072  
                              i1l1311 0314                                i1l1241 04E8  
                              i1l1313 0323                                i1l1315 032F  
                              i1l1307 02FC                                i1l1309 030F  
                              i1l1501 0360                                i1l1247 04E9  
                              i1l1503 0364                                i1l1249 04ED  
                              i1l1505 036B                                i1l1507 0372  
                              i1l1509 0376                                i1l1449 04BF  
                              i1l1491 034C                                i1l1493 0354  
                              i1l1495 0356                                i1l1487 0344  
                              i1l1497 035E                                i1l1489 0348  
             __size_of_gameboard_init 0067                                i1l1499 035F  
                           ??_DelayMs 0026                                _TMR1GE 0086  
                              _TMR1CS 0081                                _TMR2IE 0461  
                              _TMR2IF 0061                                _TMR1ON 0080  
                    __end_of_board_r1 0436                      __end_of_board_r2 0425  
                      __CFG_PWRTE$OFF 0000                       ??_update_cursor 0030  
                    __end_of_lcd_init 02AC                      __end_of_lcd_goto 0479  
                    __end_of_lcd_puts 03E4                         lcd_putch@port 002C  
                              saved_w 007E             __size_of_get_current_char 002A  
                   __end_of_Delay20us 04DC         update_cursor@move_delay_count 0032  
             __end_of__initialization 0037                         lcd_write@mode 002B  
                       lcd_write@port 0027                        __pcstackCOMMON 0070  
                        __pidataBANK0 04FE                 __end_of_joystick_init 045B  
                  __size_of_lcd_clear 001A                    __size_of_lcd_putch 0012  
                  __size_of_lcd_write 004F                            __pbssBANK0 0035  
             _cursor_move_delay_count 007D                            __pmaintext 01FB  
                        ?i1_lcd_putch 0078                          ?i1_lcd_write 0072  
                          __pintentry 0004                    __size_of_tmr0_init 000A  
                             _T1CKPS0 0084                               _T1CKPS1 0085  
                  __size_of_time_init 000C                       i1lcd_putch@port 0078  
                           ?_lcd_init 002E                             ?_lcd_goto 002C  
                           ?_lcd_puts 002C                            __stringtab 040E  
                      _gameboard_init 0194                  __size_ofi1_Delay20us 000C  
                             _DelayMs 0493                     __end_of_lcd_clear 0493  
                     i1lcd_write@mode 0077                       i1lcd_write@port 0073  
                   __end_of_lcd_putch 04BE                     __end_of_lcd_write 02FB  
                             __ptext1 003B                               __ptext2 012B  
                             __ptext3 038B                               __ptext4 04AC  
                             __ptext5 025A                               __ptext6 04F4  
                             __ptext7 0436                               __ptext8 0194  
                             __ptext9 04DC                            _cursor_pos 003E  
                    _get_current_char 03E4                __end_of_gameboard_init 01FB  
                          ??_lcd_init 0030                            ??_lcd_goto 002E  
                          ??_lcd_puts 002E                  end_of_initialization 0037  
                   __end_of_tmr0_init 04FE                        lcd_puts@string 002F  
                       _recieved_char 007C                     __end_of_time_init 04E8  
                          _scoreboard 003F                        _joystick_x_pos 0037  
                      _joystick_y_pos 0035                       ?_gameboard_init 0070  
               __end_of_toggle_cursor 03B9                             _Delay20us 04CE  
               __end_of_update_cursor 0194          ?_update_gameboard_from_input 0070  
                __size_ofi1_lcd_putch 0010                  __size_ofi1_lcd_write 0049  
                 start_initialization 0013                            ?_Delay20us 0070  
                i1lcd_putch@character 007B                           __pdataBANK0 003F  
       ??_update_gameboard_from_input 0033                           __pbssCOMMON 007C  
                           ___latbits 0002                         __pcstackBANK0 0020  
                            ?_DelayMs 0024                __size_of_joystick_init 0025  
                   __size_of_lcd_init 0052                     __size_of_lcd_goto 001E  
                   __size_of_lcd_puts 002B                          _current_char 003D  
                         _delay_loops 003B              __end_of_get_current_char 040E  
                           _gameboard 0041                             _lcd_clear 0479  
                        _cursor_solid 003C                             __pstrings 040E  
                           _lcd_putch 04AC                             _lcd_write 02AC  
                   _interrupt_handler 0344                    ?_interrupt_handler 0070  
                       ??i1_Delay20us 0070  __size_of_update_gameboard_from_input 00F0  
                 ??_interrupt_handler 0020                     interrupt_function 0004  
                      _cursor_movable 003A                           ??_Delay20us 0024  
                           _tmr0_init 04F4                             _time_init 04DC  
                          ?_lcd_clear 002C             __end_of_interrupt_handler 038B  
                       _joystick_init 0436                            ?_lcd_putch 002C  
                         __stringbase 0413                            ?_lcd_write 0026  
                    ??_gameboard_init 0030                      __size_of_DelayMs 0019  
                 __end_ofi1_Delay20us 04F4                            ?_tmr0_init 0070  
                          ?_time_init 0070                        ?_joystick_init 0070  
                  __end_of__stringtab 0414                              _board_r1 0425  
                            _board_r2 0414                              __ptext10 03B9  
                            __ptext11 045B                              __ptext20 04E8  
                            __ptext12 0479                              __ptext13 02AC  
                            __ptext14 04CE                              __ptext15 0493  
                            __ptext16 03E4                              __ptext17 0344  
                            __ptext18 04BE                              __ptext19 02FB  
                         _cursor_fast 0039                     __CFG_BOR4V$BOR21V 0000  
                            _lcd_init 025A                              _lcd_goto 045B  
                            _lcd_puts 03B9                         __size_of_main 005F  
                  lcd_putch@character 002F                         ??i1_lcd_putch 007A  
                       ??i1_lcd_write 0075                __size_of_toggle_cursor 002E  
       gameboard_init@cursor_init_pos 0031                           ??_lcd_clear 002E  
          __size_of_interrupt_handler 0047                           ??_lcd_putch 002E  
                         ??_lcd_write 0029                           i1_Delay20us 04E8  
                            intlevel1 0000                __size_of_update_cursor 0069  
                       Delay20us@next 0025                           ??_tmr0_init 0024  
                           stringcode 040E                     ?_get_current_char 0070  
                     ??_joystick_init 0024                           ??_time_init 0024  
                  ??_get_current_char 0024                   __end_ofi1_lcd_putch 04CE  
                 __end_ofi1_lcd_write 0344                            _OPTION_REG 0081  
                    lcd_goto@position 002F                              stringdir 040E  
                            stringtab 040E                         _toggle_cursor 038B  
                    lcd_write@CmdChar 0026  
