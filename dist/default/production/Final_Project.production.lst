

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 20:47:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286                           
   287                           	psect	idataBANK0
   288  069C                     __pidataBANK0:	
   289                           
   290                           ;initializer for _gameboard
   291  069C  3408               	retlw	8
   292  069D  3400               	retlw	0
   293  0001                     _TMR0	set	1
   294  0008                     _PORTD	set	8
   295  005A                     _T0IF	set	90
   296  0081                     _OPTION_REG	set	129
   297  0088                     _TRISD	set	136
   298  0478                     _SCS	set	1144
   299                           
   300                           ; #config settings
   301  0000                     
   302                           	psect	cinit
   303  07F0                     start_initialization:	
   304  07F0                     __initialization:	
   305                           
   306                           ; Initialize objects allocated to BANK0
   307  07F0  120A  118A  269C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   308  07F5  00A0               	movwf	__pdataBANK0& (0+127)
   309  07F6  120A  118A  269D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   310  07FB  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   311  07FC                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  07FC                     __end_of__initialization:	
   315  07FC  0183               	clrf	3
   316  07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	dataBANK0
   319  0020                     __pdataBANK0:	
   320  0020                     _gameboard:	
   321  0020                     	ds	2
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:	
   325  0070                     ?_DelayMs:	
   326  0070                     ?_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_tmr0_init:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ??_tmr0_init:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_Delay20us:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_Delay20us:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     DelayMs@millis:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 2 bytes @ 0x0
   346  0070                     	ds	1
   347  0071                     Delay20us@next:	
   348                           
   349                           ; 1 bytes @ 0x1
   350  0071                     	ds	1
   351  0072                     ??_DelayMs:	
   352  0072                     ?_lcd_write:	
   353                           ; 1 bytes @ 0x2
   354                           
   355  0072                     lcd_write@CmdChar:	
   356                           ; 1 bytes @ 0x2
   357                           
   358                           
   359                           ; 1 bytes @ 0x2
   360  0072                     	ds	1
   361  0073                     lcd_write@port:	
   362                           
   363                           ; 2 bytes @ 0x3
   364  0073                     	ds	2
   365  0075                     ??_lcd_write:	
   366                           
   367                           ; 1 bytes @ 0x5
   368  0075                     	ds	2
   369  0077                     lcd_write@mode:	
   370                           
   371                           ; 1 bytes @ 0x7
   372  0077                     	ds	1
   373  0078                     ?_lcd_clear:	
   374  0078                     ?_lcd_putch:	
   375                           ; 1 bytes @ 0x8
   376                           
   377  0078                     lcd_clear@port:	
   378                           ; 1 bytes @ 0x8
   379                           
   380  0078                     lcd_putch@port:	
   381                           ; 2 bytes @ 0x8
   382                           
   383                           
   384                           ; 2 bytes @ 0x8
   385  0078                     	ds	2
   386  007A                     ?_lcd_init:	
   387  007A                     ??_lcd_clear:	
   388                           ; 1 bytes @ 0xA
   389                           
   390  007A                     ??_lcd_putch:	
   391                           ; 1 bytes @ 0xA
   392                           
   393  007A                     lcd_init@port:	
   394                           ; 1 bytes @ 0xA
   395                           
   396                           
   397                           ; 2 bytes @ 0xA
   398  007A                     	ds	1
   399  007B                     lcd_putch@character:	
   400                           
   401                           ; 1 bytes @ 0xB
   402  007B                     	ds	1
   403  007C                     ??_lcd_init:	
   404                           
   405                           ; 1 bytes @ 0xC
   406  007C                     	ds	1
   407  007D                     ??_main:	
   408                           
   409                           	psect	maintext
   410  0781                     __pmaintext:	
   411                           ; 1 bytes @ 0xD
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 30 in file "concentration.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : B00/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0
   434 ;;      Totals:         0       0       0       0       0
   435 ;;Total ram usage:        0 bytes
   436 ;; Hardware stack levels required when called:    4
   437 ;; This function calls:
   438 ;;		_DelayMs
   439 ;;		_lcd_clear
   440 ;;		_lcd_init
   441 ;;		_lcd_putch
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _main
   449  0781                     _main:	
   450  0781                     l792:	
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   453                           
   454                           
   455                           ;concentration.c: 31:     SCS = 0;
   456  0781  1683               	bsf	3,5	;RP0=1, select bank1
   457  0782  1303               	bcf	3,6	;RP1=0, select bank1
   458  0783  100F               	bcf	15,0	;volatile
   459  0784                     l794:	
   460                           
   461                           ;concentration.c: 32:     TRISD = 0;
   462  0784  0188               	clrf	8	;volatile
   463  0785                     l796:	
   464                           
   465                           ;concentration.c: 33:     lcd_init(gameboard);
   466  0785  3008               	movlw	8
   467  0786  00FA               	movwf	lcd_init@port
   468  0787  3000               	movlw	0
   469  0788  00FB               	movwf	lcd_init@port+1
   470  0789  120A  118A  26EF  120A  118A  	fcall	_lcd_init
   471  078E                     l798:	
   472                           
   473                           ;concentration.c: 35:         lcd_clear(gameboard);
   474  078E  3008               	movlw	8
   475  078F  00F8               	movwf	lcd_clear@port
   476  0790  3000               	movlw	0
   477  0791  00F9               	movwf	lcd_clear@port+1
   478  0792  120A  118A  26C2  120A  118A  	fcall	_lcd_clear
   479  0797                     l800:	
   480                           
   481                           ;concentration.c: 36:         DelayMs(1000);
   482  0797  30E8               	movlw	232
   483  0798  00F0               	movwf	DelayMs@millis
   484  0799  3003               	movlw	3
   485  079A  00F1               	movwf	DelayMs@millis+1
   486  079B  120A  118A  26D8  120A  118A  	fcall	_DelayMs
   487  07A0                     l802:	
   488                           
   489                           ;concentration.c: 37:         lcd_putch('T', gameboard);
   490  07A0  3008               	movlw	8
   491  07A1  00F8               	movwf	lcd_putch@port
   492  07A2  3000               	movlw	0
   493  07A3  00F9               	movwf	lcd_putch@port+1
   494  07A4  3054               	movlw	84
   495  07A5  120A  118A  26B2  120A  118A  	fcall	_lcd_putch
   496  07AA                     l804:	
   497                           
   498                           ;concentration.c: 38:         DelayMs(1000);
   499  07AA  30E8               	movlw	232
   500  07AB  00F0               	movwf	DelayMs@millis
   501  07AC  3003               	movlw	3
   502  07AD  00F1               	movwf	DelayMs@millis+1
   503  07AE  120A  118A  26D8  120A  118A  	fcall	_DelayMs
   504  07B3                     l806:	
   505                           
   506                           ;concentration.c: 39:         lcd_putch('E', gameboard);
   507  07B3  3008               	movlw	8
   508  07B4  00F8               	movwf	lcd_putch@port
   509  07B5  3000               	movlw	0
   510  07B6  00F9               	movwf	lcd_putch@port+1
   511  07B7  3045               	movlw	69
   512  07B8  120A  118A  26B2  120A  118A  	fcall	_lcd_putch
   513  07BD                     l808:	
   514                           
   515                           ;concentration.c: 40:         DelayMs(1000);
   516  07BD  30E8               	movlw	232
   517  07BE  00F0               	movwf	DelayMs@millis
   518  07BF  3003               	movlw	3
   519  07C0  00F1               	movwf	DelayMs@millis+1
   520  07C1  120A  118A  26D8  120A  118A  	fcall	_DelayMs
   521  07C6                     l810:	
   522                           
   523                           ;concentration.c: 41:         lcd_putch('S', gameboard);
   524  07C6  3008               	movlw	8
   525  07C7  00F8               	movwf	lcd_putch@port
   526  07C8  3000               	movlw	0
   527  07C9  00F9               	movwf	lcd_putch@port+1
   528  07CA  3053               	movlw	83
   529  07CB  120A  118A  26B2  120A  118A  	fcall	_lcd_putch
   530  07D0                     l812:	
   531                           
   532                           ;concentration.c: 42:         DelayMs(1000);
   533  07D0  30E8               	movlw	232
   534  07D1  00F0               	movwf	DelayMs@millis
   535  07D2  3003               	movlw	3
   536  07D3  00F1               	movwf	DelayMs@millis+1
   537  07D4  120A  118A  26D8  120A  118A  	fcall	_DelayMs
   538  07D9                     l814:	
   539                           
   540                           ;concentration.c: 43:         lcd_putch('T', gameboard);
   541  07D9  3008               	movlw	8
   542  07DA  00F8               	movwf	lcd_putch@port
   543  07DB  3000               	movlw	0
   544  07DC  00F9               	movwf	lcd_putch@port+1
   545  07DD  3054               	movlw	84
   546  07DE  120A  118A  26B2  120A  118A  	fcall	_lcd_putch
   547  07E3                     l816:	
   548                           
   549                           ;concentration.c: 44:         DelayMs(1000);
   550  07E3  30E8               	movlw	232
   551  07E4  00F0               	movwf	DelayMs@millis
   552  07E5  3003               	movlw	3
   553  07E6  00F1               	movwf	DelayMs@millis+1
   554  07E7  120A  118A  26D8  120A  118A  	fcall	_DelayMs
   555  07EC  2F8E               	goto	l798
   556  07ED  120A  118A  2800   	ljmp	start
   557  07F0                     __end_of_main:	
   558                           
   559                           	psect	text1
   560  06B2                     __ptext1:	
   561 ;; *************** function _lcd_putch *****************
   562 ;; Defined at:
   563 ;;		line 136 in file "lcd4bits.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  character       1    wreg     unsigned char 
   566 ;;  port            2    8[COMMON] PTR unsigned char 
   567 ;;		 -> PORTD(1), 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  character       1   11[COMMON] unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         2       0       0       0       0
   580 ;;      Locals:         1       0       0       0       0
   581 ;;      Temps:          1       0       0       0       0
   582 ;;      Totals:         4       0       0       0       0
   583 ;;Total ram usage:        4 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    2
   586 ;; This function calls:
   587 ;;		_lcd_write
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _lcd_putch
   595  06B2                     _lcd_putch:	
   596                           
   597                           ;incstack = 0
   598                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   599                           ;lcd_putch@character stored from wreg
   600  06B2  00FB               	movwf	lcd_putch@character
   601  06B3                     l790:	
   602                           
   603                           ;lcd4bits.c: 137:     lcd_write(0x02, character, port);
   604  06B3  087B               	movf	lcd_putch@character,w
   605  06B4  00FA               	movwf	??_lcd_putch
   606  06B5  087A               	movf	??_lcd_putch,w
   607  06B6  00F2               	movwf	lcd_write@CmdChar
   608  06B7  0878               	movf	lcd_putch@port,w
   609  06B8  00F3               	movwf	lcd_write@port
   610  06B9  0879               	movf	lcd_putch@port+1,w
   611  06BA  00F4               	movwf	lcd_write@port+1
   612  06BB  3002               	movlw	2
   613  06BC  120A  118A  2737  120A  118A  	fcall	_lcd_write
   614  06C1                     l62:	
   615  06C1  0008               	return
   616  06C2                     __end_of_lcd_putch:	
   617                           
   618                           	psect	text2
   619  06EF                     __ptext2:	
   620 ;; *************** function _lcd_init *****************
   621 ;; Defined at:
   622 ;;		line 155 in file "lcd4bits.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  port            2   10[COMMON] PTR unsigned char 
   625 ;;		 -> PORTD(1), 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         2       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0
   639 ;;      Temps:          1       0       0       0       0
   640 ;;      Totals:         3       0       0       0       0
   641 ;;Total ram usage:        3 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    3
   644 ;; This function calls:
   645 ;;		_DelayMs
   646 ;;		_lcd_clear
   647 ;;		_lcd_write
   648 ;;		_tmr0_init
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _lcd_init
   656  06EF                     _lcd_init:	
   657  06EF                     l776:	
   658                           ;incstack = 0
   659                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   660                           
   661                           
   662                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
   663  06EF  120A  118A  269E  120A  118A  	fcall	_tmr0_init
   664  06F4                     l778:	
   665                           
   666                           ;lcd4bits.c: 158:     *port = 0;
   667  06F4  087A               	movf	lcd_init@port,w
   668  06F5  0084               	movwf	4
   669  06F6  1783               	bsf	3,7
   670  06F7  1C7B               	btfss	lcd_init@port+1,0
   671  06F8  1383               	bcf	3,7
   672  06F9  0180               	clrf	0
   673  06FA                     l780:	
   674                           
   675                           ;lcd4bits.c: 159:     DelayMs(15);
   676  06FA  300F               	movlw	15
   677  06FB  00F0               	movwf	DelayMs@millis
   678  06FC  3000               	movlw	0
   679  06FD  00F1               	movwf	DelayMs@millis+1
   680  06FE  120A  118A  26D8  120A  118A  	fcall	_DelayMs
   681  0703                     l782:	
   682                           
   683                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
   684  0703  3028               	movlw	40
   685  0704  00FC               	movwf	??_lcd_init
   686  0705  087C               	movf	??_lcd_init,w
   687  0706  00F2               	movwf	lcd_write@CmdChar
   688  0707  087A               	movf	lcd_init@port,w
   689  0708  00F3               	movwf	lcd_write@port
   690  0709  087B               	movf	lcd_init@port+1,w
   691  070A  00F4               	movwf	lcd_write@port+1
   692  070B  3000               	movlw	0
   693  070C  120A  118A  2737  120A  118A  	fcall	_lcd_write
   694  0711                     l784:	
   695                           
   696                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
   697  0711  300C               	movlw	12
   698  0712  00FC               	movwf	??_lcd_init
   699  0713  087C               	movf	??_lcd_init,w
   700  0714  00F2               	movwf	lcd_write@CmdChar
   701  0715  087A               	movf	lcd_init@port,w
   702  0716  00F3               	movwf	lcd_write@port
   703  0717  087B               	movf	lcd_init@port+1,w
   704  0718  00F4               	movwf	lcd_write@port+1
   705  0719  3000               	movlw	0
   706  071A  120A  118A  2737  120A  118A  	fcall	_lcd_write
   707  071F                     l786:	
   708                           
   709                           ;lcd4bits.c: 162:     lcd_clear(port);
   710  071F  087A               	movf	lcd_init@port,w
   711  0720  00F8               	movwf	lcd_clear@port
   712  0721  087B               	movf	lcd_init@port+1,w
   713  0722  00F9               	movwf	lcd_clear@port+1
   714  0723  120A  118A  26C2  120A  118A  	fcall	_lcd_clear
   715  0728                     l788:	
   716                           
   717                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
   718  0728  3006               	movlw	6
   719  0729  00FC               	movwf	??_lcd_init
   720  072A  087C               	movf	??_lcd_init,w
   721  072B  00F2               	movwf	lcd_write@CmdChar
   722  072C  087A               	movf	lcd_init@port,w
   723  072D  00F3               	movwf	lcd_write@port
   724  072E  087B               	movf	lcd_init@port+1,w
   725  072F  00F4               	movwf	lcd_write@port+1
   726  0730  3000               	movlw	0
   727  0731  120A  118A  2737  120A  118A  	fcall	_lcd_write
   728  0736                     l68:	
   729  0736  0008               	return
   730  0737                     __end_of_lcd_init:	
   731                           
   732                           	psect	text3
   733  069E                     __ptext3:	
   734 ;; *************** function _tmr0_init *****************
   735 ;; Defined at:
   736 ;;		line 72 in file "lcd4bits.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          1       0       0       0       0
   753 ;;      Totals:         1       0       0       0       0
   754 ;;Total ram usage:        1 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_lcd_init
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _tmr0_init
   765  069E                     _tmr0_init:	
   766  069E                     l694:	
   767                           ;incstack = 0
   768                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
   769                           
   770                           
   771                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
   772  069E  30C0               	movlw	192
   773  069F  00F0               	movwf	??_tmr0_init
   774  06A0  0870               	movf	??_tmr0_init,w
   775  06A1  1683               	bsf	3,5	;RP0=1, select bank1
   776  06A2  1303               	bcf	3,6	;RP1=0, select bank1
   777  06A3  0581               	andwf	1,f	;volatile
   778  06A4                     l696:	
   779                           
   780                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
   781  06A4  1501               	bsf	1,2	;volatile
   782  06A5                     l33:	
   783  06A5  0008               	return
   784  06A6                     __end_of_tmr0_init:	
   785                           
   786                           	psect	text4
   787  06C2                     __ptext4:	
   788 ;; *************** function _lcd_clear *****************
   789 ;; Defined at:
   790 ;;		line 123 in file "lcd4bits.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  port            2    8[COMMON] PTR unsigned char 
   793 ;;		 -> PORTD(1), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         2       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0
   808 ;;      Totals:         2       0       0       0       0
   809 ;;Total ram usage:        2 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    2
   812 ;; This function calls:
   813 ;;		_DelayMs
   814 ;;		_lcd_write
   815 ;; This function is called by:
   816 ;;		_main
   817 ;;		_lcd_init
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _lcd_clear
   823  06C2                     _lcd_clear:	
   824  06C2                     l772:	
   825                           ;incstack = 0
   826                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   827                           
   828                           
   829                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
   830  06C2  01F2               	clrf	lcd_write@CmdChar
   831  06C3  0AF2               	incf	lcd_write@CmdChar,f
   832  06C4  0878               	movf	lcd_clear@port,w
   833  06C5  00F3               	movwf	lcd_write@port
   834  06C6  0879               	movf	lcd_clear@port+1,w
   835  06C7  00F4               	movwf	lcd_write@port+1
   836  06C8  3000               	movlw	0
   837  06C9  120A  118A  2737  120A  118A  	fcall	_lcd_write
   838  06CE                     l774:	
   839                           
   840                           ;lcd4bits.c: 125:     DelayMs(2);
   841  06CE  3002               	movlw	2
   842  06CF  00F0               	movwf	DelayMs@millis
   843  06D0  3000               	movlw	0
   844  06D1  00F1               	movwf	DelayMs@millis+1
   845  06D2  120A  118A  26D8  120A  118A  	fcall	_DelayMs
   846  06D7                     l53:	
   847  06D7  0008               	return
   848  06D8                     __end_of_lcd_clear:	
   849                           
   850                           	psect	text5
   851  0737                     __ptext5:	
   852 ;; *************** function _lcd_write *****************
   853 ;; Defined at:
   854 ;;		line 110 in file "lcd4bits.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  mode            1    wreg     unsigned char 
   857 ;;  CmdChar         1    2[COMMON] unsigned char 
   858 ;;  port            2    3[COMMON] PTR unsigned char 
   859 ;;		 -> PORTD(1), 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  mode            1    7[COMMON] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         3       0       0       0       0
   872 ;;      Locals:         1       0       0       0       0
   873 ;;      Temps:          2       0       0       0       0
   874 ;;      Totals:         6       0       0       0       0
   875 ;;Total ram usage:        6 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		_Delay20us
   880 ;; This function is called by:
   881 ;;		_lcd_clear
   882 ;;		_lcd_putch
   883 ;;		_lcd_init
   884 ;;		_lcd_puts
   885 ;;		_lcd_goto
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _lcd_write
   891  0737                     _lcd_write:	
   892                           
   893                           ;incstack = 0
   894                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   895                           ;lcd_write@mode stored from wreg
   896  0737  00F7               	movwf	lcd_write@mode
   897  0738                     l762:	
   898                           
   899                           ;lcd4bits.c: 112:     *port = (mode|((CmdChar&0xF0)+0x01));
   900  0738  0872               	movf	lcd_write@CmdChar,w
   901  0739  39F0               	andlw	240
   902  073A  3E01               	addlw	1
   903  073B  0477               	iorwf	lcd_write@mode,w
   904  073C  00F5               	movwf	??_lcd_write
   905  073D  0873               	movf	lcd_write@port,w
   906  073E  0084               	movwf	4
   907  073F  1783               	bsf	3,7
   908  0740  1C74               	btfss	lcd_write@port+1,0
   909  0741  1383               	bcf	3,7
   910  0742  0875               	movf	??_lcd_write,w
   911  0743  0080               	movwf	0
   912  0744                     l764:	
   913                           
   914                           ;lcd4bits.c: 113:     Delay20us();
   915  0744  120A  118A  26A6  120A  118A  	fcall	_Delay20us
   916  0749                     l766:	
   917                           
   918                           ;lcd4bits.c: 114:     *port = (*port)&(~0x01);
   919  0749  0873               	movf	lcd_write@port,w
   920  074A  0084               	movwf	4
   921  074B  1783               	bsf	3,7
   922  074C  1C74               	btfss	lcd_write@port+1,0
   923  074D  1383               	bcf	3,7
   924  074E  0800               	movf	0,w
   925  074F  39FE               	andlw	254
   926  0750  00F5               	movwf	??_lcd_write
   927  0751  0873               	movf	lcd_write@port,w
   928  0752  0084               	movwf	4
   929  0753  1783               	bsf	3,7
   930  0754  1C74               	btfss	lcd_write@port+1,0
   931  0755  1383               	bcf	3,7
   932  0756  0875               	movf	??_lcd_write,w
   933  0757  0080               	movwf	0
   934  0758                     l768:	
   935                           
   936                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar<<4)+0x01));
   937  0758  0872               	movf	lcd_write@CmdChar,w
   938  0759  00F5               	movwf	??_lcd_write
   939  075A  3003               	movlw	3
   940  075B                     u85:	
   941  075B  1003               	clrc
   942  075C  0DF5               	rlf	??_lcd_write,f
   943  075D  3EFF               	addlw	-1
   944  075E  1D03               	skipz
   945  075F  2F5B               	goto	u85
   946  0760  1003               	clrc
   947  0761  0D75               	rlf	??_lcd_write,w
   948  0762  3E01               	addlw	1
   949  0763  0477               	iorwf	lcd_write@mode,w
   950  0764  00F6               	movwf	??_lcd_write+1
   951  0765  0873               	movf	lcd_write@port,w
   952  0766  0084               	movwf	4
   953  0767  1783               	bsf	3,7
   954  0768  1C74               	btfss	lcd_write@port+1,0
   955  0769  1383               	bcf	3,7
   956  076A  0876               	movf	??_lcd_write+1,w
   957  076B  0080               	movwf	0
   958  076C                     l770:	
   959                           
   960                           ;lcd4bits.c: 116:     Delay20us();
   961  076C  120A  118A  26A6  120A  118A  	fcall	_Delay20us
   962                           
   963                           ;lcd4bits.c: 117:     *port = (*port)&(~0x01);
   964  0771  0873               	movf	lcd_write@port,w
   965  0772  0084               	movwf	4
   966  0773  1783               	bsf	3,7
   967  0774  1C74               	btfss	lcd_write@port+1,0
   968  0775  1383               	bcf	3,7
   969  0776  0800               	movf	0,w
   970  0777  39FE               	andlw	254
   971  0778  00F5               	movwf	??_lcd_write
   972  0779  0873               	movf	lcd_write@port,w
   973  077A  0084               	movwf	4
   974  077B  1783               	bsf	3,7
   975  077C  1C74               	btfss	lcd_write@port+1,0
   976  077D  1383               	bcf	3,7
   977  077E  0875               	movf	??_lcd_write,w
   978  077F  0080               	movwf	0
   979  0780                     l50:	
   980  0780  0008               	return
   981  0781                     __end_of_lcd_write:	
   982                           
   983                           	psect	text6
   984  06A6                     __ptext6:	
   985 ;; *************** function _Delay20us *****************
   986 ;; Defined at:
   987 ;;		line 99 in file "lcd4bits.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  next            1    1[COMMON] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         1       0       0       0       0
  1003 ;;      Temps:          1       0       0       0       0
  1004 ;;      Totals:         2       0       0       0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_lcd_write
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _Delay20us
  1016  06A6                     _Delay20us:	
  1017  06A6                     l660:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  1020                           
  1021                           
  1022                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  1023  06A6  01F1               	clrf	Delay20us@next
  1024  06A7                     l666:	
  1025  06A7  3001               	movlw	1
  1026  06A8  00F0               	movwf	??_Delay20us
  1027  06A9  0870               	movf	??_Delay20us,w
  1028  06AA  07F1               	addwf	Delay20us@next,f
  1029  06AB                     l668:	
  1030  06AB  3008               	movlw	8
  1031  06AC  0271               	subwf	Delay20us@next,w
  1032  06AD  1C03               	skipc
  1033  06AE  2EB0               	goto	u11
  1034  06AF  2EB1               	goto	u10
  1035  06B0                     u11:	
  1036  06B0  2EA7               	goto	l666
  1037  06B1                     u10:	
  1038  06B1                     l47:	
  1039  06B1  0008               	return
  1040  06B2                     __end_of_Delay20us:	
  1041                           
  1042                           	psect	text7
  1043  06D8                     __ptext7:	
  1044 ;; *************** function _DelayMs *****************
  1045 ;; Defined at:
  1046 ;;		line 86 in file "lcd4bits.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  millis          2    0[COMMON] unsigned int 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         2       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         2       0       0       0       0
  1064 ;;Total ram usage:        2 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;;		_lcd_clear
  1071 ;;		_lcd_init
  1072 ;;		_lcd_goto
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _DelayMs
  1078  06D8                     _DelayMs:	
  1079  06D8                     l752:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  1082                           
  1083                           
  1084                           ;lcd4bits.c: 87:     while (millis != 0) {
  1085  06D8  2EE8               	goto	l760
  1086  06D9                     l754:	
  1087                           
  1088                           ;lcd4bits.c: 88:         TMR0 = 100;
  1089  06D9  3064               	movlw	100
  1090  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1091  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1092  06DC  0081               	movwf	1	;volatile
  1093  06DD                     l756:	
  1094                           
  1095                           ;lcd4bits.c: 89:         T0IF = 0;
  1096  06DD  110B               	bcf	11,2	;volatile
  1097  06DE                     l38:	
  1098                           ;lcd4bits.c: 90:         while(T0IF == 0);
  1099                           
  1100  06DE  1D0B               	btfss	11,2	;volatile
  1101  06DF  2EE1               	goto	u61
  1102  06E0  2EE2               	goto	u60
  1103  06E1                     u61:	
  1104  06E1  2EDE               	goto	l38
  1105  06E2                     u60:	
  1106  06E2                     l758:	
  1107                           
  1108                           ;lcd4bits.c: 91:         millis--;
  1109  06E2  3001               	movlw	1
  1110  06E3  02F0               	subwf	DelayMs@millis,f
  1111  06E4  3000               	movlw	0
  1112  06E5  1C03               	skipc
  1113  06E6  03F1               	decf	DelayMs@millis+1,f
  1114  06E7  02F1               	subwf	DelayMs@millis+1,f
  1115  06E8                     l760:	
  1116                           
  1117                           ;lcd4bits.c: 87:     while (millis != 0) {
  1118  06E8  0870               	movf	DelayMs@millis,w
  1119  06E9  0471               	iorwf	DelayMs@millis+1,w
  1120  06EA  1D03               	btfss	3,2
  1121  06EB  2EED               	goto	u71
  1122  06EC  2EEE               	goto	u70
  1123  06ED                     u71:	
  1124  06ED  2ED9               	goto	l754
  1125  06EE                     u70:	
  1126  06EE                     l42:	
  1127  06EE  0008               	return
  1128  06EF                     __end_of_DelayMs:	
  1129  007E                     btemp	set	126	;btemp
  1130  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _lcd_putch->_lcd_write
    _lcd_init->_lcd_clear
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8662
                            _DelayMs
                          _lcd_clear
                           _lcd_init
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _lcd_putch                                            4     2      2    1662
                                              8 COMMON     4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    4250
                                             10 COMMON     3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    2119
                                              8 COMMON     2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            6     3      3    1314
                                              2 COMMON     6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (3) _Delay20us                                            2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DelayMs                                              2     0      2     631
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_putch
     _lcd_write
       _Delay20us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 20:47:25 2020

            __CFG_CP$OFF 0000                       l33 06A5                       l42 06EE  
                     l50 0780                       l53 06D7                       l38 06DE  
                     l62 06C1                       l47 06B1                       l68 0736  
                     u10 06B1                       u11 06B0                       u60 06E2  
                     u61 06E1                       u70 06EE                       u71 06ED  
                     u85 075B                      l800 0797                      l810 07C6  
                    l802 07A0                      l660 06A6                      l812 07D0  
                    l804 07AA                      l814 07D9                      l806 07B3  
                    l760 06E8                      l752 06D8                      l816 07E3  
                    l808 07BD                      l754 06D9                      l666 06A7  
                    l770 076C                      l762 0738                      l756 06DD  
                    l668 06AB                      l764 0744                      l772 06C2  
                    l780 06FA                      l758 06E2                      l766 0749  
                    l774 06CE                      l694 069E                      l782 0703  
                    l790 06B3                      l768 0758                      l696 06A4  
                    l784 0711                      l776 06EF                      l792 0781  
                    l786 071F                      l778 06F4                      l794 0784  
                    l788 0728                      l796 0785                      l798 078E  
           __CFG_CPD$OFF 0000                      _SCS 0478                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
          lcd_clear@port 0078                     _T0IF 005A                     _TMR0 0001  
           __CFG_WRT$OFF 0000                     _main 0781                     btemp 007E  
           lcd_init@port 007A                     start 0000            __CFG_IESO$OFF 0000  
        __end_of_DelayMs 06EF            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTD 0008                    _TRISD 0088  
         __CFG_FCMEN$OFF 0000           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E            DelayMs@millis 0070          __initialization 07F0  
           __end_of_main 07F0       __size_of_Delay20us 000C                   ??_main 007D  
              ??_DelayMs 0072           __CFG_PWRTE$OFF 0000         __end_of_lcd_init 0737  
          lcd_putch@port 0078        __end_of_Delay20us 06B2  __end_of__initialization 07FC  
          lcd_write@mode 0077            lcd_write@port 0073           __pcstackCOMMON 0070  
           __pidataBANK0 069C       __size_of_lcd_clear 0016       __size_of_lcd_putch 0010  
     __size_of_lcd_write 004A               __pmaintext 0781       __size_of_tmr0_init 0008  
              ?_lcd_init 007A                  _DelayMs 06D8        __end_of_lcd_clear 06D8  
      __end_of_lcd_putch 06C2        __end_of_lcd_write 0781                  __ptext1 06B2  
                __ptext2 06EF                  __ptext3 069E                  __ptext4 06C2  
                __ptext5 0737                  __ptext6 06A6                  __ptext7 06D8  
             ??_lcd_init 007C     end_of_initialization 07FC        __end_of_tmr0_init 06A6  
              _Delay20us 06A6      start_initialization 07F0               ?_Delay20us 0070  
            __pdataBANK0 0020                ___latbits 0002                 ?_DelayMs 0070  
      __size_of_lcd_init 0048                _gameboard 0020                _lcd_clear 06C2  
              _lcd_putch 06B2                _lcd_write 0737              ??_Delay20us 0070  
              _tmr0_init 069E               ?_lcd_clear 0078               ?_lcd_putch 0078  
             ?_lcd_write 0072         __size_of_DelayMs 0017               ?_tmr0_init 0070  
      __CFG_BOR4V$BOR21V 0000                 _lcd_init 06EF            __size_of_main 006F  
     lcd_putch@character 007B              ??_lcd_clear 007A              ??_lcd_putch 007A  
            ??_lcd_write 0075            Delay20us@next 0071              ??_tmr0_init 0070  
             _OPTION_REG 0081         lcd_write@CmdChar 0072  
