

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 16:18:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.10
    65                           ; Generated 31/07/2019 GMT
    66                           ; 
    67                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F887 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0086                     	;# 
   136  0087                     	;# 
   137  0088                     	;# 
   138  0089                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  0105                     	;# 
   162  0107                     	;# 
   163  0108                     	;# 
   164  0109                     	;# 
   165  010C                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  0185                     	;# 
   171  0187                     	;# 
   172  0188                     	;# 
   173  0189                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  008F                     	;# 
   221  0090                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  0105                     	;# 
   240  0107                     	;# 
   241  0108                     	;# 
   242  0109                     	;# 
   243  010C                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  0185                     	;# 
   249  0187                     	;# 
   250  0188                     	;# 
   251  0189                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  008F                     	;# 
   299  0090                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0093                     	;# 
   305  0094                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0097                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  0105                     	;# 
   318  0107                     	;# 
   319  0108                     	;# 
   320  0109                     	;# 
   321  010C                     	;# 
   322  010C                     	;# 
   323  010D                     	;# 
   324  010E                     	;# 
   325  010F                     	;# 
   326  0185                     	;# 
   327  0187                     	;# 
   328  0188                     	;# 
   329  0189                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332                           
   333                           	psect	idataCOMMON
   334  0003                     __pidataCOMMON:	
   335                           
   336                           ;initializer for _my_turn
   337  0003  3401               	retlw	1
   338                           
   339                           	psect	idataBANK0
   340  02FC                     __pidataBANK0:	
   341                           
   342                           ;initializer for _scoreboard
   343  02FC  3408               	retlw	8
   344  02FD  3400               	retlw	0
   345                           
   346                           ;initializer for _gameboard
   347  02FE  3405               	retlw	5
   348  02FF  3400               	retlw	0
   349                           
   350                           	psect	idataBANK1
   351  127A                     __pidataBANK1:	
   352                           
   353                           ;initializer for end_screen@F1373
   354  127A  3400               	retlw	0
   355  127B  3403               	retlw	3
   356  127C  3401               	retlw	1
   357  127D  3404               	retlw	4
   358  127E  3402               	retlw	2
   359  127F  3405               	retlw	5
   360                           
   361                           	psect	stringtext
   362  0300                     __pstringtext:	
   363  0300                     stringtab:	
   364  0300                     __stringtab:	
   365                           
   366                           ;	String table - string pointers are 2 bytes each
   367  0300  1BFF               	btfsc	btemp+1,7
   368  0301  2B0A               	ljmp	stringcode
   369  0302  1383               	bcf	3,7
   370  0303  187F               	btfsc	btemp+1,0
   371  0304  1783               	bsf	3,7
   372  0305  0800               	movf	0,w
   373  0306  0A84               	incf	4,f
   374  0307  1903               	skipnz
   375  0308  0AFF               	incf	btemp+1,f
   376  0309  0008               	return
   377  030A                     stringcode:	
   378  030A  087F               	movf	btemp+1,w
   379  030B  397F               	andlw	127
   380  030C  008A               	movwf	10
   381  030D  0804               	movf	4,w
   382  030E  0A84               	incf	4,f
   383  030F  1903               	skipnz
   384  0310  0AFF               	incf	btemp+1,f
   385  0311  0082               	movwf	2
   386  0312                     __stringbase:	
   387  0312                     __end_of__stringtab:	
   388  0312                     make_custom_chars@PIC:	
   389  0312  3418               	retlw	24
   390  0313  3418               	retlw	24
   391  0314  3414               	retlw	20
   392  0315  3404               	retlw	4
   393  0316  3404               	retlw	4
   394  0317  3403               	retlw	3
   395  0318  3402               	retlw	2
   396  0319  3403               	retlw	3
   397  031A                     __end_ofmake_custom_chars@PIC:	
   398  031A                     make_custom_chars@RH:	
   399  031A  341C               	retlw	28
   400  031B  3414               	retlw	20
   401  031C  3418               	retlw	24
   402  031D  3414               	retlw	20
   403  031E  3400               	retlw	0
   404  031F  3405               	retlw	5
   405  0320  3407               	retlw	7
   406  0321  3405               	retlw	5
   407  0322                     __end_ofmake_custom_chars@RH:	
   408  0322                     make_custom_chars@skull:	
   409  0322  340E               	retlw	14
   410  0323  3415               	retlw	21
   411  0324  3415               	retlw	21
   412  0325  341F               	retlw	31
   413  0326  340A               	retlw	10
   414  0327  340E               	retlw	14
   415  0328  340E               	retlw	14
   416  0329  3400               	retlw	0
   417  032A                     __end_ofmake_custom_chars@skull:	
   418  032A                     make_custom_chars@club:	
   419  032A  3400               	retlw	0
   420  032B  340E               	retlw	14
   421  032C  340E               	retlw	14
   422  032D  341F               	retlw	31
   423  032E  341F               	retlw	31
   424  032F  341F               	retlw	31
   425  0330  3404               	retlw	4
   426  0331  340E               	retlw	14
   427  0332                     __end_ofmake_custom_chars@club:	
   428  0332                     make_custom_chars@spade:	
   429  0332  3400               	retlw	0
   430  0333  3404               	retlw	4
   431  0334  340E               	retlw	14
   432  0335  341F               	retlw	31
   433  0336  341F               	retlw	31
   434  0337  340E               	retlw	14
   435  0338  3404               	retlw	4
   436  0339  340E               	retlw	14
   437  033A                     __end_ofmake_custom_chars@spade:	
   438  033A                     make_custom_chars@heart:	
   439  033A  3400               	retlw	0
   440  033B  3400               	retlw	0
   441  033C  340A               	retlw	10
   442  033D  341F               	retlw	31
   443  033E  341F               	retlw	31
   444  033F  340E               	retlw	14
   445  0340  3404               	retlw	4
   446  0341  3400               	retlw	0
   447  0342                     __end_ofmake_custom_chars@heart:	
   448  0342                     make_custom_chars@diamond:	
   449  0342  3400               	retlw	0
   450  0343  3404               	retlw	4
   451  0344  340E               	retlw	14
   452  0345  341F               	retlw	31
   453  0346  340E               	retlw	14
   454  0347  3404               	retlw	4
   455  0348  3400               	retlw	0
   456  0349  3400               	retlw	0
   457  034A                     __end_ofmake_custom_chars@diamond:	
   458  034A                     make_custom_chars@smile:	
   459  034A  3400               	retlw	0
   460  034B  340A               	retlw	10
   461  034C  340A               	retlw	10
   462  034D  3400               	retlw	0
   463  034E  3415               	retlw	21
   464  034F  3411               	retlw	17
   465  0350  340E               	retlw	14
   466  0351  3400               	retlw	0
   467  0352                     __end_ofmake_custom_chars@smile:	
   468  0015                     _CCPR1	set	21
   469  000E                     _TMR1	set	14
   470  001B                     _CCPR2	set	27
   471  001E                     _ADRESH	set	30
   472  001F                     _ADCON0	set	31
   473  0006                     _PORTB	set	6
   474  0012                     _T2CON	set	18
   475  0011                     _TMR2	set	17
   476  0007                     _PORTC	set	7
   477  0001                     _TMR0	set	1
   478  0008                     _PORTD	set	8
   479  0005                     _PORTA	set	5
   480  0066                     _ADIF	set	102
   481  005E                     _PEIE	set	94
   482  005F                     _GIE	set	95
   483  00E8                     _CCP2M0	set	232
   484  00E9                     _CCP2M1	set	233
   485  00EA                     _CCP2M2	set	234
   486  00EB                     _CCP2M3	set	235
   487  0080                     _TMR1ON	set	128
   488  0086                     _TMR1GE	set	134
   489  0085                     _T1CKPS1	set	133
   490  0084                     _T1CKPS0	set	132
   491  0081                     _TMR1CS	set	129
   492  00B8                     _CCP1M0	set	184
   493  00B9                     _CCP1M1	set	185
   494  00BA                     _CCP1M2	set	186
   495  00BB                     _CCP1M3	set	187
   496  0061                     _TMR2IF	set	97
   497  0062                     _CCP1IF	set	98
   498  0032                     _RB2	set	50
   499  003F                     _RC7	set	63
   500  003E                     _RC6	set	62
   501  003D                     _RC5	set	61
   502  0068                     _CCP2IF	set	104
   503  0035                     _RB5	set	53
   504  00F9                     _GO	set	249
   505  005A                     _T0IF	set	90
   506  009E                     _ADRESL	set	158
   507  009F                     _ADCON1	set	159
   508  0086                     _TRISB	set	134
   509  0095                     _WPUB	set	149
   510  0092                     _PR2	set	146
   511  0087                     _TRISC	set	135
   512  0085                     _TRISA	set	133
   513  0088                     _TRISD	set	136
   514  0081                     _OPTION_REG	set	129
   515  0466                     _ADIE	set	1126
   516  040F                     _nRBPU	set	1039
   517  0461                     _TMR2IE	set	1121
   518  0468                     _CCP2IE	set	1128
   519  0478                     _SCS	set	1144
   520  0189                     _ANSELH	set	393
   521  0188                     _ANSEL	set	392
   522  0352                     STR_7:	
   523  0352  344E               	retlw	78	;'N'
   524  0353  346F               	retlw	111	;'o'
   525  0354  3474               	retlw	116	;'t'
   526  0355  3420               	retlw	32	;' '
   527  0356  3476               	retlw	118	;'v'
   528  0357  3465               	retlw	101	;'e'
   529  0358  3472               	retlw	114	;'r'
   530  0359  3479               	retlw	121	;'y'
   531  035A  3420               	retlw	32	;' '
   532  035B  3467               	retlw	103	;'g'
   533  035C  346F               	retlw	111	;'o'
   534  035D  346F               	retlw	111	;'o'
   535  035E  3464               	retlw	100	;'d'
   536  035F  342E               	retlw	46	;'.'
   537  0360  342E               	retlw	46	;'.'
   538  0361  342E               	retlw	46	;'.'
   539  0362  3400               	retlw	0
   540  0363                     STR_22:	
   541  0363  3450               	retlw	80	;'P'
   542  0364  3472               	retlw	114	;'r'
   543  0365  3465               	retlw	101	;'e'
   544  0366  3473               	retlw	115	;'s'
   545  0367  3473               	retlw	115	;'s'
   546  0368  3420               	retlw	32	;' '
   547  0369  3474               	retlw	116	;'t'
   548  036A  3468               	retlw	104	;'h'
   549  036B  3465               	retlw	101	;'e'
   550  036C  3420               	retlw	32	;' '
   551  036D  3462               	retlw	98	;'b'
   552  036E  3475               	retlw	117	;'u'
   553  036F  3474               	retlw	116	;'t'
   554  0370  3474               	retlw	116	;'t'
   555  0371  346F               	retlw	111	;'o'
   556  0372  346E               	retlw	110	;'n'
   557  0373  3400               	retlw	0
   558  0374                     STR_13:	
   559  0374  3420               	retlw	32	;' '
   560  0375  3441               	retlw	65	;'A'
   561  0376  346C               	retlw	108	;'l'
   562  0377  346D               	retlw	109	;'m'
   563  0378  346F               	retlw	111	;'o'
   564  0379  3473               	retlw	115	;'s'
   565  037A  3474               	retlw	116	;'t'
   566  037B  3420               	retlw	32	;' '
   567  037C  3474               	retlw	116	;'t'
   568  037D  3468               	retlw	104	;'h'
   569  037E  3465               	retlw	101	;'e'
   570  037F  3472               	retlw	114	;'r'
   571  0380  3465               	retlw	101	;'e'
   572  0381  3421               	retlw	33	;'!'
   573  0382  3421               	retlw	33	;'!'
   574  0383  3400               	retlw	0
   575  0384                     STR_30:	
   576  0384  3420               	retlw	32	;' '
   577  0385  3443               	retlw	67	;'C'
   578  0386  346F               	retlw	111	;'o'
   579  0387  346E               	retlw	110	;'n'
   580  0388  3463               	retlw	99	;'c'
   581  0389  3465               	retlw	101	;'e'
   582  038A  346E               	retlw	110	;'n'
   583  038B  3474               	retlw	116	;'t'
   584  038C  3472               	retlw	114	;'r'
   585  038D  3461               	retlw	97	;'a'
   586  038E  3474               	retlw	116	;'t'
   587  038F  3469               	retlw	105	;'i'
   588  0390  346F               	retlw	111	;'o'
   589  0391  346E               	retlw	110	;'n'
   590  0392  3421               	retlw	33	;'!'
   591  0393  3400               	retlw	0
   592  0394                     STR_18:	
   593  0394  3420               	retlw	32	;' '
   594  0395  3453               	retlw	83	;'S'
   595  0396  3469               	retlw	105	;'i'
   596  0397  346D               	retlw	109	;'m'
   597  0398  346F               	retlw	111	;'o'
   598  0399  346E               	retlw	110	;'n'
   599  039A  3420               	retlw	32	;' '
   600  039B  3453               	retlw	83	;'S'
   601  039C  3461               	retlw	97	;'a'
   602  039D  3479               	retlw	121	;'y'
   603  039E  3473               	retlw	115	;'s'
   604  039F  342E               	retlw	46	;'.'
   605  03A0  342E               	retlw	46	;'.'
   606  03A1  342E               	retlw	46	;'.'
   607  03A2  342E               	retlw	46	;'.'
   608  03A3  3400               	retlw	0
   609  03A4                     STR_2:	
   610  03A4  3420               	retlw	32	;' '
   611  03A5  3420               	retlw	32	;' '
   612  03A6  3443               	retlw	67	;'C'
   613  03A7  346F               	retlw	111	;'o'
   614  03A8  346E               	retlw	110	;'n'
   615  03A9  3463               	retlw	99	;'c'
   616  03AA  3465               	retlw	101	;'e'
   617  03AB  346E               	retlw	110	;'n'
   618  03AC  3474               	retlw	116	;'t'
   619  03AD  3472               	retlw	114	;'r'
   620  03AE  3461               	retlw	97	;'a'
   621  03AF  3474               	retlw	116	;'t'
   622  03B0  3469               	retlw	105	;'i'
   623  03B1  346F               	retlw	111	;'o'
   624  03B2  346E               	retlw	110	;'n'
   625  03B3  3400               	retlw	0
   626  03B4                     STR_1:	
   627  03B4  3420               	retlw	32	;' '
   628  03B5  3447               	retlw	71	;'G'
   629  03B6  3461               	retlw	97	;'a'
   630  03B7  346D               	retlw	109	;'m'
   631  03B8  3465               	retlw	101	;'e'
   632  03B9  3420               	retlw	32	;' '
   633  03BA  3453               	retlw	83	;'S'
   634  03BB  3465               	retlw	101	;'e'
   635  03BC  346C               	retlw	108	;'l'
   636  03BD  3465               	retlw	101	;'e'
   637  03BE  3463               	retlw	99	;'c'
   638  03BF  3474               	retlw	116	;'t'
   639  03C0  3469               	retlw	105	;'i'
   640  03C1  346F               	retlw	111	;'o'
   641  03C2  346E               	retlw	110	;'n'
   642  03C3  3400               	retlw	0
   643  03C4                     STR_15:	
   644  03C4  3420               	retlw	32	;' '
   645  03C5  3420               	retlw	32	;' '
   646  03C6  3420               	retlw	32	;' '
   647  03C7  3459               	retlw	89	;'Y'
   648  03C8  346F               	retlw	111	;'o'
   649  03C9  3475               	retlw	117	;'u'
   650  03CA  3420               	retlw	32	;' '
   651  03CB  3477               	retlw	119	;'w'
   652  03CC  3469               	retlw	105	;'i'
   653  03CD  346E               	retlw	110	;'n'
   654  03CE  3421               	retlw	33	;'!'
   655  03CF  3421               	retlw	33	;'!'
   656  03D0  3421               	retlw	33	;'!'
   657  03D1  3400               	retlw	0
   658  03D2                     STR_28:	
   659  03D2  3420               	retlw	32	;' '
   660  03D3  3420               	retlw	32	;' '
   661  03D4  3420               	retlw	32	;' '
   662  03D5  344E               	retlw	78	;'N'
   663  03D6  344F               	retlw	79	;'O'
   664  03D7  3420               	retlw	32	;' '
   665  03D8  3457               	retlw	87	;'W'
   666  03D9  3449               	retlw	73	;'I'
   667  03DA  344E               	retlw	78	;'N'
   668  03DB  344E               	retlw	78	;'N'
   669  03DC  3445               	retlw	69	;'E'
   670  03DD  3452               	retlw	82	;'R'
   671  03DE  3421               	retlw	33	;'!'
   672  03DF  3400               	retlw	0
   673  03E0                     STR_11:	
   674  03E0  3420               	retlw	32	;' '
   675  03E1  3420               	retlw	32	;' '
   676  03E2  3420               	retlw	32	;' '
   677  03E3  3447               	retlw	71	;'G'
   678  03E4  3472               	retlw	114	;'r'
   679  03E5  3465               	retlw	101	;'e'
   680  03E6  3461               	retlw	97	;'a'
   681  03E7  3474               	retlw	116	;'t'
   682  03E8  3420               	retlw	32	;' '
   683  03E9  346A               	retlw	106	;'j'
   684  03EA  346F               	retlw	111	;'o'
   685  03EB  3462               	retlw	98	;'b'
   686  03EC  3421               	retlw	33	;'!'
   687  03ED  3400               	retlw	0
   688  03EE                     STR_5:	
   689  03EE  3420               	retlw	32	;' '
   690  03EF  3420               	retlw	32	;' '
   691  03F0  3420               	retlw	32	;' '
   692  03F1  3459               	retlw	89	;'Y'
   693  03F2  346F               	retlw	111	;'o'
   694  03F3  3475               	retlw	117	;'u'
   695  03F4  3420               	retlw	32	;' '
   696  03F5  3473               	retlw	115	;'s'
   697  03F6  3474               	retlw	116	;'t'
   698  03F7  3469               	retlw	105	;'i'
   699  03F8  346E               	retlw	110	;'n'
   700  03F9  346B               	retlw	107	;'k'
   701  03FA  3421               	retlw	33	;'!'
   702  03FB  3400               	retlw	0
   703  03FC                     STR_17:	
   704  03FC  3420               	retlw	32	;' '
   705  03FD  3420               	retlw	32	;' '
   706  03FE  3420               	retlw	32	;' '
   707  03FF  3479               	retlw	121	;'y'
   708  0400  346F               	retlw	111	;'o'
   709  0401  3475               	retlw	117	;'u'
   710  0402  3472               	retlw	114	;'r'
   711  0403  3420               	retlw	32	;' '
   712  0404  3474               	retlw	116	;'t'
   713  0405  3475               	retlw	117	;'u'
   714  0406  3472               	retlw	114	;'r'
   715  0407  346E               	retlw	110	;'n'
   716  0408  3421               	retlw	33	;'!'
   717  0409  3400               	retlw	0
   718  040A                     STR_4:	
   719  040A  3420               	retlw	32	;' '
   720  040B  3420               	retlw	32	;' '
   721  040C  3420               	retlw	32	;' '
   722  040D  3447               	retlw	71	;'G'
   723  040E  3461               	retlw	97	;'a'
   724  040F  346D               	retlw	109	;'m'
   725  0410  3465               	retlw	101	;'e'
   726  0411  3420               	retlw	32	;' '
   727  0412  344F               	retlw	79	;'O'
   728  0413  3476               	retlw	118	;'v'
   729  0414  3465               	retlw	101	;'e'
   730  0415  3472               	retlw	114	;'r'
   731  0416  3421               	retlw	33	;'!'
   732  0417  3400               	retlw	0
   733  0418                     STR_21:	
   734  0418  3420               	retlw	32	;' '
   735  0419  3420               	retlw	32	;' '
   736  041A  3420               	retlw	32	;' '
   737  041B  3453               	retlw	83	;'S'
   738  041C  3469               	retlw	105	;'i'
   739  041D  346D               	retlw	109	;'m'
   740  041E  346F               	retlw	111	;'o'
   741  041F  346E               	retlw	110	;'n'
   742  0420  3420               	retlw	32	;' '
   743  0421  3453               	retlw	83	;'S'
   744  0422  3461               	retlw	97	;'a'
   745  0423  3479               	retlw	121	;'y'
   746  0424  3473               	retlw	115	;'s'
   747  0425  3400               	retlw	0
   748  0426                     STR_24:	
   749  0426  3420               	retlw	32	;' '
   750  0427  3420               	retlw	32	;' '
   751  0428  3420               	retlw	32	;' '
   752  0429  3420               	retlw	32	;' '
   753  042A  3457               	retlw	87	;'W'
   754  042B  3449               	retlw	73	;'I'
   755  042C  344E               	retlw	78	;'N'
   756  042D  344E               	retlw	78	;'N'
   757  042E  3445               	retlw	69	;'E'
   758  042F  3452               	retlw	82	;'R'
   759  0430  3421               	retlw	33	;'!'
   760  0431  3421               	retlw	33	;'!'
   761  0432  3400               	retlw	0
   762  0433                     STR_9:	
   763  0433  3420               	retlw	32	;' '
   764  0434  3420               	retlw	32	;' '
   765  0435  3420               	retlw	32	;' '
   766  0436  3420               	retlw	32	;' '
   767  0437  344E               	retlw	78	;'N'
   768  0438  346F               	retlw	111	;'o'
   769  0439  3474               	retlw	116	;'t'
   770  043A  3420               	retlw	32	;' '
   771  043B  3462               	retlw	98	;'b'
   772  043C  3461               	retlw	97	;'a'
   773  043D  3464               	retlw	100	;'d'
   774  043E  342E               	retlw	46	;'.'
   775  043F  3400               	retlw	0
   776  0440                     STR_25:	
   777  0440  3420               	retlw	32	;' '
   778  0441  3420               	retlw	32	;' '
   779  0442  3420               	retlw	32	;' '
   780  0443  3420               	retlw	32	;' '
   781  0444  3450               	retlw	80	;'P'
   782  0445  344C               	retlw	76	;'L'
   783  0446  3441               	retlw	65	;'A'
   784  0447  3459               	retlw	89	;'Y'
   785  0448  3445               	retlw	69	;'E'
   786  0449  3452               	retlw	82	;'R'
   787  044A  3420               	retlw	32	;' '
   788  044B  3431               	retlw	49	;'1'
   789  044C  3400               	retlw	0
   790  044D                     STR_27:	
   791  044D  3420               	retlw	32	;' '
   792  044E  3420               	retlw	32	;' '
   793  044F  3420               	retlw	32	;' '
   794  0450  3420               	retlw	32	;' '
   795  0451  3450               	retlw	80	;'P'
   796  0452  344C               	retlw	76	;'L'
   797  0453  3441               	retlw	65	;'A'
   798  0454  3459               	retlw	89	;'Y'
   799  0455  3445               	retlw	69	;'E'
   800  0456  3452               	retlw	82	;'R'
   801  0457  3420               	retlw	32	;' '
   802  0458  3432               	retlw	50	;'2'
   803  0459  3400               	retlw	0
   804  045A                     STR_16:	
   805  045A  3420               	retlw	32	;' '
   806  045B  3420               	retlw	32	;' '
   807  045C  3420               	retlw	32	;' '
   808  045D  3420               	retlw	32	;' '
   809  045E  344E               	retlw	78	;'N'
   810  045F  346F               	retlw	111	;'o'
   811  0460  3477               	retlw	119	;'w'
   812  0461  3420               	retlw	32	;' '
   813  0462  3469               	retlw	105	;'i'
   814  0463  3474               	retlw	116	;'t'
   815  0464  3427               	retlw	39	;'''
   816  0465  3473               	retlw	115	;'s'
   817  0466  3400               	retlw	0
   818  0467                     STR_23:	
   819  0467  3420               	retlw	32	;' '
   820  0468  3420               	retlw	32	;' '
   821  0469  3420               	retlw	32	;' '
   822  046A  3420               	retlw	32	;' '
   823  046B  3474               	retlw	116	;'t'
   824  046C  346F               	retlw	111	;'o'
   825  046D  3420               	retlw	32	;' '
   826  046E  3473               	retlw	115	;'s'
   827  046F  3474               	retlw	116	;'t'
   828  0470  3461               	retlw	97	;'a'
   829  0471  3472               	retlw	114	;'r'
   830  0472  3474               	retlw	116	;'t'
   831  0473  3400               	retlw	0
   832  0474                     STR_19:	
   833  0474  3420               	retlw	32	;' '
   834  0475  3420               	retlw	32	;' '
   835  0476  3420               	retlw	32	;' '
   836  0477  3420               	retlw	32	;' '
   837  0478  3420               	retlw	32	;' '
   838  0479  3453               	retlw	83	;'S'
   839  047A  3463               	retlw	99	;'c'
   840  047B  346F               	retlw	111	;'o'
   841  047C  3472               	retlw	114	;'r'
   842  047D  3465               	retlw	101	;'e'
   843  047E  343A               	retlw	58	;':'
   844  047F  3400               	retlw	0
   845  0480                     STR_29:	
   846  0480  3420               	retlw	32	;' '
   847  0481  3420               	retlw	32	;' '
   848  0482  3420               	retlw	32	;' '
   849  0483  3420               	retlw	32	;' '
   850  0484  3420               	retlw	32	;' '
   851  0485  3420               	retlw	32	;' '
   852  0486  3454               	retlw	84	;'T'
   853  0487  3449               	retlw	73	;'I'
   854  0488  3445               	retlw	69	;'E'
   855  0489  3444               	retlw	68	;'D'
   856  048A  3400               	retlw	0
   857  048B                     STR_20:	
   858  048B  3420               	retlw	32	;' '
   859  048C  3420               	retlw	32	;' '
   860  048D  3452               	retlw	82	;'R'
   861  048E  346F               	retlw	111	;'o'
   862  048F  3475               	retlw	117	;'u'
   863  0490  346E               	retlw	110	;'n'
   864  0491  3464               	retlw	100	;'d'
   865  0492  3473               	retlw	115	;'s'
   866  0493  3400               	retlw	0
   867  0494                     STR_35:	
   868  0494  3420               	retlw	32	;' '
   869  0495  3420               	retlw	32	;' '
   870  0496  3450               	retlw	80	;'P'
   871  0497  3432               	retlw	50	;'2'
   872  0498  343A               	retlw	58	;':'
   873  0499  3420               	retlw	32	;' '
   874  049A  3400               	retlw	0
   875  049B                     STR_34:	
   876  049B  3420               	retlw	32	;' '
   877  049C  3450               	retlw	80	;'P'
   878  049D  3431               	retlw	49	;'1'
   879  049E  343A               	retlw	58	;':'
   880  049F  3420               	retlw	32	;' '
   881  04A0  3400               	retlw	0
   882  0426                     
   883                           ; #config settings
   884  0000                     
   885                           	psect	cinit
   886  0011                     start_initialization:	
   887  0011                     __initialization:	
   888                           
   889                           ; Initialize objects allocated to BANK1
   890  0011  1383               	bcf	3,7	;select IRP bank0
   891  0012  30DF               	movlw	low (__pdataBANK1+6)
   892  0013  00FD               	movwf	btemp+-1
   893  0014  3012               	movlw	high __pidataBANK1
   894  0015  00FE               	movwf	btemp
   895  0016  307A               	movlw	low __pidataBANK1
   896  0017  00FF               	movwf	btemp+1
   897  0018  30D9               	movlw	low __pdataBANK1
   898  0019  0084               	movwf	4
   899  001A  120A  118A  22ED  120A  118A  	fcall	init_ram0
   900                           
   901                           ; Initialize objects allocated to BANK0
   902  001F  306E               	movlw	low (__pdataBANK0+4)
   903  0020  00FD               	movwf	btemp+-1
   904  0021  3002               	movlw	high __pidataBANK0
   905  0022  00FE               	movwf	btemp
   906  0023  30FC               	movlw	low __pidataBANK0
   907  0024  00FF               	movwf	btemp+1
   908  0025  306A               	movlw	low __pdataBANK0
   909  0026  0084               	movwf	4
   910  0027  120A  118A  22ED  120A  118A  	fcall	init_ram0
   911                           
   912                           ; Initialize objects allocated to COMMON
   913  002C  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   914  0031  00FB               	movwf	__pdataCOMMON& (0+127)
   915                           
   916                           ; Clear objects allocated to BANK3
   917  0032  1783               	bsf	3,7	;select IRP bank2
   918  0033  3090               	movlw	low __pbssBANK3
   919  0034  0084               	movwf	4
   920  0035  30D0               	movlw	low (__pbssBANK3+64)
   921  0036  160A  118A  2280  120A  118A  	fcall	clear_ram0
   922                           
   923                           ; Clear objects allocated to BANK1
   924  003B  1383               	bcf	3,7	;select IRP bank0
   925  003C  30A0               	movlw	low __pbssBANK1
   926  003D  0084               	movwf	4
   927  003E  30D9               	movlw	low (__pbssBANK1+57)
   928  003F  160A  118A  2280  120A  118A  	fcall	clear_ram0
   929                           
   930                           ; Clear objects allocated to BANK0
   931  0044  305B               	movlw	low __pbssBANK0
   932  0045  0084               	movwf	4
   933  0046  306A               	movlw	low (__pbssBANK0+15)
   934  0047  160A  118A  2280  120A  118A  	fcall	clear_ram0
   935                           
   936                           ; Clear objects allocated to COMMON
   937  004C  01F6               	clrf	__pbssCOMMON& (0+127)
   938  004D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   939  004E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   940  004F  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   941  0050  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   942  0051                     end_of_initialization:	
   943                           ;End of C runtime variable initialization code
   944                           
   945  0051                     __end_of__initialization:	
   946  0051  0183               	clrf	3
   947  0052  120A  118A  2CA1   	ljmp	_main	;jump to C main() function
   948                           
   949                           	psect	bssCOMMON
   950  0076                     __pbssCOMMON:	
   951  0076                     _tone_delay:	
   952  0076                     	ds	2
   953  0078                     _id_num:	
   954  0078                     	ds	1
   955  0079                     _received_char:	
   956  0079                     	ds	1
   957  007A                     _event_delay_count:	
   958  007A                     	ds	1
   959                           
   960                           	psect	dataCOMMON
   961  007B                     __pdataCOMMON:	
   962  007B                     _my_turn:	
   963  007B                     	ds	1
   964                           
   965                           	psect	bssBANK0
   966  005B                     __pbssBANK0:	
   967  005B                     _joystick_y_pos:	
   968  005B                     	ds	2
   969  005D                     _joystick_x_pos:	
   970  005D                     	ds	2
   971  005F                     _game_over:	
   972  005F                     	ds	1
   973  0060                     _current_player:	
   974  0060                     	ds	1
   975  0061                     _joystick_pressed:	
   976  0061                     	ds	1
   977  0062                     _selected_tile:	
   978  0062                     	ds	1
   979  0063                     _p2_score:	
   980  0063                     	ds	1
   981  0064                     _p1_score:	
   982  0064                     	ds	1
   983  0065                     _event_enabled:	
   984  0065                     	ds	1
   985  0066                     _delay_loops:	
   986  0066                     	ds	1
   987  0067                     _cursor_solid:	
   988  0067                     	ds	1
   989  0068                     _current_char:	
   990  0068                     	ds	1
   991  0069                     _cursor_pos:	
   992  0069                     	ds	1
   993                           
   994                           	psect	dataBANK0
   995  006A                     __pdataBANK0:	
   996  006A                     _scoreboard:	
   997  006A                     	ds	2
   998  006C                     _gameboard:	
   999  006C                     	ds	2
  1000                           
  1001                           	psect	bssBANK1
  1002  00A0                     __pbssBANK1:	
  1003  00A0                     _visible:	
  1004  00A0                     	ds	32
  1005  00C0                     _simon_says_pattern:	
  1006  00C0                     	ds	25
  1007                           
  1008                           	psect	dataBANK1
  1009  00D9                     __pdataBANK1:	
  1010  00D9                     end_screen@F1373:	
  1011  00D9                     	ds	6
  1012                           
  1013                           	psect	bssBANK3
  1014  0190                     __pbssBANK3:	
  1015  0190                     randomize_gameboard@F1396:	
  1016  0190                     	ds	32
  1017  01B0                     _board:	
  1018  01B0                     	ds	32
  1019                           
  1020                           	psect	inittext
  1021  02E9                     init_fetch0:	
  1022                           ;	Called with low address in FSR and high address in W
  1023                           
  1024  02E9  087E               	movf	btemp,w
  1025  02EA  008A               	movwf	10
  1026  02EB  087F               	movf	btemp+1,w
  1027  02EC  0082               	movwf	2
  1028  02ED                     init_ram0:	
  1029                           ;Called with:
  1030                           ;	high address of idata address in btemp 
  1031                           ;	low address of idata address in btemp+1 
  1032                           ;	low address of data in FSR
  1033                           ;	high address + 1 of data in btemp-1
  1034                           
  1035  02ED  120A  118A  22E9  120A  118A  	fcall	init_fetch0
  1036  02F2  0080               	movwf	0
  1037  02F3  0A84               	incf	4,f
  1038  02F4  0804               	movf	4,w
  1039  02F5  067D               	xorwf	btemp+-1,w
  1040  02F6  1903               	btfsc	3,2
  1041  02F7  3400               	retlw	0
  1042  02F8  0AFF               	incf	btemp+1,f
  1043  02F9  1903               	btfsc	3,2
  1044  02FA  0AFE               	incf	btemp,f
  1045  02FB  2AED               	goto	init_ram0
  1046                           
  1047                           	psect	clrtext
  1048  1280                     clear_ram0:	
  1049                           ;	Called with FSR containing the base address, and
  1050                           ;	W with the last address+1
  1051                           
  1052  1280  0064               	clrwdt	;clear the watchdog before getting into this loop
  1053  1281                     clrloop0:	
  1054  1281  0180               	clrf	0	;clear RAM location pointed to by FSR
  1055  1282  0A84               	incf	4,f	;increment pointer
  1056  1283  0604               	xorwf	4,w	;XOR with final address
  1057  1284  1903               	btfsc	3,2	;have we reached the end yet?
  1058  1285  3400               	retlw	0	;all done for this memory range, return
  1059  1286  0604               	xorwf	4,w	;XOR again to restore value
  1060  1287  2A81               	goto	clrloop0	;do the next byte
  1061                           
  1062                           	psect	cstackCOMMON
  1063  0070                     __pcstackCOMMON:	
  1064  0070                     ?_joystick_init:	
  1065  0070                     ?_time_init:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_concentration_gameboard_init:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_concentration_title_screen:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_concentration_game_loop:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_concentration_game_end:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_simon_says_title_screen:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_simon_says_game_loop:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_simon_says_game_end:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_display_simon_says_scoreboard:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_countdown:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_generate_pattern:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_play_pattern:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_simon_says_check_input:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_simon_says_get_input:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_turn_on_led:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_display_concentration_scoreboard:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_display_concentration_gameboard:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_get_current_char:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_randomize_gameboard:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_toggle_cursor:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_tmr0_init:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_Delay20us:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_main:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_make_custom_chars:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_get_cursor_index:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_check_for_match:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_interrupt_handler:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ??_interrupt_handler:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x0
  1151  0070                     	ds	5
  1152  0075                     interrupt_handler@current_analog:	
  1153                           
  1154                           ; 1 bytes @ 0x5
  1155  0075                     	ds	1
  1156                           
  1157                           	psect	cstackBANK0
  1158  0020                     __pcstackBANK0:	
  1159  0020                     ??_joystick_init:	
  1160  0020                     ??_time_init:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0020                     ??_turn_on_led:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0020                     ?_play_tone:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0020                     ??_tmr0_init:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0020                     ?_DelayMs:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0020                     ??_Delay20us:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0020                     ??_get_cursor_index:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0020                     ?___awmod:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0020                     get_cursor_index@cursor:	
  1185                           ; 2 bytes @ 0x0
  1186                           
  1187  0020                     DelayMs@millis:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0020                     play_tone@tone_period:	
  1191                           ; 2 bytes @ 0x0
  1192                           
  1193  0020                     ___awmod@divisor:	
  1194                           ; 2 bytes @ 0x0
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0x0
  1198  0020                     	ds	1
  1199  0021                     ??_get_current_char:	
  1200  0021                     Delay20us@next:	
  1201                           ; 1 bytes @ 0x1
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0x1
  1205  0021                     	ds	1
  1206  0022                     ??_DelayMs:	
  1207  0022                     ?_lcd_write:	
  1208                           ; 1 bytes @ 0x2
  1209                           
  1210  0022                     lcd_write@CmdChar:	
  1211                           ; 1 bytes @ 0x2
  1212                           
  1213  0022                     turn_on_led@color:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216  0022                     play_tone@duration_8ms:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219  0022                     ___awmod@dividend:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x2
  1224  0022                     	ds	1
  1225  0023                     ??_simon_says_get_input:	
  1226  0023                     ??_play_tone:	
  1227                           ; 1 bytes @ 0x3
  1228                           
  1229  0023                     lcd_write@port:	
  1230                           ; 1 bytes @ 0x3
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0x3
  1234  0023                     	ds	1
  1235  0024                     ??___awmod:	
  1236                           
  1237                           ; 1 bytes @ 0x4
  1238  0024                     	ds	1
  1239  0025                     ??_lcd_write:	
  1240  0025                     simon_says_get_input@current_input:	
  1241                           ; 1 bytes @ 0x5
  1242                           
  1243  0025                     ___awmod@counter:	
  1244                           ; 1 bytes @ 0x5
  1245                           
  1246                           
  1247                           ; 1 bytes @ 0x5
  1248  0025                     	ds	1
  1249  0026                     ___awmod@sign:	
  1250                           
  1251                           ; 1 bytes @ 0x6
  1252  0026                     	ds	1
  1253  0027                     ?___awdiv:	
  1254  0027                     lcd_write@mode:	
  1255                           ; 2 bytes @ 0x7
  1256                           
  1257  0027                     ___awdiv@divisor:	
  1258                           ; 1 bytes @ 0x7
  1259                           
  1260                           
  1261                           ; 2 bytes @ 0x7
  1262  0027                     	ds	1
  1263  0028                     ?_lcd_clear:	
  1264  0028                     ?_lcd_puts:	
  1265                           ; 1 bytes @ 0x8
  1266                           
  1267  0028                     ?_lcd_goto:	
  1268                           ; 1 bytes @ 0x8
  1269                           
  1270  0028                     ?_lcd_set_custom_char:	
  1271                           ; 1 bytes @ 0x8
  1272                           
  1273  0028                     lcd_clear@port:	
  1274                           ; 1 bytes @ 0x8
  1275                           
  1276  0028                     lcd_puts@string:	
  1277                           ; 2 bytes @ 0x8
  1278                           
  1279  0028                     lcd_goto@port:	
  1280                           ; 2 bytes @ 0x8
  1281                           
  1282  0028                     lcd_set_custom_char@data:	
  1283                           ; 2 bytes @ 0x8
  1284                           
  1285                           
  1286                           ; 2 bytes @ 0x8
  1287  0028                     	ds	1
  1288  0029                     ___awdiv@dividend:	
  1289                           
  1290                           ; 2 bytes @ 0x9
  1291  0029                     	ds	1
  1292  002A                     ??_lcd_clear:	
  1293  002A                     ??_lcd_goto:	
  1294                           ; 1 bytes @ 0xA
  1295                           
  1296  002A                     ?_lcd_init:	
  1297                           ; 1 bytes @ 0xA
  1298                           
  1299  002A                     lcd_set_custom_char@cg_address:	
  1300                           ; 1 bytes @ 0xA
  1301                           
  1302  002A                     lcd_puts@port:	
  1303                           ; 1 bytes @ 0xA
  1304                           
  1305  002A                     lcd_init@port:	
  1306                           ; 2 bytes @ 0xA
  1307                           
  1308                           
  1309                           ; 2 bytes @ 0xA
  1310  002A                     	ds	1
  1311  002B                     ??___awdiv:	
  1312  002B                     lcd_goto@position:	
  1313                           ; 1 bytes @ 0xB
  1314                           
  1315  002B                     lcd_set_custom_char@port:	
  1316                           ; 1 bytes @ 0xB
  1317                           
  1318                           
  1319                           ; 2 bytes @ 0xB
  1320  002B                     	ds	1
  1321  002C                     ??_lcd_puts:	
  1322  002C                     ??_lcd_init:	
  1323                           ; 1 bytes @ 0xC
  1324                           
  1325  002C                     ___awdiv@counter:	
  1326                           ; 1 bytes @ 0xC
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0xC
  1330  002C                     	ds	1
  1331  002D                     ??_simon_says_title_screen:	
  1332  002D                     ?_end_screen:	
  1333                           ; 1 bytes @ 0xD
  1334                           
  1335  002D                     ??_lcd_set_custom_char:	
  1336                           ; 1 bytes @ 0xD
  1337                           
  1338  002D                     ___awdiv@sign:	
  1339                           ; 1 bytes @ 0xD
  1340                           
  1341  002D                     end_screen@first_row:	
  1342                           ; 1 bytes @ 0xD
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0xD
  1346  002D                     	ds	1
  1347  002E                     ___awdiv@quotient:	
  1348                           
  1349                           ; 2 bytes @ 0xE
  1350  002E                     	ds	1
  1351  002F                     lcd_set_custom_char@row:	
  1352  002F                     end_screen@second_row:	
  1353                           ; 1 bytes @ 0xF
  1354                           
  1355                           
  1356                           ; 2 bytes @ 0xF
  1357  002F                     	ds	1
  1358  0030                     ??_generate_pattern:	
  1359  0030                     ??_play_pattern:	
  1360                           ; 1 bytes @ 0x10
  1361                           
  1362  0030                     ??_simon_says_check_input:	
  1363                           ; 1 bytes @ 0x10
  1364                           
  1365  0030                     ??_randomize_gameboard:	
  1366                           ; 1 bytes @ 0x10
  1367                           
  1368  0030                     ?_lcd_putch:	
  1369                           ; 1 bytes @ 0x10
  1370                           
  1371  0030                     ??_make_custom_chars:	
  1372                           ; 1 bytes @ 0x10
  1373                           
  1374  0030                     lcd_putch@port:	
  1375                           ; 1 bytes @ 0x10
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x10
  1379  0030                     	ds	1
  1380  0031                     ??_end_screen:	
  1381                           
  1382                           ; 1 bytes @ 0x11
  1383  0031                     	ds	1
  1384  0032                     ??_lcd_putch:	
  1385                           
  1386                           ; 1 bytes @ 0x12
  1387  0032                     	ds	1
  1388  0033                     lcd_putch@character:	
  1389  0033                     generate_pattern@current_byte:	
  1390                           ; 1 bytes @ 0x13
  1391                           
  1392  0033                     randomize_gameboard@used:	
  1393                           ; 1 bytes @ 0x13
  1394                           
  1395                           
  1396                           ; 32 bytes @ 0x13
  1397  0033                     	ds	1
  1398  0034                     ??_display_simon_says_scoreboard:	
  1399  0034                     ??_countdown:	
  1400                           ; 1 bytes @ 0x14
  1401                           
  1402  0034                     ??_display_concentration_scoreboard:	
  1403                           ; 1 bytes @ 0x14
  1404                           
  1405  0034                     ??_display_concentration_gameboard:	
  1406                           ; 1 bytes @ 0x14
  1407                           
  1408  0034                     ??_toggle_cursor:	
  1409                           ; 1 bytes @ 0x14
  1410                           
  1411  0034                     ?_update_cursor:	
  1412                           ; 1 bytes @ 0x14
  1413                           
  1414  0034                     simon_says_check_input@current_option:	
  1415                           ; 1 bytes @ 0x14
  1416                           
  1417  0034                     play_pattern@current_option:	
  1418                           ; 1 bytes @ 0x14
  1419                           
  1420  0034                     update_cursor@direction:	
  1421                           ; 1 bytes @ 0x14
  1422                           
  1423  0034                     end_screen@colors:	
  1424                           ; 1 bytes @ 0x14
  1425                           
  1426                           
  1427                           ; 6 bytes @ 0x14
  1428  0034                     	ds	1
  1429  0035                     ??_update_cursor:	
  1430  0035                     simon_says_check_input@i:	
  1431                           ; 1 bytes @ 0x15
  1432                           
  1433  0035                     play_pattern@i:	
  1434                           ; 1 bytes @ 0x15
  1435                           
  1436  0035                     countdown@i:	
  1437                           ; 1 bytes @ 0x15
  1438                           
  1439  0035                     display_concentration_gameboard@i:	
  1440                           ; 1 bytes @ 0x15
  1441                           
  1442                           
  1443                           ; 1 bytes @ 0x15
  1444  0035                     	ds	1
  1445  0036                     ??_concentration_title_screen:	
  1446  0036                     ??_simon_says_game_loop:	
  1447                           ; 1 bytes @ 0x16
  1448                           
  1449  0036                     ??_check_for_match:	
  1450                           ; 1 bytes @ 0x16
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x16
  1454  0036                     	ds	1
  1455  0037                     update_cursor@move_delay_count:	
  1456                           
  1457                           ; 1 bytes @ 0x17
  1458  0037                     	ds	1
  1459  0038                     check_for_match@player:	
  1460                           
  1461                           ; 1 bytes @ 0x18
  1462  0038                     	ds	1
  1463  0039                     ??_concentration_game_loop:	
  1464                           
  1465                           ; 1 bytes @ 0x19
  1466  0039                     	ds	1
  1467  003A                     end_screen@i:	
  1468                           
  1469                           ; 1 bytes @ 0x1A
  1470  003A                     	ds	1
  1471  003B                     end_screen@color_index:	
  1472                           
  1473                           ; 1 bytes @ 0x1B
  1474  003B                     	ds	1
  1475  003C                     ??_concentration_game_end:	
  1476  003C                     ??_simon_says_game_end:	
  1477                           ; 1 bytes @ 0x1C
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x1C
  1481  003C                     	ds	23
  1482  0053                     randomize_gameboard@current:	
  1483                           
  1484                           ; 1 bytes @ 0x33
  1485  0053                     	ds	1
  1486  0054                     randomize_gameboard@random:	
  1487                           
  1488                           ; 1 bytes @ 0x34
  1489  0054                     	ds	1
  1490  0055                     ??_concentration_gameboard_init:	
  1491                           
  1492                           ; 1 bytes @ 0x35
  1493  0055                     	ds	1
  1494  0056                     concentration_gameboard_init@i:	
  1495                           
  1496                           ; 1 bytes @ 0x36
  1497  0056                     	ds	1
  1498  0057                     ??_main:	
  1499                           
  1500                           ; 1 bytes @ 0x37
  1501  0057                     	ds	2
  1502  0059                     main@game_selection:	
  1503                           
  1504                           ; 1 bytes @ 0x39
  1505  0059                     	ds	1
  1506  005A                     main@selector_pos:	
  1507                           
  1508                           ; 1 bytes @ 0x3A
  1509  005A                     	ds	1
  1510                           
  1511                           	psect	maintext
  1512  04A1                     __pmaintext:	
  1513 ;;
  1514 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1515 ;;
  1516 ;; *************** function _main *****************
  1517 ;; Defined at:
  1518 ;;		line 124 in file "games.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  selector_pos    1   58[BANK0 ] unsigned char 
  1523 ;;  game_selecti    1   57[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : B00/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       2       0       0       0
  1535 ;;      Temps:          0       2       0       0       0
  1536 ;;      Totals:         0       4       0       0       0
  1537 ;;Total ram usage:        4 bytes
  1538 ;; Hardware stack levels required when called:    7
  1539 ;; This function calls:
  1540 ;;		_DelayMs
  1541 ;;		_concentration_game_end
  1542 ;;		_concentration_game_loop
  1543 ;;		_concentration_gameboard_init
  1544 ;;		_concentration_title_screen
  1545 ;;		_joystick_init
  1546 ;;		_lcd_clear
  1547 ;;		_lcd_goto
  1548 ;;		_lcd_init
  1549 ;;		_lcd_putch
  1550 ;;		_lcd_puts
  1551 ;;		_simon_says_game_end
  1552 ;;		_simon_says_game_loop
  1553 ;;		_simon_says_title_screen
  1554 ;;		_time_init
  1555 ;; This function is called by:
  1556 ;;		Startup code after reset
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _main
  1562  04A1                     _main:	
  1563  04A1                     l4806:	
  1564                           ;incstack = 0
  1565                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1566                           
  1567                           
  1568                           ;games.c: 126:     SCS = 0;
  1569  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  1570  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  1571  04A3  100F               	bcf	15,0	;volatile
  1572  04A4                     l4808:	
  1573                           
  1574                           ;games.c: 128:     TRISD = 0;
  1575  04A4  0188               	clrf	8	;volatile
  1576                           
  1577                           ;games.c: 129:     TRISA = 0;
  1578  04A5  0185               	clrf	5	;volatile
  1579                           
  1580                           ;games.c: 130:     ANSEL = 0;
  1581  04A6  1683               	bsf	3,5	;RP0=1, select bank3
  1582  04A7  1703               	bsf	3,6	;RP1=1, select bank3
  1583  04A8  0188               	clrf	8	;volatile
  1584  04A9                     l4810:	
  1585                           
  1586                           ;games.c: 131:     lcd_init(gameboard);
  1587  04A9  3005               	movlw	5
  1588  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1589  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1590  04AC  00AA               	movwf	lcd_init@port
  1591  04AD  3000               	movlw	0
  1592  04AE  00AB               	movwf	lcd_init@port+1
  1593  04AF  160A  118A  25AD  120A  118A  	fcall	_lcd_init
  1594  04B4                     l4812:	
  1595                           
  1596                           ;games.c: 132:     lcd_init(scoreboard);
  1597  04B4  3008               	movlw	8
  1598  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1599  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1600  04B7  00AA               	movwf	lcd_init@port
  1601  04B8  3000               	movlw	0
  1602  04B9  00AB               	movwf	lcd_init@port+1
  1603  04BA  160A  118A  25AD  120A  118A  	fcall	_lcd_init
  1604  04BF                     l4814:	
  1605                           
  1606                           ;games.c: 134:     joystick_init();
  1607  04BF  160A  118A  2355  120A  118A  	fcall	_joystick_init
  1608  04C4                     l4816:	
  1609                           
  1610                           ;games.c: 136:     TRISC &= 0x1F;
  1611  04C4  301F               	movlw	31
  1612  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1613  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1614  04C7  00D7               	movwf	??_main
  1615  04C8  0857               	movf	??_main,w
  1616  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  1617  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  1618  04CB  0587               	andwf	7,f	;volatile
  1619  04CC                     l4818:	
  1620                           
  1621                           ;games.c: 137:     PORTC = 0;
  1622  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1623  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1624  04CE  0187               	clrf	7	;volatile
  1625  04CF                     l4820:	
  1626                           
  1627                           ;games.c: 139:     time_init();
  1628  04CF  160A  118A  237C  120A  118A  	fcall	_time_init
  1629  04D4                     l4822:	
  1630                           
  1631                           ;games.c: 141:     current_player = 0;
  1632  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1633  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1634  04D6  01E0               	clrf	_current_player
  1635  04D7                     l4824:	
  1636                           
  1637                           ;games.c: 143:     lcd_puts(" Game Selection", scoreboard);
  1638  04D7  30B4               	movlw	low (STR_1| (0+32768))
  1639  04D8  00A8               	movwf	lcd_puts@string
  1640  04D9  3083               	movlw	high (STR_1| (0+32768))
  1641  04DA  00A9               	movwf	lcd_puts@string+1
  1642  04DB  3008               	movlw	8
  1643  04DC  00AA               	movwf	lcd_puts@port
  1644  04DD  3000               	movlw	0
  1645  04DE  00AB               	movwf	lcd_puts@port+1
  1646  04DF  160A  118A  23D4  120A  118A  	fcall	_lcd_puts
  1647  04E4                     l4826:	
  1648                           
  1649                           ;games.c: 144:     lcd_puts("  Concentration", gameboard);
  1650  04E4  30A4               	movlw	low (STR_2| (0+32768))
  1651  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1652  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1653  04E7  00A8               	movwf	lcd_puts@string
  1654  04E8  3083               	movlw	high (STR_2| (0+32768))
  1655  04E9  00A9               	movwf	lcd_puts@string+1
  1656  04EA  3005               	movlw	5
  1657  04EB  00AA               	movwf	lcd_puts@port
  1658  04EC  3000               	movlw	0
  1659  04ED  00AB               	movwf	lcd_puts@port+1
  1660  04EE  160A  118A  23D4  120A  118A  	fcall	_lcd_puts
  1661  04F3                     l4828:	
  1662                           
  1663                           ;games.c: 145:     lcd_goto(0x40, gameboard);
  1664  04F3  3005               	movlw	5
  1665  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1666  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1667  04F6  00A8               	movwf	lcd_goto@port
  1668  04F7  3000               	movlw	0
  1669  04F8  00A9               	movwf	lcd_goto@port+1
  1670  04F9  3040               	movlw	64
  1671  04FA  160A  118A  2311  120A  118A  	fcall	_lcd_goto
  1672  04FF                     l4830:	
  1673                           
  1674                           ;games.c: 146:     lcd_puts("  Simon Says", gameboard);
  1675  04FF  3019               	movlw	low ((STR_21+1)| (0+32768))
  1676  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0502  00A8               	movwf	lcd_puts@string
  1679  0503  3084               	movlw	high ((STR_21+1)| (0+32768))
  1680  0504  00A9               	movwf	lcd_puts@string+1
  1681  0505  3005               	movlw	5
  1682  0506  00AA               	movwf	lcd_puts@port
  1683  0507  3000               	movlw	0
  1684  0508  00AB               	movwf	lcd_puts@port+1
  1685  0509  160A  118A  23D4  120A  118A  	fcall	_lcd_puts
  1686  050E                     l4832:	
  1687                           
  1688                           ;games.c: 147:     lcd_goto(0, gameboard);
  1689  050E  3005               	movlw	5
  1690  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0511  00A8               	movwf	lcd_goto@port
  1693  0512  3000               	movlw	0
  1694  0513  00A9               	movwf	lcd_goto@port+1
  1695  0514  3000               	movlw	0
  1696  0515  160A  118A  2311  120A  118A  	fcall	_lcd_goto
  1697  051A                     l4834:	
  1698                           
  1699                           ;games.c: 148:     lcd_putch(0x7E, gameboard);
  1700  051A  3005               	movlw	5
  1701  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1702  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1703  051D  00B0               	movwf	lcd_putch@port
  1704  051E  3000               	movlw	0
  1705  051F  00B1               	movwf	lcd_putch@port+1
  1706  0520  307E               	movlw	126
  1707  0521  160A  118A  22A0  120A  118A  	fcall	_lcd_putch
  1708  0526                     l4836:	
  1709                           
  1710                           ;games.c: 149:     char game_selection = 0xFF;
  1711  0526  30FF               	movlw	255
  1712  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0529  00D7               	movwf	??_main
  1715  052A  0857               	movf	??_main,w
  1716  052B  00D9               	movwf	main@game_selection
  1717  052C                     l4838:	
  1718                           
  1719                           ;games.c: 150:     char selector_pos = 0x00;
  1720  052C  01DA               	clrf	main@selector_pos
  1721  052D                     l4840:	
  1722                           
  1723                           ;games.c: 151:     GO = 1;
  1724  052D  149F               	bsf	31,1	;volatile
  1725                           
  1726                           ;games.c: 152:     while(game_selection == 0xFF) {
  1727  052E  2DBC               	goto	l4872
  1728  052F                     l265:	
  1729                           
  1730                           ;games.c: 153:         if(GO == 0) {
  1731  052F  189F               	btfsc	31,1	;volatile
  1732  0530  2D32               	goto	u3821
  1733  0531  2D33               	goto	u3820
  1734  0532                     u3821:	
  1735  0532  2D34               	goto	l4844
  1736  0533                     u3820:	
  1737  0533                     l4842:	
  1738                           
  1739                           ;games.c: 154:             GO = 1;
  1740  0533  149F               	bsf	31,1	;volatile
  1741  0534                     l4844:	
  1742                           
  1743                           ;games.c: 156:         if(event_enabled) {
  1744  0534  0865               	movf	_event_enabled,w
  1745  0535  1903               	btfsc	3,2
  1746  0536  2D38               	goto	u3831
  1747  0537  2D39               	goto	u3830
  1748  0538                     u3831:	
  1749  0538  2DBC               	goto	l4872
  1750  0539                     u3830:	
  1751  0539                     l4846:	
  1752                           
  1753                           ;games.c: 157:             if(RB5 == 0) {
  1754  0539  1A86               	btfsc	6,5	;volatile
  1755  053A  2D3C               	goto	u3841
  1756  053B  2D3D               	goto	u3840
  1757  053C                     u3841:	
  1758  053C  2D51               	goto	l4852
  1759  053D                     u3840:	
  1760  053D                     l4848:	
  1761                           
  1762                           ;games.c: 158:                 game_selection = selector_pos;
  1763  053D  085A               	movf	main@selector_pos,w
  1764  053E  00D7               	movwf	??_main
  1765  053F  0857               	movf	??_main,w
  1766  0540  00D9               	movwf	main@game_selection
  1767  0541                     l4850:	
  1768                           
  1769                           ;games.c: 159:                 DelayMs(8);
  1770  0541  3008               	movlw	8
  1771  0542  00A0               	movwf	DelayMs@millis
  1772  0543  3000               	movlw	0
  1773  0544  00A1               	movwf	DelayMs@millis+1
  1774  0545  160A  118A  22C4  120A  118A  	fcall	_DelayMs
  1775  054A                     l269:	
  1776                           ;games.c: 160:                 while(RB5 == 0);
  1777                           
  1778  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1779  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1780  054C  1E86               	btfss	6,5	;volatile
  1781  054D  2D4F               	goto	u3851
  1782  054E  2D50               	goto	u3850
  1783  054F                     u3851:	
  1784  054F  2D4A               	goto	l269
  1785  0550                     u3850:	
  1786  0550  2DC3               	goto	l4874
  1787  0551                     l4852:	
  1788                           
  1789                           ;games.c: 163:             if((joystick_y_pos < 100)||(joystick_y_pos > 900)) {
  1790  0551  085C               	movf	_joystick_y_pos+1,w
  1791  0552  3A80               	xorlw	128
  1792  0553  00FF               	movwf	btemp+1
  1793  0554  3080               	movlw	128
  1794  0555  027F               	subwf	btemp+1,w
  1795  0556  1D03               	skipz
  1796  0557  2D5A               	goto	u3865
  1797  0558  3064               	movlw	100
  1798  0559  025B               	subwf	_joystick_y_pos,w
  1799  055A                     u3865:	
  1800  055A  1C03               	skipc
  1801  055B  2D5D               	goto	u3861
  1802  055C  2D5E               	goto	u3860
  1803  055D                     u3861:	
  1804  055D  2D6D               	goto	l4856
  1805  055E                     u3860:	
  1806  055E                     l4854:	
  1807  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1808  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0560  085C               	movf	_joystick_y_pos+1,w
  1810  0561  3A80               	xorlw	128
  1811  0562  00FF               	movwf	btemp+1
  1812  0563  3083               	movlw	131
  1813  0564  027F               	subwf	btemp+1,w
  1814  0565  1D03               	skipz
  1815  0566  2D69               	goto	u3875
  1816  0567  3085               	movlw	133
  1817  0568  025B               	subwf	_joystick_y_pos,w
  1818  0569                     u3875:	
  1819  0569  1C03               	skipc
  1820  056A  2D6C               	goto	u3871
  1821  056B  2D6D               	goto	u3870
  1822  056C                     u3871:	
  1823  056C  2DBC               	goto	l4872
  1824  056D                     u3870:	
  1825  056D                     l4856:	
  1826                           
  1827                           ;games.c: 164:                 lcd_goto(selector_pos, gameboard);
  1828  056D  3005               	movlw	5
  1829  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1830  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0570  00A8               	movwf	lcd_goto@port
  1832  0571  3000               	movlw	0
  1833  0572  00A9               	movwf	lcd_goto@port+1
  1834  0573  085A               	movf	main@selector_pos,w
  1835  0574  160A  118A  2311  120A  118A  	fcall	_lcd_goto
  1836                           
  1837                           ;games.c: 165:                 lcd_putch(0x20, gameboard);
  1838  0579  3005               	movlw	5
  1839  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1840  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1841  057C  00B0               	movwf	lcd_putch@port
  1842  057D  3000               	movlw	0
  1843  057E  00B1               	movwf	lcd_putch@port+1
  1844  057F  3020               	movlw	32
  1845  0580  160A  118A  22A0  120A  118A  	fcall	_lcd_putch
  1846                           
  1847                           ;games.c: 166:                 switch(selector_pos) {
  1848  0585  2D8D               	goto	l4864
  1849  0586                     l4858:	
  1850                           
  1851                           ;games.c: 168:                         selector_pos = 0x40;
  1852  0586  3040               	movlw	64
  1853  0587  00D7               	movwf	??_main
  1854  0588  0857               	movf	??_main,w
  1855  0589  00DA               	movwf	main@selector_pos
  1856                           
  1857                           ;games.c: 169:                         break;
  1858  058A  2D9F               	goto	l4866
  1859  058B                     l4860:	
  1860                           
  1861                           ;games.c: 171:                         selector_pos = 0x00;
  1862  058B  01DA               	clrf	main@selector_pos
  1863                           
  1864                           ;games.c: 172:                         break;
  1865  058C  2D9F               	goto	l4866
  1866  058D                     l4864:	
  1867  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1868  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1869  058F  085A               	movf	main@selector_pos,w
  1870  0590  00D7               	movwf	??_main
  1871  0591  01D8               	clrf	??_main+1
  1872                           
  1873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 1, Range of values is 0 to 0
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte            4     3 (average)
  1879                           ; direct_byte           11     8 (fixed)
  1880                           ; jumptable            260     6 (fixed)
  1881                           ;	Chosen strategy is simple_byte
  1882  0592  0858               	movf	??_main+1,w
  1883  0593  3A00               	xorlw	0	; case 0
  1884  0594  1903               	skipnz
  1885  0595  2D97               	goto	l5144
  1886  0596  2D9F               	goto	l4866
  1887  0597                     l5144:	
  1888                           
  1889                           ; Switch size 1, requested type "simple"
  1890                           ; Number of cases is 2, Range of values is 0 to 64
  1891                           ; switch strategies available:
  1892                           ; Name         Instructions Cycles
  1893                           ; simple_byte            7     4 (average)
  1894                           ; direct_byte          203     8 (fixed)
  1895                           ; jumptable            260     6 (fixed)
  1896                           ;	Chosen strategy is simple_byte
  1897  0597  0857               	movf	??_main,w
  1898  0598  3A00               	xorlw	0	; case 0
  1899  0599  1903               	skipnz
  1900  059A  2D86               	goto	l4858
  1901  059B  3A40               	xorlw	64	; case 64
  1902  059C  1903               	skipnz
  1903  059D  2D8B               	goto	l4860
  1904  059E  2D9F               	goto	l4866
  1905  059F                     l4866:	
  1906                           
  1907                           ;games.c: 174:                 lcd_goto(selector_pos, gameboard);
  1908  059F  3005               	movlw	5
  1909  05A0  00A8               	movwf	lcd_goto@port
  1910  05A1  3000               	movlw	0
  1911  05A2  00A9               	movwf	lcd_goto@port+1
  1912  05A3  085A               	movf	main@selector_pos,w
  1913  05A4  160A  118A  2311  120A  118A  	fcall	_lcd_goto
  1914                           
  1915                           ;games.c: 175:                 lcd_putch(0x7E, gameboard);
  1916  05A9  3005               	movlw	5
  1917  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1918  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1919  05AC  00B0               	movwf	lcd_putch@port
  1920  05AD  3000               	movlw	0
  1921  05AE  00B1               	movwf	lcd_putch@port+1
  1922  05AF  307E               	movlw	126
  1923  05B0  160A  118A  22A0  120A  118A  	fcall	_lcd_putch
  1924  05B5                     l4868:	
  1925                           
  1926                           ;games.c: 176:                 event_enabled = 0;
  1927  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1928  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1929  05B7  01E5               	clrf	_event_enabled
  1930  05B8                     l4870:	
  1931                           
  1932                           ;games.c: 177:                 event_delay_count = 62;
  1933  05B8  303E               	movlw	62
  1934  05B9  00D7               	movwf	??_main
  1935  05BA  0857               	movf	??_main,w
  1936  05BB  00FA               	movwf	_event_delay_count
  1937  05BC                     l4872:	
  1938                           
  1939                           ;games.c: 152:     while(game_selection == 0xFF) {
  1940  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1941  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1942  05BE  0A59               	incf	main@game_selection,w
  1943  05BF  1903               	btfsc	3,2
  1944  05C0  2DC2               	goto	u3881
  1945  05C1  2DC3               	goto	u3880
  1946  05C2                     u3881:	
  1947  05C2  2D2F               	goto	l265
  1948  05C3                     u3880:	
  1949  05C3                     l4874:	
  1950                           
  1951                           ;games.c: 181:     game_over = 0;
  1952  05C3  01DF               	clrf	_game_over
  1953  05C4                     l4876:	
  1954                           
  1955                           ;games.c: 182:     lcd_clear(gameboard);
  1956  05C4  3005               	movlw	5
  1957  05C5  00A8               	movwf	lcd_clear@port
  1958  05C6  3000               	movlw	0
  1959  05C7  00A9               	movwf	lcd_clear@port+1
  1960  05C8  160A  118A  22DD  120A  118A  	fcall	_lcd_clear
  1961  05CD                     l4878:	
  1962                           
  1963                           ;games.c: 183:     lcd_clear(scoreboard);
  1964  05CD  3008               	movlw	8
  1965  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1966  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1967  05D0  00A8               	movwf	lcd_clear@port
  1968  05D1  3000               	movlw	0
  1969  05D2  00A9               	movwf	lcd_clear@port+1
  1970  05D3  160A  118A  22DD  120A  118A  	fcall	_lcd_clear
  1971  05D8                     l4880:	
  1972                           
  1973                           ;games.c: 184:     if(game_selection == 0x00) {
  1974  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1975  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1976  05DA  0859               	movf	main@game_selection,w
  1977  05DB  1D03               	btfss	3,2
  1978  05DC  2DDE               	goto	u3891
  1979  05DD  2DDF               	goto	u3890
  1980  05DE                     u3891:	
  1981  05DE  2DFC               	goto	l4890
  1982  05DF                     u3890:	
  1983  05DF                     l4882:	
  1984                           
  1985                           ;games.c: 185:         concentration_gameboard_init();
  1986  05DF  160A  118A  2484  120A  118A  	fcall	_concentration_gameboard_init
  1987                           
  1988                           ;games.c: 186:         concentration_title_screen();
  1989  05E4  120A  158A  205D  120A  118A  	fcall	_concentration_title_screen
  1990                           
  1991                           ;games.c: 187:         while(!game_over) {
  1992  05E9  2DEF               	goto	l4886
  1993  05EA                     l4884:	
  1994                           
  1995                           ;games.c: 188:             concentration_game_loop();
  1996  05EA  120A  118A  2616  120A  118A  	fcall	_concentration_game_loop
  1997  05EF                     l4886:	
  1998                           
  1999                           ;games.c: 187:         while(!game_over) {
  2000  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2001  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2002  05F1  085F               	movf	_game_over,w
  2003  05F2  1903               	btfsc	3,2
  2004  05F3  2DF5               	goto	u3901
  2005  05F4  2DF6               	goto	u3900
  2006  05F5                     u3901:	
  2007  05F5  2DEA               	goto	l4884
  2008  05F6                     u3900:	
  2009  05F6                     l4888:	
  2010                           
  2011                           ;games.c: 190:         concentration_game_end();
  2012  05F6  160A  118A  2510  120A  118A  	fcall	_concentration_game_end
  2013                           
  2014                           ;games.c: 191:     } else {
  2015  05FB  2E13               	goto	l288
  2016  05FC                     l4890:	
  2017                           
  2018                           ;games.c: 192:         simon_says_title_screen();
  2019  05FC  160A  118A  271C  120A  118A  	fcall	_simon_says_title_screen
  2020                           
  2021                           ;games.c: 193:         while(!game_over) {
  2022  0601  2E07               	goto	l4894
  2023  0602                     l4892:	
  2024                           
  2025                           ;games.c: 194:             simon_says_game_loop();
  2026  0602  160A  118A  22F7  120A  118A  	fcall	_simon_says_game_loop
  2027  0607                     l4894:	
  2028                           
  2029                           ;games.c: 193:         while(!game_over) {
  2030  0607  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0608  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0609  085F               	movf	_game_over,w
  2033  060A  1903               	btfsc	3,2
  2034  060B  2E0D               	goto	u3911
  2035  060C  2E0E               	goto	u3910
  2036  060D                     u3911:	
  2037  060D  2E02               	goto	l4892
  2038  060E                     u3910:	
  2039  060E                     l4896:	
  2040                           
  2041                           ;games.c: 196:         simon_says_game_end();
  2042  060E  160A  118A  278D  120A  118A  	fcall	_simon_says_game_end
  2043  0613                     l288:	
  2044  0613  120A  118A  280E   	ljmp	start
  2045  0616                     __end_of_main:	
  2046                           
  2047                           	psect	text1
  2048  137C                     __ptext1:	
  2049 ;; *************** function _time_init *****************
  2050 ;; Defined at:
  2051 ;;		line 800 in file "games.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0
  2067 ;;      Temps:          0       1       0       0       0
  2068 ;;      Totals:         0       1       0       0       0
  2069 ;;Total ram usage:        1 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _time_init
  2081  137C                     _time_init:	
  2082  137C                     l4590:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _time_init: [wreg+status,2+status,0]
  2085                           
  2086                           
  2087                           ;games.c: 801:     event_delay_count = 255;
  2088  137C  30FF               	movlw	255
  2089  137D  1283               	bcf	3,5	;RP0=0, select bank0
  2090  137E  1303               	bcf	3,6	;RP1=0, select bank0
  2091  137F  00A0               	movwf	??_time_init
  2092  1380  0820               	movf	??_time_init,w
  2093  1381  00FA               	movwf	_event_delay_count
  2094  1382                     l4592:	
  2095                           
  2096                           ;games.c: 802:     event_enabled = 1;
  2097  1382  01E5               	clrf	_event_enabled
  2098  1383  0AE5               	incf	_event_enabled,f
  2099                           
  2100                           ;games.c: 803:     PR2 = 250;
  2101  1384  30FA               	movlw	250
  2102  1385  1683               	bsf	3,5	;RP0=1, select bank1
  2103  1386  1303               	bcf	3,6	;RP1=0, select bank1
  2104  1387  0092               	movwf	18	;volatile
  2105  1388                     l4594:	
  2106                           
  2107                           ;games.c: 804:     TMR2IF = 0;
  2108  1388  1283               	bcf	3,5	;RP0=0, select bank0
  2109  1389  1303               	bcf	3,6	;RP1=0, select bank0
  2110  138A  108C               	bcf	12,1	;volatile
  2111  138B                     l4596:	
  2112                           
  2113                           ;games.c: 805:     TMR2IE = 1;
  2114  138B  1683               	bsf	3,5	;RP0=1, select bank1
  2115  138C  1303               	bcf	3,6	;RP1=0, select bank1
  2116  138D  148C               	bsf	12,1	;volatile
  2117                           
  2118                           ;games.c: 806:     T2CON = 0x56;
  2119  138E  3056               	movlw	86
  2120  138F  1283               	bcf	3,5	;RP0=0, select bank0
  2121  1390  1303               	bcf	3,6	;RP1=0, select bank0
  2122  1391  0092               	movwf	18	;volatile
  2123  1392                     l4598:	
  2124                           
  2125                           ;games.c: 808:     CCP1M3 = 1;
  2126  1392  1597               	bsf	23,3	;volatile
  2127  1393                     l4600:	
  2128                           
  2129                           ;games.c: 809:     CCP1M2 = 0;
  2130  1393  1117               	bcf	23,2	;volatile
  2131  1394                     l4602:	
  2132                           
  2133                           ;games.c: 810:     CCP1M1 = 1;
  2134  1394  1497               	bsf	23,1	;volatile
  2135  1395                     l4604:	
  2136                           
  2137                           ;games.c: 811:     CCP1M0 = 0;
  2138  1395  1017               	bcf	23,0	;volatile
  2139  1396                     l4606:	
  2140                           
  2141                           ;games.c: 812:     TMR1CS = 0;
  2142  1396  1090               	bcf	16,1	;volatile
  2143  1397                     l4608:	
  2144                           
  2145                           ;games.c: 813:     T1CKPS0 = 0;
  2146  1397  1210               	bcf	16,4	;volatile
  2147  1398                     l4610:	
  2148                           
  2149                           ;games.c: 814:     T1CKPS1 = 0;
  2150  1398  1290               	bcf	16,5	;volatile
  2151  1399                     l4612:	
  2152                           
  2153                           ;games.c: 815:     TMR1GE = 0;
  2154  1399  1310               	bcf	16,6	;volatile
  2155  139A                     l4614:	
  2156                           
  2157                           ;games.c: 816:     TMR1ON = 1;
  2158  139A  1410               	bsf	16,0	;volatile
  2159  139B                     l4616:	
  2160                           
  2161                           ;games.c: 818:     CCP2M3 = 1;
  2162  139B  159D               	bsf	29,3	;volatile
  2163  139C                     l4618:	
  2164                           
  2165                           ;games.c: 819:     CCP2M2 = 0;
  2166  139C  111D               	bcf	29,2	;volatile
  2167  139D                     l4620:	
  2168                           
  2169                           ;games.c: 820:     CCP2M1 = 0;
  2170  139D  109D               	bcf	29,1	;volatile
  2171  139E                     l4622:	
  2172                           
  2173                           ;games.c: 821:     CCP2M0 = 0;
  2174  139E  101D               	bcf	29,0	;volatile
  2175  139F                     l4624:	
  2176                           
  2177                           ;games.c: 822:     TRISC &= 0xFD;
  2178  139F  30FD               	movlw	253
  2179  13A0  00A0               	movwf	??_time_init
  2180  13A1  0820               	movf	??_time_init,w
  2181  13A2  1683               	bsf	3,5	;RP0=1, select bank1
  2182  13A3  1303               	bcf	3,6	;RP1=0, select bank1
  2183  13A4  0587               	andwf	7,f	;volatile
  2184  13A5                     l568:	
  2185  13A5  0008               	return
  2186  13A6                     __end_of_time_init:	
  2187                           
  2188                           	psect	text2
  2189  171C                     __ptext2:	
  2190 ;; *************** function _simon_says_title_screen *****************
  2191 ;; Defined at:
  2192 ;;		line 415 in file "games.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    4
  2213 ;; This function calls:
  2214 ;;		_DelayMs
  2215 ;;		_lcd_clear
  2216 ;;		_lcd_goto
  2217 ;;		_lcd_puts
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function _simon_says_title_screen
  2225  171C                     _simon_says_title_screen:	
  2226  171C                     l4762:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _simon_says_title_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2229                           
  2230                           
  2231                           ;games.c: 416:     lcd_puts("   Simon Says", scoreboard);
  2232  171C  3018               	movlw	low (STR_21| (0+32768))
  2233  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2234  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2235  171F  00A8               	movwf	lcd_puts@string
  2236  1720  3084               	movlw	high (STR_21| (0+32768))
  2237  1721  00A9               	movwf	lcd_puts@string+1
  2238  1722  3008               	movlw	8
  2239  1723  00AA               	movwf	lcd_puts@port
  2240  1724  3000               	movlw	0
  2241  1725  00AB               	movwf	lcd_puts@port+1
  2242  1726  160A  118A  23D4  160A  118A  	fcall	_lcd_puts
  2243                           
  2244                           ;games.c: 417:     lcd_puts("Press the button", gameboard);
  2245  172B  3063               	movlw	low (STR_22| (0+32768))
  2246  172C  1283               	bcf	3,5	;RP0=0, select bank0
  2247  172D  1303               	bcf	3,6	;RP1=0, select bank0
  2248  172E  00A8               	movwf	lcd_puts@string
  2249  172F  3083               	movlw	high (STR_22| (0+32768))
  2250  1730  00A9               	movwf	lcd_puts@string+1
  2251  1731  3005               	movlw	5
  2252  1732  00AA               	movwf	lcd_puts@port
  2253  1733  3000               	movlw	0
  2254  1734  00AB               	movwf	lcd_puts@port+1
  2255  1735  160A  118A  23D4  160A  118A  	fcall	_lcd_puts
  2256  173A                     l4764:	
  2257                           
  2258                           ;games.c: 418:     lcd_goto(0x40, gameboard);
  2259  173A  3005               	movlw	5
  2260  173B  1283               	bcf	3,5	;RP0=0, select bank0
  2261  173C  1303               	bcf	3,6	;RP1=0, select bank0
  2262  173D  00A8               	movwf	lcd_goto@port
  2263  173E  3000               	movlw	0
  2264  173F  00A9               	movwf	lcd_goto@port+1
  2265  1740  3040               	movlw	64
  2266  1741  160A  118A  2311  160A  118A  	fcall	_lcd_goto
  2267  1746                     l4766:	
  2268                           
  2269                           ;games.c: 419:     lcd_puts("    to start", gameboard);
  2270  1746  3067               	movlw	low (STR_23| (0+32768))
  2271  1747  1283               	bcf	3,5	;RP0=0, select bank0
  2272  1748  1303               	bcf	3,6	;RP1=0, select bank0
  2273  1749  00A8               	movwf	lcd_puts@string
  2274  174A  3084               	movlw	high (STR_23| (0+32768))
  2275  174B  00A9               	movwf	lcd_puts@string+1
  2276  174C  3005               	movlw	5
  2277  174D  00AA               	movwf	lcd_puts@port
  2278  174E  3000               	movlw	0
  2279  174F  00AB               	movwf	lcd_puts@port+1
  2280  1750  160A  118A  23D4  160A  118A  	fcall	_lcd_puts
  2281  1755                     l383:	
  2282                           ;games.c: 420:     while(RB5 == 1);
  2283                           
  2284  1755  1283               	bcf	3,5	;RP0=0, select bank0
  2285  1756  1303               	bcf	3,6	;RP1=0, select bank0
  2286  1757  1A86               	btfsc	6,5	;volatile
  2287  1758  2F5A               	goto	u3751
  2288  1759  2F5B               	goto	u3750
  2289  175A                     u3751:	
  2290  175A  2F55               	goto	l383
  2291  175B                     u3750:	
  2292  175B                     l4768:	
  2293                           
  2294                           ;games.c: 421:     DelayMs(8);
  2295  175B  3008               	movlw	8
  2296  175C  00A0               	movwf	DelayMs@millis
  2297  175D  3000               	movlw	0
  2298  175E  00A1               	movwf	DelayMs@millis+1
  2299  175F  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  2300  1764                     l386:	
  2301                           ;games.c: 422:     while(RB5 == 0);
  2302                           
  2303  1764  1283               	bcf	3,5	;RP0=0, select bank0
  2304  1765  1303               	bcf	3,6	;RP1=0, select bank0
  2305  1766  1E86               	btfss	6,5	;volatile
  2306  1767  2F69               	goto	u3761
  2307  1768  2F6A               	goto	u3760
  2308  1769                     u3761:	
  2309  1769  2F64               	goto	l386
  2310  176A                     u3760:	
  2311  176A                     l4770:	
  2312                           
  2313                           ;games.c: 423:     DelayMs(8);
  2314  176A  3008               	movlw	8
  2315  176B  00A0               	movwf	DelayMs@millis
  2316  176C  3000               	movlw	0
  2317  176D  00A1               	movwf	DelayMs@millis+1
  2318  176E  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  2319  1773                     l4772:	
  2320                           
  2321                           ;games.c: 424:     lcd_clear(scoreboard);
  2322  1773  3008               	movlw	8
  2323  1774  1283               	bcf	3,5	;RP0=0, select bank0
  2324  1775  1303               	bcf	3,6	;RP1=0, select bank0
  2325  1776  00A8               	movwf	lcd_clear@port
  2326  1777  3000               	movlw	0
  2327  1778  00A9               	movwf	lcd_clear@port+1
  2328  1779  160A  118A  22DD  160A  118A  	fcall	_lcd_clear
  2329  177E                     l4774:	
  2330                           
  2331                           ;games.c: 425:     lcd_clear(gameboard);
  2332  177E  3005               	movlw	5
  2333  177F  1283               	bcf	3,5	;RP0=0, select bank0
  2334  1780  1303               	bcf	3,6	;RP1=0, select bank0
  2335  1781  00A8               	movwf	lcd_clear@port
  2336  1782  3000               	movlw	0
  2337  1783  00A9               	movwf	lcd_clear@port+1
  2338  1784  160A  118A  22DD  160A  118A  	fcall	_lcd_clear
  2339  1789                     l4776:	
  2340                           
  2341                           ;games.c: 426:     p1_score = 0;
  2342  1789  1283               	bcf	3,5	;RP0=0, select bank0
  2343  178A  1303               	bcf	3,6	;RP1=0, select bank0
  2344  178B  01E4               	clrf	_p1_score
  2345  178C                     l389:	
  2346  178C  0008               	return
  2347  178D                     __end_of_simon_says_title_screen:	
  2348                           
  2349                           	psect	text3
  2350  12F7                     __ptext3:	
  2351 ;; *************** function _simon_says_game_loop *****************
  2352 ;; Defined at:
  2353 ;;		line 216 in file "games.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    5
  2374 ;; This function calls:
  2375 ;;		_countdown
  2376 ;;		_display_simon_says_scoreboard
  2377 ;;		_generate_pattern
  2378 ;;		_play_pattern
  2379 ;;		_simon_says_check_input
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _simon_says_game_loop
  2387  12F7                     _simon_says_game_loop:	
  2388  12F7                     l4778:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _simon_says_game_loop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2391                           
  2392                           
  2393                           ;games.c: 217:     display_simon_says_scoreboard();
  2394  12F7  120A  118A  2771  160A  118A  	fcall	_display_simon_says_scoreboard
  2395  12FC                     l4780:	
  2396                           
  2397                           ;games.c: 218:     countdown();
  2398  12FC  160A  118A  24C9  160A  118A  	fcall	_countdown
  2399  1301                     l4782:	
  2400                           
  2401                           ;games.c: 219:     generate_pattern();
  2402  1301  120A  118A  223D  160A  118A  	fcall	_generate_pattern
  2403                           
  2404                           ;games.c: 220:     play_pattern();
  2405  1306  120A  158A  26AB  160A  118A  	fcall	_play_pattern
  2406                           
  2407                           ;games.c: 221:     simon_says_check_input();
  2408  130B  120A  158A  2477  160A  118A  	fcall	_simon_says_check_input
  2409  1310                     l304:	
  2410  1310  0008               	return
  2411  1311                     __end_of_simon_says_game_loop:	
  2412                           
  2413                           	psect	text4
  2414  0C77                     __ptext4:	
  2415 ;; *************** function _simon_says_check_input *****************
  2416 ;; Defined at:
  2417 ;;		line 224 in file "games.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  i               1   21[BANK0 ] unsigned char 
  2422 ;;  current_opti    1   20[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       2       0       0       0
  2434 ;;      Temps:          0       4       0       0       0
  2435 ;;      Totals:         0       6       0       0       0
  2436 ;;Total ram usage:        6 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    4
  2439 ;; This function calls:
  2440 ;;		___awdiv
  2441 ;;		_lcd_clear
  2442 ;;		_lcd_goto
  2443 ;;		_lcd_puts
  2444 ;;		_simon_says_get_input
  2445 ;; This function is called by:
  2446 ;;		_simon_says_game_loop
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _simon_says_check_input
  2452  0C77                     _simon_says_check_input:	
  2453  0C77                     l4376:	
  2454                           ;incstack = 0
  2455                           ; Regs used in _simon_says_check_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2456                           
  2457                           
  2458                           ;games.c: 225:     lcd_puts("    Now it's", gameboard);
  2459  0C77  305A               	movlw	low (STR_16| (0+32768))
  2460  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0C7A  00A8               	movwf	lcd_puts@string
  2463  0C7B  3084               	movlw	high (STR_16| (0+32768))
  2464  0C7C  00A9               	movwf	lcd_puts@string+1
  2465  0C7D  3005               	movlw	5
  2466  0C7E  00AA               	movwf	lcd_puts@port
  2467  0C7F  3000               	movlw	0
  2468  0C80  00AB               	movwf	lcd_puts@port+1
  2469  0C81  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  2470  0C86                     l4378:	
  2471                           
  2472                           ;games.c: 226:     lcd_goto(0x40, gameboard);
  2473  0C86  3005               	movlw	5
  2474  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0C89  00A8               	movwf	lcd_goto@port
  2477  0C8A  3000               	movlw	0
  2478  0C8B  00A9               	movwf	lcd_goto@port+1
  2479  0C8C  3040               	movlw	64
  2480  0C8D  160A  118A  2311  120A  158A  	fcall	_lcd_goto
  2481  0C92                     l4380:	
  2482                           
  2483                           ;games.c: 227:     lcd_puts("   your turn!", gameboard);
  2484  0C92  30FC               	movlw	low (STR_17| (0+32768))
  2485  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0C95  00A8               	movwf	lcd_puts@string
  2488  0C96  3083               	movlw	high (STR_17| (0+32768))
  2489  0C97  00A9               	movwf	lcd_puts@string+1
  2490  0C98  3005               	movlw	5
  2491  0C99  00AA               	movwf	lcd_puts@port
  2492  0C9A  3000               	movlw	0
  2493  0C9B  00AB               	movwf	lcd_puts@port+1
  2494  0C9C  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  2495  0CA1                     l4382:	
  2496                           
  2497                           ;games.c: 228:     char i;;games.c: 229:     char current_option;;games.c: 230:     for(
      +                          i=0;i<(p1_score+1);i++) {
  2498  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0CA3  01B5               	clrf	simon_says_check_input@i
  2501  0CA4  2D59               	goto	l4402
  2502  0CA5                     l4384:	
  2503                           
  2504                           ;games.c: 233:                 current_option = (simon_says_pattern[i/4])&0x03;
  2505  0CA5  3004               	movlw	4
  2506  0CA6  00A7               	movwf	___awdiv@divisor
  2507  0CA7  3000               	movlw	0
  2508  0CA8  00A8               	movwf	___awdiv@divisor+1
  2509  0CA9  0835               	movf	simon_says_check_input@i,w
  2510  0CAA  00B0               	movwf	??_simon_says_check_input
  2511  0CAB  01B1               	clrf	??_simon_says_check_input+1
  2512  0CAC  0830               	movf	??_simon_says_check_input,w
  2513  0CAD  00A9               	movwf	___awdiv@dividend
  2514  0CAE  0831               	movf	??_simon_says_check_input+1,w
  2515  0CAF  00AA               	movwf	___awdiv@dividend+1
  2516  0CB0  160A  118A  26B3  120A  158A  	fcall	___awdiv
  2517  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0CB7  0827               	movf	?___awdiv,w
  2520  0CB8  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2521  0CB9  0084               	movwf	4
  2522  0CBA  1383               	bcf	3,7	;select IRP bank1
  2523  0CBB  0800               	movf	0,w
  2524  0CBC  3903               	andlw	3
  2525  0CBD  00B2               	movwf	??_simon_says_check_input+2
  2526  0CBE  0832               	movf	??_simon_says_check_input+2,w
  2527  0CBF  00B4               	movwf	simon_says_check_input@current_option
  2528                           
  2529                           ;games.c: 234:                 break;
  2530  0CC0  2D46               	goto	l4396
  2531  0CC1                     l4386:	
  2532                           
  2533                           ;games.c: 236:                 current_option = (((simon_says_pattern[i/4])&0x0C)>>2);
  2534  0CC1  3004               	movlw	4
  2535  0CC2  00A7               	movwf	___awdiv@divisor
  2536  0CC3  3000               	movlw	0
  2537  0CC4  00A8               	movwf	___awdiv@divisor+1
  2538  0CC5  0835               	movf	simon_says_check_input@i,w
  2539  0CC6  00B0               	movwf	??_simon_says_check_input
  2540  0CC7  01B1               	clrf	??_simon_says_check_input+1
  2541  0CC8  0830               	movf	??_simon_says_check_input,w
  2542  0CC9  00A9               	movwf	___awdiv@dividend
  2543  0CCA  0831               	movf	??_simon_says_check_input+1,w
  2544  0CCB  00AA               	movwf	___awdiv@dividend+1
  2545  0CCC  160A  118A  26B3  120A  158A  	fcall	___awdiv
  2546  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0CD3  0827               	movf	?___awdiv,w
  2549  0CD4  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2550  0CD5  0084               	movwf	4
  2551  0CD6  1383               	bcf	3,7	;select IRP bank1
  2552  0CD7  0800               	movf	0,w
  2553  0CD8  00B2               	movwf	??_simon_says_check_input+2
  2554  0CD9  3002               	movlw	2
  2555  0CDA                     u3285:	
  2556  0CDA  1003               	clrc
  2557  0CDB  0CB2               	rrf	??_simon_says_check_input+2,f
  2558  0CDC  3EFF               	addlw	-1
  2559  0CDD  1D03               	skipz
  2560  0CDE  2CDA               	goto	u3285
  2561  0CDF  0832               	movf	??_simon_says_check_input+2,w
  2562  0CE0  3903               	andlw	3
  2563  0CE1  00B3               	movwf	??_simon_says_check_input+3
  2564  0CE2  0833               	movf	??_simon_says_check_input+3,w
  2565  0CE3  00B4               	movwf	simon_says_check_input@current_option
  2566                           
  2567                           ;games.c: 237:                 break;
  2568  0CE4  2D46               	goto	l4396
  2569  0CE5                     l4388:	
  2570                           
  2571                           ;games.c: 239:                 current_option = (((simon_says_pattern[i/4])&0x30)>>4);
  2572  0CE5  3004               	movlw	4
  2573  0CE6  00A7               	movwf	___awdiv@divisor
  2574  0CE7  3000               	movlw	0
  2575  0CE8  00A8               	movwf	___awdiv@divisor+1
  2576  0CE9  0835               	movf	simon_says_check_input@i,w
  2577  0CEA  00B0               	movwf	??_simon_says_check_input
  2578  0CEB  01B1               	clrf	??_simon_says_check_input+1
  2579  0CEC  0830               	movf	??_simon_says_check_input,w
  2580  0CED  00A9               	movwf	___awdiv@dividend
  2581  0CEE  0831               	movf	??_simon_says_check_input+1,w
  2582  0CEF  00AA               	movwf	___awdiv@dividend+1
  2583  0CF0  160A  118A  26B3  120A  158A  	fcall	___awdiv
  2584  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0CF7  0827               	movf	?___awdiv,w
  2587  0CF8  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2588  0CF9  0084               	movwf	4
  2589  0CFA  1383               	bcf	3,7	;select IRP bank1
  2590  0CFB  0800               	movf	0,w
  2591  0CFC  00B2               	movwf	??_simon_says_check_input+2
  2592  0CFD  3004               	movlw	4
  2593  0CFE                     u3295:	
  2594  0CFE  1003               	clrc
  2595  0CFF  0CB2               	rrf	??_simon_says_check_input+2,f
  2596  0D00  3EFF               	addlw	-1
  2597  0D01  1D03               	skipz
  2598  0D02  2CFE               	goto	u3295
  2599  0D03  0832               	movf	??_simon_says_check_input+2,w
  2600  0D04  3903               	andlw	3
  2601  0D05  00B3               	movwf	??_simon_says_check_input+3
  2602  0D06  0833               	movf	??_simon_says_check_input+3,w
  2603  0D07  00B4               	movwf	simon_says_check_input@current_option
  2604                           
  2605                           ;games.c: 240:                 break;
  2606  0D08  2D46               	goto	l4396
  2607  0D09                     l4390:	
  2608                           
  2609                           ;games.c: 242:                 current_option = (((simon_says_pattern[i/4])&0xC0)>>6);
  2610  0D09  3004               	movlw	4
  2611  0D0A  00A7               	movwf	___awdiv@divisor
  2612  0D0B  3000               	movlw	0
  2613  0D0C  00A8               	movwf	___awdiv@divisor+1
  2614  0D0D  0835               	movf	simon_says_check_input@i,w
  2615  0D0E  00B0               	movwf	??_simon_says_check_input
  2616  0D0F  01B1               	clrf	??_simon_says_check_input+1
  2617  0D10  0830               	movf	??_simon_says_check_input,w
  2618  0D11  00A9               	movwf	___awdiv@dividend
  2619  0D12  0831               	movf	??_simon_says_check_input+1,w
  2620  0D13  00AA               	movwf	___awdiv@dividend+1
  2621  0D14  160A  118A  26B3  120A  158A  	fcall	___awdiv
  2622  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0D1B  0827               	movf	?___awdiv,w
  2625  0D1C  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2626  0D1D  0084               	movwf	4
  2627  0D1E  1383               	bcf	3,7	;select IRP bank1
  2628  0D1F  0800               	movf	0,w
  2629  0D20  00B2               	movwf	??_simon_says_check_input+2
  2630  0D21  3006               	movlw	6
  2631  0D22                     u3305:	
  2632  0D22  1003               	clrc
  2633  0D23  0CB2               	rrf	??_simon_says_check_input+2,f
  2634  0D24  3EFF               	addlw	-1
  2635  0D25  1D03               	skipz
  2636  0D26  2D22               	goto	u3305
  2637  0D27  0832               	movf	??_simon_says_check_input+2,w
  2638  0D28  3903               	andlw	3
  2639  0D29  00B3               	movwf	??_simon_says_check_input+3
  2640  0D2A  0833               	movf	??_simon_says_check_input+3,w
  2641  0D2B  00B4               	movwf	simon_says_check_input@current_option
  2642                           
  2643                           ;games.c: 243:                 break;
  2644  0D2C  2D46               	goto	l4396
  2645  0D2D                     l4394:	
  2646  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0D2F  0835               	movf	simon_says_check_input@i,w
  2649  0D30  3903               	andlw	3
  2650  0D31  00B0               	movwf	??_simon_says_check_input
  2651  0D32  01B1               	clrf	??_simon_says_check_input+1
  2652                           
  2653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2654                           ; Switch size 1, requested type "simple"
  2655                           ; Number of cases is 1, Range of values is 0 to 0
  2656                           ; switch strategies available:
  2657                           ; Name         Instructions Cycles
  2658                           ; simple_byte            4     3 (average)
  2659                           ; direct_byte           11     8 (fixed)
  2660                           ; jumptable            260     6 (fixed)
  2661                           ;	Chosen strategy is simple_byte
  2662  0D33  0831               	movf	??_simon_says_check_input+1,w
  2663  0D34  3A00               	xorlw	0	; case 0
  2664  0D35  1903               	skipnz
  2665  0D36  2D38               	goto	l5146
  2666  0D37  2D46               	goto	l4396
  2667  0D38                     l5146:	
  2668                           
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 4, Range of values is 0 to 3
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte           13     7 (average)
  2674                           ; direct_byte           20     8 (fixed)
  2675                           ; jumptable            260     6 (fixed)
  2676                           ;	Chosen strategy is simple_byte
  2677  0D38  0830               	movf	??_simon_says_check_input,w
  2678  0D39  3A00               	xorlw	0	; case 0
  2679  0D3A  1903               	skipnz
  2680  0D3B  2CA5               	goto	l4384
  2681  0D3C  3A01               	xorlw	1	; case 1
  2682  0D3D  1903               	skipnz
  2683  0D3E  2CC1               	goto	l4386
  2684  0D3F  3A03               	xorlw	3	; case 2
  2685  0D40  1903               	skipnz
  2686  0D41  2CE5               	goto	l4388
  2687  0D42  3A01               	xorlw	1	; case 3
  2688  0D43  1903               	skipnz
  2689  0D44  2D09               	goto	l4390
  2690  0D45  2D46               	goto	l4396
  2691  0D46                     l4396:	
  2692                           
  2693                           ;games.c: 245:         if(current_option != simon_says_get_input()) {
  2694  0D46  120A  158A  258A  120A  158A  	fcall	_simon_says_get_input
  2695  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  2697  0D4D  0634               	xorwf	simon_says_check_input@current_option,w
  2698  0D4E  1903               	skipnz
  2699  0D4F  2D51               	goto	u3311
  2700  0D50  2D52               	goto	u3310
  2701  0D51                     u3311:	
  2702  0D51  2D55               	goto	l4400
  2703  0D52                     u3310:	
  2704  0D52                     l4398:	
  2705                           
  2706                           ;games.c: 246:             game_over = 1;
  2707  0D52  01DF               	clrf	_game_over
  2708  0D53  0ADF               	incf	_game_over,f
  2709                           
  2710                           ;games.c: 247:             break;
  2711  0D54  2D6B               	goto	l4404
  2712  0D55                     l4400:	
  2713                           
  2714                           ;games.c: 249:     }
  2715  0D55  3001               	movlw	1
  2716  0D56  00B0               	movwf	??_simon_says_check_input
  2717  0D57  0830               	movf	??_simon_says_check_input,w
  2718  0D58  07B5               	addwf	simon_says_check_input@i,f
  2719  0D59                     l4402:	
  2720  0D59  0864               	movf	_p1_score,w
  2721  0D5A  3E01               	addlw	1
  2722  0D5B  00B0               	movwf	??_simon_says_check_input
  2723  0D5C  3000               	movlw	0
  2724  0D5D  1803               	skipnc
  2725  0D5E  3001               	movlw	1
  2726  0D5F  00B1               	movwf	??_simon_says_check_input+1
  2727  0D60  0831               	movf	??_simon_says_check_input+1,w
  2728  0D61  3A80               	xorlw	128
  2729  0D62  3C80               	sublw	128
  2730  0D63  1D03               	skipz
  2731  0D64  2D67               	goto	u3325
  2732  0D65  0830               	movf	??_simon_says_check_input,w
  2733  0D66  0235               	subwf	simon_says_check_input@i,w
  2734  0D67                     u3325:	
  2735  0D67  1C03               	skipc
  2736  0D68  2D6A               	goto	u3321
  2737  0D69  2D6B               	goto	u3320
  2738  0D6A                     u3321:	
  2739  0D6A  2D2D               	goto	l4394
  2740  0D6B                     u3320:	
  2741  0D6B                     l4404:	
  2742                           
  2743                           ;games.c: 250:     lcd_clear(gameboard);
  2744  0D6B  3005               	movlw	5
  2745  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0D6E  00A8               	movwf	lcd_clear@port
  2748  0D6F  3000               	movlw	0
  2749  0D70  00A9               	movwf	lcd_clear@port+1
  2750  0D71  160A  118A  22DD  120A  158A  	fcall	_lcd_clear
  2751  0D76                     l4406:	
  2752                           
  2753                           ;games.c: 251:     if(game_over == 0) {
  2754  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0D78  085F               	movf	_game_over,w
  2757  0D79  1D03               	btfss	3,2
  2758  0D7A  2D7C               	goto	u3331
  2759  0D7B  2D7D               	goto	u3330
  2760  0D7C                     u3331:	
  2761  0D7C  2D81               	goto	l317
  2762  0D7D                     u3330:	
  2763  0D7D                     l4408:	
  2764                           
  2765                           ;games.c: 252:         p1_score++;
  2766  0D7D  3001               	movlw	1
  2767  0D7E  00B0               	movwf	??_simon_says_check_input
  2768  0D7F  0830               	movf	??_simon_says_check_input,w
  2769  0D80  07E4               	addwf	_p1_score,f
  2770  0D81                     l317:	
  2771                           ;games.c: 253:     }
  2772                           
  2773                           
  2774                           ;games.c: 254:     if(p1_score == 20) {
  2775  0D81  3014               	movlw	20
  2776  0D82  0664               	xorwf	_p1_score,w
  2777  0D83  1D03               	btfss	3,2
  2778  0D84  2D86               	goto	u3341
  2779  0D85  2D87               	goto	u3340
  2780  0D86                     u3341:	
  2781  0D86  2D89               	goto	l319
  2782  0D87                     u3340:	
  2783  0D87                     l4410:	
  2784                           
  2785                           ;games.c: 255:         game_over = 1;
  2786  0D87  01DF               	clrf	_game_over
  2787  0D88  0ADF               	incf	_game_over,f
  2788  0D89                     l319:	
  2789  0D89  0008               	return
  2790  0D8A                     __end_of_simon_says_check_input:	
  2791                           
  2792                           	psect	text5
  2793  0D8A                     __ptext5:	
  2794 ;; *************** function _simon_says_get_input *****************
  2795 ;; Defined at:
  2796 ;;		line 259 in file "games.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  current_inpu    1    5[BANK0 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      unsigned char 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         0       0       0       0       0
  2811 ;;      Locals:         0       1       0       0       0
  2812 ;;      Temps:          0       2       0       0       0
  2813 ;;      Totals:         0       3       0       0       0
  2814 ;;Total ram usage:        3 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    2
  2817 ;; This function calls:
  2818 ;;		_DelayMs
  2819 ;;		_turn_on_led
  2820 ;; This function is called by:
  2821 ;;		_simon_says_check_input
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _simon_says_get_input
  2827  0D8A                     _simon_says_get_input:	
  2828  0D8A                     l322:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _simon_says_get_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2831                           ;games.c: 260:     char current_input;;games.c: 261:     while(1) {
  2832                           
  2833                           
  2834                           ;games.c: 262:         if(GO == 0) {
  2835  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  2836  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  2837  0D8C  189F               	btfsc	31,1	;volatile
  2838  0D8D  2D8F               	goto	u2941
  2839  0D8E  2D90               	goto	u2940
  2840  0D8F                     u2941:	
  2841  0D8F  2D91               	goto	l4040
  2842  0D90                     u2940:	
  2843  0D90                     l4038:	
  2844                           
  2845                           ;games.c: 263:             GO = 1;
  2846  0D90  149F               	bsf	31,1	;volatile
  2847  0D91                     l4040:	
  2848                           
  2849                           ;games.c: 265:         if(joystick_x_pos > 1000) {
  2850  0D91  085E               	movf	_joystick_x_pos+1,w
  2851  0D92  3A80               	xorlw	128
  2852  0D93  00FF               	movwf	btemp+1
  2853  0D94  3083               	movlw	131
  2854  0D95  027F               	subwf	btemp+1,w
  2855  0D96  1D03               	skipz
  2856  0D97  2D9A               	goto	u2955
  2857  0D98  30E9               	movlw	233
  2858  0D99  025D               	subwf	_joystick_x_pos,w
  2859  0D9A                     u2955:	
  2860  0D9A  1C03               	skipc
  2861  0D9B  2D9D               	goto	u2951
  2862  0D9C  2D9E               	goto	u2950
  2863  0D9D                     u2951:	
  2864  0D9D  2DC8               	goto	l4058
  2865  0D9E                     u2950:	
  2866  0D9E                     l4042:	
  2867                           
  2868                           ;games.c: 266:             if(CCP2IE == 0) {
  2869  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  2870  0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  2871  0DA0  180D               	btfsc	13,0	;volatile
  2872  0DA1  2DA3               	goto	u2961
  2873  0DA2  2DA4               	goto	u2960
  2874  0DA3                     u2961:	
  2875  0DA3  2DC0               	goto	l4054
  2876  0DA4                     u2960:	
  2877  0DA4                     l4044:	
  2878                           
  2879                           ;games.c: 267:                 tone_delay = 17026;
  2880  0DA4  3082               	movlw	130
  2881  0DA5  00F6               	movwf	_tone_delay
  2882  0DA6  3042               	movlw	66
  2883  0DA7  00F7               	movwf	_tone_delay+1
  2884  0DA8                     l4046:	
  2885                           
  2886                           ;games.c: 268:                 CCPR2 = TMR1+17026;
  2887  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0DAA  080E               	movf	14,w	;volatile
  2890  0DAB  3E82               	addlw	130
  2891  0DAC  00A3               	movwf	??_simon_says_get_input
  2892  0DAD  080F               	movf	15,w	;volatile
  2893  0DAE  1803               	skipnc
  2894  0DAF  3E01               	addlw	1
  2895  0DB0  3E42               	addlw	66
  2896  0DB1  00A4               	movwf	??_simon_says_get_input+1
  2897  0DB2  0823               	movf	??_simon_says_get_input,w
  2898  0DB3  009B               	movwf	27	;volatile
  2899  0DB4  0824               	movf	??_simon_says_get_input+1,w
  2900  0DB5  009C               	movwf	28	;volatile
  2901  0DB6                     l4048:	
  2902                           
  2903                           ;games.c: 269:                 CCP2IF = 0;
  2904  0DB6  100D               	bcf	13,0	;volatile
  2905  0DB7                     l4050:	
  2906                           
  2907                           ;games.c: 270:                 CCP2IE = 1;
  2908  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2910  0DB9  140D               	bsf	13,0	;volatile
  2911  0DBA                     l4052:	
  2912                           
  2913                           ;games.c: 271:                 turn_on_led(0);
  2914  0DBA  3000               	movlw	0
  2915  0DBB  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  2916  0DC0                     l4054:	
  2917                           
  2918                           ;games.c: 273:             if(RB5 == 0) {
  2919  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0DC2  1A86               	btfsc	6,5	;volatile
  2922  0DC3  2DC5               	goto	u2971
  2923  0DC4  2DC6               	goto	u2970
  2924  0DC5                     u2971:	
  2925  0DC5  2D8A               	goto	l322
  2926  0DC6                     u2970:	
  2927  0DC6                     l4056:	
  2928                           
  2929                           ;games.c: 274:                 current_input = 0;
  2930  0DC6  01A5               	clrf	simon_says_get_input@current_input
  2931                           
  2932                           ;games.c: 275:                 break;
  2933  0DC7  2E85               	goto	l327
  2934  0DC8                     l4058:	
  2935  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0DCA  085E               	movf	_joystick_x_pos+1,w
  2938  0DCB  3A80               	xorlw	128
  2939  0DCC  00FF               	movwf	btemp+1
  2940  0DCD  3080               	movlw	128
  2941  0DCE  027F               	subwf	btemp+1,w
  2942  0DCF  1D03               	skipz
  2943  0DD0  2DD3               	goto	u2985
  2944  0DD1  3014               	movlw	20
  2945  0DD2  025D               	subwf	_joystick_x_pos,w
  2946  0DD3                     u2985:	
  2947  0DD3  1803               	skipnc
  2948  0DD4  2DD6               	goto	u2981
  2949  0DD5  2DD7               	goto	u2980
  2950  0DD6                     u2981:	
  2951  0DD6  2E02               	goto	l4076
  2952  0DD7                     u2980:	
  2953  0DD7                     l4060:	
  2954                           
  2955                           ;games.c: 278:             if(CCP2IE == 0) {
  2956  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  2957  0DD8  1303               	bcf	3,6	;RP1=0, select bank1
  2958  0DD9  180D               	btfsc	13,0	;volatile
  2959  0DDA  2DDC               	goto	u2991
  2960  0DDB  2DDD               	goto	u2990
  2961  0DDC                     u2991:	
  2962  0DDC  2DF9               	goto	l4072
  2963  0DDD                     u2990:	
  2964  0DDD                     l4062:	
  2965                           
  2966                           ;games.c: 279:                 tone_delay = 8513;
  2967  0DDD  3041               	movlw	65
  2968  0DDE  00F6               	movwf	_tone_delay
  2969  0DDF  3021               	movlw	33
  2970  0DE0  00F7               	movwf	_tone_delay+1
  2971  0DE1                     l4064:	
  2972                           
  2973                           ;games.c: 280:                 CCPR2 = TMR1+8513;
  2974  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0DE3  080E               	movf	14,w	;volatile
  2977  0DE4  3E41               	addlw	65
  2978  0DE5  00A3               	movwf	??_simon_says_get_input
  2979  0DE6  080F               	movf	15,w	;volatile
  2980  0DE7  1803               	skipnc
  2981  0DE8  3E01               	addlw	1
  2982  0DE9  3E21               	addlw	33
  2983  0DEA  00A4               	movwf	??_simon_says_get_input+1
  2984  0DEB  0823               	movf	??_simon_says_get_input,w
  2985  0DEC  009B               	movwf	27	;volatile
  2986  0DED  0824               	movf	??_simon_says_get_input+1,w
  2987  0DEE  009C               	movwf	28	;volatile
  2988  0DEF                     l4066:	
  2989                           
  2990                           ;games.c: 281:                 CCP2IF = 0;
  2991  0DEF  100D               	bcf	13,0	;volatile
  2992  0DF0                     l4068:	
  2993                           
  2994                           ;games.c: 282:                 CCP2IE = 1;
  2995  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  2996  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  2997  0DF2  140D               	bsf	13,0	;volatile
  2998  0DF3                     l4070:	
  2999                           
  3000                           ;games.c: 283:                 turn_on_led(1);
  3001  0DF3  3001               	movlw	1
  3002  0DF4  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  3003  0DF9                     l4072:	
  3004                           
  3005                           ;games.c: 285:             if(RB5 == 0) {
  3006  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0DFB  1A86               	btfsc	6,5	;volatile
  3009  0DFC  2DFE               	goto	u3001
  3010  0DFD  2DFF               	goto	u3000
  3011  0DFE                     u3001:	
  3012  0DFE  2D8A               	goto	l322
  3013  0DFF                     u3000:	
  3014  0DFF                     l4074:	
  3015                           
  3016                           ;games.c: 286:                 current_input = 1;
  3017  0DFF  01A5               	clrf	simon_says_get_input@current_input
  3018  0E00  0AA5               	incf	simon_says_get_input@current_input,f
  3019                           
  3020                           ;games.c: 287:                 break;
  3021  0E01  2E85               	goto	l327
  3022  0E02                     l4076:	
  3023  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0E04  085C               	movf	_joystick_y_pos+1,w
  3026  0E05  3A80               	xorlw	128
  3027  0E06  00FF               	movwf	btemp+1
  3028  0E07  3083               	movlw	131
  3029  0E08  027F               	subwf	btemp+1,w
  3030  0E09  1D03               	skipz
  3031  0E0A  2E0D               	goto	u3015
  3032  0E0B  30E9               	movlw	233
  3033  0E0C  025B               	subwf	_joystick_y_pos,w
  3034  0E0D                     u3015:	
  3035  0E0D  1C03               	skipc
  3036  0E0E  2E10               	goto	u3011
  3037  0E0F  2E11               	goto	u3010
  3038  0E10                     u3011:	
  3039  0E10  2E3E               	goto	l4094
  3040  0E11                     u3010:	
  3041  0E11                     l4078:	
  3042                           
  3043                           ;games.c: 290:             if(CCP2IE == 0) {
  3044  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  3046  0E13  180D               	btfsc	13,0	;volatile
  3047  0E14  2E16               	goto	u3021
  3048  0E15  2E17               	goto	u3020
  3049  0E16                     u3021:	
  3050  0E16  2E33               	goto	l4090
  3051  0E17                     u3020:	
  3052  0E17                     l4080:	
  3053                           
  3054                           ;games.c: 291:                 tone_delay = 4257;
  3055  0E17  30A1               	movlw	161
  3056  0E18  00F6               	movwf	_tone_delay
  3057  0E19  3010               	movlw	16
  3058  0E1A  00F7               	movwf	_tone_delay+1
  3059  0E1B                     l4082:	
  3060                           
  3061                           ;games.c: 292:                 CCPR2 = TMR1+4257;
  3062  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0E1D  080E               	movf	14,w	;volatile
  3065  0E1E  3EA1               	addlw	161
  3066  0E1F  00A3               	movwf	??_simon_says_get_input
  3067  0E20  080F               	movf	15,w	;volatile
  3068  0E21  1803               	skipnc
  3069  0E22  3E01               	addlw	1
  3070  0E23  3E10               	addlw	16
  3071  0E24  00A4               	movwf	??_simon_says_get_input+1
  3072  0E25  0823               	movf	??_simon_says_get_input,w
  3073  0E26  009B               	movwf	27	;volatile
  3074  0E27  0824               	movf	??_simon_says_get_input+1,w
  3075  0E28  009C               	movwf	28	;volatile
  3076  0E29                     l4084:	
  3077                           
  3078                           ;games.c: 293:                 CCP2IF = 0;
  3079  0E29  100D               	bcf	13,0	;volatile
  3080  0E2A                     l4086:	
  3081                           
  3082                           ;games.c: 294:                 CCP2IE = 1;
  3083  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  3085  0E2C  140D               	bsf	13,0	;volatile
  3086  0E2D                     l4088:	
  3087                           
  3088                           ;games.c: 295:                 turn_on_led(2);
  3089  0E2D  3002               	movlw	2
  3090  0E2E  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  3091  0E33                     l4090:	
  3092                           
  3093                           ;games.c: 297:             if(RB5 == 0) {
  3094  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0E35  1A86               	btfsc	6,5	;volatile
  3097  0E36  2E38               	goto	u3031
  3098  0E37  2E39               	goto	u3030
  3099  0E38                     u3031:	
  3100  0E38  2D8A               	goto	l322
  3101  0E39                     u3030:	
  3102  0E39                     l4092:	
  3103                           
  3104                           ;games.c: 298:                 current_input = 2;
  3105  0E39  3002               	movlw	2
  3106  0E3A  00A3               	movwf	??_simon_says_get_input
  3107  0E3B  0823               	movf	??_simon_says_get_input,w
  3108  0E3C  00A5               	movwf	simon_says_get_input@current_input
  3109                           
  3110                           ;games.c: 299:                 break;
  3111  0E3D  2E85               	goto	l327
  3112  0E3E                     l4094:	
  3113  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0E40  085C               	movf	_joystick_y_pos+1,w
  3116  0E41  3A80               	xorlw	128
  3117  0E42  00FF               	movwf	btemp+1
  3118  0E43  3080               	movlw	128
  3119  0E44  027F               	subwf	btemp+1,w
  3120  0E45  1D03               	skipz
  3121  0E46  2E49               	goto	u3045
  3122  0E47  3014               	movlw	20
  3123  0E48  025B               	subwf	_joystick_y_pos,w
  3124  0E49                     u3045:	
  3125  0E49  1803               	skipnc
  3126  0E4A  2E4C               	goto	u3041
  3127  0E4B  2E4D               	goto	u3040
  3128  0E4C                     u3041:	
  3129  0E4C  2E7A               	goto	l337
  3130  0E4D                     u3040:	
  3131  0E4D                     l4096:	
  3132                           
  3133                           ;games.c: 302:             if(CCP2IE == 0) {
  3134  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  3136  0E4F  180D               	btfsc	13,0	;volatile
  3137  0E50  2E52               	goto	u3051
  3138  0E51  2E53               	goto	u3050
  3139  0E52                     u3051:	
  3140  0E52  2E6F               	goto	l4108
  3141  0E53                     u3050:	
  3142  0E53                     l4098:	
  3143                           
  3144                           ;games.c: 303:                 tone_delay = 2128;
  3145  0E53  3050               	movlw	80
  3146  0E54  00F6               	movwf	_tone_delay
  3147  0E55  3008               	movlw	8
  3148  0E56  00F7               	movwf	_tone_delay+1
  3149  0E57                     l4100:	
  3150                           
  3151                           ;games.c: 304:                 CCPR2 = TMR1+2128;
  3152  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0E59  080E               	movf	14,w	;volatile
  3155  0E5A  3E50               	addlw	80
  3156  0E5B  00A3               	movwf	??_simon_says_get_input
  3157  0E5C  080F               	movf	15,w	;volatile
  3158  0E5D  1803               	skipnc
  3159  0E5E  3E01               	addlw	1
  3160  0E5F  3E08               	addlw	8
  3161  0E60  00A4               	movwf	??_simon_says_get_input+1
  3162  0E61  0823               	movf	??_simon_says_get_input,w
  3163  0E62  009B               	movwf	27	;volatile
  3164  0E63  0824               	movf	??_simon_says_get_input+1,w
  3165  0E64  009C               	movwf	28	;volatile
  3166  0E65                     l4102:	
  3167                           
  3168                           ;games.c: 305:                 CCP2IF = 0;
  3169  0E65  100D               	bcf	13,0	;volatile
  3170  0E66                     l4104:	
  3171                           
  3172                           ;games.c: 306:                 CCP2IE = 1;
  3173  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  3174  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  3175  0E68  140D               	bsf	13,0	;volatile
  3176  0E69                     l4106:	
  3177                           
  3178                           ;games.c: 307:                 turn_on_led(5);
  3179  0E69  3005               	movlw	5
  3180  0E6A  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  3181  0E6F                     l4108:	
  3182                           
  3183                           ;games.c: 309:             if(RB5 == 0) {
  3184  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0E71  1A86               	btfsc	6,5	;volatile
  3187  0E72  2E74               	goto	u3061
  3188  0E73  2E75               	goto	u3060
  3189  0E74                     u3061:	
  3190  0E74  2E84               	goto	l328
  3191  0E75                     u3060:	
  3192  0E75                     l4110:	
  3193                           
  3194                           ;games.c: 310:                 current_input = 3;
  3195  0E75  3003               	movlw	3
  3196  0E76  00A3               	movwf	??_simon_says_get_input
  3197  0E77  0823               	movf	??_simon_says_get_input,w
  3198  0E78  00A5               	movwf	simon_says_get_input@current_input
  3199                           
  3200                           ;games.c: 311:                 break;
  3201  0E79  2E85               	goto	l327
  3202  0E7A                     l337:	
  3203                           
  3204                           ;games.c: 314:             CCP2IE = 0;
  3205  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  3207  0E7C  100D               	bcf	13,0	;volatile
  3208  0E7D                     l4112:	
  3209                           
  3210                           ;games.c: 315:             PORTC &= 0x1F;
  3211  0E7D  301F               	movlw	31
  3212  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0E80  00A3               	movwf	??_simon_says_get_input
  3215  0E81  0823               	movf	??_simon_says_get_input,w
  3216  0E82  0587               	andwf	7,f	;volatile
  3217  0E83  2D8A               	goto	l322
  3218  0E84                     l328:	
  3219  0E84  2D8A               	goto	l322
  3220  0E85                     l327:	
  3221                           
  3222                           ;games.c: 318:     CCP2IE = 0;
  3223  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0E86  1303               	bcf	3,6	;RP1=0, select bank1
  3225  0E87  100D               	bcf	13,0	;volatile
  3226  0E88                     l4114:	
  3227                           
  3228                           ;games.c: 319:     PORTC &= 0x1F;
  3229  0E88  301F               	movlw	31
  3230  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0E8B  00A3               	movwf	??_simon_says_get_input
  3233  0E8C  0823               	movf	??_simon_says_get_input,w
  3234  0E8D  0587               	andwf	7,f	;volatile
  3235  0E8E                     l4116:	
  3236                           
  3237                           ;games.c: 320:     DelayMs(8);
  3238  0E8E  3008               	movlw	8
  3239  0E8F  00A0               	movwf	DelayMs@millis
  3240  0E90  3000               	movlw	0
  3241  0E91  00A1               	movwf	DelayMs@millis+1
  3242  0E92  160A  118A  22C4  120A  158A  	fcall	_DelayMs
  3243  0E97                     l342:	
  3244                           ;games.c: 321:     while(RB5 == 0);
  3245                           
  3246  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0E99  1E86               	btfss	6,5	;volatile
  3249  0E9A  2E9C               	goto	u3071
  3250  0E9B  2E9D               	goto	u3070
  3251  0E9C                     u3071:	
  3252  0E9C  2E97               	goto	l342
  3253  0E9D                     u3070:	
  3254  0E9D                     l344:	
  3255                           
  3256                           ;games.c: 322:     GO = 1;
  3257  0E9D  149F               	bsf	31,1	;volatile
  3258  0E9E                     l4118:	
  3259                           
  3260                           ;games.c: 323:     DelayMs(500);
  3261  0E9E  30F4               	movlw	244
  3262  0E9F  00A0               	movwf	DelayMs@millis
  3263  0EA0  3001               	movlw	1
  3264  0EA1  00A1               	movwf	DelayMs@millis+1
  3265  0EA2  160A  118A  22C4  120A  158A  	fcall	_DelayMs
  3266  0EA7                     l4120:	
  3267                           
  3268                           ;games.c: 324:     return current_input;
  3269  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0EA9  0825               	movf	simon_says_get_input@current_input,w
  3272  0EAA                     l345:	
  3273  0EAA  0008               	return
  3274  0EAB                     __end_of_simon_says_get_input:	
  3275                           
  3276                           	psect	text6
  3277  0EAB                     __ptext6:	
  3278 ;; *************** function _play_pattern *****************
  3279 ;; Defined at:
  3280 ;;		line 327 in file "games.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  i               1   21[BANK0 ] unsigned char 
  3285 ;;  current_opti    1   20[BANK0 ] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3295 ;;      Params:         0       0       0       0       0
  3296 ;;      Locals:         0       2       0       0       0
  3297 ;;      Temps:          0       4       0       0       0
  3298 ;;      Totals:         0       6       0       0       0
  3299 ;;Total ram usage:        6 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    4
  3302 ;; This function calls:
  3303 ;;		_DelayMs
  3304 ;;		___awdiv
  3305 ;;		_lcd_clear
  3306 ;;		_lcd_puts
  3307 ;;		_play_tone
  3308 ;;		_turn_on_led
  3309 ;; This function is called by:
  3310 ;;		_simon_says_game_loop
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _play_pattern
  3316  0EAB                     _play_pattern:	
  3317  0EAB                     l4322:	
  3318                           ;incstack = 0
  3319                           ; Regs used in _play_pattern: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3320                           
  3321                           
  3322                           ;games.c: 328:     lcd_puts(" Simon Says....", gameboard);
  3323  0EAB  3094               	movlw	low (STR_18| (0+32768))
  3324  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0EAE  00A8               	movwf	lcd_puts@string
  3327  0EAF  3083               	movlw	high (STR_18| (0+32768))
  3328  0EB0  00A9               	movwf	lcd_puts@string+1
  3329  0EB1  3005               	movlw	5
  3330  0EB2  00AA               	movwf	lcd_puts@port
  3331  0EB3  3000               	movlw	0
  3332  0EB4  00AB               	movwf	lcd_puts@port+1
  3333  0EB5  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  3334  0EBA                     l4324:	
  3335                           
  3336                           ;games.c: 329:     char i;;games.c: 330:     char current_option;;games.c: 331:     for(
      +                          i=0;i<(p1_score+1);i++) {
  3337  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0EBC  01B5               	clrf	play_pattern@i
  3340  0EBD  2FE2               	goto	l4364
  3341  0EBE                     l4326:	
  3342                           
  3343                           ;games.c: 334:                 current_option = (simon_says_pattern[i/4])&0x03;
  3344  0EBE  3004               	movlw	4
  3345  0EBF  00A7               	movwf	___awdiv@divisor
  3346  0EC0  3000               	movlw	0
  3347  0EC1  00A8               	movwf	___awdiv@divisor+1
  3348  0EC2  0835               	movf	play_pattern@i,w
  3349  0EC3  00B0               	movwf	??_play_pattern
  3350  0EC4  01B1               	clrf	??_play_pattern+1
  3351  0EC5  0830               	movf	??_play_pattern,w
  3352  0EC6  00A9               	movwf	___awdiv@dividend
  3353  0EC7  0831               	movf	??_play_pattern+1,w
  3354  0EC8  00AA               	movwf	___awdiv@dividend+1
  3355  0EC9  160A  118A  26B3  120A  158A  	fcall	___awdiv
  3356  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0ED0  0827               	movf	?___awdiv,w
  3359  0ED1  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3360  0ED2  0084               	movwf	4
  3361  0ED3  1383               	bcf	3,7	;select IRP bank1
  3362  0ED4  0800               	movf	0,w
  3363  0ED5  3903               	andlw	3
  3364  0ED6  00B2               	movwf	??_play_pattern+2
  3365  0ED7  0832               	movf	??_play_pattern+2,w
  3366  0ED8  00B4               	movwf	play_pattern@current_option
  3367                           
  3368                           ;games.c: 335:                 break;
  3369  0ED9  2FB7               	goto	l4356
  3370  0EDA                     l4328:	
  3371                           
  3372                           ;games.c: 337:                 current_option = (((simon_says_pattern[i/4])&0x0C)>>2);
  3373  0EDA  3004               	movlw	4
  3374  0EDB  00A7               	movwf	___awdiv@divisor
  3375  0EDC  3000               	movlw	0
  3376  0EDD  00A8               	movwf	___awdiv@divisor+1
  3377  0EDE  0835               	movf	play_pattern@i,w
  3378  0EDF  00B0               	movwf	??_play_pattern
  3379  0EE0  01B1               	clrf	??_play_pattern+1
  3380  0EE1  0830               	movf	??_play_pattern,w
  3381  0EE2  00A9               	movwf	___awdiv@dividend
  3382  0EE3  0831               	movf	??_play_pattern+1,w
  3383  0EE4  00AA               	movwf	___awdiv@dividend+1
  3384  0EE5  160A  118A  26B3  120A  158A  	fcall	___awdiv
  3385  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0EEC  0827               	movf	?___awdiv,w
  3388  0EED  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3389  0EEE  0084               	movwf	4
  3390  0EEF  1383               	bcf	3,7	;select IRP bank1
  3391  0EF0  0800               	movf	0,w
  3392  0EF1  00B2               	movwf	??_play_pattern+2
  3393  0EF2  3002               	movlw	2
  3394  0EF3                     u3245:	
  3395  0EF3  1003               	clrc
  3396  0EF4  0CB2               	rrf	??_play_pattern+2,f
  3397  0EF5  3EFF               	addlw	-1
  3398  0EF6  1D03               	skipz
  3399  0EF7  2EF3               	goto	u3245
  3400  0EF8  0832               	movf	??_play_pattern+2,w
  3401  0EF9  3903               	andlw	3
  3402  0EFA  00B3               	movwf	??_play_pattern+3
  3403  0EFB  0833               	movf	??_play_pattern+3,w
  3404  0EFC  00B4               	movwf	play_pattern@current_option
  3405                           
  3406                           ;games.c: 338:                 break;
  3407  0EFD  2FB7               	goto	l4356
  3408  0EFE                     l4330:	
  3409                           
  3410                           ;games.c: 340:                 current_option = (((simon_says_pattern[i/4])&0x30)>>4);
  3411  0EFE  3004               	movlw	4
  3412  0EFF  00A7               	movwf	___awdiv@divisor
  3413  0F00  3000               	movlw	0
  3414  0F01  00A8               	movwf	___awdiv@divisor+1
  3415  0F02  0835               	movf	play_pattern@i,w
  3416  0F03  00B0               	movwf	??_play_pattern
  3417  0F04  01B1               	clrf	??_play_pattern+1
  3418  0F05  0830               	movf	??_play_pattern,w
  3419  0F06  00A9               	movwf	___awdiv@dividend
  3420  0F07  0831               	movf	??_play_pattern+1,w
  3421  0F08  00AA               	movwf	___awdiv@dividend+1
  3422  0F09  160A  118A  26B3  120A  158A  	fcall	___awdiv
  3423  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0F10  0827               	movf	?___awdiv,w
  3426  0F11  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3427  0F12  0084               	movwf	4
  3428  0F13  1383               	bcf	3,7	;select IRP bank1
  3429  0F14  0800               	movf	0,w
  3430  0F15  00B2               	movwf	??_play_pattern+2
  3431  0F16  3004               	movlw	4
  3432  0F17                     u3255:	
  3433  0F17  1003               	clrc
  3434  0F18  0CB2               	rrf	??_play_pattern+2,f
  3435  0F19  3EFF               	addlw	-1
  3436  0F1A  1D03               	skipz
  3437  0F1B  2F17               	goto	u3255
  3438  0F1C  0832               	movf	??_play_pattern+2,w
  3439  0F1D  3903               	andlw	3
  3440  0F1E  00B3               	movwf	??_play_pattern+3
  3441  0F1F  0833               	movf	??_play_pattern+3,w
  3442  0F20  00B4               	movwf	play_pattern@current_option
  3443                           
  3444                           ;games.c: 341:                 break;
  3445  0F21  2FB7               	goto	l4356
  3446  0F22                     l4332:	
  3447                           
  3448                           ;games.c: 343:                 current_option = (((simon_says_pattern[i/4])&0xC0)>>6);
  3449  0F22  3004               	movlw	4
  3450  0F23  00A7               	movwf	___awdiv@divisor
  3451  0F24  3000               	movlw	0
  3452  0F25  00A8               	movwf	___awdiv@divisor+1
  3453  0F26  0835               	movf	play_pattern@i,w
  3454  0F27  00B0               	movwf	??_play_pattern
  3455  0F28  01B1               	clrf	??_play_pattern+1
  3456  0F29  0830               	movf	??_play_pattern,w
  3457  0F2A  00A9               	movwf	___awdiv@dividend
  3458  0F2B  0831               	movf	??_play_pattern+1,w
  3459  0F2C  00AA               	movwf	___awdiv@dividend+1
  3460  0F2D  160A  118A  26B3  120A  158A  	fcall	___awdiv
  3461  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0F34  0827               	movf	?___awdiv,w
  3464  0F35  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3465  0F36  0084               	movwf	4
  3466  0F37  1383               	bcf	3,7	;select IRP bank1
  3467  0F38  0800               	movf	0,w
  3468  0F39  00B2               	movwf	??_play_pattern+2
  3469  0F3A  3006               	movlw	6
  3470  0F3B                     u3265:	
  3471  0F3B  1003               	clrc
  3472  0F3C  0CB2               	rrf	??_play_pattern+2,f
  3473  0F3D  3EFF               	addlw	-1
  3474  0F3E  1D03               	skipz
  3475  0F3F  2F3B               	goto	u3265
  3476  0F40  0832               	movf	??_play_pattern+2,w
  3477  0F41  3903               	andlw	3
  3478  0F42  00B3               	movwf	??_play_pattern+3
  3479  0F43  0833               	movf	??_play_pattern+3,w
  3480  0F44  00B4               	movwf	play_pattern@current_option
  3481                           
  3482                           ;games.c: 344:                 break;
  3483  0F45  2FB7               	goto	l4356
  3484  0F46                     l4336:	
  3485  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3486  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3487  0F48  0835               	movf	play_pattern@i,w
  3488  0F49  3903               	andlw	3
  3489  0F4A  00B0               	movwf	??_play_pattern
  3490  0F4B  01B1               	clrf	??_play_pattern+1
  3491                           
  3492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3493                           ; Switch size 1, requested type "simple"
  3494                           ; Number of cases is 1, Range of values is 0 to 0
  3495                           ; switch strategies available:
  3496                           ; Name         Instructions Cycles
  3497                           ; simple_byte            4     3 (average)
  3498                           ; direct_byte           11     8 (fixed)
  3499                           ; jumptable            260     6 (fixed)
  3500                           ;	Chosen strategy is simple_byte
  3501  0F4C  0831               	movf	??_play_pattern+1,w
  3502  0F4D  3A00               	xorlw	0	; case 0
  3503  0F4E  1903               	skipnz
  3504  0F4F  2F51               	goto	l5148
  3505  0F50  2FB7               	goto	l4356
  3506  0F51                     l5148:	
  3507                           
  3508                           ; Switch size 1, requested type "simple"
  3509                           ; Number of cases is 4, Range of values is 0 to 3
  3510                           ; switch strategies available:
  3511                           ; Name         Instructions Cycles
  3512                           ; simple_byte           13     7 (average)
  3513                           ; direct_byte           20     8 (fixed)
  3514                           ; jumptable            260     6 (fixed)
  3515                           ;	Chosen strategy is simple_byte
  3516  0F51  0830               	movf	??_play_pattern,w
  3517  0F52  3A00               	xorlw	0	; case 0
  3518  0F53  1903               	skipnz
  3519  0F54  2EBE               	goto	l4326
  3520  0F55  3A01               	xorlw	1	; case 1
  3521  0F56  1903               	skipnz
  3522  0F57  2EDA               	goto	l4328
  3523  0F58  3A03               	xorlw	3	; case 2
  3524  0F59  1903               	skipnz
  3525  0F5A  2EFE               	goto	l4330
  3526  0F5B  3A01               	xorlw	1	; case 3
  3527  0F5C  1903               	skipnz
  3528  0F5D  2F22               	goto	l4332
  3529  0F5E  2FB7               	goto	l4356
  3530  0F5F                     l4338:	
  3531                           
  3532                           ;games.c: 348:             turn_on_led(0);
  3533  0F5F  3000               	movlw	0
  3534  0F60  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  3535  0F65                     l4340:	
  3536                           
  3537                           ;games.c: 349:             play_tone(17026, 63);
  3538  0F65  3082               	movlw	130
  3539  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  3541  0F68  00A0               	movwf	play_tone@tone_period
  3542  0F69  3042               	movlw	66
  3543  0F6A  00A1               	movwf	play_tone@tone_period+1
  3544  0F6B  303F               	movlw	63
  3545  0F6C  00B0               	movwf	??_play_pattern
  3546  0F6D  0830               	movf	??_play_pattern,w
  3547  0F6E  00A2               	movwf	play_tone@duration_8ms
  3548  0F6F  160A  118A  232F  120A  158A  	fcall	_play_tone
  3549                           
  3550                           ;games.c: 350:             break;
  3551  0F74  2FCD               	goto	l4358
  3552  0F75                     l4342:	
  3553                           
  3554                           ;games.c: 352:             turn_on_led(1);
  3555  0F75  3001               	movlw	1
  3556  0F76  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  3557  0F7B                     l4344:	
  3558                           
  3559                           ;games.c: 353:             play_tone(8513, 63);
  3560  0F7B  3041               	movlw	65
  3561  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0F7E  00A0               	movwf	play_tone@tone_period
  3564  0F7F  3021               	movlw	33
  3565  0F80  00A1               	movwf	play_tone@tone_period+1
  3566  0F81  303F               	movlw	63
  3567  0F82  00B0               	movwf	??_play_pattern
  3568  0F83  0830               	movf	??_play_pattern,w
  3569  0F84  00A2               	movwf	play_tone@duration_8ms
  3570  0F85  160A  118A  232F  120A  158A  	fcall	_play_tone
  3571                           
  3572                           ;games.c: 354:             break;
  3573  0F8A  2FCD               	goto	l4358
  3574  0F8B                     l4346:	
  3575                           
  3576                           ;games.c: 356:             turn_on_led(2);
  3577  0F8B  3002               	movlw	2
  3578  0F8C  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  3579  0F91                     l4348:	
  3580                           
  3581                           ;games.c: 357:             play_tone(4257, 63);
  3582  0F91  30A1               	movlw	161
  3583  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0F94  00A0               	movwf	play_tone@tone_period
  3586  0F95  3010               	movlw	16
  3587  0F96  00A1               	movwf	play_tone@tone_period+1
  3588  0F97  303F               	movlw	63
  3589  0F98  00B0               	movwf	??_play_pattern
  3590  0F99  0830               	movf	??_play_pattern,w
  3591  0F9A  00A2               	movwf	play_tone@duration_8ms
  3592  0F9B  160A  118A  232F  120A  158A  	fcall	_play_tone
  3593                           
  3594                           ;games.c: 358:             break;
  3595  0FA0  2FCD               	goto	l4358
  3596  0FA1                     l4350:	
  3597                           
  3598                           ;games.c: 360:             turn_on_led(5);
  3599  0FA1  3005               	movlw	5
  3600  0FA2  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  3601  0FA7                     l4352:	
  3602                           
  3603                           ;games.c: 361:             play_tone(2128, 63);
  3604  0FA7  3050               	movlw	80
  3605  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0FAA  00A0               	movwf	play_tone@tone_period
  3608  0FAB  3008               	movlw	8
  3609  0FAC  00A1               	movwf	play_tone@tone_period+1
  3610  0FAD  303F               	movlw	63
  3611  0FAE  00B0               	movwf	??_play_pattern
  3612  0FAF  0830               	movf	??_play_pattern,w
  3613  0FB0  00A2               	movwf	play_tone@duration_8ms
  3614  0FB1  160A  118A  232F  120A  158A  	fcall	_play_tone
  3615                           
  3616                           ;games.c: 362:             break;
  3617  0FB6  2FCD               	goto	l4358
  3618  0FB7                     l4356:	
  3619  0FB7  0834               	movf	play_pattern@current_option,w
  3620  0FB8  00B0               	movwf	??_play_pattern
  3621  0FB9  01B1               	clrf	??_play_pattern+1
  3622                           
  3623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3624                           ; Switch size 1, requested type "simple"
  3625                           ; Number of cases is 1, Range of values is 0 to 0
  3626                           ; switch strategies available:
  3627                           ; Name         Instructions Cycles
  3628                           ; simple_byte            4     3 (average)
  3629                           ; direct_byte           11     8 (fixed)
  3630                           ; jumptable            260     6 (fixed)
  3631                           ;	Chosen strategy is simple_byte
  3632  0FBA  0831               	movf	??_play_pattern+1,w
  3633  0FBB  3A00               	xorlw	0	; case 0
  3634  0FBC  1903               	skipnz
  3635  0FBD  2FBF               	goto	l5150
  3636  0FBE  2FCD               	goto	l4358
  3637  0FBF                     l5150:	
  3638                           
  3639                           ; Switch size 1, requested type "simple"
  3640                           ; Number of cases is 4, Range of values is 0 to 3
  3641                           ; switch strategies available:
  3642                           ; Name         Instructions Cycles
  3643                           ; simple_byte           13     7 (average)
  3644                           ; direct_byte           20     8 (fixed)
  3645                           ; jumptable            260     6 (fixed)
  3646                           ;	Chosen strategy is simple_byte
  3647  0FBF  0830               	movf	??_play_pattern,w
  3648  0FC0  3A00               	xorlw	0	; case 0
  3649  0FC1  1903               	skipnz
  3650  0FC2  2F5F               	goto	l4338
  3651  0FC3  3A01               	xorlw	1	; case 1
  3652  0FC4  1903               	skipnz
  3653  0FC5  2F75               	goto	l4342
  3654  0FC6  3A03               	xorlw	3	; case 2
  3655  0FC7  1903               	skipnz
  3656  0FC8  2F8B               	goto	l4346
  3657  0FC9  3A01               	xorlw	1	; case 3
  3658  0FCA  1903               	skipnz
  3659  0FCB  2FA1               	goto	l4350
  3660  0FCC  2FCD               	goto	l4358
  3661  0FCD                     l4358:	
  3662                           
  3663                           ;games.c: 364:         PORTC &= 0x1F;
  3664  0FCD  301F               	movlw	31
  3665  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  3666  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  3667  0FD0  00B0               	movwf	??_play_pattern
  3668  0FD1  0830               	movf	??_play_pattern,w
  3669  0FD2  0587               	andwf	7,f	;volatile
  3670  0FD3                     l4360:	
  3671                           
  3672                           ;games.c: 365:         DelayMs(250);
  3673  0FD3  30FA               	movlw	250
  3674  0FD4  00A0               	movwf	DelayMs@millis
  3675  0FD5  3000               	movlw	0
  3676  0FD6  00A1               	movwf	DelayMs@millis+1
  3677  0FD7  160A  118A  22C4  120A  158A  	fcall	_DelayMs
  3678  0FDC                     l4362:	
  3679                           
  3680                           ;games.c: 366:     }
  3681  0FDC  3001               	movlw	1
  3682  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0FDF  00B0               	movwf	??_play_pattern
  3685  0FE0  0830               	movf	??_play_pattern,w
  3686  0FE1  07B5               	addwf	play_pattern@i,f
  3687  0FE2                     l4364:	
  3688  0FE2  0864               	movf	_p1_score,w
  3689  0FE3  3E01               	addlw	1
  3690  0FE4  00B0               	movwf	??_play_pattern
  3691  0FE5  3000               	movlw	0
  3692  0FE6  1803               	skipnc
  3693  0FE7  3001               	movlw	1
  3694  0FE8  00B1               	movwf	??_play_pattern+1
  3695  0FE9  0831               	movf	??_play_pattern+1,w
  3696  0FEA  3A80               	xorlw	128
  3697  0FEB  3C80               	sublw	128
  3698  0FEC  1D03               	skipz
  3699  0FED  2FF0               	goto	u3275
  3700  0FEE  0830               	movf	??_play_pattern,w
  3701  0FEF  0235               	subwf	play_pattern@i,w
  3702  0FF0                     u3275:	
  3703  0FF0  1C03               	skipc
  3704  0FF1  2FF3               	goto	u3271
  3705  0FF2  2FF4               	goto	u3270
  3706  0FF3                     u3271:	
  3707  0FF3  2F46               	goto	l4336
  3708  0FF4                     u3270:	
  3709  0FF4                     l4366:	
  3710                           
  3711                           ;games.c: 367:     lcd_clear(gameboard);
  3712  0FF4  3005               	movlw	5
  3713  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0FF7  00A8               	movwf	lcd_clear@port
  3716  0FF8  3000               	movlw	0
  3717  0FF9  00A9               	movwf	lcd_clear@port+1
  3718  0FFA  160A  118A  22DD  120A  158A  	fcall	_lcd_clear
  3719  0FFF                     l363:	
  3720  0FFF  0008               	return
  3721  1000                     __end_of_play_pattern:	
  3722                           
  3723                           	psect	text7
  3724  023D                     __ptext7:	
  3725 ;; *************** function _generate_pattern *****************
  3726 ;; Defined at:
  3727 ;;		line 370 in file "games.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  current_byte    1   19[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       0       0       0       0
  3742 ;;      Locals:         0       1       0       0       0
  3743 ;;      Temps:          0       3       0       0       0
  3744 ;;      Totals:         0       4       0       0       0
  3745 ;;Total ram usage:        4 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    2
  3748 ;; This function calls:
  3749 ;;		_DelayMs
  3750 ;;		___awdiv
  3751 ;; This function is called by:
  3752 ;;		_simon_says_game_loop
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _generate_pattern
  3758  023D                     _generate_pattern:	
  3759  023D                     l4298:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _generate_pattern: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3762                           
  3763                           
  3764                           ;games.c: 371:     char current_byte;;games.c: 372:     DelayMs(TMR2>>(2+(TMR1%4)));
  3765  023D  1283               	bcf	3,5	;RP0=0, select bank0
  3766  023E  1303               	bcf	3,6	;RP1=0, select bank0
  3767  023F  0811               	movf	17,w	;volatile
  3768  0240  00B0               	movwf	??_generate_pattern
  3769  0241  080E               	movf	14,w	;volatile
  3770  0242  3903               	andlw	3
  3771  0243  3E02               	addlw	2
  3772  0244  3E01               	addlw	1
  3773  0245  2A48               	goto	u3204
  3774  0246                     u3205:	
  3775  0246  1003               	clrc
  3776  0247  0CB0               	rrf	??_generate_pattern,f
  3777  0248                     u3204:	
  3778  0248  3EFF               	addlw	-1
  3779  0249  1D03               	skipz
  3780  024A  2A46               	goto	u3205
  3781  024B  0830               	movf	??_generate_pattern,w
  3782  024C  00B1               	movwf	??_generate_pattern+1
  3783  024D  01B2               	clrf	??_generate_pattern+2
  3784  024E  0831               	movf	??_generate_pattern+1,w
  3785  024F  00A0               	movwf	DelayMs@millis
  3786  0250  0832               	movf	??_generate_pattern+2,w
  3787  0251  00A1               	movwf	DelayMs@millis+1
  3788  0252  160A  118A  22C4  120A  118A  	fcall	_DelayMs
  3789  0257                     l4300:	
  3790                           
  3791                           ;games.c: 373:     current_byte = simon_says_pattern[p1_score/4];
  3792  0257  3004               	movlw	4
  3793  0258  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0259  1303               	bcf	3,6	;RP1=0, select bank0
  3795  025A  00A7               	movwf	___awdiv@divisor
  3796  025B  3000               	movlw	0
  3797  025C  00A8               	movwf	___awdiv@divisor+1
  3798  025D  0864               	movf	_p1_score,w
  3799  025E  00B0               	movwf	??_generate_pattern
  3800  025F  01B1               	clrf	??_generate_pattern+1
  3801  0260  0830               	movf	??_generate_pattern,w
  3802  0261  00A9               	movwf	___awdiv@dividend
  3803  0262  0831               	movf	??_generate_pattern+1,w
  3804  0263  00AA               	movwf	___awdiv@dividend+1
  3805  0264  160A  118A  26B3  120A  118A  	fcall	___awdiv
  3806  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3807  026A  1303               	bcf	3,6	;RP1=0, select bank0
  3808  026B  0827               	movf	?___awdiv,w
  3809  026C  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3810  026D  0084               	movwf	4
  3811  026E  1383               	bcf	3,7	;select IRP bank1
  3812  026F  0800               	movf	0,w
  3813  0270  00B2               	movwf	??_generate_pattern+2
  3814  0271  0832               	movf	??_generate_pattern+2,w
  3815  0272  00B3               	movwf	generate_pattern@current_byte
  3816                           
  3817                           ;games.c: 374:     switch(p1_score%4) {
  3818  0273  2AB7               	goto	l4312
  3819  0274                     l4302:	
  3820                           
  3821                           ;games.c: 376:             current_byte &= 0xFC;
  3822  0274  30FC               	movlw	252
  3823  0275  00B0               	movwf	??_generate_pattern
  3824  0276  0830               	movf	??_generate_pattern,w
  3825  0277  05B3               	andwf	generate_pattern@current_byte,f
  3826                           
  3827                           ;games.c: 377:             current_byte |= TMR1%4;
  3828  0278  080E               	movf	14,w	;volatile
  3829  0279  3903               	andlw	3
  3830  027A  00B0               	movwf	??_generate_pattern
  3831  027B  0830               	movf	??_generate_pattern,w
  3832  027C  04B3               	iorwf	generate_pattern@current_byte,f
  3833                           
  3834                           ;games.c: 378:             break;
  3835  027D  2ACE               	goto	l4314
  3836  027E                     l4304:	
  3837                           
  3838                           ;games.c: 380:             current_byte &= 0xF3;
  3839  027E  30F3               	movlw	243
  3840  027F  00B0               	movwf	??_generate_pattern
  3841  0280  0830               	movf	??_generate_pattern,w
  3842  0281  05B3               	andwf	generate_pattern@current_byte,f
  3843                           
  3844                           ;games.c: 381:             current_byte |= ((TMR1%4)<<2);
  3845  0282  080E               	movf	14,w	;volatile
  3846  0283  3903               	andlw	3
  3847  0284  00B0               	movwf	??_generate_pattern
  3848  0285  3001               	movlw	1
  3849  0286                     u3215:	
  3850  0286  1003               	clrc
  3851  0287  0DB0               	rlf	??_generate_pattern,f
  3852  0288  3EFF               	addlw	-1
  3853  0289  1D03               	skipz
  3854  028A  2A86               	goto	u3215
  3855  028B  1003               	clrc
  3856  028C  0D30               	rlf	??_generate_pattern,w
  3857  028D  00B1               	movwf	??_generate_pattern+1
  3858  028E  0831               	movf	??_generate_pattern+1,w
  3859  028F  04B3               	iorwf	generate_pattern@current_byte,f
  3860                           
  3861                           ;games.c: 382:             break;
  3862  0290  2ACE               	goto	l4314
  3863  0291                     l4306:	
  3864                           
  3865                           ;games.c: 384:             current_byte &= 0xCF;
  3866  0291  30CF               	movlw	207
  3867  0292  00B0               	movwf	??_generate_pattern
  3868  0293  0830               	movf	??_generate_pattern,w
  3869  0294  05B3               	andwf	generate_pattern@current_byte,f
  3870                           
  3871                           ;games.c: 385:             current_byte |= ((TMR1%4)<<4);
  3872  0295  080E               	movf	14,w	;volatile
  3873  0296  3903               	andlw	3
  3874  0297  00B0               	movwf	??_generate_pattern
  3875  0298  3003               	movlw	3
  3876  0299                     u3225:	
  3877  0299  1003               	clrc
  3878  029A  0DB0               	rlf	??_generate_pattern,f
  3879  029B  3EFF               	addlw	-1
  3880  029C  1D03               	skipz
  3881  029D  2A99               	goto	u3225
  3882  029E  1003               	clrc
  3883  029F  0D30               	rlf	??_generate_pattern,w
  3884  02A0  00B1               	movwf	??_generate_pattern+1
  3885  02A1  0831               	movf	??_generate_pattern+1,w
  3886  02A2  04B3               	iorwf	generate_pattern@current_byte,f
  3887                           
  3888                           ;games.c: 386:             break;
  3889  02A3  2ACE               	goto	l4314
  3890  02A4                     l4308:	
  3891                           
  3892                           ;games.c: 388:             current_byte &= 0x3F;
  3893  02A4  303F               	movlw	63
  3894  02A5  00B0               	movwf	??_generate_pattern
  3895  02A6  0830               	movf	??_generate_pattern,w
  3896  02A7  05B3               	andwf	generate_pattern@current_byte,f
  3897                           
  3898                           ;games.c: 389:             current_byte |= ((TMR1%4)<<6);
  3899  02A8  080E               	movf	14,w	;volatile
  3900  02A9  3903               	andlw	3
  3901  02AA  00B0               	movwf	??_generate_pattern
  3902  02AB  3005               	movlw	5
  3903  02AC                     u3235:	
  3904  02AC  1003               	clrc
  3905  02AD  0DB0               	rlf	??_generate_pattern,f
  3906  02AE  3EFF               	addlw	-1
  3907  02AF  1D03               	skipz
  3908  02B0  2AAC               	goto	u3235
  3909  02B1  1003               	clrc
  3910  02B2  0D30               	rlf	??_generate_pattern,w
  3911  02B3  00B1               	movwf	??_generate_pattern+1
  3912  02B4  0831               	movf	??_generate_pattern+1,w
  3913  02B5  04B3               	iorwf	generate_pattern@current_byte,f
  3914                           
  3915                           ;games.c: 390:             break;
  3916  02B6  2ACE               	goto	l4314
  3917  02B7                     l4312:	
  3918  02B7  0864               	movf	_p1_score,w
  3919  02B8  3903               	andlw	3
  3920  02B9  00B0               	movwf	??_generate_pattern
  3921  02BA  01B1               	clrf	??_generate_pattern+1
  3922                           
  3923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3924                           ; Switch size 1, requested type "simple"
  3925                           ; Number of cases is 1, Range of values is 0 to 0
  3926                           ; switch strategies available:
  3927                           ; Name         Instructions Cycles
  3928                           ; simple_byte            4     3 (average)
  3929                           ; direct_byte           11     8 (fixed)
  3930                           ; jumptable            260     6 (fixed)
  3931                           ;	Chosen strategy is simple_byte
  3932  02BB  0831               	movf	??_generate_pattern+1,w
  3933  02BC  3A00               	xorlw	0	; case 0
  3934  02BD  1903               	skipnz
  3935  02BE  2AC0               	goto	l5152
  3936  02BF  2ACE               	goto	l4314
  3937  02C0                     l5152:	
  3938                           
  3939                           ; Switch size 1, requested type "simple"
  3940                           ; Number of cases is 4, Range of values is 0 to 3
  3941                           ; switch strategies available:
  3942                           ; Name         Instructions Cycles
  3943                           ; simple_byte           13     7 (average)
  3944                           ; direct_byte           20     8 (fixed)
  3945                           ; jumptable            260     6 (fixed)
  3946                           ;	Chosen strategy is simple_byte
  3947  02C0  0830               	movf	??_generate_pattern,w
  3948  02C1  3A00               	xorlw	0	; case 0
  3949  02C2  1903               	skipnz
  3950  02C3  2A74               	goto	l4302
  3951  02C4  3A01               	xorlw	1	; case 1
  3952  02C5  1903               	skipnz
  3953  02C6  2A7E               	goto	l4304
  3954  02C7  3A03               	xorlw	3	; case 2
  3955  02C8  1903               	skipnz
  3956  02C9  2A91               	goto	l4306
  3957  02CA  3A01               	xorlw	1	; case 3
  3958  02CB  1903               	skipnz
  3959  02CC  2AA4               	goto	l4308
  3960  02CD  2ACE               	goto	l4314
  3961  02CE                     l4314:	
  3962                           
  3963                           ;games.c: 392:     simon_says_pattern[p1_score/4] = current_byte;
  3964  02CE  0833               	movf	generate_pattern@current_byte,w
  3965  02CF  00B0               	movwf	??_generate_pattern
  3966  02D0  3004               	movlw	4
  3967  02D1  00A7               	movwf	___awdiv@divisor
  3968  02D2  3000               	movlw	0
  3969  02D3  00A8               	movwf	___awdiv@divisor+1
  3970  02D4  0864               	movf	_p1_score,w
  3971  02D5  00B1               	movwf	??_generate_pattern+1
  3972  02D6  01B2               	clrf	??_generate_pattern+2
  3973  02D7  0831               	movf	??_generate_pattern+1,w
  3974  02D8  00A9               	movwf	___awdiv@dividend
  3975  02D9  0832               	movf	??_generate_pattern+2,w
  3976  02DA  00AA               	movwf	___awdiv@dividend+1
  3977  02DB  160A  118A  26B3  120A  118A  	fcall	___awdiv
  3978  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3979  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3980  02E2  0827               	movf	?___awdiv,w
  3981  02E3  3EC0               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3982  02E4  0084               	movwf	4
  3983  02E5  0830               	movf	??_generate_pattern,w
  3984  02E6  1383               	bcf	3,7	;select IRP bank1
  3985  02E7  0080               	movwf	0
  3986  02E8                     l372:	
  3987  02E8  0008               	return
  3988  02E9                     __end_of_generate_pattern:	
  3989                           
  3990                           	psect	text8
  3991  0771                     __ptext8:	
  3992 ;; *************** function _display_simon_says_scoreboard *****************
  3993 ;; Defined at:
  3994 ;;		line 406 in file "games.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0
  4010 ;;      Temps:          0       2       0       0       0
  4011 ;;      Totals:         0       2       0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    4
  4015 ;; This function calls:
  4016 ;;		___awdiv
  4017 ;;		___awmod
  4018 ;;		_lcd_clear
  4019 ;;		_lcd_goto
  4020 ;;		_lcd_putch
  4021 ;;		_lcd_puts
  4022 ;; This function is called by:
  4023 ;;		_simon_says_game_loop
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           
  4028                           ;psect for function _display_simon_says_scoreboard
  4029  0771                     _display_simon_says_scoreboard:	
  4030  0771                     l4270:	
  4031                           ;incstack = 0
  4032                           ; Regs used in _display_simon_says_scoreboard: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  4033                           
  4034                           
  4035                           ;games.c: 407:     lcd_clear(scoreboard);
  4036  0771  3008               	movlw	8
  4037  0772  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0773  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0774  00A8               	movwf	lcd_clear@port
  4040  0775  3000               	movlw	0
  4041  0776  00A9               	movwf	lcd_clear@port+1
  4042  0777  160A  118A  22DD  120A  118A  	fcall	_lcd_clear
  4043  077C                     l4272:	
  4044                           
  4045                           ;games.c: 408:     lcd_puts("     Score:", scoreboard);
  4046  077C  3074               	movlw	low (STR_19| (0+32768))
  4047  077D  1283               	bcf	3,5	;RP0=0, select bank0
  4048  077E  1303               	bcf	3,6	;RP1=0, select bank0
  4049  077F  00A8               	movwf	lcd_puts@string
  4050  0780  3084               	movlw	high (STR_19| (0+32768))
  4051  0781  00A9               	movwf	lcd_puts@string+1
  4052  0782  3008               	movlw	8
  4053  0783  00AA               	movwf	lcd_puts@port
  4054  0784  3000               	movlw	0
  4055  0785  00AB               	movwf	lcd_puts@port+1
  4056  0786  160A  118A  23D4  120A  118A  	fcall	_lcd_puts
  4057  078B                     l4274:	
  4058                           
  4059                           ;games.c: 409:     lcd_goto(0x43, scoreboard);
  4060  078B  3008               	movlw	8
  4061  078C  1283               	bcf	3,5	;RP0=0, select bank0
  4062  078D  1303               	bcf	3,6	;RP1=0, select bank0
  4063  078E  00A8               	movwf	lcd_goto@port
  4064  078F  3000               	movlw	0
  4065  0790  00A9               	movwf	lcd_goto@port+1
  4066  0791  3043               	movlw	67
  4067  0792  160A  118A  2311  120A  118A  	fcall	_lcd_goto
  4068  0797                     l4276:	
  4069                           
  4070                           ;games.c: 410:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  4071  0797  3008               	movlw	8
  4072  0798  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0799  1303               	bcf	3,6	;RP1=0, select bank0
  4074  079A  00B0               	movwf	lcd_putch@port
  4075  079B  3000               	movlw	0
  4076  079C  00B1               	movwf	lcd_putch@port+1
  4077  079D  300A               	movlw	10
  4078  079E  00A7               	movwf	___awdiv@divisor
  4079  079F  3000               	movlw	0
  4080  07A0  00A8               	movwf	___awdiv@divisor+1
  4081  07A1  0864               	movf	_p1_score,w
  4082  07A2  00B4               	movwf	??_display_simon_says_scoreboard
  4083  07A3  01B5               	clrf	??_display_simon_says_scoreboard+1
  4084  07A4  0834               	movf	??_display_simon_says_scoreboard,w
  4085  07A5  00A2               	movwf	___awmod@dividend
  4086  07A6  0835               	movf	??_display_simon_says_scoreboard+1,w
  4087  07A7  00A3               	movwf	___awmod@dividend+1
  4088  07A8  3064               	movlw	100
  4089  07A9  00A0               	movwf	___awmod@divisor
  4090  07AA  3000               	movlw	0
  4091  07AB  00A1               	movwf	___awmod@divisor+1
  4092  07AC  120A  158A  2002  120A  118A  	fcall	___awmod
  4093  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4094  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4095  07B3  0821               	movf	?___awmod+1,w
  4096  07B4  00AA               	movwf	___awdiv@dividend+1
  4097  07B5  0820               	movf	?___awmod,w
  4098  07B6  00A9               	movwf	___awdiv@dividend
  4099  07B7  160A  118A  26B3  120A  118A  	fcall	___awdiv
  4100  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  4101  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  4102  07BE  0827               	movf	?___awdiv,w
  4103  07BF  3E30               	addlw	48
  4104  07C0  160A  118A  22A0  120A  118A  	fcall	_lcd_putch
  4105  07C5                     l4278:	
  4106                           
  4107                           ;games.c: 411:     lcd_putch((p1_score%10)+0x30, scoreboard);
  4108  07C5  3008               	movlw	8
  4109  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  4110  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  4111  07C8  00B0               	movwf	lcd_putch@port
  4112  07C9  3000               	movlw	0
  4113  07CA  00B1               	movwf	lcd_putch@port+1
  4114  07CB  300A               	movlw	10
  4115  07CC  00A0               	movwf	___awmod@divisor
  4116  07CD  3000               	movlw	0
  4117  07CE  00A1               	movwf	___awmod@divisor+1
  4118  07CF  0864               	movf	_p1_score,w
  4119  07D0  00B4               	movwf	??_display_simon_says_scoreboard
  4120  07D1  01B5               	clrf	??_display_simon_says_scoreboard+1
  4121  07D2  0834               	movf	??_display_simon_says_scoreboard,w
  4122  07D3  00A2               	movwf	___awmod@dividend
  4123  07D4  0835               	movf	??_display_simon_says_scoreboard+1,w
  4124  07D5  00A3               	movwf	___awmod@dividend+1
  4125  07D6  120A  158A  2002  120A  118A  	fcall	___awmod
  4126  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  4127  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  4128  07DD  0820               	movf	?___awmod,w
  4129  07DE  3E30               	addlw	48
  4130  07DF  160A  118A  22A0  120A  118A  	fcall	_lcd_putch
  4131                           
  4132                           ;games.c: 412:     lcd_puts("  Rounds", scoreboard);
  4133  07E4  308B               	movlw	low (STR_20| (0+32768))
  4134  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  4135  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  4136  07E7  00A8               	movwf	lcd_puts@string
  4137  07E8  3084               	movlw	high (STR_20| (0+32768))
  4138  07E9  00A9               	movwf	lcd_puts@string+1
  4139  07EA  3008               	movlw	8
  4140  07EB  00AA               	movwf	lcd_puts@port
  4141  07EC  3000               	movlw	0
  4142  07ED  00AB               	movwf	lcd_puts@port+1
  4143  07EE  160A  118A  23D4  120A  118A  	fcall	_lcd_puts
  4144  07F3                     l380:	
  4145  07F3  0008               	return
  4146  07F4                     __end_of_display_simon_says_scoreboard:	
  4147                           
  4148                           	psect	text9
  4149  14C9                     __ptext9:	
  4150 ;; *************** function _countdown *****************
  4151 ;; Defined at:
  4152 ;;		line 395 in file "games.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  i               1   21[BANK0 ] char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       0       0       0       0
  4167 ;;      Locals:         0       1       0       0       0
  4168 ;;      Temps:          0       1       0       0       0
  4169 ;;      Totals:         0       2       0       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    4
  4173 ;; This function calls:
  4174 ;;		_DelayMs
  4175 ;;		_lcd_clear
  4176 ;;		_lcd_goto
  4177 ;;		_lcd_putch
  4178 ;; This function is called by:
  4179 ;;		_simon_says_game_loop
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function _countdown
  4185  14C9                     _countdown:	
  4186  14C9                     l4280:	
  4187                           ;incstack = 0
  4188                           ; Regs used in _countdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4189                           
  4190                           
  4191                           ;games.c: 396:     lcd_clear(gameboard);
  4192  14C9  3005               	movlw	5
  4193  14CA  1283               	bcf	3,5	;RP0=0, select bank0
  4194  14CB  1303               	bcf	3,6	;RP1=0, select bank0
  4195  14CC  00A8               	movwf	lcd_clear@port
  4196  14CD  3000               	movlw	0
  4197  14CE  00A9               	movwf	lcd_clear@port+1
  4198  14CF  160A  118A  22DD  160A  118A  	fcall	_lcd_clear
  4199  14D4                     l4282:	
  4200                           
  4201                           ;games.c: 397:     signed char i;;games.c: 398:     for(i=3;i>=0;i--) {
  4202  14D4  3003               	movlw	3
  4203  14D5  1283               	bcf	3,5	;RP0=0, select bank0
  4204  14D6  1303               	bcf	3,6	;RP1=0, select bank0
  4205  14D7  00B4               	movwf	??_countdown
  4206  14D8  0834               	movf	??_countdown,w
  4207  14D9  00B5               	movwf	countdown@i
  4208  14DA                     l4288:	
  4209                           
  4210                           ;games.c: 399:         lcd_goto(0x07, gameboard);
  4211  14DA  3005               	movlw	5
  4212  14DB  00A8               	movwf	lcd_goto@port
  4213  14DC  3000               	movlw	0
  4214  14DD  00A9               	movwf	lcd_goto@port+1
  4215  14DE  3007               	movlw	7
  4216  14DF  160A  118A  2311  160A  118A  	fcall	_lcd_goto
  4217                           
  4218                           ;games.c: 400:         lcd_putch(i+0x30, gameboard);
  4219  14E4  3005               	movlw	5
  4220  14E5  1283               	bcf	3,5	;RP0=0, select bank0
  4221  14E6  1303               	bcf	3,6	;RP1=0, select bank0
  4222  14E7  00B0               	movwf	lcd_putch@port
  4223  14E8  3000               	movlw	0
  4224  14E9  00B1               	movwf	lcd_putch@port+1
  4225  14EA  0835               	movf	countdown@i,w
  4226  14EB  3E30               	addlw	48
  4227  14EC  160A  118A  22A0  160A  118A  	fcall	_lcd_putch
  4228  14F1                     l4290:	
  4229                           
  4230                           ;games.c: 401:         DelayMs(1000);
  4231  14F1  30E8               	movlw	232
  4232  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  4233  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  4234  14F4  00A0               	movwf	DelayMs@millis
  4235  14F5  3003               	movlw	3
  4236  14F6  00A1               	movwf	DelayMs@millis+1
  4237  14F7  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  4238  14FC                     l4292:	
  4239                           
  4240                           ;games.c: 402:     }
  4241  14FC  30FF               	movlw	255
  4242  14FD  1283               	bcf	3,5	;RP0=0, select bank0
  4243  14FE  1303               	bcf	3,6	;RP1=0, select bank0
  4244  14FF  00B4               	movwf	??_countdown
  4245  1500  0834               	movf	??_countdown,w
  4246  1501  07B5               	addwf	countdown@i,f
  4247  1502                     l4294:	
  4248  1502  1FB5               	btfss	countdown@i,7
  4249  1503  2D05               	goto	u3191
  4250  1504  2D06               	goto	u3190
  4251  1505                     u3191:	
  4252  1505  2CDA               	goto	l4288
  4253  1506                     u3190:	
  4254  1506                     l4296:	
  4255                           
  4256                           ;games.c: 403:     lcd_clear(gameboard);
  4257  1506  3005               	movlw	5
  4258  1507  00A8               	movwf	lcd_clear@port
  4259  1508  3000               	movlw	0
  4260  1509  00A9               	movwf	lcd_clear@port+1
  4261  150A  160A  118A  22DD  160A  118A  	fcall	_lcd_clear
  4262  150F                     l377:	
  4263  150F  0008               	return
  4264  1510                     __end_of_countdown:	
  4265                           
  4266                           	psect	text10
  4267  178D                     __ptext10:	
  4268 ;; *************** function _simon_says_game_end *****************
  4269 ;; Defined at:
  4270 ;;		line 200 in file "games.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4284 ;;      Params:         0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0
  4287 ;;      Totals:         0       0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    5
  4291 ;; This function calls:
  4292 ;;		_end_screen
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _simon_says_game_end
  4300  178D                     _simon_says_game_end:	
  4301  178D                     l4784:	
  4302                           ;incstack = 0
  4303                           ; Regs used in _simon_says_game_end: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4304                           
  4305                           
  4306                           ;games.c: 201:     if(p1_score == 0) {
  4307  178D  1283               	bcf	3,5	;RP0=0, select bank0
  4308  178E  1303               	bcf	3,6	;RP1=0, select bank0
  4309  178F  0864               	movf	_p1_score,w
  4310  1790  1D03               	btfss	3,2
  4311  1791  2F93               	goto	u3771
  4312  1792  2F94               	goto	u3770
  4313  1793                     u3771:	
  4314  1793  2FA2               	goto	l4788
  4315  1794                     u3770:	
  4316  1794                     l4786:	
  4317                           
  4318                           ;games.c: 202:         end_screen("   Game Over!", "   You stink!");
  4319  1794  300A               	movlw	low (STR_4| (0+32768))
  4320  1795  00AD               	movwf	end_screen@first_row
  4321  1796  3084               	movlw	high (STR_4| (0+32768))
  4322  1797  00AE               	movwf	end_screen@first_row+1
  4323  1798  30EE               	movlw	low (STR_5| (0+32768))
  4324  1799  00AF               	movwf	end_screen@second_row
  4325  179A  3083               	movlw	high (STR_5| (0+32768))
  4326  179B  00B0               	movwf	end_screen@second_row+1
  4327  179C  120A  118A  2055  160A  118A  	fcall	_end_screen
  4328                           
  4329                           ;games.c: 203:     } else if(p1_score <= 5) {
  4330  17A1  2FFF               	goto	l301
  4331  17A2                     l4788:	
  4332  17A2  3006               	movlw	6
  4333  17A3  0264               	subwf	_p1_score,w
  4334  17A4  1803               	skipnc
  4335  17A5  2FA7               	goto	u3781
  4336  17A6  2FA8               	goto	u3780
  4337  17A7                     u3781:	
  4338  17A7  2FB6               	goto	l4792
  4339  17A8                     u3780:	
  4340  17A8                     l4790:	
  4341                           
  4342                           ;games.c: 204:         end_screen("   Game Over!", "Not very good...");
  4343  17A8  300A               	movlw	low (STR_4| (0+32768))
  4344  17A9  00AD               	movwf	end_screen@first_row
  4345  17AA  3084               	movlw	high (STR_4| (0+32768))
  4346  17AB  00AE               	movwf	end_screen@first_row+1
  4347  17AC  3052               	movlw	low (STR_7| (0+32768))
  4348  17AD  00AF               	movwf	end_screen@second_row
  4349  17AE  3083               	movlw	high (STR_7| (0+32768))
  4350  17AF  00B0               	movwf	end_screen@second_row+1
  4351  17B0  120A  118A  2055  160A  118A  	fcall	_end_screen
  4352                           
  4353                           ;games.c: 205:     } else if(p1_score <= 10) {
  4354  17B5  2FFF               	goto	l301
  4355  17B6                     l4792:	
  4356  17B6  300B               	movlw	11
  4357  17B7  0264               	subwf	_p1_score,w
  4358  17B8  1803               	skipnc
  4359  17B9  2FBB               	goto	u3791
  4360  17BA  2FBC               	goto	u3790
  4361  17BB                     u3791:	
  4362  17BB  2FCA               	goto	l4796
  4363  17BC                     u3790:	
  4364  17BC                     l4794:	
  4365                           
  4366                           ;games.c: 206:         end_screen("   Game Over!", "    Not bad.");
  4367  17BC  300A               	movlw	low (STR_4| (0+32768))
  4368  17BD  00AD               	movwf	end_screen@first_row
  4369  17BE  3084               	movlw	high (STR_4| (0+32768))
  4370  17BF  00AE               	movwf	end_screen@first_row+1
  4371  17C0  3033               	movlw	low (STR_9| (0+32768))
  4372  17C1  00AF               	movwf	end_screen@second_row
  4373  17C2  3084               	movlw	high (STR_9| (0+32768))
  4374  17C3  00B0               	movwf	end_screen@second_row+1
  4375  17C4  120A  118A  2055  160A  118A  	fcall	_end_screen
  4376                           
  4377                           ;games.c: 207:     } else if(p1_score <= 15) {
  4378  17C9  2FFF               	goto	l301
  4379  17CA                     l4796:	
  4380  17CA  3010               	movlw	16
  4381  17CB  0264               	subwf	_p1_score,w
  4382  17CC  1803               	skipnc
  4383  17CD  2FCF               	goto	u3801
  4384  17CE  2FD0               	goto	u3800
  4385  17CF                     u3801:	
  4386  17CF  2FDE               	goto	l4800
  4387  17D0                     u3800:	
  4388  17D0                     l4798:	
  4389                           
  4390                           ;games.c: 208:         end_screen("   Game Over!", "   Great job!");
  4391  17D0  300A               	movlw	low (STR_4| (0+32768))
  4392  17D1  00AD               	movwf	end_screen@first_row
  4393  17D2  3084               	movlw	high (STR_4| (0+32768))
  4394  17D3  00AE               	movwf	end_screen@first_row+1
  4395  17D4  30E0               	movlw	low (STR_11| (0+32768))
  4396  17D5  00AF               	movwf	end_screen@second_row
  4397  17D6  3083               	movlw	high (STR_11| (0+32768))
  4398  17D7  00B0               	movwf	end_screen@second_row+1
  4399  17D8  120A  118A  2055  160A  118A  	fcall	_end_screen
  4400                           
  4401                           ;games.c: 209:     } else if(p1_score < 20) {
  4402  17DD  2FFF               	goto	l301
  4403  17DE                     l4800:	
  4404  17DE  3014               	movlw	20
  4405  17DF  0264               	subwf	_p1_score,w
  4406  17E0  1803               	skipnc
  4407  17E1  2FE3               	goto	u3811
  4408  17E2  2FE4               	goto	u3810
  4409  17E3                     u3811:	
  4410  17E3  2FF2               	goto	l4804
  4411  17E4                     u3810:	
  4412  17E4                     l4802:	
  4413                           
  4414                           ;games.c: 210:         end_screen("   Game Over!", " Almost there!!");
  4415  17E4  300A               	movlw	low (STR_4| (0+32768))
  4416  17E5  00AD               	movwf	end_screen@first_row
  4417  17E6  3084               	movlw	high (STR_4| (0+32768))
  4418  17E7  00AE               	movwf	end_screen@first_row+1
  4419  17E8  3074               	movlw	low (STR_13| (0+32768))
  4420  17E9  00AF               	movwf	end_screen@second_row
  4421  17EA  3083               	movlw	high (STR_13| (0+32768))
  4422  17EB  00B0               	movwf	end_screen@second_row+1
  4423  17EC  120A  118A  2055  160A  118A  	fcall	_end_screen
  4424                           
  4425                           ;games.c: 211:     } else {
  4426  17F1  2FFF               	goto	l301
  4427  17F2                     l4804:	
  4428                           
  4429                           ;games.c: 212:         end_screen("   Game Over!", "   You win!!!");
  4430  17F2  300A               	movlw	low (STR_4| (0+32768))
  4431  17F3  00AD               	movwf	end_screen@first_row
  4432  17F4  3084               	movlw	high (STR_4| (0+32768))
  4433  17F5  00AE               	movwf	end_screen@first_row+1
  4434  17F6  30C4               	movlw	low (STR_15| (0+32768))
  4435  17F7  00AF               	movwf	end_screen@second_row
  4436  17F8  3083               	movlw	high (STR_15| (0+32768))
  4437  17F9  00B0               	movwf	end_screen@second_row+1
  4438  17FA  120A  118A  2055  160A  118A  	fcall	_end_screen
  4439  17FF                     l301:	
  4440  17FF  0008               	return
  4441  1800                     __end_of_simon_says_game_end:	
  4442                           
  4443                           	psect	text11
  4444  15AD                     __ptext11:	
  4445 ;; *************** function _lcd_init *****************
  4446 ;; Defined at:
  4447 ;;		line 155 in file "lcd4bits.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  port            2   10[BANK0 ] PTR unsigned char 
  4450 ;;		 -> PORTD(1), PORTA(1), 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4462 ;;      Params:         0       2       0       0       0
  4463 ;;      Locals:         0       0       0       0       0
  4464 ;;      Temps:          0       1       0       0       0
  4465 ;;      Totals:         0       3       0       0       0
  4466 ;;Total ram usage:        3 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    4
  4469 ;; This function calls:
  4470 ;;		_DelayMs
  4471 ;;		_lcd_clear
  4472 ;;		_lcd_write
  4473 ;;		_tmr0_init
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function _lcd_init
  4481  15AD                     _lcd_init:	
  4482  15AD                     l4550:	
  4483                           ;incstack = 0
  4484                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4485                           
  4486                           
  4487                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  4488  15AD  160A  118A  2288  160A  118A  	fcall	_tmr0_init
  4489  15B2                     l4552:	
  4490                           
  4491                           ;lcd4bits.c: 158:     *port = 0;
  4492  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  4493  15B3  1303               	bcf	3,6	;RP1=0, select bank0
  4494  15B4  082A               	movf	lcd_init@port,w
  4495  15B5  0084               	movwf	4
  4496  15B6  1783               	bsf	3,7
  4497  15B7  1C2B               	btfss	lcd_init@port+1,0
  4498  15B8  1383               	bcf	3,7
  4499  15B9  0180               	clrf	0
  4500  15BA                     l4554:	
  4501                           
  4502                           ;lcd4bits.c: 159:     DelayMs(15);
  4503  15BA  300F               	movlw	15
  4504  15BB  00A0               	movwf	DelayMs@millis
  4505  15BC  3000               	movlw	0
  4506  15BD  00A1               	movwf	DelayMs@millis+1
  4507  15BE  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  4508  15C3                     l4556:	
  4509                           
  4510                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  4511  15C3  3028               	movlw	40
  4512  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  4513  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  4514  15C6  00AC               	movwf	??_lcd_init
  4515  15C7  082C               	movf	??_lcd_init,w
  4516  15C8  00A2               	movwf	lcd_write@CmdChar
  4517  15C9  082A               	movf	lcd_init@port,w
  4518  15CA  00A3               	movwf	lcd_write@port
  4519  15CB  082B               	movf	lcd_init@port+1,w
  4520  15CC  00A4               	movwf	lcd_write@port+1
  4521  15CD  3000               	movlw	0
  4522  15CE  160A  118A  255E  160A  118A  	fcall	_lcd_write
  4523  15D3                     l4558:	
  4524                           
  4525                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  4526  15D3  300C               	movlw	12
  4527  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  4528  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  4529  15D6  00AC               	movwf	??_lcd_init
  4530  15D7  082C               	movf	??_lcd_init,w
  4531  15D8  00A2               	movwf	lcd_write@CmdChar
  4532  15D9  082A               	movf	lcd_init@port,w
  4533  15DA  00A3               	movwf	lcd_write@port
  4534  15DB  082B               	movf	lcd_init@port+1,w
  4535  15DC  00A4               	movwf	lcd_write@port+1
  4536  15DD  3000               	movlw	0
  4537  15DE  160A  118A  255E  160A  118A  	fcall	_lcd_write
  4538  15E3                     l4560:	
  4539                           
  4540                           ;lcd4bits.c: 162:     lcd_clear(port);
  4541  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  4542  15E4  1303               	bcf	3,6	;RP1=0, select bank0
  4543  15E5  082A               	movf	lcd_init@port,w
  4544  15E6  00A8               	movwf	lcd_clear@port
  4545  15E7  082B               	movf	lcd_init@port+1,w
  4546  15E8  00A9               	movwf	lcd_clear@port+1
  4547  15E9  160A  118A  22DD  160A  118A  	fcall	_lcd_clear
  4548  15EE                     l4562:	
  4549                           
  4550                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  4551  15EE  3006               	movlw	6
  4552  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  4553  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  4554  15F1  00AC               	movwf	??_lcd_init
  4555  15F2  082C               	movf	??_lcd_init,w
  4556  15F3  00A2               	movwf	lcd_write@CmdChar
  4557  15F4  082A               	movf	lcd_init@port,w
  4558  15F5  00A3               	movwf	lcd_write@port
  4559  15F6  082B               	movf	lcd_init@port+1,w
  4560  15F7  00A4               	movwf	lcd_write@port+1
  4561  15F8  3000               	movlw	0
  4562  15F9  160A  118A  255E  160A  118A  	fcall	_lcd_write
  4563  15FE                     l44:	
  4564  15FE  0008               	return
  4565  15FF                     __end_of_lcd_init:	
  4566                           
  4567                           	psect	text12
  4568  1288                     __ptext12:	
  4569 ;; *************** function _tmr0_init *****************
  4570 ;; Defined at:
  4571 ;;		line 72 in file "lcd4bits.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0
  4587 ;;      Temps:          0       1       0       0       0
  4588 ;;      Totals:         0       1       0       0       0
  4589 ;;Total ram usage:        1 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    1
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_lcd_init
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           
  4600                           ;psect for function _tmr0_init
  4601  1288                     _tmr0_init:	
  4602  1288                     l4170:	
  4603                           ;incstack = 0
  4604                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  4605                           
  4606                           
  4607                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  4608  1288  30C0               	movlw	192
  4609  1289  1283               	bcf	3,5	;RP0=0, select bank0
  4610  128A  1303               	bcf	3,6	;RP1=0, select bank0
  4611  128B  00A0               	movwf	??_tmr0_init
  4612  128C  0820               	movf	??_tmr0_init,w
  4613  128D  1683               	bsf	3,5	;RP0=1, select bank1
  4614  128E  1303               	bcf	3,6	;RP1=0, select bank1
  4615  128F  0581               	andwf	1,f	;volatile
  4616  1290                     l4172:	
  4617                           
  4618                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  4619  1290  1501               	bsf	1,2	;volatile
  4620  1291                     l9:	
  4621  1291  0008               	return
  4622  1292                     __end_of_tmr0_init:	
  4623                           
  4624                           	psect	text13
  4625  1355                     __ptext13:	
  4626 ;; *************** function _joystick_init *****************
  4627 ;; Defined at:
  4628 ;;		line 825 in file "games.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _joystick_init
  4658  1355                     _joystick_init:	
  4659  1355                     l4564:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _joystick_init: [wreg+status,2]
  4662                           
  4663                           
  4664                           ;games.c: 826:     joystick_x_pos = 512;
  4665  1355  3000               	movlw	0
  4666  1356  1283               	bcf	3,5	;RP0=0, select bank0
  4667  1357  1303               	bcf	3,6	;RP1=0, select bank0
  4668  1358  00DD               	movwf	_joystick_x_pos
  4669  1359  3002               	movlw	2
  4670  135A  00DE               	movwf	_joystick_x_pos+1
  4671                           
  4672                           ;games.c: 827:     joystick_y_pos = 512;
  4673  135B  3000               	movlw	0
  4674  135C  00DB               	movwf	_joystick_y_pos
  4675  135D  3002               	movlw	2
  4676  135E  00DC               	movwf	_joystick_y_pos+1
  4677  135F                     l4566:	
  4678                           
  4679                           ;games.c: 828:     PORTB = 0;
  4680  135F  0186               	clrf	6	;volatile
  4681  1360                     l4568:	
  4682                           
  4683                           ;games.c: 829:     nRBPU = 0;
  4684  1360  1683               	bsf	3,5	;RP0=1, select bank1
  4685  1361  1303               	bcf	3,6	;RP1=0, select bank1
  4686  1362  1381               	bcf	1,7	;volatile
  4687  1363                     l4570:	
  4688                           
  4689                           ;games.c: 830:     WPUB = 0x24;
  4690  1363  3024               	movlw	36
  4691  1364  0095               	movwf	21	;volatile
  4692  1365                     l4572:	
  4693                           
  4694                           ;games.c: 831:     TRISB = 0x3F;
  4695  1365  303F               	movlw	63
  4696  1366  0086               	movwf	6	;volatile
  4697  1367                     l4574:	
  4698                           
  4699                           ;games.c: 832:     ANSELH = 0x1E;
  4700  1367  301E               	movlw	30
  4701  1368  1683               	bsf	3,5	;RP0=1, select bank3
  4702  1369  1703               	bsf	3,6	;RP1=1, select bank3
  4703  136A  0089               	movwf	9	;volatile
  4704  136B                     l4576:	
  4705                           
  4706                           ;games.c: 833:     GIE = 1;
  4707  136B  178B               	bsf	11,7	;volatile
  4708  136C                     l4578:	
  4709                           
  4710                           ;games.c: 834:     PEIE = 1;
  4711  136C  170B               	bsf	11,6	;volatile
  4712  136D                     l4580:	
  4713                           
  4714                           ;games.c: 835:     ADIF = 0;
  4715  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4716  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4717  136F  130C               	bcf	12,6	;volatile
  4718  1370                     l4582:	
  4719                           
  4720                           ;games.c: 836:     ADIE = 1;
  4721  1370  1683               	bsf	3,5	;RP0=1, select bank1
  4722  1371  1303               	bcf	3,6	;RP1=0, select bank1
  4723  1372  170C               	bsf	12,6	;volatile
  4724  1373                     l4584:	
  4725                           
  4726                           ;games.c: 837:     ADCON1 = 0x80;
  4727  1373  3080               	movlw	128
  4728  1374  009F               	movwf	31	;volatile
  4729  1375                     l4586:	
  4730                           
  4731                           ;games.c: 838:     ADCON0 = 0xA5;
  4732  1375  30A5               	movlw	165
  4733  1376  1283               	bcf	3,5	;RP0=0, select bank0
  4734  1377  1303               	bcf	3,6	;RP1=0, select bank0
  4735  1378  009F               	movwf	31	;volatile
  4736  1379                     l4588:	
  4737                           
  4738                           ;games.c: 839:     joystick_pressed = 1;
  4739  1379  01E1               	clrf	_joystick_pressed
  4740  137A  0AE1               	incf	_joystick_pressed,f
  4741  137B                     l571:	
  4742  137B  0008               	return
  4743  137C                     __end_of_joystick_init:	
  4744                           
  4745                           	psect	text14
  4746  085D                     __ptext14:	
  4747 ;; *************** function _concentration_title_screen *****************
  4748 ;; Defined at:
  4749 ;;		line 529 in file "games.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4763 ;;      Params:         0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    5
  4770 ;; This function calls:
  4771 ;;		_DelayMs
  4772 ;;		_display_concentration_gameboard
  4773 ;;		_display_concentration_scoreboard
  4774 ;;		_lcd_clear
  4775 ;;		_lcd_goto
  4776 ;;		_lcd_puts
  4777 ;; This function is called by:
  4778 ;;		_main
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _concentration_title_screen
  4784  085D                     _concentration_title_screen:	
  4785  085D                     l4654:	
  4786                           ;incstack = 0
  4787                           ; Regs used in _concentration_title_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  4788                           
  4789                           
  4790                           ;games.c: 530:     lcd_puts(" Concentration!", scoreboard);
  4791  085D  3084               	movlw	low (STR_30| (0+32768))
  4792  085E  1283               	bcf	3,5	;RP0=0, select bank0
  4793  085F  1303               	bcf	3,6	;RP1=0, select bank0
  4794  0860  00A8               	movwf	lcd_puts@string
  4795  0861  3083               	movlw	high (STR_30| (0+32768))
  4796  0862  00A9               	movwf	lcd_puts@string+1
  4797  0863  3008               	movlw	8
  4798  0864  00AA               	movwf	lcd_puts@port
  4799  0865  3000               	movlw	0
  4800  0866  00AB               	movwf	lcd_puts@port+1
  4801  0867  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  4802                           
  4803                           ;games.c: 531:     lcd_puts("Press the button", gameboard);
  4804  086C  3063               	movlw	low (STR_22| (0+32768))
  4805  086D  1283               	bcf	3,5	;RP0=0, select bank0
  4806  086E  1303               	bcf	3,6	;RP1=0, select bank0
  4807  086F  00A8               	movwf	lcd_puts@string
  4808  0870  3083               	movlw	high (STR_22| (0+32768))
  4809  0871  00A9               	movwf	lcd_puts@string+1
  4810  0872  3005               	movlw	5
  4811  0873  00AA               	movwf	lcd_puts@port
  4812  0874  3000               	movlw	0
  4813  0875  00AB               	movwf	lcd_puts@port+1
  4814  0876  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  4815  087B                     l4656:	
  4816                           
  4817                           ;games.c: 532:     lcd_goto(0x40, gameboard);
  4818  087B  3005               	movlw	5
  4819  087C  1283               	bcf	3,5	;RP0=0, select bank0
  4820  087D  1303               	bcf	3,6	;RP1=0, select bank0
  4821  087E  00A8               	movwf	lcd_goto@port
  4822  087F  3000               	movlw	0
  4823  0880  00A9               	movwf	lcd_goto@port+1
  4824  0881  3040               	movlw	64
  4825  0882  160A  118A  2311  120A  158A  	fcall	_lcd_goto
  4826  0887                     l4658:	
  4827                           
  4828                           ;games.c: 533:     lcd_puts("    to start", gameboard);
  4829  0887  3067               	movlw	low (STR_23| (0+32768))
  4830  0888  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0889  1303               	bcf	3,6	;RP1=0, select bank0
  4832  088A  00A8               	movwf	lcd_puts@string
  4833  088B  3084               	movlw	high (STR_23| (0+32768))
  4834  088C  00A9               	movwf	lcd_puts@string+1
  4835  088D  3005               	movlw	5
  4836  088E  00AA               	movwf	lcd_puts@port
  4837  088F  3000               	movlw	0
  4838  0890  00AB               	movwf	lcd_puts@port+1
  4839  0891  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  4840  0896                     l433:	
  4841                           ;games.c: 534:     while(RB5);
  4842                           
  4843  0896  1283               	bcf	3,5	;RP0=0, select bank0
  4844  0897  1303               	bcf	3,6	;RP1=0, select bank0
  4845  0898  1A86               	btfsc	6,5	;volatile
  4846  0899  289B               	goto	u3461
  4847  089A  289C               	goto	u3460
  4848  089B                     u3461:	
  4849  089B  2896               	goto	l433
  4850  089C                     u3460:	
  4851  089C                     l4660:	
  4852                           
  4853                           ;games.c: 535:     DelayMs(8);
  4854  089C  3008               	movlw	8
  4855  089D  00A0               	movwf	DelayMs@millis
  4856  089E  3000               	movlw	0
  4857  089F  00A1               	movwf	DelayMs@millis+1
  4858  08A0  160A  118A  22C4  120A  158A  	fcall	_DelayMs
  4859  08A5                     l436:	
  4860                           ;games.c: 536:     while(!RB5);
  4861                           
  4862  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  4863  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  4864  08A7  1E86               	btfss	6,5	;volatile
  4865  08A8  28AA               	goto	u3471
  4866  08A9  28AB               	goto	u3470
  4867  08AA                     u3471:	
  4868  08AA  28A5               	goto	l436
  4869  08AB                     u3470:	
  4870  08AB                     l4662:	
  4871                           
  4872                           ;games.c: 537:     DelayMs(8);
  4873  08AB  3008               	movlw	8
  4874  08AC  00A0               	movwf	DelayMs@millis
  4875  08AD  3000               	movlw	0
  4876  08AE  00A1               	movwf	DelayMs@millis+1
  4877  08AF  160A  118A  22C4  120A  158A  	fcall	_DelayMs
  4878  08B4                     l4664:	
  4879                           
  4880                           ;games.c: 538:     lcd_clear(gameboard);
  4881  08B4  3005               	movlw	5
  4882  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  4883  08B6  1303               	bcf	3,6	;RP1=0, select bank0
  4884  08B7  00A8               	movwf	lcd_clear@port
  4885  08B8  3000               	movlw	0
  4886  08B9  00A9               	movwf	lcd_clear@port+1
  4887  08BA  160A  118A  22DD  120A  158A  	fcall	_lcd_clear
  4888  08BF                     l4666:	
  4889                           
  4890                           ;games.c: 539:     lcd_clear(scoreboard);
  4891  08BF  3008               	movlw	8
  4892  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  4893  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  4894  08C2  00A8               	movwf	lcd_clear@port
  4895  08C3  3000               	movlw	0
  4896  08C4  00A9               	movwf	lcd_clear@port+1
  4897  08C5  160A  118A  22DD  120A  158A  	fcall	_lcd_clear
  4898  08CA                     l4668:	
  4899                           
  4900                           ;games.c: 540:     p1_score = 0;
  4901  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  4902  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  4903  08CC  01E4               	clrf	_p1_score
  4904  08CD                     l4670:	
  4905                           
  4906                           ;games.c: 541:     p2_score = 0;
  4907  08CD  01E3               	clrf	_p2_score
  4908  08CE                     l4672:	
  4909                           
  4910                           ;games.c: 542:     display_concentration_scoreboard();
  4911  08CE  120A  158A  2294  120A  158A  	fcall	_display_concentration_scoreboard
  4912  08D3                     l4674:	
  4913                           
  4914                           ;games.c: 543:     display_concentration_gameboard();
  4915  08D3  160A  118A  243F  120A  158A  	fcall	_display_concentration_gameboard
  4916  08D8                     l439:	
  4917  08D8  0008               	return
  4918  08D9                     __end_of_concentration_title_screen:	
  4919                           
  4920                           	psect	text15
  4921  1484                     __ptext15:	
  4922 ;; *************** function _concentration_gameboard_init *****************
  4923 ;; Defined at:
  4924 ;;		line 588 in file "games.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  i               1   54[BANK0 ] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      void 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4938 ;;      Params:         0       0       0       0       0
  4939 ;;      Locals:         0       1       0       0       0
  4940 ;;      Temps:          0       1       0       0       0
  4941 ;;      Totals:         0       2       0       0       0
  4942 ;;Total ram usage:        2 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    5
  4945 ;; This function calls:
  4946 ;;		_get_current_char
  4947 ;;		_lcd_clear
  4948 ;;		_lcd_goto
  4949 ;;		_make_custom_chars
  4950 ;;		_randomize_gameboard
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           
  4957                           ;psect for function _concentration_gameboard_init
  4958  1484                     _concentration_gameboard_init:	
  4959  1484                     l4626:	
  4960                           ;incstack = 0
  4961                           ; Regs used in _concentration_gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
      +                          th+cstack]
  4962                           
  4963                           
  4964                           ;games.c: 589:     selected_tile = 0xFF;
  4965  1484  30FF               	movlw	255
  4966  1485  1283               	bcf	3,5	;RP0=0, select bank0
  4967  1486  1303               	bcf	3,6	;RP1=0, select bank0
  4968  1487  00D5               	movwf	??_concentration_gameboard_init
  4969  1488  0855               	movf	??_concentration_gameboard_init,w
  4970  1489  00E2               	movwf	_selected_tile
  4971  148A                     l4628:	
  4972                           
  4973                           ;games.c: 590:     make_custom_chars();
  4974  148A  120A  158A  2200  160A  118A  	fcall	_make_custom_chars
  4975  148F                     l4630:	
  4976                           
  4977                           ;games.c: 591:     char i;;games.c: 592:     for(i = 0; i < 32; i++) {
  4978  148F  1283               	bcf	3,5	;RP0=0, select bank0
  4979  1490  1303               	bcf	3,6	;RP1=0, select bank0
  4980  1491  01D6               	clrf	concentration_gameboard_init@i
  4981  1492                     l4636:	
  4982                           
  4983                           ;games.c: 593:         visible[i] = 0xFF;
  4984  1492  30FF               	movlw	255
  4985  1493  00D5               	movwf	??_concentration_gameboard_init
  4986  1494  0856               	movf	concentration_gameboard_init@i,w
  4987  1495  3EA0               	addlw	(low (_visible| 0))& (0+255)
  4988  1496  0084               	movwf	4
  4989  1497  0855               	movf	??_concentration_gameboard_init,w
  4990  1498  1383               	bcf	3,7	;select IRP bank1
  4991  1499  0080               	movwf	0
  4992  149A                     l4638:	
  4993                           
  4994                           ;games.c: 594:     }
  4995  149A  3001               	movlw	1
  4996  149B  00D5               	movwf	??_concentration_gameboard_init
  4997  149C  0855               	movf	??_concentration_gameboard_init,w
  4998  149D  07D6               	addwf	concentration_gameboard_init@i,f
  4999  149E                     l4640:	
  5000  149E  3020               	movlw	32
  5001  149F  0256               	subwf	concentration_gameboard_init@i,w
  5002  14A0  1C03               	skipc
  5003  14A1  2CA3               	goto	u3451
  5004  14A2  2CA4               	goto	u3450
  5005  14A3                     u3451:	
  5006  14A3  2C92               	goto	l4636
  5007  14A4                     u3450:	
  5008  14A4                     l4642:	
  5009                           
  5010                           ;games.c: 595:     lcd_clear(gameboard);
  5011  14A4  3005               	movlw	5
  5012  14A5  00A8               	movwf	lcd_clear@port
  5013  14A6  3000               	movlw	0
  5014  14A7  00A9               	movwf	lcd_clear@port+1
  5015  14A8  160A  118A  22DD  160A  118A  	fcall	_lcd_clear
  5016  14AD                     l4644:	
  5017                           
  5018                           ;games.c: 596:     cursor_pos = 0x00;
  5019  14AD  1283               	bcf	3,5	;RP0=0, select bank0
  5020  14AE  1303               	bcf	3,6	;RP1=0, select bank0
  5021  14AF  01E9               	clrf	_cursor_pos
  5022  14B0                     l4646:	
  5023                           
  5024                           ;games.c: 597:     cursor_solid = 0;
  5025  14B0  01E7               	clrf	_cursor_solid
  5026                           
  5027                           ;games.c: 598:     get_current_char();
  5028  14B1  160A  118A  22B2  160A  118A  	fcall	_get_current_char
  5029  14B6                     l4648:	
  5030                           
  5031                           ;games.c: 599:     delay_loops = 0;
  5032  14B6  1283               	bcf	3,5	;RP0=0, select bank0
  5033  14B7  1303               	bcf	3,6	;RP1=0, select bank0
  5034  14B8  01E6               	clrf	_delay_loops
  5035  14B9                     l4650:	
  5036                           
  5037                           ;games.c: 600:     lcd_goto(cursor_pos, gameboard);
  5038  14B9  3005               	movlw	5
  5039  14BA  00A8               	movwf	lcd_goto@port
  5040  14BB  3000               	movlw	0
  5041  14BC  00A9               	movwf	lcd_goto@port+1
  5042  14BD  0869               	movf	_cursor_pos,w
  5043  14BE  160A  118A  2311  160A  118A  	fcall	_lcd_goto
  5044  14C3                     l4652:	
  5045                           
  5046                           ;games.c: 601:     randomize_gameboard();
  5047  14C3  160A  118A  2654  160A  118A  	fcall	_randomize_gameboard
  5048  14C8                     l472:	
  5049  14C8  0008               	return
  5050  14C9                     __end_of_concentration_gameboard_init:	
  5051                           
  5052                           	psect	text16
  5053  1654                     __ptext16:	
  5054 ;; *************** function _randomize_gameboard *****************
  5055 ;; Defined at:
  5056 ;;		line 611 in file "games.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  used           32   19[BANK0 ] unsigned char [32]
  5061 ;;  random          1   52[BANK0 ] unsigned char 
  5062 ;;  current         1   51[BANK0 ] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5072 ;;      Params:         0       0       0       0       0
  5073 ;;      Locals:         0      34       0       0       0
  5074 ;;      Temps:          0       3       0       0       0
  5075 ;;      Totals:         0      37       0       0       0
  5076 ;;Total ram usage:       37 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    2
  5079 ;; This function calls:
  5080 ;;		_DelayMs
  5081 ;;		___awdiv
  5082 ;; This function is called by:
  5083 ;;		_concentration_gameboard_init
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _randomize_gameboard
  5089  1654                     _randomize_gameboard:	
  5090  1654                     l4418:	
  5091                           ;incstack = 0
  5092                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5093                           
  5094                           
  5095                           ;games.c: 612:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
      +                          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  5096  1654  3033               	movlw	randomize_gameboard@used& (0+255)
  5097  1655  0084               	movwf	4
  5098  1656  3020               	movlw	32
  5099  1657  00FF               	movwf	btemp+1
  5100  1658                     u3350:	
  5101  1658  1383               	bcf	3,7	;select IRP bank0
  5102  1659  0180               	clrf	0
  5103  165A  0A84               	incf	4,f
  5104  165B  0BFF               	decfsz	btemp+1,f
  5105  165C  2E58               	goto	u3350
  5106  165D                     l4420:	
  5107                           
  5108                           ;games.c: 613:     char current = 0;
  5109  165D  1283               	bcf	3,5	;RP0=0, select bank0
  5110  165E  1303               	bcf	3,6	;RP1=0, select bank0
  5111  165F  01D3               	clrf	randomize_gameboard@current
  5112                           
  5113                           ;games.c: 614:     char random;;games.c: 615:     while(current != 32) {
  5114  1660  2EAC               	goto	l4434
  5115  1661                     l4422:	
  5116                           
  5117                           ;games.c: 616:         DelayMs(TMR2>>(2+(TMR1%4)));
  5118  1661  0811               	movf	17,w	;volatile
  5119  1662  00B0               	movwf	??_randomize_gameboard
  5120  1663  080E               	movf	14,w	;volatile
  5121  1664  3903               	andlw	3
  5122  1665  3E02               	addlw	2
  5123  1666  3E01               	addlw	1
  5124  1667  2E6A               	goto	u3364
  5125  1668                     u3365:	
  5126  1668  1003               	clrc
  5127  1669  0CB0               	rrf	??_randomize_gameboard,f
  5128  166A                     u3364:	
  5129  166A  3EFF               	addlw	-1
  5130  166B  1D03               	skipz
  5131  166C  2E68               	goto	u3365
  5132  166D  0830               	movf	??_randomize_gameboard,w
  5133  166E  00B1               	movwf	??_randomize_gameboard+1
  5134  166F  01B2               	clrf	??_randomize_gameboard+2
  5135  1670  0831               	movf	??_randomize_gameboard+1,w
  5136  1671  00A0               	movwf	DelayMs@millis
  5137  1672  0832               	movf	??_randomize_gameboard+2,w
  5138  1673  00A1               	movwf	DelayMs@millis+1
  5139  1674  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  5140  1679                     l4424:	
  5141                           
  5142                           ;games.c: 617:         random = TMR1 % 32;
  5143  1679  1283               	bcf	3,5	;RP0=0, select bank0
  5144  167A  1303               	bcf	3,6	;RP1=0, select bank0
  5145  167B  080E               	movf	14,w	;volatile
  5146  167C  391F               	andlw	31
  5147  167D  00B0               	movwf	??_randomize_gameboard
  5148  167E  0830               	movf	??_randomize_gameboard,w
  5149  167F  00D4               	movwf	randomize_gameboard@random
  5150  1680                     l4426:	
  5151                           
  5152                           ;games.c: 618:         if(used[random] == 0) {
  5153  1680  0854               	movf	randomize_gameboard@random,w
  5154  1681  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  5155  1682  0084               	movwf	4
  5156  1683  1383               	bcf	3,7	;select IRP bank0
  5157  1684  0800               	movf	0,w
  5158  1685  1D03               	btfss	3,2
  5159  1686  2E88               	goto	u3371
  5160  1687  2E89               	goto	u3370
  5161  1688                     u3371:	
  5162  1688  2EAC               	goto	l4434
  5163  1689                     u3370:	
  5164  1689                     l4428:	
  5165                           
  5166                           ;games.c: 619:             used[random] = 1;
  5167  1689  0854               	movf	randomize_gameboard@random,w
  5168  168A  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  5169  168B  0084               	movwf	4
  5170  168C  0180               	clrf	0
  5171  168D  0A80               	incf	0,f
  5172  168E                     l4430:	
  5173                           
  5174                           ;games.c: 620:             board[random] = current/4;
  5175  168E  3004               	movlw	4
  5176  168F  00A7               	movwf	___awdiv@divisor
  5177  1690  3000               	movlw	0
  5178  1691  00A8               	movwf	___awdiv@divisor+1
  5179  1692  0853               	movf	randomize_gameboard@current,w
  5180  1693  00B0               	movwf	??_randomize_gameboard
  5181  1694  01B1               	clrf	??_randomize_gameboard+1
  5182  1695  0830               	movf	??_randomize_gameboard,w
  5183  1696  00A9               	movwf	___awdiv@dividend
  5184  1697  0831               	movf	??_randomize_gameboard+1,w
  5185  1698  00AA               	movwf	___awdiv@dividend+1
  5186  1699  160A  118A  26B3  160A  118A  	fcall	___awdiv
  5187  169E  1283               	bcf	3,5	;RP0=0, select bank0
  5188  169F  1303               	bcf	3,6	;RP1=0, select bank0
  5189  16A0  0827               	movf	?___awdiv,w
  5190  16A1  00B2               	movwf	??_randomize_gameboard+2
  5191  16A2  0854               	movf	randomize_gameboard@random,w
  5192  16A3  3EB0               	addlw	(low (_board| (0+256)))& (0+255)
  5193  16A4  0084               	movwf	4
  5194  16A5  0832               	movf	??_randomize_gameboard+2,w
  5195  16A6  1783               	bsf	3,7	;select IRP bank3
  5196  16A7  0080               	movwf	0
  5197  16A8                     l4432:	
  5198                           
  5199                           ;games.c: 621:             current++;
  5200  16A8  3001               	movlw	1
  5201  16A9  00B0               	movwf	??_randomize_gameboard
  5202  16AA  0830               	movf	??_randomize_gameboard,w
  5203  16AB  07D3               	addwf	randomize_gameboard@current,f
  5204  16AC                     l4434:	
  5205                           
  5206                           ;games.c: 615:     while(current != 32) {
  5207  16AC  3020               	movlw	32
  5208  16AD  0653               	xorwf	randomize_gameboard@current,w
  5209  16AE  1D03               	btfss	3,2
  5210  16AF  2EB1               	goto	u3381
  5211  16B0  2EB2               	goto	u3380
  5212  16B1                     u3381:	
  5213  16B1  2E61               	goto	l4422
  5214  16B2                     u3380:	
  5215  16B2                     l485:	
  5216  16B2  0008               	return
  5217  16B3                     __end_of_randomize_gameboard:	
  5218                           
  5219                           	psect	text17
  5220  0A00                     __ptext17:	
  5221 ;; *************** function _make_custom_chars *****************
  5222 ;; Defined at:
  5223 ;;		line 569 in file "games.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5237 ;;      Params:         0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0
  5239 ;;      Temps:          0       1       0       0       0
  5240 ;;      Totals:         0       1       0       0       0
  5241 ;;Total ram usage:        1 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    4
  5244 ;; This function calls:
  5245 ;;		_lcd_set_custom_char
  5246 ;; This function is called by:
  5247 ;;		_concentration_gameboard_init
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _make_custom_chars
  5253  0A00                     _make_custom_chars:	
  5254  0A00                     l4416:	
  5255                           ;incstack = 0
  5256                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5257                           
  5258                           
  5259                           ;games.c: 570:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0E, 0x00}
      +                          ;;games.c: 571:     lcd_set_custom_char(smile, 0x00, gameboard);
  5260  0A00  304A               	movlw	low (make_custom_chars@smile| (0+32768))
  5261  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0A03  00A8               	movwf	lcd_set_custom_char@data
  5264  0A04  3083               	movlw	high (make_custom_chars@smile| (0+32768))
  5265  0A05  00A9               	movwf	lcd_set_custom_char@data+1
  5266  0A06  01AA               	clrf	lcd_set_custom_char@cg_address
  5267  0A07  3005               	movlw	5
  5268  0A08  00AB               	movwf	lcd_set_custom_char@port
  5269  0A09  3000               	movlw	0
  5270  0A0A  00AC               	movwf	lcd_set_custom_char@port+1
  5271  0A0B  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5272                           
  5273                           ;games.c: 572:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0x00, 0x0
      +                          0};;games.c: 573:     lcd_set_custom_char(diamond, 0x01, gameboard);
  5274  0A10  3042               	movlw	low (make_custom_chars@diamond| (0+32768))
  5275  0A11  1283               	bcf	3,5	;RP0=0, select bank0
  5276  0A12  1303               	bcf	3,6	;RP1=0, select bank0
  5277  0A13  00A8               	movwf	lcd_set_custom_char@data
  5278  0A14  3083               	movlw	high (make_custom_chars@diamond| (0+32768))
  5279  0A15  00A9               	movwf	lcd_set_custom_char@data+1
  5280  0A16  01AA               	clrf	lcd_set_custom_char@cg_address
  5281  0A17  0AAA               	incf	lcd_set_custom_char@cg_address,f
  5282  0A18  3005               	movlw	5
  5283  0A19  00AB               	movwf	lcd_set_custom_char@port
  5284  0A1A  3000               	movlw	0
  5285  0A1B  00AC               	movwf	lcd_set_custom_char@port+1
  5286  0A1C  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5287                           
  5288                           ;games.c: 574:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x04, 0x00}
      +                          ;;games.c: 575:     lcd_set_custom_char(heart, 0x02, gameboard);
  5289  0A21  303A               	movlw	low (make_custom_chars@heart| (0+32768))
  5290  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  5291  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  5292  0A24  00A8               	movwf	lcd_set_custom_char@data
  5293  0A25  3083               	movlw	high (make_custom_chars@heart| (0+32768))
  5294  0A26  00A9               	movwf	lcd_set_custom_char@data+1
  5295  0A27  3002               	movlw	2
  5296  0A28  00B0               	movwf	??_make_custom_chars
  5297  0A29  0830               	movf	??_make_custom_chars,w
  5298  0A2A  00AA               	movwf	lcd_set_custom_char@cg_address
  5299  0A2B  3005               	movlw	5
  5300  0A2C  00AB               	movwf	lcd_set_custom_char@port
  5301  0A2D  3000               	movlw	0
  5302  0A2E  00AC               	movwf	lcd_set_custom_char@port+1
  5303  0A2F  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5304                           
  5305                           ;games.c: 576:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x04, 0x0E}
      +                          ;;games.c: 577:     lcd_set_custom_char(spade, 0x03, gameboard);
  5306  0A34  3032               	movlw	low (make_custom_chars@spade| (0+32768))
  5307  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  5309  0A37  00A8               	movwf	lcd_set_custom_char@data
  5310  0A38  3083               	movlw	high (make_custom_chars@spade| (0+32768))
  5311  0A39  00A9               	movwf	lcd_set_custom_char@data+1
  5312  0A3A  3003               	movlw	3
  5313  0A3B  00B0               	movwf	??_make_custom_chars
  5314  0A3C  0830               	movf	??_make_custom_chars,w
  5315  0A3D  00AA               	movwf	lcd_set_custom_char@cg_address
  5316  0A3E  3005               	movlw	5
  5317  0A3F  00AB               	movwf	lcd_set_custom_char@port
  5318  0A40  3000               	movlw	0
  5319  0A41  00AC               	movwf	lcd_set_custom_char@port+1
  5320  0A42  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5321                           
  5322                           ;games.c: 578:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04, 0x0E};
      +                          ;games.c: 579:     lcd_set_custom_char(club, 0x04, gameboard);
  5323  0A47  302A               	movlw	low (make_custom_chars@club| (0+32768))
  5324  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  5325  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  5326  0A4A  00A8               	movwf	lcd_set_custom_char@data
  5327  0A4B  3083               	movlw	high (make_custom_chars@club| (0+32768))
  5328  0A4C  00A9               	movwf	lcd_set_custom_char@data+1
  5329  0A4D  3004               	movlw	4
  5330  0A4E  00B0               	movwf	??_make_custom_chars
  5331  0A4F  0830               	movf	??_make_custom_chars,w
  5332  0A50  00AA               	movwf	lcd_set_custom_char@cg_address
  5333  0A51  3005               	movlw	5
  5334  0A52  00AB               	movwf	lcd_set_custom_char@port
  5335  0A53  3000               	movlw	0
  5336  0A54  00AC               	movwf	lcd_set_custom_char@port+1
  5337  0A55  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5338                           
  5339                           ;games.c: 580:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0E, 0x00}
      +                          ;;games.c: 581:     lcd_set_custom_char(skull, 0x05, gameboard);
  5340  0A5A  3022               	movlw	low (make_custom_chars@skull| (0+32768))
  5341  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  5342  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  5343  0A5D  00A8               	movwf	lcd_set_custom_char@data
  5344  0A5E  3083               	movlw	high (make_custom_chars@skull| (0+32768))
  5345  0A5F  00A9               	movwf	lcd_set_custom_char@data+1
  5346  0A60  3005               	movlw	5
  5347  0A61  00B0               	movwf	??_make_custom_chars
  5348  0A62  0830               	movf	??_make_custom_chars,w
  5349  0A63  00AA               	movwf	lcd_set_custom_char@cg_address
  5350  0A64  3005               	movlw	5
  5351  0A65  00AB               	movwf	lcd_set_custom_char@port
  5352  0A66  3000               	movlw	0
  5353  0A67  00AC               	movwf	lcd_set_custom_char@port+1
  5354  0A68  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5355                           
  5356                           ;games.c: 582:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 0x05};;g
      +                          ames.c: 583:     lcd_set_custom_char(RH, 0x06, gameboard);
  5357  0A6D  301A               	movlw	low (make_custom_chars@RH| (0+32768))
  5358  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  5359  0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  5360  0A70  00A8               	movwf	lcd_set_custom_char@data
  5361  0A71  3083               	movlw	high (make_custom_chars@RH| (0+32768))
  5362  0A72  00A9               	movwf	lcd_set_custom_char@data+1
  5363  0A73  3006               	movlw	6
  5364  0A74  00B0               	movwf	??_make_custom_chars
  5365  0A75  0830               	movf	??_make_custom_chars,w
  5366  0A76  00AA               	movwf	lcd_set_custom_char@cg_address
  5367  0A77  3005               	movlw	5
  5368  0A78  00AB               	movwf	lcd_set_custom_char@port
  5369  0A79  3000               	movlw	0
  5370  0A7A  00AC               	movwf	lcd_set_custom_char@port+1
  5371  0A7B  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5372                           
  5373                           ;games.c: 584:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02, 0x03};;
      +                          games.c: 585:     lcd_set_custom_char(PIC, 0x07, gameboard);
  5374  0A80  3012               	movlw	low (make_custom_chars@PIC| (0+32768))
  5375  0A81  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0A82  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0A83  00A8               	movwf	lcd_set_custom_char@data
  5378  0A84  3083               	movlw	high (make_custom_chars@PIC| (0+32768))
  5379  0A85  00A9               	movwf	lcd_set_custom_char@data+1
  5380  0A86  3007               	movlw	7
  5381  0A87  00B0               	movwf	??_make_custom_chars
  5382  0A88  0830               	movf	??_make_custom_chars,w
  5383  0A89  00AA               	movwf	lcd_set_custom_char@cg_address
  5384  0A8A  3005               	movlw	5
  5385  0A8B  00AB               	movwf	lcd_set_custom_char@port
  5386  0A8C  3000               	movlw	0
  5387  0A8D  00AC               	movwf	lcd_set_custom_char@port+1
  5388  0A8E  160A  118A  25FF  120A  158A  	fcall	_lcd_set_custom_char
  5389  0A93                     l467:	
  5390  0A93  0008               	return
  5391  0A94                     __end_of_make_custom_chars:	
  5392                           
  5393                           	psect	text18
  5394  15FF                     __ptext18:	
  5395 ;; *************** function _lcd_set_custom_char *****************
  5396 ;; Defined at:
  5397 ;;		line 166 in file "lcd4bits.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  data            2    8[BANK0 ] PTR const unsigned char 
  5400 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  5401 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  5402 ;;  cg_address      1   10[BANK0 ] unsigned char 
  5403 ;;  port            2   11[BANK0 ] PTR unsigned char 
  5404 ;;		 -> PORTA(1), 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  row             1   15[BANK0 ] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5416 ;;      Params:         0       5       0       0       0
  5417 ;;      Locals:         0       1       0       0       0
  5418 ;;      Temps:          0       2       0       0       0
  5419 ;;      Totals:         0       8       0       0       0
  5420 ;;Total ram usage:        8 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    3
  5423 ;; This function calls:
  5424 ;;		_lcd_write
  5425 ;; This function is called by:
  5426 ;;		_make_custom_chars
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function _lcd_set_custom_char
  5432  15FF                     _lcd_set_custom_char:	
  5433  15FF                     l4020:	
  5434                           ;incstack = 0
  5435                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5436                           
  5437                           
  5438                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  5439  15FF  1283               	bcf	3,5	;RP0=0, select bank0
  5440  1600  1303               	bcf	3,6	;RP1=0, select bank0
  5441  1601  01AF               	clrf	lcd_set_custom_char@row
  5442  1602                     l4026:	
  5443                           
  5444                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  5445  1602  082A               	movf	lcd_set_custom_char@cg_address,w
  5446  1603  00AD               	movwf	??_lcd_set_custom_char
  5447  1604  3002               	movlw	2
  5448  1605                     u2925:	
  5449  1605  1003               	clrc
  5450  1606  0DAD               	rlf	??_lcd_set_custom_char,f
  5451  1607  3EFF               	addlw	-1
  5452  1608  1D03               	skipz
  5453  1609  2E05               	goto	u2925
  5454  160A  1003               	clrc
  5455  160B  0D2D               	rlf	??_lcd_set_custom_char,w
  5456  160C  042F               	iorwf	lcd_set_custom_char@row,w
  5457  160D  3840               	iorlw	64
  5458  160E  00AE               	movwf	??_lcd_set_custom_char+1
  5459  160F  082E               	movf	??_lcd_set_custom_char+1,w
  5460  1610  00A2               	movwf	lcd_write@CmdChar
  5461  1611  082B               	movf	lcd_set_custom_char@port,w
  5462  1612  00A3               	movwf	lcd_write@port
  5463  1613  082C               	movf	lcd_set_custom_char@port+1,w
  5464  1614  00A4               	movwf	lcd_write@port+1
  5465  1615  3000               	movlw	0
  5466  1616  160A  118A  255E  160A  118A  	fcall	_lcd_write
  5467  161B                     l4028:	
  5468                           
  5469                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  5470  161B  1283               	bcf	3,5	;RP0=0, select bank0
  5471  161C  1303               	bcf	3,6	;RP1=0, select bank0
  5472  161D  0829               	movf	lcd_set_custom_char@data+1,w
  5473  161E  00FF               	movwf	btemp+1
  5474  161F  0828               	movf	lcd_set_custom_char@data,w
  5475  1620  0084               	movwf	4
  5476  1621  120A  118A  2300  160A  118A  	fcall	stringtab
  5477  1626  00AD               	movwf	??_lcd_set_custom_char
  5478  1627  082D               	movf	??_lcd_set_custom_char,w
  5479  1628  00A2               	movwf	lcd_write@CmdChar
  5480  1629  082B               	movf	lcd_set_custom_char@port,w
  5481  162A  00A3               	movwf	lcd_write@port
  5482  162B  082C               	movf	lcd_set_custom_char@port+1,w
  5483  162C  00A4               	movwf	lcd_write@port+1
  5484  162D  3010               	movlw	16
  5485  162E  160A  118A  255E  160A  118A  	fcall	_lcd_write
  5486  1633                     l4030:	
  5487                           
  5488                           ;lcd4bits.c: 171:         *data++;
  5489  1633  3001               	movlw	1
  5490  1634  1283               	bcf	3,5	;RP0=0, select bank0
  5491  1635  1303               	bcf	3,6	;RP1=0, select bank0
  5492  1636  07A8               	addwf	lcd_set_custom_char@data,f
  5493  1637  1803               	skipnc
  5494  1638  0AA9               	incf	lcd_set_custom_char@data+1,f
  5495  1639  3000               	movlw	0
  5496  163A  07A9               	addwf	lcd_set_custom_char@data+1,f
  5497  163B                     l4032:	
  5498                           
  5499                           ;lcd4bits.c: 172:     }
  5500  163B  3001               	movlw	1
  5501  163C  00AD               	movwf	??_lcd_set_custom_char
  5502  163D  082D               	movf	??_lcd_set_custom_char,w
  5503  163E  07AF               	addwf	lcd_set_custom_char@row,f
  5504  163F                     l4034:	
  5505  163F  3008               	movlw	8
  5506  1640  022F               	subwf	lcd_set_custom_char@row,w
  5507  1641  1C03               	skipc
  5508  1642  2E44               	goto	u2931
  5509  1643  2E45               	goto	u2930
  5510  1644                     u2931:	
  5511  1644  2E02               	goto	l4026
  5512  1645                     u2930:	
  5513  1645                     l4036:	
  5514                           
  5515                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  5516  1645  3080               	movlw	128
  5517  1646  00AD               	movwf	??_lcd_set_custom_char
  5518  1647  082D               	movf	??_lcd_set_custom_char,w
  5519  1648  00A2               	movwf	lcd_write@CmdChar
  5520  1649  082B               	movf	lcd_set_custom_char@port,w
  5521  164A  00A3               	movwf	lcd_write@port
  5522  164B  082C               	movf	lcd_set_custom_char@port+1,w
  5523  164C  00A4               	movwf	lcd_write@port+1
  5524  164D  3000               	movlw	0
  5525  164E  160A  118A  255E  160A  118A  	fcall	_lcd_write
  5526  1653                     l49:	
  5527  1653  0008               	return
  5528  1654                     __end_of_lcd_set_custom_char:	
  5529                           
  5530                           	psect	text19
  5531  0616                     __ptext19:	
  5532 ;; *************** function _concentration_game_loop *****************
  5533 ;; Defined at:
  5534 ;;		line 670 in file "games.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0
  5550 ;;      Temps:          0       2       0       0       0
  5551 ;;      Totals:         0       2       0       0       0
  5552 ;;Total ram usage:        2 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    6
  5555 ;; This function calls:
  5556 ;;		_DelayMs
  5557 ;;		_check_for_match
  5558 ;;		_display_concentration_gameboard
  5559 ;;		_get_cursor_index
  5560 ;;		_toggle_cursor
  5561 ;;		_update_cursor
  5562 ;; This function is called by:
  5563 ;;		_main
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           
  5568                           ;psect for function _concentration_game_loop
  5569  0616                     _concentration_game_loop:	
  5570  0616                     l4676:	
  5571                           ;incstack = 0
  5572                           ; Regs used in _concentration_game_loop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  5573                           
  5574                           
  5575                           ;games.c: 672:     if(GO == 0) {
  5576  0616  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0617  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0618  189F               	btfsc	31,1	;volatile
  5579  0619  2E1B               	goto	u3481
  5580  061A  2E1C               	goto	u3480
  5581  061B                     u3481:	
  5582  061B  2E1D               	goto	l498
  5583  061C                     u3480:	
  5584  061C                     l4678:	
  5585                           
  5586                           ;games.c: 673:         GO = 1;
  5587  061C  149F               	bsf	31,1	;volatile
  5588  061D                     l498:	
  5589                           ;games.c: 674:     }
  5590                           
  5591                           
  5592                           ;games.c: 675:     if((((RB5 == 0)&&(current_player == 0))||
  5593  061D  1A86               	btfsc	6,5	;volatile
  5594  061E  2E20               	goto	u3491
  5595  061F  2E21               	goto	u3490
  5596  0620                     u3491:	
  5597  0620  2E26               	goto	l503
  5598  0621                     u3490:	
  5599  0621                     l4680:	
  5600  0621  0860               	movf	_current_player,w
  5601  0622  1903               	btfsc	3,2
  5602  0623  2E25               	goto	u3501
  5603  0624  2E26               	goto	u3500
  5604  0625                     u3501:	
  5605  0625  2E2F               	goto	l4684
  5606  0626                     u3500:	
  5607  0626                     l503:	
  5608  0626  1906               	btfsc	6,2	;volatile
  5609  0627  2E29               	goto	u3511
  5610  0628  2E2A               	goto	u3510
  5611  0629                     u3511:	
  5612  0629  2E85               	goto	l499
  5613  062A                     u3510:	
  5614  062A                     l4682:	
  5615  062A  0360               	decf	_current_player,w
  5616  062B  1D03               	btfss	3,2
  5617  062C  2E2E               	goto	u3521
  5618  062D  2E2F               	goto	u3520
  5619  062E                     u3521:	
  5620  062E  2E85               	goto	l499
  5621  062F                     u3520:	
  5622  062F                     l4684:	
  5623  062F  0361               	decf	_joystick_pressed,w
  5624  0630  1D03               	btfss	3,2
  5625  0631  2E33               	goto	u3531
  5626  0632  2E34               	goto	u3530
  5627  0633                     u3531:	
  5628  0633  2E85               	goto	l499
  5629  0634                     u3530:	
  5630  0634                     l4686:	
  5631                           
  5632                           ;games.c: 677:             &&(joystick_pressed == 1)) {;games.c: 678:         DelayMs(6)
      +                          ;
  5633  0634  3006               	movlw	6
  5634  0635  00A0               	movwf	DelayMs@millis
  5635  0636  3000               	movlw	0
  5636  0637  00A1               	movwf	DelayMs@millis+1
  5637  0638  160A  118A  22C4  120A  118A  	fcall	_DelayMs
  5638  063D                     l4688:	
  5639                           
  5640                           ;games.c: 679:         joystick_pressed = 0;
  5641  063D  1283               	bcf	3,5	;RP0=0, select bank0
  5642  063E  1303               	bcf	3,6	;RP1=0, select bank0
  5643  063F  01E1               	clrf	_joystick_pressed
  5644  0640                     l4690:	
  5645                           
  5646                           ;games.c: 680:         if(visible[get_cursor_index(cursor_pos)] == 0xFF) {
  5647  0640  0869               	movf	_cursor_pos,w
  5648  0641  120A  118A  27F4  120A  118A  	fcall	_get_cursor_index
  5649  0646  3EA0               	addlw	(low (_visible| 0))& (0+255)
  5650  0647  0084               	movwf	4
  5651  0648  1383               	bcf	3,7	;select IRP bank1
  5652  0649  0A00               	incf	0,w
  5653  064A  1D03               	btfss	3,2
  5654  064B  2E4D               	goto	u3541
  5655  064C  2E4E               	goto	u3540
  5656  064D                     u3541:	
  5657  064D  2E99               	goto	l505
  5658  064E                     u3540:	
  5659  064E                     l4692:	
  5660                           
  5661                           ;games.c: 681:             visible[get_cursor_index(cursor_pos)] = board[get_cursor_inde
      +                          x(cursor_pos)];
  5662  064E  1283               	bcf	3,5	;RP0=0, select bank0
  5663  064F  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0650  0869               	movf	_cursor_pos,w
  5665  0651  120A  118A  27F4  120A  118A  	fcall	_get_cursor_index
  5666  0656  3EB0               	addlw	(low (_board| (0+256)))& (0+255)
  5667  0657  0084               	movwf	4
  5668  0658  1783               	bsf	3,7	;select IRP bank3
  5669  0659  0800               	movf	0,w
  5670  065A  1283               	bcf	3,5	;RP0=0, select bank0
  5671  065B  1303               	bcf	3,6	;RP1=0, select bank0
  5672  065C  00B9               	movwf	??_concentration_game_loop
  5673  065D  0869               	movf	_cursor_pos,w
  5674  065E  120A  118A  27F4  120A  118A  	fcall	_get_cursor_index
  5675  0663  3EA0               	addlw	(low (_visible| 0))& (0+255)
  5676  0664  0084               	movwf	4
  5677  0665  1283               	bcf	3,5	;RP0=0, select bank0
  5678  0666  1303               	bcf	3,6	;RP1=0, select bank0
  5679  0667  0839               	movf	??_concentration_game_loop,w
  5680  0668  1383               	bcf	3,7	;select IRP bank1
  5681  0669  0080               	movwf	0
  5682                           
  5683                           ;games.c: 682:             current_char = board[get_cursor_index(cursor_pos)];
  5684  066A  0869               	movf	_cursor_pos,w
  5685  066B  120A  118A  27F4  120A  118A  	fcall	_get_cursor_index
  5686  0670  3EB0               	addlw	(low (_board| (0+256)))& (0+255)
  5687  0671  0084               	movwf	4
  5688  0672  1783               	bsf	3,7	;select IRP bank3
  5689  0673  0800               	movf	0,w
  5690  0674  1283               	bcf	3,5	;RP0=0, select bank0
  5691  0675  1303               	bcf	3,6	;RP1=0, select bank0
  5692  0676  00B9               	movwf	??_concentration_game_loop
  5693  0677  0839               	movf	??_concentration_game_loop,w
  5694  0678  00E8               	movwf	_current_char
  5695  0679                     l4694:	
  5696                           
  5697                           ;games.c: 683:             check_for_match(current_player);
  5698  0679  0860               	movf	_current_player,w
  5699  067A  120A  158A  2368  120A  118A  	fcall	_check_for_match
  5700  067F                     l4696:	
  5701                           
  5702                           ;games.c: 684:             display_concentration_gameboard();
  5703  067F  160A  118A  243F  120A  118A  	fcall	_display_concentration_gameboard
  5704  0684  2E99               	goto	l505
  5705  0685                     l499:	
  5706  0685  1E86               	btfss	6,5	;volatile
  5707  0686  2E88               	goto	u3551
  5708  0687  2E89               	goto	u3550
  5709  0688                     u3551:	
  5710  0688  2E8E               	goto	l510
  5711  0689                     u3550:	
  5712  0689                     l4698:	
  5713  0689  0860               	movf	_current_player,w
  5714  068A  1903               	btfsc	3,2
  5715  068B  2E8D               	goto	u3561
  5716  068C  2E8E               	goto	u3560
  5717  068D                     u3561:	
  5718  068D  2E97               	goto	l508
  5719  068E                     u3560:	
  5720  068E                     l510:	
  5721  068E  1D06               	btfss	6,2	;volatile
  5722  068F  2E91               	goto	u3571
  5723  0690  2E92               	goto	u3570
  5724  0691                     u3571:	
  5725  0691  2E99               	goto	l505
  5726  0692                     u3570:	
  5727  0692                     l4700:	
  5728  0692  0360               	decf	_current_player,w
  5729  0693  1D03               	btfss	3,2
  5730  0694  2E96               	goto	u3581
  5731  0695  2E97               	goto	u3580
  5732  0696                     u3581:	
  5733  0696  2E99               	goto	l505
  5734  0697                     u3580:	
  5735  0697                     l508:	
  5736                           
  5737                           ;games.c: 687:             ((RB2 == 1)&&(current_player == 1)))) {;games.c: 688:        
      +                           joystick_pressed = 1;
  5738  0697  01E1               	clrf	_joystick_pressed
  5739  0698  0AE1               	incf	_joystick_pressed,f
  5740  0699                     l505:	
  5741                           
  5742                           ;games.c: 691:     if(CCP1IF == 1) {
  5743  0699  1283               	bcf	3,5	;RP0=0, select bank0
  5744  069A  1303               	bcf	3,6	;RP1=0, select bank0
  5745  069B  1D0C               	btfss	12,2	;volatile
  5746  069C  2E9E               	goto	u3591
  5747  069D  2E9F               	goto	u3590
  5748  069E                     u3591:	
  5749  069E  2EBF               	goto	l4712
  5750  069F                     u3590:	
  5751  069F                     l4702:	
  5752                           
  5753                           ;games.c: 692:         if(delay_loops == 0) {
  5754  069F  0866               	movf	_delay_loops,w
  5755  06A0  1D03               	btfss	3,2
  5756  06A1  2EA3               	goto	u3601
  5757  06A2  2EA4               	goto	u3600
  5758  06A3                     u3601:	
  5759  06A3  2EAE               	goto	l4708
  5760  06A4                     u3600:	
  5761  06A4                     l4704:	
  5762                           
  5763                           ;games.c: 693:             delay_loops = 25;
  5764  06A4  3019               	movlw	25
  5765  06A5  00B9               	movwf	??_concentration_game_loop
  5766  06A6  0839               	movf	??_concentration_game_loop,w
  5767  06A7  00E6               	movwf	_delay_loops
  5768  06A8                     l4706:	
  5769                           
  5770                           ;games.c: 694:             toggle_cursor();
  5771  06A8  160A  118A  23A6  120A  118A  	fcall	_toggle_cursor
  5772                           
  5773                           ;games.c: 695:         } else {
  5774  06AD  2EB0               	goto	l513
  5775  06AE                     l4708:	
  5776                           
  5777                           ;games.c: 696:             delay_loops--;
  5778  06AE  3001               	movlw	1
  5779  06AF  02E6               	subwf	_delay_loops,f
  5780  06B0                     l513:	
  5781                           ;games.c: 697:         }
  5782                           
  5783                           
  5784                           ;games.c: 698:         CCPR1 = TMR1+50000;
  5785  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  5786  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  5787  06B2  080E               	movf	14,w	;volatile
  5788  06B3  3E50               	addlw	80
  5789  06B4  00B9               	movwf	??_concentration_game_loop
  5790  06B5  080F               	movf	15,w	;volatile
  5791  06B6  1803               	skipnc
  5792  06B7  3E01               	addlw	1
  5793  06B8  3EC3               	addlw	195
  5794  06B9  00BA               	movwf	??_concentration_game_loop+1
  5795  06BA  0839               	movf	??_concentration_game_loop,w
  5796  06BB  0095               	movwf	21	;volatile
  5797  06BC  083A               	movf	??_concentration_game_loop+1,w
  5798  06BD  0096               	movwf	22	;volatile
  5799  06BE                     l4710:	
  5800                           
  5801                           ;games.c: 699:         CCP1IF = 0;
  5802  06BE  110C               	bcf	12,2	;volatile
  5803  06BF                     l4712:	
  5804                           
  5805                           ;games.c: 702:     if(joystick_x_pos > 900) {
  5806  06BF  085E               	movf	_joystick_x_pos+1,w
  5807  06C0  3A80               	xorlw	128
  5808  06C1  00FF               	movwf	btemp+1
  5809  06C2  3083               	movlw	131
  5810  06C3  027F               	subwf	btemp+1,w
  5811  06C4  1D03               	skipz
  5812  06C5  2EC8               	goto	u3615
  5813  06C6  3085               	movlw	133
  5814  06C7  025D               	subwf	_joystick_x_pos,w
  5815  06C8                     u3615:	
  5816  06C8  1C03               	skipc
  5817  06C9  2ECB               	goto	u3611
  5818  06CA  2ECC               	goto	u3610
  5819  06CB                     u3611:	
  5820  06CB  2EDE               	goto	l4718
  5821  06CC                     u3610:	
  5822  06CC                     l4714:	
  5823                           
  5824                           ;games.c: 703:         if(event_enabled) {
  5825  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  5826  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  5827  06CE  0865               	movf	_event_enabled,w
  5828  06CF  1903               	btfsc	3,2
  5829  06D0  2ED2               	goto	u3621
  5830  06D1  2ED3               	goto	u3620
  5831  06D2                     u3621:	
  5832  06D2  2F70               	goto	l532
  5833  06D3                     u3620:	
  5834  06D3                     l4716:	
  5835                           
  5836                           ;games.c: 704:             update_cursor(30, 2);
  5837  06D3  3002               	movlw	2
  5838  06D4  00B9               	movwf	??_concentration_game_loop
  5839  06D5  0839               	movf	??_concentration_game_loop,w
  5840  06D6  00B4               	movwf	update_cursor@direction
  5841  06D7  301E               	movlw	30
  5842  06D8  120A  158A  20D9  120A  118A  	fcall	_update_cursor
  5843  06DD  2F70               	goto	l532
  5844  06DE                     l4718:	
  5845  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  5846  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  5847  06E0  085E               	movf	_joystick_x_pos+1,w
  5848  06E1  3A80               	xorlw	128
  5849  06E2  00FF               	movwf	btemp+1
  5850  06E3  3080               	movlw	128
  5851  06E4  027F               	subwf	btemp+1,w
  5852  06E5  1D03               	skipz
  5853  06E6  2EE9               	goto	u3635
  5854  06E7  3064               	movlw	100
  5855  06E8  025D               	subwf	_joystick_x_pos,w
  5856  06E9                     u3635:	
  5857  06E9  1803               	skipnc
  5858  06EA  2EEC               	goto	u3631
  5859  06EB  2EED               	goto	u3630
  5860  06EC                     u3631:	
  5861  06EC  2EFF               	goto	l4724
  5862  06ED                     u3630:	
  5863  06ED                     l4720:	
  5864                           
  5865                           ;games.c: 707:         if(event_enabled) {
  5866  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  5867  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  5868  06EF  0865               	movf	_event_enabled,w
  5869  06F0  1903               	btfsc	3,2
  5870  06F1  2EF3               	goto	u3641
  5871  06F2  2EF4               	goto	u3640
  5872  06F3                     u3641:	
  5873  06F3  2F70               	goto	l532
  5874  06F4                     u3640:	
  5875  06F4                     l4722:	
  5876                           
  5877                           ;games.c: 708:             update_cursor(30, 3);
  5878  06F4  3003               	movlw	3
  5879  06F5  00B9               	movwf	??_concentration_game_loop
  5880  06F6  0839               	movf	??_concentration_game_loop,w
  5881  06F7  00B4               	movwf	update_cursor@direction
  5882  06F8  301E               	movlw	30
  5883  06F9  120A  158A  20D9  120A  118A  	fcall	_update_cursor
  5884  06FE  2F70               	goto	l532
  5885  06FF                     l4724:	
  5886  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  5887  0700  1303               	bcf	3,6	;RP1=0, select bank0
  5888  0701  085E               	movf	_joystick_x_pos+1,w
  5889  0702  3A80               	xorlw	128
  5890  0703  00FF               	movwf	btemp+1
  5891  0704  3083               	movlw	131
  5892  0705  027F               	subwf	btemp+1,w
  5893  0706  1D03               	skipz
  5894  0707  2F0A               	goto	u3655
  5895  0708  3021               	movlw	33
  5896  0709  025D               	subwf	_joystick_x_pos,w
  5897  070A                     u3655:	
  5898  070A  1C03               	skipc
  5899  070B  2F0D               	goto	u3651
  5900  070C  2F0E               	goto	u3650
  5901  070D                     u3651:	
  5902  070D  2F20               	goto	l4730
  5903  070E                     u3650:	
  5904  070E                     l4726:	
  5905                           
  5906                           ;games.c: 711:         if(event_enabled) {
  5907  070E  1283               	bcf	3,5	;RP0=0, select bank0
  5908  070F  1303               	bcf	3,6	;RP1=0, select bank0
  5909  0710  0865               	movf	_event_enabled,w
  5910  0711  1903               	btfsc	3,2
  5911  0712  2F14               	goto	u3661
  5912  0713  2F15               	goto	u3660
  5913  0714                     u3661:	
  5914  0714  2F70               	goto	l532
  5915  0715                     u3660:	
  5916  0715                     l4728:	
  5917                           
  5918                           ;games.c: 712:             update_cursor(60, 2);
  5919  0715  3002               	movlw	2
  5920  0716  00B9               	movwf	??_concentration_game_loop
  5921  0717  0839               	movf	??_concentration_game_loop,w
  5922  0718  00B4               	movwf	update_cursor@direction
  5923  0719  303C               	movlw	60
  5924  071A  120A  158A  20D9  120A  118A  	fcall	_update_cursor
  5925  071F  2F70               	goto	l532
  5926  0720                     l4730:	
  5927  0720  1283               	bcf	3,5	;RP0=0, select bank0
  5928  0721  1303               	bcf	3,6	;RP1=0, select bank0
  5929  0722  085E               	movf	_joystick_x_pos+1,w
  5930  0723  3A80               	xorlw	128
  5931  0724  00FF               	movwf	btemp+1
  5932  0725  3080               	movlw	128
  5933  0726  027F               	subwf	btemp+1,w
  5934  0727  1D03               	skipz
  5935  0728  2F2B               	goto	u3675
  5936  0729  30C8               	movlw	200
  5937  072A  025D               	subwf	_joystick_x_pos,w
  5938  072B                     u3675:	
  5939  072B  1803               	skipnc
  5940  072C  2F2E               	goto	u3671
  5941  072D  2F2F               	goto	u3670
  5942  072E                     u3671:	
  5943  072E  2F41               	goto	l4736
  5944  072F                     u3670:	
  5945  072F                     l4732:	
  5946                           
  5947                           ;games.c: 715:         if(event_enabled) {
  5948  072F  1283               	bcf	3,5	;RP0=0, select bank0
  5949  0730  1303               	bcf	3,6	;RP1=0, select bank0
  5950  0731  0865               	movf	_event_enabled,w
  5951  0732  1903               	btfsc	3,2
  5952  0733  2F35               	goto	u3681
  5953  0734  2F36               	goto	u3680
  5954  0735                     u3681:	
  5955  0735  2F70               	goto	l532
  5956  0736                     u3680:	
  5957  0736                     l4734:	
  5958                           
  5959                           ;games.c: 716:             update_cursor(60, 3);
  5960  0736  3003               	movlw	3
  5961  0737  00B9               	movwf	??_concentration_game_loop
  5962  0738  0839               	movf	??_concentration_game_loop,w
  5963  0739  00B4               	movwf	update_cursor@direction
  5964  073A  303C               	movlw	60
  5965  073B  120A  158A  20D9  120A  118A  	fcall	_update_cursor
  5966  0740  2F70               	goto	l532
  5967  0741                     l4736:	
  5968  0741  30FD               	movlw	253
  5969  0742  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0743  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0744  065B               	xorwf	_joystick_y_pos,w
  5972  0745  3003               	movlw	3
  5973  0746  1903               	skipnz
  5974  0747  065C               	xorwf	_joystick_y_pos+1,w
  5975  0748  1D03               	btfss	3,2
  5976  0749  2F4B               	goto	u3691
  5977  074A  2F4C               	goto	u3690
  5978  074B                     u3691:	
  5979  074B  2F5A               	goto	l4742
  5980  074C                     u3690:	
  5981  074C                     l4738:	
  5982                           
  5983                           ;games.c: 719:         if(event_enabled) {
  5984  074C  0865               	movf	_event_enabled,w
  5985  074D  1903               	btfsc	3,2
  5986  074E  2F50               	goto	u3701
  5987  074F  2F51               	goto	u3700
  5988  0750                     u3701:	
  5989  0750  2F70               	goto	l532
  5990  0751                     u3700:	
  5991  0751                     l4740:	
  5992                           
  5993                           ;games.c: 720:             update_cursor(100, 1);
  5994  0751  01B4               	clrf	update_cursor@direction
  5995  0752  0AB4               	incf	update_cursor@direction,f
  5996  0753  3064               	movlw	100
  5997  0754  120A  158A  20D9  120A  118A  	fcall	_update_cursor
  5998  0759  2F70               	goto	l532
  5999  075A                     l4742:	
  6000  075A  085B               	movf	_joystick_y_pos,w
  6001  075B  045C               	iorwf	_joystick_y_pos+1,w
  6002  075C  1D03               	btfss	3,2
  6003  075D  2F5F               	goto	u3711
  6004  075E  2F60               	goto	u3710
  6005  075F                     u3711:	
  6006  075F  2F6E               	goto	l529
  6007  0760                     u3710:	
  6008  0760                     l4744:	
  6009                           
  6010                           ;games.c: 723:         if(event_enabled) {
  6011  0760  0865               	movf	_event_enabled,w
  6012  0761  1903               	btfsc	3,2
  6013  0762  2F64               	goto	u3721
  6014  0763  2F65               	goto	u3720
  6015  0764                     u3721:	
  6016  0764  2F70               	goto	l532
  6017  0765                     u3720:	
  6018  0765                     l4746:	
  6019                           
  6020                           ;games.c: 724:             update_cursor(100, 1);
  6021  0765  01B4               	clrf	update_cursor@direction
  6022  0766  0AB4               	incf	update_cursor@direction,f
  6023  0767  3064               	movlw	100
  6024  0768  120A  158A  20D9  120A  118A  	fcall	_update_cursor
  6025  076D  2F70               	goto	l532
  6026  076E                     l529:	
  6027                           
  6028                           ;games.c: 727:         event_enabled = 1;
  6029  076E  01E5               	clrf	_event_enabled
  6030  076F  0AE5               	incf	_event_enabled,f
  6031  0770                     l532:	
  6032  0770  0008               	return
  6033  0771                     __end_of_concentration_game_loop:	
  6034                           
  6035                           	psect	text20
  6036  08D9                     __ptext20:	
  6037 ;; *************** function _update_cursor *****************
  6038 ;; Defined at:
  6039 ;;		line 731 in file "games.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  move_delay_c    1    wreg     unsigned char 
  6042 ;;  direction       1   20[BANK0 ] unsigned char 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  move_delay_c    1   23[BANK0 ] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6054 ;;      Params:         0       1       0       0       0
  6055 ;;      Locals:         0       1       0       0       0
  6056 ;;      Temps:          0       2       0       0       0
  6057 ;;      Totals:         0       4       0       0       0
  6058 ;;Total ram usage:        4 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    4
  6061 ;; This function calls:
  6062 ;;		_get_current_char
  6063 ;;		_lcd_goto
  6064 ;;		_lcd_putch
  6065 ;; This function is called by:
  6066 ;;		_concentration_game_loop
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           
  6071                           ;psect for function _update_cursor
  6072  08D9                     _update_cursor:	
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6076                           ;update_cursor@move_delay_count stored from wreg
  6077  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  6078  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  6079  08DB  00B7               	movwf	update_cursor@move_delay_count
  6080  08DC                     l4506:	
  6081                           
  6082                           ;games.c: 732:     event_enabled = 0;
  6083  08DC  01E5               	clrf	_event_enabled
  6084  08DD                     l4508:	
  6085                           
  6086                           ;games.c: 733:     event_delay_count = move_delay_count;
  6087  08DD  0837               	movf	update_cursor@move_delay_count,w
  6088  08DE  00B5               	movwf	??_update_cursor
  6089  08DF  0835               	movf	??_update_cursor,w
  6090  08E0  00FA               	movwf	_event_delay_count
  6091                           
  6092                           ;games.c: 734:     switch(direction) {
  6093  08E1  2920               	goto	l4530
  6094  08E2                     l4510:	
  6095                           
  6096                           ;games.c: 736:             cursor_pos ^= 0x40;
  6097  08E2  3040               	movlw	64
  6098  08E3  00B5               	movwf	??_update_cursor
  6099  08E4  0835               	movf	??_update_cursor,w
  6100  08E5  06E9               	xorwf	_cursor_pos,f
  6101                           
  6102                           ;games.c: 737:             break;
  6103  08E6  2933               	goto	l4532
  6104  08E7                     l4512:	
  6105                           
  6106                           ;games.c: 741:                     cursor_pos = 0x0F;
  6107  08E7  300F               	movlw	15
  6108  08E8  00B5               	movwf	??_update_cursor
  6109  08E9  0835               	movf	??_update_cursor,w
  6110  08EA  00E9               	movwf	_cursor_pos
  6111                           
  6112                           ;games.c: 742:                     break;
  6113  08EB  2933               	goto	l4532
  6114  08EC                     l4514:	
  6115                           
  6116                           ;games.c: 744:                     cursor_pos = 0x4F;
  6117  08EC  304F               	movlw	79
  6118  08ED  00B5               	movwf	??_update_cursor
  6119  08EE  0835               	movf	??_update_cursor,w
  6120  08EF  00E9               	movwf	_cursor_pos
  6121                           
  6122                           ;games.c: 745:                     break;
  6123  08F0  2933               	goto	l4532
  6124  08F1                     l4516:	
  6125                           
  6126                           ;games.c: 747:                     cursor_pos--;
  6127  08F1  3001               	movlw	1
  6128  08F2  02E9               	subwf	_cursor_pos,f
  6129                           
  6130                           ;games.c: 748:             }
  6131  08F3  2933               	goto	l4532
  6132  08F4                     l4518:	
  6133  08F4  0869               	movf	_cursor_pos,w
  6134  08F5  00B5               	movwf	??_update_cursor
  6135  08F6  01B6               	clrf	??_update_cursor+1
  6136                           
  6137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6138                           ; Switch size 1, requested type "simple"
  6139                           ; Number of cases is 1, Range of values is 0 to 0
  6140                           ; switch strategies available:
  6141                           ; Name         Instructions Cycles
  6142                           ; simple_byte            4     3 (average)
  6143                           ; direct_byte           11     8 (fixed)
  6144                           ; jumptable            260     6 (fixed)
  6145                           ;	Chosen strategy is simple_byte
  6146  08F7  0836               	movf	??_update_cursor+1,w
  6147  08F8  3A00               	xorlw	0	; case 0
  6148  08F9  1903               	skipnz
  6149  08FA  28FC               	goto	l5154
  6150  08FB  28F1               	goto	l4516
  6151  08FC                     l5154:	
  6152                           
  6153                           ; Switch size 1, requested type "simple"
  6154                           ; Number of cases is 2, Range of values is 0 to 64
  6155                           ; switch strategies available:
  6156                           ; Name         Instructions Cycles
  6157                           ; simple_byte            7     4 (average)
  6158                           ; direct_byte          203     8 (fixed)
  6159                           ; jumptable            260     6 (fixed)
  6160                           ;	Chosen strategy is simple_byte
  6161  08FC  0835               	movf	??_update_cursor,w
  6162  08FD  3A00               	xorlw	0	; case 0
  6163  08FE  1903               	skipnz
  6164  08FF  28E7               	goto	l4512
  6165  0900  3A40               	xorlw	64	; case 64
  6166  0901  1903               	skipnz
  6167  0902  28EC               	goto	l4514
  6168  0903  28F1               	goto	l4516
  6169  0904                     l4520:	
  6170                           
  6171                           ;games.c: 753:                     cursor_pos = 0x00;
  6172  0904  01E9               	clrf	_cursor_pos
  6173                           
  6174                           ;games.c: 754:                     break;
  6175  0905  2933               	goto	l4532
  6176  0906                     l4522:	
  6177                           
  6178                           ;games.c: 756:                     cursor_pos = 0x40;
  6179  0906  3040               	movlw	64
  6180  0907  00B5               	movwf	??_update_cursor
  6181  0908  0835               	movf	??_update_cursor,w
  6182  0909  00E9               	movwf	_cursor_pos
  6183                           
  6184                           ;games.c: 757:                     break;
  6185  090A  2933               	goto	l4532
  6186  090B                     l4524:	
  6187                           
  6188                           ;games.c: 759:                     cursor_pos++;
  6189  090B  3001               	movlw	1
  6190  090C  00B5               	movwf	??_update_cursor
  6191  090D  0835               	movf	??_update_cursor,w
  6192  090E  07E9               	addwf	_cursor_pos,f
  6193                           
  6194                           ;games.c: 760:             }
  6195  090F  2933               	goto	l4532
  6196  0910                     l4526:	
  6197  0910  0869               	movf	_cursor_pos,w
  6198  0911  00B5               	movwf	??_update_cursor
  6199  0912  01B6               	clrf	??_update_cursor+1
  6200                           
  6201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6202                           ; Switch size 1, requested type "simple"
  6203                           ; Number of cases is 1, Range of values is 0 to 0
  6204                           ; switch strategies available:
  6205                           ; Name         Instructions Cycles
  6206                           ; simple_byte            4     3 (average)
  6207                           ; direct_byte           11     8 (fixed)
  6208                           ; jumptable            260     6 (fixed)
  6209                           ;	Chosen strategy is simple_byte
  6210  0913  0836               	movf	??_update_cursor+1,w
  6211  0914  3A00               	xorlw	0	; case 0
  6212  0915  1903               	skipnz
  6213  0916  2918               	goto	l5156
  6214  0917  290B               	goto	l4524
  6215  0918                     l5156:	
  6216                           
  6217                           ; Switch size 1, requested type "simple"
  6218                           ; Number of cases is 2, Range of values is 15 to 79
  6219                           ; switch strategies available:
  6220                           ; Name         Instructions Cycles
  6221                           ; simple_byte            7     4 (average)
  6222                           ; direct_byte          206    11 (fixed)
  6223                           ; jumptable            263     9 (fixed)
  6224                           ;	Chosen strategy is simple_byte
  6225  0918  0835               	movf	??_update_cursor,w
  6226  0919  3A0F               	xorlw	15	; case 15
  6227  091A  1903               	skipnz
  6228  091B  2904               	goto	l4520
  6229  091C  3A40               	xorlw	64	; case 79
  6230  091D  1903               	skipnz
  6231  091E  2906               	goto	l4522
  6232  091F  290B               	goto	l4524
  6233  0920                     l4530:	
  6234  0920  0834               	movf	update_cursor@direction,w
  6235  0921  00B5               	movwf	??_update_cursor
  6236  0922  01B6               	clrf	??_update_cursor+1
  6237                           
  6238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6239                           ; Switch size 1, requested type "simple"
  6240                           ; Number of cases is 1, Range of values is 0 to 0
  6241                           ; switch strategies available:
  6242                           ; Name         Instructions Cycles
  6243                           ; simple_byte            4     3 (average)
  6244                           ; direct_byte           11     8 (fixed)
  6245                           ; jumptable            260     6 (fixed)
  6246                           ;	Chosen strategy is simple_byte
  6247  0923  0836               	movf	??_update_cursor+1,w
  6248  0924  3A00               	xorlw	0	; case 0
  6249  0925  1903               	skipnz
  6250  0926  2928               	goto	l5158
  6251  0927  2933               	goto	l4532
  6252  0928                     l5158:	
  6253                           
  6254                           ; Switch size 1, requested type "simple"
  6255                           ; Number of cases is 3, Range of values is 1 to 3
  6256                           ; switch strategies available:
  6257                           ; Name         Instructions Cycles
  6258                           ; simple_byte           10     6 (average)
  6259                           ; direct_byte           20    11 (fixed)
  6260                           ; jumptable            263     9 (fixed)
  6261                           ;	Chosen strategy is simple_byte
  6262  0928  0835               	movf	??_update_cursor,w
  6263  0929  3A01               	xorlw	1	; case 1
  6264  092A  1903               	skipnz
  6265  092B  28E2               	goto	l4510
  6266  092C  3A03               	xorlw	3	; case 2
  6267  092D  1903               	skipnz
  6268  092E  28F4               	goto	l4518
  6269  092F  3A01               	xorlw	1	; case 3
  6270  0930  1903               	skipnz
  6271  0931  2910               	goto	l4526
  6272  0932  2933               	goto	l4532
  6273  0933                     l4532:	
  6274                           
  6275                           ;games.c: 763:     lcd_putch(current_char, gameboard);
  6276  0933  3005               	movlw	5
  6277  0934  00B0               	movwf	lcd_putch@port
  6278  0935  3000               	movlw	0
  6279  0936  00B1               	movwf	lcd_putch@port+1
  6280  0937  0868               	movf	_current_char,w
  6281  0938  160A  118A  22A0  120A  158A  	fcall	_lcd_putch
  6282                           
  6283                           ;games.c: 764:     lcd_goto(cursor_pos, gameboard);
  6284  093D  3005               	movlw	5
  6285  093E  1283               	bcf	3,5	;RP0=0, select bank0
  6286  093F  1303               	bcf	3,6	;RP1=0, select bank0
  6287  0940  00A8               	movwf	lcd_goto@port
  6288  0941  3000               	movlw	0
  6289  0942  00A9               	movwf	lcd_goto@port+1
  6290  0943  0869               	movf	_cursor_pos,w
  6291  0944  160A  118A  2311  120A  158A  	fcall	_lcd_goto
  6292                           
  6293                           ;games.c: 765:     get_current_char();
  6294  0949  160A  118A  22B2  120A  158A  	fcall	_get_current_char
  6295  094E                     l4534:	
  6296                           
  6297                           ;games.c: 766:     if(cursor_solid == 1) {
  6298  094E  1283               	bcf	3,5	;RP0=0, select bank0
  6299  094F  1303               	bcf	3,6	;RP1=0, select bank0
  6300  0950  0367               	decf	_cursor_solid,w
  6301  0951  1D03               	btfss	3,2
  6302  0952  2954               	goto	u3441
  6303  0953  2955               	goto	u3440
  6304  0954                     u3441:	
  6305  0954  296B               	goto	l551
  6306  0955                     u3440:	
  6307  0955                     l4536:	
  6308                           
  6309                           ;games.c: 767:         lcd_putch(0x20, gameboard);
  6310  0955  3005               	movlw	5
  6311  0956  00B0               	movwf	lcd_putch@port
  6312  0957  3000               	movlw	0
  6313  0958  00B1               	movwf	lcd_putch@port+1
  6314  0959  3020               	movlw	32
  6315  095A  160A  118A  22A0  120A  158A  	fcall	_lcd_putch
  6316                           
  6317                           ;games.c: 768:         lcd_goto(cursor_pos, gameboard);
  6318  095F  3005               	movlw	5
  6319  0960  1283               	bcf	3,5	;RP0=0, select bank0
  6320  0961  1303               	bcf	3,6	;RP1=0, select bank0
  6321  0962  00A8               	movwf	lcd_goto@port
  6322  0963  3000               	movlw	0
  6323  0964  00A9               	movwf	lcd_goto@port+1
  6324  0965  0869               	movf	_cursor_pos,w
  6325  0966  160A  118A  2311  120A  158A  	fcall	_lcd_goto
  6326  096B                     l551:	
  6327  096B  0008               	return
  6328  096C                     __end_of_update_cursor:	
  6329                           
  6330                           	psect	text21
  6331  12B2                     __ptext21:	
  6332 ;; *************** function _get_current_char *****************
  6333 ;; Defined at:
  6334 ;;		line 783 in file "games.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6348 ;;      Params:         0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0
  6350 ;;      Temps:          0       1       0       0       0
  6351 ;;      Totals:         0       1       0       0       0
  6352 ;;Total ram usage:        1 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    2
  6355 ;; This function calls:
  6356 ;;		_get_cursor_index
  6357 ;; This function is called by:
  6358 ;;		_concentration_gameboard_init
  6359 ;;		_update_cursor
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           
  6364                           ;psect for function _get_current_char
  6365  12B2                     _get_current_char:	
  6366  12B2                     l4168:	
  6367                           ;incstack = 0
  6368                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6369                           
  6370                           
  6371                           ;games.c: 784:     current_char = visible[get_cursor_index(cursor_pos)];
  6372  12B2  1283               	bcf	3,5	;RP0=0, select bank0
  6373  12B3  1303               	bcf	3,6	;RP1=0, select bank0
  6374  12B4  0869               	movf	_cursor_pos,w
  6375  12B5  120A  118A  27F4  160A  118A  	fcall	_get_cursor_index
  6376  12BA  3EA0               	addlw	(low (_visible| 0))& (0+255)
  6377  12BB  0084               	movwf	4
  6378  12BC  1383               	bcf	3,7	;select IRP bank1
  6379  12BD  0800               	movf	0,w
  6380  12BE  1283               	bcf	3,5	;RP0=0, select bank0
  6381  12BF  1303               	bcf	3,6	;RP1=0, select bank0
  6382  12C0  00A1               	movwf	??_get_current_char
  6383  12C1  0821               	movf	??_get_current_char,w
  6384  12C2  00E8               	movwf	_current_char
  6385  12C3                     l559:	
  6386  12C3  0008               	return
  6387  12C4                     __end_of_get_current_char:	
  6388                           
  6389                           	psect	text22
  6390  13A6                     __ptext22:	
  6391 ;; *************** function _toggle_cursor *****************
  6392 ;; Defined at:
  6393 ;;		line 772 in file "games.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    4
  6414 ;; This function calls:
  6415 ;;		_lcd_goto
  6416 ;;		_lcd_putch
  6417 ;; This function is called by:
  6418 ;;		_concentration_game_loop
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           
  6423                           ;psect for function _toggle_cursor
  6424  13A6                     _toggle_cursor:	
  6425  13A6                     l4494:	
  6426                           ;incstack = 0
  6427                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6428                           
  6429                           
  6430                           ;games.c: 773:     if(cursor_solid == 0) {
  6431  13A6  1283               	bcf	3,5	;RP0=0, select bank0
  6432  13A7  1303               	bcf	3,6	;RP1=0, select bank0
  6433  13A8  0867               	movf	_cursor_solid,w
  6434  13A9  1D03               	btfss	3,2
  6435  13AA  2BAC               	goto	u3431
  6436  13AB  2BAD               	goto	u3430
  6437  13AC                     u3431:	
  6438  13AC  2BBC               	goto	l4500
  6439  13AD                     u3430:	
  6440  13AD                     l4496:	
  6441                           
  6442                           ;games.c: 774:         lcd_putch(0x20, gameboard);
  6443  13AD  3005               	movlw	5
  6444  13AE  00B0               	movwf	lcd_putch@port
  6445  13AF  3000               	movlw	0
  6446  13B0  00B1               	movwf	lcd_putch@port+1
  6447  13B1  3020               	movlw	32
  6448  13B2  160A  118A  22A0  160A  118A  	fcall	_lcd_putch
  6449  13B7                     l4498:	
  6450                           
  6451                           ;games.c: 775:         cursor_solid = 1;
  6452  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  6453  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  6454  13B9  01E7               	clrf	_cursor_solid
  6455  13BA  0AE7               	incf	_cursor_solid,f
  6456                           
  6457                           ;games.c: 776:     } else {
  6458  13BB  2BC9               	goto	l4504
  6459  13BC                     l4500:	
  6460                           
  6461                           ;games.c: 777:         lcd_putch(current_char, gameboard);
  6462  13BC  3005               	movlw	5
  6463  13BD  00B0               	movwf	lcd_putch@port
  6464  13BE  3000               	movlw	0
  6465  13BF  00B1               	movwf	lcd_putch@port+1
  6466  13C0  0868               	movf	_current_char,w
  6467  13C1  160A  118A  22A0  160A  118A  	fcall	_lcd_putch
  6468  13C6                     l4502:	
  6469                           
  6470                           ;games.c: 778:         cursor_solid = 0;
  6471  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  6472  13C7  1303               	bcf	3,6	;RP1=0, select bank0
  6473  13C8  01E7               	clrf	_cursor_solid
  6474  13C9                     l4504:	
  6475                           
  6476                           ;games.c: 780:     lcd_goto(cursor_pos, gameboard);
  6477  13C9  3005               	movlw	5
  6478  13CA  00A8               	movwf	lcd_goto@port
  6479  13CB  3000               	movlw	0
  6480  13CC  00A9               	movwf	lcd_goto@port+1
  6481  13CD  0869               	movf	_cursor_pos,w
  6482  13CE  160A  118A  2311  160A  118A  	fcall	_lcd_goto
  6483  13D3                     l556:	
  6484  13D3  0008               	return
  6485  13D4                     __end_of_toggle_cursor:	
  6486                           
  6487                           	psect	text23
  6488  0B68                     __ptext23:	
  6489 ;; *************** function _check_for_match *****************
  6490 ;; Defined at:
  6491 ;;		line 626 in file "games.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  player          1    wreg     unsigned char 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  player          1   24[BANK0 ] unsigned char 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6505 ;;      Params:         0       0       0       0       0
  6506 ;;      Locals:         0       1       0       0       0
  6507 ;;      Temps:          0       2       0       0       0
  6508 ;;      Totals:         0       3       0       0       0
  6509 ;;Total ram usage:        3 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    5
  6512 ;; This function calls:
  6513 ;;		_DelayMs
  6514 ;;		_display_concentration_gameboard
  6515 ;;		_display_concentration_scoreboard
  6516 ;;		_get_cursor_index
  6517 ;;		_play_tone
  6518 ;;		_turn_on_led
  6519 ;; This function is called by:
  6520 ;;		_concentration_game_loop
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           
  6525                           ;psect for function _check_for_match
  6526  0B68                     _check_for_match:	
  6527                           
  6528                           ;incstack = 0
  6529                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6530                           ;check_for_match@player stored from wreg
  6531  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  6532  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  6533  0B6A  00B8               	movwf	check_for_match@player
  6534  0B6B                     l4436:	
  6535                           
  6536                           ;games.c: 627:     if(selected_tile == 0xFF) {
  6537  0B6B  0A62               	incf	_selected_tile,w
  6538  0B6C  1D03               	btfss	3,2
  6539  0B6D  2B6F               	goto	u3391
  6540  0B6E  2B70               	goto	u3390
  6541  0B6F                     u3391:	
  6542  0B6F  2B75               	goto	l4440
  6543  0B70                     u3390:	
  6544  0B70                     l4438:	
  6545                           
  6546                           ;games.c: 628:         selected_tile = cursor_pos;
  6547  0B70  0869               	movf	_cursor_pos,w
  6548  0B71  00B6               	movwf	??_check_for_match
  6549  0B72  0836               	movf	??_check_for_match,w
  6550  0B73  00E2               	movwf	_selected_tile
  6551                           
  6552                           ;games.c: 629:     } else {
  6553  0B74  2C76               	goto	l495
  6554  0B75                     l4440:	
  6555                           
  6556                           ;games.c: 630:         if(board[get_cursor_index(selected_tile)] == board[get_cursor_ind
      +                          ex(cursor_pos)]) {
  6557  0B75  0869               	movf	_cursor_pos,w
  6558  0B76  120A  118A  27F4  120A  158A  	fcall	_get_cursor_index
  6559  0B7B  3EB0               	addlw	(low (_board| (0+256)))& (0+255)
  6560  0B7C  0084               	movwf	4
  6561  0B7D  1783               	bsf	3,7	;select IRP bank3
  6562  0B7E  0800               	movf	0,w
  6563  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  6564  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  6565  0B81  00B6               	movwf	??_check_for_match
  6566  0B82  0862               	movf	_selected_tile,w
  6567  0B83  120A  118A  27F4  120A  158A  	fcall	_get_cursor_index
  6568  0B88  3EB0               	addlw	(low (_board| (0+256)))& (0+255)
  6569  0B89  0084               	movwf	4
  6570  0B8A  1783               	bsf	3,7	;select IRP bank3
  6571  0B8B  0800               	movf	0,w
  6572  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  6573  0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  6574  0B8E  0636               	xorwf	??_check_for_match,w
  6575  0B8F  1D03               	skipz
  6576  0B90  2B92               	goto	u3401
  6577  0B91  2B93               	goto	u3400
  6578  0B92                     u3401:	
  6579  0B92  2C01               	goto	l4468
  6580  0B93                     u3400:	
  6581  0B93                     l4442:	
  6582                           
  6583                           ;games.c: 631:             if(player == 0) {
  6584  0B93  0838               	movf	check_for_match@player,w
  6585  0B94  1D03               	btfss	3,2
  6586  0B95  2B97               	goto	u3411
  6587  0B96  2B98               	goto	u3410
  6588  0B97                     u3411:	
  6589  0B97  2B9D               	goto	l4446
  6590  0B98                     u3410:	
  6591  0B98                     l4444:	
  6592                           
  6593                           ;games.c: 632:                 p1_score++;
  6594  0B98  3001               	movlw	1
  6595  0B99  00B6               	movwf	??_check_for_match
  6596  0B9A  0836               	movf	??_check_for_match,w
  6597  0B9B  07E4               	addwf	_p1_score,f
  6598                           
  6599                           ;games.c: 633:             } else {
  6600  0B9C  2BA1               	goto	l4448
  6601  0B9D                     l4446:	
  6602                           
  6603                           ;games.c: 634:                 p2_score++;
  6604  0B9D  3001               	movlw	1
  6605  0B9E  00B6               	movwf	??_check_for_match
  6606  0B9F  0836               	movf	??_check_for_match,w
  6607  0BA0  07E3               	addwf	_p2_score,f
  6608  0BA1                     l4448:	
  6609                           
  6610                           ;games.c: 636:             turn_on_led(1);
  6611  0BA1  3001               	movlw	1
  6612  0BA2  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  6613  0BA7                     l4450:	
  6614                           
  6615                           ;games.c: 637:             play_tone(1689, 15);
  6616  0BA7  3099               	movlw	153
  6617  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  6618  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  6619  0BAA  00A0               	movwf	play_tone@tone_period
  6620  0BAB  3006               	movlw	6
  6621  0BAC  00A1               	movwf	play_tone@tone_period+1
  6622  0BAD  300F               	movlw	15
  6623  0BAE  00B6               	movwf	??_check_for_match
  6624  0BAF  0836               	movf	??_check_for_match,w
  6625  0BB0  00A2               	movwf	play_tone@duration_8ms
  6626  0BB1  160A  118A  232F  120A  158A  	fcall	_play_tone
  6627  0BB6                     l4452:	
  6628                           
  6629                           ;games.c: 638:             RC6 = 0;
  6630  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  6632  0BB8  1307               	bcf	7,6	;volatile
  6633  0BB9                     l4454:	
  6634                           
  6635                           ;games.c: 639:             play_tone(1420, 5);
  6636  0BB9  308C               	movlw	140
  6637  0BBA  00A0               	movwf	play_tone@tone_period
  6638  0BBB  3005               	movlw	5
  6639  0BBC  00A1               	movwf	play_tone@tone_period+1
  6640  0BBD  3005               	movlw	5
  6641  0BBE  00B6               	movwf	??_check_for_match
  6642  0BBF  0836               	movf	??_check_for_match,w
  6643  0BC0  00A2               	movwf	play_tone@duration_8ms
  6644  0BC1  160A  118A  232F  120A  158A  	fcall	_play_tone
  6645  0BC6                     l4456:	
  6646                           
  6647                           ;games.c: 640:             turn_on_led(1);
  6648  0BC6  3001               	movlw	1
  6649  0BC7  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  6650  0BCC                     l4458:	
  6651                           
  6652                           ;games.c: 641:             play_tone(1689, 15);
  6653  0BCC  3099               	movlw	153
  6654  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  6655  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  6656  0BCF  00A0               	movwf	play_tone@tone_period
  6657  0BD0  3006               	movlw	6
  6658  0BD1  00A1               	movwf	play_tone@tone_period+1
  6659  0BD2  300F               	movlw	15
  6660  0BD3  00B6               	movwf	??_check_for_match
  6661  0BD4  0836               	movf	??_check_for_match,w
  6662  0BD5  00A2               	movwf	play_tone@duration_8ms
  6663  0BD6  160A  118A  232F  120A  158A  	fcall	_play_tone
  6664  0BDB                     l4460:	
  6665                           
  6666                           ;games.c: 642:             RC6 = 0;
  6667  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  6668  0BDC  1303               	bcf	3,6	;RP1=0, select bank0
  6669  0BDD  1307               	bcf	7,6	;volatile
  6670  0BDE                     l4462:	
  6671                           
  6672                           ;games.c: 643:             play_tone(1420, 5);
  6673  0BDE  308C               	movlw	140
  6674  0BDF  00A0               	movwf	play_tone@tone_period
  6675  0BE0  3005               	movlw	5
  6676  0BE1  00A1               	movwf	play_tone@tone_period+1
  6677  0BE2  3005               	movlw	5
  6678  0BE3  00B6               	movwf	??_check_for_match
  6679  0BE4  0836               	movf	??_check_for_match,w
  6680  0BE5  00A2               	movwf	play_tone@duration_8ms
  6681  0BE6  160A  118A  232F  120A  158A  	fcall	_play_tone
  6682                           
  6683                           ;games.c: 645:             if((p1_score+p2_score)==2) {
  6684  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  6685  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  6686  0BED  0864               	movf	_p1_score,w
  6687  0BEE  0763               	addwf	_p2_score,w
  6688  0BEF  00B6               	movwf	??_check_for_match
  6689  0BF0  01B7               	clrf	??_check_for_match+1
  6690  0BF1  0DB7               	rlf	??_check_for_match+1,f
  6691  0BF2  3002               	movlw	2
  6692  0BF3  0636               	xorwf	??_check_for_match,w
  6693  0BF4  0437               	iorwf	??_check_for_match+1,w
  6694  0BF5  1D03               	btfss	3,2
  6695  0BF6  2BF8               	goto	u3421
  6696  0BF7  2BF9               	goto	u3420
  6697  0BF8                     u3421:	
  6698  0BF8  2BFB               	goto	l4466
  6699  0BF9                     u3420:	
  6700  0BF9                     l4464:	
  6701                           
  6702                           ;games.c: 646:                 game_over = 1;
  6703  0BF9  01DF               	clrf	_game_over
  6704  0BFA  0ADF               	incf	_game_over,f
  6705  0BFB                     l4466:	
  6706                           
  6707                           ;games.c: 648:             display_concentration_scoreboard();
  6708  0BFB  120A  158A  2294  120A  158A  	fcall	_display_concentration_scoreboard
  6709                           
  6710                           ;games.c: 650:         } else {
  6711  0C00  2C61               	goto	l4486
  6712  0C01                     l4468:	
  6713                           
  6714                           ;games.c: 651:             display_concentration_gameboard();
  6715  0C01  160A  118A  243F  120A  158A  	fcall	_display_concentration_gameboard
  6716                           
  6717                           ;games.c: 652:             turn_on_led(0);
  6718  0C06  3000               	movlw	0
  6719  0C07  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  6720  0C0C                     l4470:	
  6721                           
  6722                           ;games.c: 653:             play_tone(36075, 30);
  6723  0C0C  30EB               	movlw	235
  6724  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  6725  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  6726  0C0F  00A0               	movwf	play_tone@tone_period
  6727  0C10  308C               	movlw	140
  6728  0C11  00A1               	movwf	play_tone@tone_period+1
  6729  0C12  301E               	movlw	30
  6730  0C13  00B6               	movwf	??_check_for_match
  6731  0C14  0836               	movf	??_check_for_match,w
  6732  0C15  00A2               	movwf	play_tone@duration_8ms
  6733  0C16  160A  118A  232F  120A  158A  	fcall	_play_tone
  6734  0C1B                     l4472:	
  6735                           
  6736                           ;games.c: 654:             RC5 = 0;
  6737  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  6738  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  6739  0C1D  1287               	bcf	7,5	;volatile
  6740  0C1E                     l4474:	
  6741                           
  6742                           ;games.c: 655:             DelayMs(100);
  6743  0C1E  3064               	movlw	100
  6744  0C1F  00A0               	movwf	DelayMs@millis
  6745  0C20  3000               	movlw	0
  6746  0C21  00A1               	movwf	DelayMs@millis+1
  6747  0C22  160A  118A  22C4  120A  158A  	fcall	_DelayMs
  6748                           
  6749                           ;games.c: 656:             turn_on_led(0);
  6750  0C27  3000               	movlw	0
  6751  0C28  160A  118A  2404  120A  158A  	fcall	_turn_on_led
  6752  0C2D                     l4476:	
  6753                           
  6754                           ;games.c: 657:             play_tone(36075, 30);
  6755  0C2D  30EB               	movlw	235
  6756  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0C30  00A0               	movwf	play_tone@tone_period
  6759  0C31  308C               	movlw	140
  6760  0C32  00A1               	movwf	play_tone@tone_period+1
  6761  0C33  301E               	movlw	30
  6762  0C34  00B6               	movwf	??_check_for_match
  6763  0C35  0836               	movf	??_check_for_match,w
  6764  0C36  00A2               	movwf	play_tone@duration_8ms
  6765  0C37  160A  118A  232F  120A  158A  	fcall	_play_tone
  6766  0C3C                     l4478:	
  6767                           
  6768                           ;games.c: 658:             RC5 = 0;
  6769  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  6770  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  6771  0C3E  1287               	bcf	7,5	;volatile
  6772  0C3F                     l4480:	
  6773                           
  6774                           ;games.c: 659:             visible[get_cursor_index(selected_tile)] = 0xFF;
  6775  0C3F  30FF               	movlw	255
  6776  0C40  00B6               	movwf	??_check_for_match
  6777  0C41  0862               	movf	_selected_tile,w
  6778  0C42  120A  118A  27F4  120A  158A  	fcall	_get_cursor_index
  6779  0C47  3EA0               	addlw	(low (_visible| 0))& (0+255)
  6780  0C48  0084               	movwf	4
  6781  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  6782  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  6783  0C4B  0836               	movf	??_check_for_match,w
  6784  0C4C  1383               	bcf	3,7	;select IRP bank1
  6785  0C4D  0080               	movwf	0
  6786  0C4E                     l4482:	
  6787                           
  6788                           ;games.c: 660:             visible[get_cursor_index(cursor_pos)] = 0xFF;
  6789  0C4E  30FF               	movlw	255
  6790  0C4F  00B6               	movwf	??_check_for_match
  6791  0C50  0869               	movf	_cursor_pos,w
  6792  0C51  120A  118A  27F4  120A  158A  	fcall	_get_cursor_index
  6793  0C56  3EA0               	addlw	(low (_visible| 0))& (0+255)
  6794  0C57  0084               	movwf	4
  6795  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  6796  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  6797  0C5A  0836               	movf	??_check_for_match,w
  6798  0C5B  1383               	bcf	3,7	;select IRP bank1
  6799  0C5C  0080               	movwf	0
  6800  0C5D                     l4484:	
  6801                           
  6802                           ;games.c: 661:             current_char = 0xFF;
  6803  0C5D  30FF               	movlw	255
  6804  0C5E  00B6               	movwf	??_check_for_match
  6805  0C5F  0836               	movf	??_check_for_match,w
  6806  0C60  00E8               	movwf	_current_char
  6807  0C61                     l4486:	
  6808                           
  6809                           ;games.c: 663:         selected_tile = 0xFF;
  6810  0C61  30FF               	movlw	255
  6811  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  6812  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  6813  0C64  00B6               	movwf	??_check_for_match
  6814  0C65  0836               	movf	??_check_for_match,w
  6815  0C66  00E2               	movwf	_selected_tile
  6816  0C67                     l4488:	
  6817                           
  6818                           ;games.c: 664:         current_player ^= 0x01;
  6819  0C67  3001               	movlw	1
  6820  0C68  00B6               	movwf	??_check_for_match
  6821  0C69  0836               	movf	??_check_for_match,w
  6822  0C6A  06E0               	xorwf	_current_player,f
  6823  0C6B                     l4490:	
  6824                           
  6825                           ;games.c: 665:         joystick_pressed = 1;
  6826  0C6B  01E1               	clrf	_joystick_pressed
  6827  0C6C  0AE1               	incf	_joystick_pressed,f
  6828  0C6D                     l4492:	
  6829                           
  6830                           ;games.c: 666:         DelayMs(100);
  6831  0C6D  3064               	movlw	100
  6832  0C6E  00A0               	movwf	DelayMs@millis
  6833  0C6F  3000               	movlw	0
  6834  0C70  00A1               	movwf	DelayMs@millis+1
  6835  0C71  160A  118A  22C4  120A  158A  	fcall	_DelayMs
  6836  0C76                     l495:	
  6837  0C76  0008               	return
  6838  0C77                     __end_of_check_for_match:	
  6839                           
  6840                           	psect	text24
  6841  07F4                     __ptext24:	
  6842 ;; *************** function _get_cursor_index *****************
  6843 ;; Defined at:
  6844 ;;		line 604 in file "games.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  cursor          1    wreg     unsigned char 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  cursor          1    0[BANK0 ] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  1    wreg      unsigned char 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6858 ;;      Params:         0       0       0       0       0
  6859 ;;      Locals:         0       1       0       0       0
  6860 ;;      Temps:          0       0       0       0       0
  6861 ;;      Totals:         0       1       0       0       0
  6862 ;;Total ram usage:        1 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    1
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_check_for_match
  6869 ;;		_concentration_game_loop
  6870 ;;		_get_current_char
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           
  6875                           ;psect for function _get_cursor_index
  6876  07F4                     _get_cursor_index:	
  6877                           
  6878                           ;incstack = 0
  6879                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  6880                           ;get_cursor_index@cursor stored from wreg
  6881  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  6882  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  6883  07F6  00A0               	movwf	get_cursor_index@cursor
  6884  07F7                     l3928:	
  6885                           
  6886                           ;games.c: 605:     if(cursor&0x40) {
  6887  07F7  1F20               	btfss	get_cursor_index@cursor,6
  6888  07F8  2FFA               	goto	u2721
  6889  07F9  2FFB               	goto	u2720
  6890  07FA                     u2721:	
  6891  07FA  2FFE               	goto	l3934
  6892  07FB                     u2720:	
  6893  07FB                     l3930:	
  6894                           
  6895                           ;games.c: 606:         return (cursor-0x30);
  6896  07FB  0820               	movf	get_cursor_index@cursor,w
  6897  07FC  3ED0               	addlw	208
  6898  07FD  2FFF               	goto	l476
  6899  07FE                     l3934:	
  6900                           
  6901                           ;games.c: 608:     return cursor;
  6902  07FE  0820               	movf	get_cursor_index@cursor,w
  6903  07FF                     l476:	
  6904  07FF  0008               	return
  6905  0800                     __end_of_get_cursor_index:	
  6906                           
  6907                           	psect	text25
  6908  0A94                     __ptext25:	
  6909 ;; *************** function _display_concentration_scoreboard *****************
  6910 ;; Defined at:
  6911 ;;		line 546 in file "games.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;		None
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6925 ;;      Params:         0       0       0       0       0
  6926 ;;      Locals:         0       0       0       0       0
  6927 ;;      Temps:          0       2       0       0       0
  6928 ;;      Totals:         0       2       0       0       0
  6929 ;;Total ram usage:        2 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; Hardware stack levels required when called:    4
  6932 ;; This function calls:
  6933 ;;		___awdiv
  6934 ;;		___awmod
  6935 ;;		_lcd_goto
  6936 ;;		_lcd_putch
  6937 ;;		_lcd_puts
  6938 ;; This function is called by:
  6939 ;;		_concentration_title_screen
  6940 ;;		_check_for_match
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           
  6945                           ;psect for function _display_concentration_scoreboard
  6946  0A94                     _display_concentration_scoreboard:	
  6947  0A94                     l4138:	
  6948                           ;incstack = 0
  6949                           ; Regs used in _display_concentration_scoreboard: [wreg-fsr0h+status,2+status,0+btemp+1+
      +                          pclath+cstack]
  6950                           
  6951                           
  6952                           ;games.c: 547:     lcd_puts("     Score:", scoreboard);
  6953  0A94  3074               	movlw	low (STR_19| (0+32768))
  6954  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  6955  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  6956  0A97  00A8               	movwf	lcd_puts@string
  6957  0A98  3084               	movlw	high (STR_19| (0+32768))
  6958  0A99  00A9               	movwf	lcd_puts@string+1
  6959  0A9A  3008               	movlw	8
  6960  0A9B  00AA               	movwf	lcd_puts@port
  6961  0A9C  3000               	movlw	0
  6962  0A9D  00AB               	movwf	lcd_puts@port+1
  6963  0A9E  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  6964  0AA3                     l4140:	
  6965                           
  6966                           ;games.c: 548:     lcd_goto(0x40, scoreboard);
  6967  0AA3  3008               	movlw	8
  6968  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6969  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6970  0AA6  00A8               	movwf	lcd_goto@port
  6971  0AA7  3000               	movlw	0
  6972  0AA8  00A9               	movwf	lcd_goto@port+1
  6973  0AA9  3040               	movlw	64
  6974  0AAA  160A  118A  2311  120A  158A  	fcall	_lcd_goto
  6975  0AAF                     l4142:	
  6976                           
  6977                           ;games.c: 549:     lcd_puts(" P1: ", scoreboard);
  6978  0AAF  309B               	movlw	low (STR_34| (0+32768))
  6979  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  6980  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  6981  0AB2  00A8               	movwf	lcd_puts@string
  6982  0AB3  3084               	movlw	high (STR_34| (0+32768))
  6983  0AB4  00A9               	movwf	lcd_puts@string+1
  6984  0AB5  3008               	movlw	8
  6985  0AB6  00AA               	movwf	lcd_puts@port
  6986  0AB7  3000               	movlw	0
  6987  0AB8  00AB               	movwf	lcd_puts@port+1
  6988  0AB9  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  6989                           
  6990                           ;games.c: 550:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  6991  0ABE  3008               	movlw	8
  6992  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  6993  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  6994  0AC1  00B0               	movwf	lcd_putch@port
  6995  0AC2  3000               	movlw	0
  6996  0AC3  00B1               	movwf	lcd_putch@port+1
  6997  0AC4  300A               	movlw	10
  6998  0AC5  00A7               	movwf	___awdiv@divisor
  6999  0AC6  3000               	movlw	0
  7000  0AC7  00A8               	movwf	___awdiv@divisor+1
  7001  0AC8  0864               	movf	_p1_score,w
  7002  0AC9  00B4               	movwf	??_display_concentration_scoreboard
  7003  0ACA  01B5               	clrf	??_display_concentration_scoreboard+1
  7004  0ACB  0834               	movf	??_display_concentration_scoreboard,w
  7005  0ACC  00A2               	movwf	___awmod@dividend
  7006  0ACD  0835               	movf	??_display_concentration_scoreboard+1,w
  7007  0ACE  00A3               	movwf	___awmod@dividend+1
  7008  0ACF  3064               	movlw	100
  7009  0AD0  00A0               	movwf	___awmod@divisor
  7010  0AD1  3000               	movlw	0
  7011  0AD2  00A1               	movwf	___awmod@divisor+1
  7012  0AD3  120A  158A  2002  120A  158A  	fcall	___awmod
  7013  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  7014  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  7015  0ADA  0821               	movf	?___awmod+1,w
  7016  0ADB  00AA               	movwf	___awdiv@dividend+1
  7017  0ADC  0820               	movf	?___awmod,w
  7018  0ADD  00A9               	movwf	___awdiv@dividend
  7019  0ADE  160A  118A  26B3  120A  158A  	fcall	___awdiv
  7020  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  7021  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  7022  0AE5  0827               	movf	?___awdiv,w
  7023  0AE6  3E30               	addlw	48
  7024  0AE7  160A  118A  22A0  120A  158A  	fcall	_lcd_putch
  7025                           
  7026                           ;games.c: 551:     lcd_putch((p1_score%10)+0x30, scoreboard);
  7027  0AEC  3008               	movlw	8
  7028  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  7029  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  7030  0AEF  00B0               	movwf	lcd_putch@port
  7031  0AF0  3000               	movlw	0
  7032  0AF1  00B1               	movwf	lcd_putch@port+1
  7033  0AF2  300A               	movlw	10
  7034  0AF3  00A0               	movwf	___awmod@divisor
  7035  0AF4  3000               	movlw	0
  7036  0AF5  00A1               	movwf	___awmod@divisor+1
  7037  0AF6  0864               	movf	_p1_score,w
  7038  0AF7  00B4               	movwf	??_display_concentration_scoreboard
  7039  0AF8  01B5               	clrf	??_display_concentration_scoreboard+1
  7040  0AF9  0834               	movf	??_display_concentration_scoreboard,w
  7041  0AFA  00A2               	movwf	___awmod@dividend
  7042  0AFB  0835               	movf	??_display_concentration_scoreboard+1,w
  7043  0AFC  00A3               	movwf	___awmod@dividend+1
  7044  0AFD  120A  158A  2002  120A  158A  	fcall	___awmod
  7045  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  7046  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  7047  0B04  0820               	movf	?___awmod,w
  7048  0B05  3E30               	addlw	48
  7049  0B06  160A  118A  22A0  120A  158A  	fcall	_lcd_putch
  7050  0B0B                     l4144:	
  7051                           
  7052                           ;games.c: 552:     lcd_puts("  P2: ", scoreboard);
  7053  0B0B  3094               	movlw	low (STR_35| (0+32768))
  7054  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  7055  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  7056  0B0E  00A8               	movwf	lcd_puts@string
  7057  0B0F  3084               	movlw	high (STR_35| (0+32768))
  7058  0B10  00A9               	movwf	lcd_puts@string+1
  7059  0B11  3008               	movlw	8
  7060  0B12  00AA               	movwf	lcd_puts@port
  7061  0B13  3000               	movlw	0
  7062  0B14  00AB               	movwf	lcd_puts@port+1
  7063  0B15  160A  118A  23D4  120A  158A  	fcall	_lcd_puts
  7064  0B1A                     l4146:	
  7065                           
  7066                           ;games.c: 553:     lcd_putch(((p2_score%100)/10)+0x30, scoreboard);
  7067  0B1A  3008               	movlw	8
  7068  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7069  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  7070  0B1D  00B0               	movwf	lcd_putch@port
  7071  0B1E  3000               	movlw	0
  7072  0B1F  00B1               	movwf	lcd_putch@port+1
  7073  0B20  300A               	movlw	10
  7074  0B21  00A7               	movwf	___awdiv@divisor
  7075  0B22  3000               	movlw	0
  7076  0B23  00A8               	movwf	___awdiv@divisor+1
  7077  0B24  0863               	movf	_p2_score,w
  7078  0B25  00B4               	movwf	??_display_concentration_scoreboard
  7079  0B26  01B5               	clrf	??_display_concentration_scoreboard+1
  7080  0B27  0834               	movf	??_display_concentration_scoreboard,w
  7081  0B28  00A2               	movwf	___awmod@dividend
  7082  0B29  0835               	movf	??_display_concentration_scoreboard+1,w
  7083  0B2A  00A3               	movwf	___awmod@dividend+1
  7084  0B2B  3064               	movlw	100
  7085  0B2C  00A0               	movwf	___awmod@divisor
  7086  0B2D  3000               	movlw	0
  7087  0B2E  00A1               	movwf	___awmod@divisor+1
  7088  0B2F  120A  158A  2002  120A  158A  	fcall	___awmod
  7089  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7090  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7091  0B36  0821               	movf	?___awmod+1,w
  7092  0B37  00AA               	movwf	___awdiv@dividend+1
  7093  0B38  0820               	movf	?___awmod,w
  7094  0B39  00A9               	movwf	___awdiv@dividend
  7095  0B3A  160A  118A  26B3  120A  158A  	fcall	___awdiv
  7096  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  7097  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  7098  0B41  0827               	movf	?___awdiv,w
  7099  0B42  3E30               	addlw	48
  7100  0B43  160A  118A  22A0  120A  158A  	fcall	_lcd_putch
  7101  0B48                     l4148:	
  7102                           
  7103                           ;games.c: 554:     lcd_putch((p2_score%10)+0x30, scoreboard);
  7104  0B48  3008               	movlw	8
  7105  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  7106  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  7107  0B4B  00B0               	movwf	lcd_putch@port
  7108  0B4C  3000               	movlw	0
  7109  0B4D  00B1               	movwf	lcd_putch@port+1
  7110  0B4E  300A               	movlw	10
  7111  0B4F  00A0               	movwf	___awmod@divisor
  7112  0B50  3000               	movlw	0
  7113  0B51  00A1               	movwf	___awmod@divisor+1
  7114  0B52  0863               	movf	_p2_score,w
  7115  0B53  00B4               	movwf	??_display_concentration_scoreboard
  7116  0B54  01B5               	clrf	??_display_concentration_scoreboard+1
  7117  0B55  0834               	movf	??_display_concentration_scoreboard,w
  7118  0B56  00A2               	movwf	___awmod@dividend
  7119  0B57  0835               	movf	??_display_concentration_scoreboard+1,w
  7120  0B58  00A3               	movwf	___awmod@dividend+1
  7121  0B59  120A  158A  2002  120A  158A  	fcall	___awmod
  7122  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  7123  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  7124  0B60  0820               	movf	?___awmod,w
  7125  0B61  3E30               	addlw	48
  7126  0B62  160A  118A  22A0  120A  158A  	fcall	_lcd_putch
  7127  0B67                     l442:	
  7128  0B67  0008               	return
  7129  0B68                     __end_of_display_concentration_scoreboard:	
  7130                           
  7131                           	psect	text26
  7132  16B3                     __ptext26:	
  7133 ;; *************** function ___awdiv *****************
  7134 ;; Defined at:
  7135 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  divisor         2    7[BANK0 ] int 
  7138 ;;  dividend        2    9[BANK0 ] int 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  quotient        2   14[BANK0 ] int 
  7141 ;;  sign            1   13[BANK0 ] unsigned char 
  7142 ;;  counter         1   12[BANK0 ] unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  2    7[BANK0 ] int 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7152 ;;      Params:         0       4       0       0       0
  7153 ;;      Locals:         0       4       0       0       0
  7154 ;;      Temps:          0       1       0       0       0
  7155 ;;      Totals:         0       9       0       0       0
  7156 ;;Total ram usage:        9 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_simon_says_check_input
  7163 ;;		_play_pattern
  7164 ;;		_generate_pattern
  7165 ;;		_display_simon_says_scoreboard
  7166 ;;		_display_concentration_scoreboard
  7167 ;;		_randomize_gameboard
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           
  7172                           ;psect for function ___awdiv
  7173  16B3                     ___awdiv:	
  7174  16B3                     l3938:	
  7175                           ;incstack = 0
  7176                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7177                           
  7178  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  7179  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  7180  16B5  01AD               	clrf	___awdiv@sign
  7181  16B6                     l3940:	
  7182  16B6  1FA8               	btfss	___awdiv@divisor+1,7
  7183  16B7  2EB9               	goto	u2731
  7184  16B8  2EBA               	goto	u2730
  7185  16B9                     u2731:	
  7186  16B9  2EC1               	goto	l3946
  7187  16BA                     u2730:	
  7188  16BA                     l3942:	
  7189  16BA  09A7               	comf	___awdiv@divisor,f
  7190  16BB  09A8               	comf	___awdiv@divisor+1,f
  7191  16BC  0AA7               	incf	___awdiv@divisor,f
  7192  16BD  1903               	skipnz
  7193  16BE  0AA8               	incf	___awdiv@divisor+1,f
  7194  16BF                     l3944:	
  7195  16BF  01AD               	clrf	___awdiv@sign
  7196  16C0  0AAD               	incf	___awdiv@sign,f
  7197  16C1                     l3946:	
  7198  16C1  1FAA               	btfss	___awdiv@dividend+1,7
  7199  16C2  2EC4               	goto	u2741
  7200  16C3  2EC5               	goto	u2740
  7201  16C4                     u2741:	
  7202  16C4  2ECE               	goto	l3952
  7203  16C5                     u2740:	
  7204  16C5                     l3948:	
  7205  16C5  09A9               	comf	___awdiv@dividend,f
  7206  16C6  09AA               	comf	___awdiv@dividend+1,f
  7207  16C7  0AA9               	incf	___awdiv@dividend,f
  7208  16C8  1903               	skipnz
  7209  16C9  0AAA               	incf	___awdiv@dividend+1,f
  7210  16CA                     l3950:	
  7211  16CA  3001               	movlw	1
  7212  16CB  00AB               	movwf	??___awdiv
  7213  16CC  082B               	movf	??___awdiv,w
  7214  16CD  06AD               	xorwf	___awdiv@sign,f
  7215  16CE                     l3952:	
  7216  16CE  01AE               	clrf	___awdiv@quotient
  7217  16CF  01AF               	clrf	___awdiv@quotient+1
  7218  16D0                     l3954:	
  7219  16D0  0827               	movf	___awdiv@divisor,w
  7220  16D1  0428               	iorwf	___awdiv@divisor+1,w
  7221  16D2  1903               	btfsc	3,2
  7222  16D3  2ED5               	goto	u2751
  7223  16D4  2ED6               	goto	u2750
  7224  16D5                     u2751:	
  7225  16D5  2F0D               	goto	l3974
  7226  16D6                     u2750:	
  7227  16D6                     l3956:	
  7228  16D6  01AC               	clrf	___awdiv@counter
  7229  16D7  0AAC               	incf	___awdiv@counter,f
  7230  16D8  2EE4               	goto	l3962
  7231  16D9                     l3958:	
  7232  16D9  3001               	movlw	1
  7233  16DA                     u2765:	
  7234  16DA  1003               	clrc
  7235  16DB  0DA7               	rlf	___awdiv@divisor,f
  7236  16DC  0DA8               	rlf	___awdiv@divisor+1,f
  7237  16DD  3EFF               	addlw	-1
  7238  16DE  1D03               	skipz
  7239  16DF  2EDA               	goto	u2765
  7240  16E0                     l3960:	
  7241  16E0  3001               	movlw	1
  7242  16E1  00AB               	movwf	??___awdiv
  7243  16E2  082B               	movf	??___awdiv,w
  7244  16E3  07AC               	addwf	___awdiv@counter,f
  7245  16E4                     l3962:	
  7246  16E4  1FA8               	btfss	___awdiv@divisor+1,7
  7247  16E5  2EE7               	goto	u2771
  7248  16E6  2EE8               	goto	u2770
  7249  16E7                     u2771:	
  7250  16E7  2ED9               	goto	l3958
  7251  16E8                     u2770:	
  7252  16E8                     l3964:	
  7253  16E8  3001               	movlw	1
  7254  16E9                     u2785:	
  7255  16E9  1003               	clrc
  7256  16EA  0DAE               	rlf	___awdiv@quotient,f
  7257  16EB  0DAF               	rlf	___awdiv@quotient+1,f
  7258  16EC  3EFF               	addlw	-1
  7259  16ED  1D03               	skipz
  7260  16EE  2EE9               	goto	u2785
  7261  16EF  0828               	movf	___awdiv@divisor+1,w
  7262  16F0  022A               	subwf	___awdiv@dividend+1,w
  7263  16F1  1D03               	skipz
  7264  16F2  2EF5               	goto	u2795
  7265  16F3  0827               	movf	___awdiv@divisor,w
  7266  16F4  0229               	subwf	___awdiv@dividend,w
  7267  16F5                     u2795:	
  7268  16F5  1C03               	skipc
  7269  16F6  2EF8               	goto	u2791
  7270  16F7  2EF9               	goto	u2790
  7271  16F8                     u2791:	
  7272  16F8  2F00               	goto	l3970
  7273  16F9                     u2790:	
  7274  16F9                     l3966:	
  7275  16F9  0827               	movf	___awdiv@divisor,w
  7276  16FA  02A9               	subwf	___awdiv@dividend,f
  7277  16FB  0828               	movf	___awdiv@divisor+1,w
  7278  16FC  1C03               	skipc
  7279  16FD  03AA               	decf	___awdiv@dividend+1,f
  7280  16FE  02AA               	subwf	___awdiv@dividend+1,f
  7281  16FF                     l3968:	
  7282  16FF  142E               	bsf	___awdiv@quotient,0
  7283  1700                     l3970:	
  7284  1700  3001               	movlw	1
  7285  1701                     u2805:	
  7286  1701  1003               	clrc
  7287  1702  0CA8               	rrf	___awdiv@divisor+1,f
  7288  1703  0CA7               	rrf	___awdiv@divisor,f
  7289  1704  3EFF               	addlw	-1
  7290  1705  1D03               	skipz
  7291  1706  2F01               	goto	u2805
  7292  1707                     l3972:	
  7293  1707  3001               	movlw	1
  7294  1708  02AC               	subwf	___awdiv@counter,f
  7295  1709  1D03               	btfss	3,2
  7296  170A  2F0C               	goto	u2811
  7297  170B  2F0D               	goto	u2810
  7298  170C                     u2811:	
  7299  170C  2EE8               	goto	l3964
  7300  170D                     u2810:	
  7301  170D                     l3974:	
  7302  170D  082D               	movf	___awdiv@sign,w
  7303  170E  1903               	btfsc	3,2
  7304  170F  2F11               	goto	u2821
  7305  1710  2F12               	goto	u2820
  7306  1711                     u2821:	
  7307  1711  2F17               	goto	l3978
  7308  1712                     u2820:	
  7309  1712                     l3976:	
  7310  1712  09AE               	comf	___awdiv@quotient,f
  7311  1713  09AF               	comf	___awdiv@quotient+1,f
  7312  1714  0AAE               	incf	___awdiv@quotient,f
  7313  1715  1903               	skipnz
  7314  1716  0AAF               	incf	___awdiv@quotient+1,f
  7315  1717                     l3978:	
  7316  1717  082F               	movf	___awdiv@quotient+1,w
  7317  1718  00A8               	movwf	?___awdiv+1
  7318  1719  082E               	movf	___awdiv@quotient,w
  7319  171A  00A7               	movwf	?___awdiv
  7320  171B                     l833:	
  7321  171B  0008               	return
  7322  171C                     __end_of___awdiv:	
  7323                           
  7324                           	psect	text27
  7325  143F                     __ptext27:	
  7326 ;; *************** function _display_concentration_gameboard *****************
  7327 ;; Defined at:
  7328 ;;		line 557 in file "games.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  i               1   21[BANK0 ] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7342 ;;      Params:         0       0       0       0       0
  7343 ;;      Locals:         0       1       0       0       0
  7344 ;;      Temps:          0       1       0       0       0
  7345 ;;      Totals:         0       2       0       0       0
  7346 ;;Total ram usage:        2 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    4
  7349 ;; This function calls:
  7350 ;;		_lcd_clear
  7351 ;;		_lcd_goto
  7352 ;;		_lcd_putch
  7353 ;; This function is called by:
  7354 ;;		_concentration_title_screen
  7355 ;;		_check_for_match
  7356 ;;		_concentration_game_loop
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           
  7361                           ;psect for function _display_concentration_gameboard
  7362  143F                     _display_concentration_gameboard:	
  7363  143F                     l4150:	
  7364                           ;incstack = 0
  7365                           ; Regs used in _display_concentration_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  7366                           
  7367                           
  7368                           ;games.c: 558:     lcd_clear(gameboard);
  7369  143F  3005               	movlw	5
  7370  1440  1283               	bcf	3,5	;RP0=0, select bank0
  7371  1441  1303               	bcf	3,6	;RP1=0, select bank0
  7372  1442  00A8               	movwf	lcd_clear@port
  7373  1443  3000               	movlw	0
  7374  1444  00A9               	movwf	lcd_clear@port+1
  7375  1445  160A  118A  22DD  160A  118A  	fcall	_lcd_clear
  7376  144A                     l4152:	
  7377                           
  7378                           ;games.c: 559:     char i;;games.c: 560:     for(i=0;i<32;i++) {
  7379  144A  1283               	bcf	3,5	;RP0=0, select bank0
  7380  144B  1303               	bcf	3,6	;RP1=0, select bank0
  7381  144C  01B5               	clrf	display_concentration_gameboard@i
  7382  144D                     l4158:	
  7383                           
  7384                           ;games.c: 561:         if(i == 16) {
  7385  144D  3010               	movlw	16
  7386  144E  0635               	xorwf	display_concentration_gameboard@i,w
  7387  144F  1D03               	btfss	3,2
  7388  1450  2C52               	goto	u3091
  7389  1451  2C53               	goto	u3090
  7390  1452                     u3091:	
  7391  1452  2C5D               	goto	l447
  7392  1453                     u3090:	
  7393  1453                     l4160:	
  7394                           
  7395                           ;games.c: 562:             lcd_goto(0x40, gameboard);
  7396  1453  3005               	movlw	5
  7397  1454  00A8               	movwf	lcd_goto@port
  7398  1455  3000               	movlw	0
  7399  1456  00A9               	movwf	lcd_goto@port+1
  7400  1457  3040               	movlw	64
  7401  1458  160A  118A  2311  160A  118A  	fcall	_lcd_goto
  7402  145D                     l447:	
  7403                           ;games.c: 563:         }
  7404                           
  7405                           
  7406                           ;games.c: 564:         lcd_putch(visible[i], gameboard);
  7407  145D  3005               	movlw	5
  7408  145E  1283               	bcf	3,5	;RP0=0, select bank0
  7409  145F  1303               	bcf	3,6	;RP1=0, select bank0
  7410  1460  00B0               	movwf	lcd_putch@port
  7411  1461  3000               	movlw	0
  7412  1462  00B1               	movwf	lcd_putch@port+1
  7413  1463  0835               	movf	display_concentration_gameboard@i,w
  7414  1464  3EA0               	addlw	(low (_visible| 0))& (0+255)
  7415  1465  0084               	movwf	4
  7416  1466  1383               	bcf	3,7	;select IRP bank1
  7417  1467  0800               	movf	0,w
  7418  1468  160A  118A  22A0  160A  118A  	fcall	_lcd_putch
  7419  146D                     l4162:	
  7420                           
  7421                           ;games.c: 565:     }
  7422  146D  3001               	movlw	1
  7423  146E  1283               	bcf	3,5	;RP0=0, select bank0
  7424  146F  1303               	bcf	3,6	;RP1=0, select bank0
  7425  1470  00B4               	movwf	??_display_concentration_gameboard
  7426  1471  0834               	movf	??_display_concentration_gameboard,w
  7427  1472  07B5               	addwf	display_concentration_gameboard@i,f
  7428  1473                     l4164:	
  7429  1473  3020               	movlw	32
  7430  1474  0235               	subwf	display_concentration_gameboard@i,w
  7431  1475  1C03               	skipc
  7432  1476  2C78               	goto	u3101
  7433  1477  2C79               	goto	u3100
  7434  1478                     u3101:	
  7435  1478  2C4D               	goto	l4158
  7436  1479                     u3100:	
  7437  1479                     l4166:	
  7438                           
  7439                           ;games.c: 566:     lcd_goto(cursor_pos, gameboard);
  7440  1479  3005               	movlw	5
  7441  147A  00A8               	movwf	lcd_goto@port
  7442  147B  3000               	movlw	0
  7443  147C  00A9               	movwf	lcd_goto@port+1
  7444  147D  0869               	movf	_cursor_pos,w
  7445  147E  160A  118A  2311  160A  118A  	fcall	_lcd_goto
  7446  1483                     l448:	
  7447  1483  0008               	return
  7448  1484                     __end_of_display_concentration_gameboard:	
  7449                           
  7450                           	psect	text28
  7451  12A0                     __ptext28:	
  7452 ;; *************** function _lcd_putch *****************
  7453 ;; Defined at:
  7454 ;;		line 136 in file "lcd4bits.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  character       1    wreg     unsigned char 
  7457 ;;  port            2   16[BANK0 ] PTR unsigned char 
  7458 ;;		 -> PORTD(1), PORTA(1), 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  character       1   19[BANK0 ] unsigned char 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7470 ;;      Params:         0       2       0       0       0
  7471 ;;      Locals:         0       1       0       0       0
  7472 ;;      Temps:          0       1       0       0       0
  7473 ;;      Totals:         0       4       0       0       0
  7474 ;;Total ram usage:        4 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; Hardware stack levels required when called:    3
  7477 ;; This function calls:
  7478 ;;		_lcd_write
  7479 ;; This function is called by:
  7480 ;;		_main
  7481 ;;		_countdown
  7482 ;;		_display_simon_says_scoreboard
  7483 ;;		_display_concentration_scoreboard
  7484 ;;		_display_concentration_gameboard
  7485 ;;		_update_cursor
  7486 ;;		_toggle_cursor
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _lcd_putch
  7492  12A0                     _lcd_putch:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7496                           ;lcd_putch@character stored from wreg
  7497  12A0  1283               	bcf	3,5	;RP0=0, select bank0
  7498  12A1  1303               	bcf	3,6	;RP1=0, select bank0
  7499  12A2  00B3               	movwf	lcd_putch@character
  7500  12A3                     l3912:	
  7501                           
  7502                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  7503  12A3  0833               	movf	lcd_putch@character,w
  7504  12A4  00B2               	movwf	??_lcd_putch
  7505  12A5  0832               	movf	??_lcd_putch,w
  7506  12A6  00A2               	movwf	lcd_write@CmdChar
  7507  12A7  0830               	movf	lcd_putch@port,w
  7508  12A8  00A3               	movwf	lcd_write@port
  7509  12A9  0831               	movf	lcd_putch@port+1,w
  7510  12AA  00A4               	movwf	lcd_write@port+1
  7511  12AB  3010               	movlw	16
  7512  12AC  160A  118A  255E  160A  118A  	fcall	_lcd_write
  7513  12B1                     l38:	
  7514  12B1  0008               	return
  7515  12B2                     __end_of_lcd_putch:	
  7516                           
  7517                           	psect	text29
  7518  1510                     __ptext29:	
  7519 ;; *************** function _concentration_game_end *****************
  7520 ;; Defined at:
  7521 ;;		line 517 in file "games.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7535 ;;      Params:         0       0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0
  7538 ;;      Totals:         0       0       0       0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:    5
  7542 ;; This function calls:
  7543 ;;		_DelayMs
  7544 ;;		_end_screen
  7545 ;; This function is called by:
  7546 ;;		_main
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function _concentration_game_end
  7552  1510                     _concentration_game_end:	
  7553  1510                     l4748:	
  7554                           ;incstack = 0
  7555                           ; Regs used in _concentration_game_end: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  7556                           
  7557                           
  7558                           ;games.c: 518:     DelayMs(1000);
  7559  1510  30E8               	movlw	232
  7560  1511  1283               	bcf	3,5	;RP0=0, select bank0
  7561  1512  1303               	bcf	3,6	;RP1=0, select bank0
  7562  1513  00A0               	movwf	DelayMs@millis
  7563  1514  3003               	movlw	3
  7564  1515  00A1               	movwf	DelayMs@millis+1
  7565  1516  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  7566  151B                     l4750:	
  7567                           
  7568                           ;games.c: 519:     if(p1_score>p2_score) {
  7569  151B  1283               	bcf	3,5	;RP0=0, select bank0
  7570  151C  1303               	bcf	3,6	;RP1=0, select bank0
  7571  151D  0864               	movf	_p1_score,w
  7572  151E  0263               	subwf	_p2_score,w
  7573  151F  1803               	skipnc
  7574  1520  2D22               	goto	u3731
  7575  1521  2D23               	goto	u3730
  7576  1522                     u3731:	
  7577  1522  2D31               	goto	l4754
  7578  1523                     u3730:	
  7579  1523                     l4752:	
  7580                           
  7581                           ;games.c: 520:         end_screen("    WINNER!!","    PLAYER 1");
  7582  1523  3026               	movlw	low (STR_24| (0+32768))
  7583  1524  00AD               	movwf	end_screen@first_row
  7584  1525  3084               	movlw	high (STR_24| (0+32768))
  7585  1526  00AE               	movwf	end_screen@first_row+1
  7586  1527  3040               	movlw	low (STR_25| (0+32768))
  7587  1528  00AF               	movwf	end_screen@second_row
  7588  1529  3084               	movlw	high (STR_25| (0+32768))
  7589  152A  00B0               	movwf	end_screen@second_row+1
  7590  152B  120A  118A  2055  160A  118A  	fcall	_end_screen
  7591                           
  7592                           ;games.c: 521:     } else if(p1_score<p2_score) {
  7593  1530  2D52               	goto	l4760
  7594  1531                     l4754:	
  7595  1531  0863               	movf	_p2_score,w
  7596  1532  0264               	subwf	_p1_score,w
  7597  1533  1803               	skipnc
  7598  1534  2D36               	goto	u3741
  7599  1535  2D37               	goto	u3740
  7600  1536                     u3741:	
  7601  1536  2D45               	goto	l4758
  7602  1537                     u3740:	
  7603  1537                     l4756:	
  7604                           
  7605                           ;games.c: 522:         end_screen("    WINNER!!","    PLAYER 2");
  7606  1537  3026               	movlw	low (STR_24| (0+32768))
  7607  1538  00AD               	movwf	end_screen@first_row
  7608  1539  3084               	movlw	high (STR_24| (0+32768))
  7609  153A  00AE               	movwf	end_screen@first_row+1
  7610  153B  304D               	movlw	low (STR_27| (0+32768))
  7611  153C  00AF               	movwf	end_screen@second_row
  7612  153D  3084               	movlw	high (STR_27| (0+32768))
  7613  153E  00B0               	movwf	end_screen@second_row+1
  7614  153F  120A  118A  2055  160A  118A  	fcall	_end_screen
  7615                           
  7616                           ;games.c: 523:     } else {
  7617  1544  2D52               	goto	l4760
  7618  1545                     l4758:	
  7619                           
  7620                           ;games.c: 524:         end_screen("   NO WINNER!","      TIED");
  7621  1545  30D2               	movlw	low (STR_28| (0+32768))
  7622  1546  00AD               	movwf	end_screen@first_row
  7623  1547  3083               	movlw	high (STR_28| (0+32768))
  7624  1548  00AE               	movwf	end_screen@first_row+1
  7625  1549  3080               	movlw	low (STR_29| (0+32768))
  7626  154A  00AF               	movwf	end_screen@second_row
  7627  154B  3084               	movlw	high (STR_29| (0+32768))
  7628  154C  00B0               	movwf	end_screen@second_row+1
  7629  154D  120A  118A  2055  160A  118A  	fcall	_end_screen
  7630  1552                     l4760:	
  7631                           
  7632                           ;games.c: 526:     DelayMs(1000);
  7633  1552  30E8               	movlw	232
  7634  1553  1283               	bcf	3,5	;RP0=0, select bank0
  7635  1554  1303               	bcf	3,6	;RP1=0, select bank0
  7636  1555  00A0               	movwf	DelayMs@millis
  7637  1556  3003               	movlw	3
  7638  1557  00A1               	movwf	DelayMs@millis+1
  7639  1558  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  7640  155D                     l430:	
  7641  155D  0008               	return
  7642  155E                     __end_of_concentration_game_end:	
  7643                           
  7644                           	psect	text30
  7645  0055                     __ptext30:	
  7646 ;; *************** function _end_screen *****************
  7647 ;; Defined at:
  7648 ;;		line 461 in file "games.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  first_row       2   13[BANK0 ] PTR const unsigned char 
  7651 ;;		 -> STR_28(14), STR_26(13), STR_24(13), STR_14(14), 
  7652 ;;		 -> STR_12(14), STR_10(14), STR_8(14), STR_6(14), 
  7653 ;;		 -> STR_4(14), 
  7654 ;;  second_row      2   15[BANK0 ] PTR unsigned char 
  7655 ;;		 -> STR_29(11), STR_27(13), STR_25(13), STR_15(14), 
  7656 ;;		 -> STR_13(16), STR_11(14), STR_9(13), STR_7(17), 
  7657 ;;		 -> STR_5(14), 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  colors          6   20[BANK0 ] unsigned char [6]
  7660 ;;  color_index     1   27[BANK0 ] unsigned char 
  7661 ;;  i               1   26[BANK0 ] unsigned char 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7671 ;;      Params:         0       4       0       0       0
  7672 ;;      Locals:         0       8       0       0       0
  7673 ;;      Temps:          0       3       0       0       0
  7674 ;;      Totals:         0      15       0       0       0
  7675 ;;Total ram usage:       15 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    4
  7678 ;; This function calls:
  7679 ;;		_DelayMs
  7680 ;;		___awmod
  7681 ;;		_lcd_clear
  7682 ;;		_lcd_goto
  7683 ;;		_lcd_puts
  7684 ;;		_play_tone
  7685 ;;		_turn_on_led
  7686 ;; This function is called by:
  7687 ;;		_simon_says_game_end
  7688 ;;		_concentration_game_end
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           
  7693                           ;psect for function _end_screen
  7694  0055                     _end_screen:	
  7695  0055                     l4174:	
  7696                           ;incstack = 0
  7697                           ; Regs used in _end_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7698                           
  7699                           
  7700                           ;games.c: 462:     joystick_pressed = 1;
  7701  0055  1283               	bcf	3,5	;RP0=0, select bank0
  7702  0056  1303               	bcf	3,6	;RP1=0, select bank0
  7703  0057  01E1               	clrf	_joystick_pressed
  7704  0058  0AE1               	incf	_joystick_pressed,f
  7705  0059                     l4176:	
  7706                           
  7707                           ;games.c: 463:     char colors[] = {0,3,1,4,2,5};
  7708  0059  3034               	movlw	end_screen@colors& (0+255)
  7709  005A  0084               	movwf	4
  7710  005B  1683               	bsf	3,5	;RP0=1, select bank1
  7711  005C  1303               	bcf	3,6	;RP1=0, select bank1
  7712  005D  0859               	movf	end_screen@F1373^(0+128),w
  7713  005E  1383               	bcf	3,7	;select IRP bank0
  7714  005F  0080               	movwf	0
  7715  0060  0A84               	incf	4,f
  7716  0061  085A               	movf	(end_screen@F1373^(0+128)+1),w
  7717  0062  0080               	movwf	0
  7718  0063  0A84               	incf	4,f
  7719  0064  085B               	movf	(end_screen@F1373^(0+128)+2),w
  7720  0065  0080               	movwf	0
  7721  0066  0A84               	incf	4,f
  7722  0067  085C               	movf	(end_screen@F1373^(0+128)+3),w
  7723  0068  0080               	movwf	0
  7724  0069  0A84               	incf	4,f
  7725  006A  085D               	movf	(end_screen@F1373^(0+128)+4),w
  7726  006B  0080               	movwf	0
  7727  006C  0A84               	incf	4,f
  7728  006D  085E               	movf	(end_screen@F1373^(0+128)+5),w
  7729  006E  0080               	movwf	0
  7730  006F                     l4178:	
  7731                           
  7732                           ;games.c: 464:     char color_index = 0;
  7733  006F  1283               	bcf	3,5	;RP0=0, select bank0
  7734  0070  1303               	bcf	3,6	;RP1=0, select bank0
  7735  0071  01BB               	clrf	end_screen@color_index
  7736  0072                     l4180:	
  7737                           
  7738                           ;games.c: 465:     char i;;games.c: 466:     for(i=0;i<3;i++) {
  7739  0072  01BA               	clrf	end_screen@i
  7740  0073                     l4186:	
  7741                           
  7742                           ;games.c: 467:         turn_on_led(colors[color_index]);
  7743  0073  083B               	movf	end_screen@color_index,w
  7744  0074  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7745  0075  0084               	movwf	4
  7746  0076  1383               	bcf	3,7	;select IRP bank0
  7747  0077  0800               	movf	0,w
  7748  0078  160A  118A  2404  120A  118A  	fcall	_turn_on_led
  7749  007D                     l4188:	
  7750                           
  7751                           ;games.c: 468:         color_index++;
  7752  007D  3001               	movlw	1
  7753  007E  1283               	bcf	3,5	;RP0=0, select bank0
  7754  007F  1303               	bcf	3,6	;RP1=0, select bank0
  7755  0080  00B1               	movwf	??_end_screen
  7756  0081  0831               	movf	??_end_screen,w
  7757  0082  07BB               	addwf	end_screen@color_index,f
  7758  0083                     l4190:	
  7759                           
  7760                           ;games.c: 469:         color_index %= 6;
  7761  0083  3006               	movlw	6
  7762  0084  00A0               	movwf	___awmod@divisor
  7763  0085  3000               	movlw	0
  7764  0086  00A1               	movwf	___awmod@divisor+1
  7765  0087  083B               	movf	end_screen@color_index,w
  7766  0088  00B1               	movwf	??_end_screen
  7767  0089  01B2               	clrf	??_end_screen+1
  7768  008A  0831               	movf	??_end_screen,w
  7769  008B  00A2               	movwf	___awmod@dividend
  7770  008C  0832               	movf	??_end_screen+1,w
  7771  008D  00A3               	movwf	___awmod@dividend+1
  7772  008E  120A  158A  2002  120A  118A  	fcall	___awmod
  7773  0093  1283               	bcf	3,5	;RP0=0, select bank0
  7774  0094  1303               	bcf	3,6	;RP1=0, select bank0
  7775  0095  0820               	movf	?___awmod,w
  7776  0096  00B3               	movwf	??_end_screen+2
  7777  0097  0833               	movf	??_end_screen+2,w
  7778  0098  00BB               	movwf	end_screen@color_index
  7779  0099                     l4192:	
  7780                           
  7781                           ;games.c: 470:         play_tone(2009, 30);
  7782  0099  30D9               	movlw	217
  7783  009A  00A0               	movwf	play_tone@tone_period
  7784  009B  3007               	movlw	7
  7785  009C  00A1               	movwf	play_tone@tone_period+1
  7786  009D  301E               	movlw	30
  7787  009E  00B1               	movwf	??_end_screen
  7788  009F  0831               	movf	??_end_screen,w
  7789  00A0  00A2               	movwf	play_tone@duration_8ms
  7790  00A1  160A  118A  232F  120A  118A  	fcall	_play_tone
  7791  00A6                     l4194:	
  7792                           
  7793                           ;games.c: 471:         turn_on_led(colors[color_index]);
  7794  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  7795  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  7796  00A8  083B               	movf	end_screen@color_index,w
  7797  00A9  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7798  00AA  0084               	movwf	4
  7799  00AB  1383               	bcf	3,7	;select IRP bank0
  7800  00AC  0800               	movf	0,w
  7801  00AD  160A  118A  2404  120A  118A  	fcall	_turn_on_led
  7802                           
  7803                           ;games.c: 472:         color_index++;
  7804  00B2  3001               	movlw	1
  7805  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  7806  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  7807  00B5  00B1               	movwf	??_end_screen
  7808  00B6  0831               	movf	??_end_screen,w
  7809  00B7  07BB               	addwf	end_screen@color_index,f
  7810  00B8                     l4196:	
  7811                           
  7812                           ;games.c: 473:         color_index %= 6;
  7813  00B8  3006               	movlw	6
  7814  00B9  00A0               	movwf	___awmod@divisor
  7815  00BA  3000               	movlw	0
  7816  00BB  00A1               	movwf	___awmod@divisor+1
  7817  00BC  083B               	movf	end_screen@color_index,w
  7818  00BD  00B1               	movwf	??_end_screen
  7819  00BE  01B2               	clrf	??_end_screen+1
  7820  00BF  0831               	movf	??_end_screen,w
  7821  00C0  00A2               	movwf	___awmod@dividend
  7822  00C1  0832               	movf	??_end_screen+1,w
  7823  00C2  00A3               	movwf	___awmod@dividend+1
  7824  00C3  120A  158A  2002  120A  118A  	fcall	___awmod
  7825  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  7826  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  7827  00CA  0820               	movf	?___awmod,w
  7828  00CB  00B3               	movwf	??_end_screen+2
  7829  00CC  0833               	movf	??_end_screen+2,w
  7830  00CD  00BB               	movwf	end_screen@color_index
  7831  00CE                     l4198:	
  7832                           
  7833                           ;games.c: 474:         play_tone(1896, 30);
  7834  00CE  3068               	movlw	104
  7835  00CF  00A0               	movwf	play_tone@tone_period
  7836  00D0  3007               	movlw	7
  7837  00D1  00A1               	movwf	play_tone@tone_period+1
  7838  00D2  301E               	movlw	30
  7839  00D3  00B1               	movwf	??_end_screen
  7840  00D4  0831               	movf	??_end_screen,w
  7841  00D5  00A2               	movwf	play_tone@duration_8ms
  7842  00D6  160A  118A  232F  120A  118A  	fcall	_play_tone
  7843  00DB                     l4200:	
  7844                           
  7845                           ;games.c: 475:         turn_on_led(colors[color_index]);
  7846  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  7847  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  7848  00DD  083B               	movf	end_screen@color_index,w
  7849  00DE  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7850  00DF  0084               	movwf	4
  7851  00E0  1383               	bcf	3,7	;select IRP bank0
  7852  00E1  0800               	movf	0,w
  7853  00E2  160A  118A  2404  120A  118A  	fcall	_turn_on_led
  7854  00E7                     l4202:	
  7855                           
  7856                           ;games.c: 476:         color_index++;
  7857  00E7  3001               	movlw	1
  7858  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  7859  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  7860  00EA  00B1               	movwf	??_end_screen
  7861  00EB  0831               	movf	??_end_screen,w
  7862  00EC  07BB               	addwf	end_screen@color_index,f
  7863  00ED                     l4204:	
  7864                           
  7865                           ;games.c: 477:         color_index %= 6;
  7866  00ED  3006               	movlw	6
  7867  00EE  00A0               	movwf	___awmod@divisor
  7868  00EF  3000               	movlw	0
  7869  00F0  00A1               	movwf	___awmod@divisor+1
  7870  00F1  083B               	movf	end_screen@color_index,w
  7871  00F2  00B1               	movwf	??_end_screen
  7872  00F3  01B2               	clrf	??_end_screen+1
  7873  00F4  0831               	movf	??_end_screen,w
  7874  00F5  00A2               	movwf	___awmod@dividend
  7875  00F6  0832               	movf	??_end_screen+1,w
  7876  00F7  00A3               	movwf	___awmod@dividend+1
  7877  00F8  120A  158A  2002  120A  118A  	fcall	___awmod
  7878  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  7879  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  7880  00FF  0820               	movf	?___awmod,w
  7881  0100  00B3               	movwf	??_end_screen+2
  7882  0101  0833               	movf	??_end_screen+2,w
  7883  0102  00BB               	movwf	end_screen@color_index
  7884  0103                     l4206:	
  7885                           
  7886                           ;games.c: 478:         play_tone(1594, 30);
  7887  0103  303A               	movlw	58
  7888  0104  00A0               	movwf	play_tone@tone_period
  7889  0105  3006               	movlw	6
  7890  0106  00A1               	movwf	play_tone@tone_period+1
  7891  0107  301E               	movlw	30
  7892  0108  00B1               	movwf	??_end_screen
  7893  0109  0831               	movf	??_end_screen,w
  7894  010A  00A2               	movwf	play_tone@duration_8ms
  7895  010B  160A  118A  232F  120A  118A  	fcall	_play_tone
  7896                           
  7897                           ;games.c: 479:         turn_on_led(colors[color_index]);
  7898  0110  1283               	bcf	3,5	;RP0=0, select bank0
  7899  0111  1303               	bcf	3,6	;RP1=0, select bank0
  7900  0112  083B               	movf	end_screen@color_index,w
  7901  0113  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7902  0114  0084               	movwf	4
  7903  0115  1383               	bcf	3,7	;select IRP bank0
  7904  0116  0800               	movf	0,w
  7905  0117  160A  118A  2404  120A  118A  	fcall	_turn_on_led
  7906  011C                     l4208:	
  7907                           
  7908                           ;games.c: 480:         color_index++;
  7909  011C  3001               	movlw	1
  7910  011D  1283               	bcf	3,5	;RP0=0, select bank0
  7911  011E  1303               	bcf	3,6	;RP1=0, select bank0
  7912  011F  00B1               	movwf	??_end_screen
  7913  0120  0831               	movf	??_end_screen,w
  7914  0121  07BB               	addwf	end_screen@color_index,f
  7915  0122                     l4210:	
  7916                           
  7917                           ;games.c: 481:         color_index %= 6;
  7918  0122  3006               	movlw	6
  7919  0123  00A0               	movwf	___awmod@divisor
  7920  0124  3000               	movlw	0
  7921  0125  00A1               	movwf	___awmod@divisor+1
  7922  0126  083B               	movf	end_screen@color_index,w
  7923  0127  00B1               	movwf	??_end_screen
  7924  0128  01B2               	clrf	??_end_screen+1
  7925  0129  0831               	movf	??_end_screen,w
  7926  012A  00A2               	movwf	___awmod@dividend
  7927  012B  0832               	movf	??_end_screen+1,w
  7928  012C  00A3               	movwf	___awmod@dividend+1
  7929  012D  120A  158A  2002  120A  118A  	fcall	___awmod
  7930  0132  1283               	bcf	3,5	;RP0=0, select bank0
  7931  0133  1303               	bcf	3,6	;RP1=0, select bank0
  7932  0134  0820               	movf	?___awmod,w
  7933  0135  00B3               	movwf	??_end_screen+2
  7934  0136  0833               	movf	??_end_screen+2,w
  7935  0137  00BB               	movwf	end_screen@color_index
  7936  0138                     l4212:	
  7937                           
  7938                           ;games.c: 482:         DelayMs(250);
  7939  0138  30FA               	movlw	250
  7940  0139  00A0               	movwf	DelayMs@millis
  7941  013A  3000               	movlw	0
  7942  013B  00A1               	movwf	DelayMs@millis+1
  7943  013C  160A  118A  22C4  120A  118A  	fcall	_DelayMs
  7944  0141                     l4214:	
  7945                           
  7946                           ;games.c: 483:     }
  7947  0141  3001               	movlw	1
  7948  0142  1283               	bcf	3,5	;RP0=0, select bank0
  7949  0143  1303               	bcf	3,6	;RP1=0, select bank0
  7950  0144  00B1               	movwf	??_end_screen
  7951  0145  0831               	movf	??_end_screen,w
  7952  0146  07BA               	addwf	end_screen@i,f
  7953  0147                     l4216:	
  7954  0147  3003               	movlw	3
  7955  0148  023A               	subwf	end_screen@i,w
  7956  0149  1C03               	skipc
  7957  014A  294C               	goto	u3111
  7958  014B  294D               	goto	u3110
  7959  014C                     u3111:	
  7960  014C  2873               	goto	l4186
  7961  014D                     u3110:	
  7962  014D                     l4218:	
  7963                           
  7964                           ;games.c: 484:     turn_on_led(colors[color_index]);
  7965  014D  083B               	movf	end_screen@color_index,w
  7966  014E  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7967  014F  0084               	movwf	4
  7968  0150  1383               	bcf	3,7	;select IRP bank0
  7969  0151  0800               	movf	0,w
  7970  0152  160A  118A  2404  120A  118A  	fcall	_turn_on_led
  7971  0157                     l4220:	
  7972                           
  7973                           ;games.c: 485:     color_index++;
  7974  0157  3001               	movlw	1
  7975  0158  1283               	bcf	3,5	;RP0=0, select bank0
  7976  0159  1303               	bcf	3,6	;RP1=0, select bank0
  7977  015A  00B1               	movwf	??_end_screen
  7978  015B  0831               	movf	??_end_screen,w
  7979  015C  07BB               	addwf	end_screen@color_index,f
  7980  015D                     l4222:	
  7981                           
  7982                           ;games.c: 486:     color_index %= 6;
  7983  015D  3006               	movlw	6
  7984  015E  00A0               	movwf	___awmod@divisor
  7985  015F  3000               	movlw	0
  7986  0160  00A1               	movwf	___awmod@divisor+1
  7987  0161  083B               	movf	end_screen@color_index,w
  7988  0162  00B1               	movwf	??_end_screen
  7989  0163  01B2               	clrf	??_end_screen+1
  7990  0164  0831               	movf	??_end_screen,w
  7991  0165  00A2               	movwf	___awmod@dividend
  7992  0166  0832               	movf	??_end_screen+1,w
  7993  0167  00A3               	movwf	___awmod@dividend+1
  7994  0168  120A  158A  2002  120A  118A  	fcall	___awmod
  7995  016D  1283               	bcf	3,5	;RP0=0, select bank0
  7996  016E  1303               	bcf	3,6	;RP1=0, select bank0
  7997  016F  0820               	movf	?___awmod,w
  7998  0170  00B3               	movwf	??_end_screen+2
  7999  0171  0833               	movf	??_end_screen+2,w
  8000  0172  00BB               	movwf	end_screen@color_index
  8001  0173                     l4224:	
  8002                           
  8003                           ;games.c: 487:     play_tone(2389, 60);
  8004  0173  3055               	movlw	85
  8005  0174  00A0               	movwf	play_tone@tone_period
  8006  0175  3009               	movlw	9
  8007  0176  00A1               	movwf	play_tone@tone_period+1
  8008  0177  303C               	movlw	60
  8009  0178  00B1               	movwf	??_end_screen
  8010  0179  0831               	movf	??_end_screen,w
  8011  017A  00A2               	movwf	play_tone@duration_8ms
  8012  017B  160A  118A  232F  120A  118A  	fcall	_play_tone
  8013                           
  8014                           ;games.c: 488:     while(joystick_pressed==1) {
  8015  0180  2A35               	goto	l4268
  8016  0181                     l4226:	
  8017                           
  8018                           ;games.c: 489:         lcd_clear(gameboard);
  8019  0181  3005               	movlw	5
  8020  0182  00A8               	movwf	lcd_clear@port
  8021  0183  3000               	movlw	0
  8022  0184  00A9               	movwf	lcd_clear@port+1
  8023  0185  160A  118A  22DD  120A  118A  	fcall	_lcd_clear
  8024  018A                     l4228:	
  8025                           
  8026                           ;games.c: 490:         lcd_puts(first_row,gameboard);
  8027  018A  1283               	bcf	3,5	;RP0=0, select bank0
  8028  018B  1303               	bcf	3,6	;RP1=0, select bank0
  8029  018C  082D               	movf	end_screen@first_row,w
  8030  018D  00A8               	movwf	lcd_puts@string
  8031  018E  082E               	movf	end_screen@first_row+1,w
  8032  018F  00A9               	movwf	lcd_puts@string+1
  8033  0190  3005               	movlw	5
  8034  0191  00AA               	movwf	lcd_puts@port
  8035  0192  3000               	movlw	0
  8036  0193  00AB               	movwf	lcd_puts@port+1
  8037  0194  160A  118A  23D4  120A  118A  	fcall	_lcd_puts
  8038  0199                     l4230:	
  8039                           
  8040                           ;games.c: 491:         event_enabled = 0;
  8041  0199  1283               	bcf	3,5	;RP0=0, select bank0
  8042  019A  1303               	bcf	3,6	;RP1=0, select bank0
  8043  019B  01E5               	clrf	_event_enabled
  8044  019C                     l4232:	
  8045                           
  8046                           ;games.c: 492:         event_delay_count = 120;
  8047  019C  3078               	movlw	120
  8048  019D  00B1               	movwf	??_end_screen
  8049  019E  0831               	movf	??_end_screen,w
  8050  019F  00FA               	movwf	_event_delay_count
  8051                           
  8052                           ;games.c: 493:         while(event_enabled == 0) {
  8053  01A0  29AA               	goto	l4238
  8054  01A1                     l411:	
  8055                           
  8056                           ;games.c: 494:             if((RB5 == 0)||(RB2 == 0)) {
  8057  01A1  1E86               	btfss	6,5	;volatile
  8058  01A2  29A4               	goto	u3121
  8059  01A3  29A5               	goto	u3120
  8060  01A4                     u3121:	
  8061  01A4  29A9               	goto	l4236
  8062  01A5                     u3120:	
  8063  01A5                     l4234:	
  8064  01A5  1906               	btfsc	6,2	;volatile
  8065  01A6  29A8               	goto	u3131
  8066  01A7  29A9               	goto	u3130
  8067  01A8                     u3131:	
  8068  01A8  29AA               	goto	l4238
  8069  01A9                     u3130:	
  8070  01A9                     l4236:	
  8071                           
  8072                           ;games.c: 495:                 joystick_pressed = 0;
  8073  01A9  01E1               	clrf	_joystick_pressed
  8074  01AA                     l4238:	
  8075                           
  8076                           ;games.c: 493:         while(event_enabled == 0) {
  8077  01AA  0865               	movf	_event_enabled,w
  8078  01AB  1903               	btfsc	3,2
  8079  01AC  29AE               	goto	u3141
  8080  01AD  29AF               	goto	u3140
  8081  01AE                     u3141:	
  8082  01AE  29A1               	goto	l411
  8083  01AF                     u3140:	
  8084  01AF                     l4240:	
  8085                           
  8086                           ;games.c: 498:         turn_on_led(colors[color_index]);
  8087  01AF  083B               	movf	end_screen@color_index,w
  8088  01B0  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  8089  01B1  0084               	movwf	4
  8090  01B2  1383               	bcf	3,7	;select IRP bank0
  8091  01B3  0800               	movf	0,w
  8092  01B4  160A  118A  2404  120A  118A  	fcall	_turn_on_led
  8093  01B9                     l4242:	
  8094                           
  8095                           ;games.c: 499:         color_index++;
  8096  01B9  3001               	movlw	1
  8097  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  8098  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  8099  01BC  00B1               	movwf	??_end_screen
  8100  01BD  0831               	movf	??_end_screen,w
  8101  01BE  07BB               	addwf	end_screen@color_index,f
  8102  01BF                     l4244:	
  8103                           
  8104                           ;games.c: 500:         color_index %= 6;
  8105  01BF  3006               	movlw	6
  8106  01C0  00A0               	movwf	___awmod@divisor
  8107  01C1  3000               	movlw	0
  8108  01C2  00A1               	movwf	___awmod@divisor+1
  8109  01C3  083B               	movf	end_screen@color_index,w
  8110  01C4  00B1               	movwf	??_end_screen
  8111  01C5  01B2               	clrf	??_end_screen+1
  8112  01C6  0831               	movf	??_end_screen,w
  8113  01C7  00A2               	movwf	___awmod@dividend
  8114  01C8  0832               	movf	??_end_screen+1,w
  8115  01C9  00A3               	movwf	___awmod@dividend+1
  8116  01CA  120A  158A  2002  120A  118A  	fcall	___awmod
  8117  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  8118  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  8119  01D1  0820               	movf	?___awmod,w
  8120  01D2  00B3               	movwf	??_end_screen+2
  8121  01D3  0833               	movf	??_end_screen+2,w
  8122  01D4  00BB               	movwf	end_screen@color_index
  8123  01D5                     l4246:	
  8124                           
  8125                           ;games.c: 501:         lcd_clear(gameboard);
  8126  01D5  3005               	movlw	5
  8127  01D6  00A8               	movwf	lcd_clear@port
  8128  01D7  3000               	movlw	0
  8129  01D8  00A9               	movwf	lcd_clear@port+1
  8130  01D9  160A  118A  22DD  120A  118A  	fcall	_lcd_clear
  8131  01DE                     l4248:	
  8132                           
  8133                           ;games.c: 502:         lcd_goto(0x40,gameboard);
  8134  01DE  3005               	movlw	5
  8135  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  8136  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  8137  01E1  00A8               	movwf	lcd_goto@port
  8138  01E2  3000               	movlw	0
  8139  01E3  00A9               	movwf	lcd_goto@port+1
  8140  01E4  3040               	movlw	64
  8141  01E5  160A  118A  2311  120A  118A  	fcall	_lcd_goto
  8142  01EA                     l4250:	
  8143                           
  8144                           ;games.c: 503:         lcd_puts(second_row,gameboard);
  8145  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  8146  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  8147  01EC  082F               	movf	end_screen@second_row,w
  8148  01ED  00A8               	movwf	lcd_puts@string
  8149  01EE  0830               	movf	end_screen@second_row+1,w
  8150  01EF  00A9               	movwf	lcd_puts@string+1
  8151  01F0  3005               	movlw	5
  8152  01F1  00AA               	movwf	lcd_puts@port
  8153  01F2  3000               	movlw	0
  8154  01F3  00AB               	movwf	lcd_puts@port+1
  8155  01F4  160A  118A  23D4  120A  118A  	fcall	_lcd_puts
  8156  01F9                     l4252:	
  8157                           
  8158                           ;games.c: 504:         event_enabled = 0;
  8159  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  8160  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  8161  01FB  01E5               	clrf	_event_enabled
  8162  01FC                     l4254:	
  8163                           
  8164                           ;games.c: 505:         event_delay_count = 120;
  8165  01FC  3078               	movlw	120
  8166  01FD  00B1               	movwf	??_end_screen
  8167  01FE  0831               	movf	??_end_screen,w
  8168  01FF  00FA               	movwf	_event_delay_count
  8169                           
  8170                           ;games.c: 506:         while(event_enabled == 0) {
  8171  0200  2A0A               	goto	l4260
  8172  0201                     l417:	
  8173                           
  8174                           ;games.c: 507:             if((RB5 == 0)||(RB2 == 0)) {
  8175  0201  1E86               	btfss	6,5	;volatile
  8176  0202  2A04               	goto	u3151
  8177  0203  2A05               	goto	u3150
  8178  0204                     u3151:	
  8179  0204  2A09               	goto	l4258
  8180  0205                     u3150:	
  8181  0205                     l4256:	
  8182  0205  1906               	btfsc	6,2	;volatile
  8183  0206  2A08               	goto	u3161
  8184  0207  2A09               	goto	u3160
  8185  0208                     u3161:	
  8186  0208  2A0A               	goto	l4260
  8187  0209                     u3160:	
  8188  0209                     l4258:	
  8189                           
  8190                           ;games.c: 508:                 joystick_pressed = 0;
  8191  0209  01E1               	clrf	_joystick_pressed
  8192  020A                     l4260:	
  8193                           
  8194                           ;games.c: 506:         while(event_enabled == 0) {
  8195  020A  0865               	movf	_event_enabled,w
  8196  020B  1903               	btfsc	3,2
  8197  020C  2A0E               	goto	u3171
  8198  020D  2A0F               	goto	u3170
  8199  020E                     u3171:	
  8200  020E  2A01               	goto	l417
  8201  020F                     u3170:	
  8202  020F                     l4262:	
  8203                           
  8204                           ;games.c: 511:         turn_on_led(colors[color_index]);
  8205  020F  083B               	movf	end_screen@color_index,w
  8206  0210  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  8207  0211  0084               	movwf	4
  8208  0212  1383               	bcf	3,7	;select IRP bank0
  8209  0213  0800               	movf	0,w
  8210  0214  160A  118A  2404  120A  118A  	fcall	_turn_on_led
  8211  0219                     l4264:	
  8212                           
  8213                           ;games.c: 512:         color_index++;
  8214  0219  3001               	movlw	1
  8215  021A  1283               	bcf	3,5	;RP0=0, select bank0
  8216  021B  1303               	bcf	3,6	;RP1=0, select bank0
  8217  021C  00B1               	movwf	??_end_screen
  8218  021D  0831               	movf	??_end_screen,w
  8219  021E  07BB               	addwf	end_screen@color_index,f
  8220  021F                     l4266:	
  8221                           
  8222                           ;games.c: 513:         color_index %= 6;
  8223  021F  3006               	movlw	6
  8224  0220  00A0               	movwf	___awmod@divisor
  8225  0221  3000               	movlw	0
  8226  0222  00A1               	movwf	___awmod@divisor+1
  8227  0223  083B               	movf	end_screen@color_index,w
  8228  0224  00B1               	movwf	??_end_screen
  8229  0225  01B2               	clrf	??_end_screen+1
  8230  0226  0831               	movf	??_end_screen,w
  8231  0227  00A2               	movwf	___awmod@dividend
  8232  0228  0832               	movf	??_end_screen+1,w
  8233  0229  00A3               	movwf	___awmod@dividend+1
  8234  022A  120A  158A  2002  120A  118A  	fcall	___awmod
  8235  022F  1283               	bcf	3,5	;RP0=0, select bank0
  8236  0230  1303               	bcf	3,6	;RP1=0, select bank0
  8237  0231  0820               	movf	?___awmod,w
  8238  0232  00B3               	movwf	??_end_screen+2
  8239  0233  0833               	movf	??_end_screen+2,w
  8240  0234  00BB               	movwf	end_screen@color_index
  8241  0235                     l4268:	
  8242                           
  8243                           ;games.c: 488:     while(joystick_pressed==1) {
  8244  0235  1283               	bcf	3,5	;RP0=0, select bank0
  8245  0236  1303               	bcf	3,6	;RP1=0, select bank0
  8246  0237  0361               	decf	_joystick_pressed,w
  8247  0238  1903               	btfsc	3,2
  8248  0239  2A3B               	goto	u3181
  8249  023A  2A3C               	goto	u3180
  8250  023B                     u3181:	
  8251  023B  2981               	goto	l4226
  8252  023C                     u3180:	
  8253  023C                     l423:	
  8254  023C  0008               	return
  8255  023D                     __end_of_end_screen:	
  8256                           
  8257                           	psect	text31
  8258  1404                     __ptext31:	
  8259 ;; *************** function _turn_on_led *****************
  8260 ;; Defined at:
  8261 ;;		line 429 in file "games.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;  color           1    wreg     unsigned char 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  color           1    2[BANK0 ] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8275 ;;      Params:         0       0       0       0       0
  8276 ;;      Locals:         0       1       0       0       0
  8277 ;;      Temps:          0       2       0       0       0
  8278 ;;      Totals:         0       3       0       0       0
  8279 ;;Total ram usage:        3 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    1
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		_simon_says_get_input
  8286 ;;		_play_pattern
  8287 ;;		_end_screen
  8288 ;;		_check_for_match
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           
  8293                           ;psect for function _turn_on_led
  8294  1404                     _turn_on_led:	
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _turn_on_led: [wreg-fsr0h+status,2+status,0]
  8298                           ;turn_on_led@color stored from wreg
  8299  1404  1283               	bcf	3,5	;RP0=0, select bank0
  8300  1405  1303               	bcf	3,6	;RP1=0, select bank0
  8301  1406  00A2               	movwf	turn_on_led@color
  8302  1407                     l3918:	
  8303                           
  8304                           ;games.c: 430:     PORTC &= 0x1F;
  8305  1407  301F               	movlw	31
  8306  1408  00A0               	movwf	??_turn_on_led
  8307  1409  0820               	movf	??_turn_on_led,w
  8308  140A  0587               	andwf	7,f	;volatile
  8309                           
  8310                           ;games.c: 431:     switch(color) {
  8311  140B  2C1F               	goto	l3922
  8312  140C                     l393:	
  8313                           ;games.c: 432:         case 0:
  8314                           
  8315                           
  8316                           ;games.c: 433:             RC5 = 1;
  8317  140C  1687               	bsf	7,5	;volatile
  8318                           
  8319                           ;games.c: 434:             break;
  8320  140D  2C3E               	goto	l401
  8321  140E                     l395:	
  8322                           ;games.c: 435:         case 1:
  8323                           
  8324                           
  8325                           ;games.c: 436:             RC6 = 1;
  8326  140E  1707               	bsf	7,6	;volatile
  8327                           
  8328                           ;games.c: 437:             break;
  8329  140F  2C3E               	goto	l401
  8330  1410                     l396:	
  8331                           ;games.c: 438:         case 2:
  8332                           
  8333                           
  8334                           ;games.c: 439:             RC7 = 1;
  8335  1410  1787               	bsf	7,7	;volatile
  8336                           
  8337                           ;games.c: 440:             break;
  8338  1411  2C3E               	goto	l401
  8339  1412                     l397:	
  8340                           ;games.c: 441:         case 3:
  8341                           
  8342                           
  8343                           ;games.c: 442:             RC5 = 1;
  8344  1412  1687               	bsf	7,5	;volatile
  8345                           
  8346                           ;games.c: 443:             RC6 = 1;
  8347  1413  1707               	bsf	7,6	;volatile
  8348                           
  8349                           ;games.c: 444:             break;
  8350  1414  2C3E               	goto	l401
  8351  1415                     l398:	
  8352                           ;games.c: 445:         case 4:
  8353                           
  8354                           
  8355                           ;games.c: 446:             RC6 = 1;
  8356  1415  1707               	bsf	7,6	;volatile
  8357                           
  8358                           ;games.c: 447:             RC7 = 1;
  8359  1416  1787               	bsf	7,7	;volatile
  8360                           
  8361                           ;games.c: 448:             break;
  8362  1417  2C3E               	goto	l401
  8363  1418                     l399:	
  8364                           ;games.c: 449:         case 5:
  8365                           
  8366                           
  8367                           ;games.c: 450:             RC7 = 1;
  8368  1418  1787               	bsf	7,7	;volatile
  8369                           
  8370                           ;games.c: 451:             RC5 = 1;
  8371  1419  1687               	bsf	7,5	;volatile
  8372                           
  8373                           ;games.c: 452:             break;
  8374  141A  2C3E               	goto	l401
  8375  141B                     l400:	
  8376                           ;games.c: 453:         case 6:
  8377                           
  8378                           
  8379                           ;games.c: 454:             RC5 = 1;
  8380  141B  1687               	bsf	7,5	;volatile
  8381                           
  8382                           ;games.c: 455:             RC6 = 1;
  8383  141C  1707               	bsf	7,6	;volatile
  8384                           
  8385                           ;games.c: 456:             RC7 = 1;
  8386  141D  1787               	bsf	7,7	;volatile
  8387                           
  8388                           ;games.c: 457:             break;
  8389  141E  2C3E               	goto	l401
  8390  141F                     l3922:	
  8391  141F  0822               	movf	turn_on_led@color,w
  8392  1420  00A0               	movwf	??_turn_on_led
  8393  1421  01A1               	clrf	??_turn_on_led+1
  8394                           
  8395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8396                           ; Switch size 1, requested type "simple"
  8397                           ; Number of cases is 1, Range of values is 0 to 0
  8398                           ; switch strategies available:
  8399                           ; Name         Instructions Cycles
  8400                           ; simple_byte            4     3 (average)
  8401                           ; direct_byte           11     8 (fixed)
  8402                           ; jumptable            260     6 (fixed)
  8403                           ;	Chosen strategy is simple_byte
  8404  1422  0821               	movf	??_turn_on_led+1,w
  8405  1423  3A00               	xorlw	0	; case 0
  8406  1424  1903               	skipnz
  8407  1425  2C27               	goto	l5160
  8408  1426  2C3E               	goto	l401
  8409  1427                     l5160:	
  8410                           
  8411                           ; Switch size 1, requested type "simple"
  8412                           ; Number of cases is 7, Range of values is 0 to 6
  8413                           ; switch strategies available:
  8414                           ; Name         Instructions Cycles
  8415                           ; simple_byte           22    12 (average)
  8416                           ; direct_byte           29     8 (fixed)
  8417                           ; jumptable            260     6 (fixed)
  8418                           ;	Chosen strategy is simple_byte
  8419  1427  0820               	movf	??_turn_on_led,w
  8420  1428  3A00               	xorlw	0	; case 0
  8421  1429  1903               	skipnz
  8422  142A  2C0C               	goto	l393
  8423  142B  3A01               	xorlw	1	; case 1
  8424  142C  1903               	skipnz
  8425  142D  2C0E               	goto	l395
  8426  142E  3A03               	xorlw	3	; case 2
  8427  142F  1903               	skipnz
  8428  1430  2C10               	goto	l396
  8429  1431  3A01               	xorlw	1	; case 3
  8430  1432  1903               	skipnz
  8431  1433  2C12               	goto	l397
  8432  1434  3A07               	xorlw	7	; case 4
  8433  1435  1903               	skipnz
  8434  1436  2C15               	goto	l398
  8435  1437  3A01               	xorlw	1	; case 5
  8436  1438  1903               	skipnz
  8437  1439  2C18               	goto	l399
  8438  143A  3A03               	xorlw	3	; case 6
  8439  143B  1903               	skipnz
  8440  143C  2C1B               	goto	l400
  8441  143D  2C3E               	goto	l401
  8442  143E                     l401:	
  8443  143E  0008               	return
  8444  143F                     __end_of_turn_on_led:	
  8445                           
  8446                           	psect	text32
  8447  132F                     __ptext32:	
  8448 ;; *************** function _play_tone *****************
  8449 ;; Defined at:
  8450 ;;		line 787 in file "games.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  tone_period     2    0[BANK0 ] unsigned int 
  8453 ;;  duration_8ms    1    2[BANK0 ] unsigned char 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8465 ;;      Params:         0       3       0       0       0
  8466 ;;      Locals:         0       0       0       0       0
  8467 ;;      Temps:          0       2       0       0       0
  8468 ;;      Totals:         0       5       0       0       0
  8469 ;;Total ram usage:        5 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_play_pattern
  8476 ;;		_end_screen
  8477 ;;		_check_for_match
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           
  8482                           ;psect for function _play_tone
  8483  132F                     _play_tone:	
  8484  132F                     l4124:	
  8485                           ;incstack = 0
  8486                           ; Regs used in _play_tone: [wreg+status,2+status,0]
  8487                           
  8488                           
  8489                           ;games.c: 788:     tone_delay = tone_period;
  8490  132F  1283               	bcf	3,5	;RP0=0, select bank0
  8491  1330  1303               	bcf	3,6	;RP1=0, select bank0
  8492  1331  0821               	movf	play_tone@tone_period+1,w
  8493  1332  00F7               	movwf	_tone_delay+1
  8494  1333  0820               	movf	play_tone@tone_period,w
  8495  1334  00F6               	movwf	_tone_delay
  8496  1335                     l4126:	
  8497                           
  8498                           ;games.c: 789:     CCPR2 = TMR1+tone_period;
  8499  1335  0820               	movf	play_tone@tone_period,w
  8500  1336  070E               	addwf	14,w	;volatile
  8501  1337  00A3               	movwf	??_play_tone
  8502  1338  0821               	movf	play_tone@tone_period+1,w
  8503  1339  1803               	skipnc
  8504  133A  0A21               	incf	play_tone@tone_period+1,w
  8505  133B  070F               	addwf	15,w	;volatile
  8506  133C  00A4               	movwf	??_play_tone+1
  8507  133D  0823               	movf	??_play_tone,w
  8508  133E  009B               	movwf	27	;volatile
  8509  133F  0824               	movf	??_play_tone+1,w
  8510  1340  009C               	movwf	28	;volatile
  8511  1341                     l4128:	
  8512                           
  8513                           ;games.c: 790:     CCP2IF = 0;
  8514  1341  100D               	bcf	13,0	;volatile
  8515  1342                     l4130:	
  8516                           
  8517                           ;games.c: 791:     CCP2IE = 1;
  8518  1342  1683               	bsf	3,5	;RP0=1, select bank1
  8519  1343  1303               	bcf	3,6	;RP1=0, select bank1
  8520  1344  140D               	bsf	13,0	;volatile
  8521  1345                     l4132:	
  8522                           
  8523                           ;games.c: 792:     event_delay_count = duration_8ms;
  8524  1345  1283               	bcf	3,5	;RP0=0, select bank0
  8525  1346  1303               	bcf	3,6	;RP1=0, select bank0
  8526  1347  0822               	movf	play_tone@duration_8ms,w
  8527  1348  00A3               	movwf	??_play_tone
  8528  1349  0823               	movf	??_play_tone,w
  8529  134A  00FA               	movwf	_event_delay_count
  8530  134B                     l4134:	
  8531                           
  8532                           ;games.c: 793:     event_enabled = 0;
  8533  134B  01E5               	clrf	_event_enabled
  8534  134C                     l4136:	
  8535                           ;games.c: 794:     while(event_enabled == 0);
  8536                           
  8537  134C  0865               	movf	_event_enabled,w
  8538  134D  1903               	btfsc	3,2
  8539  134E  2B50               	goto	u3081
  8540  134F  2B51               	goto	u3080
  8541  1350                     u3081:	
  8542  1350  2B4C               	goto	l4136
  8543  1351                     u3080:	
  8544  1351                     l564:	
  8545                           
  8546                           ;games.c: 795:     CCP2IE = 0;
  8547  1351  1683               	bsf	3,5	;RP0=1, select bank1
  8548  1352  1303               	bcf	3,6	;RP1=0, select bank1
  8549  1353  100D               	bcf	13,0	;volatile
  8550  1354                     l565:	
  8551  1354  0008               	return
  8552  1355                     __end_of_play_tone:	
  8553                           
  8554                           	psect	text33
  8555  13D4                     __ptext33:	
  8556 ;; *************** function _lcd_puts *****************
  8557 ;; Defined at:
  8558 ;;		line 129 in file "lcd4bits.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  string          2    8[BANK0 ] PTR const unsigned char 
  8561 ;;		 -> STR_35(7), STR_34(6), STR_33(12), STR_32(13), 
  8562 ;;		 -> STR_31(17), STR_30(16), STR_29(11), STR_28(14), 
  8563 ;;		 -> STR_27(13), STR_26(13), STR_25(13), STR_24(13), 
  8564 ;;		 -> STR_23(13), STR_22(17), STR_21(14), STR_20(9), 
  8565 ;;		 -> STR_19(12), STR_18(16), STR_17(14), STR_16(13), 
  8566 ;;		 -> STR_15(14), STR_14(14), STR_13(16), STR_12(14), 
  8567 ;;		 -> STR_11(14), STR_10(14), STR_9(13), STR_8(14), 
  8568 ;;		 -> STR_7(17), STR_6(14), STR_5(14), STR_4(14), 
  8569 ;;		 -> STR_3(13), STR_2(16), STR_1(16), 
  8570 ;;  port            2   10[BANK0 ] PTR unsigned char 
  8571 ;;		 -> PORTD(1), PORTA(1), 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;		None
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      void 
  8576 ;; Registers used:
  8577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8583 ;;      Params:         0       4       0       0       0
  8584 ;;      Locals:         0       0       0       0       0
  8585 ;;      Temps:          0       1       0       0       0
  8586 ;;      Totals:         0       5       0       0       0
  8587 ;;Total ram usage:        5 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; Hardware stack levels required when called:    3
  8590 ;; This function calls:
  8591 ;;		_lcd_write
  8592 ;; This function is called by:
  8593 ;;		_main
  8594 ;;		_simon_says_check_input
  8595 ;;		_play_pattern
  8596 ;;		_display_simon_says_scoreboard
  8597 ;;		_simon_says_title_screen
  8598 ;;		_end_screen
  8599 ;;		_concentration_title_screen
  8600 ;;		_display_concentration_scoreboard
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           
  8605                           ;psect for function _lcd_puts
  8606  13D4                     _lcd_puts:	
  8607  13D4                     l3904:	
  8608                           ;incstack = 0
  8609                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8610                           
  8611                           
  8612                           ;lcd4bits.c: 130:     while (*string != 0) {
  8613  13D4  2BF3               	goto	l3910
  8614  13D5                     l3906:	
  8615                           
  8616                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  8617  13D5  0829               	movf	lcd_puts@string+1,w
  8618  13D6  00FF               	movwf	btemp+1
  8619  13D7  0828               	movf	lcd_puts@string,w
  8620  13D8  0084               	movwf	4
  8621  13D9  120A  118A  2300  160A  118A  	fcall	stringtab
  8622  13DE  00AC               	movwf	??_lcd_puts
  8623  13DF  082C               	movf	??_lcd_puts,w
  8624  13E0  00A2               	movwf	lcd_write@CmdChar
  8625  13E1  082A               	movf	lcd_puts@port,w
  8626  13E2  00A3               	movwf	lcd_write@port
  8627  13E3  082B               	movf	lcd_puts@port+1,w
  8628  13E4  00A4               	movwf	lcd_write@port+1
  8629  13E5  3010               	movlw	16
  8630  13E6  160A  118A  255E  160A  118A  	fcall	_lcd_write
  8631  13EB                     l3908:	
  8632  13EB  3001               	movlw	1
  8633  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  8634  13ED  1303               	bcf	3,6	;RP1=0, select bank0
  8635  13EE  07A8               	addwf	lcd_puts@string,f
  8636  13EF  1803               	skipnc
  8637  13F0  0AA9               	incf	lcd_puts@string+1,f
  8638  13F1  3000               	movlw	0
  8639  13F2  07A9               	addwf	lcd_puts@string+1,f
  8640  13F3                     l3910:	
  8641                           
  8642                           ;lcd4bits.c: 130:     while (*string != 0) {
  8643  13F3  1283               	bcf	3,5	;RP0=0, select bank0
  8644  13F4  1303               	bcf	3,6	;RP1=0, select bank0
  8645  13F5  0829               	movf	lcd_puts@string+1,w
  8646  13F6  00FF               	movwf	btemp+1
  8647  13F7  0828               	movf	lcd_puts@string,w
  8648  13F8  0084               	movwf	4
  8649  13F9  120A  118A  2300  160A  118A  	fcall	stringtab
  8650  13FE  3A00               	xorlw	0
  8651  13FF  1D03               	skipz
  8652  1400  2C02               	goto	u2711
  8653  1401  2C03               	goto	u2710
  8654  1402                     u2711:	
  8655  1402  2BD5               	goto	l3906
  8656  1403                     u2710:	
  8657  1403                     l35:	
  8658  1403  0008               	return
  8659  1404                     __end_of_lcd_puts:	
  8660                           
  8661                           	psect	text34
  8662  1311                     __ptext34:	
  8663 ;; *************** function _lcd_goto *****************
  8664 ;; Defined at:
  8665 ;;		line 146 in file "lcd4bits.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  position        1    wreg     unsigned char 
  8668 ;;  port            2    8[BANK0 ] PTR unsigned char 
  8669 ;;		 -> PORTD(1), PORTA(1), 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  position        1   11[BANK0 ] unsigned char 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8681 ;;      Params:         0       2       0       0       0
  8682 ;;      Locals:         0       1       0       0       0
  8683 ;;      Temps:          0       1       0       0       0
  8684 ;;      Totals:         0       4       0       0       0
  8685 ;;Total ram usage:        4 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    3
  8688 ;; This function calls:
  8689 ;;		_DelayMs
  8690 ;;		_lcd_write
  8691 ;; This function is called by:
  8692 ;;		_main
  8693 ;;		_simon_says_check_input
  8694 ;;		_countdown
  8695 ;;		_display_simon_says_scoreboard
  8696 ;;		_simon_says_title_screen
  8697 ;;		_end_screen
  8698 ;;		_concentration_title_screen
  8699 ;;		_display_concentration_scoreboard
  8700 ;;		_display_concentration_gameboard
  8701 ;;		_concentration_gameboard_init
  8702 ;;		_update_cursor
  8703 ;;		_toggle_cursor
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           
  8708                           ;psect for function _lcd_goto
  8709  1311                     _lcd_goto:	
  8710                           
  8711                           ;incstack = 0
  8712                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8713                           ;lcd_goto@position stored from wreg
  8714  1311  1283               	bcf	3,5	;RP0=0, select bank0
  8715  1312  1303               	bcf	3,6	;RP1=0, select bank0
  8716  1313  00AB               	movwf	lcd_goto@position
  8717  1314                     l3914:	
  8718                           
  8719                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  8720  1314  082B               	movf	lcd_goto@position,w
  8721  1315  3E80               	addlw	128
  8722  1316  00AA               	movwf	??_lcd_goto
  8723  1317  082A               	movf	??_lcd_goto,w
  8724  1318  00A2               	movwf	lcd_write@CmdChar
  8725  1319  0828               	movf	lcd_goto@port,w
  8726  131A  00A3               	movwf	lcd_write@port
  8727  131B  0829               	movf	lcd_goto@port+1,w
  8728  131C  00A4               	movwf	lcd_write@port+1
  8729  131D  3000               	movlw	0
  8730  131E  160A  118A  255E  160A  118A  	fcall	_lcd_write
  8731  1323                     l3916:	
  8732                           
  8733                           ;lcd4bits.c: 149:     DelayMs(2);
  8734  1323  3002               	movlw	2
  8735  1324  1283               	bcf	3,5	;RP0=0, select bank0
  8736  1325  1303               	bcf	3,6	;RP1=0, select bank0
  8737  1326  00A0               	movwf	DelayMs@millis
  8738  1327  3000               	movlw	0
  8739  1328  00A1               	movwf	DelayMs@millis+1
  8740  1329  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  8741  132E                     l41:	
  8742  132E  0008               	return
  8743  132F                     __end_of_lcd_goto:	
  8744                           
  8745                           	psect	text35
  8746  12DD                     __ptext35:	
  8747 ;; *************** function _lcd_clear *****************
  8748 ;; Defined at:
  8749 ;;		line 123 in file "lcd4bits.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  port            2    8[BANK0 ] PTR unsigned char 
  8752 ;;		 -> PORTD(1), PORTA(1), 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8764 ;;      Params:         0       2       0       0       0
  8765 ;;      Locals:         0       0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0
  8767 ;;      Totals:         0       2       0       0       0
  8768 ;;Total ram usage:        2 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:    3
  8771 ;; This function calls:
  8772 ;;		_DelayMs
  8773 ;;		_lcd_write
  8774 ;; This function is called by:
  8775 ;;		_lcd_init
  8776 ;;		_main
  8777 ;;		_simon_says_check_input
  8778 ;;		_play_pattern
  8779 ;;		_countdown
  8780 ;;		_display_simon_says_scoreboard
  8781 ;;		_simon_says_title_screen
  8782 ;;		_end_screen
  8783 ;;		_concentration_title_screen
  8784 ;;		_display_concentration_gameboard
  8785 ;;		_concentration_gameboard_init
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           
  8790                           ;psect for function _lcd_clear
  8791  12DD                     _lcd_clear:	
  8792  12DD                     l3900:	
  8793                           ;incstack = 0
  8794                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8795                           
  8796                           
  8797                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  8798  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  8799  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  8800  12DF  01A2               	clrf	lcd_write@CmdChar
  8801  12E0  0AA2               	incf	lcd_write@CmdChar,f
  8802  12E1  0828               	movf	lcd_clear@port,w
  8803  12E2  00A3               	movwf	lcd_write@port
  8804  12E3  0829               	movf	lcd_clear@port+1,w
  8805  12E4  00A4               	movwf	lcd_write@port+1
  8806  12E5  3000               	movlw	0
  8807  12E6  160A  118A  255E  160A  118A  	fcall	_lcd_write
  8808  12EB                     l3902:	
  8809                           
  8810                           ;lcd4bits.c: 125:     DelayMs(2);
  8811  12EB  3002               	movlw	2
  8812  12EC  1283               	bcf	3,5	;RP0=0, select bank0
  8813  12ED  1303               	bcf	3,6	;RP1=0, select bank0
  8814  12EE  00A0               	movwf	DelayMs@millis
  8815  12EF  3000               	movlw	0
  8816  12F0  00A1               	movwf	DelayMs@millis+1
  8817  12F1  160A  118A  22C4  160A  118A  	fcall	_DelayMs
  8818  12F6                     l29:	
  8819  12F6  0008               	return
  8820  12F7                     __end_of_lcd_clear:	
  8821                           
  8822                           	psect	text36
  8823  155E                     __ptext36:	
  8824 ;; *************** function _lcd_write *****************
  8825 ;; Defined at:
  8826 ;;		line 110 in file "lcd4bits.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  mode            1    wreg     unsigned char 
  8829 ;;  CmdChar         1    2[BANK0 ] unsigned char 
  8830 ;;  port            2    3[BANK0 ] PTR unsigned char 
  8831 ;;		 -> PORTD(1), PORTA(1), 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  mode            1    7[BANK0 ] unsigned char 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8843 ;;      Params:         0       3       0       0       0
  8844 ;;      Locals:         0       1       0       0       0
  8845 ;;      Temps:          0       2       0       0       0
  8846 ;;      Totals:         0       6       0       0       0
  8847 ;;Total ram usage:        6 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    2
  8850 ;; This function calls:
  8851 ;;		_Delay20us
  8852 ;; This function is called by:
  8853 ;;		_lcd_clear
  8854 ;;		_lcd_puts
  8855 ;;		_lcd_putch
  8856 ;;		_lcd_goto
  8857 ;;		_lcd_init
  8858 ;;		_lcd_set_custom_char
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           
  8863                           ;psect for function _lcd_write
  8864  155E                     _lcd_write:	
  8865                           
  8866                           ;incstack = 0
  8867                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8868                           ;lcd_write@mode stored from wreg
  8869  155E  1283               	bcf	3,5	;RP0=0, select bank0
  8870  155F  1303               	bcf	3,6	;RP1=0, select bank0
  8871  1560  00A7               	movwf	lcd_write@mode
  8872  1561                     l3890:	
  8873                           
  8874                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  8875  1561  0822               	movf	lcd_write@CmdChar,w
  8876  1562  00A5               	movwf	??_lcd_write
  8877  1563  3004               	movlw	4
  8878  1564                     u2705:	
  8879  1564  1003               	clrc
  8880  1565  0CA5               	rrf	??_lcd_write,f
  8881  1566  3EFF               	addlw	-1
  8882  1567  1D03               	skipz
  8883  1568  2D64               	goto	u2705
  8884  1569  0825               	movf	??_lcd_write,w
  8885  156A  3E20               	addlw	32
  8886  156B  0427               	iorwf	lcd_write@mode,w
  8887  156C  00A6               	movwf	??_lcd_write+1
  8888  156D  0823               	movf	lcd_write@port,w
  8889  156E  0084               	movwf	4
  8890  156F  1783               	bsf	3,7
  8891  1570  1C24               	btfss	lcd_write@port+1,0
  8892  1571  1383               	bcf	3,7
  8893  1572  0826               	movf	??_lcd_write+1,w
  8894  1573  0080               	movwf	0
  8895  1574                     l3892:	
  8896                           
  8897                           ;lcd4bits.c: 112:     Delay20us();
  8898  1574  160A  118A  2292  160A  118A  	fcall	_Delay20us
  8899  1579                     l3894:	
  8900                           
  8901                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  8902  1579  1283               	bcf	3,5	;RP0=0, select bank0
  8903  157A  1303               	bcf	3,6	;RP1=0, select bank0
  8904  157B  0823               	movf	lcd_write@port,w
  8905  157C  0084               	movwf	4
  8906  157D  1783               	bsf	3,7
  8907  157E  1C24               	btfss	lcd_write@port+1,0
  8908  157F  1383               	bcf	3,7
  8909  1580  0800               	movf	0,w
  8910  1581  39DF               	andlw	223
  8911  1582  00A5               	movwf	??_lcd_write
  8912  1583  0823               	movf	lcd_write@port,w
  8913  1584  0084               	movwf	4
  8914  1585  1783               	bsf	3,7
  8915  1586  1C24               	btfss	lcd_write@port+1,0
  8916  1587  1383               	bcf	3,7
  8917  1588  0825               	movf	??_lcd_write,w
  8918  1589  0080               	movwf	0
  8919  158A                     l3896:	
  8920                           
  8921                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  8922  158A  0822               	movf	lcd_write@CmdChar,w
  8923  158B  390F               	andlw	15
  8924  158C  3E20               	addlw	32
  8925  158D  0427               	iorwf	lcd_write@mode,w
  8926  158E  00A5               	movwf	??_lcd_write
  8927  158F  0823               	movf	lcd_write@port,w
  8928  1590  0084               	movwf	4
  8929  1591  1783               	bsf	3,7
  8930  1592  1C24               	btfss	lcd_write@port+1,0
  8931  1593  1383               	bcf	3,7
  8932  1594  0825               	movf	??_lcd_write,w
  8933  1595  0080               	movwf	0
  8934  1596                     l3898:	
  8935                           
  8936                           ;lcd4bits.c: 116:     Delay20us();
  8937  1596  160A  118A  2292  160A  118A  	fcall	_Delay20us
  8938                           
  8939                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  8940  159B  1283               	bcf	3,5	;RP0=0, select bank0
  8941  159C  1303               	bcf	3,6	;RP1=0, select bank0
  8942  159D  0823               	movf	lcd_write@port,w
  8943  159E  0084               	movwf	4
  8944  159F  1783               	bsf	3,7
  8945  15A0  1C24               	btfss	lcd_write@port+1,0
  8946  15A1  1383               	bcf	3,7
  8947  15A2  0800               	movf	0,w
  8948  15A3  39DF               	andlw	223
  8949  15A4  00A5               	movwf	??_lcd_write
  8950  15A5  0823               	movf	lcd_write@port,w
  8951  15A6  0084               	movwf	4
  8952  15A7  1783               	bsf	3,7
  8953  15A8  1C24               	btfss	lcd_write@port+1,0
  8954  15A9  1383               	bcf	3,7
  8955  15AA  0825               	movf	??_lcd_write,w
  8956  15AB  0080               	movwf	0
  8957  15AC                     l26:	
  8958  15AC  0008               	return
  8959  15AD                     __end_of_lcd_write:	
  8960                           
  8961                           	psect	text37
  8962  1292                     __ptext37:	
  8963 ;; *************** function _Delay20us *****************
  8964 ;; Defined at:
  8965 ;;		line 99 in file "lcd4bits.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  next            1    1[BANK0 ] unsigned char 
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8979 ;;      Params:         0       0       0       0       0
  8980 ;;      Locals:         0       1       0       0       0
  8981 ;;      Temps:          0       1       0       0       0
  8982 ;;      Totals:         0       2       0       0       0
  8983 ;;Total ram usage:        2 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    1
  8986 ;; This function calls:
  8987 ;;		Nothing
  8988 ;; This function is called by:
  8989 ;;		_lcd_write
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           
  8994                           ;psect for function _Delay20us
  8995  1292                     _Delay20us:	
  8996  1292                     l3870:	
  8997                           ;incstack = 0
  8998                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  8999                           
  9000                           
  9001                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  9002  1292  1283               	bcf	3,5	;RP0=0, select bank0
  9003  1293  1303               	bcf	3,6	;RP1=0, select bank0
  9004  1294  01A1               	clrf	Delay20us@next
  9005  1295                     l3876:	
  9006  1295  3001               	movlw	1
  9007  1296  00A0               	movwf	??_Delay20us
  9008  1297  0820               	movf	??_Delay20us,w
  9009  1298  07A1               	addwf	Delay20us@next,f
  9010  1299                     l3878:	
  9011  1299  3008               	movlw	8
  9012  129A  0221               	subwf	Delay20us@next,w
  9013  129B  1C03               	skipc
  9014  129C  2A9E               	goto	u2671
  9015  129D  2A9F               	goto	u2670
  9016  129E                     u2671:	
  9017  129E  2A95               	goto	l3876
  9018  129F                     u2670:	
  9019  129F                     l23:	
  9020  129F  0008               	return
  9021  12A0                     __end_of_Delay20us:	
  9022                           
  9023                           	psect	text38
  9024  12C4                     __ptext38:	
  9025 ;; *************** function _DelayMs *****************
  9026 ;; Defined at:
  9027 ;;		line 86 in file "lcd4bits.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  millis          2    0[BANK0 ] unsigned int 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;		None
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  1    wreg      void 
  9034 ;; Registers used:
  9035 ;;		wreg, status,2, status,0
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9041 ;;      Params:         0       2       0       0       0
  9042 ;;      Locals:         0       0       0       0       0
  9043 ;;      Temps:          0       0       0       0       0
  9044 ;;      Totals:         0       2       0       0       0
  9045 ;;Total ram usage:        2 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_lcd_clear
  9052 ;;		_lcd_goto
  9053 ;;		_lcd_init
  9054 ;;		_main
  9055 ;;		_simon_says_get_input
  9056 ;;		_play_pattern
  9057 ;;		_generate_pattern
  9058 ;;		_countdown
  9059 ;;		_simon_says_title_screen
  9060 ;;		_end_screen
  9061 ;;		_concentration_game_end
  9062 ;;		_concentration_title_screen
  9063 ;;		_randomize_gameboard
  9064 ;;		_check_for_match
  9065 ;;		_concentration_game_loop
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           
  9070                           ;psect for function _DelayMs
  9071  12C4                     _DelayMs:	
  9072  12C4                     l3880:	
  9073                           ;incstack = 0
  9074                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  9075                           
  9076                           
  9077                           ;lcd4bits.c: 87:     while (millis != 0) {
  9078  12C4  2AD4               	goto	l3888
  9079  12C5                     l3882:	
  9080                           
  9081                           ;lcd4bits.c: 88:         TMR0 = 100;
  9082  12C5  3064               	movlw	100
  9083  12C6  0081               	movwf	1	;volatile
  9084  12C7                     l3884:	
  9085                           
  9086                           ;lcd4bits.c: 89:         T0IF = 0;
  9087  12C7  110B               	bcf	11,2	;volatile
  9088  12C8                     l14:	
  9089                           ;lcd4bits.c: 90:         while(T0IF == 0);
  9090                           
  9091  12C8  1D0B               	btfss	11,2	;volatile
  9092  12C9  2ACB               	goto	u2681
  9093  12CA  2ACC               	goto	u2680
  9094  12CB                     u2681:	
  9095  12CB  2AC8               	goto	l14
  9096  12CC                     u2680:	
  9097  12CC                     l3886:	
  9098                           
  9099                           ;lcd4bits.c: 91:         millis--;
  9100  12CC  3001               	movlw	1
  9101  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  9102  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  9103  12CF  02A0               	subwf	DelayMs@millis,f
  9104  12D0  3000               	movlw	0
  9105  12D1  1C03               	skipc
  9106  12D2  03A1               	decf	DelayMs@millis+1,f
  9107  12D3  02A1               	subwf	DelayMs@millis+1,f
  9108  12D4                     l3888:	
  9109                           
  9110                           ;lcd4bits.c: 87:     while (millis != 0) {
  9111  12D4  1283               	bcf	3,5	;RP0=0, select bank0
  9112  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  9113  12D6  0820               	movf	DelayMs@millis,w
  9114  12D7  0421               	iorwf	DelayMs@millis+1,w
  9115  12D8  1D03               	btfss	3,2
  9116  12D9  2ADB               	goto	u2691
  9117  12DA  2ADC               	goto	u2690
  9118  12DB                     u2691:	
  9119  12DB  2AC5               	goto	l3882
  9120  12DC                     u2690:	
  9121  12DC                     l18:	
  9122  12DC  0008               	return
  9123  12DD                     __end_of_DelayMs:	
  9124                           
  9125                           	psect	text39
  9126  0802                     __ptext39:	
  9127 ;; *************** function ___awmod *****************
  9128 ;; Defined at:
  9129 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  divisor         2    0[BANK0 ] int 
  9132 ;;  dividend        2    2[BANK0 ] int 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  sign            1    6[BANK0 ] unsigned char 
  9135 ;;  counter         1    5[BANK0 ] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  2    0[BANK0 ] int 
  9138 ;; Registers used:
  9139 ;;		wreg, status,2, status,0
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9145 ;;      Params:         0       4       0       0       0
  9146 ;;      Locals:         0       2       0       0       0
  9147 ;;      Temps:          0       1       0       0       0
  9148 ;;      Totals:         0       7       0       0       0
  9149 ;;Total ram usage:        7 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:    1
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_display_simon_says_scoreboard
  9156 ;;		_end_screen
  9157 ;;		_display_concentration_scoreboard
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           
  9162                           ;psect for function ___awmod
  9163  0802                     ___awmod:	
  9164  0802                     l3982:	
  9165                           ;incstack = 0
  9166                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9167                           
  9168  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9169  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9170  0804  01A6               	clrf	___awmod@sign
  9171  0805                     l3984:	
  9172  0805  1FA3               	btfss	___awmod@dividend+1,7
  9173  0806  2808               	goto	u2831
  9174  0807  2809               	goto	u2830
  9175  0808                     u2831:	
  9176  0808  2810               	goto	l3990
  9177  0809                     u2830:	
  9178  0809                     l3986:	
  9179  0809  09A2               	comf	___awmod@dividend,f
  9180  080A  09A3               	comf	___awmod@dividend+1,f
  9181  080B  0AA2               	incf	___awmod@dividend,f
  9182  080C  1903               	skipnz
  9183  080D  0AA3               	incf	___awmod@dividend+1,f
  9184  080E                     l3988:	
  9185  080E  01A6               	clrf	___awmod@sign
  9186  080F  0AA6               	incf	___awmod@sign,f
  9187  0810                     l3990:	
  9188  0810  1FA1               	btfss	___awmod@divisor+1,7
  9189  0811  2813               	goto	u2841
  9190  0812  2814               	goto	u2840
  9191  0813                     u2841:	
  9192  0813  2819               	goto	l3994
  9193  0814                     u2840:	
  9194  0814                     l3992:	
  9195  0814  09A0               	comf	___awmod@divisor,f
  9196  0815  09A1               	comf	___awmod@divisor+1,f
  9197  0816  0AA0               	incf	___awmod@divisor,f
  9198  0817  1903               	skipnz
  9199  0818  0AA1               	incf	___awmod@divisor+1,f
  9200  0819                     l3994:	
  9201  0819  0820               	movf	___awmod@divisor,w
  9202  081A  0421               	iorwf	___awmod@divisor+1,w
  9203  081B  1903               	btfsc	3,2
  9204  081C  281E               	goto	u2851
  9205  081D  281F               	goto	u2850
  9206  081E                     u2851:	
  9207  081E  284E               	goto	l4012
  9208  081F                     u2850:	
  9209  081F                     l3996:	
  9210  081F  01A5               	clrf	___awmod@counter
  9211  0820  0AA5               	incf	___awmod@counter,f
  9212  0821  282D               	goto	l4002
  9213  0822                     l3998:	
  9214  0822  3001               	movlw	1
  9215  0823                     u2865:	
  9216  0823  1003               	clrc
  9217  0824  0DA0               	rlf	___awmod@divisor,f
  9218  0825  0DA1               	rlf	___awmod@divisor+1,f
  9219  0826  3EFF               	addlw	-1
  9220  0827  1D03               	skipz
  9221  0828  2823               	goto	u2865
  9222  0829                     l4000:	
  9223  0829  3001               	movlw	1
  9224  082A  00A4               	movwf	??___awmod
  9225  082B  0824               	movf	??___awmod,w
  9226  082C  07A5               	addwf	___awmod@counter,f
  9227  082D                     l4002:	
  9228  082D  1FA1               	btfss	___awmod@divisor+1,7
  9229  082E  2830               	goto	u2871
  9230  082F  2831               	goto	u2870
  9231  0830                     u2871:	
  9232  0830  2822               	goto	l3998
  9233  0831                     u2870:	
  9234  0831                     l4004:	
  9235  0831  0821               	movf	___awmod@divisor+1,w
  9236  0832  0223               	subwf	___awmod@dividend+1,w
  9237  0833  1D03               	skipz
  9238  0834  2837               	goto	u2885
  9239  0835  0820               	movf	___awmod@divisor,w
  9240  0836  0222               	subwf	___awmod@dividend,w
  9241  0837                     u2885:	
  9242  0837  1C03               	skipc
  9243  0838  283A               	goto	u2881
  9244  0839  283B               	goto	u2880
  9245  083A                     u2881:	
  9246  083A  2841               	goto	l4008
  9247  083B                     u2880:	
  9248  083B                     l4006:	
  9249  083B  0820               	movf	___awmod@divisor,w
  9250  083C  02A2               	subwf	___awmod@dividend,f
  9251  083D  0821               	movf	___awmod@divisor+1,w
  9252  083E  1C03               	skipc
  9253  083F  03A3               	decf	___awmod@dividend+1,f
  9254  0840  02A3               	subwf	___awmod@dividend+1,f
  9255  0841                     l4008:	
  9256  0841  3001               	movlw	1
  9257  0842                     u2895:	
  9258  0842  1003               	clrc
  9259  0843  0CA1               	rrf	___awmod@divisor+1,f
  9260  0844  0CA0               	rrf	___awmod@divisor,f
  9261  0845  3EFF               	addlw	-1
  9262  0846  1D03               	skipz
  9263  0847  2842               	goto	u2895
  9264  0848                     l4010:	
  9265  0848  3001               	movlw	1
  9266  0849  02A5               	subwf	___awmod@counter,f
  9267  084A  1D03               	btfss	3,2
  9268  084B  284D               	goto	u2901
  9269  084C  284E               	goto	u2900
  9270  084D                     u2901:	
  9271  084D  2831               	goto	l4004
  9272  084E                     u2900:	
  9273  084E                     l4012:	
  9274  084E  0826               	movf	___awmod@sign,w
  9275  084F  1903               	btfsc	3,2
  9276  0850  2852               	goto	u2911
  9277  0851  2853               	goto	u2910
  9278  0852                     u2911:	
  9279  0852  2858               	goto	l4016
  9280  0853                     u2910:	
  9281  0853                     l4014:	
  9282  0853  09A2               	comf	___awmod@dividend,f
  9283  0854  09A3               	comf	___awmod@dividend+1,f
  9284  0855  0AA2               	incf	___awmod@dividend,f
  9285  0856  1903               	skipnz
  9286  0857  0AA3               	incf	___awmod@dividend+1,f
  9287  0858                     l4016:	
  9288  0858  0823               	movf	___awmod@dividend+1,w
  9289  0859  00A1               	movwf	?___awmod+1
  9290  085A  0822               	movf	___awmod@dividend,w
  9291  085B  00A0               	movwf	?___awmod
  9292  085C                     l846:	
  9293  085C  0008               	return
  9294  085D                     __end_of___awmod:	
  9295                           
  9296                           	psect	text40
  9297  096C                     __ptext40:	
  9298 ;; *************** function _interrupt_handler *****************
  9299 ;; Defined at:
  9300 ;;		line 842 in file "games.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  current_anal    1    5[COMMON] unsigned char 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9314 ;;      Params:         0       0       0       0       0
  9315 ;;      Locals:         1       0       0       0       0
  9316 ;;      Temps:          5       0       0       0       0
  9317 ;;      Totals:         6       0       0       0       0
  9318 ;;Total ram usage:        6 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		Interrupt level 1
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           
  9328                           ;psect for function _interrupt_handler
  9329  096C                     _interrupt_handler:	
  9330  096C                     i1l3580:	
  9331                           
  9332                           ;games.c: 843:     if((CCP2IF==1) && (CCP2IE==1)) {
  9333  096C  1283               	bcf	3,5	;RP0=0, select bank0
  9334  096D  1303               	bcf	3,6	;RP1=0, select bank0
  9335  096E  1C0D               	btfss	13,0	;volatile
  9336  096F  2971               	goto	u259_21
  9337  0970  2972               	goto	u259_20
  9338  0971                     u259_21:	
  9339  0971  2988               	goto	i1l576
  9340  0972                     u259_20:	
  9341  0972                     i1l3582:	
  9342  0972  1683               	bsf	3,5	;RP0=1, select bank1
  9343  0973  1303               	bcf	3,6	;RP1=0, select bank1
  9344  0974  1C0D               	btfss	13,0	;volatile
  9345  0975  2977               	goto	u260_21
  9346  0976  2978               	goto	u260_20
  9347  0977                     u260_21:	
  9348  0977  2988               	goto	i1l576
  9349  0978                     u260_20:	
  9350  0978                     i1l3584:	
  9351                           
  9352                           ;games.c: 844:         CCPR2 += tone_delay;
  9353  0978  0876               	movf	_tone_delay,w	;volatile
  9354  0979  1283               	bcf	3,5	;RP0=0, select bank0
  9355  097A  1303               	bcf	3,6	;RP1=0, select bank0
  9356  097B  079B               	addwf	27,f	;volatile
  9357  097C  1803               	skipnc
  9358  097D  0A9C               	incf	28,f	;volatile
  9359  097E  0877               	movf	_tone_delay+1,w	;volatile
  9360  097F  079C               	addwf	28,f	;volatile
  9361  0980                     i1l3586:	
  9362                           
  9363                           ;games.c: 845:         if(CCP2M0 == 1) {
  9364  0980  1C1D               	btfss	29,0	;volatile
  9365  0981  2983               	goto	u261_21
  9366  0982  2984               	goto	u261_20
  9367  0983                     u261_21:	
  9368  0983  2986               	goto	i1l577
  9369  0984                     u261_20:	
  9370  0984                     i1l3588:	
  9371                           
  9372                           ;games.c: 846:             CCP2M0 = 0;
  9373  0984  101D               	bcf	29,0	;volatile
  9374                           
  9375                           ;games.c: 847:         } else {
  9376  0985  2987               	goto	i1l578
  9377  0986                     i1l577:	
  9378                           
  9379                           ;games.c: 848:             CCP2M0 = 1;
  9380  0986  141D               	bsf	29,0	;volatile
  9381  0987                     i1l578:	
  9382                           ;games.c: 849:         }
  9383                           
  9384                           
  9385                           ;games.c: 850:         CCP2IF = 0;
  9386  0987  100D               	bcf	13,0	;volatile
  9387  0988                     i1l576:	
  9388                           ;games.c: 851:     }
  9389                           
  9390                           
  9391                           ;games.c: 852:     if(ADIF) {
  9392  0988  1283               	bcf	3,5	;RP0=0, select bank0
  9393  0989  1F0C               	btfss	12,6	;volatile
  9394  098A  298C               	goto	u262_21
  9395  098B  298D               	goto	u262_20
  9396  098C                     u262_21:	
  9397  098C  29E9               	goto	i1l579
  9398  098D                     u262_20:	
  9399  098D                     i1l3590:	
  9400                           
  9401                           ;games.c: 853:         char current_analog = ADCON0&0x3C;
  9402  098D  081F               	movf	31,w	;volatile
  9403  098E  393C               	andlw	60
  9404  098F  00F0               	movwf	??_interrupt_handler
  9405  0990  0870               	movf	??_interrupt_handler,w
  9406  0991  00F5               	movwf	interrupt_handler@current_analog
  9407  0992                     i1l3592:	
  9408                           
  9409                           ;games.c: 854:         ADCON0 &= 0xC3;
  9410  0992  30C3               	movlw	195
  9411  0993  00F0               	movwf	??_interrupt_handler
  9412  0994  0870               	movf	??_interrupt_handler,w
  9413  0995  059F               	andwf	31,f	;volatile
  9414  0996                     i1l3594:	
  9415                           
  9416                           ;games.c: 855:         if(((current_analog) == 0x2C)||((current_analog) == 0x28)) {
  9417  0996  302C               	movlw	44
  9418  0997  0675               	xorwf	interrupt_handler@current_analog,w
  9419  0998  1903               	btfsc	3,2
  9420  0999  299B               	goto	u263_21
  9421  099A  299C               	goto	u263_20
  9422  099B                     u263_21:	
  9423  099B  29A2               	goto	i1l3598
  9424  099C                     u263_20:	
  9425  099C                     i1l3596:	
  9426  099C  3028               	movlw	40
  9427  099D  0675               	xorwf	interrupt_handler@current_analog,w
  9428  099E  1D03               	btfss	3,2
  9429  099F  29A1               	goto	u264_21
  9430  09A0  29A2               	goto	u264_20
  9431  09A1                     u264_21:	
  9432  09A1  29C5               	goto	i1l3608
  9433  09A2                     u264_20:	
  9434  09A2                     i1l3598:	
  9435                           
  9436                           ;games.c: 856:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  9437  09A2  081E               	movf	30,w	;volatile
  9438  09A3  00DE               	movwf	_joystick_x_pos+1
  9439  09A4  1683               	bsf	3,5	;RP0=1, select bank1
  9440  09A5  1303               	bcf	3,6	;RP1=0, select bank1
  9441  09A6  081E               	movf	30,w	;volatile
  9442  09A7  1283               	bcf	3,5	;RP0=0, select bank0
  9443  09A8  1303               	bcf	3,6	;RP1=0, select bank0
  9444  09A9  00DD               	movwf	_joystick_x_pos
  9445                           
  9446                           ;games.c: 857:             switch(current_player) {
  9447  09AA  29B5               	goto	i1l3606
  9448  09AB                     i1l3600:	
  9449                           
  9450                           ;games.c: 859:                     ADCON0 |= 0x24;
  9451  09AB  3024               	movlw	36
  9452  09AC  00F0               	movwf	??_interrupt_handler
  9453  09AD  0870               	movf	??_interrupt_handler,w
  9454  09AE  049F               	iorwf	31,f	;volatile
  9455                           
  9456                           ;games.c: 860:                     break;
  9457  09AF  29E8               	goto	i1l587
  9458  09B0                     i1l3602:	
  9459                           
  9460                           ;games.c: 862:                     ADCON0 |= 0x30;
  9461  09B0  3030               	movlw	48
  9462  09B1  00F0               	movwf	??_interrupt_handler
  9463  09B2  0870               	movf	??_interrupt_handler,w
  9464  09B3  049F               	iorwf	31,f	;volatile
  9465                           
  9466                           ;games.c: 863:                     break;
  9467  09B4  29E8               	goto	i1l587
  9468  09B5                     i1l3606:	
  9469  09B5  0860               	movf	_current_player,w
  9470  09B6  00F0               	movwf	??_interrupt_handler
  9471  09B7  01F1               	clrf	??_interrupt_handler+1
  9472                           
  9473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9474                           ; Switch size 1, requested type "simple"
  9475                           ; Number of cases is 1, Range of values is 0 to 0
  9476                           ; switch strategies available:
  9477                           ; Name         Instructions Cycles
  9478                           ; simple_byte            4     3 (average)
  9479                           ; direct_byte           11     8 (fixed)
  9480                           ; jumptable            260     6 (fixed)
  9481                           ;	Chosen strategy is simple_byte
  9482  09B8  0871               	movf	??_interrupt_handler+1,w
  9483  09B9  3A00               	xorlw	0	; case 0
  9484  09BA  1903               	skipnz
  9485  09BB  29BD               	goto	i1l5162
  9486  09BC  29E8               	goto	i1l587
  9487  09BD                     i1l5162:	
  9488                           
  9489                           ; Switch size 1, requested type "simple"
  9490                           ; Number of cases is 2, Range of values is 0 to 1
  9491                           ; switch strategies available:
  9492                           ; Name         Instructions Cycles
  9493                           ; simple_byte            7     4 (average)
  9494                           ; direct_byte           14     8 (fixed)
  9495                           ; jumptable            260     6 (fixed)
  9496                           ;	Chosen strategy is simple_byte
  9497  09BD  0870               	movf	??_interrupt_handler,w
  9498  09BE  3A00               	xorlw	0	; case 0
  9499  09BF  1903               	skipnz
  9500  09C0  29AB               	goto	i1l3600
  9501  09C1  3A01               	xorlw	1	; case 1
  9502  09C2  1903               	skipnz
  9503  09C3  29B0               	goto	i1l3602
  9504  09C4  29E8               	goto	i1l587
  9505  09C5                     i1l3608:	
  9506                           
  9507                           ;games.c: 866:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  9508  09C5  081E               	movf	30,w	;volatile
  9509  09C6  00DC               	movwf	_joystick_y_pos+1
  9510  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  9511  09C8  1303               	bcf	3,6	;RP1=0, select bank1
  9512  09C9  081E               	movf	30,w	;volatile
  9513  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  9514  09CB  1303               	bcf	3,6	;RP1=0, select bank0
  9515  09CC  00DB               	movwf	_joystick_y_pos
  9516                           
  9517                           ;games.c: 867:             switch(current_player) {
  9518  09CD  29D8               	goto	i1l3616
  9519  09CE                     i1l3610:	
  9520                           
  9521                           ;games.c: 869:                     ADCON0 |= 0x2C;
  9522  09CE  302C               	movlw	44
  9523  09CF  00F0               	movwf	??_interrupt_handler
  9524  09D0  0870               	movf	??_interrupt_handler,w
  9525  09D1  049F               	iorwf	31,f	;volatile
  9526                           
  9527                           ;games.c: 870:                     break;
  9528  09D2  29E8               	goto	i1l587
  9529  09D3                     i1l3612:	
  9530                           
  9531                           ;games.c: 872:                     ADCON0 |= 0x28;
  9532  09D3  3028               	movlw	40
  9533  09D4  00F0               	movwf	??_interrupt_handler
  9534  09D5  0870               	movf	??_interrupt_handler,w
  9535  09D6  049F               	iorwf	31,f	;volatile
  9536                           
  9537                           ;games.c: 873:                     break;
  9538  09D7  29E8               	goto	i1l587
  9539  09D8                     i1l3616:	
  9540  09D8  0860               	movf	_current_player,w
  9541  09D9  00F0               	movwf	??_interrupt_handler
  9542  09DA  01F1               	clrf	??_interrupt_handler+1
  9543                           
  9544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9545                           ; Switch size 1, requested type "simple"
  9546                           ; Number of cases is 1, Range of values is 0 to 0
  9547                           ; switch strategies available:
  9548                           ; Name         Instructions Cycles
  9549                           ; simple_byte            4     3 (average)
  9550                           ; direct_byte           11     8 (fixed)
  9551                           ; jumptable            260     6 (fixed)
  9552                           ;	Chosen strategy is simple_byte
  9553  09DB  0871               	movf	??_interrupt_handler+1,w
  9554  09DC  3A00               	xorlw	0	; case 0
  9555  09DD  1903               	skipnz
  9556  09DE  29E0               	goto	i1l5164
  9557  09DF  29E8               	goto	i1l587
  9558  09E0                     i1l5164:	
  9559                           
  9560                           ; Switch size 1, requested type "simple"
  9561                           ; Number of cases is 2, Range of values is 0 to 1
  9562                           ; switch strategies available:
  9563                           ; Name         Instructions Cycles
  9564                           ; simple_byte            7     4 (average)
  9565                           ; direct_byte           14     8 (fixed)
  9566                           ; jumptable            260     6 (fixed)
  9567                           ;	Chosen strategy is simple_byte
  9568  09E0  0870               	movf	??_interrupt_handler,w
  9569  09E1  3A00               	xorlw	0	; case 0
  9570  09E2  1903               	skipnz
  9571  09E3  29CE               	goto	i1l3610
  9572  09E4  3A01               	xorlw	1	; case 1
  9573  09E5  1903               	skipnz
  9574  09E6  29D3               	goto	i1l3612
  9575  09E7  29E8               	goto	i1l587
  9576  09E8                     i1l587:	
  9577                           ;games.c: 875:         }
  9578                           
  9579                           
  9580                           ;games.c: 876:         ADIF = 0;
  9581  09E8  130C               	bcf	12,6	;volatile
  9582  09E9                     i1l579:	
  9583                           ;games.c: 877:     }
  9584                           
  9585                           
  9586                           ;games.c: 878:     if(TMR2IF) {
  9587  09E9  1C8C               	btfss	12,1	;volatile
  9588  09EA  29EC               	goto	u265_21
  9589  09EB  29ED               	goto	u265_20
  9590  09EC                     u265_21:	
  9591  09EC  29F7               	goto	i1l594
  9592  09ED                     u265_20:	
  9593  09ED                     i1l3618:	
  9594                           
  9595                           ;games.c: 879:         event_delay_count--;
  9596  09ED  3001               	movlw	1
  9597  09EE  02FA               	subwf	_event_delay_count,f
  9598                           
  9599                           ;games.c: 880:         if(event_delay_count == 0) {
  9600  09EF  087A               	movf	_event_delay_count,w
  9601  09F0  1D03               	btfss	3,2
  9602  09F1  29F3               	goto	u266_21
  9603  09F2  29F4               	goto	u266_20
  9604  09F3                     u266_21:	
  9605  09F3  29F6               	goto	i1l593
  9606  09F4                     u266_20:	
  9607  09F4                     i1l3620:	
  9608                           
  9609                           ;games.c: 881:             event_enabled = 1;
  9610  09F4  01E5               	clrf	_event_enabled
  9611  09F5  0AE5               	incf	_event_enabled,f
  9612  09F6                     i1l593:	
  9613                           ;games.c: 882:         }
  9614                           
  9615                           
  9616                           ;games.c: 883:         TMR2IF = 0;
  9617  09F6  108C               	bcf	12,1	;volatile
  9618  09F7                     i1l594:	
  9619  09F7  0874               	movf	??_interrupt_handler+4,w
  9620  09F8  008A               	movwf	10
  9621  09F9  0873               	movf	??_interrupt_handler+3,w
  9622  09FA  0084               	movwf	4
  9623  09FB  0E72               	swapf	(??_interrupt_handler+2)^(0+4294967168),w
  9624  09FC  0083               	movwf	3
  9625  09FD  0EFE               	swapf	btemp,f
  9626  09FE  0E7E               	swapf	btemp,w
  9627  09FF  0009               	retfie
  9628  0A00                     __end_of_interrupt_handler:	
  9629  007E                     btemp	set	126	;btemp
  9630  007E                     wtemp0	set	126
  9631                           
  9632                           	psect	intentry
  9633  0004                     __pintentry:	
  9634                           ;incstack = 0
  9635                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0]
  9636                           
  9637  0004                     interrupt_function:	
  9638  007E                     saved_w	set	btemp
  9639  0004  00FE               	movwf	btemp
  9640  0005  0E03               	swapf	3,w
  9641  0006  00F2               	movwf	??_interrupt_handler+2
  9642  0007  0804               	movf	4,w
  9643  0008  00F3               	movwf	??_interrupt_handler+3
  9644  0009  080A               	movf	10,w
  9645  000A  00F4               	movwf	??_interrupt_handler+4
  9646  000B  120A  158A  296C   	ljmp	_interrupt_handler


Data Sizes:
    Strings     335
    Constant    64
    Data        11
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     59      78
    BANK1            80      0      63
    BANK3            96      0      64
    BANK2            96      0       0

Pointer List with Targets:

    end_screen@second_row	PTR unsigned char  size(2) Largest target is 17
		 -> STR_29(CODE[11]), STR_27(CODE[13]), STR_25(CODE[13]), STR_15(CODE[14]), 
		 -> STR_13(CODE[16]), STR_11(CODE[14]), STR_9(CODE[13]), STR_7(CODE[17]), 
		 -> STR_5(CODE[14]), 

    end_screen@first_row	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_28(CODE[14]), STR_26(CODE[13]), STR_24(CODE[13]), STR_14(CODE[14]), 
		 -> STR_12(CODE[14]), STR_10(CODE[14]), STR_8(CODE[14]), STR_6(CODE[14]), 
		 -> STR_4(CODE[14]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_set_custom_char@data	PTR const unsigned char  size(2) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_35(CODE[7]), STR_34(CODE[6]), STR_33(CODE[12]), STR_32(CODE[13]), 
		 -> STR_31(CODE[17]), STR_30(CODE[16]), STR_29(CODE[11]), STR_28(CODE[14]), 
		 -> STR_27(CODE[13]), STR_26(CODE[13]), STR_25(CODE[13]), STR_24(CODE[13]), 
		 -> STR_23(CODE[13]), STR_22(CODE[17]), STR_21(CODE[14]), STR_20(CODE[9]), 
		 -> STR_19(CODE[12]), STR_18(CODE[16]), STR_17(CODE[14]), STR_16(CODE[13]), 
		 -> STR_15(CODE[14]), STR_14(CODE[14]), STR_13(CODE[16]), STR_12(CODE[14]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_9(CODE[13]), STR_8(CODE[14]), 
		 -> STR_7(CODE[17]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[16]), STR_1(CODE[16]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_concentration_gameboard_init
    _simon_says_title_screen->_lcd_puts
    _simon_says_game_loop->_countdown
    _simon_says_game_loop->_display_simon_says_scoreboard
    _simon_says_game_loop->_play_pattern
    _simon_says_game_loop->_simon_says_check_input
    _simon_says_check_input->___awdiv
    _simon_says_get_input->_turn_on_led
    _play_pattern->___awdiv
    _generate_pattern->___awdiv
    _display_simon_says_scoreboard->_lcd_putch
    _countdown->_lcd_putch
    _simon_says_game_end->_end_screen
    _lcd_init->_lcd_clear
    _concentration_title_screen->_display_concentration_gameboard
    _concentration_title_screen->_display_concentration_scoreboard
    _concentration_gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _concentration_game_loop->_check_for_match
    _update_cursor->_lcd_putch
    _get_current_char->_get_cursor_index
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_concentration_gameboard
    _check_for_match->_display_concentration_scoreboard
    _display_concentration_scoreboard->_lcd_putch
    ___awdiv->___awmod
    _display_concentration_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _concentration_game_end->_end_screen
    _end_screen->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  344820
                                             55 BANK0      4     4      0
                            _DelayMs
             _concentration_game_end
            _concentration_game_loop
       _concentration_gameboard_init
         _concentration_title_screen
                      _joystick_init
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                          _lcd_putch
                           _lcd_puts
                _simon_says_game_end
               _simon_says_game_loop
            _simon_says_title_screen
                          _time_init
 ---------------------------------------------------------------------------------
 (1) _time_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _simon_says_title_screen                              0     0      0   18615
                            _DelayMs
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _simon_says_game_loop                                 0     0      0   88320
                          _countdown
      _display_simon_says_scoreboard
                   _generate_pattern
                       _play_pattern
             _simon_says_check_input
 ---------------------------------------------------------------------------------
 (2) _simon_says_check_input                               6     6      0   21889
                                             16 BANK0      6     6      0
                            ___awdiv
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
               _simon_says_get_input
 ---------------------------------------------------------------------------------
 (3) _simon_says_get_input                                 3     3      0    1908
                                              3 BANK0      3     3      0
                            _DelayMs
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (2) _play_pattern                                         6     6      0   18855
                                             16 BANK0      6     6      0
                            _DelayMs
                            ___awdiv
                          _lcd_clear
                           _lcd_puts
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (2) _generate_pattern                                     4     4      0    4857
                                             16 BANK0      4     4      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _display_simon_says_scoreboard                        2     2      0   26109
                                             20 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _countdown                                            2     2      0   16610
                                             20 BANK0      2     2      0
                            _DelayMs
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _simon_says_game_end                                  0     0      0   26502
                         _end_screen
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    9830
                                             10 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _concentration_title_screen                           0     0      0   54048
                            _DelayMs
    _display_concentration_gameboard
   _display_concentration_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _concentration_gameboard_init                         2     2      0   20911
                                             53 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    5037
                                             16 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    4595
                                             16 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  8     3      5    4595
                                              8 BANK0      8     3      5
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _concentration_game_loop                              2     2      0   75852
                                             25 BANK0      2     2      0
                            _DelayMs
                    _check_for_match
    _display_concentration_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    9889
                                             20 BANK0      4     3      1
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _get_current_char                                     1     1      0      93
                                              1 BANK0      1     1      0
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    9194
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      3     3      0   40035
                                             22 BANK0      3     3      0
                            _DelayMs
    _display_concentration_gameboard
   _display_concentration_scoreboard
                   _get_cursor_index
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (3) _get_cursor_index                                     1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_concentration_scoreboard                     2     2      0   20626
                                             20 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2965
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _display_concentration_gameboard                      2     2      0   14807
                                             20 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    3590
                                             16 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _concentration_game_end                               0     0      0   28336
                            _DelayMs
                         _end_screen
 ---------------------------------------------------------------------------------
 (2) _end_screen                                          15    11      4   26502
                                             13 BANK0     15    11      4
                            _DelayMs
                            ___awmod
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (4) _turn_on_led                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _play_tone                                            5     2      3    2613
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             5     1      4    5694
                                              8 BANK0      5     1      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             4     2      2    5604
                                              8 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    5483
                                              8 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            6     3      3    2178
                                              2 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (4) _Delay20us                                            2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _DelayMs                                              2     0      2    1834
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2773
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    6     6      0      45
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _concentration_game_end
     _DelayMs
     _end_screen
       _DelayMs
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
   _concentration_game_loop
     _DelayMs
     _check_for_match
       _DelayMs
       _display_concentration_gameboard
         _lcd_clear
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _display_concentration_scoreboard
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
       _play_tone
       _turn_on_led
     _display_concentration_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_current_char
         _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
   _concentration_gameboard_init
     _get_current_char
       _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
   _concentration_title_screen
     _DelayMs
     _display_concentration_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_concentration_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _joystick_init
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_goto
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_putch
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     _lcd_write (ARG)
       _Delay20us
   _lcd_puts
     _lcd_write
       _Delay20us
   _simon_says_game_end
     _end_screen
       _DelayMs
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
   _simon_says_game_loop
     _countdown
       _DelayMs
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_simon_says_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _generate_pattern
       _DelayMs
       ___awdiv
         ___awmod (ARG)
     _play_pattern
       _DelayMs
       ___awdiv
         ___awmod (ARG)
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
     _simon_says_check_input
       ___awdiv
         ___awmod (ARG)
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _simon_says_get_input
         _DelayMs
         _turn_on_led
   _simon_says_title_screen
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _time_init

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3F       7       78.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3B      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D9      12        0.0%
ABS                  0      0      D9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 16:18:40 2020

                         _joystick_pressed 0061                                          l9 1291  
             generate_pattern@current_byte 0033                                          pc 0002  
                      _simon_says_game_end 178D                                __CFG_CP$OFF 0000  
                            _update_cursor 08D9                                         l14 12C8  
                                       l23 129F                                         l41 132E  
                                       l18 12DC                                         l26 15AC  
                                       l35 1403                                         l44 15FE  
                                       l29 12F6                                         l38 12B1  
                                       l49 1653                                         _GO 00F9  
                             ___awdiv@sign 002D                                         fsr 0004  
                     _simon_says_game_loop 12F7                                        l301 17FF  
                                      l400 141B                                        l304 1310  
                                      l401 143E                                        l322 0D8A  
                                      l411 01A1                                        l317 0D81  
                                      l430 155D                                        l510 068E  
                                      l342 0E97                                        l423 023C  
                                      l503 0626                                        l327 0E85  
                                      l319 0D89                                        l344 0E9D  
                                      l328 0E84                                        l417 0201  
                                      l513 06B0                                        l505 0699  
                                      l433 0896                                        l345 0EAA  
                                      l337 0E7A                                        l265 052F  
                                      l442 0B67                                        l363 0FFF  
                                      l532 0770                                        l508 0697  
                                      l436 08A5                                        l380 07F3  
                                      l372 02E8                                        l269 054A  
                                      l447 145D                                        l551 096B  
                                      l439 08D8                                        l383 1755  
                                      l448 1483                                        l472 14C8  
                                      l288 0613                                        l393 140C  
                                      l529 076E                                        l377 150F  
                                      l386 1764                                        l395 140E  
                                      l467 0A93                                        l571 137B  
                                      l564 1351                                        l396 1410  
                                      l476 07FF                                        l556 13D3  
                                      l565 1354                                        l397 1412  
                                      l485 16B2                                        l389 178C  
                                      l398 1415                                        l399 1418  
                                      l495 0C76                                        l559 12C3  
                                      l568 13A5                                        l833 171B  
                                      l498 061D                                        l499 0685  
                                      l846 085C                                        _GIE 005F  
                                      _RB2 0032                                        _RB5 0035  
                                      _RC5 003D                                        _RC6 003E  
                                      _RC7 003F                                        _PR2 0092  
                             __CFG_CPD$OFF 0000                                        _SCS 0478  
                                      fsr0 0004                                        indf 0000  
                             ___awmod@sign 0026            __end_of_simon_says_title_screen 178D  
                             __CFG_FOSC$HS 0000                     _simon_says_check_input 0C77  
             ??_concentration_title_screen 0036                       _simon_says_get_input 0D8A  
                             __CFG_LVP$OFF 0000                             ?_toggle_cursor 0070  
                     ?_simon_says_game_end 0070                              lcd_clear@port 0028  
                                     l4000 0829                                       l4010 0848  
                                     l4002 082D                                       l4004 0831  
                                     l4012 084E                                       l4020 15FF  
                                     l4100 0E57                                       l4014 0853  
                                     l4006 083B                                       l4030 1633  
                                     l4110 0E75                                       l4102 0E65  
                                     l4016 0858                                       l4008 0841  
                                     l4200 00DB                                       l4032 163B  
                                     l4120 0EA7                                       l4112 0E7D  
                                     l4104 0E66                                       l4040 0D91  
                                     l4130 1342                                       l4210 0122  
                                     l4202 00E7                                       l4034 163F  
                                     l4026 1602                                       l4114 0E88  
                                     l4106 0E69                                       l4050 0DB7  
                                     l4042 0D9E                                       l4132 1345  
                                     l4124 132F                                       l4220 0157  
                                     l4212 0138                                       l4204 00ED  
                                     l4140 0AA3                                       l4036 1645  
                                     l4028 161B                                       l4300 0257  
                                     l4116 0E8E                                       l4108 0E6F  
                                     l4060 0DD7                                       l4052 0DBA  
                                     l4044 0DA4                                       l4134 134B  
                                     l4126 1335                                       l4230 0199  
                                     l4222 015D                                       l4214 0141  
                                     l4206 0103                                       l4150 143F  
                                     l4142 0AAF                                       l4302 0274  
                                     l4118 0E9E                                       l4070 0DF3  
                                     l4062 0DDD                                       l4046 0DA8  
                                     l4054 0DC0                                       l4038 0D90  
                                     l4136 134C                                       l4128 1341  
                                     l4240 01AF                                       l4232 019C  
                                     l4224 0173                                       l4216 0147  
                                     l4208 011C                                       l4160 1453  
                                     l4152 144A                                       l4144 0B0B  
                                     l4304 027E                                       l4312 02B7  
                                     l4080 0E17                                       l4064 0DE1  
                                     l4072 0DF9                                       l4056 0DC6  
                                     l4048 0DB6                                       l4400 0D55  
                                     l4250 01EA                                       l4242 01B9  
                                     l4234 01A5                                       l4226 0181  
                                     l4218 014D                                       l4162 146D  
                                     l4146 0B1A                                       l4138 0A94  
                                     l4170 1288                                       l4306 0291  
                                     l4314 02CE                                       l4330 0EFE  
                                     l4322 0EAB                                       l4082 0E1B  
                                     l4090 0E33                                       l4074 0DFF  
                                     l4066 0DEF                                       l4058 0DC8  
                                     l4410 0D87                                       l4402 0D59  
                                     l4260 020A                                       l4252 01F9  
                                     l4244 01BF                                       l4236 01A9  
                                     l4228 018A                                       l4180 0072  
                                     l4164 1473                                       l4148 0B48  
                                     l4500 13BC                                       l4420 165D  
                                     l4172 1290                                       l4308 02A4  
                                     l4340 0F65                                       l4332 0F22  
                                     l4324 0EBA                                       l4092 0E39  
                                     l4084 0E29                                       l4068 0DF0  
                                     l4076 0E02                                       l4404 0D6B  
                                     l4262 020F                                       l4254 01FC  
                                     l4246 01D5                                       l4238 01AA  
                                     l4190 0083                                       l4174 0055  
                                     l4166 1479                                       l4158 144D  
                                     l4502 13C6                                       l4510 08E2  
                                     l4430 168E                                       l4422 1661  
                                     l4270 0771                                       l5150 0FBF  
                                     l4350 0FA1                                       l4342 0F75  
                                     l4326 0EBE                                       l4086 0E2A  
                                     l4078 0E11                                       l4094 0E3E  
                                     l4406 0D76                                       l5160 1427  
                                     l4264 0219                                       l4256 0205  
                                     l4248 01DE                                       l4192 0099  
                                     l4176 0059                                       l4440 0B75  
                                     l4504 13C9                                       l4168 12B2  
                                     l4520 0904                                       l4512 08E7  
                                     l4416 0A00                                       l4432 16A8  
                                     l4424 1679                                       l4280 14C9  
                                     l4272 077C                                       l5152 02C0  
                                     l4360 0FD3                                       l4352 0FA7  
                                     l4344 0F7B                                       l4336 0F46  
                                     l4328 0EDA                                       l4096 0E4D  
                                     l4088 0E2D                                       l4408 0D7D  
                                     l4600 1393                                       l5144 0597  
                                     l4266 021F                                       l4258 0209  
                                     l4194 00A6                                       l4186 0073  
                                     l4178 006F                                       l4450 0BA7  
                                     l4442 0B93                                       l4522 0906  
                                     l5154 08FC                                       l4514 08EC  
                                     l4530 0920                                       l4506 08DC  
                                     l4426 1680                                       l4434 16AC  
                                     l4418 1654                                       l4290 14F1  
                                     l4282 14D4                                       l4274 078B  
                                     l4362 0FDC                                       l4346 0F8B  
                                     l4338 0F5F                                       l4098 0E53  
                                     l5146 0D38                                       l4610 1398  
                                     l4602 1394                                       l3900 12DD  
                                     l4268 0235                                       l4196 00B8  
                                     l4188 007D                                       l4460 0BDB  
                                     l4452 0BB6                                       l4444 0B98  
                                     l4436 0B6B                                       l5156 0918  
                                     l4524 090B                                       l4516 08F1  
                                     l4532 0933                                       l4508 08DD  
                                     l4700 0692                                       l4428 1689  
                                     l4292 14FC                                       l4276 0797  
                                     l4348 0F91                                       l5148 0F51  
                                     l4356 0FB7                                       l4364 0FE2  
                                     l4380 0C92                                       l4620 139D  
                                     l4612 1399                                       l4604 1395  
                                     l3902 12EB                                       l3910 13F3  
                                     l4198 00CE                                       l4470 0C0C  
                                     l4462 0BDE                                       l4454 0BB9  
                                     l4446 0B9D                                       l4438 0B70  
                                     l4534 094E                                       l5158 0928  
                                     l4526 0910                                       l4518 08F4  
                                     l4710 06BE                                       l4702 069F  
                                     l4630 148F                                       l4550 15AD  
                                     l4294 1502                                       l4278 07C5  
                                     l4366 0FF4                                       l4358 0FCD  
                                     l4390 0D09                                       l4382 0CA1  
                                     l4622 139E                                       l4614 139A  
                                     l4606 1396                                       l3904 13D4  
                                     l3912 12A3                                       l4480 0C3F  
                                     l4472 0C1B                                       l4464 0BF9  
                                     l4456 0BC6                                       l4448 0BA1  
                                     l4536 0955                                       l4720 06ED  
                                     l4704 06A4                                       l4712 06BF  
                                     l4640 149E                                       l4560 15E3  
                                     l4552 15B2                                       l4800 17DE  
                                     l4296 1506                                       l4288 14DA  
                                     l4384 0CA5                                       l4376 0C77  
                                     l4624 139F                                       l4616 139B  
                                     l4608 1397                                       l3914 1314  
                                     l3906 13D5                                       l3922 141F  
                                     l3930 07FB                                       l4490 0C6B  
                                     l4482 0C4E                                       l4474 0C1E  
                                     l4466 0BFB                                       l4458 0BCC  
                                     l4730 0720                                       l4722 06F4  
                                     l4714 06CC                                       l4706 06A8  
                                     l4650 14B9                                       l4642 14A4  
                                     l4626 1484                                       l4570 1363  
                                     l4562 15EE                                       l4554 15BA  
                                     l4802 17E4                                       l4298 023D  
                                     l4394 0D2D                                       l4386 0CC1  
                                     l4378 0C86                                       l4618 139C  
                                     l4810 04A9                                       l3916 1323  
                                     l3908 13EB                                       l3940 16B6  
                                     l4492 0C6D                                       l4484 0C5D  
                                     l4476 0C2D                                       l4468 0C01  
                                     l4740 0751                                       l4732 072F  
                                     l4724 06FF                                       l4716 06D3  
                                     l4708 06AE                                       l4652 14C3  
                                     l4644 14AD                                       l4636 1492  
                                     l4628 148A                                       l4660 089C  
                                     l4580 136D                                       l4572 1365  
                                     l4564 1355                                       l4556 15C3  
                                     l4804 17F2                                       l4388 0CE5  
                                     l4396 0D46                                       l4820 04CF  
                                     l4812 04B4                                       l3870 1292  
                                     l3918 1407                                       l4750 151B  
                                     l3950 16CA                                       l3942 16BA  
                                     l3934 07FE                                       l4478 0C3C  
                                     l4486 0C61                                       l4494 13A6  
                                     l4742 075A                                       l4734 0736  
                                     l4726 070E                                       l4718 06DE  
                                     l4646 14B0                                       l4638 149A  
                                     l4670 08CD                                       l4662 08AB  
                                     l4654 085D                                       l4582 1370  
                                     l4574 1367                                       l4566 135F  
                                     l4558 15D3                                       l4398 0D52  
                                     l4590 137C                                       l4830 04FF  
                                     l4822 04D4                                       l4814 04BF  
                                     l4806 04A1                                       l3880 12C4  
                                     l4760 1552                                       l4752 1523  
                                     l3960 16E0                                       l3952 16CE  
                                     l3944 16BF                                       l3928 07F7  
                                     l4488 0C67                                       l4496 13AD  
                                     l4744 0760                                       l4736 0741  
                                     l4728 0715                                       l4680 0621  
                                     l4648 14B6                                       l4672 08CE  
                                     l4664 08B4                                       l4656 087B  
                                     l4584 1373                                       l4576 136B  
                                     l4568 1360                                       l4592 1382  
                                     l4840 052D                                       l4832 050E  
                                     l4824 04D7                                       l4816 04C4  
                                     l4808 04A4                                       l3882 12C5  
                                     l3890 1561                                       l4754 1531  
                                     l3970 1700                                       l3962 16E4  
                                     l3954 16D0                                       l3946 16C1  
                                     l3938 16B3                                       l4498 13B7  
                                     l4746 0765                                       l4738 074C  
                                     l4690 0640                                       l4682 062A  
                                     l4674 08D3                                       l4666 08BF  
                                     l4658 0887                                       l4586 1375  
                                     l4578 136C                                       l4770 176A  
                                     l4762 171C                                       l4594 1388  
                                     l4850 0541                                       l4842 0533  
                                     l4834 051A                                       l4826 04E4  
                                     l4818 04CC                                       l3884 12C7  
                                     l3876 1295                                       l3892 1574  
                                     l4756 1537                                       l4748 1510  
                                     l3972 1707                                       l3964 16E8  
                                     l3956 16D6                                       l3948 16C5  
                                     l4692 064E                                       l4684 062F  
                                     l4676 0616                                       l4668 08CA  
                                     l4588 1379                                       l4780 12FC  
                                     l4772 1773                                       l4764 173A  
                                     l4596 138B                                       l4860 058B  
                                     l4852 0551                                       l4844 0534  
                                     l4836 0526                                       l4828 04F3  
                                     l3990 0810                                       l3982 0802  
                                     l3886 12CC                                       l3878 1299  
                                     l3894 1579                                       l4758 1545  
                                     l3966 16F9                                       l3958 16D9  
                                     l3974 170D                                       l4694 0679  
                                     l4686 0634                                       l4678 061C  
                                     l4790 17A8                                       l4782 1301  
                                     l4774 177E                                       l4766 1746  
                                     l4598 1392                                       l4870 05B8  
                                     l4854 055E                                       l4846 0539  
                                     l4838 052C                                       _ADIE 0466  
                                     l3992 0814                                       l3984 0805  
                                     l3888 12D4                                       l3896 158A  
                                     l3976 1712                                       l3968 16FF  
                                     l4696 067F                                       l4688 063D  
                                     l4792 17B6                                       l4784 178D  
                                     l4776 1789                                       l4768 175B  
                                     l4880 05D8                                       l4864 058D  
                                     l4856 056D                                       l4848 053D  
                                     l4872 05BC                                       _ADIF 0066  
                                     l3994 0819                                       l3986 0809  
                                     l3898 1596                                       l3978 1717  
                                     l4698 0689                                       l4794 17BC  
                                     l4786 1794                                       l4778 12F7  
                                     l4882 05DF                                       l4890 05FC  
                                     l4866 059F                                       l4858 0586  
                                     l4874 05C3                                       l3996 081F  
                                     l3988 080E                                       l4796 17CA  
                                     l4788 17A2                                       l4892 0602  
                                     l4884 05EA                                       l4876 05C4  
                                     l4868 05B5                                       l3998 0822  
                                     l4798 17D0                                       l4894 0607  
                                     l4886 05EF                                       l4878 05CD  
                                     l4896 060E                                       l4888 05F6  
                                     STR_1 03B4                                       STR_2 03A4  
                                     STR_3 0419                                       STR_4 040A  
                                     STR_5 03EE                                       STR_6 040A  
                                     STR_7 0352                                       STR_8 040A  
                                     STR_9 0433                                       _T0IF 005A  
                                     u3000 0DFF                                       u3001 0DFE  
                                     u3010 0E11                                       u3011 0E10  
                                     u3100 1479                                       u3020 0E17  
                                     u3101 1478                                       u3021 0E16  
                                     u3110 014D                                       u3030 0E39  
                                     u3111 014C                                       u3031 0E38  
                                     u3015 0E0D                                       u3120 01A5  
                                     u3040 0E4D                                       u3121 01A4  
                                     u3041 0E4C                                       u3130 01A9  
                                     u3050 0E53                                       u3131 01A8  
                                     u3051 0E52                                       u3140 01AF  
                                     u3204 0248                                       u3060 0E75  
                                     u3141 01AE                                       u3205 0246  
                                     u3061 0E74                                       u3045 0E49  
                                     u3150 0205                                       u3070 0E9D  
                                     u3310 0D52                                       u3151 0204  
                                     u3215 0286                                       u3071 0E9C  
                                     u3311 0D51                                       u3080 1351  
                                     u3160 0209                                       u3400 0B93  
                                     u3320 0D6B                                       u3081 1350  
                                     u3161 0208                                       u3401 0B92  
                                     u3225 0299                                       u3321 0D6A  
                                     u3305 0D22                                       u3170 020F  
                                     u3090 1453                                       u3410 0B98  
                                     u3330 0D7D                                       u3171 020E  
                                     u3091 1452                                       u3411 0B97  
                                     u3235 02AC                                       u3331 0D7C  
                                     u3180 023C                                       u3420 0BF9  
                                     u3500 0626                                       u3340 0D87  
                                     u3181 023B                                       u3421 0BF8  
                                     u3501 0625                                       u3245 0EF3  
                                     u3341 0D86                                       u3325 0D67  
                                     u2710 1403                                       u3430 13AD  
                                     u3510 062A                                       u3350 1658  
                                     u3190 1506                                       u3270 0FF4  
                                     u2711 1402                                       u3431 13AC  
                                     u3511 0629                                       u3191 1505  
                                     u3271 0FF3                                       u3255 0F17  
                                     u2720 07FB                                       u3440 0955  
                                     u3600 06A4                                       u3520 062F  
                                     u2705 1564                                       u2721 07FA  
                                     u3441 0954                                       u3601 06A3  
                                     u3521 062E                                       u3265 0F3B  
                                     u2810 170D                                       u2730 16BA  
                                     u3610 06CC                                       u3530 0634  
                                     u3370 1689                                       u3450 14A4  
                                     u2811 170C                                       u2731 16B9  
                                     u3611 06CB                                       u3531 0633  
                                     u3371 1688                                       u3451 14A3  
                                     u3275 0FF0                                       u2900 084E  
                                     u2820 1712                                       u2740 16C5  
                                     u3700 0751                                       u3620 06D3  
                                     u3540 064E                                       u3380 16B2  
                                     u3364 166A                                       u3460 089C  
                                     u2901 084D                                       u2821 1711  
                                     u2805 1701                                       u2741 16C4  
                                     u3701 0750                                       u3621 06D2  
                                     u3541 064D                                       u3381 16B1  
                                     u3365 1668                                       u3461 089B  
                                     u3285 0CDA                                       u2910 0853  
                                     u2830 0809                                       u2670 129F  
                                     u2750 16D6                                       u3390 0B70  
                                     u3710 0760                                       u3630 06ED  
                                     u3550 0689                                       u3470 08AB  
                                     u2911 0852                                       u2831 0808  
                                     u2671 129E                                       u2751 16D5  
                                     u3391 0B6F                                       u3711 075F  
                                     u3631 06EC                                       u3615 06C8  
                                     u3551 0688                                       u3471 08AA  
                                     u3295 0CFE                                       u2840 0814  
                                     u2680 12CC                                       u3720 0765  
                                     u3640 06F4                                       u3560 068E  
                                     u3480 061C                                       u3800 17D0  
                                     u2841 0813                                       u2681 12CB  
                                     u3721 0764                                       u3641 06F3  
                                     u3561 068D                                       u3481 061B  
                                     u3801 17CF                                       u2850 081F  
                                     u2690 12DC                                       u3730 1523  
                                     u2770 16E8                                       u3650 070E  
                                     u3570 0692                                       u3490 0621  
                                     u2930 1645                                       u3810 17E4  
                                     u2851 081E                                       u2691 12DB  
                                     u3731 1522                                       u2771 16E7  
                                     u3651 070D                                       u3635 06E9  
                                     u3571 0691                                       u3491 0620  
                                     u2931 1644                                       u3811 17E3  
                                     _PEIE 005E                                       u3740 1537  
                                     u3660 0715                                       u3580 0697  
                                     u2940 0D90                                       u3900 05F6  
                                     u3820 0533                                       u3741 1536  
                                     u2765 16DA                                       u3661 0714  
                                     u3581 0696                                       u2925 1605  
                                     u2941 0D8F                                       u3901 05F5  
                                     u3821 0532                                       u2870 0831  
                                     u2790 16F9                                       u3670 072F  
                                     u3590 069F                                       u2950 0D9E  
                                     u3750 175B                                       u3910 060E  
                                     u3830 0539                                       u2871 0830  
                                     u2791 16F8                                       u3671 072E  
                                     u3655 070A                                       u3591 069E  
                                     u2951 0D9D                                       u3751 175A  
                                     u3911 060D                                       u3831 0538  
                                     u2880 083B                                       u3680 0736  
                                     u2960 0DA4                                       u3760 176A  
                                     u3840 053D                                       u2881 083A  
                                     u2865 0823                                       u2785 16E9  
                                     u3681 0735                                       u2961 0DA3  
                                     u3761 1769                                       u3841 053C  
                                     u3690 074C                                       u3770 1794  
                                     u2970 0DC6                                       u3850 0550  
                                     u2795 16F5                                       u3691 074B  
                                     u3675 072B                                       u3771 1793  
                                     u2971 0DC5                                       u2955 0D9A  
                                     u3851 054F                                       u3780 17A8  
                                     u2980 0DD7                                       u3860 055E  
                                     u2885 0837                                       u3781 17A7  
                                     u2981 0DD6                                       u3861 055D  
                                     u3790 17BC                                       u2990 0DDD  
                                     u3870 056D                                       u2895 0842  
                                     u3791 17BB                                       u2991 0DDC  
                                     u3871 056C                                       u3880 05C3  
                                     u2985 0DD3                                       u3881 05C2  
                                     u3865 055A                                       u3890 05DF  
                                     u3891 05DE                                       u3875 0569  
                                     _TMR0 0001                                       _TMR1 000E  
                                     _TMR2 0011                                       _WPUB 0095  
                    make_custom_chars@club 032A                               __CFG_WRT$OFF 0000  
                                     _main 04A1                                       btemp 007E  
                          _check_for_match 0B68                               lcd_init@port 002A  
                                     start 000E                               lcd_goto@port 0028  
                            __CFG_IESO$OFF 0000                            __end_of_DelayMs 12DD  
                 ??_concentration_game_end 003C                              __CFG_MCLRE$ON 0000  
                           ?_update_cursor 0034        __size_of_concentration_title_screen 007C  
                    ?_simon_says_game_loop 0070                                      ?_main 0070  
                          __end_of___awdiv 171C                                      _CCPR1 0015  
                                    STR_10 040A                                      _CCPR2 001B  
                                    STR_11 03E0                                      STR_12 040A  
                                    STR_20 048B                                      STR_21 0418  
                                    STR_13 0374                                      STR_14 040A  
                                    STR_30 0384                                      STR_22 0363  
                                    STR_31 0363                                      STR_23 0467  
                                    STR_15 03C4                                      STR_32 0467  
                                    STR_16 045A                                      STR_24 0426  
                                    STR_33 0474                                      STR_25 0440  
                                    STR_17 03FC                              __CFG_WDTE$OFF 0000  
                                    STR_26 0426                                      STR_34 049B  
                                    STR_18 0394                                      STR_35 0494  
                                    STR_19 0474                                      STR_27 044D  
                                    STR_28 03D2                            __end_of___awmod 085D  
                                    STR_29 0480                                      _ANSEL 0188  
                          ___awdiv@divisor 0027                                      _T2CON 0012  
                                    i1l576 0988                                      i1l593 09F6  
                                    i1l577 0986                                      i1l594 09F7  
                                    i1l578 0987                                      i1l587 09E8  
                                    i1l579 09E9                            ___awdiv@counter 002C  
             __size_of_randomize_gameboard 005F                                      _PORTA 0005  
                                    _PORTB 0006                                      _PORTC 0007  
                                    _PORTD 0008                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
                                    _TRISD 0088                     make_custom_chars@heart 033A  
                    ?_simon_says_get_input 0070                     make_custom_chars@spade 0332  
                           __CFG_FCMEN$OFF 0000                     make_custom_chars@smile 034A  
                   make_custom_chars@skull 0322                                _turn_on_led 1404  
                                    _nRBPU 040F                      ??_simon_says_game_end 003C  
                                    _board 01B0                   ?_concentration_game_loop 0070  
                             lcd_puts@port 002A                             __CFG_BOREN$OFF 0000  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                              DelayMs@millis 0020  
                          __initialization 0011                               __end_of_main 0616  
                       __size_of_Delay20us 000E                           _generate_pattern 023D  
                                   ??_main 0057           display_concentration_gameboard@i 0035  
                          ??_toggle_cursor 0034                                     _ADCON0 001F  
                                   _ADCON1 009F                                     _CCP1M0 00B8  
                                   _CCP1M1 00B9                                     _CCP1M2 00BA  
                                   _CCP1M3 00BB                                     _CCP2M0 00E8  
                                   _CCP2M1 00E9                                     _CCP2M2 00EA  
                                   _CCP2M3 00EB                                     _CCP1IF 0062  
                                   _CCP2IE 0468                                     _CCP2IF 0068  
                  __end_of_check_for_match 0C77                                     _ADRESH 001E  
                                   _ADRESL 009E                           ___awdiv@dividend 0029  
              __end_ofmake_custom_chars@RH 0322                                     _ANSELH 0189  
                   update_cursor@direction 0034                                     i1l3600 09AB  
                                   i1l3610 09CE                                     i1l3602 09B0  
                                   i1l3620 09F4                                     i1l3612 09D3  
                                   i1l3606 09B5                                     i1l3616 09D8  
                                   i1l3608 09C5                                     i1l3618 09ED  
                                   i1l5162 09BD                                     i1l5164 09E0  
                                   i1l3580 096C                                     i1l3590 098D  
                                   i1l3582 0972                                     i1l3592 0992  
                                   i1l3584 0978                                     i1l3594 0996  
                                   i1l3586 0980                                     i1l3596 099C  
                                   i1l3588 0984                                     i1l3598 09A2  
                                   u260_20 0978                                     u260_21 0977  
                                   u261_20 0984                                     u261_21 0983  
                                   u262_20 098D                                     u262_21 098C  
                                   u263_20 099C                                     u263_21 099B  
                                ??_DelayMs 0022                                     u264_20 09A2  
                                   u264_21 09A1                                     u265_20 09ED  
                                   u265_21 09EC                                     u266_20 09F4  
                                   u266_21 09F3                                     u259_20 0972  
                                   u259_21 0971                                     _TMR1GE 0086  
                                   _TMR1CS 0081                                     _TMR2IE 0461  
                                   _TMR2IF 0061                                     _TMR1ON 0080  
                      _lcd_set_custom_char 15FF                             __CFG_PWRTE$OFF 0000  
                          ??_update_cursor 0035            __size_of_concentration_game_end 004E  
                         __end_of_lcd_init 15FF                           __end_of_lcd_goto 132F  
                         __end_of_lcd_puts 1404   __end_of_display_concentration_scoreboard 0B68  
__size_of_display_concentration_scoreboard 00D4         ??_display_concentration_scoreboard 0034  
        ?_display_concentration_scoreboard 0070           _display_concentration_scoreboard 0A94  
                                ??___awdiv 002B                                  ??___awmod 0024  
                                   _id_num 0078                     ??_simon_says_game_loop 0036  
                         ___awdiv@quotient 002E                            ___awmod@divisor 0020  
                            lcd_putch@port 0030                            ___awmod@counter 0025  
                     ?_lcd_set_custom_char 0028                     ??_simon_says_get_input 0023  
       __end_of_concentration_title_screen 08D9                 _concentration_title_screen 085D  
                             __pdataCOMMON 007B                                     saved_w 007E  
                __size_of_get_current_char 0012                          __end_of_Delay20us 12A0  
            update_cursor@move_delay_count 0037                              _event_enabled 0065  
                  __end_of__initialization 0051                  __size_of_get_cursor_index 000C  
                            lcd_write@mode 0027                              lcd_write@port 0023  
     __end_of_concentration_gameboard_init 14C9      __size_of_concentration_gameboard_init 0045  
             _concentration_gameboard_init 1484                             __pcstackCOMMON 0070  
                             __pidataBANK0 02FC                               __pidataBANK1 127A  
                    check_for_match@player 0038                      __end_of_joystick_init 137C  
                  ?_simon_says_check_input 0070                      ??_lcd_set_custom_char 002D  
                   _concentration_game_end 1510                         __size_of_lcd_clear 001A  
                       __size_of_lcd_putch 0012                         __size_of_lcd_write 004F  
                         ?_check_for_match 0070                                 __pbssBANK0 005B  
                               __pbssBANK1 00A0                                 __pbssBANK3 0190  
                       __size_of_countdown 0047                   ?_simon_says_title_screen 0070  
                      _randomize_gameboard 1654                                 __pmaintext 04A1  
            ?_concentration_gameboard_init 0070                                 __pintentry 0004  
                       __size_of_tmr0_init 000A                         __size_of_play_tone 0026  
           __end_of_simon_says_check_input 0D8A                              ?_play_pattern 0070  
             __end_ofmake_custom_chars@PIC 031A                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                 _end_screen 0055  
                     ?_randomize_gameboard 0070                         __size_of_time_init 002A  
                             ?_turn_on_led 0070                                  ?_lcd_init 002A  
                                ?_lcd_goto 0028                                  ?_lcd_puts 0028  
                               __stringtab 0300                     lcd_set_custom_char@row 002F  
                 make_custom_chars@diamond 0342       simon_says_check_input@current_option 0034  
                 __end_of_generate_pattern 02E9                                    _DelayMs 12C4  
               randomize_gameboard@current 0053                          __end_of_lcd_clear 12F7  
                randomize_gameboard@random 0054           __size_of_concentration_game_loop 015B  
                        __end_of_lcd_putch 12B2                                    ___awdiv 16B3  
                                  ___awmod 0802                          __end_of_lcd_write 15AD  
                           ??_play_pattern 0030             __end_ofmake_custom_chars@heart 0342  
           __end_ofmake_custom_chars@spade 033A             __end_ofmake_custom_chars@smile 0352  
           __end_ofmake_custom_chars@skull 032A                                    __ptext1 137C  
                                  __ptext2 171C                                    __ptext3 12F7  
                        __end_of_countdown 1510                                    __ptext4 0C77  
                                  __ptext5 0D8A                                    __ptext6 0EAB  
                                  __ptext7 023D                                    __ptext8 0771  
                                  __ptext9 14C9                                 _cursor_pos 0069  
                    ??_randomize_gameboard 0030                __end_of_simon_says_game_end 1800  
                         ___awmod@dividend 0022                           _get_current_char 12B2  
                                  _my_turn 007B                     get_cursor_index@cursor 0020  
                                  _visible 00A0                              _received_char 0079  
                                  clrloop0 1281                                 ??_lcd_init 002C  
                               ??_lcd_goto 002A                                 ??_lcd_puts 002C  
                     end_of_initialization 0051                          __end_of_tmr0_init 1292  
                        __end_of_play_tone 1355                             lcd_puts@string 0028  
                         _get_cursor_index 07F4                       play_tone@tone_period 0020  
                        __end_of_time_init 13A6                                 _scoreboard 006A  
                             __pstringtext 0300             ??_concentration_gameboard_init 0055  
            concentration_gameboard_init@i 0056                                ?_end_screen 002D  
              ?_concentration_title_screen 0070              lcd_set_custom_char@cg_address 002A  
                           _joystick_x_pos 005D                             _joystick_y_pos 005B  
                               _tone_delay 0076                      __end_of_toggle_cursor 13D4  
    __end_of_display_simon_says_scoreboard 07F4     __size_of_display_simon_says_scoreboard 0083  
            _display_simon_says_scoreboard 0771                       end_screen@second_row 002F  
                       _simon_says_pattern 00C0                                  _Delay20us 1292  
                     make_custom_chars@PIC 0312                      play_tone@duration_8ms 0022  
                            play_pattern@i 0035                      __end_of_update_cursor 096C  
                         turn_on_led@color 0022                              __pidataCOMMON 0003  
            __size_of_simon_says_game_loop 001A                    ?_concentration_game_end 0070  
                      start_initialization 0011              __size_of_simon_says_get_input 0121  
                     __size_of_turn_on_led 003B                                 countdown@i 0035  
                     __end_of_play_pattern 1000                                 ?_Delay20us 0070  
                      __size_of_end_screen 01E8                    _concentration_game_loop 0616  
                               init_fetch0 02E9                __end_of_lcd_set_custom_char 1654  
                              __pdataBANK0 006A                                __pdataBANK1 00D9  
           __end_of_concentration_game_end 155E           __size_of_simon_says_title_screen 0071  
                              __pbssCOMMON 0076                             _current_player 0060  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            _selected_tile 0062                          ?_generate_pattern 0070  
                                 ?_DelayMs 0020                     __size_of_joystick_init 0027  
                        __size_of_lcd_init 0052                          __size_of_lcd_goto 001E  
                        __size_of_lcd_puts 0030                               _current_char 0068  
           ?_display_simon_says_scoreboard 0070                         ??_generate_pattern 0030  
                 __size_of_check_for_match 010F                                _delay_loops 0066  
                 __end_of_get_current_char 12C4                                  _gameboard 006C  
                                _game_over 005F                                   ?___awdiv 0027  
                                 ?___awmod 0020                                  _lcd_clear 12DD  
                             _cursor_solid 0067                                  _lcd_putch 12A0  
                                _lcd_write 155E                    simon_says_check_input@i 0035  
                 __end_of_get_cursor_index 0800                          _interrupt_handler 096C  
                         main@selector_pos 005A                         ?_interrupt_handler 0070  
                                _countdown 14C9              __end_ofmake_custom_chars@club 0332  
                      ??_interrupt_handler 0070                           end_screen@colors 0034  
                        interrupt_function 0004                                ??_Delay20us 0020  
                ??_concentration_game_loop 0039                                  clear_ram0 1280  
                                _tmr0_init 1288                                  _play_tone 132F  
                      end_screen@first_row 002D                                  _time_init 137C  
              __end_of_randomize_gameboard 16B3    __end_of_display_concentration_gameboard 1484  
 __size_of_display_concentration_gameboard 0045          ??_display_concentration_gameboard 0034  
         ?_display_concentration_gameboard 0070            _display_concentration_gameboard 143F  
                               ?_lcd_clear 0028                  __end_of_interrupt_handler 0A00  
                            _joystick_init 1355                                 ?_lcd_putch 0030  
                  lcd_set_custom_char@data 0028                                __stringbase 0312  
                               ?_lcd_write 0022                               ??_end_screen 0031  
                  lcd_set_custom_char@port 002B                        make_custom_chars@RH 031A  
                               ?_countdown 0070                      __size_of_play_pattern 0155  
             __size_of_simon_says_game_end 0073                           __size_of_DelayMs 0019  
                               ?_tmr0_init 0070                                 ?_play_tone 0020  
                       __end_of_end_screen 023D                   ??_simon_says_check_input 0030  
                                 _p1_score 0064                                   _p2_score 0063  
                               ?_time_init 0070                    _simon_says_title_screen 171C  
                        _make_custom_chars 0A00                           __size_of___awdiv 0069  
                        ??_check_for_match 0036                           __size_of___awmod 005B  
                           ?_joystick_init 0070                               _play_pattern 0EAB  
                       ?_make_custom_chars 0070                         __end_of__stringtab 0312  
          __end_of_concentration_game_loop 0771           __end_ofmake_custom_chars@diamond 034A  
                      ??_make_custom_chars 0030                            end_screen@F1373 00D9  
                       main@game_selection 0059                                   __ptext10 178D  
                                 __ptext11 15AD                                   __ptext20 08D9  
                                 __ptext12 1288                                   __ptext21 12B2  
                                 __ptext13 1355                                   __ptext30 0055  
                                 __ptext22 13A6                                   __ptext14 085D  
                                 __ptext31 1404                                   __ptext23 0B68  
                                 __ptext15 1484                                   __ptext40 096C  
                                 __ptext32 132F                                   __ptext24 07F4  
                                 __ptext16 1654                                   __ptext33 13D4  
                                 __ptext25 0A94                                   __ptext17 0A00  
                                 __ptext34 1311                                   __ptext26 16B3  
                                 __ptext18 15FF                                   __ptext35 12DD  
                                 __ptext27 143F                                   __ptext19 0616  
                                 __ptext36 155E                                   __ptext28 12A0  
                                 __ptext37 1292                                   __ptext29 1510  
                                 __ptext38 12C4                                   __ptext39 0802  
                        __CFG_BOR4V$BOR21V 0000                                   _lcd_init 15AD  
                                 _lcd_goto 1311                                   _lcd_puts 13D4  
             __end_of_simon_says_game_loop 1311                              __size_of_main 0175  
                       lcd_putch@character 0033               __end_of_simon_says_get_input 0EAB  
                __end_of_make_custom_chars 0A94                     __size_of_toggle_cursor 002E  
                              ??_lcd_clear 002A                 __size_of_interrupt_handler 0094  
                 randomize_gameboard@F1396 0190                                ??_lcd_putch 0032  
                              ??_lcd_write 0025                      end_screen@color_index 003B  
                            ??_turn_on_led 0020                                ??_countdown 0034  
                                 init_ram0 02ED                                   intlevel1 0000  
                   __size_of_update_cursor 0093                              Delay20us@next 0021  
                              ??_tmr0_init 0020                                ??_play_tone 0023  
                                stringcode 030A                  ??_simon_says_title_screen 002D  
          __size_of_simon_says_check_input 0113                          ?_get_current_char 0070  
                          ??_joystick_init 0020                                ??_time_init 0020  
                        _event_delay_count 007A                         ??_get_current_char 0021  
                __size_of_generate_pattern 00AC            ??_display_simon_says_scoreboard 0034  
                  randomize_gameboard@used 0033                                 _OPTION_REG 0081  
                         lcd_goto@position 002B                          ?_get_cursor_index 0070  
             __size_of_lcd_set_custom_char 0055          simon_says_get_input@current_input 0025  
                                 stringtab 0300                         ??_get_cursor_index 0020  
                            _toggle_cursor 13A6                        __end_of_turn_on_led 143F  
          interrupt_handler@current_analog 0075                                end_screen@i 003A  
                         lcd_write@CmdChar 0022                 play_pattern@current_option 0034  
               __size_of_make_custom_chars 0094  
