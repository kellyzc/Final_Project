

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 20:59:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319                           
   320                           	psect	idataCOMMON
   321  07FD                     __pidataCOMMON:	
   322                           
   323                           ;initializer for _my_turn
   324  07FD  3401               	retlw	1
   325                           
   326                           	psect	idataBANK0
   327  0CD4                     __pidataBANK0:	
   328                           
   329                           ;initializer for _scoreboard
   330  0CD4  3408               	retlw	8
   331  0CD5  3400               	retlw	0
   332                           
   333                           ;initializer for _gameboard
   334  0CD6  3405               	retlw	5
   335  0CD7  3400               	retlw	0
   336                           
   337                           	psect	strings
   338  0200                     __pstrings:	
   339  0200                     stringtab:	
   340  0200                     __stringtab:	
   341  0200                     stringcode:	
   342                           ;	String table - string pointers are 1 byte each
   343                           
   344  0200                     stringdir:	
   345  0200  3002               	movlw	high stringdir
   346  0201  008A               	movwf	10
   347  0202  0804               	movf	4,w
   348  0203  0A84               	incf	4,f
   349  0204  0782               	addwf	2,f
   350  0205                     __stringbase:	
   351  0205  3400               	retlw	0
   352  0206                     __end_of__stringtab:	
   353  0206                     make_custom_chars@PIC:	
   354  0206  3418               	retlw	24
   355  0207  3418               	retlw	24
   356  0208  3414               	retlw	20
   357  0209  3404               	retlw	4
   358  020A  3404               	retlw	4
   359  020B  3403               	retlw	3
   360  020C  3402               	retlw	2
   361  020D  3403               	retlw	3
   362  020E                     __end_ofmake_custom_chars@PIC:	
   363  020E                     make_custom_chars@RH:	
   364  020E  341C               	retlw	28
   365  020F  3414               	retlw	20
   366  0210  3418               	retlw	24
   367  0211  3414               	retlw	20
   368  0212  3400               	retlw	0
   369  0213  3405               	retlw	5
   370  0214  3407               	retlw	7
   371  0215  3405               	retlw	5
   372  0216                     __end_ofmake_custom_chars@RH:	
   373  0216                     make_custom_chars@skull:	
   374  0216  340E               	retlw	14
   375  0217  3415               	retlw	21
   376  0218  3415               	retlw	21
   377  0219  341F               	retlw	31
   378  021A  340A               	retlw	10
   379  021B  340E               	retlw	14
   380  021C  340E               	retlw	14
   381  021D  3400               	retlw	0
   382  021E                     __end_ofmake_custom_chars@skull:	
   383  021E                     make_custom_chars@club:	
   384  021E  3400               	retlw	0
   385  021F  340E               	retlw	14
   386  0220  340E               	retlw	14
   387  0221  341F               	retlw	31
   388  0222  341F               	retlw	31
   389  0223  341F               	retlw	31
   390  0224  3404               	retlw	4
   391  0225  340E               	retlw	14
   392  0226                     __end_ofmake_custom_chars@club:	
   393  0226                     make_custom_chars@spade:	
   394  0226  3400               	retlw	0
   395  0227  3404               	retlw	4
   396  0228  340E               	retlw	14
   397  0229  341F               	retlw	31
   398  022A  341F               	retlw	31
   399  022B  340E               	retlw	14
   400  022C  3404               	retlw	4
   401  022D  340E               	retlw	14
   402  022E                     __end_ofmake_custom_chars@spade:	
   403  022E                     make_custom_chars@heart:	
   404  022E  3400               	retlw	0
   405  022F  3400               	retlw	0
   406  0230  340A               	retlw	10
   407  0231  341F               	retlw	31
   408  0232  341F               	retlw	31
   409  0233  340E               	retlw	14
   410  0234  3404               	retlw	4
   411  0235  3400               	retlw	0
   412  0236                     __end_ofmake_custom_chars@heart:	
   413  0236                     make_custom_chars@diamond:	
   414  0236  3400               	retlw	0
   415  0237  3404               	retlw	4
   416  0238  340E               	retlw	14
   417  0239  341F               	retlw	31
   418  023A  340E               	retlw	14
   419  023B  3404               	retlw	4
   420  023C  3400               	retlw	0
   421  023D  3400               	retlw	0
   422  023E                     __end_ofmake_custom_chars@diamond:	
   423  023E                     make_custom_chars@smile:	
   424  023E  3400               	retlw	0
   425  023F  340A               	retlw	10
   426  0240  340A               	retlw	10
   427  0241  3400               	retlw	0
   428  0242  3415               	retlw	21
   429  0243  3411               	retlw	17
   430  0244  340E               	retlw	14
   431  0245  3400               	retlw	0
   432  0246                     __end_ofmake_custom_chars@smile:	
   433  001B                     _CCPR2	set	27
   434  0015                     _CCPR1	set	21
   435  000E                     _TMR1	set	14
   436  0001                     _TMR0	set	1
   437  001E                     _ADRESH	set	30
   438  001F                     _ADCON0	set	31
   439  0006                     _PORTB	set	6
   440  0011                     _TMR2	set	17
   441  0012                     _T2CON	set	18
   442  0008                     _PORTD	set	8
   443  0005                     _PORTA	set	5
   444  005A                     _T0IF	set	90
   445  0066                     _ADIF	set	102
   446  005E                     _PEIE	set	94
   447  005F                     _GIE	set	95
   448  00E8                     _CCP2M0	set	232
   449  00E9                     _CCP2M1	set	233
   450  00EA                     _CCP2M2	set	234
   451  00EB                     _CCP2M3	set	235
   452  0080                     _TMR1ON	set	128
   453  0086                     _TMR1GE	set	134
   454  0085                     _T1CKPS1	set	133
   455  0084                     _T1CKPS0	set	132
   456  0081                     _TMR1CS	set	129
   457  00B8                     _CCP1M0	set	184
   458  00B9                     _CCP1M1	set	185
   459  00BA                     _CCP1M2	set	186
   460  00BB                     _CCP1M3	set	187
   461  0068                     _CCP2IF	set	104
   462  0062                     _CCP1IF	set	98
   463  0032                     _RB2	set	50
   464  00F9                     _GO	set	249
   465  0061                     _TMR2IF	set	97
   466  0035                     _RB5	set	53
   467  0081                     _OPTION_REG	set	129
   468  009E                     _ADRESL	set	158
   469  009F                     _ADCON1	set	159
   470  0086                     _TRISB	set	134
   471  0095                     _WPUB	set	149
   472  0087                     _TRISC	set	135
   473  0092                     _PR2	set	146
   474  0085                     _TRISA	set	133
   475  0088                     _TRISD	set	136
   476  0466                     _ADIE	set	1126
   477  040F                     _nRBPU	set	1039
   478  0468                     _CCP2IE	set	1128
   479  0461                     _TMR2IE	set	1121
   480  0478                     _SCS	set	1144
   481  0189                     _ANSELH	set	393
   482  0188                     _ANSEL	set	392
   483  0246                     STR_8:	
   484  0246  3450               	retlw	80	;'P'
   485  0247  3472               	retlw	114	;'r'
   486  0248  3465               	retlw	101	;'e'
   487  0249  3473               	retlw	115	;'s'
   488  024A  3473               	retlw	115	;'s'
   489  024B  3420               	retlw	32	;' '
   490  024C  3474               	retlw	116	;'t'
   491  024D  3468               	retlw	104	;'h'
   492  024E  3465               	retlw	101	;'e'
   493  024F  3420               	retlw	32	;' '
   494  0250  3462               	retlw	98	;'b'
   495  0251  3475               	retlw	117	;'u'
   496  0252  3474               	retlw	116	;'t'
   497  0253  3474               	retlw	116	;'t'
   498  0254  346F               	retlw	111	;'o'
   499  0255  346E               	retlw	110	;'n'
   500  0256  3400               	retlw	0
   501  0257                     STR_7:	
   502  0257  3420               	retlw	32	;' '
   503  0258  3443               	retlw	67	;'C'
   504  0259  346F               	retlw	111	;'o'
   505  025A  346E               	retlw	110	;'n'
   506  025B  3463               	retlw	99	;'c'
   507  025C  3465               	retlw	101	;'e'
   508  025D  346E               	retlw	110	;'n'
   509  025E  3474               	retlw	116	;'t'
   510  025F  3472               	retlw	114	;'r'
   511  0260  3461               	retlw	97	;'a'
   512  0261  3474               	retlw	116	;'t'
   513  0262  3469               	retlw	105	;'i'
   514  0263  346F               	retlw	111	;'o'
   515  0264  346E               	retlw	110	;'n'
   516  0265  3421               	retlw	33	;'!'
   517  0266  3400               	retlw	0
   518  0267                     STR_5:	
   519  0267  3420               	retlw	32	;' '
   520  0268  3420               	retlw	32	;' '
   521  0269  3420               	retlw	32	;' '
   522  026A  344E               	retlw	78	;'N'
   523  026B  344F               	retlw	79	;'O'
   524  026C  3420               	retlw	32	;' '
   525  026D  3457               	retlw	87	;'W'
   526  026E  3449               	retlw	73	;'I'
   527  026F  344E               	retlw	78	;'N'
   528  0270  344E               	retlw	78	;'N'
   529  0271  3445               	retlw	69	;'E'
   530  0272  3452               	retlw	82	;'R'
   531  0273  3421               	retlw	33	;'!'
   532  0274  3400               	retlw	0
   533  0275                     STR_1:	
   534  0275  3420               	retlw	32	;' '
   535  0276  3420               	retlw	32	;' '
   536  0277  3420               	retlw	32	;' '
   537  0278  3420               	retlw	32	;' '
   538  0279  3457               	retlw	87	;'W'
   539  027A  3449               	retlw	73	;'I'
   540  027B  344E               	retlw	78	;'N'
   541  027C  344E               	retlw	78	;'N'
   542  027D  3445               	retlw	69	;'E'
   543  027E  3452               	retlw	82	;'R'
   544  027F  3421               	retlw	33	;'!'
   545  0280  3421               	retlw	33	;'!'
   546  0281  3400               	retlw	0
   547  0282                     STR_2:	
   548  0282  3420               	retlw	32	;' '
   549  0283  3420               	retlw	32	;' '
   550  0284  3420               	retlw	32	;' '
   551  0285  3420               	retlw	32	;' '
   552  0286  3450               	retlw	80	;'P'
   553  0287  344C               	retlw	76	;'L'
   554  0288  3441               	retlw	65	;'A'
   555  0289  3459               	retlw	89	;'Y'
   556  028A  3445               	retlw	69	;'E'
   557  028B  3452               	retlw	82	;'R'
   558  028C  3420               	retlw	32	;' '
   559  028D  3431               	retlw	49	;'1'
   560  028E  3400               	retlw	0
   561  028F                     STR_4:	
   562  028F  3420               	retlw	32	;' '
   563  0290  3420               	retlw	32	;' '
   564  0291  3420               	retlw	32	;' '
   565  0292  3420               	retlw	32	;' '
   566  0293  3450               	retlw	80	;'P'
   567  0294  344C               	retlw	76	;'L'
   568  0295  3441               	retlw	65	;'A'
   569  0296  3459               	retlw	89	;'Y'
   570  0297  3445               	retlw	69	;'E'
   571  0298  3452               	retlw	82	;'R'
   572  0299  3420               	retlw	32	;' '
   573  029A  3432               	retlw	50	;'2'
   574  029B  3400               	retlw	0
   575  029C                     STR_9:	
   576  029C  3420               	retlw	32	;' '
   577  029D  3420               	retlw	32	;' '
   578  029E  3420               	retlw	32	;' '
   579  029F  3420               	retlw	32	;' '
   580  02A0  3474               	retlw	116	;'t'
   581  02A1  346F               	retlw	111	;'o'
   582  02A2  3420               	retlw	32	;' '
   583  02A3  3473               	retlw	115	;'s'
   584  02A4  3474               	retlw	116	;'t'
   585  02A5  3461               	retlw	97	;'a'
   586  02A6  3472               	retlw	114	;'r'
   587  02A7  3474               	retlw	116	;'t'
   588  02A8  3400               	retlw	0
   589  02A9                     STR_10:	
   590  02A9  3420               	retlw	32	;' '
   591  02AA  3420               	retlw	32	;' '
   592  02AB  3420               	retlw	32	;' '
   593  02AC  3420               	retlw	32	;' '
   594  02AD  3420               	retlw	32	;' '
   595  02AE  3453               	retlw	83	;'S'
   596  02AF  3463               	retlw	99	;'c'
   597  02B0  346F               	retlw	111	;'o'
   598  02B1  3472               	retlw	114	;'r'
   599  02B2  3465               	retlw	101	;'e'
   600  02B3  343A               	retlw	58	;':'
   601  02B4  3400               	retlw	0
   602  02B5                     STR_6:	
   603  02B5  3420               	retlw	32	;' '
   604  02B6  3420               	retlw	32	;' '
   605  02B7  3420               	retlw	32	;' '
   606  02B8  3420               	retlw	32	;' '
   607  02B9  3420               	retlw	32	;' '
   608  02BA  3420               	retlw	32	;' '
   609  02BB  3454               	retlw	84	;'T'
   610  02BC  3449               	retlw	73	;'I'
   611  02BD  3445               	retlw	69	;'E'
   612  02BE  3444               	retlw	68	;'D'
   613  02BF  3400               	retlw	0
   614  02C0                     STR_12:	
   615  02C0  3420               	retlw	32	;' '
   616  02C1  3420               	retlw	32	;' '
   617  02C2  3450               	retlw	80	;'P'
   618  02C3  3432               	retlw	50	;'2'
   619  02C4  343A               	retlw	58	;':'
   620  02C5  3420               	retlw	32	;' '
   621  02C6  3400               	retlw	0
   622  02C7                     STR_11:	
   623  02C7  3420               	retlw	32	;' '
   624  02C8  3450               	retlw	80	;'P'
   625  02C9  3431               	retlw	49	;'1'
   626  02CA  343A               	retlw	58	;':'
   627  02CB  3420               	retlw	32	;' '
   628  02CC  3400               	retlw	0
   629  0275                     
   630                           ; #config settings
   631  0000                     
   632                           	psect	cinit
   633  0011                     start_initialization:	
   634  0011                     __initialization:	
   635                           
   636                           ; Initialize objects allocated to BANK0
   637  0011  120A  158A  24D4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   638  0016  00E6               	movwf	__pdataBANK0& (0+127)
   639  0017  120A  158A  24D5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   640  001C  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   641  001D  120A  158A  24D6  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   642  0022  00E8               	movwf	(__pdataBANK0+2)& (0+127)
   643  0023  120A  158A  24D7  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   644  0028  00E9               	movwf	(__pdataBANK0+3)& (0+127)
   645                           
   646                           ; Initialize objects allocated to COMMON
   647  0029  120A  118A  27FD  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   648  002E  00FB               	movwf	__pdataCOMMON& (0+127)
   649                           
   650                           ; Clear objects allocated to BANK3
   651  002F  1783               	bsf	3,7	;select IRP bank2
   652  0030  3090               	movlw	low __pbssBANK3
   653  0031  0084               	movwf	4
   654  0032  30B0               	movlw	low (__pbssBANK3+32)
   655  0033  120A  158A  24D8  120A  118A  	fcall	clear_ram0
   656                           
   657                           ; Clear objects allocated to BANK1
   658  0038  1383               	bcf	3,7	;select IRP bank0
   659  0039  30A0               	movlw	low __pbssBANK1
   660  003A  0084               	movwf	4
   661  003B  30E0               	movlw	low (__pbssBANK1+64)
   662  003C  120A  158A  24D8  120A  118A  	fcall	clear_ram0
   663                           
   664                           ; Clear objects allocated to BANK0
   665  0041  3057               	movlw	low __pbssBANK0
   666  0042  0084               	movwf	4
   667  0043  3066               	movlw	low (__pbssBANK0+15)
   668  0044  120A  158A  24D8  120A  118A  	fcall	clear_ram0
   669                           
   670                           ; Clear objects allocated to COMMON
   671  0049  01F6               	clrf	__pbssCOMMON& (0+127)
   672  004A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   673  004B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   674  004C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   675  004D  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   676  004E                     end_of_initialization:	
   677                           ;End of C runtime variable initialization code
   678                           
   679  004E                     __end_of__initialization:	
   680  004E  0183               	clrf	3
   681  004F  120A  158A  2EBF   	ljmp	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMMON
   684  0076                     __pbssCOMMON:	
   685  0076                     _tone_delay:	
   686  0076                     	ds	2
   687  0078                     _id_num:	
   688  0078                     	ds	1
   689  0079                     _received_char:	
   690  0079                     	ds	1
   691  007A                     _cursor_move_delay_count:	
   692  007A                     	ds	1
   693                           
   694                           	psect	dataCOMMON
   695  007B                     __pdataCOMMON:	
   696  007B                     _my_turn:	
   697  007B                     	ds	1
   698                           
   699                           	psect	bssBANK0
   700  0057                     __pbssBANK0:	
   701  0057                     _joystick_y_pos:	
   702  0057                     	ds	2
   703  0059                     _joystick_x_pos:	
   704  0059                     	ds	2
   705  005B                     _game_over:	
   706  005B                     	ds	1
   707  005C                     _current_player:	
   708  005C                     	ds	1
   709  005D                     _joystick_pressed:	
   710  005D                     	ds	1
   711  005E                     _selected_tile:	
   712  005E                     	ds	1
   713  005F                     _p2_score:	
   714  005F                     	ds	1
   715  0060                     _p1_score:	
   716  0060                     	ds	1
   717  0061                     _cursor_movable:	
   718  0061                     	ds	1
   719  0062                     _delay_loops:	
   720  0062                     	ds	1
   721  0063                     _cursor_solid:	
   722  0063                     	ds	1
   723  0064                     _current_char:	
   724  0064                     	ds	1
   725  0065                     _cursor_pos:	
   726  0065                     	ds	1
   727                           
   728                           	psect	dataBANK0
   729  0066                     __pdataBANK0:	
   730  0066                     _scoreboard:	
   731  0066                     	ds	2
   732  0068                     _gameboard:	
   733  0068                     	ds	2
   734                           
   735                           	psect	bssBANK1
   736  00A0                     __pbssBANK1:	
   737  00A0                     _visible:	
   738  00A0                     	ds	32
   739  00C0                     _board:	
   740  00C0                     	ds	32
   741                           
   742                           	psect	bssBANK3
   743  0190                     __pbssBANK3:	
   744  0190                     randomize_gameboard@F1357:	
   745  0190                     	ds	32
   746                           
   747                           	psect	clrtext
   748  0CD8                     clear_ram0:	
   749                           ;	Called with FSR containing the base address, and
   750                           ;	W with the last address+1
   751                           
   752  0CD8  0064               	clrwdt	;clear the watchdog before getting into this loop
   753  0CD9                     clrloop0:	
   754  0CD9  0180               	clrf	0	;clear RAM location pointed to by FSR
   755  0CDA  0A84               	incf	4,f	;increment pointer
   756  0CDB  0604               	xorwf	4,w	;XOR with final address
   757  0CDC  1903               	btfsc	3,2	;have we reached the end yet?
   758  0CDD  3400               	retlw	0	;all done for this memory range, return
   759  0CDE  0604               	xorwf	4,w	;XOR again to restore value
   760  0CDF  2CD9               	goto	clrloop0	;do the next byte
   761                           
   762                           	psect	cstackCOMMON
   763  0070                     __pcstackCOMMON:	
   764  0070                     ?_joystick_init:	
   765  0070                     ?_gameboard_init:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_startup:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_update_gameboard_from_input:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_game_end:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_display_scoreboard:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_display_gameboard:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_time_init:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_get_current_char:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_randomize_gameboard:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_toggle_cursor:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_main:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_make_custom_chars:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_get_cursor_index:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_check_for_match:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_interrupt_handler:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ??_interrupt_handler:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_tmr0_init:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_Delay20us:	
   817                           ; 1 bytes @ 0x0
   818                           
   819                           
   820                           ; 1 bytes @ 0x0
   821  0070                     	ds	5
   822  0075                     interrupt_handler@current_analog:	
   823                           
   824                           ; 1 bytes @ 0x5
   825  0075                     	ds	1
   826                           
   827                           	psect	cstackBANK0
   828  0020                     __pcstackBANK0:	
   829  0020                     ??_joystick_init:	
   830  0020                     ?_DelayMs:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0020                     ??_time_init:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     ?_play_tone:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0020                     ??_get_cursor_index:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0020                     ??_tmr0_init:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0020                     ??_Delay20us:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0020                     ?___awmod:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     get_cursor_index@cursor:	
   852                           ; 2 bytes @ 0x0
   853                           
   854  0020                     play_tone@tone_period:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     DelayMs@millis:	
   858                           ; 2 bytes @ 0x0
   859                           
   860  0020                     ___awmod@divisor:	
   861                           ; 2 bytes @ 0x0
   862                           
   863                           
   864                           ; 2 bytes @ 0x0
   865  0020                     	ds	1
   866  0021                     ??_get_current_char:	
   867  0021                     Delay20us@next:	
   868                           ; 1 bytes @ 0x1
   869                           
   870                           
   871                           ; 1 bytes @ 0x1
   872  0021                     	ds	1
   873  0022                     ??_DelayMs:	
   874  0022                     ?_lcd_write:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0022                     play_tone@duration_8ms:	
   878                           ; 1 bytes @ 0x2
   879                           
   880  0022                     lcd_write@CmdChar:	
   881                           ; 1 bytes @ 0x2
   882                           
   883  0022                     ___awmod@dividend:	
   884                           ; 1 bytes @ 0x2
   885                           
   886                           
   887                           ; 2 bytes @ 0x2
   888  0022                     	ds	1
   889  0023                     ??_play_tone:	
   890  0023                     lcd_write@port:	
   891                           ; 1 bytes @ 0x3
   892                           
   893                           
   894                           ; 2 bytes @ 0x3
   895  0023                     	ds	1
   896  0024                     ??___awmod:	
   897                           
   898                           ; 1 bytes @ 0x4
   899  0024                     	ds	1
   900  0025                     ??_lcd_write:	
   901  0025                     ___awmod@counter:	
   902                           ; 1 bytes @ 0x5
   903                           
   904                           
   905                           ; 1 bytes @ 0x5
   906  0025                     	ds	1
   907  0026                     ___awmod@sign:	
   908                           
   909                           ; 1 bytes @ 0x6
   910  0026                     	ds	1
   911  0027                     ?___awdiv:	
   912  0027                     lcd_write@mode:	
   913                           ; 2 bytes @ 0x7
   914                           
   915  0027                     ___awdiv@divisor:	
   916                           ; 1 bytes @ 0x7
   917                           
   918                           
   919                           ; 2 bytes @ 0x7
   920  0027                     	ds	1
   921  0028                     ?_lcd_clear:	
   922  0028                     ?_lcd_puts:	
   923                           ; 1 bytes @ 0x8
   924                           
   925  0028                     ?_lcd_goto:	
   926                           ; 1 bytes @ 0x8
   927                           
   928  0028                     ?_lcd_set_custom_char:	
   929                           ; 1 bytes @ 0x8
   930                           
   931  0028                     lcd_set_custom_char@cg_address:	
   932                           ; 1 bytes @ 0x8
   933                           
   934  0028                     lcd_clear@port:	
   935                           ; 1 bytes @ 0x8
   936                           
   937  0028                     lcd_puts@port:	
   938                           ; 2 bytes @ 0x8
   939                           
   940  0028                     lcd_goto@port:	
   941                           ; 2 bytes @ 0x8
   942                           
   943                           
   944                           ; 2 bytes @ 0x8
   945  0028                     	ds	1
   946  0029                     lcd_set_custom_char@port:	
   947  0029                     ___awdiv@dividend:	
   948                           ; 2 bytes @ 0x9
   949                           
   950                           
   951                           ; 2 bytes @ 0x9
   952  0029                     	ds	1
   953  002A                     ?_lcd_init:	
   954  002A                     ??_lcd_clear:	
   955                           ; 1 bytes @ 0xA
   956                           
   957  002A                     ??_lcd_puts:	
   958                           ; 1 bytes @ 0xA
   959                           
   960  002A                     ??_lcd_goto:	
   961                           ; 1 bytes @ 0xA
   962                           
   963  002A                     lcd_init@port:	
   964                           ; 1 bytes @ 0xA
   965                           
   966                           
   967                           ; 2 bytes @ 0xA
   968  002A                     	ds	1
   969  002B                     ??_lcd_set_custom_char:	
   970  002B                     ??___awdiv:	
   971                           ; 1 bytes @ 0xB
   972                           
   973  002B                     lcd_puts@string:	
   974                           ; 1 bytes @ 0xB
   975                           
   976  002B                     lcd_goto@position:	
   977                           ; 1 bytes @ 0xB
   978                           
   979                           
   980                           ; 1 bytes @ 0xB
   981  002B                     	ds	1
   982  002C                     ??_lcd_init:	
   983  002C                     ?_end_screen:	
   984                           ; 1 bytes @ 0xC
   985                           
   986  002C                     end_screen@second_row:	
   987                           ; 1 bytes @ 0xC
   988                           
   989  002C                     ___awdiv@counter:	
   990                           ; 1 bytes @ 0xC
   991                           
   992                           
   993                           ; 1 bytes @ 0xC
   994  002C                     	ds	1
   995  002D                     ??_end_screen:	
   996  002D                     lcd_set_custom_char@row:	
   997                           ; 1 bytes @ 0xD
   998                           
   999  002D                     ___awdiv@sign:	
  1000                           ; 1 bytes @ 0xD
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0xD
  1004  002D                     	ds	1
  1005  002E                     end_screen@first_row:	
  1006  002E                     lcd_set_custom_char@data:	
  1007                           ; 1 bytes @ 0xE
  1008                           
  1009  002E                     ___awdiv@quotient:	
  1010                           ; 1 bytes @ 0xE
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0xE
  1014  002E                     	ds	1
  1015  002F                     ??_game_end:	
  1016  002F                     ??_make_custom_chars:	
  1017                           ; 1 bytes @ 0xF
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0xF
  1021  002F                     	ds	1
  1022  0030                     ?_lcd_putch:	
  1023  0030                     ??_randomize_gameboard:	
  1024                           ; 1 bytes @ 0x10
  1025                           
  1026  0030                     lcd_putch@port:	
  1027                           ; 1 bytes @ 0x10
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x10
  1031  0030                     	ds	2
  1032  0032                     ??_lcd_putch:	
  1033                           
  1034                           ; 1 bytes @ 0x12
  1035  0032                     	ds	1
  1036  0033                     lcd_putch@character:	
  1037  0033                     randomize_gameboard@used:	
  1038                           ; 1 bytes @ 0x13
  1039                           
  1040                           
  1041                           ; 32 bytes @ 0x13
  1042  0033                     	ds	1
  1043  0034                     ??_display_scoreboard:	
  1044  0034                     ??_display_gameboard:	
  1045                           ; 1 bytes @ 0x14
  1046                           
  1047  0034                     ??_toggle_cursor:	
  1048                           ; 1 bytes @ 0x14
  1049                           
  1050  0034                     ?_update_cursor:	
  1051                           ; 1 bytes @ 0x14
  1052                           
  1053  0034                     update_cursor@direction:	
  1054                           ; 1 bytes @ 0x14
  1055                           
  1056                           
  1057                           ; 1 bytes @ 0x14
  1058  0034                     	ds	1
  1059  0035                     ??_update_cursor:	
  1060  0035                     display_gameboard@i:	
  1061                           ; 1 bytes @ 0x15
  1062                           
  1063                           
  1064                           ; 1 bytes @ 0x15
  1065  0035                     	ds	1
  1066  0036                     ??_startup:	
  1067  0036                     ??_check_for_match:	
  1068                           ; 1 bytes @ 0x16
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x16
  1072  0036                     	ds	1
  1073  0037                     update_cursor@move_delay_count:	
  1074                           
  1075                           ; 1 bytes @ 0x17
  1076  0037                     	ds	1
  1077  0038                     check_for_match@player:	
  1078                           
  1079                           ; 1 bytes @ 0x18
  1080  0038                     	ds	1
  1081  0039                     ??_update_gameboard_from_input:	
  1082                           
  1083                           ; 1 bytes @ 0x19
  1084  0039                     	ds	26
  1085  0053                     randomize_gameboard@current:	
  1086                           
  1087                           ; 1 bytes @ 0x33
  1088  0053                     	ds	1
  1089  0054                     randomize_gameboard@random:	
  1090                           
  1091                           ; 1 bytes @ 0x34
  1092  0054                     	ds	1
  1093  0055                     ??_gameboard_init:	
  1094                           
  1095                           ; 1 bytes @ 0x35
  1096  0055                     	ds	1
  1097  0056                     gameboard_init@i:	
  1098                           
  1099                           ; 1 bytes @ 0x36
  1100  0056                     	ds	1
  1101  0057                     ??_main:	
  1102                           
  1103                           	psect	maintext
  1104  0EBF                     __pmaintext:	
  1105                           ; 1 bytes @ 0x37
  1106 ;;
  1107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1108 ;;
  1109 ;; *************** function _main *****************
  1110 ;; Defined at:
  1111 ;;		line 87 in file "concentration.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : B00/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels required when called:    7
  1131 ;; This function calls:
  1132 ;;		_game_end
  1133 ;;		_gameboard_init
  1134 ;;		_joystick_init
  1135 ;;		_lcd_init
  1136 ;;		_startup
  1137 ;;		_update_gameboard_from_input
  1138 ;; This function is called by:
  1139 ;;		Startup code after reset
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _main
  1145  0EBF                     _main:	
  1146  0EBF                     l2970:	
  1147                           ;incstack = 0
  1148                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1149                           
  1150                           
  1151                           ;concentration.c: 89:     SCS = 0;
  1152  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  1153  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  1154  0EC1  100F               	bcf	15,0	;volatile
  1155  0EC2                     l2972:	
  1156                           
  1157                           ;concentration.c: 91:     TRISD = 0;
  1158  0EC2  0188               	clrf	8	;volatile
  1159                           
  1160                           ;concentration.c: 92:     TRISA = 0;
  1161  0EC3  0185               	clrf	5	;volatile
  1162                           
  1163                           ;concentration.c: 93:     ANSEL = 0;
  1164  0EC4  1683               	bsf	3,5	;RP0=1, select bank3
  1165  0EC5  1703               	bsf	3,6	;RP1=1, select bank3
  1166  0EC6  0188               	clrf	8	;volatile
  1167  0EC7                     l2974:	
  1168                           
  1169                           ;concentration.c: 94:     lcd_init(gameboard);
  1170  0EC7  3005               	movlw	5
  1171  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0ECA  00AA               	movwf	lcd_init@port
  1174  0ECB  3000               	movlw	0
  1175  0ECC  00AB               	movwf	lcd_init@port+1
  1176  0ECD  120A  118A  21AD  120A  158A  	fcall	_lcd_init
  1177  0ED2                     l2976:	
  1178                           
  1179                           ;concentration.c: 95:     lcd_init(scoreboard);
  1180  0ED2  3008               	movlw	8
  1181  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0ED5  00AA               	movwf	lcd_init@port
  1184  0ED6  3000               	movlw	0
  1185  0ED7  00AB               	movwf	lcd_init@port+1
  1186  0ED8  120A  118A  21AD  120A  158A  	fcall	_lcd_init
  1187  0EDD                     l2978:	
  1188                           
  1189                           ;concentration.c: 97:     joystick_init();
  1190  0EDD  120A  158A  25B5  120A  158A  	fcall	_joystick_init
  1191  0EE2                     l2980:	
  1192                           
  1193                           ;concentration.c: 99:     gameboard_init();
  1194  0EE2  120A  118A  273E  120A  158A  	fcall	_gameboard_init
  1195  0EE7                     l2982:	
  1196                           
  1197                           ;concentration.c: 101:     startup();
  1198  0EE7  120A  118A  2569  120A  158A  	fcall	_startup
  1199  0EEC                     l2984:	
  1200                           
  1201                           ;concentration.c: 102:     current_player = 0;
  1202  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0EEE  01DC               	clrf	_current_player
  1205                           
  1206                           ;concentration.c: 104:     while(!game_over) {
  1207  0EEF  2EF5               	goto	l2988
  1208  0EF0                     l2986:	
  1209                           
  1210                           ;concentration.c: 105:         update_gameboard_from_input();
  1211  0EF0  120A  118A  2052  120A  158A  	fcall	_update_gameboard_from_input
  1212  0EF5                     l2988:	
  1213                           
  1214                           ;concentration.c: 104:     while(!game_over) {
  1215  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0EF7  085B               	movf	_game_over,w
  1218  0EF8  1903               	btfsc	3,2
  1219  0EF9  2EFB               	goto	u2441
  1220  0EFA  2EFC               	goto	u2440
  1221  0EFB                     u2441:	
  1222  0EFB  2EF0               	goto	l2986
  1223  0EFC                     u2440:	
  1224  0EFC                     l2990:	
  1225                           
  1226                           ;concentration.c: 107:     game_end();
  1227  0EFC  120A  158A  2635  120A  158A  	fcall	_game_end
  1228  0F01                     l186:	
  1229  0F01  120A  118A  280E   	ljmp	start
  1230  0F04                     __end_of_main:	
  1231                           
  1232                           	psect	text1
  1233  0052                     __ptext1:	
  1234 ;; *************** function _update_gameboard_from_input *****************
  1235 ;; Defined at:
  1236 ;;		line 284 in file "concentration.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          0       2       0       0       0
  1253 ;;      Totals:         0       2       0       0       0
  1254 ;;Total ram usage:        2 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    6
  1257 ;; This function calls:
  1258 ;;		_DelayMs
  1259 ;;		_check_for_match
  1260 ;;		_display_gameboard
  1261 ;;		_get_cursor_index
  1262 ;;		_toggle_cursor
  1263 ;;		_update_cursor
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _update_gameboard_from_input
  1271  0052                     _update_gameboard_from_input:	
  1272  0052                     l2888:	
  1273                           ;incstack = 0
  1274                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1275                           
  1276                           
  1277                           ;concentration.c: 286:     if(GO == 0) {
  1278  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0054  189F               	btfsc	31,1	;volatile
  1281  0055  2857               	goto	u2171
  1282  0056  2858               	goto	u2170
  1283  0057                     u2171:	
  1284  0057  2859               	goto	l275
  1285  0058                     u2170:	
  1286  0058                     l2890:	
  1287                           
  1288                           ;concentration.c: 287:         GO = 1;
  1289  0058  149F               	bsf	31,1	;volatile
  1290  0059                     l275:	
  1291                           ;concentration.c: 288:     }
  1292                           
  1293                           
  1294                           ;concentration.c: 289:     if((((RB5 == 0)&&(current_player == 0))||
  1295  0059  1A86               	btfsc	6,5	;volatile
  1296  005A  285C               	goto	u2181
  1297  005B  285D               	goto	u2180
  1298  005C                     u2181:	
  1299  005C  2862               	goto	l280
  1300  005D                     u2180:	
  1301  005D                     l2892:	
  1302  005D  085C               	movf	_current_player,w
  1303  005E  1903               	btfsc	3,2
  1304  005F  2861               	goto	u2191
  1305  0060  2862               	goto	u2190
  1306  0061                     u2191:	
  1307  0061  286B               	goto	l2896
  1308  0062                     u2190:	
  1309  0062                     l280:	
  1310  0062  1906               	btfsc	6,2	;volatile
  1311  0063  2865               	goto	u2201
  1312  0064  2866               	goto	u2200
  1313  0065                     u2201:	
  1314  0065  28C1               	goto	l276
  1315  0066                     u2200:	
  1316  0066                     l2894:	
  1317  0066  035C               	decf	_current_player,w
  1318  0067  1D03               	btfss	3,2
  1319  0068  286A               	goto	u2211
  1320  0069  286B               	goto	u2210
  1321  006A                     u2211:	
  1322  006A  28C1               	goto	l276
  1323  006B                     u2210:	
  1324  006B                     l2896:	
  1325  006B  035D               	decf	_joystick_pressed,w
  1326  006C  1D03               	btfss	3,2
  1327  006D  286F               	goto	u2221
  1328  006E  2870               	goto	u2220
  1329  006F                     u2221:	
  1330  006F  28C1               	goto	l276
  1331  0070                     u2220:	
  1332  0070                     l2898:	
  1333                           
  1334                           ;concentration.c: 291:             &&(joystick_pressed == 1)) {;concentration.c: 292:   
      +                                DelayMs(6);
  1335  0070  3006               	movlw	6
  1336  0071  00A0               	movwf	DelayMs@millis
  1337  0072  3000               	movlw	0
  1338  0073  00A1               	movwf	DelayMs@millis+1
  1339  0074  120A  158A  253E  120A  118A  	fcall	_DelayMs
  1340  0079                     l2900:	
  1341                           
  1342                           ;concentration.c: 293:         joystick_pressed = 0;
  1343  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1344  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1345  007B  01DD               	clrf	_joystick_pressed
  1346  007C                     l2902:	
  1347                           
  1348                           ;concentration.c: 294:         if(visible[get_cursor_index(cursor_pos)] == 0xFF) {
  1349  007C  0865               	movf	_cursor_pos,w
  1350  007D  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  1351  0082  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1352  0083  0084               	movwf	4
  1353  0084  1383               	bcf	3,7	;select IRP bank1
  1354  0085  0A00               	incf	0,w
  1355  0086  1D03               	btfss	3,2
  1356  0087  2889               	goto	u2231
  1357  0088  288A               	goto	u2230
  1358  0089                     u2231:	
  1359  0089  28D5               	goto	l282
  1360  008A                     u2230:	
  1361  008A                     l2904:	
  1362                           
  1363                           ;concentration.c: 295:             visible[get_cursor_index(cursor_pos)] = board[get_cur
      +                          sor_index(cursor_pos)];
  1364  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1365  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1366  008C  0865               	movf	_cursor_pos,w
  1367  008D  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  1368  0092  3EC0               	addlw	(low (_board| 0))& (0+255)
  1369  0093  0084               	movwf	4
  1370  0094  1383               	bcf	3,7	;select IRP bank1
  1371  0095  0800               	movf	0,w
  1372  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0098  00B9               	movwf	??_update_gameboard_from_input
  1375  0099  0865               	movf	_cursor_pos,w
  1376  009A  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  1377  009F  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1378  00A0  0084               	movwf	4
  1379  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1380  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1381  00A3  0839               	movf	??_update_gameboard_from_input,w
  1382  00A4  1383               	bcf	3,7	;select IRP bank1
  1383  00A5  0080               	movwf	0
  1384                           
  1385                           ;concentration.c: 296:             current_char = board[get_cursor_index(cursor_pos)];
  1386  00A6  0865               	movf	_cursor_pos,w
  1387  00A7  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  1388  00AC  3EC0               	addlw	(low (_board| 0))& (0+255)
  1389  00AD  0084               	movwf	4
  1390  00AE  1383               	bcf	3,7	;select IRP bank1
  1391  00AF  0800               	movf	0,w
  1392  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1393  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1394  00B2  00B9               	movwf	??_update_gameboard_from_input
  1395  00B3  0839               	movf	??_update_gameboard_from_input,w
  1396  00B4  00E4               	movwf	_current_char
  1397                           
  1398                           ;concentration.c: 297:             check_for_match(current_player);
  1399  00B5  085C               	movf	_current_player,w
  1400  00B6  120A  118A  2398  120A  118A  	fcall	_check_for_match
  1401                           
  1402                           ;concentration.c: 298:             display_gameboard();
  1403  00BB  120A  158A  267A  120A  118A  	fcall	_display_gameboard
  1404  00C0  28D5               	goto	l282
  1405  00C1                     l276:	
  1406  00C1  1E86               	btfss	6,5	;volatile
  1407  00C2  28C4               	goto	u2241
  1408  00C3  28C5               	goto	u2240
  1409  00C4                     u2241:	
  1410  00C4  28CA               	goto	l287
  1411  00C5                     u2240:	
  1412  00C5                     l2906:	
  1413  00C5  085C               	movf	_current_player,w
  1414  00C6  1903               	btfsc	3,2
  1415  00C7  28C9               	goto	u2251
  1416  00C8  28CA               	goto	u2250
  1417  00C9                     u2251:	
  1418  00C9  28D3               	goto	l285
  1419  00CA                     u2250:	
  1420  00CA                     l287:	
  1421  00CA  1D06               	btfss	6,2	;volatile
  1422  00CB  28CD               	goto	u2261
  1423  00CC  28CE               	goto	u2260
  1424  00CD                     u2261:	
  1425  00CD  28D5               	goto	l282
  1426  00CE                     u2260:	
  1427  00CE                     l2908:	
  1428  00CE  035C               	decf	_current_player,w
  1429  00CF  1D03               	btfss	3,2
  1430  00D0  28D2               	goto	u2271
  1431  00D1  28D3               	goto	u2270
  1432  00D2                     u2271:	
  1433  00D2  28D5               	goto	l282
  1434  00D3                     u2270:	
  1435  00D3                     l285:	
  1436                           
  1437                           ;concentration.c: 301:             ((RB2 == 1)&&(current_player == 1)))) {;concentration
      +                          .c: 302:         joystick_pressed = 1;
  1438  00D3  01DD               	clrf	_joystick_pressed
  1439  00D4  0ADD               	incf	_joystick_pressed,f
  1440  00D5                     l282:	
  1441                           
  1442                           ;concentration.c: 305:     if(CCP1IF == 1) {
  1443  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1444  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1445  00D7  1D0C               	btfss	12,2	;volatile
  1446  00D8  28DA               	goto	u2281
  1447  00D9  28DB               	goto	u2280
  1448  00DA                     u2281:	
  1449  00DA  28FB               	goto	l2920
  1450  00DB                     u2280:	
  1451  00DB                     l2910:	
  1452                           
  1453                           ;concentration.c: 306:         if(delay_loops == 0) {
  1454  00DB  0862               	movf	_delay_loops,w
  1455  00DC  1D03               	btfss	3,2
  1456  00DD  28DF               	goto	u2291
  1457  00DE  28E0               	goto	u2290
  1458  00DF                     u2291:	
  1459  00DF  28EA               	goto	l2916
  1460  00E0                     u2290:	
  1461  00E0                     l2912:	
  1462                           
  1463                           ;concentration.c: 307:             delay_loops = 25;
  1464  00E0  3019               	movlw	25
  1465  00E1  00B9               	movwf	??_update_gameboard_from_input
  1466  00E2  0839               	movf	??_update_gameboard_from_input,w
  1467  00E3  00E2               	movwf	_delay_loops
  1468  00E4                     l2914:	
  1469                           
  1470                           ;concentration.c: 308:             toggle_cursor();
  1471  00E4  120A  158A  2607  120A  118A  	fcall	_toggle_cursor
  1472                           
  1473                           ;concentration.c: 309:         } else {
  1474  00E9  28EC               	goto	l290
  1475  00EA                     l2916:	
  1476                           
  1477                           ;concentration.c: 310:             delay_loops--;
  1478  00EA  3001               	movlw	1
  1479  00EB  02E2               	subwf	_delay_loops,f
  1480  00EC                     l290:	
  1481                           ;concentration.c: 311:         }
  1482                           
  1483                           
  1484                           ;concentration.c: 312:         CCPR1 = TMR1+50000;
  1485  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1486  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1487  00EE  080E               	movf	14,w	;volatile
  1488  00EF  3E50               	addlw	80
  1489  00F0  00B9               	movwf	??_update_gameboard_from_input
  1490  00F1  080F               	movf	15,w	;volatile
  1491  00F2  1803               	skipnc
  1492  00F3  3E01               	addlw	1
  1493  00F4  3EC3               	addlw	195
  1494  00F5  00BA               	movwf	??_update_gameboard_from_input+1
  1495  00F6  0839               	movf	??_update_gameboard_from_input,w
  1496  00F7  0095               	movwf	21	;volatile
  1497  00F8  083A               	movf	??_update_gameboard_from_input+1,w
  1498  00F9  0096               	movwf	22	;volatile
  1499  00FA                     l2918:	
  1500                           
  1501                           ;concentration.c: 313:         CCP1IF = 0;
  1502  00FA  110C               	bcf	12,2	;volatile
  1503  00FB                     l2920:	
  1504                           
  1505                           ;concentration.c: 316:     if(joystick_x_pos > 900) {
  1506  00FB  085A               	movf	_joystick_x_pos+1,w
  1507  00FC  3A80               	xorlw	128
  1508  00FD  00FF               	movwf	btemp+1
  1509  00FE  3083               	movlw	131
  1510  00FF  027F               	subwf	btemp+1,w
  1511  0100  1D03               	skipz
  1512  0101  2904               	goto	u2305
  1513  0102  3085               	movlw	133
  1514  0103  0259               	subwf	_joystick_x_pos,w
  1515  0104                     u2305:	
  1516  0104  1C03               	skipc
  1517  0105  2907               	goto	u2301
  1518  0106  2908               	goto	u2300
  1519  0107                     u2301:	
  1520  0107  291A               	goto	l2926
  1521  0108                     u2300:	
  1522  0108                     l2922:	
  1523                           
  1524                           ;concentration.c: 317:         if(cursor_movable) {
  1525  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1527  010A  0861               	movf	_cursor_movable,w
  1528  010B  1903               	btfsc	3,2
  1529  010C  290E               	goto	u2311
  1530  010D  290F               	goto	u2310
  1531  010E                     u2311:	
  1532  010E  29AC               	goto	l309
  1533  010F                     u2310:	
  1534  010F                     l2924:	
  1535                           
  1536                           ;concentration.c: 318:             update_cursor(30, 2);
  1537  010F  3002               	movlw	2
  1538  0110  00B9               	movwf	??_update_gameboard_from_input
  1539  0111  0839               	movf	??_update_gameboard_from_input,w
  1540  0112  00B4               	movwf	update_cursor@direction
  1541  0113  301E               	movlw	30
  1542  0114  120A  118A  24D6  120A  118A  	fcall	_update_cursor
  1543  0119  29AC               	goto	l309
  1544  011A                     l2926:	
  1545  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1546  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1547  011C  085A               	movf	_joystick_x_pos+1,w
  1548  011D  3A80               	xorlw	128
  1549  011E  00FF               	movwf	btemp+1
  1550  011F  3080               	movlw	128
  1551  0120  027F               	subwf	btemp+1,w
  1552  0121  1D03               	skipz
  1553  0122  2925               	goto	u2325
  1554  0123  3064               	movlw	100
  1555  0124  0259               	subwf	_joystick_x_pos,w
  1556  0125                     u2325:	
  1557  0125  1803               	skipnc
  1558  0126  2928               	goto	u2321
  1559  0127  2929               	goto	u2320
  1560  0128                     u2321:	
  1561  0128  293B               	goto	l2932
  1562  0129                     u2320:	
  1563  0129                     l2928:	
  1564                           
  1565                           ;concentration.c: 321:         if(cursor_movable) {
  1566  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1567  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1568  012B  0861               	movf	_cursor_movable,w
  1569  012C  1903               	btfsc	3,2
  1570  012D  292F               	goto	u2331
  1571  012E  2930               	goto	u2330
  1572  012F                     u2331:	
  1573  012F  29AC               	goto	l309
  1574  0130                     u2330:	
  1575  0130                     l2930:	
  1576                           
  1577                           ;concentration.c: 322:             update_cursor(30, 3);
  1578  0130  3003               	movlw	3
  1579  0131  00B9               	movwf	??_update_gameboard_from_input
  1580  0132  0839               	movf	??_update_gameboard_from_input,w
  1581  0133  00B4               	movwf	update_cursor@direction
  1582  0134  301E               	movlw	30
  1583  0135  120A  118A  24D6  120A  118A  	fcall	_update_cursor
  1584  013A  29AC               	goto	l309
  1585  013B                     l2932:	
  1586  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1587  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1588  013D  085A               	movf	_joystick_x_pos+1,w
  1589  013E  3A80               	xorlw	128
  1590  013F  00FF               	movwf	btemp+1
  1591  0140  3083               	movlw	131
  1592  0141  027F               	subwf	btemp+1,w
  1593  0142  1D03               	skipz
  1594  0143  2946               	goto	u2345
  1595  0144  3021               	movlw	33
  1596  0145  0259               	subwf	_joystick_x_pos,w
  1597  0146                     u2345:	
  1598  0146  1C03               	skipc
  1599  0147  2949               	goto	u2341
  1600  0148  294A               	goto	u2340
  1601  0149                     u2341:	
  1602  0149  295C               	goto	l2938
  1603  014A                     u2340:	
  1604  014A                     l2934:	
  1605                           
  1606                           ;concentration.c: 325:         if(cursor_movable) {
  1607  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1608  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1609  014C  0861               	movf	_cursor_movable,w
  1610  014D  1903               	btfsc	3,2
  1611  014E  2950               	goto	u2351
  1612  014F  2951               	goto	u2350
  1613  0150                     u2351:	
  1614  0150  29AC               	goto	l309
  1615  0151                     u2350:	
  1616  0151                     l2936:	
  1617                           
  1618                           ;concentration.c: 326:             update_cursor(60, 2);
  1619  0151  3002               	movlw	2
  1620  0152  00B9               	movwf	??_update_gameboard_from_input
  1621  0153  0839               	movf	??_update_gameboard_from_input,w
  1622  0154  00B4               	movwf	update_cursor@direction
  1623  0155  303C               	movlw	60
  1624  0156  120A  118A  24D6  120A  118A  	fcall	_update_cursor
  1625  015B  29AC               	goto	l309
  1626  015C                     l2938:	
  1627  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1628  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1629  015E  085A               	movf	_joystick_x_pos+1,w
  1630  015F  3A80               	xorlw	128
  1631  0160  00FF               	movwf	btemp+1
  1632  0161  3080               	movlw	128
  1633  0162  027F               	subwf	btemp+1,w
  1634  0163  1D03               	skipz
  1635  0164  2967               	goto	u2365
  1636  0165  30C8               	movlw	200
  1637  0166  0259               	subwf	_joystick_x_pos,w
  1638  0167                     u2365:	
  1639  0167  1803               	skipnc
  1640  0168  296A               	goto	u2361
  1641  0169  296B               	goto	u2360
  1642  016A                     u2361:	
  1643  016A  297D               	goto	l2944
  1644  016B                     u2360:	
  1645  016B                     l2940:	
  1646                           
  1647                           ;concentration.c: 329:         if(cursor_movable) {
  1648  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1649  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1650  016D  0861               	movf	_cursor_movable,w
  1651  016E  1903               	btfsc	3,2
  1652  016F  2971               	goto	u2371
  1653  0170  2972               	goto	u2370
  1654  0171                     u2371:	
  1655  0171  29AC               	goto	l309
  1656  0172                     u2370:	
  1657  0172                     l2942:	
  1658                           
  1659                           ;concentration.c: 330:             update_cursor(60, 3);
  1660  0172  3003               	movlw	3
  1661  0173  00B9               	movwf	??_update_gameboard_from_input
  1662  0174  0839               	movf	??_update_gameboard_from_input,w
  1663  0175  00B4               	movwf	update_cursor@direction
  1664  0176  303C               	movlw	60
  1665  0177  120A  118A  24D6  120A  118A  	fcall	_update_cursor
  1666  017C  29AC               	goto	l309
  1667  017D                     l2944:	
  1668  017D  30FD               	movlw	253
  1669  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1670  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0180  0657               	xorwf	_joystick_y_pos,w
  1672  0181  3003               	movlw	3
  1673  0182  1903               	skipnz
  1674  0183  0658               	xorwf	_joystick_y_pos+1,w
  1675  0184  1D03               	btfss	3,2
  1676  0185  2987               	goto	u2381
  1677  0186  2988               	goto	u2380
  1678  0187                     u2381:	
  1679  0187  2996               	goto	l2950
  1680  0188                     u2380:	
  1681  0188                     l2946:	
  1682                           
  1683                           ;concentration.c: 333:         if(cursor_movable) {
  1684  0188  0861               	movf	_cursor_movable,w
  1685  0189  1903               	btfsc	3,2
  1686  018A  298C               	goto	u2391
  1687  018B  298D               	goto	u2390
  1688  018C                     u2391:	
  1689  018C  29AC               	goto	l309
  1690  018D                     u2390:	
  1691  018D                     l2948:	
  1692                           
  1693                           ;concentration.c: 334:             update_cursor(62, 1);
  1694  018D  01B4               	clrf	update_cursor@direction
  1695  018E  0AB4               	incf	update_cursor@direction,f
  1696  018F  303E               	movlw	62
  1697  0190  120A  118A  24D6  120A  118A  	fcall	_update_cursor
  1698  0195  29AC               	goto	l309
  1699  0196                     l2950:	
  1700  0196  0857               	movf	_joystick_y_pos,w
  1701  0197  0458               	iorwf	_joystick_y_pos+1,w
  1702  0198  1D03               	btfss	3,2
  1703  0199  299B               	goto	u2401
  1704  019A  299C               	goto	u2400
  1705  019B                     u2401:	
  1706  019B  29AA               	goto	l306
  1707  019C                     u2400:	
  1708  019C                     l2952:	
  1709                           
  1710                           ;concentration.c: 337:         if(cursor_movable) {
  1711  019C  0861               	movf	_cursor_movable,w
  1712  019D  1903               	btfsc	3,2
  1713  019E  29A0               	goto	u2411
  1714  019F  29A1               	goto	u2410
  1715  01A0                     u2411:	
  1716  01A0  29AC               	goto	l309
  1717  01A1                     u2410:	
  1718  01A1                     l2954:	
  1719                           
  1720                           ;concentration.c: 338:             update_cursor(62, 1);
  1721  01A1  01B4               	clrf	update_cursor@direction
  1722  01A2  0AB4               	incf	update_cursor@direction,f
  1723  01A3  303E               	movlw	62
  1724  01A4  120A  118A  24D6  120A  118A  	fcall	_update_cursor
  1725  01A9  29AC               	goto	l309
  1726  01AA                     l306:	
  1727                           
  1728                           ;concentration.c: 341:         cursor_movable = 1;
  1729  01AA  01E1               	clrf	_cursor_movable
  1730  01AB  0AE1               	incf	_cursor_movable,f
  1731  01AC                     l309:	
  1732  01AC  0008               	return
  1733  01AD                     __end_of_update_gameboard_from_input:	
  1734                           
  1735                           	psect	text2
  1736  04D6                     __ptext2:	
  1737 ;; *************** function _update_cursor *****************
  1738 ;; Defined at:
  1739 ;;		line 345 in file "concentration.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  move_delay_c    1    wreg     unsigned char 
  1742 ;;  direction       1   20[BANK0 ] unsigned char 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  move_delay_c    1   23[BANK0 ] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1754 ;;      Params:         0       1       0       0       0
  1755 ;;      Locals:         0       1       0       0       0
  1756 ;;      Temps:          0       2       0       0       0
  1757 ;;      Totals:         0       4       0       0       0
  1758 ;;Total ram usage:        4 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    4
  1761 ;; This function calls:
  1762 ;;		_get_current_char
  1763 ;;		_lcd_goto
  1764 ;;		_lcd_putch
  1765 ;; This function is called by:
  1766 ;;		_update_gameboard_from_input
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _update_cursor
  1772  04D6                     _update_cursor:	
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1776                           ;update_cursor@move_delay_count stored from wreg
  1777  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1778  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1779  04D8  00B7               	movwf	update_cursor@move_delay_count
  1780  04D9                     l2728:	
  1781                           
  1782                           ;concentration.c: 346:     cursor_movable = 0;
  1783  04D9  01E1               	clrf	_cursor_movable
  1784  04DA                     l2730:	
  1785                           
  1786                           ;concentration.c: 347:     cursor_move_delay_count = move_delay_count;
  1787  04DA  0837               	movf	update_cursor@move_delay_count,w
  1788  04DB  00B5               	movwf	??_update_cursor
  1789  04DC  0835               	movf	??_update_cursor,w
  1790  04DD  00FA               	movwf	_cursor_move_delay_count
  1791                           
  1792                           ;concentration.c: 348:     switch(direction) {
  1793  04DE  2D1D               	goto	l2752
  1794  04DF                     l2732:	
  1795                           
  1796                           ;concentration.c: 350:             cursor_pos ^= 0x40;
  1797  04DF  3040               	movlw	64
  1798  04E0  00B5               	movwf	??_update_cursor
  1799  04E1  0835               	movf	??_update_cursor,w
  1800  04E2  06E5               	xorwf	_cursor_pos,f
  1801                           
  1802                           ;concentration.c: 351:             break;
  1803  04E3  2D30               	goto	l2754
  1804  04E4                     l2734:	
  1805                           
  1806                           ;concentration.c: 355:                     cursor_pos = 0x0F;
  1807  04E4  300F               	movlw	15
  1808  04E5  00B5               	movwf	??_update_cursor
  1809  04E6  0835               	movf	??_update_cursor,w
  1810  04E7  00E5               	movwf	_cursor_pos
  1811                           
  1812                           ;concentration.c: 356:                     break;
  1813  04E8  2D30               	goto	l2754
  1814  04E9                     l2736:	
  1815                           
  1816                           ;concentration.c: 358:                     cursor_pos = 0x4F;
  1817  04E9  304F               	movlw	79
  1818  04EA  00B5               	movwf	??_update_cursor
  1819  04EB  0835               	movf	??_update_cursor,w
  1820  04EC  00E5               	movwf	_cursor_pos
  1821                           
  1822                           ;concentration.c: 359:                     break;
  1823  04ED  2D30               	goto	l2754
  1824  04EE                     l2738:	
  1825                           
  1826                           ;concentration.c: 361:                     cursor_pos--;
  1827  04EE  3001               	movlw	1
  1828  04EF  02E5               	subwf	_cursor_pos,f
  1829                           
  1830                           ;concentration.c: 362:             }
  1831  04F0  2D30               	goto	l2754
  1832  04F1                     l2740:	
  1833  04F1  0865               	movf	_cursor_pos,w
  1834  04F2  00B5               	movwf	??_update_cursor
  1835  04F3  01B6               	clrf	??_update_cursor+1
  1836                           
  1837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1838                           ; Switch size 1, requested type "simple"
  1839                           ; Number of cases is 1, Range of values is 0 to 0
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte            4     3 (average)
  1843                           ; direct_byte           11     8 (fixed)
  1844                           ; jumptable            260     6 (fixed)
  1845                           ;	Chosen strategy is simple_byte
  1846  04F4  0836               	movf	??_update_cursor+1,w
  1847  04F5  3A00               	xorlw	0	; case 0
  1848  04F6  1903               	skipnz
  1849  04F7  2CF9               	goto	l3092
  1850  04F8  2CEE               	goto	l2738
  1851  04F9                     l3092:	
  1852                           
  1853                           ; Switch size 1, requested type "simple"
  1854                           ; Number of cases is 2, Range of values is 0 to 64
  1855                           ; switch strategies available:
  1856                           ; Name         Instructions Cycles
  1857                           ; simple_byte            7     4 (average)
  1858                           ; direct_byte          203     8 (fixed)
  1859                           ; jumptable            260     6 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861  04F9  0835               	movf	??_update_cursor,w
  1862  04FA  3A00               	xorlw	0	; case 0
  1863  04FB  1903               	skipnz
  1864  04FC  2CE4               	goto	l2734
  1865  04FD  3A40               	xorlw	64	; case 64
  1866  04FE  1903               	skipnz
  1867  04FF  2CE9               	goto	l2736
  1868  0500  2CEE               	goto	l2738
  1869  0501                     l2742:	
  1870                           
  1871                           ;concentration.c: 367:                     cursor_pos = 0x00;
  1872  0501  01E5               	clrf	_cursor_pos
  1873                           
  1874                           ;concentration.c: 368:                     break;
  1875  0502  2D30               	goto	l2754
  1876  0503                     l2744:	
  1877                           
  1878                           ;concentration.c: 370:                     cursor_pos = 0x40;
  1879  0503  3040               	movlw	64
  1880  0504  00B5               	movwf	??_update_cursor
  1881  0505  0835               	movf	??_update_cursor,w
  1882  0506  00E5               	movwf	_cursor_pos
  1883                           
  1884                           ;concentration.c: 371:                     break;
  1885  0507  2D30               	goto	l2754
  1886  0508                     l2746:	
  1887                           
  1888                           ;concentration.c: 373:                     cursor_pos++;
  1889  0508  3001               	movlw	1
  1890  0509  00B5               	movwf	??_update_cursor
  1891  050A  0835               	movf	??_update_cursor,w
  1892  050B  07E5               	addwf	_cursor_pos,f
  1893                           
  1894                           ;concentration.c: 374:             }
  1895  050C  2D30               	goto	l2754
  1896  050D                     l2748:	
  1897  050D  0865               	movf	_cursor_pos,w
  1898  050E  00B5               	movwf	??_update_cursor
  1899  050F  01B6               	clrf	??_update_cursor+1
  1900                           
  1901                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1902                           ; Switch size 1, requested type "simple"
  1903                           ; Number of cases is 1, Range of values is 0 to 0
  1904                           ; switch strategies available:
  1905                           ; Name         Instructions Cycles
  1906                           ; simple_byte            4     3 (average)
  1907                           ; direct_byte           11     8 (fixed)
  1908                           ; jumptable            260     6 (fixed)
  1909                           ;	Chosen strategy is simple_byte
  1910  0510  0836               	movf	??_update_cursor+1,w
  1911  0511  3A00               	xorlw	0	; case 0
  1912  0512  1903               	skipnz
  1913  0513  2D15               	goto	l3094
  1914  0514  2D08               	goto	l2746
  1915  0515                     l3094:	
  1916                           
  1917                           ; Switch size 1, requested type "simple"
  1918                           ; Number of cases is 2, Range of values is 15 to 79
  1919                           ; switch strategies available:
  1920                           ; Name         Instructions Cycles
  1921                           ; simple_byte            7     4 (average)
  1922                           ; direct_byte          206    11 (fixed)
  1923                           ; jumptable            263     9 (fixed)
  1924                           ;	Chosen strategy is simple_byte
  1925  0515  0835               	movf	??_update_cursor,w
  1926  0516  3A0F               	xorlw	15	; case 15
  1927  0517  1903               	skipnz
  1928  0518  2D01               	goto	l2742
  1929  0519  3A40               	xorlw	64	; case 79
  1930  051A  1903               	skipnz
  1931  051B  2D03               	goto	l2744
  1932  051C  2D08               	goto	l2746
  1933  051D                     l2752:	
  1934  051D  0834               	movf	update_cursor@direction,w
  1935  051E  00B5               	movwf	??_update_cursor
  1936  051F  01B6               	clrf	??_update_cursor+1
  1937                           
  1938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1939                           ; Switch size 1, requested type "simple"
  1940                           ; Number of cases is 1, Range of values is 0 to 0
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte            4     3 (average)
  1944                           ; direct_byte           11     8 (fixed)
  1945                           ; jumptable            260     6 (fixed)
  1946                           ;	Chosen strategy is simple_byte
  1947  0520  0836               	movf	??_update_cursor+1,w
  1948  0521  3A00               	xorlw	0	; case 0
  1949  0522  1903               	skipnz
  1950  0523  2D25               	goto	l3096
  1951  0524  2D30               	goto	l2754
  1952  0525                     l3096:	
  1953                           
  1954                           ; Switch size 1, requested type "simple"
  1955                           ; Number of cases is 3, Range of values is 1 to 3
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte           10     6 (average)
  1959                           ; direct_byte           20    11 (fixed)
  1960                           ; jumptable            263     9 (fixed)
  1961                           ;	Chosen strategy is simple_byte
  1962  0525  0835               	movf	??_update_cursor,w
  1963  0526  3A01               	xorlw	1	; case 1
  1964  0527  1903               	skipnz
  1965  0528  2CDF               	goto	l2732
  1966  0529  3A03               	xorlw	3	; case 2
  1967  052A  1903               	skipnz
  1968  052B  2CF1               	goto	l2740
  1969  052C  3A01               	xorlw	1	; case 3
  1970  052D  1903               	skipnz
  1971  052E  2D0D               	goto	l2748
  1972  052F  2D30               	goto	l2754
  1973  0530                     l2754:	
  1974                           
  1975                           ;concentration.c: 377:     lcd_putch(current_char, gameboard);
  1976  0530  3005               	movlw	5
  1977  0531  00B0               	movwf	lcd_putch@port
  1978  0532  3000               	movlw	0
  1979  0533  00B1               	movwf	lcd_putch@port+1
  1980  0534  0864               	movf	_current_char,w
  1981  0535  120A  158A  2516  120A  118A  	fcall	_lcd_putch
  1982                           
  1983                           ;concentration.c: 378:     lcd_goto(cursor_pos, gameboard);
  1984  053A  3005               	movlw	5
  1985  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1986  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1987  053D  00A8               	movwf	lcd_goto@port
  1988  053E  3000               	movlw	0
  1989  053F  00A9               	movwf	lcd_goto@port+1
  1990  0540  0865               	movf	_cursor_pos,w
  1991  0541  120A  158A  2571  120A  118A  	fcall	_lcd_goto
  1992                           
  1993                           ;concentration.c: 379:     get_current_char();
  1994  0546  120A  158A  2504  120A  118A  	fcall	_get_current_char
  1995  054B                     l2756:	
  1996                           
  1997                           ;concentration.c: 380:     if(cursor_solid == 1) {
  1998  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1999  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2000  054D  0363               	decf	_cursor_solid,w
  2001  054E  1D03               	btfss	3,2
  2002  054F  2D51               	goto	u2131
  2003  0550  2D52               	goto	u2130
  2004  0551                     u2131:	
  2005  0551  2D68               	goto	l328
  2006  0552                     u2130:	
  2007  0552                     l2758:	
  2008                           
  2009                           ;concentration.c: 381:         lcd_putch(0x20, gameboard);
  2010  0552  3005               	movlw	5
  2011  0553  00B0               	movwf	lcd_putch@port
  2012  0554  3000               	movlw	0
  2013  0555  00B1               	movwf	lcd_putch@port+1
  2014  0556  3020               	movlw	32
  2015  0557  120A  158A  2516  120A  118A  	fcall	_lcd_putch
  2016                           
  2017                           ;concentration.c: 382:         lcd_goto(cursor_pos, gameboard);
  2018  055C  3005               	movlw	5
  2019  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2020  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2021  055F  00A8               	movwf	lcd_goto@port
  2022  0560  3000               	movlw	0
  2023  0561  00A9               	movwf	lcd_goto@port+1
  2024  0562  0865               	movf	_cursor_pos,w
  2025  0563  120A  158A  2571  120A  118A  	fcall	_lcd_goto
  2026  0568                     l328:	
  2027  0568  0008               	return
  2028  0569                     __end_of_update_cursor:	
  2029                           
  2030                           	psect	text3
  2031  0E07                     __ptext3:	
  2032 ;; *************** function _toggle_cursor *****************
  2033 ;; Defined at:
  2034 ;;		line 386 in file "concentration.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    4
  2055 ;; This function calls:
  2056 ;;		_lcd_goto
  2057 ;;		_lcd_putch
  2058 ;; This function is called by:
  2059 ;;		_update_gameboard_from_input
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _toggle_cursor
  2065  0E07                     _toggle_cursor:	
  2066  0E07                     l2716:	
  2067                           ;incstack = 0
  2068                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2069                           
  2070                           
  2071                           ;concentration.c: 387:     if(cursor_solid == 0) {
  2072  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0E09  0863               	movf	_cursor_solid,w
  2075  0E0A  1D03               	btfss	3,2
  2076  0E0B  2E0D               	goto	u2121
  2077  0E0C  2E0E               	goto	u2120
  2078  0E0D                     u2121:	
  2079  0E0D  2E1D               	goto	l2722
  2080  0E0E                     u2120:	
  2081  0E0E                     l2718:	
  2082                           
  2083                           ;concentration.c: 388:         lcd_putch(0x20, gameboard);
  2084  0E0E  3005               	movlw	5
  2085  0E0F  00B0               	movwf	lcd_putch@port
  2086  0E10  3000               	movlw	0
  2087  0E11  00B1               	movwf	lcd_putch@port+1
  2088  0E12  3020               	movlw	32
  2089  0E13  120A  158A  2516  120A  158A  	fcall	_lcd_putch
  2090  0E18                     l2720:	
  2091                           
  2092                           ;concentration.c: 389:         cursor_solid = 1;
  2093  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0E1A  01E3               	clrf	_cursor_solid
  2096  0E1B  0AE3               	incf	_cursor_solid,f
  2097                           
  2098                           ;concentration.c: 390:     } else {
  2099  0E1C  2E2A               	goto	l2726
  2100  0E1D                     l2722:	
  2101                           
  2102                           ;concentration.c: 391:         lcd_putch(current_char, gameboard);
  2103  0E1D  3005               	movlw	5
  2104  0E1E  00B0               	movwf	lcd_putch@port
  2105  0E1F  3000               	movlw	0
  2106  0E20  00B1               	movwf	lcd_putch@port+1
  2107  0E21  0864               	movf	_current_char,w
  2108  0E22  120A  158A  2516  120A  158A  	fcall	_lcd_putch
  2109  0E27                     l2724:	
  2110                           
  2111                           ;concentration.c: 392:         cursor_solid = 0;
  2112  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0E29  01E3               	clrf	_cursor_solid
  2115  0E2A                     l2726:	
  2116                           
  2117                           ;concentration.c: 394:     lcd_goto(cursor_pos, gameboard);
  2118  0E2A  3005               	movlw	5
  2119  0E2B  00A8               	movwf	lcd_goto@port
  2120  0E2C  3000               	movlw	0
  2121  0E2D  00A9               	movwf	lcd_goto@port+1
  2122  0E2E  0865               	movf	_cursor_pos,w
  2123  0E2F  120A  158A  2571  120A  158A  	fcall	_lcd_goto
  2124  0E34                     l333:	
  2125  0E34  0008               	return
  2126  0E35                     __end_of_toggle_cursor:	
  2127                           
  2128                           	psect	text4
  2129  0398                     __ptext4:	
  2130 ;; *************** function _check_for_match *****************
  2131 ;; Defined at:
  2132 ;;		line 254 in file "concentration.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  player          1    wreg     unsigned char 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  player          1   24[BANK0 ] unsigned char 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         0       0       0       0       0
  2147 ;;      Locals:         0       1       0       0       0
  2148 ;;      Temps:          0       2       0       0       0
  2149 ;;      Totals:         0       3       0       0       0
  2150 ;;Total ram usage:        3 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    5
  2153 ;; This function calls:
  2154 ;;		_DelayMs
  2155 ;;		_display_gameboard
  2156 ;;		_display_scoreboard
  2157 ;;		_get_cursor_index
  2158 ;;		_play_tone
  2159 ;; This function is called by:
  2160 ;;		_update_gameboard_from_input
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _check_for_match
  2166  0398                     _check_for_match:	
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2170                           ;check_for_match@player stored from wreg
  2171  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2173  039A  00B8               	movwf	check_for_match@player
  2174  039B                     l2684:	
  2175                           
  2176                           ;concentration.c: 255:     if(selected_tile == 0xFF) {
  2177  039B  0A5E               	incf	_selected_tile,w
  2178  039C  1D03               	btfss	3,2
  2179  039D  2B9F               	goto	u2081
  2180  039E  2BA0               	goto	u2080
  2181  039F                     u2081:	
  2182  039F  2BA5               	goto	l2688
  2183  03A0                     u2080:	
  2184  03A0                     l2686:	
  2185                           
  2186                           ;concentration.c: 256:         selected_tile = cursor_pos;
  2187  03A0  0865               	movf	_cursor_pos,w
  2188  03A1  00B6               	movwf	??_check_for_match
  2189  03A2  0836               	movf	??_check_for_match,w
  2190  03A3  00DE               	movwf	_selected_tile
  2191                           
  2192                           ;concentration.c: 257:     } else {
  2193  03A4  2C41               	goto	l272
  2194  03A5                     l2688:	
  2195                           
  2196                           ;concentration.c: 258:         if(board[get_cursor_index(selected_tile)] == board[get_cu
      +                          rsor_index(cursor_pos)]) {
  2197  03A5  0865               	movf	_cursor_pos,w
  2198  03A6  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  2199  03AB  3EC0               	addlw	(low (_board| 0))& (0+255)
  2200  03AC  0084               	movwf	4
  2201  03AD  1383               	bcf	3,7	;select IRP bank1
  2202  03AE  0800               	movf	0,w
  2203  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2204  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2205  03B1  00B6               	movwf	??_check_for_match
  2206  03B2  085E               	movf	_selected_tile,w
  2207  03B3  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  2208  03B8  3EC0               	addlw	(low (_board| 0))& (0+255)
  2209  03B9  0084               	movwf	4
  2210  03BA  1383               	bcf	3,7	;select IRP bank1
  2211  03BB  0800               	movf	0,w
  2212  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2213  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2214  03BE  0636               	xorwf	??_check_for_match,w
  2215  03BF  1D03               	skipz
  2216  03C0  2BC2               	goto	u2091
  2217  03C1  2BC3               	goto	u2090
  2218  03C2                     u2091:	
  2219  03C2  2BE5               	goto	l2700
  2220  03C3                     u2090:	
  2221  03C3                     l2690:	
  2222                           
  2223                           ;concentration.c: 259:             if(player == 0) {
  2224  03C3  0838               	movf	check_for_match@player,w
  2225  03C4  1D03               	btfss	3,2
  2226  03C5  2BC7               	goto	u2101
  2227  03C6  2BC8               	goto	u2100
  2228  03C7                     u2101:	
  2229  03C7  2BCD               	goto	l2694
  2230  03C8                     u2100:	
  2231  03C8                     l2692:	
  2232                           
  2233                           ;concentration.c: 260:                 p1_score++;
  2234  03C8  3001               	movlw	1
  2235  03C9  00B6               	movwf	??_check_for_match
  2236  03CA  0836               	movf	??_check_for_match,w
  2237  03CB  07E0               	addwf	_p1_score,f
  2238                           
  2239                           ;concentration.c: 261:             } else {
  2240  03CC  2BD1               	goto	l269
  2241  03CD                     l2694:	
  2242                           
  2243                           ;concentration.c: 262:                 p2_score++;
  2244  03CD  3001               	movlw	1
  2245  03CE  00B6               	movwf	??_check_for_match
  2246  03CF  0836               	movf	??_check_for_match,w
  2247  03D0  07DF               	addwf	_p2_score,f
  2248  03D1                     l269:	
  2249                           ;concentration.c: 263:             }
  2250                           
  2251                           
  2252                           ;concentration.c: 264:             if((p1_score+p2_score)==16) {
  2253  03D1  0860               	movf	_p1_score,w
  2254  03D2  075F               	addwf	_p2_score,w
  2255  03D3  00B6               	movwf	??_check_for_match
  2256  03D4  01B7               	clrf	??_check_for_match+1
  2257  03D5  0DB7               	rlf	??_check_for_match+1,f
  2258  03D6  3010               	movlw	16
  2259  03D7  0636               	xorwf	??_check_for_match,w
  2260  03D8  0437               	iorwf	??_check_for_match+1,w
  2261  03D9  1D03               	btfss	3,2
  2262  03DA  2BDC               	goto	u2111
  2263  03DB  2BDD               	goto	u2110
  2264  03DC                     u2111:	
  2265  03DC  2BDF               	goto	l2698
  2266  03DD                     u2110:	
  2267  03DD                     l2696:	
  2268                           
  2269                           ;concentration.c: 265:                 game_over = 1;
  2270  03DD  01DB               	clrf	_game_over
  2271  03DE  0ADB               	incf	_game_over,f
  2272  03DF                     l2698:	
  2273                           
  2274                           ;concentration.c: 267:             display_scoreboard();
  2275  03DF  120A  118A  22CD  120A  118A  	fcall	_display_scoreboard
  2276                           
  2277                           ;concentration.c: 269:         } else {
  2278  03E4  2C2C               	goto	l2708
  2279  03E5                     l2700:	
  2280                           
  2281                           ;concentration.c: 270:             display_gameboard();
  2282  03E5  120A  158A  267A  120A  118A  	fcall	_display_gameboard
  2283  03EA                     l2702:	
  2284                           
  2285                           ;concentration.c: 271:             play_tone(5000, 125);
  2286  03EA  3088               	movlw	136
  2287  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2288  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2289  03ED  00A0               	movwf	play_tone@tone_period
  2290  03EE  3013               	movlw	19
  2291  03EF  00A1               	movwf	play_tone@tone_period+1
  2292  03F0  307D               	movlw	125
  2293  03F1  00B6               	movwf	??_check_for_match
  2294  03F2  0836               	movf	??_check_for_match,w
  2295  03F3  00A2               	movwf	play_tone@duration_8ms
  2296  03F4  120A  158A  258F  120A  118A  	fcall	_play_tone
  2297  03F9                     l2704:	
  2298                           
  2299                           ;concentration.c: 272:             play_tone(10000, 125);
  2300  03F9  3010               	movlw	16
  2301  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2302  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2303  03FC  00A0               	movwf	play_tone@tone_period
  2304  03FD  3027               	movlw	39
  2305  03FE  00A1               	movwf	play_tone@tone_period+1
  2306  03FF  307D               	movlw	125
  2307  0400  00B6               	movwf	??_check_for_match
  2308  0401  0836               	movf	??_check_for_match,w
  2309  0402  00A2               	movwf	play_tone@duration_8ms
  2310  0403  120A  158A  258F  120A  118A  	fcall	_play_tone
  2311                           
  2312                           ;concentration.c: 273:             visible[get_cursor_index(selected_tile)] = 0xFF;
  2313  0408  30FF               	movlw	255
  2314  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2315  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2316  040B  00B6               	movwf	??_check_for_match
  2317  040C  085E               	movf	_selected_tile,w
  2318  040D  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  2319  0412  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2320  0413  0084               	movwf	4
  2321  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0416  0836               	movf	??_check_for_match,w
  2324  0417  1383               	bcf	3,7	;select IRP bank1
  2325  0418  0080               	movwf	0
  2326                           
  2327                           ;concentration.c: 274:             visible[get_cursor_index(cursor_pos)] = 0xFF;
  2328  0419  30FF               	movlw	255
  2329  041A  00B6               	movwf	??_check_for_match
  2330  041B  0865               	movf	_cursor_pos,w
  2331  041C  120A  158A  24EA  120A  118A  	fcall	_get_cursor_index
  2332  0421  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2333  0422  0084               	movwf	4
  2334  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0425  0836               	movf	??_check_for_match,w
  2337  0426  1383               	bcf	3,7	;select IRP bank1
  2338  0427  0080               	movwf	0
  2339  0428                     l2706:	
  2340                           
  2341                           ;concentration.c: 275:             current_char = 0xFF;
  2342  0428  30FF               	movlw	255
  2343  0429  00B6               	movwf	??_check_for_match
  2344  042A  0836               	movf	??_check_for_match,w
  2345  042B  00E4               	movwf	_current_char
  2346  042C                     l2708:	
  2347                           
  2348                           ;concentration.c: 277:         selected_tile = 0xFF;
  2349  042C  30FF               	movlw	255
  2350  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2351  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2352  042F  00B6               	movwf	??_check_for_match
  2353  0430  0836               	movf	??_check_for_match,w
  2354  0431  00DE               	movwf	_selected_tile
  2355  0432                     l2710:	
  2356                           
  2357                           ;concentration.c: 278:         current_player ^= 0x01;
  2358  0432  3001               	movlw	1
  2359  0433  00B6               	movwf	??_check_for_match
  2360  0434  0836               	movf	??_check_for_match,w
  2361  0435  06DC               	xorwf	_current_player,f
  2362  0436                     l2712:	
  2363                           
  2364                           ;concentration.c: 279:         joystick_pressed = 1;
  2365  0436  01DD               	clrf	_joystick_pressed
  2366  0437  0ADD               	incf	_joystick_pressed,f
  2367  0438                     l2714:	
  2368                           
  2369                           ;concentration.c: 280:         DelayMs(100);
  2370  0438  3064               	movlw	100
  2371  0439  00A0               	movwf	DelayMs@millis
  2372  043A  3000               	movlw	0
  2373  043B  00A1               	movwf	DelayMs@millis+1
  2374  043C  120A  158A  253E  120A  118A  	fcall	_DelayMs
  2375  0441                     l272:	
  2376  0441  0008               	return
  2377  0442                     __end_of_check_for_match:	
  2378                           
  2379                           	psect	text5
  2380  0D8F                     __ptext5:	
  2381 ;; *************** function _play_tone *****************
  2382 ;; Defined at:
  2383 ;;		line 401 in file "concentration.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  tone_period     2    0[BANK0 ] int 
  2386 ;;  duration_8ms    1    2[BANK0 ] unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         0       3       0       0       0
  2399 ;;      Locals:         0       0       0       0       0
  2400 ;;      Temps:          0       2       0       0       0
  2401 ;;      Totals:         0       5       0       0       0
  2402 ;;Total ram usage:        5 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_check_for_match
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           
  2413                           ;psect for function _play_tone
  2414  0D8F                     _play_tone:	
  2415  0D8F                     l2622:	
  2416                           ;incstack = 0
  2417                           ; Regs used in _play_tone: [wreg+status,2+status,0]
  2418                           
  2419                           
  2420                           ;concentration.c: 402:     tone_delay = tone_period;
  2421  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0D91  0821               	movf	play_tone@tone_period+1,w
  2424  0D92  00F7               	movwf	_tone_delay+1
  2425  0D93  0820               	movf	play_tone@tone_period,w
  2426  0D94  00F6               	movwf	_tone_delay
  2427  0D95                     l2624:	
  2428                           
  2429                           ;concentration.c: 403:     CCPR2 = TMR1+tone_period;
  2430  0D95  080E               	movf	14,w	;volatile
  2431  0D96  0720               	addwf	play_tone@tone_period,w
  2432  0D97  00A3               	movwf	??_play_tone
  2433  0D98  080F               	movf	15,w	;volatile
  2434  0D99  1803               	skipnc
  2435  0D9A  0A0F               	incf	15,w	;volatile
  2436  0D9B  0721               	addwf	play_tone@tone_period+1,w
  2437  0D9C  00A4               	movwf	??_play_tone+1
  2438  0D9D  0823               	movf	??_play_tone,w
  2439  0D9E  009B               	movwf	27	;volatile
  2440  0D9F  0824               	movf	??_play_tone+1,w
  2441  0DA0  009C               	movwf	28	;volatile
  2442  0DA1                     l2626:	
  2443                           
  2444                           ;concentration.c: 404:     CCP2IF = 0;
  2445  0DA1  100D               	bcf	13,0	;volatile
  2446  0DA2                     l2628:	
  2447                           
  2448                           ;concentration.c: 405:     CCP2IE = 1;
  2449  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  2450  0DA3  1303               	bcf	3,6	;RP1=0, select bank1
  2451  0DA4  140D               	bsf	13,0	;volatile
  2452  0DA5                     l2630:	
  2453                           
  2454                           ;concentration.c: 406:     cursor_move_delay_count = duration_8ms;
  2455  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0DA7  0822               	movf	play_tone@duration_8ms,w
  2458  0DA8  00A3               	movwf	??_play_tone
  2459  0DA9  0823               	movf	??_play_tone,w
  2460  0DAA  00FA               	movwf	_cursor_move_delay_count
  2461  0DAB                     l2632:	
  2462                           
  2463                           ;concentration.c: 407:     cursor_movable = 0;
  2464  0DAB  01E1               	clrf	_cursor_movable
  2465  0DAC                     l2634:	
  2466                           ;concentration.c: 408:     while(cursor_movable == 0);
  2467                           
  2468  0DAC  0861               	movf	_cursor_movable,w
  2469  0DAD  1903               	btfsc	3,2
  2470  0DAE  2DB0               	goto	u1981
  2471  0DAF  2DB1               	goto	u1980
  2472  0DB0                     u1981:	
  2473  0DB0  2DAC               	goto	l2634
  2474  0DB1                     u1980:	
  2475  0DB1                     l341:	
  2476                           
  2477                           ;concentration.c: 409:     CCP2IE = 0;
  2478  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0DB3  100D               	bcf	13,0	;volatile
  2481  0DB4                     l342:	
  2482  0DB4  0008               	return
  2483  0DB5                     __end_of_play_tone:	
  2484                           
  2485                           	psect	text6
  2486  0569                     __ptext6:	
  2487 ;; *************** function _startup *****************
  2488 ;; Defined at:
  2489 ;;		line 147 in file "concentration.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    5
  2510 ;; This function calls:
  2511 ;;		_DelayMs
  2512 ;;		_display_gameboard
  2513 ;;		_display_scoreboard
  2514 ;;		_lcd_clear
  2515 ;;		_lcd_goto
  2516 ;;		_lcd_puts
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _startup
  2524  0569                     _startup:	
  2525  0569                     l2858:	
  2526                           ;incstack = 0
  2527                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2528                           
  2529                           
  2530                           ;concentration.c: 148:     game_over = 0;
  2531  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2532  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2533  056B  01DB               	clrf	_game_over
  2534  056C                     l2860:	
  2535                           
  2536                           ;concentration.c: 149:     lcd_clear(gameboard);
  2537  056C  3005               	movlw	5
  2538  056D  00A8               	movwf	lcd_clear@port
  2539  056E  3000               	movlw	0
  2540  056F  00A9               	movwf	lcd_clear@port+1
  2541  0570  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  2542  0575                     l2862:	
  2543                           
  2544                           ;concentration.c: 150:     lcd_clear(scoreboard);
  2545  0575  3008               	movlw	8
  2546  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0578  00A8               	movwf	lcd_clear@port
  2549  0579  3000               	movlw	0
  2550  057A  00A9               	movwf	lcd_clear@port+1
  2551  057B  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  2552  0580                     l2864:	
  2553                           
  2554                           ;concentration.c: 151:     lcd_puts(" Concentration!", scoreboard);
  2555  0580  3008               	movlw	8
  2556  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0583  00A8               	movwf	lcd_puts@port
  2559  0584  3000               	movlw	0
  2560  0585  00A9               	movwf	lcd_puts@port+1
  2561  0586  3052               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2562  0587  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  2563  058C                     l2866:	
  2564                           
  2565                           ;concentration.c: 152:     lcd_puts("Press the button", gameboard);
  2566  058C  3005               	movlw	5
  2567  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2568  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2569  058F  00A8               	movwf	lcd_puts@port
  2570  0590  3000               	movlw	0
  2571  0591  00A9               	movwf	lcd_puts@port+1
  2572  0592  3041               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2573  0593  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  2574  0598                     l2868:	
  2575                           
  2576                           ;concentration.c: 153:     lcd_goto(0x40, gameboard);
  2577  0598  3005               	movlw	5
  2578  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2579  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2580  059B  00A8               	movwf	lcd_goto@port
  2581  059C  3000               	movlw	0
  2582  059D  00A9               	movwf	lcd_goto@port+1
  2583  059E  3040               	movlw	64
  2584  059F  120A  158A  2571  120A  118A  	fcall	_lcd_goto
  2585  05A4                     l2870:	
  2586                           
  2587                           ;concentration.c: 154:     lcd_puts("    to start", gameboard);
  2588  05A4  3005               	movlw	5
  2589  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2590  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2591  05A7  00A8               	movwf	lcd_puts@port
  2592  05A8  3000               	movlw	0
  2593  05A9  00A9               	movwf	lcd_puts@port+1
  2594  05AA  3097               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2595  05AB  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  2596  05B0                     l210:	
  2597                           ;concentration.c: 155:     while(RB5);
  2598                           
  2599  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2600  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2601  05B2  1A86               	btfsc	6,5	;volatile
  2602  05B3  2DB5               	goto	u2151
  2603  05B4  2DB6               	goto	u2150
  2604  05B5                     u2151:	
  2605  05B5  2DB0               	goto	l210
  2606  05B6                     u2150:	
  2607  05B6                     l2872:	
  2608                           
  2609                           ;concentration.c: 156:     DelayMs(8);
  2610  05B6  3008               	movlw	8
  2611  05B7  00A0               	movwf	DelayMs@millis
  2612  05B8  3000               	movlw	0
  2613  05B9  00A1               	movwf	DelayMs@millis+1
  2614  05BA  120A  158A  253E  120A  118A  	fcall	_DelayMs
  2615  05BF                     l213:	
  2616                           ;concentration.c: 157:     while(!RB5);
  2617                           
  2618  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2619  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2620  05C1  1E86               	btfss	6,5	;volatile
  2621  05C2  2DC4               	goto	u2161
  2622  05C3  2DC5               	goto	u2160
  2623  05C4                     u2161:	
  2624  05C4  2DBF               	goto	l213
  2625  05C5                     u2160:	
  2626  05C5                     l2874:	
  2627                           
  2628                           ;concentration.c: 158:     DelayMs(8);
  2629  05C5  3008               	movlw	8
  2630  05C6  00A0               	movwf	DelayMs@millis
  2631  05C7  3000               	movlw	0
  2632  05C8  00A1               	movwf	DelayMs@millis+1
  2633  05C9  120A  158A  253E  120A  118A  	fcall	_DelayMs
  2634  05CE                     l2876:	
  2635                           
  2636                           ;concentration.c: 159:     lcd_clear(gameboard);
  2637  05CE  3005               	movlw	5
  2638  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2639  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2640  05D1  00A8               	movwf	lcd_clear@port
  2641  05D2  3000               	movlw	0
  2642  05D3  00A9               	movwf	lcd_clear@port+1
  2643  05D4  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  2644  05D9                     l2878:	
  2645                           
  2646                           ;concentration.c: 160:     lcd_clear(scoreboard);
  2647  05D9  3008               	movlw	8
  2648  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2649  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2650  05DC  00A8               	movwf	lcd_clear@port
  2651  05DD  3000               	movlw	0
  2652  05DE  00A9               	movwf	lcd_clear@port+1
  2653  05DF  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  2654  05E4                     l2880:	
  2655                           
  2656                           ;concentration.c: 161:     p1_score = 0;
  2657  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2658  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2659  05E6  01E0               	clrf	_p1_score
  2660  05E7                     l2882:	
  2661                           
  2662                           ;concentration.c: 162:     p2_score = 0;
  2663  05E7  01DF               	clrf	_p2_score
  2664  05E8                     l2884:	
  2665                           
  2666                           ;concentration.c: 163:     display_scoreboard();
  2667  05E8  120A  118A  22CD  120A  118A  	fcall	_display_scoreboard
  2668  05ED                     l2886:	
  2669                           
  2670                           ;concentration.c: 164:     display_gameboard();
  2671  05ED  120A  158A  267A  120A  118A  	fcall	_display_gameboard
  2672  05F2                     l216:	
  2673  05F2  0008               	return
  2674  05F3                     __end_of_startup:	
  2675                           
  2676                           	psect	text7
  2677  02CD                     __ptext7:	
  2678 ;; *************** function _display_scoreboard *****************
  2679 ;; Defined at:
  2680 ;;		line 167 in file "concentration.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0
  2696 ;;      Temps:          0       2       0       0       0
  2697 ;;      Totals:         0       2       0       0       0
  2698 ;;Total ram usage:        2 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    4
  2701 ;; This function calls:
  2702 ;;		___awdiv
  2703 ;;		___awmod
  2704 ;;		_lcd_goto
  2705 ;;		_lcd_putch
  2706 ;;		_lcd_puts
  2707 ;; This function is called by:
  2708 ;;		_startup
  2709 ;;		_check_for_match
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _display_scoreboard
  2715  02CD                     _display_scoreboard:	
  2716  02CD                     l2584:	
  2717                           ;incstack = 0
  2718                           ; Regs used in _display_scoreboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2719                           
  2720                           
  2721                           ;concentration.c: 168:     lcd_puts("     Score:", scoreboard);
  2722  02CD  3008               	movlw	8
  2723  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2724  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2725  02D0  00A8               	movwf	lcd_puts@port
  2726  02D1  3000               	movlw	0
  2727  02D2  00A9               	movwf	lcd_puts@port+1
  2728  02D3  30A4               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2729  02D4  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  2730                           
  2731                           ;concentration.c: 169:     lcd_goto(0x40, scoreboard);
  2732  02D9  3008               	movlw	8
  2733  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2734  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2735  02DC  00A8               	movwf	lcd_goto@port
  2736  02DD  3000               	movlw	0
  2737  02DE  00A9               	movwf	lcd_goto@port+1
  2738  02DF  3040               	movlw	64
  2739  02E0  120A  158A  2571  120A  118A  	fcall	_lcd_goto
  2740                           
  2741                           ;concentration.c: 170:     lcd_puts(" P1: ", scoreboard);
  2742  02E5  3008               	movlw	8
  2743  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2744  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2745  02E8  00A8               	movwf	lcd_puts@port
  2746  02E9  3000               	movlw	0
  2747  02EA  00A9               	movwf	lcd_puts@port+1
  2748  02EB  30C2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2749  02EC  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  2750                           
  2751                           ;concentration.c: 171:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  2752  02F1  3008               	movlw	8
  2753  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2754  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2755  02F4  00B0               	movwf	lcd_putch@port
  2756  02F5  3000               	movlw	0
  2757  02F6  00B1               	movwf	lcd_putch@port+1
  2758  02F7  300A               	movlw	10
  2759  02F8  00A7               	movwf	___awdiv@divisor
  2760  02F9  3000               	movlw	0
  2761  02FA  00A8               	movwf	___awdiv@divisor+1
  2762  02FB  0860               	movf	_p1_score,w
  2763  02FC  00B4               	movwf	??_display_scoreboard
  2764  02FD  01B5               	clrf	??_display_scoreboard+1
  2765  02FE  0834               	movf	??_display_scoreboard,w
  2766  02FF  00A2               	movwf	___awmod@dividend
  2767  0300  0835               	movf	??_display_scoreboard+1,w
  2768  0301  00A3               	movwf	___awmod@dividend+1
  2769  0302  3064               	movlw	100
  2770  0303  00A0               	movwf	___awmod@divisor
  2771  0304  3000               	movlw	0
  2772  0305  00A1               	movwf	___awmod@divisor+1
  2773  0306  120A  158A  27A5  120A  118A  	fcall	___awmod
  2774  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2775  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2776  030D  0821               	movf	?___awmod+1,w
  2777  030E  00AA               	movwf	___awdiv@dividend+1
  2778  030F  0820               	movf	?___awmod,w
  2779  0310  00A9               	movwf	___awdiv@dividend
  2780  0311  120A  118A  266F  120A  118A  	fcall	___awdiv
  2781  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0318  0827               	movf	?___awdiv,w
  2784  0319  3E30               	addlw	48
  2785  031A  120A  158A  2516  120A  118A  	fcall	_lcd_putch
  2786                           
  2787                           ;concentration.c: 172:     lcd_putch((p1_score%10)+0x30, scoreboard);
  2788  031F  3008               	movlw	8
  2789  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0322  00B0               	movwf	lcd_putch@port
  2792  0323  3000               	movlw	0
  2793  0324  00B1               	movwf	lcd_putch@port+1
  2794  0325  300A               	movlw	10
  2795  0326  00A0               	movwf	___awmod@divisor
  2796  0327  3000               	movlw	0
  2797  0328  00A1               	movwf	___awmod@divisor+1
  2798  0329  0860               	movf	_p1_score,w
  2799  032A  00B4               	movwf	??_display_scoreboard
  2800  032B  01B5               	clrf	??_display_scoreboard+1
  2801  032C  0834               	movf	??_display_scoreboard,w
  2802  032D  00A2               	movwf	___awmod@dividend
  2803  032E  0835               	movf	??_display_scoreboard+1,w
  2804  032F  00A3               	movwf	___awmod@dividend+1
  2805  0330  120A  158A  27A5  120A  118A  	fcall	___awmod
  2806  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0337  0820               	movf	?___awmod,w
  2809  0338  3E30               	addlw	48
  2810  0339  120A  158A  2516  120A  118A  	fcall	_lcd_putch
  2811                           
  2812                           ;concentration.c: 173:     lcd_puts("  P2: ", scoreboard);
  2813  033E  3008               	movlw	8
  2814  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0341  00A8               	movwf	lcd_puts@port
  2817  0342  3000               	movlw	0
  2818  0343  00A9               	movwf	lcd_puts@port+1
  2819  0344  30BB               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2820  0345  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  2821                           
  2822                           ;concentration.c: 174:     lcd_putch(((p2_score%100)/10)+0x30, scoreboard);
  2823  034A  3008               	movlw	8
  2824  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2825  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2826  034D  00B0               	movwf	lcd_putch@port
  2827  034E  3000               	movlw	0
  2828  034F  00B1               	movwf	lcd_putch@port+1
  2829  0350  300A               	movlw	10
  2830  0351  00A7               	movwf	___awdiv@divisor
  2831  0352  3000               	movlw	0
  2832  0353  00A8               	movwf	___awdiv@divisor+1
  2833  0354  085F               	movf	_p2_score,w
  2834  0355  00B4               	movwf	??_display_scoreboard
  2835  0356  01B5               	clrf	??_display_scoreboard+1
  2836  0357  0834               	movf	??_display_scoreboard,w
  2837  0358  00A2               	movwf	___awmod@dividend
  2838  0359  0835               	movf	??_display_scoreboard+1,w
  2839  035A  00A3               	movwf	___awmod@dividend+1
  2840  035B  3064               	movlw	100
  2841  035C  00A0               	movwf	___awmod@divisor
  2842  035D  3000               	movlw	0
  2843  035E  00A1               	movwf	___awmod@divisor+1
  2844  035F  120A  158A  27A5  120A  118A  	fcall	___awmod
  2845  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0366  0821               	movf	?___awmod+1,w
  2848  0367  00AA               	movwf	___awdiv@dividend+1
  2849  0368  0820               	movf	?___awmod,w
  2850  0369  00A9               	movwf	___awdiv@dividend
  2851  036A  120A  118A  266F  120A  118A  	fcall	___awdiv
  2852  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2853  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2854  0371  0827               	movf	?___awdiv,w
  2855  0372  3E30               	addlw	48
  2856  0373  120A  158A  2516  120A  118A  	fcall	_lcd_putch
  2857                           
  2858                           ;concentration.c: 175:     lcd_putch((p2_score%10)+0x30, scoreboard);
  2859  0378  3008               	movlw	8
  2860  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2861  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2862  037B  00B0               	movwf	lcd_putch@port
  2863  037C  3000               	movlw	0
  2864  037D  00B1               	movwf	lcd_putch@port+1
  2865  037E  300A               	movlw	10
  2866  037F  00A0               	movwf	___awmod@divisor
  2867  0380  3000               	movlw	0
  2868  0381  00A1               	movwf	___awmod@divisor+1
  2869  0382  085F               	movf	_p2_score,w
  2870  0383  00B4               	movwf	??_display_scoreboard
  2871  0384  01B5               	clrf	??_display_scoreboard+1
  2872  0385  0834               	movf	??_display_scoreboard,w
  2873  0386  00A2               	movwf	___awmod@dividend
  2874  0387  0835               	movf	??_display_scoreboard+1,w
  2875  0388  00A3               	movwf	___awmod@dividend+1
  2876  0389  120A  158A  27A5  120A  118A  	fcall	___awmod
  2877  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2878  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0390  0820               	movf	?___awmod,w
  2880  0391  3E30               	addlw	48
  2881  0392  120A  158A  2516  120A  118A  	fcall	_lcd_putch
  2882  0397                     l219:	
  2883  0397  0008               	return
  2884  0398                     __end_of_display_scoreboard:	
  2885                           
  2886                           	psect	text8
  2887  0FA5                     __ptext8:	
  2888 ;; *************** function ___awmod *****************
  2889 ;; Defined at:
  2890 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  divisor         2    0[BANK0 ] int 
  2893 ;;  dividend        2    2[BANK0 ] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  sign            1    6[BANK0 ] unsigned char 
  2896 ;;  counter         1    5[BANK0 ] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2    0[BANK0 ] int 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       4       0       0       0
  2907 ;;      Locals:         0       2       0       0       0
  2908 ;;      Temps:          0       1       0       0       0
  2909 ;;      Totals:         0       7       0       0       0
  2910 ;;Total ram usage:        7 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_display_scoreboard
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function ___awmod
  2922  0FA5                     ___awmod:	
  2923  0FA5                     l2546:	
  2924                           ;incstack = 0
  2925                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2926                           
  2927  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  2929  0FA7  01A6               	clrf	___awmod@sign
  2930  0FA8                     l2548:	
  2931  0FA8  1FA3               	btfss	___awmod@dividend+1,7
  2932  0FA9  2FAB               	goto	u1851
  2933  0FAA  2FAC               	goto	u1850
  2934  0FAB                     u1851:	
  2935  0FAB  2FB3               	goto	l2554
  2936  0FAC                     u1850:	
  2937  0FAC                     l2550:	
  2938  0FAC  09A2               	comf	___awmod@dividend,f
  2939  0FAD  09A3               	comf	___awmod@dividend+1,f
  2940  0FAE  0AA2               	incf	___awmod@dividend,f
  2941  0FAF  1903               	skipnz
  2942  0FB0  0AA3               	incf	___awmod@dividend+1,f
  2943  0FB1                     l2552:	
  2944  0FB1  01A6               	clrf	___awmod@sign
  2945  0FB2  0AA6               	incf	___awmod@sign,f
  2946  0FB3                     l2554:	
  2947  0FB3  1FA1               	btfss	___awmod@divisor+1,7
  2948  0FB4  2FB6               	goto	u1861
  2949  0FB5  2FB7               	goto	u1860
  2950  0FB6                     u1861:	
  2951  0FB6  2FBC               	goto	l2558
  2952  0FB7                     u1860:	
  2953  0FB7                     l2556:	
  2954  0FB7  09A0               	comf	___awmod@divisor,f
  2955  0FB8  09A1               	comf	___awmod@divisor+1,f
  2956  0FB9  0AA0               	incf	___awmod@divisor,f
  2957  0FBA  1903               	skipnz
  2958  0FBB  0AA1               	incf	___awmod@divisor+1,f
  2959  0FBC                     l2558:	
  2960  0FBC  0820               	movf	___awmod@divisor,w
  2961  0FBD  0421               	iorwf	___awmod@divisor+1,w
  2962  0FBE  1903               	btfsc	3,2
  2963  0FBF  2FC1               	goto	u1871
  2964  0FC0  2FC2               	goto	u1870
  2965  0FC1                     u1871:	
  2966  0FC1  2FF1               	goto	l2576
  2967  0FC2                     u1870:	
  2968  0FC2                     l2560:	
  2969  0FC2  01A5               	clrf	___awmod@counter
  2970  0FC3  0AA5               	incf	___awmod@counter,f
  2971  0FC4  2FD0               	goto	l2566
  2972  0FC5                     l2562:	
  2973  0FC5  3001               	movlw	1
  2974  0FC6                     u1885:	
  2975  0FC6  1003               	clrc
  2976  0FC7  0DA0               	rlf	___awmod@divisor,f
  2977  0FC8  0DA1               	rlf	___awmod@divisor+1,f
  2978  0FC9  3EFF               	addlw	-1
  2979  0FCA  1D03               	skipz
  2980  0FCB  2FC6               	goto	u1885
  2981  0FCC                     l2564:	
  2982  0FCC  3001               	movlw	1
  2983  0FCD  00A4               	movwf	??___awmod
  2984  0FCE  0824               	movf	??___awmod,w
  2985  0FCF  07A5               	addwf	___awmod@counter,f
  2986  0FD0                     l2566:	
  2987  0FD0  1FA1               	btfss	___awmod@divisor+1,7
  2988  0FD1  2FD3               	goto	u1891
  2989  0FD2  2FD4               	goto	u1890
  2990  0FD3                     u1891:	
  2991  0FD3  2FC5               	goto	l2562
  2992  0FD4                     u1890:	
  2993  0FD4                     l2568:	
  2994  0FD4  0821               	movf	___awmod@divisor+1,w
  2995  0FD5  0223               	subwf	___awmod@dividend+1,w
  2996  0FD6  1D03               	skipz
  2997  0FD7  2FDA               	goto	u1905
  2998  0FD8  0820               	movf	___awmod@divisor,w
  2999  0FD9  0222               	subwf	___awmod@dividend,w
  3000  0FDA                     u1905:	
  3001  0FDA  1C03               	skipc
  3002  0FDB  2FDD               	goto	u1901
  3003  0FDC  2FDE               	goto	u1900
  3004  0FDD                     u1901:	
  3005  0FDD  2FE4               	goto	l2572
  3006  0FDE                     u1900:	
  3007  0FDE                     l2570:	
  3008  0FDE  0820               	movf	___awmod@divisor,w
  3009  0FDF  02A2               	subwf	___awmod@dividend,f
  3010  0FE0  0821               	movf	___awmod@divisor+1,w
  3011  0FE1  1C03               	skipc
  3012  0FE2  03A3               	decf	___awmod@dividend+1,f
  3013  0FE3  02A3               	subwf	___awmod@dividend+1,f
  3014  0FE4                     l2572:	
  3015  0FE4  3001               	movlw	1
  3016  0FE5                     u1915:	
  3017  0FE5  1003               	clrc
  3018  0FE6  0CA1               	rrf	___awmod@divisor+1,f
  3019  0FE7  0CA0               	rrf	___awmod@divisor,f
  3020  0FE8  3EFF               	addlw	-1
  3021  0FE9  1D03               	skipz
  3022  0FEA  2FE5               	goto	u1915
  3023  0FEB                     l2574:	
  3024  0FEB  3001               	movlw	1
  3025  0FEC  02A5               	subwf	___awmod@counter,f
  3026  0FED  1D03               	btfss	3,2
  3027  0FEE  2FF0               	goto	u1921
  3028  0FEF  2FF1               	goto	u1920
  3029  0FF0                     u1921:	
  3030  0FF0  2FD4               	goto	l2568
  3031  0FF1                     u1920:	
  3032  0FF1                     l2576:	
  3033  0FF1  0826               	movf	___awmod@sign,w
  3034  0FF2  1903               	btfsc	3,2
  3035  0FF3  2FF5               	goto	u1931
  3036  0FF4  2FF6               	goto	u1930
  3037  0FF5                     u1931:	
  3038  0FF5  2FFB               	goto	l2580
  3039  0FF6                     u1930:	
  3040  0FF6                     l2578:	
  3041  0FF6  09A2               	comf	___awmod@dividend,f
  3042  0FF7  09A3               	comf	___awmod@dividend+1,f
  3043  0FF8  0AA2               	incf	___awmod@dividend,f
  3044  0FF9  1903               	skipnz
  3045  0FFA  0AA3               	incf	___awmod@dividend+1,f
  3046  0FFB                     l2580:	
  3047  0FFB  0823               	movf	___awmod@dividend+1,w
  3048  0FFC  00A1               	movwf	?___awmod+1
  3049  0FFD  0822               	movf	___awmod@dividend,w
  3050  0FFE  00A0               	movwf	?___awmod
  3051  0FFF                     l672:	
  3052  0FFF  0008               	return
  3053  1000                     __end_of___awmod:	
  3054                           
  3055                           	psect	text9
  3056  0E7A                     __ptext9:	
  3057 ;; *************** function _display_gameboard *****************
  3058 ;; Defined at:
  3059 ;;		line 178 in file "concentration.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  i               1   21[BANK0 ] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         0       0       0       0       0
  3074 ;;      Locals:         0       1       0       0       0
  3075 ;;      Temps:          0       1       0       0       0
  3076 ;;      Totals:         0       2       0       0       0
  3077 ;;Total ram usage:        2 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    4
  3080 ;; This function calls:
  3081 ;;		_lcd_clear
  3082 ;;		_lcd_goto
  3083 ;;		_lcd_putch
  3084 ;; This function is called by:
  3085 ;;		_startup
  3086 ;;		_check_for_match
  3087 ;;		_update_gameboard_from_input
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _display_gameboard
  3093  0E7A                     _display_gameboard:	
  3094  0E7A                     l2586:	
  3095                           ;incstack = 0
  3096                           ; Regs used in _display_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3097                           
  3098                           
  3099                           ;concentration.c: 179:     lcd_clear(gameboard);
  3100  0E7A  3005               	movlw	5
  3101  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0E7D  00A8               	movwf	lcd_clear@port
  3104  0E7E  3000               	movlw	0
  3105  0E7F  00A9               	movwf	lcd_clear@port+1
  3106  0E80  120A  158A  2557  120A  158A  	fcall	_lcd_clear
  3107  0E85                     l2588:	
  3108                           
  3109                           ;concentration.c: 180:     char i;;concentration.c: 181:     for(i=0;i<32;i++) {
  3110  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0E87  01B5               	clrf	display_gameboard@i
  3113  0E88                     l2594:	
  3114                           
  3115                           ;concentration.c: 182:         if(i == 16) {
  3116  0E88  3010               	movlw	16
  3117  0E89  0635               	xorwf	display_gameboard@i,w
  3118  0E8A  1D03               	btfss	3,2
  3119  0E8B  2E8D               	goto	u1941
  3120  0E8C  2E8E               	goto	u1940
  3121  0E8D                     u1941:	
  3122  0E8D  2E98               	goto	l224
  3123  0E8E                     u1940:	
  3124  0E8E                     l2596:	
  3125                           
  3126                           ;concentration.c: 183:             lcd_goto(0x40, gameboard);
  3127  0E8E  3005               	movlw	5
  3128  0E8F  00A8               	movwf	lcd_goto@port
  3129  0E90  3000               	movlw	0
  3130  0E91  00A9               	movwf	lcd_goto@port+1
  3131  0E92  3040               	movlw	64
  3132  0E93  120A  158A  2571  120A  158A  	fcall	_lcd_goto
  3133  0E98                     l224:	
  3134                           ;concentration.c: 184:         }
  3135                           
  3136                           
  3137                           ;concentration.c: 185:         lcd_putch(visible[i], gameboard);
  3138  0E98  3005               	movlw	5
  3139  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0E9B  00B0               	movwf	lcd_putch@port
  3142  0E9C  3000               	movlw	0
  3143  0E9D  00B1               	movwf	lcd_putch@port+1
  3144  0E9E  0835               	movf	display_gameboard@i,w
  3145  0E9F  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3146  0EA0  0084               	movwf	4
  3147  0EA1  1383               	bcf	3,7	;select IRP bank1
  3148  0EA2  0800               	movf	0,w
  3149  0EA3  120A  158A  2516  120A  158A  	fcall	_lcd_putch
  3150  0EA8                     l2598:	
  3151                           
  3152                           ;concentration.c: 186:     }
  3153  0EA8  3001               	movlw	1
  3154  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0EAB  00B4               	movwf	??_display_gameboard
  3157  0EAC  0834               	movf	??_display_gameboard,w
  3158  0EAD  07B5               	addwf	display_gameboard@i,f
  3159  0EAE                     l2600:	
  3160  0EAE  3020               	movlw	32
  3161  0EAF  0235               	subwf	display_gameboard@i,w
  3162  0EB0  1C03               	skipc
  3163  0EB1  2EB3               	goto	u1951
  3164  0EB2  2EB4               	goto	u1950
  3165  0EB3                     u1951:	
  3166  0EB3  2E88               	goto	l2594
  3167  0EB4                     u1950:	
  3168  0EB4                     l2602:	
  3169                           
  3170                           ;concentration.c: 187:     lcd_goto(cursor_pos, gameboard);
  3171  0EB4  3005               	movlw	5
  3172  0EB5  00A8               	movwf	lcd_goto@port
  3173  0EB6  3000               	movlw	0
  3174  0EB7  00A9               	movwf	lcd_goto@port+1
  3175  0EB8  0865               	movf	_cursor_pos,w
  3176  0EB9  120A  158A  2571  120A  158A  	fcall	_lcd_goto
  3177  0EBE                     l225:	
  3178  0EBE  0008               	return
  3179  0EBF                     __end_of_display_gameboard:	
  3180                           
  3181                           	psect	text10
  3182  0D16                     __ptext10:	
  3183 ;; *************** function _lcd_putch *****************
  3184 ;; Defined at:
  3185 ;;		line 136 in file "lcd4bits.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  character       1    wreg     unsigned char 
  3188 ;;  port            2   16[BANK0 ] PTR unsigned char 
  3189 ;;		 -> PORTD(1), PORTA(1), 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  character       1   19[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       2       0       0       0
  3202 ;;      Locals:         0       1       0       0       0
  3203 ;;      Temps:          0       1       0       0       0
  3204 ;;      Totals:         0       4       0       0       0
  3205 ;;Total ram usage:        4 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    3
  3208 ;; This function calls:
  3209 ;;		_lcd_write
  3210 ;; This function is called by:
  3211 ;;		_display_scoreboard
  3212 ;;		_display_gameboard
  3213 ;;		_update_cursor
  3214 ;;		_toggle_cursor
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _lcd_putch
  3220  0D16                     _lcd_putch:	
  3221                           
  3222                           ;incstack = 0
  3223                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3224                           ;lcd_putch@character stored from wreg
  3225  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0D18  00B3               	movwf	lcd_putch@character
  3228  0D19                     l2490:	
  3229                           
  3230                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  3231  0D19  0833               	movf	lcd_putch@character,w
  3232  0D1A  00B2               	movwf	??_lcd_putch
  3233  0D1B  0832               	movf	??_lcd_putch,w
  3234  0D1C  00A2               	movwf	lcd_write@CmdChar
  3235  0D1D  0830               	movf	lcd_putch@port,w
  3236  0D1E  00A3               	movwf	lcd_write@port
  3237  0D1F  0831               	movf	lcd_putch@port+1,w
  3238  0D20  00A4               	movwf	lcd_write@port+1
  3239  0D21  3010               	movlw	16
  3240  0D22  120A  158A  2704  120A  158A  	fcall	_lcd_write
  3241  0D27                     l409:	
  3242  0D27  0008               	return
  3243  0D28                     __end_of_lcd_putch:	
  3244                           
  3245                           	psect	text11
  3246  01AD                     __ptext11:	
  3247 ;; *************** function _lcd_init *****************
  3248 ;; Defined at:
  3249 ;;		line 155 in file "lcd4bits.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  port            2   10[BANK0 ] PTR unsigned char 
  3252 ;;		 -> PORTD(1), PORTA(1), 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       2       0       0       0
  3265 ;;      Locals:         0       0       0       0       0
  3266 ;;      Temps:          0       1       0       0       0
  3267 ;;      Totals:         0       3       0       0       0
  3268 ;;Total ram usage:        3 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    4
  3271 ;; This function calls:
  3272 ;;		_DelayMs
  3273 ;;		_lcd_clear
  3274 ;;		_lcd_write
  3275 ;;		_tmr0_init
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _lcd_init
  3283  01AD                     _lcd_init:	
  3284  01AD                     l2776:	
  3285                           ;incstack = 0
  3286                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3287                           
  3288                           
  3289                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  3290  01AD  120A  158A  24E0  120A  118A  	fcall	_tmr0_init
  3291  01B2                     l2778:	
  3292                           
  3293                           ;lcd4bits.c: 158:     *port = 0;
  3294  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  3295  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  3296  01B4  082A               	movf	lcd_init@port,w
  3297  01B5  0084               	movwf	4
  3298  01B6  1783               	bsf	3,7
  3299  01B7  1C2B               	btfss	lcd_init@port+1,0
  3300  01B8  1383               	bcf	3,7
  3301  01B9  0180               	clrf	0
  3302  01BA                     l2780:	
  3303                           
  3304                           ;lcd4bits.c: 159:     DelayMs(15);
  3305  01BA  300F               	movlw	15
  3306  01BB  00A0               	movwf	DelayMs@millis
  3307  01BC  3000               	movlw	0
  3308  01BD  00A1               	movwf	DelayMs@millis+1
  3309  01BE  120A  158A  253E  120A  118A  	fcall	_DelayMs
  3310  01C3                     l2782:	
  3311                           
  3312                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  3313  01C3  3028               	movlw	40
  3314  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3315  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3316  01C6  00AC               	movwf	??_lcd_init
  3317  01C7  082C               	movf	??_lcd_init,w
  3318  01C8  00A2               	movwf	lcd_write@CmdChar
  3319  01C9  082A               	movf	lcd_init@port,w
  3320  01CA  00A3               	movwf	lcd_write@port
  3321  01CB  082B               	movf	lcd_init@port+1,w
  3322  01CC  00A4               	movwf	lcd_write@port+1
  3323  01CD  3000               	movlw	0
  3324  01CE  120A  158A  2704  120A  118A  	fcall	_lcd_write
  3325  01D3                     l2784:	
  3326                           
  3327                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  3328  01D3  300C               	movlw	12
  3329  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  3330  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  3331  01D6  00AC               	movwf	??_lcd_init
  3332  01D7  082C               	movf	??_lcd_init,w
  3333  01D8  00A2               	movwf	lcd_write@CmdChar
  3334  01D9  082A               	movf	lcd_init@port,w
  3335  01DA  00A3               	movwf	lcd_write@port
  3336  01DB  082B               	movf	lcd_init@port+1,w
  3337  01DC  00A4               	movwf	lcd_write@port+1
  3338  01DD  3000               	movlw	0
  3339  01DE  120A  158A  2704  120A  118A  	fcall	_lcd_write
  3340  01E3                     l2786:	
  3341                           
  3342                           ;lcd4bits.c: 162:     lcd_clear(port);
  3343  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  3344  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  3345  01E5  082A               	movf	lcd_init@port,w
  3346  01E6  00A8               	movwf	lcd_clear@port
  3347  01E7  082B               	movf	lcd_init@port+1,w
  3348  01E8  00A9               	movwf	lcd_clear@port+1
  3349  01E9  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  3350  01EE                     l2788:	
  3351                           
  3352                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  3353  01EE  3006               	movlw	6
  3354  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  3355  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  3356  01F1  00AC               	movwf	??_lcd_init
  3357  01F2  082C               	movf	??_lcd_init,w
  3358  01F3  00A2               	movwf	lcd_write@CmdChar
  3359  01F4  082A               	movf	lcd_init@port,w
  3360  01F5  00A3               	movwf	lcd_write@port
  3361  01F6  082B               	movf	lcd_init@port+1,w
  3362  01F7  00A4               	movwf	lcd_write@port+1
  3363  01F8  3000               	movlw	0
  3364  01F9  120A  158A  2704  120A  118A  	fcall	_lcd_write
  3365  01FE                     l415:	
  3366  01FE  0008               	return
  3367  01FF                     __end_of_lcd_init:	
  3368                           
  3369                           	psect	text12
  3370  0CE0                     __ptext12:	
  3371 ;; *************** function _tmr0_init *****************
  3372 ;; Defined at:
  3373 ;;		line 72 in file "lcd4bits.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       0       0       0       0
  3388 ;;      Locals:         0       0       0       0       0
  3389 ;;      Temps:          0       1       0       0       0
  3390 ;;      Totals:         0       1       0       0       0
  3391 ;;Total ram usage:        1 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    1
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_lcd_init
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _tmr0_init
  3403  0CE0                     _tmr0_init:	
  3404  0CE0                     l2772:	
  3405                           ;incstack = 0
  3406                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  3407                           
  3408                           
  3409                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  3410  0CE0  30C0               	movlw	192
  3411  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0CE3  00A0               	movwf	??_tmr0_init
  3414  0CE4  0820               	movf	??_tmr0_init,w
  3415  0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  3416  0CE6  1303               	bcf	3,6	;RP1=0, select bank1
  3417  0CE7  0581               	andwf	1,f	;volatile
  3418  0CE8                     l2774:	
  3419                           
  3420                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  3421  0CE8  1501               	bsf	1,2	;volatile
  3422  0CE9                     l380:	
  3423  0CE9  0008               	return
  3424  0CEA                     __end_of_tmr0_init:	
  3425                           
  3426                           	psect	text13
  3427  0DB5                     __ptext13:	
  3428 ;; *************** function _joystick_init *****************
  3429 ;; Defined at:
  3430 ;;		line 432 in file "concentration.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _joystick_init
  3460  0DB5                     _joystick_init:	
  3461  0DB5                     l2790:	
  3462                           ;incstack = 0
  3463                           ; Regs used in _joystick_init: [wreg+status,2]
  3464                           
  3465                           
  3466                           ;concentration.c: 433:     joystick_x_pos = 512;
  3467  0DB5  3000               	movlw	0
  3468  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0DB8  00D9               	movwf	_joystick_x_pos
  3471  0DB9  3002               	movlw	2
  3472  0DBA  00DA               	movwf	_joystick_x_pos+1
  3473                           
  3474                           ;concentration.c: 434:     joystick_y_pos = 512;
  3475  0DBB  3000               	movlw	0
  3476  0DBC  00D7               	movwf	_joystick_y_pos
  3477  0DBD  3002               	movlw	2
  3478  0DBE  00D8               	movwf	_joystick_y_pos+1
  3479  0DBF                     l2792:	
  3480                           
  3481                           ;concentration.c: 435:     PORTB = 0;
  3482  0DBF  0186               	clrf	6	;volatile
  3483  0DC0                     l2794:	
  3484                           
  3485                           ;concentration.c: 436:     nRBPU = 0;
  3486  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  3488  0DC2  1381               	bcf	1,7	;volatile
  3489  0DC3                     l2796:	
  3490                           
  3491                           ;concentration.c: 437:     WPUB = 0x24;
  3492  0DC3  3024               	movlw	36
  3493  0DC4  0095               	movwf	21	;volatile
  3494  0DC5                     l2798:	
  3495                           
  3496                           ;concentration.c: 438:     TRISB = 0x3F;
  3497  0DC5  303F               	movlw	63
  3498  0DC6  0086               	movwf	6	;volatile
  3499  0DC7                     l2800:	
  3500                           
  3501                           ;concentration.c: 439:     ANSELH = 0x1E;
  3502  0DC7  301E               	movlw	30
  3503  0DC8  1683               	bsf	3,5	;RP0=1, select bank3
  3504  0DC9  1703               	bsf	3,6	;RP1=1, select bank3
  3505  0DCA  0089               	movwf	9	;volatile
  3506  0DCB                     l2802:	
  3507                           
  3508                           ;concentration.c: 440:     GIE = 1;
  3509  0DCB  178B               	bsf	11,7	;volatile
  3510  0DCC                     l2804:	
  3511                           
  3512                           ;concentration.c: 441:     PEIE = 1;
  3513  0DCC  170B               	bsf	11,6	;volatile
  3514  0DCD                     l2806:	
  3515                           
  3516                           ;concentration.c: 442:     ADIF = 0;
  3517  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0DCF  130C               	bcf	12,6	;volatile
  3520  0DD0                     l2808:	
  3521                           
  3522                           ;concentration.c: 443:     ADIE = 1;
  3523  0DD0  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0DD1  1303               	bcf	3,6	;RP1=0, select bank1
  3525  0DD2  170C               	bsf	12,6	;volatile
  3526  0DD3                     l2810:	
  3527                           
  3528                           ;concentration.c: 444:     ADCON1 = 0x80;
  3529  0DD3  3080               	movlw	128
  3530  0DD4  009F               	movwf	31	;volatile
  3531  0DD5                     l2812:	
  3532                           
  3533                           ;concentration.c: 445:     ADCON0 = 0xA5;
  3534  0DD5  30A5               	movlw	165
  3535  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0DD8  009F               	movwf	31	;volatile
  3538  0DD9                     l2814:	
  3539                           
  3540                           ;concentration.c: 446:     joystick_pressed = 1;
  3541  0DD9  01DD               	clrf	_joystick_pressed
  3542  0DDA  0ADD               	incf	_joystick_pressed,f
  3543  0DDB                     l348:	
  3544  0DDB  0008               	return
  3545  0DDC                     __end_of_joystick_init:	
  3546                           
  3547                           	psect	text14
  3548  073E                     __ptext14:	
  3549 ;; *************** function _gameboard_init *****************
  3550 ;; Defined at:
  3551 ;;		line 209 in file "concentration.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  i               1   54[BANK0 ] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3565 ;;      Params:         0       0       0       0       0
  3566 ;;      Locals:         0       1       0       0       0
  3567 ;;      Temps:          0       1       0       0       0
  3568 ;;      Totals:         0       2       0       0       0
  3569 ;;Total ram usage:        2 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    5
  3572 ;; This function calls:
  3573 ;;		_get_current_char
  3574 ;;		_lcd_clear
  3575 ;;		_lcd_goto
  3576 ;;		_make_custom_chars
  3577 ;;		_randomize_gameboard
  3578 ;;		_time_init
  3579 ;; This function is called by:
  3580 ;;		_main
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function _gameboard_init
  3586  073E                     _gameboard_init:	
  3587  073E                     l2816:	
  3588                           ;incstack = 0
  3589                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3590                           
  3591                           
  3592                           ;concentration.c: 210:     selected_tile = 0xFF;
  3593  073E  30FF               	movlw	255
  3594  073F  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0740  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0741  00D5               	movwf	??_gameboard_init
  3597  0742  0855               	movf	??_gameboard_init,w
  3598  0743  00DE               	movwf	_selected_tile
  3599  0744                     l2818:	
  3600                           
  3601                           ;concentration.c: 211:     time_init();
  3602  0744  120A  158A  2528  120A  118A  	fcall	_time_init
  3603  0749                     l2820:	
  3604                           
  3605                           ;concentration.c: 212:     make_custom_chars();
  3606  0749  120A  118A  25F3  120A  118A  	fcall	_make_custom_chars
  3607  074E                     l2822:	
  3608                           
  3609                           ;concentration.c: 213:     char i;;concentration.c: 214:     for(i = 0; i < 32; i++) {
  3610  074E  1283               	bcf	3,5	;RP0=0, select bank0
  3611  074F  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0750  01D6               	clrf	gameboard_init@i
  3613  0751                     l2828:	
  3614                           
  3615                           ;concentration.c: 215:         visible[i] = 0xFF;
  3616  0751  30FF               	movlw	255
  3617  0752  00D5               	movwf	??_gameboard_init
  3618  0753  0856               	movf	gameboard_init@i,w
  3619  0754  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3620  0755  0084               	movwf	4
  3621  0756  0855               	movf	??_gameboard_init,w
  3622  0757  1383               	bcf	3,7	;select IRP bank1
  3623  0758  0080               	movwf	0
  3624  0759                     l2830:	
  3625                           
  3626                           ;concentration.c: 216:     }
  3627  0759  3001               	movlw	1
  3628  075A  00D5               	movwf	??_gameboard_init
  3629  075B  0855               	movf	??_gameboard_init,w
  3630  075C  07D6               	addwf	gameboard_init@i,f
  3631  075D                     l2832:	
  3632  075D  3020               	movlw	32
  3633  075E  0256               	subwf	gameboard_init@i,w
  3634  075F  1C03               	skipc
  3635  0760  2F62               	goto	u2141
  3636  0761  2F63               	goto	u2140
  3637  0762                     u2141:	
  3638  0762  2F51               	goto	l2828
  3639  0763                     u2140:	
  3640  0763                     l2834:	
  3641                           
  3642                           ;concentration.c: 217:     lcd_clear(gameboard);
  3643  0763  3005               	movlw	5
  3644  0764  00A8               	movwf	lcd_clear@port
  3645  0765  3000               	movlw	0
  3646  0766  00A9               	movwf	lcd_clear@port+1
  3647  0767  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  3648  076C                     l2836:	
  3649                           
  3650                           ;concentration.c: 218:     cursor_pos = 0x00;
  3651  076C  1283               	bcf	3,5	;RP0=0, select bank0
  3652  076D  1303               	bcf	3,6	;RP1=0, select bank0
  3653  076E  01E5               	clrf	_cursor_pos
  3654  076F                     l2838:	
  3655                           
  3656                           ;concentration.c: 219:     cursor_solid = 0;
  3657  076F  01E3               	clrf	_cursor_solid
  3658                           
  3659                           ;concentration.c: 220:     get_current_char();
  3660  0770  120A  158A  2504  120A  118A  	fcall	_get_current_char
  3661  0775                     l2840:	
  3662                           
  3663                           ;concentration.c: 221:     delay_loops = 0;
  3664  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0776  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0777  01E2               	clrf	_delay_loops
  3667  0778                     l2842:	
  3668                           
  3669                           ;concentration.c: 222:     cursor_movable = 1;
  3670  0778  01E1               	clrf	_cursor_movable
  3671  0779  0AE1               	incf	_cursor_movable,f
  3672  077A                     l2844:	
  3673                           
  3674                           ;concentration.c: 223:     lcd_goto(cursor_pos, gameboard);
  3675  077A  3005               	movlw	5
  3676  077B  00A8               	movwf	lcd_goto@port
  3677  077C  3000               	movlw	0
  3678  077D  00A9               	movwf	lcd_goto@port+1
  3679  077E  0865               	movf	_cursor_pos,w
  3680  077F  120A  158A  2571  120A  118A  	fcall	_lcd_goto
  3681  0784                     l2846:	
  3682                           
  3683                           ;concentration.c: 224:     cursor_move_delay_count = 255;
  3684  0784  30FF               	movlw	255
  3685  0785  1283               	bcf	3,5	;RP0=0, select bank0
  3686  0786  1303               	bcf	3,6	;RP1=0, select bank0
  3687  0787  00D5               	movwf	??_gameboard_init
  3688  0788  0855               	movf	??_gameboard_init,w
  3689  0789  00FA               	movwf	_cursor_move_delay_count
  3690  078A                     l2848:	
  3691                           
  3692                           ;concentration.c: 225:     PR2 = 250;
  3693  078A  30FA               	movlw	250
  3694  078B  1683               	bsf	3,5	;RP0=1, select bank1
  3695  078C  1303               	bcf	3,6	;RP1=0, select bank1
  3696  078D  0092               	movwf	18	;volatile
  3697  078E                     l2850:	
  3698                           
  3699                           ;concentration.c: 226:     TMR2IF = 0;
  3700  078E  1283               	bcf	3,5	;RP0=0, select bank0
  3701  078F  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0790  108C               	bcf	12,1	;volatile
  3703  0791                     l2852:	
  3704                           
  3705                           ;concentration.c: 227:     TMR2IE = 1;
  3706  0791  1683               	bsf	3,5	;RP0=1, select bank1
  3707  0792  1303               	bcf	3,6	;RP1=0, select bank1
  3708  0793  148C               	bsf	12,1	;volatile
  3709  0794                     l2854:	
  3710                           
  3711                           ;concentration.c: 228:     T2CON = 0x56;
  3712  0794  3056               	movlw	86
  3713  0795  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0796  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0797  0092               	movwf	18	;volatile
  3716  0798                     l2856:	
  3717                           
  3718                           ;concentration.c: 229:     randomize_gameboard();
  3719  0798  120A  118A  279E  120A  118A  	fcall	_randomize_gameboard
  3720  079D                     l249:	
  3721  079D  0008               	return
  3722  079E                     __end_of_gameboard_init:	
  3723                           
  3724                           	psect	text15
  3725  0D28                     __ptext15:	
  3726 ;; *************** function _time_init *****************
  3727 ;; Defined at:
  3728 ;;		line 414 in file "concentration.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       0       0       0       0
  3743 ;;      Locals:         0       0       0       0       0
  3744 ;;      Temps:          0       1       0       0       0
  3745 ;;      Totals:         0       1       0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_gameboard_init
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _time_init
  3758  0D28                     _time_init:	
  3759  0D28                     l2662:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _time_init: [wreg+status,2+status,0]
  3762                           
  3763                           
  3764                           ;concentration.c: 415:     CCP1M3 = 1;
  3765  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0D2A  1597               	bsf	23,3	;volatile
  3768                           
  3769                           ;concentration.c: 416:     CCP1M2 = 0;
  3770  0D2B  1117               	bcf	23,2	;volatile
  3771                           
  3772                           ;concentration.c: 417:     CCP1M1 = 1;
  3773  0D2C  1497               	bsf	23,1	;volatile
  3774                           
  3775                           ;concentration.c: 418:     CCP1M0 = 0;
  3776  0D2D  1017               	bcf	23,0	;volatile
  3777                           
  3778                           ;concentration.c: 419:     TMR1CS = 0;
  3779  0D2E  1090               	bcf	16,1	;volatile
  3780                           
  3781                           ;concentration.c: 420:     T1CKPS0 = 0;
  3782  0D2F  1210               	bcf	16,4	;volatile
  3783                           
  3784                           ;concentration.c: 421:     T1CKPS1 = 0;
  3785  0D30  1290               	bcf	16,5	;volatile
  3786                           
  3787                           ;concentration.c: 422:     TMR1GE = 0;
  3788  0D31  1310               	bcf	16,6	;volatile
  3789                           
  3790                           ;concentration.c: 423:     TMR1ON = 1;
  3791  0D32  1410               	bsf	16,0	;volatile
  3792                           
  3793                           ;concentration.c: 425:     CCP2M3 = 1;
  3794  0D33  159D               	bsf	29,3	;volatile
  3795                           
  3796                           ;concentration.c: 426:     CCP2M2 = 0;
  3797  0D34  111D               	bcf	29,2	;volatile
  3798                           
  3799                           ;concentration.c: 427:     CCP2M1 = 0;
  3800  0D35  109D               	bcf	29,1	;volatile
  3801                           
  3802                           ;concentration.c: 428:     CCP2M0 = 0;
  3803  0D36  101D               	bcf	29,0	;volatile
  3804  0D37                     l2664:	
  3805                           
  3806                           ;concentration.c: 429:     TRISC &= 0xFD;
  3807  0D37  30FD               	movlw	253
  3808  0D38  00A0               	movwf	??_time_init
  3809  0D39  0820               	movf	??_time_init,w
  3810  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  3811  0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  3812  0D3C  0587               	andwf	7,f	;volatile
  3813  0D3D                     l345:	
  3814  0D3D  0008               	return
  3815  0D3E                     __end_of_time_init:	
  3816                           
  3817                           	psect	text16
  3818  079E                     __ptext16:	
  3819 ;; *************** function _randomize_gameboard *****************
  3820 ;; Defined at:
  3821 ;;		line 239 in file "concentration.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  used           32   19[BANK0 ] unsigned char [32]
  3826 ;;  random          1   52[BANK0 ] unsigned char 
  3827 ;;  current         1   51[BANK0 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       0       0       0       0
  3838 ;;      Locals:         0      34       0       0       0
  3839 ;;      Temps:          0       3       0       0       0
  3840 ;;      Totals:         0      37       0       0       0
  3841 ;;Total ram usage:       37 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		_DelayMs
  3846 ;;		___awdiv
  3847 ;; This function is called by:
  3848 ;;		_gameboard_init
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _randomize_gameboard
  3854  079E                     _randomize_gameboard:	
  3855  079E                     l2666:	
  3856                           ;incstack = 0
  3857                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3858                           
  3859                           
  3860                           ;concentration.c: 240:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      +                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  3861  079E  3033               	movlw	randomize_gameboard@used& (0+255)
  3862  079F  0084               	movwf	4
  3863  07A0  3020               	movlw	32
  3864  07A1  00FF               	movwf	btemp+1
  3865  07A2                     u2040:	
  3866  07A2  1383               	bcf	3,7	;select IRP bank0
  3867  07A3  0180               	clrf	0
  3868  07A4  0A84               	incf	4,f
  3869  07A5  0BFF               	decfsz	btemp+1,f
  3870  07A6  2FA2               	goto	u2040
  3871  07A7                     l2668:	
  3872                           
  3873                           ;concentration.c: 241:     char current = 0;
  3874  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  3875  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  3876  07A9  01D3               	clrf	randomize_gameboard@current
  3877                           
  3878                           ;concentration.c: 242:     char random;;concentration.c: 243:     while(current != 32) {
  3879  07AA  2FF6               	goto	l2682
  3880  07AB                     l2670:	
  3881                           
  3882                           ;concentration.c: 244:         DelayMs(TMR2>>(2+(TMR1%4)));
  3883  07AB  0811               	movf	17,w	;volatile
  3884  07AC  00B0               	movwf	??_randomize_gameboard
  3885  07AD  080E               	movf	14,w	;volatile
  3886  07AE  3903               	andlw	3
  3887  07AF  3E02               	addlw	2
  3888  07B0  3E01               	addlw	1
  3889  07B1  2FB4               	goto	u2054
  3890  07B2                     u2055:	
  3891  07B2  1003               	clrc
  3892  07B3  0CB0               	rrf	??_randomize_gameboard,f
  3893  07B4                     u2054:	
  3894  07B4  3EFF               	addlw	-1
  3895  07B5  1D03               	skipz
  3896  07B6  2FB2               	goto	u2055
  3897  07B7  0830               	movf	??_randomize_gameboard,w
  3898  07B8  00B1               	movwf	??_randomize_gameboard+1
  3899  07B9  01B2               	clrf	??_randomize_gameboard+2
  3900  07BA  0831               	movf	??_randomize_gameboard+1,w
  3901  07BB  00A0               	movwf	DelayMs@millis
  3902  07BC  0832               	movf	??_randomize_gameboard+2,w
  3903  07BD  00A1               	movwf	DelayMs@millis+1
  3904  07BE  120A  158A  253E  120A  118A  	fcall	_DelayMs
  3905  07C3                     l2672:	
  3906                           
  3907                           ;concentration.c: 245:         random = TMR1 % 32;
  3908  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3909  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3910  07C5  080E               	movf	14,w	;volatile
  3911  07C6  391F               	andlw	31
  3912  07C7  00B0               	movwf	??_randomize_gameboard
  3913  07C8  0830               	movf	??_randomize_gameboard,w
  3914  07C9  00D4               	movwf	randomize_gameboard@random
  3915  07CA                     l2674:	
  3916                           
  3917                           ;concentration.c: 246:         if(used[random] == 0) {
  3918  07CA  0854               	movf	randomize_gameboard@random,w
  3919  07CB  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3920  07CC  0084               	movwf	4
  3921  07CD  1383               	bcf	3,7	;select IRP bank0
  3922  07CE  0800               	movf	0,w
  3923  07CF  1D03               	btfss	3,2
  3924  07D0  2FD2               	goto	u2061
  3925  07D1  2FD3               	goto	u2060
  3926  07D2                     u2061:	
  3927  07D2  2FF6               	goto	l2682
  3928  07D3                     u2060:	
  3929  07D3                     l2676:	
  3930                           
  3931                           ;concentration.c: 247:             used[random] = 1;
  3932  07D3  0854               	movf	randomize_gameboard@random,w
  3933  07D4  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3934  07D5  0084               	movwf	4
  3935  07D6  0180               	clrf	0
  3936  07D7  0A80               	incf	0,f
  3937  07D8                     l2678:	
  3938                           
  3939                           ;concentration.c: 248:             board[random] = current/4;
  3940  07D8  3004               	movlw	4
  3941  07D9  00A7               	movwf	___awdiv@divisor
  3942  07DA  3000               	movlw	0
  3943  07DB  00A8               	movwf	___awdiv@divisor+1
  3944  07DC  0853               	movf	randomize_gameboard@current,w
  3945  07DD  00B0               	movwf	??_randomize_gameboard
  3946  07DE  01B1               	clrf	??_randomize_gameboard+1
  3947  07DF  0830               	movf	??_randomize_gameboard,w
  3948  07E0  00A9               	movwf	___awdiv@dividend
  3949  07E1  0831               	movf	??_randomize_gameboard+1,w
  3950  07E2  00AA               	movwf	___awdiv@dividend+1
  3951  07E3  120A  118A  266F  120A  118A  	fcall	___awdiv
  3952  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3953  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3954  07EA  0827               	movf	?___awdiv,w
  3955  07EB  00B2               	movwf	??_randomize_gameboard+2
  3956  07EC  0854               	movf	randomize_gameboard@random,w
  3957  07ED  3EC0               	addlw	(low (_board| 0))& (0+255)
  3958  07EE  0084               	movwf	4
  3959  07EF  0832               	movf	??_randomize_gameboard+2,w
  3960  07F0  1383               	bcf	3,7	;select IRP bank1
  3961  07F1  0080               	movwf	0
  3962  07F2                     l2680:	
  3963                           
  3964                           ;concentration.c: 249:             current++;
  3965  07F2  3001               	movlw	1
  3966  07F3  00B0               	movwf	??_randomize_gameboard
  3967  07F4  0830               	movf	??_randomize_gameboard,w
  3968  07F5  07D3               	addwf	randomize_gameboard@current,f
  3969  07F6                     l2682:	
  3970                           
  3971                           ;concentration.c: 243:     while(current != 32) {
  3972  07F6  3020               	movlw	32
  3973  07F7  0653               	xorwf	randomize_gameboard@current,w
  3974  07F8  1D03               	btfss	3,2
  3975  07F9  2FFB               	goto	u2071
  3976  07FA  2FFC               	goto	u2070
  3977  07FB                     u2071:	
  3978  07FB  2FAB               	goto	l2670
  3979  07FC                     u2070:	
  3980  07FC                     l262:	
  3981  07FC  0008               	return
  3982  07FD                     __end_of_randomize_gameboard:	
  3983                           
  3984                           	psect	text17
  3985  066F                     __ptext17:	
  3986 ;; *************** function ___awdiv *****************
  3987 ;; Defined at:
  3988 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  divisor         2    7[BANK0 ] int 
  3991 ;;  dividend        2    9[BANK0 ] int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  quotient        2   14[BANK0 ] int 
  3994 ;;  sign            1   13[BANK0 ] unsigned char 
  3995 ;;  counter         1   12[BANK0 ] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  2    7[BANK0 ] int 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       4       0       0       0
  4006 ;;      Locals:         0       4       0       0       0
  4007 ;;      Temps:          0       1       0       0       0
  4008 ;;      Totals:         0       9       0       0       0
  4009 ;;Total ram usage:        9 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_display_scoreboard
  4016 ;;		_randomize_gameboard
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function ___awdiv
  4022  066F                     ___awdiv:	
  4023  066F                     l2502:	
  4024                           ;incstack = 0
  4025                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4026                           
  4027  066F  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0670  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0671  01AD               	clrf	___awdiv@sign
  4030  0672                     l2504:	
  4031  0672  1FA8               	btfss	___awdiv@divisor+1,7
  4032  0673  2E75               	goto	u1751
  4033  0674  2E76               	goto	u1750
  4034  0675                     u1751:	
  4035  0675  2E7D               	goto	l2510
  4036  0676                     u1750:	
  4037  0676                     l2506:	
  4038  0676  09A7               	comf	___awdiv@divisor,f
  4039  0677  09A8               	comf	___awdiv@divisor+1,f
  4040  0678  0AA7               	incf	___awdiv@divisor,f
  4041  0679  1903               	skipnz
  4042  067A  0AA8               	incf	___awdiv@divisor+1,f
  4043  067B                     l2508:	
  4044  067B  01AD               	clrf	___awdiv@sign
  4045  067C  0AAD               	incf	___awdiv@sign,f
  4046  067D                     l2510:	
  4047  067D  1FAA               	btfss	___awdiv@dividend+1,7
  4048  067E  2E80               	goto	u1761
  4049  067F  2E81               	goto	u1760
  4050  0680                     u1761:	
  4051  0680  2E8A               	goto	l2516
  4052  0681                     u1760:	
  4053  0681                     l2512:	
  4054  0681  09A9               	comf	___awdiv@dividend,f
  4055  0682  09AA               	comf	___awdiv@dividend+1,f
  4056  0683  0AA9               	incf	___awdiv@dividend,f
  4057  0684  1903               	skipnz
  4058  0685  0AAA               	incf	___awdiv@dividend+1,f
  4059  0686                     l2514:	
  4060  0686  3001               	movlw	1
  4061  0687  00AB               	movwf	??___awdiv
  4062  0688  082B               	movf	??___awdiv,w
  4063  0689  06AD               	xorwf	___awdiv@sign,f
  4064  068A                     l2516:	
  4065  068A  01AE               	clrf	___awdiv@quotient
  4066  068B  01AF               	clrf	___awdiv@quotient+1
  4067  068C                     l2518:	
  4068  068C  0827               	movf	___awdiv@divisor,w
  4069  068D  0428               	iorwf	___awdiv@divisor+1,w
  4070  068E  1903               	btfsc	3,2
  4071  068F  2E91               	goto	u1771
  4072  0690  2E92               	goto	u1770
  4073  0691                     u1771:	
  4074  0691  2EC9               	goto	l2538
  4075  0692                     u1770:	
  4076  0692                     l2520:	
  4077  0692  01AC               	clrf	___awdiv@counter
  4078  0693  0AAC               	incf	___awdiv@counter,f
  4079  0694  2EA0               	goto	l2526
  4080  0695                     l2522:	
  4081  0695  3001               	movlw	1
  4082  0696                     u1785:	
  4083  0696  1003               	clrc
  4084  0697  0DA7               	rlf	___awdiv@divisor,f
  4085  0698  0DA8               	rlf	___awdiv@divisor+1,f
  4086  0699  3EFF               	addlw	-1
  4087  069A  1D03               	skipz
  4088  069B  2E96               	goto	u1785
  4089  069C                     l2524:	
  4090  069C  3001               	movlw	1
  4091  069D  00AB               	movwf	??___awdiv
  4092  069E  082B               	movf	??___awdiv,w
  4093  069F  07AC               	addwf	___awdiv@counter,f
  4094  06A0                     l2526:	
  4095  06A0  1FA8               	btfss	___awdiv@divisor+1,7
  4096  06A1  2EA3               	goto	u1791
  4097  06A2  2EA4               	goto	u1790
  4098  06A3                     u1791:	
  4099  06A3  2E95               	goto	l2522
  4100  06A4                     u1790:	
  4101  06A4                     l2528:	
  4102  06A4  3001               	movlw	1
  4103  06A5                     u1805:	
  4104  06A5  1003               	clrc
  4105  06A6  0DAE               	rlf	___awdiv@quotient,f
  4106  06A7  0DAF               	rlf	___awdiv@quotient+1,f
  4107  06A8  3EFF               	addlw	-1
  4108  06A9  1D03               	skipz
  4109  06AA  2EA5               	goto	u1805
  4110  06AB  0828               	movf	___awdiv@divisor+1,w
  4111  06AC  022A               	subwf	___awdiv@dividend+1,w
  4112  06AD  1D03               	skipz
  4113  06AE  2EB1               	goto	u1815
  4114  06AF  0827               	movf	___awdiv@divisor,w
  4115  06B0  0229               	subwf	___awdiv@dividend,w
  4116  06B1                     u1815:	
  4117  06B1  1C03               	skipc
  4118  06B2  2EB4               	goto	u1811
  4119  06B3  2EB5               	goto	u1810
  4120  06B4                     u1811:	
  4121  06B4  2EBC               	goto	l2534
  4122  06B5                     u1810:	
  4123  06B5                     l2530:	
  4124  06B5  0827               	movf	___awdiv@divisor,w
  4125  06B6  02A9               	subwf	___awdiv@dividend,f
  4126  06B7  0828               	movf	___awdiv@divisor+1,w
  4127  06B8  1C03               	skipc
  4128  06B9  03AA               	decf	___awdiv@dividend+1,f
  4129  06BA  02AA               	subwf	___awdiv@dividend+1,f
  4130  06BB                     l2532:	
  4131  06BB  142E               	bsf	___awdiv@quotient,0
  4132  06BC                     l2534:	
  4133  06BC  3001               	movlw	1
  4134  06BD                     u1825:	
  4135  06BD  1003               	clrc
  4136  06BE  0CA8               	rrf	___awdiv@divisor+1,f
  4137  06BF  0CA7               	rrf	___awdiv@divisor,f
  4138  06C0  3EFF               	addlw	-1
  4139  06C1  1D03               	skipz
  4140  06C2  2EBD               	goto	u1825
  4141  06C3                     l2536:	
  4142  06C3  3001               	movlw	1
  4143  06C4  02AC               	subwf	___awdiv@counter,f
  4144  06C5  1D03               	btfss	3,2
  4145  06C6  2EC8               	goto	u1831
  4146  06C7  2EC9               	goto	u1830
  4147  06C8                     u1831:	
  4148  06C8  2EA4               	goto	l2528
  4149  06C9                     u1830:	
  4150  06C9                     l2538:	
  4151  06C9  082D               	movf	___awdiv@sign,w
  4152  06CA  1903               	btfsc	3,2
  4153  06CB  2ECD               	goto	u1841
  4154  06CC  2ECE               	goto	u1840
  4155  06CD                     u1841:	
  4156  06CD  2ED3               	goto	l2542
  4157  06CE                     u1840:	
  4158  06CE                     l2540:	
  4159  06CE  09AE               	comf	___awdiv@quotient,f
  4160  06CF  09AF               	comf	___awdiv@quotient+1,f
  4161  06D0  0AAE               	incf	___awdiv@quotient,f
  4162  06D1  1903               	skipnz
  4163  06D2  0AAF               	incf	___awdiv@quotient+1,f
  4164  06D3                     l2542:	
  4165  06D3  082F               	movf	___awdiv@quotient+1,w
  4166  06D4  00A8               	movwf	?___awdiv+1
  4167  06D5  082E               	movf	___awdiv@quotient,w
  4168  06D6  00A7               	movwf	?___awdiv
  4169  06D7                     l659:	
  4170  06D7  0008               	return
  4171  06D8                     __end_of___awdiv:	
  4172                           
  4173                           	psect	text18
  4174  05F3                     __ptext18:	
  4175 ;; *************** function _make_custom_chars *****************
  4176 ;; Defined at:
  4177 ;;		line 190 in file "concentration.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0
  4193 ;;      Temps:          0       1       0       0       0
  4194 ;;      Totals:         0       1       0       0       0
  4195 ;;Total ram usage:        1 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    4
  4198 ;; This function calls:
  4199 ;;		_lcd_set_custom_char
  4200 ;; This function is called by:
  4201 ;;		_gameboard_init
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _make_custom_chars
  4207  05F3                     _make_custom_chars:	
  4208  05F3                     l2660:	
  4209                           ;incstack = 0
  4210                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4211                           
  4212                           
  4213                           ;concentration.c: 191:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0
      +                          E, 0x00};;concentration.c: 192:     lcd_set_custom_char(smile, 0x00, gameboard);
  4214  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  4215  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  4216  05F5  01A8               	clrf	lcd_set_custom_char@cg_address
  4217  05F6  3005               	movlw	5
  4218  05F7  00A9               	movwf	lcd_set_custom_char@port
  4219  05F8  3000               	movlw	0
  4220  05F9  00AA               	movwf	lcd_set_custom_char@port+1
  4221  05FA  3039               	movlw	(low ((make_custom_chars@smile-__stringbase)| (0+32768)))& (0+255)
  4222  05FB  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4223                           
  4224                           ;concentration.c: 193:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0
      +                          x00, 0x00};;concentration.c: 194:     lcd_set_custom_char(diamond, 0x01, gameboard);
  4225  0600  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0601  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0602  01A8               	clrf	lcd_set_custom_char@cg_address
  4228  0603  0AA8               	incf	lcd_set_custom_char@cg_address,f
  4229  0604  3005               	movlw	5
  4230  0605  00A9               	movwf	lcd_set_custom_char@port
  4231  0606  3000               	movlw	0
  4232  0607  00AA               	movwf	lcd_set_custom_char@port+1
  4233  0608  3031               	movlw	(low ((make_custom_chars@diamond-__stringbase)| (0+32768)))& (0+255)
  4234  0609  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4235                           
  4236                           ;concentration.c: 195:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x00};;concentration.c: 196:     lcd_set_custom_char(heart, 0x02, gameboard);
  4237  060E  3002               	movlw	2
  4238  060F  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0610  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0611  00AF               	movwf	??_make_custom_chars
  4241  0612  082F               	movf	??_make_custom_chars,w
  4242  0613  00A8               	movwf	lcd_set_custom_char@cg_address
  4243  0614  3005               	movlw	5
  4244  0615  00A9               	movwf	lcd_set_custom_char@port
  4245  0616  3000               	movlw	0
  4246  0617  00AA               	movwf	lcd_set_custom_char@port+1
  4247  0618  3029               	movlw	(low ((make_custom_chars@heart-__stringbase)| (0+32768)))& (0+255)
  4248  0619  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4249                           
  4250                           ;concentration.c: 197:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x0E};;concentration.c: 198:     lcd_set_custom_char(spade, 0x03, gameboard);
  4251  061E  3003               	movlw	3
  4252  061F  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0620  1303               	bcf	3,6	;RP1=0, select bank0
  4254  0621  00AF               	movwf	??_make_custom_chars
  4255  0622  082F               	movf	??_make_custom_chars,w
  4256  0623  00A8               	movwf	lcd_set_custom_char@cg_address
  4257  0624  3005               	movlw	5
  4258  0625  00A9               	movwf	lcd_set_custom_char@port
  4259  0626  3000               	movlw	0
  4260  0627  00AA               	movwf	lcd_set_custom_char@port+1
  4261  0628  3021               	movlw	(low ((make_custom_chars@spade-__stringbase)| (0+32768)))& (0+255)
  4262  0629  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4263                           
  4264                           ;concentration.c: 199:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04
      +                          , 0x0E};;concentration.c: 200:     lcd_set_custom_char(club, 0x04, gameboard);
  4265  062E  3004               	movlw	4
  4266  062F  1283               	bcf	3,5	;RP0=0, select bank0
  4267  0630  1303               	bcf	3,6	;RP1=0, select bank0
  4268  0631  00AF               	movwf	??_make_custom_chars
  4269  0632  082F               	movf	??_make_custom_chars,w
  4270  0633  00A8               	movwf	lcd_set_custom_char@cg_address
  4271  0634  3005               	movlw	5
  4272  0635  00A9               	movwf	lcd_set_custom_char@port
  4273  0636  3000               	movlw	0
  4274  0637  00AA               	movwf	lcd_set_custom_char@port+1
  4275  0638  3019               	movlw	(low ((make_custom_chars@club-__stringbase)| (0+32768)))& (0+255)
  4276  0639  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4277                           
  4278                           ;concentration.c: 201:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0
      +                          E, 0x00};;concentration.c: 202:     lcd_set_custom_char(skull, 0x05, gameboard);
  4279  063E  3005               	movlw	5
  4280  063F  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0640  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0641  00AF               	movwf	??_make_custom_chars
  4283  0642  082F               	movf	??_make_custom_chars,w
  4284  0643  00A8               	movwf	lcd_set_custom_char@cg_address
  4285  0644  3005               	movlw	5
  4286  0645  00A9               	movwf	lcd_set_custom_char@port
  4287  0646  3000               	movlw	0
  4288  0647  00AA               	movwf	lcd_set_custom_char@port+1
  4289  0648  3011               	movlw	(low ((make_custom_chars@skull-__stringbase)| (0+32768)))& (0+255)
  4290  0649  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4291                           
  4292                           ;concentration.c: 203:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 
      +                          0x05};;concentration.c: 204:     lcd_set_custom_char(RH, 0x06, gameboard);
  4293  064E  3006               	movlw	6
  4294  064F  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0651  00AF               	movwf	??_make_custom_chars
  4297  0652  082F               	movf	??_make_custom_chars,w
  4298  0653  00A8               	movwf	lcd_set_custom_char@cg_address
  4299  0654  3005               	movlw	5
  4300  0655  00A9               	movwf	lcd_set_custom_char@port
  4301  0656  3000               	movlw	0
  4302  0657  00AA               	movwf	lcd_set_custom_char@port+1
  4303  0658  3009               	movlw	(low ((make_custom_chars@RH-__stringbase)| (0+32768)))& (0+255)
  4304  0659  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4305                           
  4306                           ;concentration.c: 205:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02,
      +                           0x03};;concentration.c: 206:     lcd_set_custom_char(PIC, 0x07, gameboard);
  4307  065E  3007               	movlw	7
  4308  065F  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0660  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0661  00AF               	movwf	??_make_custom_chars
  4311  0662  082F               	movf	??_make_custom_chars,w
  4312  0663  00A8               	movwf	lcd_set_custom_char@cg_address
  4313  0664  3005               	movlw	5
  4314  0665  00A9               	movwf	lcd_set_custom_char@port
  4315  0666  3000               	movlw	0
  4316  0667  00AA               	movwf	lcd_set_custom_char@port+1
  4317  0668  3001               	movlw	(low ((make_custom_chars@PIC-__stringbase)| (0+32768)))& (0+255)
  4318  0669  120A  158A  2753  120A  118A  	fcall	_lcd_set_custom_char
  4319  066E                     l244:	
  4320  066E  0008               	return
  4321  066F                     __end_of_make_custom_chars:	
  4322                           
  4323                           	psect	text19
  4324  0F53                     __ptext19:	
  4325 ;; *************** function _lcd_set_custom_char *****************
  4326 ;; Defined at:
  4327 ;;		line 166 in file "lcd4bits.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  data            1    wreg     PTR const unsigned char 
  4330 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4331 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4332 ;;  cg_address      1    8[BANK0 ] unsigned char 
  4333 ;;  port            2    9[BANK0 ] PTR unsigned char 
  4334 ;;		 -> PORTA(1), 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  data            1   14[BANK0 ] PTR const unsigned char 
  4337 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4338 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4339 ;;  row             1   13[BANK0 ] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         0       3       0       0       0
  4350 ;;      Locals:         0       2       0       0       0
  4351 ;;      Temps:          0       2       0       0       0
  4352 ;;      Totals:         0       7       0       0       0
  4353 ;;Total ram usage:        7 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    3
  4356 ;; This function calls:
  4357 ;;		_lcd_write
  4358 ;; This function is called by:
  4359 ;;		_make_custom_chars
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _lcd_set_custom_char
  4365  0F53                     _lcd_set_custom_char:	
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4369                           ;lcd_set_custom_char@data stored from wreg
  4370  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0F55  00AE               	movwf	lcd_set_custom_char@data
  4373  0F56                     l2604:	
  4374                           
  4375                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  4376  0F56  01AD               	clrf	lcd_set_custom_char@row
  4377  0F57                     l2610:	
  4378                           
  4379                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  4380  0F57  0828               	movf	lcd_set_custom_char@cg_address,w
  4381  0F58  00AB               	movwf	??_lcd_set_custom_char
  4382  0F59  3002               	movlw	2
  4383  0F5A                     u1965:	
  4384  0F5A  1003               	clrc
  4385  0F5B  0DAB               	rlf	??_lcd_set_custom_char,f
  4386  0F5C  3EFF               	addlw	-1
  4387  0F5D  1D03               	skipz
  4388  0F5E  2F5A               	goto	u1965
  4389  0F5F  1003               	clrc
  4390  0F60  0D2B               	rlf	??_lcd_set_custom_char,w
  4391  0F61  042D               	iorwf	lcd_set_custom_char@row,w
  4392  0F62  3840               	iorlw	64
  4393  0F63  00AC               	movwf	??_lcd_set_custom_char+1
  4394  0F64  082C               	movf	??_lcd_set_custom_char+1,w
  4395  0F65  00A2               	movwf	lcd_write@CmdChar
  4396  0F66  0829               	movf	lcd_set_custom_char@port,w
  4397  0F67  00A3               	movwf	lcd_write@port
  4398  0F68  082A               	movf	lcd_set_custom_char@port+1,w
  4399  0F69  00A4               	movwf	lcd_write@port+1
  4400  0F6A  3000               	movlw	0
  4401  0F6B  120A  158A  2704  120A  158A  	fcall	_lcd_write
  4402                           
  4403                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  4404  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  4405  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  4406  0F72  082E               	movf	lcd_set_custom_char@data,w
  4407  0F73  0084               	movwf	4
  4408  0F74  120A  118A  2200  120A  158A  	fcall	stringdir
  4409  0F79  00AB               	movwf	??_lcd_set_custom_char
  4410  0F7A  082B               	movf	??_lcd_set_custom_char,w
  4411  0F7B  00A2               	movwf	lcd_write@CmdChar
  4412  0F7C  0829               	movf	lcd_set_custom_char@port,w
  4413  0F7D  00A3               	movwf	lcd_write@port
  4414  0F7E  082A               	movf	lcd_set_custom_char@port+1,w
  4415  0F7F  00A4               	movwf	lcd_write@port+1
  4416  0F80  3010               	movlw	16
  4417  0F81  120A  158A  2704  120A  158A  	fcall	_lcd_write
  4418  0F86                     l2612:	
  4419                           
  4420                           ;lcd4bits.c: 171:         *data++;
  4421  0F86  3001               	movlw	1
  4422  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  4423  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0F89  00AB               	movwf	??_lcd_set_custom_char
  4425  0F8A  082B               	movf	??_lcd_set_custom_char,w
  4426  0F8B  07AE               	addwf	lcd_set_custom_char@data,f
  4427  0F8C                     l2614:	
  4428                           
  4429                           ;lcd4bits.c: 172:     }
  4430  0F8C  3001               	movlw	1
  4431  0F8D  00AB               	movwf	??_lcd_set_custom_char
  4432  0F8E  082B               	movf	??_lcd_set_custom_char,w
  4433  0F8F  07AD               	addwf	lcd_set_custom_char@row,f
  4434  0F90                     l2616:	
  4435  0F90  3008               	movlw	8
  4436  0F91  022D               	subwf	lcd_set_custom_char@row,w
  4437  0F92  1C03               	skipc
  4438  0F93  2F95               	goto	u1971
  4439  0F94  2F96               	goto	u1970
  4440  0F95                     u1971:	
  4441  0F95  2F57               	goto	l2610
  4442  0F96                     u1970:	
  4443  0F96                     l2618:	
  4444                           
  4445                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  4446  0F96  3080               	movlw	128
  4447  0F97  00AB               	movwf	??_lcd_set_custom_char
  4448  0F98  082B               	movf	??_lcd_set_custom_char,w
  4449  0F99  00A2               	movwf	lcd_write@CmdChar
  4450  0F9A  0829               	movf	lcd_set_custom_char@port,w
  4451  0F9B  00A3               	movwf	lcd_write@port
  4452  0F9C  082A               	movf	lcd_set_custom_char@port+1,w
  4453  0F9D  00A4               	movwf	lcd_write@port+1
  4454  0F9E  3000               	movlw	0
  4455  0F9F  120A  158A  2704  120A  158A  	fcall	_lcd_write
  4456  0FA4                     l420:	
  4457  0FA4  0008               	return
  4458  0FA5                     __end_of_lcd_set_custom_char:	
  4459                           
  4460                           	psect	text20
  4461  0D04                     __ptext20:	
  4462 ;; *************** function _get_current_char *****************
  4463 ;; Defined at:
  4464 ;;		line 397 in file "concentration.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4478 ;;      Params:         0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0
  4480 ;;      Temps:          0       1       0       0       0
  4481 ;;      Totals:         0       1       0       0       0
  4482 ;;Total ram usage:        1 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    2
  4485 ;; This function calls:
  4486 ;;		_get_cursor_index
  4487 ;; This function is called by:
  4488 ;;		_gameboard_init
  4489 ;;		_update_cursor
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function _get_current_char
  4495  0D04                     _get_current_char:	
  4496  0D04                     l2620:	
  4497                           ;incstack = 0
  4498                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4499                           
  4500                           
  4501                           ;concentration.c: 398:     current_char = visible[get_cursor_index(cursor_pos)];
  4502  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0D06  0865               	movf	_cursor_pos,w
  4505  0D07  120A  158A  24EA  120A  158A  	fcall	_get_cursor_index
  4506  0D0C  3EA0               	addlw	(low (_visible| 0))& (0+255)
  4507  0D0D  0084               	movwf	4
  4508  0D0E  1383               	bcf	3,7	;select IRP bank1
  4509  0D0F  0800               	movf	0,w
  4510  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  4511  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  4512  0D12  00A1               	movwf	??_get_current_char
  4513  0D13  0821               	movf	??_get_current_char,w
  4514  0D14  00E4               	movwf	_current_char
  4515  0D15                     l336:	
  4516  0D15  0008               	return
  4517  0D16                     __end_of_get_current_char:	
  4518                           
  4519                           	psect	text21
  4520  0CEA                     __ptext21:	
  4521 ;; *************** function _get_cursor_index *****************
  4522 ;; Defined at:
  4523 ;;		line 232 in file "concentration.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  cursor          1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  cursor          1    0[BANK0 ] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      unsigned char 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         0       0       0       0       0
  4538 ;;      Locals:         0       1       0       0       0
  4539 ;;      Temps:          0       0       0       0       0
  4540 ;;      Totals:         0       1       0       0       0
  4541 ;;Total ram usage:        1 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_check_for_match
  4548 ;;		_update_gameboard_from_input
  4549 ;;		_get_current_char
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           
  4554                           ;psect for function _get_cursor_index
  4555  0CEA                     _get_cursor_index:	
  4556                           
  4557                           ;incstack = 0
  4558                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  4559                           ;get_cursor_index@cursor stored from wreg
  4560  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  4561  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  4562  0CEC  00A0               	movwf	get_cursor_index@cursor
  4563  0CED                     l2492:	
  4564                           
  4565                           ;concentration.c: 233:     if(cursor&0x40) {
  4566  0CED  1F20               	btfss	get_cursor_index@cursor,6
  4567  0CEE  2CF0               	goto	u1741
  4568  0CEF  2CF1               	goto	u1740
  4569  0CF0                     u1741:	
  4570  0CF0  2CF4               	goto	l2498
  4571  0CF1                     u1740:	
  4572  0CF1                     l2494:	
  4573                           
  4574                           ;concentration.c: 234:         return (cursor-0x30);
  4575  0CF1  0820               	movf	get_cursor_index@cursor,w
  4576  0CF2  3ED0               	addlw	208
  4577  0CF3  2CF5               	goto	l253
  4578  0CF4                     l2498:	
  4579                           
  4580                           ;concentration.c: 236:     return cursor;
  4581  0CF4  0820               	movf	get_cursor_index@cursor,w
  4582  0CF5                     l253:	
  4583  0CF5  0008               	return
  4584  0CF6                     __end_of_get_cursor_index:	
  4585                           
  4586                           	psect	text22
  4587  0E35                     __ptext22:	
  4588 ;; *************** function _game_end *****************
  4589 ;; Defined at:
  4590 ;;		line 135 in file "concentration.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4604 ;;      Params:         0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0
  4606 ;;      Temps:          0       1       0       0       0
  4607 ;;      Totals:         0       1       0       0       0
  4608 ;;Total ram usage:        1 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    5
  4611 ;; This function calls:
  4612 ;;		_DelayMs
  4613 ;;		_end_screen
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _game_end
  4621  0E35                     _game_end:	
  4622  0E35                     l2956:	
  4623                           ;incstack = 0
  4624                           ; Regs used in _game_end: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4625                           
  4626                           
  4627                           ;concentration.c: 136:     DelayMs(1000);
  4628  0E35  30E8               	movlw	232
  4629  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0E38  00A0               	movwf	DelayMs@millis
  4632  0E39  3003               	movlw	3
  4633  0E3A  00A1               	movwf	DelayMs@millis+1
  4634  0E3B  120A  158A  253E  120A  158A  	fcall	_DelayMs
  4635  0E40                     l2958:	
  4636                           
  4637                           ;concentration.c: 137:     if(p1_score>p2_score) {
  4638  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0E42  0860               	movf	_p1_score,w
  4641  0E43  025F               	subwf	_p2_score,w
  4642  0E44  1803               	skipnc
  4643  0E45  2E47               	goto	u2421
  4644  0E46  2E48               	goto	u2420
  4645  0E47                     u2421:	
  4646  0E47  2E53               	goto	l2962
  4647  0E48                     u2420:	
  4648  0E48                     l2960:	
  4649                           
  4650                           ;concentration.c: 138:         end_screen("    WINNER!!","    PLAYER 1");
  4651  0E48  307D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4652  0E49  00AF               	movwf	??_game_end
  4653  0E4A  082F               	movf	??_game_end,w
  4654  0E4B  00AC               	movwf	end_screen@second_row
  4655  0E4C  3070               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4656  0E4D  120A  118A  26D8  120A  158A  	fcall	_end_screen
  4657                           
  4658                           ;concentration.c: 139:     } else if(p1_score<p2_score) {
  4659  0E52  2E6E               	goto	l2968
  4660  0E53                     l2962:	
  4661  0E53  085F               	movf	_p2_score,w
  4662  0E54  0260               	subwf	_p1_score,w
  4663  0E55  1803               	skipnc
  4664  0E56  2E58               	goto	u2431
  4665  0E57  2E59               	goto	u2430
  4666  0E58                     u2431:	
  4667  0E58  2E64               	goto	l2966
  4668  0E59                     u2430:	
  4669  0E59                     l2964:	
  4670                           
  4671                           ;concentration.c: 140:         end_screen("    WINNER!!","    PLAYER 2");
  4672  0E59  308A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4673  0E5A  00AF               	movwf	??_game_end
  4674  0E5B  082F               	movf	??_game_end,w
  4675  0E5C  00AC               	movwf	end_screen@second_row
  4676  0E5D  3070               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4677  0E5E  120A  118A  26D8  120A  158A  	fcall	_end_screen
  4678                           
  4679                           ;concentration.c: 141:     } else {
  4680  0E63  2E6E               	goto	l2968
  4681  0E64                     l2966:	
  4682                           
  4683                           ;concentration.c: 142:         end_screen("   NO WINNER!","      TIED");
  4684  0E64  30B0               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4685  0E65  00AF               	movwf	??_game_end
  4686  0E66  082F               	movf	??_game_end,w
  4687  0E67  00AC               	movwf	end_screen@second_row
  4688  0E68  3062               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4689  0E69  120A  118A  26D8  120A  158A  	fcall	_end_screen
  4690  0E6E                     l2968:	
  4691                           
  4692                           ;concentration.c: 144:     DelayMs(1000);
  4693  0E6E  30E8               	movlw	232
  4694  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0E71  00A0               	movwf	DelayMs@millis
  4697  0E72  3003               	movlw	3
  4698  0E73  00A1               	movwf	DelayMs@millis+1
  4699  0E74  120A  158A  253E  120A  158A  	fcall	_DelayMs
  4700  0E79                     l207:	
  4701  0E79  0008               	return
  4702  0E7A                     __end_of_game_end:	
  4703                           
  4704                           	psect	text23
  4705  06D8                     __ptext23:	
  4706 ;; *************** function _end_screen *****************
  4707 ;; Defined at:
  4708 ;;		line 110 in file "concentration.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  first_row       1    wreg     PTR const unsigned char 
  4711 ;;		 -> STR_5(14), STR_3(13), STR_1(13), 
  4712 ;;  second_row      1   12[BANK0 ] PTR unsigned char 
  4713 ;;		 -> STR_6(11), STR_4(13), STR_2(13), 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  first_row       1   14[BANK0 ] PTR const unsigned char 
  4716 ;;		 -> STR_5(14), STR_3(13), STR_1(13), 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         0       1       0       0       0
  4727 ;;      Locals:         0       1       0       0       0
  4728 ;;      Temps:          0       1       0       0       0
  4729 ;;      Totals:         0       3       0       0       0
  4730 ;;Total ram usage:        3 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    4
  4733 ;; This function calls:
  4734 ;;		_lcd_clear
  4735 ;;		_lcd_goto
  4736 ;;		_lcd_puts
  4737 ;; This function is called by:
  4738 ;;		_game_end
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function _end_screen
  4744  06D8                     _end_screen:	
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _end_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4748                           ;end_screen@first_row stored from wreg
  4749  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4750  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4751  06DA  00AE               	movwf	end_screen@first_row
  4752  06DB                     l2636:	
  4753                           
  4754                           ;concentration.c: 111:     joystick_pressed = 1;
  4755  06DB  01DD               	clrf	_joystick_pressed
  4756  06DC  0ADD               	incf	_joystick_pressed,f
  4757                           
  4758                           ;concentration.c: 112:     while(joystick_pressed==1) {
  4759  06DD  2F38               	goto	l2658
  4760  06DE                     l2638:	
  4761                           
  4762                           ;concentration.c: 113:         lcd_clear(gameboard);
  4763  06DE  3005               	movlw	5
  4764  06DF  00A8               	movwf	lcd_clear@port
  4765  06E0  3000               	movlw	0
  4766  06E1  00A9               	movwf	lcd_clear@port+1
  4767  06E2  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  4768                           
  4769                           ;concentration.c: 114:         lcd_puts(first_row,gameboard);
  4770  06E7  3005               	movlw	5
  4771  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  4772  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  4773  06EA  00A8               	movwf	lcd_puts@port
  4774  06EB  3000               	movlw	0
  4775  06EC  00A9               	movwf	lcd_puts@port+1
  4776  06ED  082E               	movf	end_screen@first_row,w
  4777  06EE  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  4778  06F3                     l2640:	
  4779                           
  4780                           ;concentration.c: 115:         cursor_movable = 0;
  4781  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4782  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4783  06F5  01E1               	clrf	_cursor_movable
  4784  06F6                     l2642:	
  4785                           
  4786                           ;concentration.c: 116:         cursor_move_delay_count = 120;
  4787  06F6  3078               	movlw	120
  4788  06F7  00AD               	movwf	??_end_screen
  4789  06F8  082D               	movf	??_end_screen,w
  4790  06F9  00FA               	movwf	_cursor_move_delay_count
  4791                           
  4792                           ;concentration.c: 117:         while(cursor_movable == 0) {
  4793  06FA  2F00               	goto	l2646
  4794  06FB                     l192:	
  4795                           
  4796                           ;concentration.c: 118:             if(RB5 == 0) {
  4797  06FB  1A86               	btfsc	6,5	;volatile
  4798  06FC  2EFE               	goto	u1991
  4799  06FD  2EFF               	goto	u1990
  4800  06FE                     u1991:	
  4801  06FE  2F00               	goto	l2646
  4802  06FF                     u1990:	
  4803  06FF                     l2644:	
  4804                           
  4805                           ;concentration.c: 119:                 joystick_pressed = 0;
  4806  06FF  01DD               	clrf	_joystick_pressed
  4807  0700                     l2646:	
  4808                           
  4809                           ;concentration.c: 117:         while(cursor_movable == 0) {
  4810  0700  0861               	movf	_cursor_movable,w
  4811  0701  1903               	btfsc	3,2
  4812  0702  2F04               	goto	u2001
  4813  0703  2F05               	goto	u2000
  4814  0704                     u2001:	
  4815  0704  2EFB               	goto	l192
  4816  0705                     u2000:	
  4817  0705                     l2648:	
  4818                           
  4819                           ;concentration.c: 122:         lcd_clear(gameboard);
  4820  0705  3005               	movlw	5
  4821  0706  00A8               	movwf	lcd_clear@port
  4822  0707  3000               	movlw	0
  4823  0708  00A9               	movwf	lcd_clear@port+1
  4824  0709  120A  158A  2557  120A  118A  	fcall	_lcd_clear
  4825                           
  4826                           ;concentration.c: 123:         lcd_goto(0x40,gameboard);
  4827  070E  3005               	movlw	5
  4828  070F  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0710  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0711  00A8               	movwf	lcd_goto@port
  4831  0712  3000               	movlw	0
  4832  0713  00A9               	movwf	lcd_goto@port+1
  4833  0714  3040               	movlw	64
  4834  0715  120A  158A  2571  120A  118A  	fcall	_lcd_goto
  4835                           
  4836                           ;concentration.c: 124:         lcd_puts(second_row,gameboard);
  4837  071A  3005               	movlw	5
  4838  071B  1283               	bcf	3,5	;RP0=0, select bank0
  4839  071C  1303               	bcf	3,6	;RP1=0, select bank0
  4840  071D  00A8               	movwf	lcd_puts@port
  4841  071E  3000               	movlw	0
  4842  071F  00A9               	movwf	lcd_puts@port+1
  4843  0720  082C               	movf	end_screen@second_row,w
  4844  0721  120A  158A  25DC  120A  118A  	fcall	_lcd_puts
  4845  0726                     l2650:	
  4846                           
  4847                           ;concentration.c: 125:         cursor_movable = 0;
  4848  0726  1283               	bcf	3,5	;RP0=0, select bank0
  4849  0727  1303               	bcf	3,6	;RP1=0, select bank0
  4850  0728  01E1               	clrf	_cursor_movable
  4851  0729                     l2652:	
  4852                           
  4853                           ;concentration.c: 126:         cursor_move_delay_count = 120;
  4854  0729  3078               	movlw	120
  4855  072A  00AD               	movwf	??_end_screen
  4856  072B  082D               	movf	??_end_screen,w
  4857  072C  00FA               	movwf	_cursor_move_delay_count
  4858                           
  4859                           ;concentration.c: 127:         while(cursor_movable == 0) {
  4860  072D  2F33               	goto	l2656
  4861  072E                     l196:	
  4862                           
  4863                           ;concentration.c: 128:             if(RB5 == 0) {
  4864  072E  1A86               	btfsc	6,5	;volatile
  4865  072F  2F31               	goto	u2011
  4866  0730  2F32               	goto	u2010
  4867  0731                     u2011:	
  4868  0731  2F33               	goto	l2656
  4869  0732                     u2010:	
  4870  0732                     l2654:	
  4871                           
  4872                           ;concentration.c: 129:                 joystick_pressed = 0;
  4873  0732  01DD               	clrf	_joystick_pressed
  4874  0733                     l2656:	
  4875                           
  4876                           ;concentration.c: 127:         while(cursor_movable == 0) {
  4877  0733  0861               	movf	_cursor_movable,w
  4878  0734  1903               	btfsc	3,2
  4879  0735  2F37               	goto	u2021
  4880  0736  2F38               	goto	u2020
  4881  0737                     u2021:	
  4882  0737  2F2E               	goto	l196
  4883  0738                     u2020:	
  4884  0738                     l2658:	
  4885                           
  4886                           ;concentration.c: 112:     while(joystick_pressed==1) {
  4887  0738  035D               	decf	_joystick_pressed,w
  4888  0739  1903               	btfsc	3,2
  4889  073A  2F3C               	goto	u2031
  4890  073B  2F3D               	goto	u2030
  4891  073C                     u2031:	
  4892  073C  2EDE               	goto	l2638
  4893  073D                     u2030:	
  4894  073D                     l200:	
  4895  073D  0008               	return
  4896  073E                     __end_of_end_screen:	
  4897                           
  4898                           	psect	text24
  4899  0DDC                     __ptext24:	
  4900 ;; *************** function _lcd_puts *****************
  4901 ;; Defined at:
  4902 ;;		line 129 in file "lcd4bits.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  string          1    wreg     PTR const unsigned char 
  4905 ;;		 -> STR_12(7), STR_11(6), STR_10(12), STR_9(13), 
  4906 ;;		 -> STR_8(17), STR_7(16), STR_6(11), STR_5(14), 
  4907 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  4908 ;;  port            2    8[BANK0 ] PTR unsigned char 
  4909 ;;		 -> PORTD(1), PORTA(1), 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  string          1   11[BANK0 ] PTR const unsigned char 
  4912 ;;		 -> STR_12(7), STR_11(6), STR_10(12), STR_9(13), 
  4913 ;;		 -> STR_8(17), STR_7(16), STR_6(11), STR_5(14), 
  4914 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4924 ;;      Params:         0       2       0       0       0
  4925 ;;      Locals:         0       1       0       0       0
  4926 ;;      Temps:          0       1       0       0       0
  4927 ;;      Totals:         0       4       0       0       0
  4928 ;;Total ram usage:        4 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    3
  4931 ;; This function calls:
  4932 ;;		_lcd_write
  4933 ;; This function is called by:
  4934 ;;		_end_screen
  4935 ;;		_startup
  4936 ;;		_display_scoreboard
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function _lcd_puts
  4942  0DDC                     _lcd_puts:	
  4943                           
  4944                           ;incstack = 0
  4945                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4946                           ;lcd_puts@string stored from wreg
  4947  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  4949  0DDE  00AB               	movwf	lcd_puts@string
  4950  0DDF                     l2478:	
  4951                           
  4952                           ;lcd4bits.c: 130:     while (*string != 0) {
  4953  0DDF  2DFA               	goto	l2484
  4954  0DE0                     l2480:	
  4955                           
  4956                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  4957  0DE0  082B               	movf	lcd_puts@string,w
  4958  0DE1  0084               	movwf	4
  4959  0DE2  120A  118A  2200  120A  158A  	fcall	stringdir
  4960  0DE7  00AA               	movwf	??_lcd_puts
  4961  0DE8  082A               	movf	??_lcd_puts,w
  4962  0DE9  00A2               	movwf	lcd_write@CmdChar
  4963  0DEA  0828               	movf	lcd_puts@port,w
  4964  0DEB  00A3               	movwf	lcd_write@port
  4965  0DEC  0829               	movf	lcd_puts@port+1,w
  4966  0DED  00A4               	movwf	lcd_write@port+1
  4967  0DEE  3010               	movlw	16
  4968  0DEF  120A  158A  2704  120A  158A  	fcall	_lcd_write
  4969  0DF4                     l2482:	
  4970  0DF4  3001               	movlw	1
  4971  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4973  0DF7  00AA               	movwf	??_lcd_puts
  4974  0DF8  082A               	movf	??_lcd_puts,w
  4975  0DF9  07AB               	addwf	lcd_puts@string,f
  4976  0DFA                     l2484:	
  4977                           
  4978                           ;lcd4bits.c: 130:     while (*string != 0) {
  4979  0DFA  082B               	movf	lcd_puts@string,w
  4980  0DFB  0084               	movwf	4
  4981  0DFC  120A  118A  2200  120A  158A  	fcall	stringdir
  4982  0E01  3A00               	xorlw	0
  4983  0E02  1D03               	skipz
  4984  0E03  2E05               	goto	u1731
  4985  0E04  2E06               	goto	u1730
  4986  0E05                     u1731:	
  4987  0E05  2DE0               	goto	l2480
  4988  0E06                     u1730:	
  4989  0E06                     l406:	
  4990  0E06  0008               	return
  4991  0E07                     __end_of_lcd_puts:	
  4992                           
  4993                           	psect	text25
  4994  0D71                     __ptext25:	
  4995 ;; *************** function _lcd_goto *****************
  4996 ;; Defined at:
  4997 ;;		line 146 in file "lcd4bits.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  position        1    wreg     unsigned char 
  5000 ;;  port            2    8[BANK0 ] PTR unsigned char 
  5001 ;;		 -> PORTD(1), PORTA(1), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  position        1   11[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       2       0       0       0
  5014 ;;      Locals:         0       1       0       0       0
  5015 ;;      Temps:          0       1       0       0       0
  5016 ;;      Totals:         0       4       0       0       0
  5017 ;;Total ram usage:        4 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    3
  5020 ;; This function calls:
  5021 ;;		_DelayMs
  5022 ;;		_lcd_write
  5023 ;; This function is called by:
  5024 ;;		_end_screen
  5025 ;;		_startup
  5026 ;;		_display_scoreboard
  5027 ;;		_display_gameboard
  5028 ;;		_gameboard_init
  5029 ;;		_update_cursor
  5030 ;;		_toggle_cursor
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _lcd_goto
  5036  0D71                     _lcd_goto:	
  5037                           
  5038                           ;incstack = 0
  5039                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5040                           ;lcd_goto@position stored from wreg
  5041  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  5042  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  5043  0D73  00AB               	movwf	lcd_goto@position
  5044  0D74                     l2486:	
  5045                           
  5046                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  5047  0D74  082B               	movf	lcd_goto@position,w
  5048  0D75  3E80               	addlw	128
  5049  0D76  00AA               	movwf	??_lcd_goto
  5050  0D77  082A               	movf	??_lcd_goto,w
  5051  0D78  00A2               	movwf	lcd_write@CmdChar
  5052  0D79  0828               	movf	lcd_goto@port,w
  5053  0D7A  00A3               	movwf	lcd_write@port
  5054  0D7B  0829               	movf	lcd_goto@port+1,w
  5055  0D7C  00A4               	movwf	lcd_write@port+1
  5056  0D7D  3000               	movlw	0
  5057  0D7E  120A  158A  2704  120A  158A  	fcall	_lcd_write
  5058  0D83                     l2488:	
  5059                           
  5060                           ;lcd4bits.c: 149:     DelayMs(2);
  5061  0D83  3002               	movlw	2
  5062  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0D86  00A0               	movwf	DelayMs@millis
  5065  0D87  3000               	movlw	0
  5066  0D88  00A1               	movwf	DelayMs@millis+1
  5067  0D89  120A  158A  253E  120A  158A  	fcall	_DelayMs
  5068  0D8E                     l412:	
  5069  0D8E  0008               	return
  5070  0D8F                     __end_of_lcd_goto:	
  5071                           
  5072                           	psect	text26
  5073  0D57                     __ptext26:	
  5074 ;; *************** function _lcd_clear *****************
  5075 ;; Defined at:
  5076 ;;		line 123 in file "lcd4bits.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  port            2    8[BANK0 ] PTR unsigned char 
  5079 ;;		 -> PORTD(1), PORTA(1), 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5091 ;;      Params:         0       2       0       0       0
  5092 ;;      Locals:         0       0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0
  5094 ;;      Totals:         0       2       0       0       0
  5095 ;;Total ram usage:        2 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    3
  5098 ;; This function calls:
  5099 ;;		_DelayMs
  5100 ;;		_lcd_write
  5101 ;; This function is called by:
  5102 ;;		_end_screen
  5103 ;;		_startup
  5104 ;;		_display_gameboard
  5105 ;;		_gameboard_init
  5106 ;;		_lcd_init
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function _lcd_clear
  5112  0D57                     _lcd_clear:	
  5113  0D57                     l2474:	
  5114                           ;incstack = 0
  5115                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5116                           
  5117                           
  5118                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  5119  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  5120  0D58  1303               	bcf	3,6	;RP1=0, select bank0
  5121  0D59  01A2               	clrf	lcd_write@CmdChar
  5122  0D5A  0AA2               	incf	lcd_write@CmdChar,f
  5123  0D5B  0828               	movf	lcd_clear@port,w
  5124  0D5C  00A3               	movwf	lcd_write@port
  5125  0D5D  0829               	movf	lcd_clear@port+1,w
  5126  0D5E  00A4               	movwf	lcd_write@port+1
  5127  0D5F  3000               	movlw	0
  5128  0D60  120A  158A  2704  120A  158A  	fcall	_lcd_write
  5129  0D65                     l2476:	
  5130                           
  5131                           ;lcd4bits.c: 125:     DelayMs(2);
  5132  0D65  3002               	movlw	2
  5133  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0D68  00A0               	movwf	DelayMs@millis
  5136  0D69  3000               	movlw	0
  5137  0D6A  00A1               	movwf	DelayMs@millis+1
  5138  0D6B  120A  158A  253E  120A  158A  	fcall	_DelayMs
  5139  0D70                     l400:	
  5140  0D70  0008               	return
  5141  0D71                     __end_of_lcd_clear:	
  5142                           
  5143                           	psect	text27
  5144  0F04                     __ptext27:	
  5145 ;; *************** function _lcd_write *****************
  5146 ;; Defined at:
  5147 ;;		line 110 in file "lcd4bits.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  mode            1    wreg     unsigned char 
  5150 ;;  CmdChar         1    2[BANK0 ] unsigned char 
  5151 ;;  port            2    3[BANK0 ] PTR unsigned char 
  5152 ;;		 -> PORTD(1), PORTA(1), 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;  mode            1    7[BANK0 ] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5164 ;;      Params:         0       3       0       0       0
  5165 ;;      Locals:         0       1       0       0       0
  5166 ;;      Temps:          0       2       0       0       0
  5167 ;;      Totals:         0       6       0       0       0
  5168 ;;Total ram usage:        6 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    2
  5171 ;; This function calls:
  5172 ;;		_Delay20us
  5173 ;; This function is called by:
  5174 ;;		_lcd_clear
  5175 ;;		_lcd_puts
  5176 ;;		_lcd_putch
  5177 ;;		_lcd_goto
  5178 ;;		_lcd_init
  5179 ;;		_lcd_set_custom_char
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function _lcd_write
  5185  0F04                     _lcd_write:	
  5186                           
  5187                           ;incstack = 0
  5188                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5189                           ;lcd_write@mode stored from wreg
  5190  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  5191  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  5192  0F06  00A7               	movwf	lcd_write@mode
  5193  0F07                     l2464:	
  5194                           
  5195                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  5196  0F07  0822               	movf	lcd_write@CmdChar,w
  5197  0F08  00A5               	movwf	??_lcd_write
  5198  0F09  3004               	movlw	4
  5199  0F0A                     u1725:	
  5200  0F0A  1003               	clrc
  5201  0F0B  0CA5               	rrf	??_lcd_write,f
  5202  0F0C  3EFF               	addlw	-1
  5203  0F0D  1D03               	skipz
  5204  0F0E  2F0A               	goto	u1725
  5205  0F0F  0825               	movf	??_lcd_write,w
  5206  0F10  3E20               	addlw	32
  5207  0F11  0427               	iorwf	lcd_write@mode,w
  5208  0F12  00A6               	movwf	??_lcd_write+1
  5209  0F13  0823               	movf	lcd_write@port,w
  5210  0F14  0084               	movwf	4
  5211  0F15  1783               	bsf	3,7
  5212  0F16  1C24               	btfss	lcd_write@port+1,0
  5213  0F17  1383               	bcf	3,7
  5214  0F18  0826               	movf	??_lcd_write+1,w
  5215  0F19  0080               	movwf	0
  5216  0F1A                     l2466:	
  5217                           
  5218                           ;lcd4bits.c: 112:     Delay20us();
  5219  0F1A  120A  158A  24F6  120A  158A  	fcall	_Delay20us
  5220  0F1F                     l2468:	
  5221                           
  5222                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  5223  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  5224  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  5225  0F21  0823               	movf	lcd_write@port,w
  5226  0F22  0084               	movwf	4
  5227  0F23  1783               	bsf	3,7
  5228  0F24  1C24               	btfss	lcd_write@port+1,0
  5229  0F25  1383               	bcf	3,7
  5230  0F26  0800               	movf	0,w
  5231  0F27  39DF               	andlw	223
  5232  0F28  00A5               	movwf	??_lcd_write
  5233  0F29  0823               	movf	lcd_write@port,w
  5234  0F2A  0084               	movwf	4
  5235  0F2B  1783               	bsf	3,7
  5236  0F2C  1C24               	btfss	lcd_write@port+1,0
  5237  0F2D  1383               	bcf	3,7
  5238  0F2E  0825               	movf	??_lcd_write,w
  5239  0F2F  0080               	movwf	0
  5240  0F30                     l2470:	
  5241                           
  5242                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  5243  0F30  0822               	movf	lcd_write@CmdChar,w
  5244  0F31  390F               	andlw	15
  5245  0F32  3E20               	addlw	32
  5246  0F33  0427               	iorwf	lcd_write@mode,w
  5247  0F34  00A5               	movwf	??_lcd_write
  5248  0F35  0823               	movf	lcd_write@port,w
  5249  0F36  0084               	movwf	4
  5250  0F37  1783               	bsf	3,7
  5251  0F38  1C24               	btfss	lcd_write@port+1,0
  5252  0F39  1383               	bcf	3,7
  5253  0F3A  0825               	movf	??_lcd_write,w
  5254  0F3B  0080               	movwf	0
  5255  0F3C                     l2472:	
  5256                           
  5257                           ;lcd4bits.c: 116:     Delay20us();
  5258  0F3C  120A  158A  24F6  120A  158A  	fcall	_Delay20us
  5259                           
  5260                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  5261  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0F43  0823               	movf	lcd_write@port,w
  5264  0F44  0084               	movwf	4
  5265  0F45  1783               	bsf	3,7
  5266  0F46  1C24               	btfss	lcd_write@port+1,0
  5267  0F47  1383               	bcf	3,7
  5268  0F48  0800               	movf	0,w
  5269  0F49  39DF               	andlw	223
  5270  0F4A  00A5               	movwf	??_lcd_write
  5271  0F4B  0823               	movf	lcd_write@port,w
  5272  0F4C  0084               	movwf	4
  5273  0F4D  1783               	bsf	3,7
  5274  0F4E  1C24               	btfss	lcd_write@port+1,0
  5275  0F4F  1383               	bcf	3,7
  5276  0F50  0825               	movf	??_lcd_write,w
  5277  0F51  0080               	movwf	0
  5278  0F52                     l397:	
  5279  0F52  0008               	return
  5280  0F53                     __end_of_lcd_write:	
  5281                           
  5282                           	psect	text28
  5283  0CF6                     __ptext28:	
  5284 ;; *************** function _Delay20us *****************
  5285 ;; Defined at:
  5286 ;;		line 99 in file "lcd4bits.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  next            1    1[BANK0 ] unsigned char 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5300 ;;      Params:         0       0       0       0       0
  5301 ;;      Locals:         0       1       0       0       0
  5302 ;;      Temps:          0       1       0       0       0
  5303 ;;      Totals:         0       2       0       0       0
  5304 ;;Total ram usage:        2 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    1
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_lcd_write
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           
  5315                           ;psect for function _Delay20us
  5316  0CF6                     _Delay20us:	
  5317  0CF6                     l2444:	
  5318                           ;incstack = 0
  5319                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  5320                           
  5321                           
  5322                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  5323  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0CF8  01A1               	clrf	Delay20us@next
  5326  0CF9                     l2450:	
  5327  0CF9  3001               	movlw	1
  5328  0CFA  00A0               	movwf	??_Delay20us
  5329  0CFB  0820               	movf	??_Delay20us,w
  5330  0CFC  07A1               	addwf	Delay20us@next,f
  5331  0CFD                     l2452:	
  5332  0CFD  3008               	movlw	8
  5333  0CFE  0221               	subwf	Delay20us@next,w
  5334  0CFF  1C03               	skipc
  5335  0D00  2D02               	goto	u1691
  5336  0D01  2D03               	goto	u1690
  5337  0D02                     u1691:	
  5338  0D02  2CF9               	goto	l2450
  5339  0D03                     u1690:	
  5340  0D03                     l394:	
  5341  0D03  0008               	return
  5342  0D04                     __end_of_Delay20us:	
  5343                           
  5344                           	psect	text29
  5345  0D3E                     __ptext29:	
  5346 ;; *************** function _DelayMs *****************
  5347 ;; Defined at:
  5348 ;;		line 86 in file "lcd4bits.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  millis          2    0[BANK0 ] unsigned int 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         0       2       0       0       0
  5363 ;;      Locals:         0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0
  5365 ;;      Totals:         0       2       0       0       0
  5366 ;;Total ram usage:        2 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    1
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_game_end
  5373 ;;		_startup
  5374 ;;		_randomize_gameboard
  5375 ;;		_check_for_match
  5376 ;;		_update_gameboard_from_input
  5377 ;;		_lcd_clear
  5378 ;;		_lcd_goto
  5379 ;;		_lcd_init
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _DelayMs
  5385  0D3E                     _DelayMs:	
  5386  0D3E                     l2454:	
  5387                           ;incstack = 0
  5388                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  5389                           
  5390                           
  5391                           ;lcd4bits.c: 87:     while (millis != 0) {
  5392  0D3E  2D4E               	goto	l2462
  5393  0D3F                     l2456:	
  5394                           
  5395                           ;lcd4bits.c: 88:         TMR0 = 100;
  5396  0D3F  3064               	movlw	100
  5397  0D40  0081               	movwf	1	;volatile
  5398  0D41                     l2458:	
  5399                           
  5400                           ;lcd4bits.c: 89:         T0IF = 0;
  5401  0D41  110B               	bcf	11,2	;volatile
  5402  0D42                     l385:	
  5403                           ;lcd4bits.c: 90:         while(T0IF == 0);
  5404                           
  5405  0D42  1D0B               	btfss	11,2	;volatile
  5406  0D43  2D45               	goto	u1701
  5407  0D44  2D46               	goto	u1700
  5408  0D45                     u1701:	
  5409  0D45  2D42               	goto	l385
  5410  0D46                     u1700:	
  5411  0D46                     l2460:	
  5412                           
  5413                           ;lcd4bits.c: 91:         millis--;
  5414  0D46  3001               	movlw	1
  5415  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0D49  02A0               	subwf	DelayMs@millis,f
  5418  0D4A  3000               	movlw	0
  5419  0D4B  1C03               	skipc
  5420  0D4C  03A1               	decf	DelayMs@millis+1,f
  5421  0D4D  02A1               	subwf	DelayMs@millis+1,f
  5422  0D4E                     l2462:	
  5423                           
  5424                           ;lcd4bits.c: 87:     while (millis != 0) {
  5425  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0D50  0820               	movf	DelayMs@millis,w
  5428  0D51  0421               	iorwf	DelayMs@millis+1,w
  5429  0D52  1D03               	btfss	3,2
  5430  0D53  2D55               	goto	u1711
  5431  0D54  2D56               	goto	u1710
  5432  0D55                     u1711:	
  5433  0D55  2D3F               	goto	l2456
  5434  0D56                     u1710:	
  5435  0D56                     l389:	
  5436  0D56  0008               	return
  5437  0D57                     __end_of_DelayMs:	
  5438                           
  5439                           	psect	text30
  5440  0442                     __ptext30:	
  5441 ;; *************** function _interrupt_handler *****************
  5442 ;; Defined at:
  5443 ;;		line 449 in file "concentration.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  current_anal    1    5[COMMON] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         0       0       0       0       0
  5458 ;;      Locals:         1       0       0       0       0
  5459 ;;      Temps:          5       0       0       0       0
  5460 ;;      Totals:         6       0       0       0       0
  5461 ;;Total ram usage:        6 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		Interrupt level 1
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function _interrupt_handler
  5472  0442                     _interrupt_handler:	
  5473  0442                     i1l2294:	
  5474                           
  5475                           ;concentration.c: 450:     if((CCP2IF==1) && (CCP2IE==1)) {
  5476  0442  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0443  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0444  1C0D               	btfss	13,0	;volatile
  5479  0445  2C47               	goto	u161_21
  5480  0446  2C48               	goto	u161_20
  5481  0447                     u161_21:	
  5482  0447  2C5E               	goto	i1l353
  5483  0448                     u161_20:	
  5484  0448                     i1l2296:	
  5485  0448  1683               	bsf	3,5	;RP0=1, select bank1
  5486  0449  1303               	bcf	3,6	;RP1=0, select bank1
  5487  044A  1C0D               	btfss	13,0	;volatile
  5488  044B  2C4D               	goto	u162_21
  5489  044C  2C4E               	goto	u162_20
  5490  044D                     u162_21:	
  5491  044D  2C5E               	goto	i1l353
  5492  044E                     u162_20:	
  5493  044E                     i1l2298:	
  5494                           
  5495                           ;concentration.c: 451:         CCPR2 += tone_delay;
  5496  044E  0876               	movf	_tone_delay,w	;volatile
  5497  044F  1283               	bcf	3,5	;RP0=0, select bank0
  5498  0450  1303               	bcf	3,6	;RP1=0, select bank0
  5499  0451  079B               	addwf	27,f	;volatile
  5500  0452  1803               	skipnc
  5501  0453  0A9C               	incf	28,f	;volatile
  5502  0454  0877               	movf	_tone_delay+1,w	;volatile
  5503  0455  079C               	addwf	28,f	;volatile
  5504  0456                     i1l2300:	
  5505                           
  5506                           ;concentration.c: 452:         if(CCP2M0 == 1) {
  5507  0456  1C1D               	btfss	29,0	;volatile
  5508  0457  2C59               	goto	u163_21
  5509  0458  2C5A               	goto	u163_20
  5510  0459                     u163_21:	
  5511  0459  2C5C               	goto	i1l354
  5512  045A                     u163_20:	
  5513  045A                     i1l2302:	
  5514                           
  5515                           ;concentration.c: 453:             CCP2M0 = 0;
  5516  045A  101D               	bcf	29,0	;volatile
  5517                           
  5518                           ;concentration.c: 454:         } else {
  5519  045B  2C5D               	goto	i1l355
  5520  045C                     i1l354:	
  5521                           
  5522                           ;concentration.c: 455:             CCP2M0 = 1;
  5523  045C  141D               	bsf	29,0	;volatile
  5524  045D                     i1l355:	
  5525                           ;concentration.c: 456:         }
  5526                           
  5527                           
  5528                           ;concentration.c: 457:         CCP2IF = 0;
  5529  045D  100D               	bcf	13,0	;volatile
  5530  045E                     i1l353:	
  5531                           ;concentration.c: 458:     }
  5532                           
  5533                           
  5534                           ;concentration.c: 459:     if(ADIF) {
  5535  045E  1283               	bcf	3,5	;RP0=0, select bank0
  5536  045F  1F0C               	btfss	12,6	;volatile
  5537  0460  2C62               	goto	u164_21
  5538  0461  2C63               	goto	u164_20
  5539  0462                     u164_21:	
  5540  0462  2CBF               	goto	i1l356
  5541  0463                     u164_20:	
  5542  0463                     i1l2304:	
  5543                           
  5544                           ;concentration.c: 460:         char current_analog = ADCON0&0x3C;
  5545  0463  081F               	movf	31,w	;volatile
  5546  0464  393C               	andlw	60
  5547  0465  00F0               	movwf	??_interrupt_handler
  5548  0466  0870               	movf	??_interrupt_handler,w
  5549  0467  00F5               	movwf	interrupt_handler@current_analog
  5550  0468                     i1l2306:	
  5551                           
  5552                           ;concentration.c: 461:         ADCON0 &= 0xC3;
  5553  0468  30C3               	movlw	195
  5554  0469  00F0               	movwf	??_interrupt_handler
  5555  046A  0870               	movf	??_interrupt_handler,w
  5556  046B  059F               	andwf	31,f	;volatile
  5557  046C                     i1l2308:	
  5558                           
  5559                           ;concentration.c: 462:         if(((current_analog) == 0x2C)||((current_analog) == 0x28)
      +                          ) {
  5560  046C  302C               	movlw	44
  5561  046D  0675               	xorwf	interrupt_handler@current_analog,w
  5562  046E  1903               	btfsc	3,2
  5563  046F  2C71               	goto	u165_21
  5564  0470  2C72               	goto	u165_20
  5565  0471                     u165_21:	
  5566  0471  2C78               	goto	i1l2312
  5567  0472                     u165_20:	
  5568  0472                     i1l2310:	
  5569  0472  3028               	movlw	40
  5570  0473  0675               	xorwf	interrupt_handler@current_analog,w
  5571  0474  1D03               	btfss	3,2
  5572  0475  2C77               	goto	u166_21
  5573  0476  2C78               	goto	u166_20
  5574  0477                     u166_21:	
  5575  0477  2C9B               	goto	i1l2322
  5576  0478                     u166_20:	
  5577  0478                     i1l2312:	
  5578                           
  5579                           ;concentration.c: 463:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  5580  0478  081E               	movf	30,w	;volatile
  5581  0479  00DA               	movwf	_joystick_x_pos+1
  5582  047A  1683               	bsf	3,5	;RP0=1, select bank1
  5583  047B  1303               	bcf	3,6	;RP1=0, select bank1
  5584  047C  081E               	movf	30,w	;volatile
  5585  047D  1283               	bcf	3,5	;RP0=0, select bank0
  5586  047E  1303               	bcf	3,6	;RP1=0, select bank0
  5587  047F  00D9               	movwf	_joystick_x_pos
  5588                           
  5589                           ;concentration.c: 464:             switch(current_player) {
  5590  0480  2C8B               	goto	i1l2320
  5591  0481                     i1l2314:	
  5592                           
  5593                           ;concentration.c: 466:                     ADCON0 |= 0x24;
  5594  0481  3024               	movlw	36
  5595  0482  00F0               	movwf	??_interrupt_handler
  5596  0483  0870               	movf	??_interrupt_handler,w
  5597  0484  049F               	iorwf	31,f	;volatile
  5598                           
  5599                           ;concentration.c: 467:                     break;
  5600  0485  2CBE               	goto	i1l364
  5601  0486                     i1l2316:	
  5602                           
  5603                           ;concentration.c: 469:                     ADCON0 |= 0x30;
  5604  0486  3030               	movlw	48
  5605  0487  00F0               	movwf	??_interrupt_handler
  5606  0488  0870               	movf	??_interrupt_handler,w
  5607  0489  049F               	iorwf	31,f	;volatile
  5608                           
  5609                           ;concentration.c: 470:                     break;
  5610  048A  2CBE               	goto	i1l364
  5611  048B                     i1l2320:	
  5612  048B  085C               	movf	_current_player,w
  5613  048C  00F0               	movwf	??_interrupt_handler
  5614  048D  01F1               	clrf	??_interrupt_handler+1
  5615                           
  5616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5617                           ; Switch size 1, requested type "simple"
  5618                           ; Number of cases is 1, Range of values is 0 to 0
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte            4     3 (average)
  5622                           ; direct_byte           11     8 (fixed)
  5623                           ; jumptable            260     6 (fixed)
  5624                           ;	Chosen strategy is simple_byte
  5625  048E  0871               	movf	??_interrupt_handler+1,w
  5626  048F  3A00               	xorlw	0	; case 0
  5627  0490  1903               	skipnz
  5628  0491  2C93               	goto	i1l3098
  5629  0492  2CBE               	goto	i1l364
  5630  0493                     i1l3098:	
  5631                           
  5632                           ; Switch size 1, requested type "simple"
  5633                           ; Number of cases is 2, Range of values is 0 to 1
  5634                           ; switch strategies available:
  5635                           ; Name         Instructions Cycles
  5636                           ; simple_byte            7     4 (average)
  5637                           ; direct_byte           14     8 (fixed)
  5638                           ; jumptable            260     6 (fixed)
  5639                           ;	Chosen strategy is simple_byte
  5640  0493  0870               	movf	??_interrupt_handler,w
  5641  0494  3A00               	xorlw	0	; case 0
  5642  0495  1903               	skipnz
  5643  0496  2C81               	goto	i1l2314
  5644  0497  3A01               	xorlw	1	; case 1
  5645  0498  1903               	skipnz
  5646  0499  2C86               	goto	i1l2316
  5647  049A  2CBE               	goto	i1l364
  5648  049B                     i1l2322:	
  5649                           
  5650                           ;concentration.c: 473:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  5651  049B  081E               	movf	30,w	;volatile
  5652  049C  00D8               	movwf	_joystick_y_pos+1
  5653  049D  1683               	bsf	3,5	;RP0=1, select bank1
  5654  049E  1303               	bcf	3,6	;RP1=0, select bank1
  5655  049F  081E               	movf	30,w	;volatile
  5656  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  5657  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  5658  04A2  00D7               	movwf	_joystick_y_pos
  5659                           
  5660                           ;concentration.c: 474:             switch(current_player) {
  5661  04A3  2CAE               	goto	i1l2330
  5662  04A4                     i1l2324:	
  5663                           
  5664                           ;concentration.c: 476:                     ADCON0 |= 0x2C;
  5665  04A4  302C               	movlw	44
  5666  04A5  00F0               	movwf	??_interrupt_handler
  5667  04A6  0870               	movf	??_interrupt_handler,w
  5668  04A7  049F               	iorwf	31,f	;volatile
  5669                           
  5670                           ;concentration.c: 477:                     break;
  5671  04A8  2CBE               	goto	i1l364
  5672  04A9                     i1l2326:	
  5673                           
  5674                           ;concentration.c: 479:                     ADCON0 |= 0x28;
  5675  04A9  3028               	movlw	40
  5676  04AA  00F0               	movwf	??_interrupt_handler
  5677  04AB  0870               	movf	??_interrupt_handler,w
  5678  04AC  049F               	iorwf	31,f	;volatile
  5679                           
  5680                           ;concentration.c: 480:                     break;
  5681  04AD  2CBE               	goto	i1l364
  5682  04AE                     i1l2330:	
  5683  04AE  085C               	movf	_current_player,w
  5684  04AF  00F0               	movwf	??_interrupt_handler
  5685  04B0  01F1               	clrf	??_interrupt_handler+1
  5686                           
  5687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5688                           ; Switch size 1, requested type "simple"
  5689                           ; Number of cases is 1, Range of values is 0 to 0
  5690                           ; switch strategies available:
  5691                           ; Name         Instructions Cycles
  5692                           ; simple_byte            4     3 (average)
  5693                           ; direct_byte           11     8 (fixed)
  5694                           ; jumptable            260     6 (fixed)
  5695                           ;	Chosen strategy is simple_byte
  5696  04B1  0871               	movf	??_interrupt_handler+1,w
  5697  04B2  3A00               	xorlw	0	; case 0
  5698  04B3  1903               	skipnz
  5699  04B4  2CB6               	goto	i1l3100
  5700  04B5  2CBE               	goto	i1l364
  5701  04B6                     i1l3100:	
  5702                           
  5703                           ; Switch size 1, requested type "simple"
  5704                           ; Number of cases is 2, Range of values is 0 to 1
  5705                           ; switch strategies available:
  5706                           ; Name         Instructions Cycles
  5707                           ; simple_byte            7     4 (average)
  5708                           ; direct_byte           14     8 (fixed)
  5709                           ; jumptable            260     6 (fixed)
  5710                           ;	Chosen strategy is simple_byte
  5711  04B6  0870               	movf	??_interrupt_handler,w
  5712  04B7  3A00               	xorlw	0	; case 0
  5713  04B8  1903               	skipnz
  5714  04B9  2CA4               	goto	i1l2324
  5715  04BA  3A01               	xorlw	1	; case 1
  5716  04BB  1903               	skipnz
  5717  04BC  2CA9               	goto	i1l2326
  5718  04BD  2CBE               	goto	i1l364
  5719  04BE                     i1l364:	
  5720                           ;concentration.c: 482:         }
  5721                           
  5722                           
  5723                           ;concentration.c: 483:         ADIF = 0;
  5724  04BE  130C               	bcf	12,6	;volatile
  5725  04BF                     i1l356:	
  5726                           ;concentration.c: 484:     }
  5727                           
  5728                           
  5729                           ;concentration.c: 485:     if(TMR2IF) {
  5730  04BF  1C8C               	btfss	12,1	;volatile
  5731  04C0  2CC2               	goto	u167_21
  5732  04C1  2CC3               	goto	u167_20
  5733  04C2                     u167_21:	
  5734  04C2  2CCD               	goto	i1l371
  5735  04C3                     u167_20:	
  5736  04C3                     i1l2332:	
  5737                           
  5738                           ;concentration.c: 486:         cursor_move_delay_count--;
  5739  04C3  3001               	movlw	1
  5740  04C4  02FA               	subwf	_cursor_move_delay_count,f
  5741                           
  5742                           ;concentration.c: 487:         if(cursor_move_delay_count == 0) {
  5743  04C5  087A               	movf	_cursor_move_delay_count,w
  5744  04C6  1D03               	btfss	3,2
  5745  04C7  2CC9               	goto	u168_21
  5746  04C8  2CCA               	goto	u168_20
  5747  04C9                     u168_21:	
  5748  04C9  2CCC               	goto	i1l370
  5749  04CA                     u168_20:	
  5750  04CA                     i1l2334:	
  5751                           
  5752                           ;concentration.c: 488:             cursor_movable = 1;
  5753  04CA  01E1               	clrf	_cursor_movable
  5754  04CB  0AE1               	incf	_cursor_movable,f
  5755  04CC                     i1l370:	
  5756                           ;concentration.c: 489:         }
  5757                           
  5758                           
  5759                           ;concentration.c: 490:         TMR2IF = 0;
  5760  04CC  108C               	bcf	12,1	;volatile
  5761  04CD                     i1l371:	
  5762  04CD  0874               	movf	??_interrupt_handler+4,w
  5763  04CE  008A               	movwf	10
  5764  04CF  0873               	movf	??_interrupt_handler+3,w
  5765  04D0  0084               	movwf	4
  5766  04D1  0E72               	swapf	(??_interrupt_handler+2)^(0+4294967168),w
  5767  04D2  0083               	movwf	3
  5768  04D3  0EFE               	swapf	btemp,f
  5769  04D4  0E7E               	swapf	btemp,w
  5770  04D5  0009               	retfie
  5771  04D6                     __end_of_interrupt_handler:	
  5772  007E                     btemp	set	126	;btemp
  5773  007E                     wtemp0	set	126
  5774                           
  5775                           	psect	intentry
  5776  0004                     __pintentry:	
  5777                           ;incstack = 0
  5778                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0]
  5779                           
  5780  0004                     interrupt_function:	
  5781  007E                     saved_w	set	btemp
  5782  0004  00FE               	movwf	btemp
  5783  0005  0E03               	swapf	3,w
  5784  0006  00F2               	movwf	??_interrupt_handler+2
  5785  0007  0804               	movf	4,w
  5786  0008  00F3               	movwf	??_interrupt_handler+3
  5787  0009  080A               	movf	10,w
  5788  000A  00F4               	movwf	??_interrupt_handler+4
  5789  000B  120A  118A  2C42   	ljmp	_interrupt_handler


Data Sizes:
    Strings     135
    Constant    64
    Data        5
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     55      74
    BANK1            80      0      64
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    lcd_set_custom_char@data	PTR const unsigned char  size(1) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_12(CODE[7]), STR_11(CODE[6]), STR_10(CODE[12]), STR_9(CODE[13]), 
		 -> STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[11]), STR_5(CODE[14]), 
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    end_screen@second_row	PTR unsigned char  size(1) Largest target is 13
		 -> STR_6(CODE[11]), STR_4(CODE[13]), STR_2(CODE[13]), 

    end_screen@first_row	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[14]), STR_3(CODE[13]), STR_1(CODE[13]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_gameboard_init
    _update_gameboard_from_input->_check_for_match
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_gameboard
    _check_for_match->_display_scoreboard
    _startup->_display_gameboard
    _startup->_display_scoreboard
    _display_scoreboard->_lcd_putch
    _display_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_init->_lcd_clear
    _gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    ___awdiv->___awmod
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _get_current_char->_get_cursor_index
    _game_end->_end_screen
    _end_screen->_lcd_goto
    _end_screen->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  122155
                           _game_end
                     _gameboard_init
                      _joystick_init
                           _lcd_init
                            _startup
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0   51989
                                             25 BANK0      2     2      0
                            _DelayMs
                    _check_for_match
                  _display_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    7729
                                             20 BANK0      4     3      1
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    7034
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      3     3      0   25082
                                             22 BANK0      3     3      0
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                   _get_cursor_index
                          _play_tone
 ---------------------------------------------------------------------------------
 (3) _play_tone                                            5     2      3     453
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0   35724
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _display_scoreboard                                   2     2      0   12454
                                             20 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1153
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _display_gameboard                                    2     2      0   11117
                                             20 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    3050
                                             16 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    7400
                                             10 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       2     2      0   14449
                                             53 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    2157
                                             16 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     985
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    4163
                                             15 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  7     4      3    4163
                                              8 BANK0      7     4      3
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0      93
                                              1 BANK0      1     1      0
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (4) _get_cursor_index                                     1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _game_end                                             1     1      0   12593
                                             15 BANK0      1     1      0
                            _DelayMs
                         _end_screen
 ---------------------------------------------------------------------------------
 (2) _end_screen                                           3     2      1   11659
                                             12 BANK0      3     2      1
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (4) _lcd_puts                                             4     2      2    3282
                                              8 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    3984
                                              8 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            2     0      2    3953
                                              8 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    2178
                                              2 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     934
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    6     6      0      45
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _game_end
     _DelayMs
     _end_screen
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
   _gameboard_init
     _get_current_char
       _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
     _time_init
   _joystick_init
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _startup
     _DelayMs
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _update_gameboard_from_input
     _DelayMs
     _check_for_match
       _DelayMs
       _display_gameboard
         _lcd_clear
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _display_scoreboard
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
       _play_tone
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_current_char
         _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     37      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B6      12        0.0%
ABS                  0      0      B6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 20:59:51 2020

                    _joystick_pressed 005D                                     pc 0002  
 __end_of_update_gameboard_from_input 01AD           _update_gameboard_from_input 0052  
                         __CFG_CP$OFF 0000                         _update_cursor 04D6  
                                  _GO 00F9                          ___awdiv@sign 002D  
                                  fsr 0004                                   l200 073D  
                                 l210 05B0                                   l213 05BF  
                                 l207 0E79                                   l400 0D70  
                                 l224 0E98                                   l216 05F2  
                                 l225 0EBE                                   l306 01AA  
                                 l219 0397                                   l412 0D8E  
                                 l420 0FA4                                   l244 066E  
                                 l253 0CF5                                   l341 0DB1  
                                 l333 0E34                                   l309 01AC  
                                 l406 0E06                                   l262 07FC  
                                 l342 0DB4                                   l415 01FE  
                                 l192 06FB                                   l336 0D15  
                                 l272 0441                                   l328 0568  
                                 l280 0062                                   l345 0D3D  
                                 l249 079D                                   l409 0D27  
                                 l290 00EC                                   l282 00D5  
                                 l186 0F01                                   l275 0059  
                                 l196 072E                                   l348 0DDB  
                                 l380 0CE9                                   l276 00C1  
                                 l269 03D1                                   l285 00D3  
                                 l287 00CA                                   l385 0D42  
                                 l394 0D03                                   l389 0D56  
                                 l397 0F52                                   l672 0FFF  
                                 l659 06D7                                   _GIE 005F  
                                 _RB2 0032                                   _RB5 0035  
                                 _PR2 0092                          __CFG_CPD$OFF 0000  
                                 _SCS 0478                                   fsr0 0004  
                                 indf 0000                          ___awmod@sign 0026  
                        __CFG_FOSC$HS 0000                          __CFG_LVP$OFF 0000  
                      ?_toggle_cursor 0070                         lcd_clear@port 0028  
                                l2510 067D                                  l2502 066F  
                                l2520 0692                                  l2512 0681  
                                l2504 0672                                  l2600 0EAE  
                                l2450 0CF9                                  l2610 0F57  
                                l2530 06B5                                  l2522 0695  
                                l2514 0686                                  l2506 0676  
                                l2602 0EB4                                  l2460 0D46  
                                l2452 0CFD                                  l2444 0CF6  
                                l2620 0D04                                  l2612 0F86  
                                l2604 0F56                                  l2540 06CE  
                                l2532 06BB                                  l2524 069C  
                                l2516 068A                                  l2508 067B  
                                l2700 03E5                                  l3092 04F9  
                                l2462 0D4E                                  l2454 0D3E  
                                l2470 0F30                                  l2614 0F8C  
                                l2542 06D3                                  l2534 06BC  
                                l2526 06A0                                  l2518 068C  
                                l2550 0FAC                                  l2630 0DA5  
                                l2622 0D8F                                  l2710 0432  
                                l2702 03EA                                  l3094 0515  
                                l2456 0D3F                                  l2472 0F3C  
                                l2464 0F07                                  l2480 0DE0  
                                l2640 06F3                                  l2616 0F90  
                                l2536 06C3                                  l2528 06A4  
                                l2800 0DC7                                  l2560 0FC2  
                                l2552 0FB1                                  l2632 0DAB  
                                l2624 0D95                                  l2712 0436  
                                l2704 03F9                                  l2720 0E18  
                                l3096 0525                                  l2458 0D41  
                                l2466 0F1A                                  l2474 0D57  
                                l2482 0DF4                                  l2650 0726  
                                l2642 06F6                                  l2618 0F96  
                                l2538 06C9                                  l2810 0DD3  
                                l2802 0DCB                                  l2490 0D19  
                                l2570 0FDE                                  l2562 0FC5  
                                l2554 0FB3                                  l2546 0FA5  
                                l2634 0DAC                                  l2626 0DA1  
                                l2714 0438                                  l2706 0428  
                                l2722 0E1D                                  l2730 04DA  
                                l2468 0F1F                                  l2476 0D65  
                                l2484 0DFA                                  l2652 0729  
                                l2644 06FF                                  l2636 06DB  
                                l2492 0CED                                  l2660 05F3  
                                l2820 0749                                  l2812 0DD5  
                                l2804 0DCC                                  l2580 0FFB  
                                l2572 0FE4                                  l2564 0FCC  
                                l2556 0FB7                                  l2548 0FA8  
                                l2628 0DA2                                  l2708 042C  
                                l2724 0E27                                  l2716 0E07  
                                l2740 04F1                                  l2732 04DF  
                                l2900 0079                                  l2486 0D74  
                                l2478 0DDF                                  l2654 0732  
                                l2646 0700                                  l2638 06DE  
                                l2494 0CF1                                  l2670 07AB  
                                l2662 0D28                                  l2830 0759  
                                l2822 074E                                  l2814 0DD9  
                                l2806 0DCD                                  l2574 0FEB  
                                l2566 0FD0                                  l2558 0FBC  
                                l2726 0E2A                                  l2718 0E0E  
                                l2742 0501                                  l2734 04E4  
                                l2910 00DB                                  l2902 007C  
                                l2488 0D83                                  l2656 0733  
                                l2648 0705                                  l2680 07F2  
                                l2672 07C3                                  l2664 0D37  
                                l2840 0775                                  l2832 075D  
                                l2816 073E                                  l2808 0DD0  
                                l2568 0FD4                                  l2576 0FF1  
                                l2584 02CD                                  l2744 0503  
                                l2736 04E9                                  l2752 051D  
                                l2728 04D9                                  l2912 00E0  
                                l2920 00FB                                  l2904 008A  
                                l2658 0738                                  l2498 0CF4  
                                l2674 07CA                                  l2682 07F6  
                                l2666 079E                                  l2850 078E  
                                l2842 0778                                  l2834 0763  
                                l2818 0744                                  l2594 0E88  
                                l2586 0E7A                                  l2578 0FF6  
                                l2690 03C3                                  l2746 0508  
                                l2738 04EE                                  l2754 0530  
                                l2930 0130                                  l2922 0108  
                                l2914 00E4                                  l2906 00C5  
                                l2676 07D3                                  l2668 07A7  
                                l2852 0791                                  l2844 077A  
                                l2836 076C                                  l2828 0751  
                                l2772 0CE0                                  l2780 01BA  
                                l2596 0E8E                                  l2588 0E85  
                                l2860 056C                                  l2692 03C8  
                                l2684 039B                                  l2756 054B  
                                l2748 050D                                  l2940 016B  
                                l2932 013B                                  l2924 010F  
                                l2916 00EA                                  l2908 00CE  
                                l2678 07D8                                  l2854 0794  
                                l2846 0784                                  l2838 076F  
                                l2790 0DB5                                  l2774 0CE8  
                                l2782 01C3                                  l2598 0EA8  
                                l2870 05A4                                  l2862 0575  
                                l2694 03CD                                  l2686 03A0  
                                l2758 0552                                  l2950 0196  
                                l2942 0172                                  l2934 014A  
                                l2926 011A                                  l2918 00FA  
                                l2960 0E48                                  l2856 0798  
                                l2848 078A                                  l2792 0DBF  
                                l2784 01D3                                  l2776 01AD  
                                l2880 05E4                                  l2872 05B6  
                                l2864 0580                                  l2696 03DD  
                                l2688 03A5                                  l2952 019C  
                                l2944 017D                                  l2936 0151  
                                l2928 0129                                  l2962 0E53  
                                l2794 0DC0                                  l2786 01E3  
                                l2778 01B2                                  l2882 05E7  
                                l2874 05C5                                  l2866 058C  
                                l2858 0569                                  l2698 03DF  
                                l2954 01A1                                  l2946 0188  
                                l2938 015C                                  l2890 0058  
                                l2970 0EBF                                  l2964 0E59  
                                l2956 0E35                                  l2796 0DC3  
                                l2788 01EE                                  l2884 05E8  
                                l2876 05CE                                  l2868 0598  
                                l2948 018D                                  l2892 005D  
                                l2980 0EE2                                  l2972 0EC2  
                                l2966 0E64                                  l2958 0E40  
                                l2798 0DC5                                  l2886 05ED  
                                l2878 05D9                                  l2894 0066  
                                l2990 0EFC                                  l2982 0EE7  
                                l2974 0EC7                                  l2968 0E6E  
                                l2896 006B                                  l2888 0052  
                                l2984 0EEC                                  l2976 0ED2  
                                l2898 0070                                  l2986 0EF0  
                                l2978 0EDD                                  l2988 0EF5  
                                _ADIE 0466                                  _ADIF 0066  
                                STR_1 0275                                  STR_2 0282  
                                STR_3 0275                                  STR_4 028F  
                                STR_5 0267                                  STR_6 02B5  
                                STR_7 0257                                  STR_8 0246  
                                STR_9 029C                                  _T0IF 005A  
                                u2000 0705                                  u2001 0704  
                                u2010 0732                                  u2011 0731  
                                u2020 0738                                  u2100 03C8  
                                u2021 0737                                  u2101 03C7  
                                u2030 073D                                  u2110 03DD  
                                u2031 073C                                  u2111 03DC  
                                u2040 07A2                                  u2120 0E0E  
                                u2200 0066                                  u2121 0E0D  
                                u2201 0065                                  u2130 0552  
                                u2210 006B                                  u2131 0551  
                                u2211 006A                                  u2060 07D3  
                                u2140 0763                                  u2300 0108  
                                u2220 0070                                  u2061 07D2  
                                u2141 0762                                  u2301 0107  
                                u2221 006F                                  u2070 07FC  
                                u2054 07B4                                  u2150 05B6  
                                u2310 010F                                  u2230 008A  
                                u2071 07FB                                  u2055 07B2  
                                u2151 05B5                                  u2311 010E  
                                u2231 0089                                  u2160 05C5  
                                u2080 03A0                                  u2400 019C  
                                u2320 0129                                  u2240 00C5  
                                u2161 05C4                                  u2081 039F  
                                u2401 019B                                  u2321 0128  
                                u2305 0104                                  u2241 00C4  
                                u2090 03C3                                  u2410 01A1  
                                u2330 0130                                  u2250 00CA  
                                u2170 0058                                  u2091 03C2  
                                u2411 01A0                                  u2331 012F  
                                u2251 00C9                                  u2171 0057  
                                u1700 0D46                                  u2420 0E48  
                                u2340 014A                                  u2260 00CE  
                                u2180 005D                                  u1701 0D45  
                                u2421 0E47                                  u2341 0149  
                                u2325 0125                                  u2261 00CD  
                                u2181 005C                                  u1710 0D56  
                                u2430 0E59                                  u2350 0151  
                                u2270 00D3                                  u2190 0062  
                                u1711 0D55                                  u2431 0E58  
                                u2351 0150                                  u2271 00D2  
                                u2191 0061                                  u2360 016B  
                                u2280 00DB                                  u2440 0EFC  
                                u2361 016A                                  u2345 0146  
                                u2281 00DA                                  u2441 0EFB  
                                u1730 0E06                                  u1810 06B5  
                                u2370 0172                                  u2290 00E0  
                                u1731 0E05                                  u1811 06B4  
                                u2371 0171                                  u2291 00DF  
                                u1740 0CF1                                  u1900 0FDE  
                                u2380 0188                                  u1725 0F0A  
                                u1741 0CF0                                  u1805 06A5  
                                u1901 0FDD                                  u2381 0187  
                                u2365 0167                                  u1830 06C9  
                                u1750 0676                                  u2390 018D  
                                u1831 06C8                                  u1815 06B1  
                                u1751 0675                                  u2391 018C  
                                u1840 06CE                                  u1760 0681  
                                u1920 0FF1                                  u1841 06CD  
                                u1825 06BD                                  u1761 0680  
                                u1921 0FF0                                  u1905 0FDA  
                                u1690 0D03                                  u1770 0692  
                                u1930 0FF6                                  u1850 0FAC  
                                u1691 0D02                                  u1771 0691  
                                u1931 0FF5                                  u1915 0FE5  
                                u1851 0FAB                                  u1940 0E8E  
                                u1860 0FB7                                  u1941 0E8D  
                                u1861 0FB6                                  u1790 06A4  
                                u1950 0EB4                                  u1870 0FC2  
                                u1791 06A3                                  u1951 0EB3  
                                u1871 0FC1                                  u1785 0696  
                                u1970 0F96                                  u1890 0FD4  
                                u1971 0F95                                  u1891 0FD3  
                                _PEIE 005E                                  u1980 0DB1  
                                u1965 0F5A                                  u1885 0FC6  
                                u1981 0DB0                                  u1990 06FF  
                                u1991 06FE                                  _TMR0 0001  
                                _TMR1 000E                                  _TMR2 0011  
                                _WPUB 0095                 make_custom_chars@club 021E  
                        __CFG_WRT$OFF 0000                                  _main 0EBF  
                                btemp 007E                       _check_for_match 0398  
                        lcd_init@port 002A                                  start 000E  
                        lcd_goto@port 0028                         __CFG_IESO$OFF 0000  
                     __end_of_DelayMs 0D57                         __CFG_MCLRE$ON 0000  
                      ?_update_cursor 0034                                 ?_main 0070  
                     __end_of___awdiv 06D8                                 _CCPR1 0015  
                               STR_10 02A9                                 _CCPR2 001B  
                               STR_11 02C7                                 STR_12 02C0  
                       __CFG_WDTE$OFF 0000                       __end_of___awmod 1000  
                               _ANSEL 0188                       ___awdiv@divisor 0027  
                               _T2CON 0012                                 i1l353 045E  
                               i1l370 04CC                                 i1l354 045C  
                               i1l371 04CD                                 i1l355 045D  
                               i1l364 04BE                                 i1l356 04BF  
                     ___awdiv@counter 002C          __size_of_randomize_gameboard 005F  
                               _PORTA 0005                                 _PORTB 0006  
                               _PORTD 0008                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                make_custom_chars@heart 022E  
              make_custom_chars@spade 0226                        __CFG_FCMEN$OFF 0000  
              make_custom_chars@smile 023E                make_custom_chars@skull 0216  
                               _nRBPU 040F                                 _board 00C0  
                        lcd_puts@port 0028                        __CFG_BOREN$OFF 0000  
                               pclath 000A                                 status 0003  
                     __end_of_startup 05F3                                 wtemp0 007E  
                       DelayMs@millis 0020                       __initialization 0011  
                        __end_of_main 0F04                    __size_of_Delay20us 000E  
                              ??_main 0057                       ??_toggle_cursor 0034  
                              _ADCON0 001F                                _ADCON1 009F  
                              _CCP1M0 00B8                                _CCP1M1 00B9  
                              _CCP1M2 00BA                                _CCP1M3 00BB  
                              _CCP2M0 00E8                                _CCP2M1 00E9  
                              _CCP2M2 00EA                                _CCP2M3 00EB  
                              _CCP1IF 0062                                _CCP2IE 0468  
                              _CCP2IF 0068               __end_of_check_for_match 0442  
                              _ADRESH 001E                                _ADRESL 009E  
                    ___awdiv@dividend 0029           __end_ofmake_custom_chars@RH 0216  
                              _ANSELH 0189                update_cursor@direction 0034  
                              i1l3100 04B6                                i1l2300 0456  
                              i1l2310 0472                                i1l2302 045A  
                              i1l2320 048B                                i1l2312 0478  
                              i1l2304 0463                                i1l2330 04AE  
                              i1l2314 0481                                i1l2322 049B  
                              i1l2306 0468                                i1l2332 04C3  
                              i1l2324 04A4                                i1l2316 0486  
                              i1l2308 046C                                i1l2334 04CA  
                              i1l2326 04A9                                i1l2294 0442  
                              i1l2296 0448               __size_of_gameboard_init 0060  
                              i1l3098 0493                                i1l2298 044E  
                              u161_20 0448                                u161_21 0447  
                              u162_20 044E                                u162_21 044D  
                              u163_20 045A                                u163_21 0459  
                              u164_20 0463                                u164_21 0462  
                              u165_20 0472                                u165_21 0471  
                              u166_20 0478                                u166_21 0477  
                              u167_20 04C3                                u167_21 04C2  
                           ??_DelayMs 0022                                u168_20 04CA  
                              u168_21 04C9                                _TMR1GE 0086  
                              _TMR1CS 0081                                _TMR2IE 0461  
                              _TMR2IF 0061                                _TMR1ON 0080  
          __end_of_display_scoreboard 0398                      __end_of_game_end 0E7A  
                 _lcd_set_custom_char 0F53                        __CFG_PWRTE$OFF 0000  
                     ??_update_cursor 0035                      __end_of_lcd_init 01FF  
                    __end_of_lcd_goto 0D8F                      __end_of_lcd_puts 0E07  
                           ??___awdiv 002B                             ??___awmod 0024  
                              _id_num 0078                      ___awdiv@quotient 002E  
                     ___awmod@divisor 0020                         lcd_putch@port 0030  
                     ___awmod@counter 0025                  ?_lcd_set_custom_char 0028  
                        __pdataCOMMON 007B                                saved_w 007E  
           __size_of_get_current_char 0012                             ??_startup 0036  
                   __end_of_Delay20us 0D04         update_cursor@move_delay_count 0037  
             __end_of__initialization 004E             __size_of_get_cursor_index 000C  
                       lcd_write@mode 0027                         lcd_write@port 0023  
                      __pcstackCOMMON 0070                          __pidataBANK0 0CD4  
               check_for_match@player 0038                 __end_of_joystick_init 0DDC  
               ??_lcd_set_custom_char 002B                    __size_of_lcd_clear 001A  
                  __size_of_lcd_putch 0012                    __size_of_lcd_write 004F  
                    ?_check_for_match 0070                            __pbssBANK0 0057  
                          __pbssBANK1 00A0                            __pbssBANK3 0190  
             _cursor_move_delay_count 007A                   _randomize_gameboard 079E  
                          __pmaintext 0EBF                            __pintentry 0004  
                  __size_of_tmr0_init 000A                    __size_of_play_tone 0026  
        __end_ofmake_custom_chars@PIC 020E                               _T1CKPS0 0084  
                             _T1CKPS1 0085                            _end_screen 06D8  
                ?_randomize_gameboard 0070                    __size_of_time_init 0016  
                  display_gameboard@i 0035                             ?_game_end 0070  
                           ?_lcd_init 002A                             ?_lcd_goto 0028  
                           ?_lcd_puts 0028                            __stringtab 0200  
                      _gameboard_init 073E                lcd_set_custom_char@row 002D  
            make_custom_chars@diamond 0236                               _DelayMs 0D3E  
          randomize_gameboard@current 0053                     __end_of_lcd_clear 0D71  
           randomize_gameboard@random 0054                     __end_of_lcd_putch 0D28  
                             ___awdiv 066F                               ___awmod 0FA5  
                   __end_of_lcd_write 0F53        __end_ofmake_custom_chars@heart 0236  
      __end_ofmake_custom_chars@spade 022E        __end_ofmake_custom_chars@smile 0246  
      __end_ofmake_custom_chars@skull 021E                               __ptext1 0052  
                             __ptext2 04D6                               __ptext3 0E07  
                             __ptext4 0398                               __ptext5 0D8F  
                             __ptext6 0569                               __ptext7 02CD  
                             __ptext8 0FA5                               __ptext9 0E7A  
                          _cursor_pos 0065                 ??_randomize_gameboard 0030  
                    ___awmod@dividend 0022                      _get_current_char 0D04  
                          ??_game_end 002F                               _my_turn 007B  
              __end_of_gameboard_init 079E                get_cursor_index@cursor 0020  
                             _visible 00A0                         _received_char 0079  
                             _startup 0569                               clrloop0 0CD9  
                          ??_lcd_init 002C                            ??_lcd_goto 002A  
                          ??_lcd_puts 002A                  end_of_initialization 004E  
                   __end_of_tmr0_init 0CEA                     __end_of_play_tone 0DB5  
                      lcd_puts@string 002B                      _get_cursor_index 0CEA  
                play_tone@tone_period 0020                     __end_of_time_init 0D3E  
                          _scoreboard 0066                    _display_scoreboard 02CD  
                         ?_end_screen 002C         lcd_set_custom_char@cg_address 0028  
                      _joystick_x_pos 0059                        _joystick_y_pos 0057  
                 ?_display_scoreboard 0070                       ?_gameboard_init 0070  
                          _tone_delay 0076                 __end_of_toggle_cursor 0E35  
                end_screen@second_row 002C                             _Delay20us 0CF6  
                make_custom_chars@PIC 0206                 play_tone@duration_8ms 0022  
                ??_display_scoreboard 0034                 __end_of_update_cursor 0569  
        ?_update_gameboard_from_input 0070                         __pidataCOMMON 07FD  
                 start_initialization 0011                            ?_Delay20us 0070  
                     gameboard_init@i 0056                   __size_of_end_screen 0066  
         __end_of_lcd_set_custom_char 0FA5                           __pdataBANK0 0066  
       ??_update_gameboard_from_input 0039                           __pbssCOMMON 0076  
                      _current_player 005C                             ___latbits 0002  
                       __pcstackBANK0 0020                         _selected_tile 005E  
                   __size_of_game_end 0045                              ?_DelayMs 0020  
              __size_of_joystick_init 0027                     __size_of_lcd_init 0052  
                   __size_of_lcd_goto 001E                     __size_of_lcd_puts 002B  
                        _current_char 0064              __size_of_check_for_match 00AA  
                         _delay_loops 0062              __end_of_get_current_char 0D16  
                           _gameboard 0068                             _game_over 005B  
                            ?___awdiv 0027                              ?___awmod 0020  
                   _display_gameboard 0E7A                             _lcd_clear 0D57  
                        _cursor_solid 0063                             __pstrings 0200  
                           _lcd_putch 0D16                    ?_display_gameboard 0070  
                           _lcd_write 0F04              __end_of_get_cursor_index 0CF6  
                   _interrupt_handler 0442                    ?_interrupt_handler 0070  
                 ??_display_gameboard 0034         __end_ofmake_custom_chars@club 0226  
                            ?_startup 0070  __size_of_update_gameboard_from_input 015B  
                 ??_interrupt_handler 0070                     interrupt_function 0004  
                      _cursor_movable 0061                           ??_Delay20us 0020  
                           clear_ram0 0CD8                             _tmr0_init 0CE0  
                           _play_tone 0D8F                   end_screen@first_row 002E  
           __end_of_display_gameboard 0EBF                             _time_init 0D28  
         __end_of_randomize_gameboard 07FD                            ?_lcd_clear 0028  
           __end_of_interrupt_handler 04D6                         _joystick_init 0DB5  
                          ?_lcd_putch 0030               lcd_set_custom_char@data 002E  
                         __stringbase 0205                            ?_lcd_write 0022  
                        ??_end_screen 002D                      ??_gameboard_init 0055  
             lcd_set_custom_char@port 0029                   make_custom_chars@RH 020E  
                    __size_of_DelayMs 0019                            ?_tmr0_init 0070  
                          ?_play_tone 0020                    __end_of_end_screen 073E  
                            _p1_score 0060                              _p2_score 005F  
                          ?_time_init 0070                     _make_custom_chars 05F3  
                    __size_of___awdiv 0069                     ??_check_for_match 0036  
                    __size_of___awmod 005B                        ?_joystick_init 0070  
                  ?_make_custom_chars 0070                    __end_of__stringtab 0206  
    __end_ofmake_custom_chars@diamond 023E                              _game_end 0E35  
                 ??_make_custom_chars 002F                              __ptext10 0D16  
                            __ptext11 01AD                              __ptext20 0D04  
                            __ptext12 0CE0                              __ptext21 0CEA  
                            __ptext13 0DB5                              __ptext30 0442  
                            __ptext22 0E35                              __ptext14 073E  
                            __ptext23 06D8                              __ptext15 0D28  
                            __ptext24 0DDC                              __ptext16 079E  
                            __ptext25 0D71                              __ptext17 066F  
                            __ptext26 0D57                              __ptext18 05F3  
                            __ptext27 0F04                              __ptext19 0F53  
                            __ptext28 0CF6                              __ptext29 0D3E  
                   __CFG_BOR4V$BOR21V 0000                              _lcd_init 01AD  
                            _lcd_goto 0D71                              _lcd_puts 0DDC  
                    __size_of_startup 008A                         __size_of_main 0045  
                  lcd_putch@character 0033             __end_of_make_custom_chars 066F  
         __size_of_display_scoreboard 00CB            __size_of_display_gameboard 0045  
              __size_of_toggle_cursor 002E                           ??_lcd_clear 002A  
          __size_of_interrupt_handler 0094              randomize_gameboard@F1357 0190  
                         ??_lcd_putch 0032                           ??_lcd_write 0025  
                            intlevel1 0000                __size_of_update_cursor 0093  
                       Delay20us@next 0021                           ??_tmr0_init 0020  
                         ??_play_tone 0023                             stringcode 0200  
                   ?_get_current_char 0070                       ??_joystick_init 0020  
                         ??_time_init 0020                    ??_get_current_char 0021  
             randomize_gameboard@used 0033                            _OPTION_REG 0081  
                    lcd_goto@position 002B                     ?_get_cursor_index 0070  
        __size_of_lcd_set_custom_char 0052                              stringdir 0200  
                            stringtab 0200                    ??_get_cursor_index 0020  
                       _toggle_cursor 0E07       interrupt_handler@current_analog 0075  
                    lcd_write@CmdChar 0022            __size_of_make_custom_chars 007C  
