

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 18 23:22:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318                           
   319                           	psect	idataBANK0
   320  07F9                     __pidataBANK0:	
   321                           
   322                           ;initializer for _scoreboard
   323  07F9  3408               	retlw	8
   324  07FA  3400               	retlw	0
   325                           
   326                           ;initializer for _gameboard
   327  07FB  3405               	retlw	5
   328  07FC  3400               	retlw	0
   329                           
   330                           	psect	strings
   331  0300                     __pstrings:	
   332  0300                     stringtab:	
   333  0300                     __stringtab:	
   334  0300                     stringcode:	
   335                           ;	String table - string pointers are 1 byte each
   336                           
   337  0300                     stringdir:	
   338  0300  3003               	movlw	high stringdir
   339  0301  008A               	movwf	10
   340  0302  0804               	movf	4,w
   341  0303  0A84               	incf	4,f
   342  0304  0782               	addwf	2,f
   343  0305                     __stringbase:	
   344  0305  3400               	retlw	0
   345  0306                     __end_of__stringtab:	
   346  0306                     make_custom_chars@PIC:	
   347  0306  3418               	retlw	24
   348  0307  3418               	retlw	24
   349  0308  3414               	retlw	20
   350  0309  3404               	retlw	4
   351  030A  3404               	retlw	4
   352  030B  3403               	retlw	3
   353  030C  3402               	retlw	2
   354  030D  3403               	retlw	3
   355  030E                     __end_ofmake_custom_chars@PIC:	
   356  030E                     make_custom_chars@RH:	
   357  030E  341C               	retlw	28
   358  030F  3414               	retlw	20
   359  0310  3418               	retlw	24
   360  0311  3414               	retlw	20
   361  0312  3400               	retlw	0
   362  0313  3405               	retlw	5
   363  0314  3407               	retlw	7
   364  0315  3405               	retlw	5
   365  0316                     __end_ofmake_custom_chars@RH:	
   366  0316                     make_custom_chars@skull:	
   367  0316  340E               	retlw	14
   368  0317  3415               	retlw	21
   369  0318  3415               	retlw	21
   370  0319  341F               	retlw	31
   371  031A  340A               	retlw	10
   372  031B  340E               	retlw	14
   373  031C  340E               	retlw	14
   374  031D  3400               	retlw	0
   375  031E                     __end_ofmake_custom_chars@skull:	
   376  031E                     make_custom_chars@club:	
   377  031E  3400               	retlw	0
   378  031F  340E               	retlw	14
   379  0320  340E               	retlw	14
   380  0321  341F               	retlw	31
   381  0322  341F               	retlw	31
   382  0323  341F               	retlw	31
   383  0324  3404               	retlw	4
   384  0325  340E               	retlw	14
   385  0326                     __end_ofmake_custom_chars@club:	
   386  0326                     make_custom_chars@spade:	
   387  0326  3400               	retlw	0
   388  0327  3404               	retlw	4
   389  0328  340E               	retlw	14
   390  0329  341F               	retlw	31
   391  032A  341F               	retlw	31
   392  032B  340E               	retlw	14
   393  032C  3404               	retlw	4
   394  032D  340E               	retlw	14
   395  032E                     __end_ofmake_custom_chars@spade:	
   396  032E                     make_custom_chars@heart:	
   397  032E  3400               	retlw	0
   398  032F  3400               	retlw	0
   399  0330  340A               	retlw	10
   400  0331  341F               	retlw	31
   401  0332  341F               	retlw	31
   402  0333  340E               	retlw	14
   403  0334  3404               	retlw	4
   404  0335  3400               	retlw	0
   405  0336                     __end_ofmake_custom_chars@heart:	
   406  0336                     make_custom_chars@diamond:	
   407  0336  3400               	retlw	0
   408  0337  3404               	retlw	4
   409  0338  340E               	retlw	14
   410  0339  341F               	retlw	31
   411  033A  340E               	retlw	14
   412  033B  3404               	retlw	4
   413  033C  3400               	retlw	0
   414  033D  3400               	retlw	0
   415  033E                     __end_ofmake_custom_chars@diamond:	
   416  033E                     make_custom_chars@smile:	
   417  033E  3400               	retlw	0
   418  033F  340A               	retlw	10
   419  0340  340A               	retlw	10
   420  0341  3400               	retlw	0
   421  0342  3415               	retlw	21
   422  0343  3411               	retlw	17
   423  0344  340E               	retlw	14
   424  0345  3400               	retlw	0
   425  0346                     __end_ofmake_custom_chars@smile:	
   426  0015                     _CCPR1	set	21
   427  000E                     _TMR1	set	14
   428  0001                     _TMR0	set	1
   429  001A                     _RCREG	set	26
   430  001E                     _ADRESH	set	30
   431  001F                     _ADCON0	set	31
   432  0006                     _PORTB	set	6
   433  0011                     _TMR2	set	17
   434  0012                     _T2CON	set	18
   435  0008                     _PORTD	set	8
   436  0005                     _PORTA	set	5
   437  005A                     _T0IF	set	90
   438  0065                     _RCIF	set	101
   439  00FB                     _CHS1	set	251
   440  0066                     _ADIF	set	102
   441  005E                     _PEIE	set	94
   442  005F                     _GIE	set	95
   443  0080                     _TMR1ON	set	128
   444  0086                     _TMR1GE	set	134
   445  0085                     _T1CKPS1	set	133
   446  0084                     _T1CKPS0	set	132
   447  0081                     _TMR1CS	set	129
   448  00B8                     _CCP1M0	set	184
   449  00B9                     _CCP1M1	set	185
   450  00BA                     _CCP1M2	set	186
   451  00BB                     _CCP1M3	set	187
   452  0062                     _CCP1IF	set	98
   453  00F9                     _GO	set	249
   454  0061                     _TMR2IF	set	97
   455  0035                     _RB5	set	53
   456  00C7                     _SPEN	set	199
   457  00C6                     _RX9	set	198
   458  00C4                     _CREN	set	196
   459  0081                     _OPTION_REG	set	129
   460  009E                     _ADRESL	set	158
   461  009F                     _ADCON1	set	159
   462  0086                     _TRISB	set	134
   463  0095                     _WPUB	set	149
   464  0092                     _PR2	set	146
   465  0099                     _SPBRG	set	153
   466  0087                     _TRISC	set	135
   467  0085                     _TRISA	set	133
   468  0088                     _TRISD	set	136
   469  0466                     _ADIE	set	1126
   470  040F                     _nRBPU	set	1039
   471  0461                     _TMR2IE	set	1121
   472  04C2                     _BRGH	set	1218
   473  04C4                     _SYNC	set	1220
   474  0465                     _RCIE	set	1125
   475  04C6                     _TX9	set	1222
   476  04C5                     _TXEN	set	1221
   477  0478                     _SCS	set	1144
   478  0189                     _ANSELH	set	393
   479  0188                     _ANSEL	set	392
   480  0C3B                     _BRG16	set	3131
   481  0346                     STR_2:	
   482  0346  3450               	retlw	80	;'P'
   483  0347  3472               	retlw	114	;'r'
   484  0348  3465               	retlw	101	;'e'
   485  0349  3473               	retlw	115	;'s'
   486  034A  3473               	retlw	115	;'s'
   487  034B  3420               	retlw	32	;' '
   488  034C  3474               	retlw	116	;'t'
   489  034D  3468               	retlw	104	;'h'
   490  034E  3465               	retlw	101	;'e'
   491  034F  3420               	retlw	32	;' '
   492  0350  3462               	retlw	98	;'b'
   493  0351  3475               	retlw	117	;'u'
   494  0352  3474               	retlw	116	;'t'
   495  0353  3474               	retlw	116	;'t'
   496  0354  346F               	retlw	111	;'o'
   497  0355  346E               	retlw	110	;'n'
   498  0356  3400               	retlw	0
   499  0357                     STR_1:	
   500  0357  3420               	retlw	32	;' '
   501  0358  3443               	retlw	67	;'C'
   502  0359  346F               	retlw	111	;'o'
   503  035A  346E               	retlw	110	;'n'
   504  035B  3463               	retlw	99	;'c'
   505  035C  3465               	retlw	101	;'e'
   506  035D  346E               	retlw	110	;'n'
   507  035E  3474               	retlw	116	;'t'
   508  035F  3472               	retlw	114	;'r'
   509  0360  3461               	retlw	97	;'a'
   510  0361  3474               	retlw	116	;'t'
   511  0362  3469               	retlw	105	;'i'
   512  0363  346F               	retlw	111	;'o'
   513  0364  346E               	retlw	110	;'n'
   514  0365  3421               	retlw	33	;'!'
   515  0366  3400               	retlw	0
   516  0367                     STR_3:	
   517  0367  3420               	retlw	32	;' '
   518  0368  3420               	retlw	32	;' '
   519  0369  3420               	retlw	32	;' '
   520  036A  3420               	retlw	32	;' '
   521  036B  3474               	retlw	116	;'t'
   522  036C  346F               	retlw	111	;'o'
   523  036D  3420               	retlw	32	;' '
   524  036E  3473               	retlw	115	;'s'
   525  036F  3474               	retlw	116	;'t'
   526  0370  3461               	retlw	97	;'a'
   527  0371  3472               	retlw	114	;'r'
   528  0372  3474               	retlw	116	;'t'
   529  0373  3400               	retlw	0
   530  0374                     STR_4:	
   531  0374  3420               	retlw	32	;' '
   532  0375  3420               	retlw	32	;' '
   533  0376  3420               	retlw	32	;' '
   534  0377  3420               	retlw	32	;' '
   535  0378  3420               	retlw	32	;' '
   536  0379  3453               	retlw	83	;'S'
   537  037A  3463               	retlw	99	;'c'
   538  037B  346F               	retlw	111	;'o'
   539  037C  3472               	retlw	114	;'r'
   540  037D  3465               	retlw	101	;'e'
   541  037E  343A               	retlw	58	;':'
   542  037F  3400               	retlw	0
   543  0380                     STR_6:	
   544  0380  3420               	retlw	32	;' '
   545  0381  3420               	retlw	32	;' '
   546  0382  3450               	retlw	80	;'P'
   547  0383  3432               	retlw	50	;'2'
   548  0384  343A               	retlw	58	;':'
   549  0385  3420               	retlw	32	;' '
   550  0386  3400               	retlw	0
   551  0387                     STR_5:	
   552  0387  3420               	retlw	32	;' '
   553  0388  3450               	retlw	80	;'P'
   554  0389  3431               	retlw	49	;'1'
   555  038A  343A               	retlw	58	;':'
   556  038B  3420               	retlw	32	;' '
   557  038C  3400               	retlw	0
   558                           
   559                           ; #config settings
   560  0000                     
   561                           	psect	cinit
   562  0013                     start_initialization:	
   563  0013                     __initialization:	
   564                           
   565                           ; Initialize objects allocated to BANK0
   566  0013  120A  118A  27F9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   567  0018  00E8               	movwf	__pdataBANK0& (0+127)
   568  0019  120A  118A  27FA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   569  001E  00E9               	movwf	(__pdataBANK0+1)& (0+127)
   570  001F  120A  118A  27FB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   571  0024  00EA               	movwf	(__pdataBANK0+2)& (0+127)
   572  0025  120A  118A  27FC  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   573  002A  00EB               	movwf	(__pdataBANK0+3)& (0+127)
   574                           
   575                           ; Clear objects allocated to BANK3
   576  002B  1783               	bsf	3,7	;select IRP bank2
   577  002C  3090               	movlw	low __pbssBANK3
   578  002D  0084               	movwf	4
   579  002E  30B0               	movlw	low (__pbssBANK3+32)
   580  002F  120A  158A  2615  120A  118A  	fcall	clear_ram0
   581                           
   582                           ; Clear objects allocated to BANK1
   583  0034  1383               	bcf	3,7	;select IRP bank0
   584  0035  30A0               	movlw	low __pbssBANK1
   585  0036  0084               	movwf	4
   586  0037  30E0               	movlw	low (__pbssBANK1+64)
   587  0038  120A  158A  2615  120A  118A  	fcall	clear_ram0
   588                           
   589                           ; Clear objects allocated to BANK0
   590  003D  305B               	movlw	low __pbssBANK0
   591  003E  0084               	movwf	4
   592  003F  3068               	movlw	low (__pbssBANK0+13)
   593  0040  120A  158A  2615  120A  118A  	fcall	clear_ram0
   594                           
   595                           ; Clear objects allocated to COMMON
   596  0045  01FC               	clrf	__pbssCOMMON& (0+127)
   597  0046  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   598  0047                     end_of_initialization:	
   599                           ;End of C runtime variable initialization code
   600                           
   601  0047                     __end_of__initialization:	
   602  0047  0183               	clrf	3
   603  0048  120A  158A  2F39   	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssCOMMON
   606  007C                     __pbssCOMMON:	
   607  007C                     _recieved_char:	
   608  007C                     	ds	1
   609  007D                     _cursor_move_delay_count:	
   610  007D                     	ds	1
   611                           
   612                           	psect	bssBANK0
   613  005B                     __pbssBANK0:	
   614  005B                     _joystick_y_pos:	
   615  005B                     	ds	2
   616  005D                     _joystick_x_pos:	
   617  005D                     	ds	2
   618  005F                     _joystick_pressed:	
   619  005F                     	ds	1
   620  0060                     _selected_tile:	
   621  0060                     	ds	1
   622  0061                     _p2_score:	
   623  0061                     	ds	1
   624  0062                     _p1_score:	
   625  0062                     	ds	1
   626  0063                     _cursor_movable:	
   627  0063                     	ds	1
   628  0064                     _delay_loops:	
   629  0064                     	ds	1
   630  0065                     _cursor_solid:	
   631  0065                     	ds	1
   632  0066                     _current_char:	
   633  0066                     	ds	1
   634  0067                     _cursor_pos:	
   635  0067                     	ds	1
   636                           
   637                           	psect	dataBANK0
   638  0068                     __pdataBANK0:	
   639  0068                     _scoreboard:	
   640  0068                     	ds	2
   641  006A                     _gameboard:	
   642  006A                     	ds	2
   643                           
   644                           	psect	bssBANK1
   645  00A0                     __pbssBANK1:	
   646  00A0                     _visible:	
   647  00A0                     	ds	32
   648  00C0                     _board:	
   649  00C0                     	ds	32
   650                           
   651                           	psect	bssBANK3
   652  0190                     __pbssBANK3:	
   653  0190                     randomize_gameboard@F1346:	
   654  0190                     	ds	32
   655                           
   656                           	psect	clrtext
   657  0E15                     clear_ram0:	
   658                           ;	Called with FSR containing the base address, and
   659                           ;	W with the last address+1
   660                           
   661  0E15  0064               	clrwdt	;clear the watchdog before getting into this loop
   662  0E16                     clrloop0:	
   663  0E16  0180               	clrf	0	;clear RAM location pointed to by FSR
   664  0E17  0A84               	incf	4,f	;increment pointer
   665  0E18  0604               	xorwf	4,w	;XOR with final address
   666  0E19  1903               	btfsc	3,2	;have we reached the end yet?
   667  0E1A  3400               	retlw	0	;all done for this memory range, return
   668  0E1B  0604               	xorwf	4,w	;XOR again to restore value
   669  0E1C  2E16               	goto	clrloop0	;do the next byte
   670                           
   671                           	psect	cstackCOMMON
   672  0070                     __pcstackCOMMON:	
   673  0070                     ?_joystick_init:	
   674  0070                     ?_gameboard_init:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_serial_init:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_startup:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_update_gameboard_from_input:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_display_scoreboard:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_display_gameboard:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_time_init:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_get_current_char:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_randomize_gameboard:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_toggle_cursor:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_main:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_make_custom_chars:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_get_cursor_index:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_check_for_match:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_interrupt_handler:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_tmr0_init:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_Delay20us:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?i1_Delay20us:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ??i1_Delay20us:	
   729                           ; 1 bytes @ 0x0
   730                           
   731                           
   732                           ; 1 bytes @ 0x0
   733  0070                     	ds	1
   734  0071                     i1Delay20us@next:	
   735                           
   736                           ; 1 bytes @ 0x1
   737  0071                     	ds	1
   738  0072                     ?i1_lcd_write:	
   739  0072                     i1lcd_write@CmdChar:	
   740                           ; 1 bytes @ 0x2
   741                           
   742                           
   743                           ; 1 bytes @ 0x2
   744  0072                     	ds	1
   745  0073                     i1lcd_write@port:	
   746                           
   747                           ; 2 bytes @ 0x3
   748  0073                     	ds	2
   749  0075                     ??i1_lcd_write:	
   750                           
   751                           ; 1 bytes @ 0x5
   752  0075                     	ds	2
   753  0077                     i1lcd_write@mode:	
   754                           
   755                           ; 1 bytes @ 0x7
   756  0077                     	ds	1
   757  0078                     ?i1_lcd_putch:	
   758  0078                     i1lcd_putch@port:	
   759                           ; 1 bytes @ 0x8
   760                           
   761                           
   762                           ; 2 bytes @ 0x8
   763  0078                     	ds	2
   764  007A                     ??i1_lcd_putch:	
   765                           
   766                           ; 1 bytes @ 0xA
   767  007A                     	ds	1
   768  007B                     i1lcd_putch@character:	
   769                           
   770                           ; 1 bytes @ 0xB
   771  007B                     	ds	1
   772                           
   773                           	psect	cstackBANK0
   774  0020                     __pcstackBANK0:	
   775  0020                     ??_interrupt_handler:	
   776                           
   777                           ; 1 bytes @ 0x0
   778  0020                     	ds	4
   779  0024                     ??_joystick_init:	
   780  0024                     ??_serial_init:	
   781                           ; 1 bytes @ 0x4
   782                           
   783  0024                     ?_DelayMs:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0024                     ??_time_init:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0024                     ??_get_cursor_index:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0024                     ??_tmr0_init:	
   793                           ; 1 bytes @ 0x4
   794                           
   795  0024                     ??_Delay20us:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0024                     ?___awmod:	
   799                           ; 1 bytes @ 0x4
   800                           
   801  0024                     get_cursor_index@cursor:	
   802                           ; 2 bytes @ 0x4
   803                           
   804  0024                     DelayMs@millis:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0024                     ___awmod@divisor:	
   808                           ; 2 bytes @ 0x4
   809                           
   810                           
   811                           ; 2 bytes @ 0x4
   812  0024                     	ds	1
   813  0025                     ??_get_current_char:	
   814  0025                     Delay20us@next:	
   815                           ; 1 bytes @ 0x5
   816                           
   817                           
   818                           ; 1 bytes @ 0x5
   819  0025                     	ds	1
   820  0026                     ??_DelayMs:	
   821  0026                     ?_lcd_write:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0026                     lcd_write@CmdChar:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0026                     ___awmod@dividend:	
   828                           ; 1 bytes @ 0x6
   829                           
   830                           
   831                           ; 2 bytes @ 0x6
   832  0026                     	ds	1
   833  0027                     lcd_write@port:	
   834                           
   835                           ; 2 bytes @ 0x7
   836  0027                     	ds	1
   837  0028                     ??___awmod:	
   838                           
   839                           ; 1 bytes @ 0x8
   840  0028                     	ds	1
   841  0029                     ??_lcd_write:	
   842  0029                     ___awmod@counter:	
   843                           ; 1 bytes @ 0x9
   844                           
   845                           
   846                           ; 1 bytes @ 0x9
   847  0029                     	ds	1
   848  002A                     ___awmod@sign:	
   849                           
   850                           ; 1 bytes @ 0xA
   851  002A                     	ds	1
   852  002B                     ?___awdiv:	
   853  002B                     lcd_write@mode:	
   854                           ; 2 bytes @ 0xB
   855                           
   856  002B                     ___awdiv@divisor:	
   857                           ; 1 bytes @ 0xB
   858                           
   859                           
   860                           ; 2 bytes @ 0xB
   861  002B                     	ds	1
   862  002C                     ?_lcd_clear:	
   863  002C                     ?_lcd_puts:	
   864                           ; 1 bytes @ 0xC
   865                           
   866  002C                     ?_lcd_goto:	
   867                           ; 1 bytes @ 0xC
   868                           
   869  002C                     ?_lcd_set_custom_char:	
   870                           ; 1 bytes @ 0xC
   871                           
   872  002C                     lcd_set_custom_char@cg_address:	
   873                           ; 1 bytes @ 0xC
   874                           
   875  002C                     lcd_clear@port:	
   876                           ; 1 bytes @ 0xC
   877                           
   878  002C                     lcd_puts@port:	
   879                           ; 2 bytes @ 0xC
   880                           
   881  002C                     lcd_goto@port:	
   882                           ; 2 bytes @ 0xC
   883                           
   884                           
   885                           ; 2 bytes @ 0xC
   886  002C                     	ds	1
   887  002D                     lcd_set_custom_char@port:	
   888  002D                     ___awdiv@dividend:	
   889                           ; 2 bytes @ 0xD
   890                           
   891                           
   892                           ; 2 bytes @ 0xD
   893  002D                     	ds	1
   894  002E                     ?_lcd_init:	
   895  002E                     ??_lcd_clear:	
   896                           ; 1 bytes @ 0xE
   897                           
   898  002E                     ??_lcd_puts:	
   899                           ; 1 bytes @ 0xE
   900                           
   901  002E                     ??_lcd_goto:	
   902                           ; 1 bytes @ 0xE
   903                           
   904  002E                     lcd_init@port:	
   905                           ; 1 bytes @ 0xE
   906                           
   907                           
   908                           ; 2 bytes @ 0xE
   909  002E                     	ds	1
   910  002F                     ??_lcd_set_custom_char:	
   911  002F                     ??___awdiv:	
   912                           ; 1 bytes @ 0xF
   913                           
   914  002F                     lcd_puts@string:	
   915                           ; 1 bytes @ 0xF
   916                           
   917  002F                     lcd_goto@position:	
   918                           ; 1 bytes @ 0xF
   919                           
   920                           
   921                           ; 1 bytes @ 0xF
   922  002F                     	ds	1
   923  0030                     ??_lcd_init:	
   924  0030                     ___awdiv@counter:	
   925                           ; 1 bytes @ 0x10
   926                           
   927                           
   928                           ; 1 bytes @ 0x10
   929  0030                     	ds	1
   930  0031                     lcd_set_custom_char@row:	
   931  0031                     ___awdiv@sign:	
   932                           ; 1 bytes @ 0x11
   933                           
   934                           
   935                           ; 1 bytes @ 0x11
   936  0031                     	ds	1
   937  0032                     lcd_set_custom_char@data:	
   938  0032                     ___awdiv@quotient:	
   939                           ; 1 bytes @ 0x12
   940                           
   941                           
   942                           ; 2 bytes @ 0x12
   943  0032                     	ds	1
   944  0033                     ??_make_custom_chars:	
   945                           
   946                           ; 1 bytes @ 0x13
   947  0033                     	ds	1
   948  0034                     ?_lcd_putch:	
   949  0034                     ??_randomize_gameboard:	
   950                           ; 1 bytes @ 0x14
   951                           
   952  0034                     lcd_putch@port:	
   953                           ; 1 bytes @ 0x14
   954                           
   955                           
   956                           ; 2 bytes @ 0x14
   957  0034                     	ds	2
   958  0036                     ??_lcd_putch:	
   959                           
   960                           ; 1 bytes @ 0x16
   961  0036                     	ds	1
   962  0037                     lcd_putch@character:	
   963  0037                     randomize_gameboard@used:	
   964                           ; 1 bytes @ 0x17
   965                           
   966                           
   967                           ; 32 bytes @ 0x17
   968  0037                     	ds	1
   969  0038                     ??_display_scoreboard:	
   970  0038                     ??_display_gameboard:	
   971                           ; 1 bytes @ 0x18
   972                           
   973  0038                     ??_toggle_cursor:	
   974                           ; 1 bytes @ 0x18
   975                           
   976  0038                     ?_update_cursor:	
   977                           ; 1 bytes @ 0x18
   978                           
   979  0038                     update_cursor@direction:	
   980                           ; 1 bytes @ 0x18
   981                           
   982                           
   983                           ; 1 bytes @ 0x18
   984  0038                     	ds	1
   985  0039                     ??_update_cursor:	
   986  0039                     display_gameboard@i:	
   987                           ; 1 bytes @ 0x19
   988                           
   989                           
   990                           ; 1 bytes @ 0x19
   991  0039                     	ds	1
   992  003A                     ??_startup:	
   993  003A                     ??_check_for_match:	
   994                           ; 1 bytes @ 0x1A
   995                           
   996                           
   997                           ; 1 bytes @ 0x1A
   998  003A                     	ds	1
   999  003B                     check_for_match@player:	
  1000  003B                     update_cursor@move_delay_count:	
  1001                           ; 1 bytes @ 0x1B
  1002                           
  1003                           
  1004                           ; 1 bytes @ 0x1B
  1005  003B                     	ds	1
  1006  003C                     ??_update_gameboard_from_input:	
  1007                           
  1008                           ; 1 bytes @ 0x1C
  1009  003C                     	ds	27
  1010  0057                     randomize_gameboard@current:	
  1011                           
  1012                           ; 1 bytes @ 0x37
  1013  0057                     	ds	1
  1014  0058                     randomize_gameboard@random:	
  1015                           
  1016                           ; 1 bytes @ 0x38
  1017  0058                     	ds	1
  1018  0059                     ??_gameboard_init:	
  1019                           
  1020                           ; 1 bytes @ 0x39
  1021  0059                     	ds	1
  1022  005A                     gameboard_init@i:	
  1023                           
  1024                           ; 1 bytes @ 0x3A
  1025  005A                     	ds	1
  1026  005B                     ??_main:	
  1027                           
  1028                           	psect	maintext
  1029  0F39                     __pmaintext:	
  1030                           ; 1 bytes @ 0x3B
  1031 ;;
  1032 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1033 ;;
  1034 ;; *************** function _main *****************
  1035 ;; Defined at:
  1036 ;;		line 74 in file "concentration.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : B00/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels required when called:   10
  1056 ;; This function calls:
  1057 ;;		_gameboard_init
  1058 ;;		_joystick_init
  1059 ;;		_lcd_init
  1060 ;;		_serial_init
  1061 ;;		_startup
  1062 ;;		_update_gameboard_from_input
  1063 ;; This function is called by:
  1064 ;;		Startup code after reset
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _main
  1070  0F39                     _main:	
  1071  0F39                     l2091:	
  1072                           ;incstack = 0
  1073 ;; hardware stack exceeded
  1074                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1075                           
  1076                           
  1077                           ;concentration.c: 76:     SCS = 0;
  1078  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  1079  0F3A  1303               	bcf	3,6	;RP1=0, select bank1
  1080  0F3B  100F               	bcf	15,0	;volatile
  1081  0F3C                     l2093:	
  1082                           
  1083                           ;concentration.c: 78:     TRISD = 0;
  1084  0F3C  0188               	clrf	8	;volatile
  1085                           
  1086                           ;concentration.c: 79:     TRISA = 0;
  1087  0F3D  0185               	clrf	5	;volatile
  1088                           
  1089                           ;concentration.c: 80:     ANSEL = 0;
  1090  0F3E  1683               	bsf	3,5	;RP0=1, select bank3
  1091  0F3F  1703               	bsf	3,6	;RP1=1, select bank3
  1092  0F40  0188               	clrf	8	;volatile
  1093  0F41                     l2095:	
  1094                           
  1095                           ;concentration.c: 81:     lcd_init(gameboard);
  1096  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0F43  086A               	movf	_gameboard,w
  1099  0F44  00AE               	movwf	lcd_init@port
  1100  0F45  086B               	movf	_gameboard+1,w
  1101  0F46  00AF               	movwf	lcd_init@port+1
  1102  0F47  120A  118A  268F  120A  158A  	fcall	_lcd_init
  1103  0F4C                     l2097:	
  1104                           
  1105                           ;concentration.c: 82:     lcd_init(scoreboard);
  1106  0F4C  3008               	movlw	8
  1107  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0F4F  00AE               	movwf	lcd_init@port
  1110  0F50  3000               	movlw	0
  1111  0F51  00AF               	movwf	lcd_init@port+1
  1112  0F52  120A  118A  268F  120A  158A  	fcall	_lcd_init
  1113  0F57                     l2099:	
  1114                           
  1115                           ;concentration.c: 84:     joystick_init();
  1116  0F57  120A  158A  26E7  120A  158A  	fcall	_joystick_init
  1117  0F5C                     l2101:	
  1118                           
  1119                           ;concentration.c: 85:     gameboard_init();
  1120  0F5C  120A  118A  2575  120A  158A  	fcall	_gameboard_init
  1121  0F61                     l2103:	
  1122                           
  1123                           ;concentration.c: 86:     serial_init();
  1124  0F61  120A  158A  26AE  120A  158A  	fcall	_serial_init
  1125  0F66                     l2105:	
  1126                           
  1127                           ;concentration.c: 87:     startup();
  1128  0F66  120A  118A  238D  120A  158A  	fcall	_startup
  1129  0F6B                     l2107:	
  1130                           
  1131                           ;concentration.c: 90:         update_gameboard_from_input();
  1132  0F6B  120A  118A  204B  120A  158A  	fcall	_update_gameboard_from_input
  1133  0F70  2F6B               	goto	l2107
  1134  0F71  120A  118A  2810   	ljmp	start
  1135  0F74                     __end_of_main:	
  1136                           
  1137                           	psect	text1
  1138  004B                     __ptext1:	
  1139 ;; *************** function _update_gameboard_from_input *****************
  1140 ;; Defined at:
  1141 ;;		line 237 in file "concentration.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0
  1157 ;;      Temps:          0       2       0       0       0
  1158 ;;      Totals:         0       2       0       0       0
  1159 ;;Total ram usage:        2 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    9
  1162 ;; This function calls:
  1163 ;;		_DelayMs
  1164 ;;		_check_for_match
  1165 ;;		_display_gameboard
  1166 ;;		_get_cursor_index
  1167 ;;		_toggle_cursor
  1168 ;;		_update_cursor
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _update_gameboard_from_input
  1176  004B                     _update_gameboard_from_input:	
  1177  004B                     l2027:	
  1178                           ;incstack = 0
  1179 ;; hardware stack exceeded
  1180                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1181                           
  1182                           
  1183                           ;concentration.c: 239:     if(GO == 0) {
  1184  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1185  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1186  004D  189F               	btfsc	31,1	;volatile
  1187  004E  2850               	goto	u1111
  1188  004F  2851               	goto	u1110
  1189  0050                     u1111:	
  1190  0050  2852               	goto	l254
  1191  0051                     u1110:	
  1192  0051                     l2029:	
  1193                           
  1194                           ;concentration.c: 240:         GO = 1;
  1195  0051  149F               	bsf	31,1	;volatile
  1196  0052                     l254:	
  1197                           ;concentration.c: 241:     }
  1198                           
  1199                           
  1200                           ;concentration.c: 242:     if((RB5 == 0)&&(joystick_pressed == 1)) {
  1201  0052  1A86               	btfsc	6,5	;volatile
  1202  0053  2855               	goto	u1121
  1203  0054  2856               	goto	u1120
  1204  0055                     u1121:	
  1205  0055  28AC               	goto	l255
  1206  0056                     u1120:	
  1207  0056                     l2031:	
  1208  0056  035F               	decf	_joystick_pressed,w
  1209  0057  1D03               	btfss	3,2
  1210  0058  285A               	goto	u1131
  1211  0059  285B               	goto	u1130
  1212  005A                     u1131:	
  1213  005A  28AC               	goto	l255
  1214  005B                     u1130:	
  1215  005B                     l2033:	
  1216                           
  1217                           ;concentration.c: 243:         DelayMs(6);
  1218  005B  3006               	movlw	6
  1219  005C  00A4               	movwf	DelayMs@millis
  1220  005D  3000               	movlw	0
  1221  005E  00A5               	movwf	DelayMs@millis+1
  1222  005F  120A  158A  267B  120A  118A  	fcall	_DelayMs
  1223  0064                     l2035:	
  1224                           
  1225                           ;concentration.c: 244:         joystick_pressed = 0;
  1226  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0066  01DF               	clrf	_joystick_pressed
  1229  0067                     l2037:	
  1230                           
  1231                           ;concentration.c: 245:         if(visible[get_cursor_index(cursor_pos)] == 0xFF) {
  1232  0067  0867               	movf	_cursor_pos,w
  1233  0068  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  1234  006D  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1235  006E  0084               	movwf	4
  1236  006F  1383               	bcf	3,7	;select IRP bank1
  1237  0070  0A00               	incf	0,w
  1238  0071  1D03               	btfss	3,2
  1239  0072  2874               	goto	u1141
  1240  0073  2875               	goto	u1140
  1241  0074                     u1141:	
  1242  0074  28B2               	goto	l257
  1243  0075                     u1140:	
  1244  0075                     l2039:	
  1245                           
  1246                           ;concentration.c: 246:             visible[get_cursor_index(cursor_pos)] = board[get_cur
      +                          sor_index(cursor_pos)];
  1247  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0077  0867               	movf	_cursor_pos,w
  1250  0078  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  1251  007D  3EC0               	addlw	(low (_board| 0))& (0+255)
  1252  007E  0084               	movwf	4
  1253  007F  1383               	bcf	3,7	;select IRP bank1
  1254  0080  0800               	movf	0,w
  1255  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0083  00BC               	movwf	??_update_gameboard_from_input
  1258  0084  0867               	movf	_cursor_pos,w
  1259  0085  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  1260  008A  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1261  008B  0084               	movwf	4
  1262  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1263  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1264  008E  083C               	movf	??_update_gameboard_from_input,w
  1265  008F  1383               	bcf	3,7	;select IRP bank1
  1266  0090  0080               	movwf	0
  1267                           
  1268                           ;concentration.c: 247:             current_char = board[get_cursor_index(cursor_pos)];
  1269  0091  0867               	movf	_cursor_pos,w
  1270  0092  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  1271  0097  3EC0               	addlw	(low (_board| 0))& (0+255)
  1272  0098  0084               	movwf	4
  1273  0099  1383               	bcf	3,7	;select IRP bank1
  1274  009A  0800               	movf	0,w
  1275  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1276  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1277  009D  00BC               	movwf	??_update_gameboard_from_input
  1278  009E  083C               	movf	??_update_gameboard_from_input,w
  1279  009F  00E6               	movwf	_current_char
  1280                           
  1281                           ;concentration.c: 249:             check_for_match(0);
  1282  00A0  3000               	movlw	0
  1283  00A1  120A  118A  2492  120A  118A  	fcall	_check_for_match
  1284                           
  1285                           ;concentration.c: 250:             display_gameboard();
  1286  00A6  120A  158A  2774  120A  118A  	fcall	_display_gameboard
  1287  00AB  28B2               	goto	l257
  1288  00AC                     l255:	
  1289  00AC  1E86               	btfss	6,5	;volatile
  1290  00AD  28AF               	goto	u1151
  1291  00AE  28B0               	goto	u1150
  1292  00AF                     u1151:	
  1293  00AF  28B2               	goto	l257
  1294  00B0                     u1150:	
  1295  00B0                     l2041:	
  1296                           
  1297                           ;concentration.c: 253:         joystick_pressed = 1;
  1298  00B0  01DF               	clrf	_joystick_pressed
  1299  00B1  0ADF               	incf	_joystick_pressed,f
  1300  00B2                     l257:	
  1301                           
  1302                           ;concentration.c: 256:     if(CCP1IF == 1) {
  1303  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1304  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1305  00B4  1D0C               	btfss	12,2	;volatile
  1306  00B5  28B7               	goto	u1161
  1307  00B6  28B8               	goto	u1160
  1308  00B7                     u1161:	
  1309  00B7  28D8               	goto	l2053
  1310  00B8                     u1160:	
  1311  00B8                     l2043:	
  1312                           
  1313                           ;concentration.c: 257:         if(delay_loops == 0) {
  1314  00B8  0864               	movf	_delay_loops,w
  1315  00B9  1D03               	btfss	3,2
  1316  00BA  28BC               	goto	u1171
  1317  00BB  28BD               	goto	u1170
  1318  00BC                     u1171:	
  1319  00BC  28C7               	goto	l2049
  1320  00BD                     u1170:	
  1321  00BD                     l2045:	
  1322                           
  1323                           ;concentration.c: 258:             delay_loops = 25;
  1324  00BD  3019               	movlw	25
  1325  00BE  00BC               	movwf	??_update_gameboard_from_input
  1326  00BF  083C               	movf	??_update_gameboard_from_input,w
  1327  00C0  00E4               	movwf	_delay_loops
  1328  00C1                     l2047:	
  1329                           
  1330                           ;concentration.c: 259:             toggle_cursor();
  1331  00C1  120A  118A  27CB  120A  118A  	fcall	_toggle_cursor
  1332                           
  1333                           ;concentration.c: 260:         } else {
  1334  00C6  28C9               	goto	l261
  1335  00C7                     l2049:	
  1336                           
  1337                           ;concentration.c: 261:             delay_loops--;
  1338  00C7  3001               	movlw	1
  1339  00C8  02E4               	subwf	_delay_loops,f
  1340  00C9                     l261:	
  1341                           ;concentration.c: 262:         }
  1342                           
  1343                           
  1344                           ;concentration.c: 263:         CCPR1 = TMR1+50000;
  1345  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1346  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1347  00CB  080E               	movf	14,w	;volatile
  1348  00CC  3E50               	addlw	80
  1349  00CD  00BC               	movwf	??_update_gameboard_from_input
  1350  00CE  080F               	movf	15,w	;volatile
  1351  00CF  1803               	skipnc
  1352  00D0  3E01               	addlw	1
  1353  00D1  3EC3               	addlw	195
  1354  00D2  00BD               	movwf	??_update_gameboard_from_input+1
  1355  00D3  083C               	movf	??_update_gameboard_from_input,w
  1356  00D4  0095               	movwf	21	;volatile
  1357  00D5  083D               	movf	??_update_gameboard_from_input+1,w
  1358  00D6  0096               	movwf	22	;volatile
  1359  00D7                     l2051:	
  1360                           
  1361                           ;concentration.c: 264:         CCP1IF = 0;
  1362  00D7  110C               	bcf	12,2	;volatile
  1363  00D8                     l2053:	
  1364                           
  1365                           ;concentration.c: 267:     if(joystick_x_pos > 900) {
  1366  00D8  085E               	movf	_joystick_x_pos+1,w
  1367  00D9  3A80               	xorlw	128
  1368  00DA  00FF               	movwf	btemp+1
  1369  00DB  3083               	movlw	131
  1370  00DC  027F               	subwf	btemp+1,w
  1371  00DD  1D03               	skipz
  1372  00DE  28E1               	goto	u1185
  1373  00DF  3085               	movlw	133
  1374  00E0  025D               	subwf	_joystick_x_pos,w
  1375  00E1                     u1185:	
  1376  00E1  1C03               	skipc
  1377  00E2  28E4               	goto	u1181
  1378  00E3  28E5               	goto	u1180
  1379  00E4                     u1181:	
  1380  00E4  28F7               	goto	l2059
  1381  00E5                     u1180:	
  1382  00E5                     l2055:	
  1383                           
  1384                           ;concentration.c: 268:         if(cursor_movable) {
  1385  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1386  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1387  00E7  0863               	movf	_cursor_movable,w
  1388  00E8  1903               	btfsc	3,2
  1389  00E9  28EB               	goto	u1191
  1390  00EA  28EC               	goto	u1190
  1391  00EB                     u1191:	
  1392  00EB  2989               	goto	l280
  1393  00EC                     u1190:	
  1394  00EC                     l2057:	
  1395                           
  1396                           ;concentration.c: 269:             update_cursor(30, 2);
  1397  00EC  3002               	movlw	2
  1398  00ED  00BC               	movwf	??_update_gameboard_from_input
  1399  00EE  083C               	movf	??_update_gameboard_from_input,w
  1400  00EF  00B8               	movwf	update_cursor@direction
  1401  00F0  301E               	movlw	30
  1402  00F1  120A  118A  2255  120A  118A  	fcall	_update_cursor
  1403  00F6  2989               	goto	l280
  1404  00F7                     l2059:	
  1405  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1406  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1407  00F9  085E               	movf	_joystick_x_pos+1,w
  1408  00FA  3A80               	xorlw	128
  1409  00FB  00FF               	movwf	btemp+1
  1410  00FC  3080               	movlw	128
  1411  00FD  027F               	subwf	btemp+1,w
  1412  00FE  1D03               	skipz
  1413  00FF  2902               	goto	u1205
  1414  0100  3064               	movlw	100
  1415  0101  025D               	subwf	_joystick_x_pos,w
  1416  0102                     u1205:	
  1417  0102  1803               	skipnc
  1418  0103  2905               	goto	u1201
  1419  0104  2906               	goto	u1200
  1420  0105                     u1201:	
  1421  0105  2918               	goto	l2065
  1422  0106                     u1200:	
  1423  0106                     l2061:	
  1424                           
  1425                           ;concentration.c: 272:         if(cursor_movable) {
  1426  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0108  0863               	movf	_cursor_movable,w
  1429  0109  1903               	btfsc	3,2
  1430  010A  290C               	goto	u1211
  1431  010B  290D               	goto	u1210
  1432  010C                     u1211:	
  1433  010C  2989               	goto	l280
  1434  010D                     u1210:	
  1435  010D                     l2063:	
  1436                           
  1437                           ;concentration.c: 273:             update_cursor(30, 3);
  1438  010D  3003               	movlw	3
  1439  010E  00BC               	movwf	??_update_gameboard_from_input
  1440  010F  083C               	movf	??_update_gameboard_from_input,w
  1441  0110  00B8               	movwf	update_cursor@direction
  1442  0111  301E               	movlw	30
  1443  0112  120A  118A  2255  120A  118A  	fcall	_update_cursor
  1444  0117  2989               	goto	l280
  1445  0118                     l2065:	
  1446  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1448  011A  085E               	movf	_joystick_x_pos+1,w
  1449  011B  3A80               	xorlw	128
  1450  011C  00FF               	movwf	btemp+1
  1451  011D  3082               	movlw	130
  1452  011E  027F               	subwf	btemp+1,w
  1453  011F  1D03               	skipz
  1454  0120  2923               	goto	u1225
  1455  0121  3059               	movlw	89
  1456  0122  025D               	subwf	_joystick_x_pos,w
  1457  0123                     u1225:	
  1458  0123  1C03               	skipc
  1459  0124  2926               	goto	u1221
  1460  0125  2927               	goto	u1220
  1461  0126                     u1221:	
  1462  0126  2939               	goto	l2071
  1463  0127                     u1220:	
  1464  0127                     l2067:	
  1465                           
  1466                           ;concentration.c: 276:         if(cursor_movable) {
  1467  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0129  0863               	movf	_cursor_movable,w
  1470  012A  1903               	btfsc	3,2
  1471  012B  292D               	goto	u1231
  1472  012C  292E               	goto	u1230
  1473  012D                     u1231:	
  1474  012D  2989               	goto	l280
  1475  012E                     u1230:	
  1476  012E                     l2069:	
  1477                           
  1478                           ;concentration.c: 277:             update_cursor(60, 2);
  1479  012E  3002               	movlw	2
  1480  012F  00BC               	movwf	??_update_gameboard_from_input
  1481  0130  083C               	movf	??_update_gameboard_from_input,w
  1482  0131  00B8               	movwf	update_cursor@direction
  1483  0132  303C               	movlw	60
  1484  0133  120A  118A  2255  120A  118A  	fcall	_update_cursor
  1485  0138  2989               	goto	l280
  1486  0139                     l2071:	
  1487  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1488  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1489  013B  085E               	movf	_joystick_x_pos+1,w
  1490  013C  3A80               	xorlw	128
  1491  013D  00FF               	movwf	btemp+1
  1492  013E  3081               	movlw	129
  1493  013F  027F               	subwf	btemp+1,w
  1494  0140  1D03               	skipz
  1495  0141  2944               	goto	u1245
  1496  0142  3090               	movlw	144
  1497  0143  025D               	subwf	_joystick_x_pos,w
  1498  0144                     u1245:	
  1499  0144  1803               	skipnc
  1500  0145  2947               	goto	u1241
  1501  0146  2948               	goto	u1240
  1502  0147                     u1241:	
  1503  0147  295A               	goto	l2077
  1504  0148                     u1240:	
  1505  0148                     l2073:	
  1506                           
  1507                           ;concentration.c: 280:         if(cursor_movable) {
  1508  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1510  014A  0863               	movf	_cursor_movable,w
  1511  014B  1903               	btfsc	3,2
  1512  014C  294E               	goto	u1251
  1513  014D  294F               	goto	u1250
  1514  014E                     u1251:	
  1515  014E  2989               	goto	l280
  1516  014F                     u1250:	
  1517  014F                     l2075:	
  1518                           
  1519                           ;concentration.c: 281:             update_cursor(60, 3);
  1520  014F  3003               	movlw	3
  1521  0150  00BC               	movwf	??_update_gameboard_from_input
  1522  0151  083C               	movf	??_update_gameboard_from_input,w
  1523  0152  00B8               	movwf	update_cursor@direction
  1524  0153  303C               	movlw	60
  1525  0154  120A  118A  2255  120A  118A  	fcall	_update_cursor
  1526  0159  2989               	goto	l280
  1527  015A                     l2077:	
  1528  015A  30FD               	movlw	253
  1529  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1530  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1531  015D  065B               	xorwf	_joystick_y_pos,w
  1532  015E  3003               	movlw	3
  1533  015F  1903               	skipnz
  1534  0160  065C               	xorwf	_joystick_y_pos+1,w
  1535  0161  1D03               	btfss	3,2
  1536  0162  2964               	goto	u1261
  1537  0163  2965               	goto	u1260
  1538  0164                     u1261:	
  1539  0164  2973               	goto	l2083
  1540  0165                     u1260:	
  1541  0165                     l2079:	
  1542                           
  1543                           ;concentration.c: 284:         if(cursor_movable) {
  1544  0165  0863               	movf	_cursor_movable,w
  1545  0166  1903               	btfsc	3,2
  1546  0167  2969               	goto	u1271
  1547  0168  296A               	goto	u1270
  1548  0169                     u1271:	
  1549  0169  2989               	goto	l280
  1550  016A                     u1270:	
  1551  016A                     l2081:	
  1552                           
  1553                           ;concentration.c: 285:             update_cursor(62, 1);
  1554  016A  01B8               	clrf	update_cursor@direction
  1555  016B  0AB8               	incf	update_cursor@direction,f
  1556  016C  303E               	movlw	62
  1557  016D  120A  118A  2255  120A  118A  	fcall	_update_cursor
  1558  0172  2989               	goto	l280
  1559  0173                     l2083:	
  1560  0173  085B               	movf	_joystick_y_pos,w
  1561  0174  045C               	iorwf	_joystick_y_pos+1,w
  1562  0175  1D03               	btfss	3,2
  1563  0176  2978               	goto	u1281
  1564  0177  2979               	goto	u1280
  1565  0178                     u1281:	
  1566  0178  2987               	goto	l277
  1567  0179                     u1280:	
  1568  0179                     l2085:	
  1569                           
  1570                           ;concentration.c: 288:         if(cursor_movable) {
  1571  0179  0863               	movf	_cursor_movable,w
  1572  017A  1903               	btfsc	3,2
  1573  017B  297D               	goto	u1291
  1574  017C  297E               	goto	u1290
  1575  017D                     u1291:	
  1576  017D  2989               	goto	l280
  1577  017E                     u1290:	
  1578  017E                     l2087:	
  1579                           
  1580                           ;concentration.c: 289:             update_cursor(62, 1);
  1581  017E  01B8               	clrf	update_cursor@direction
  1582  017F  0AB8               	incf	update_cursor@direction,f
  1583  0180  303E               	movlw	62
  1584  0181  120A  118A  2255  120A  118A  	fcall	_update_cursor
  1585  0186  2989               	goto	l280
  1586  0187                     l277:	
  1587                           
  1588                           ;concentration.c: 292:         cursor_movable = 1;
  1589  0187  01E3               	clrf	_cursor_movable
  1590  0188  0AE3               	incf	_cursor_movable,f
  1591  0189                     l280:	
  1592  0189  0008               	return
  1593  018A                     __end_of_update_gameboard_from_input:	
  1594                           
  1595                           	psect	text2
  1596  0255                     __ptext2:	
  1597 ;; *************** function _update_cursor *****************
  1598 ;; Defined at:
  1599 ;;		line 296 in file "concentration.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  move_delay_c    1    wreg     unsigned char 
  1602 ;;  direction       1   24[BANK0 ] unsigned char 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  move_delay_c    1   27[BANK0 ] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       1       0       0       0
  1615 ;;      Locals:         0       1       0       0       0
  1616 ;;      Temps:          0       2       0       0       0
  1617 ;;      Totals:         0       4       0       0       0
  1618 ;;Total ram usage:        4 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    7
  1621 ;; This function calls:
  1622 ;;		_get_current_char
  1623 ;;		_lcd_goto
  1624 ;;		_lcd_putch
  1625 ;; This function is called by:
  1626 ;;		_update_gameboard_from_input
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _update_cursor
  1632  0255                     _update_cursor:	
  1633                           
  1634                           ;incstack = 0
  1635 ;; hardware stack exceeded
  1636                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1637                           ;update_cursor@move_delay_count stored from wreg
  1638  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0257  00BB               	movwf	update_cursor@move_delay_count
  1641  0258                     l1845:	
  1642                           
  1643                           ;concentration.c: 297:     cursor_movable = 0;
  1644  0258  01E3               	clrf	_cursor_movable
  1645  0259                     l1847:	
  1646                           
  1647                           ;concentration.c: 298:     cursor_move_delay_count = move_delay_count;
  1648  0259  083B               	movf	update_cursor@move_delay_count,w
  1649  025A  00B9               	movwf	??_update_cursor
  1650  025B  0839               	movf	??_update_cursor,w
  1651  025C  00FD               	movwf	_cursor_move_delay_count
  1652                           
  1653                           ;concentration.c: 299:     switch(direction) {
  1654  025D  2A9C               	goto	l1869
  1655  025E                     l1849:	
  1656                           
  1657                           ;concentration.c: 301:             cursor_pos ^= 0x40;
  1658  025E  3040               	movlw	64
  1659  025F  00B9               	movwf	??_update_cursor
  1660  0260  0839               	movf	??_update_cursor,w
  1661  0261  06E7               	xorwf	_cursor_pos,f
  1662                           
  1663                           ;concentration.c: 302:             break;
  1664  0262  2AAF               	goto	l1871
  1665  0263                     l1851:	
  1666                           
  1667                           ;concentration.c: 306:                     cursor_pos = 0x0F;
  1668  0263  300F               	movlw	15
  1669  0264  00B9               	movwf	??_update_cursor
  1670  0265  0839               	movf	??_update_cursor,w
  1671  0266  00E7               	movwf	_cursor_pos
  1672                           
  1673                           ;concentration.c: 307:                     break;
  1674  0267  2AAF               	goto	l1871
  1675  0268                     l1853:	
  1676                           
  1677                           ;concentration.c: 309:                     cursor_pos = 0x4F;
  1678  0268  304F               	movlw	79
  1679  0269  00B9               	movwf	??_update_cursor
  1680  026A  0839               	movf	??_update_cursor,w
  1681  026B  00E7               	movwf	_cursor_pos
  1682                           
  1683                           ;concentration.c: 310:                     break;
  1684  026C  2AAF               	goto	l1871
  1685  026D                     l1855:	
  1686                           
  1687                           ;concentration.c: 312:                     cursor_pos--;
  1688  026D  3001               	movlw	1
  1689  026E  02E7               	subwf	_cursor_pos,f
  1690                           
  1691                           ;concentration.c: 313:             }
  1692  026F  2AAF               	goto	l1871
  1693  0270                     l1857:	
  1694  0270  0867               	movf	_cursor_pos,w
  1695  0271  00B9               	movwf	??_update_cursor
  1696  0272  01BA               	clrf	??_update_cursor+1
  1697                           
  1698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1699                           ; Switch size 1, requested type "simple"
  1700                           ; Number of cases is 1, Range of values is 0 to 0
  1701                           ; switch strategies available:
  1702                           ; Name         Instructions Cycles
  1703                           ; simple_byte            4     3 (average)
  1704                           ; direct_byte           11     8 (fixed)
  1705                           ; jumptable            260     6 (fixed)
  1706                           ;	Chosen strategy is simple_byte
  1707  0273  083A               	movf	??_update_cursor+1,w
  1708  0274  3A00               	xorlw	0	; case 0
  1709  0275  1903               	skipnz
  1710  0276  2A78               	goto	l2193
  1711  0277  2A6D               	goto	l1855
  1712  0278                     l2193:	
  1713                           
  1714                           ; Switch size 1, requested type "simple"
  1715                           ; Number of cases is 2, Range of values is 0 to 64
  1716                           ; switch strategies available:
  1717                           ; Name         Instructions Cycles
  1718                           ; simple_byte            7     4 (average)
  1719                           ; direct_byte          203     8 (fixed)
  1720                           ; jumptable            260     6 (fixed)
  1721                           ;	Chosen strategy is simple_byte
  1722  0278  0839               	movf	??_update_cursor,w
  1723  0279  3A00               	xorlw	0	; case 0
  1724  027A  1903               	skipnz
  1725  027B  2A63               	goto	l1851
  1726  027C  3A40               	xorlw	64	; case 64
  1727  027D  1903               	skipnz
  1728  027E  2A68               	goto	l1853
  1729  027F  2A6D               	goto	l1855
  1730  0280                     l1859:	
  1731                           
  1732                           ;concentration.c: 318:                     cursor_pos = 0x00;
  1733  0280  01E7               	clrf	_cursor_pos
  1734                           
  1735                           ;concentration.c: 319:                     break;
  1736  0281  2AAF               	goto	l1871
  1737  0282                     l1861:	
  1738                           
  1739                           ;concentration.c: 321:                     cursor_pos = 0x40;
  1740  0282  3040               	movlw	64
  1741  0283  00B9               	movwf	??_update_cursor
  1742  0284  0839               	movf	??_update_cursor,w
  1743  0285  00E7               	movwf	_cursor_pos
  1744                           
  1745                           ;concentration.c: 322:                     break;
  1746  0286  2AAF               	goto	l1871
  1747  0287                     l1863:	
  1748                           
  1749                           ;concentration.c: 324:                     cursor_pos++;
  1750  0287  3001               	movlw	1
  1751  0288  00B9               	movwf	??_update_cursor
  1752  0289  0839               	movf	??_update_cursor,w
  1753  028A  07E7               	addwf	_cursor_pos,f
  1754                           
  1755                           ;concentration.c: 325:             }
  1756  028B  2AAF               	goto	l1871
  1757  028C                     l1865:	
  1758  028C  0867               	movf	_cursor_pos,w
  1759  028D  00B9               	movwf	??_update_cursor
  1760  028E  01BA               	clrf	??_update_cursor+1
  1761                           
  1762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1763                           ; Switch size 1, requested type "simple"
  1764                           ; Number of cases is 1, Range of values is 0 to 0
  1765                           ; switch strategies available:
  1766                           ; Name         Instructions Cycles
  1767                           ; simple_byte            4     3 (average)
  1768                           ; direct_byte           11     8 (fixed)
  1769                           ; jumptable            260     6 (fixed)
  1770                           ;	Chosen strategy is simple_byte
  1771  028F  083A               	movf	??_update_cursor+1,w
  1772  0290  3A00               	xorlw	0	; case 0
  1773  0291  1903               	skipnz
  1774  0292  2A94               	goto	l2195
  1775  0293  2A87               	goto	l1863
  1776  0294                     l2195:	
  1777                           
  1778                           ; Switch size 1, requested type "simple"
  1779                           ; Number of cases is 2, Range of values is 15 to 79
  1780                           ; switch strategies available:
  1781                           ; Name         Instructions Cycles
  1782                           ; simple_byte            7     4 (average)
  1783                           ; direct_byte          206    11 (fixed)
  1784                           ; jumptable            263     9 (fixed)
  1785                           ;	Chosen strategy is simple_byte
  1786  0294  0839               	movf	??_update_cursor,w
  1787  0295  3A0F               	xorlw	15	; case 15
  1788  0296  1903               	skipnz
  1789  0297  2A80               	goto	l1859
  1790  0298  3A40               	xorlw	64	; case 79
  1791  0299  1903               	skipnz
  1792  029A  2A82               	goto	l1861
  1793  029B  2A87               	goto	l1863
  1794  029C                     l1869:	
  1795  029C  0838               	movf	update_cursor@direction,w
  1796  029D  00B9               	movwf	??_update_cursor
  1797  029E  01BA               	clrf	??_update_cursor+1
  1798                           
  1799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 1, Range of values is 0 to 0
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            4     3 (average)
  1805                           ; direct_byte           11     8 (fixed)
  1806                           ; jumptable            260     6 (fixed)
  1807                           ;	Chosen strategy is simple_byte
  1808  029F  083A               	movf	??_update_cursor+1,w
  1809  02A0  3A00               	xorlw	0	; case 0
  1810  02A1  1903               	skipnz
  1811  02A2  2AA4               	goto	l2197
  1812  02A3  2AAF               	goto	l1871
  1813  02A4                     l2197:	
  1814                           
  1815                           ; Switch size 1, requested type "simple"
  1816                           ; Number of cases is 3, Range of values is 1 to 3
  1817                           ; switch strategies available:
  1818                           ; Name         Instructions Cycles
  1819                           ; simple_byte           10     6 (average)
  1820                           ; direct_byte           20    11 (fixed)
  1821                           ; jumptable            263     9 (fixed)
  1822                           ;	Chosen strategy is simple_byte
  1823  02A4  0839               	movf	??_update_cursor,w
  1824  02A5  3A01               	xorlw	1	; case 1
  1825  02A6  1903               	skipnz
  1826  02A7  2A5E               	goto	l1849
  1827  02A8  3A03               	xorlw	3	; case 2
  1828  02A9  1903               	skipnz
  1829  02AA  2A70               	goto	l1857
  1830  02AB  3A01               	xorlw	1	; case 3
  1831  02AC  1903               	skipnz
  1832  02AD  2A8C               	goto	l1865
  1833  02AE  2AAF               	goto	l1871
  1834  02AF                     l1871:	
  1835                           
  1836                           ;concentration.c: 328:     lcd_putch(current_char, gameboard);
  1837  02AF  086A               	movf	_gameboard,w
  1838  02B0  00B4               	movwf	lcd_putch@port
  1839  02B1  086B               	movf	_gameboard+1,w
  1840  02B2  00B5               	movwf	lcd_putch@port+1
  1841  02B3  0866               	movf	_current_char,w
  1842  02B4  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  1843                           
  1844                           ;concentration.c: 329:     lcd_goto(cursor_pos, gameboard);
  1845  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1846  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1847  02BB  086A               	movf	_gameboard,w
  1848  02BC  00AC               	movwf	lcd_goto@port
  1849  02BD  086B               	movf	_gameboard+1,w
  1850  02BE  00AD               	movwf	lcd_goto@port+1
  1851  02BF  0867               	movf	_cursor_pos,w
  1852  02C0  120A  158A  26C9  120A  118A  	fcall	_lcd_goto
  1853                           
  1854                           ;concentration.c: 330:     get_current_char();
  1855  02C5  120A  158A  2669  120A  118A  	fcall	_get_current_char
  1856  02CA                     l1873:	
  1857                           
  1858                           ;concentration.c: 331:     if(cursor_solid == 1) {
  1859  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1860  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1861  02CC  0365               	decf	_cursor_solid,w
  1862  02CD  1D03               	btfss	3,2
  1863  02CE  2AD0               	goto	u1061
  1864  02CF  2AD1               	goto	u1060
  1865  02D0                     u1061:	
  1866  02D0  2AE7               	goto	l299
  1867  02D1                     u1060:	
  1868  02D1                     l1875:	
  1869                           
  1870                           ;concentration.c: 332:         lcd_putch(0x20, gameboard);
  1871  02D1  086A               	movf	_gameboard,w
  1872  02D2  00B4               	movwf	lcd_putch@port
  1873  02D3  086B               	movf	_gameboard+1,w
  1874  02D4  00B5               	movwf	lcd_putch@port+1
  1875  02D5  3020               	movlw	32
  1876  02D6  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  1877                           
  1878                           ;concentration.c: 333:         lcd_goto(cursor_pos, gameboard);
  1879  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1880  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1881  02DD  086A               	movf	_gameboard,w
  1882  02DE  00AC               	movwf	lcd_goto@port
  1883  02DF  086B               	movf	_gameboard+1,w
  1884  02E0  00AD               	movwf	lcd_goto@port+1
  1885  02E1  0867               	movf	_cursor_pos,w
  1886  02E2  120A  158A  26C9  120A  118A  	fcall	_lcd_goto
  1887  02E7                     l299:	
  1888  02E7  0008               	return
  1889  02E8                     __end_of_update_cursor:	
  1890                           
  1891                           	psect	text3
  1892  07CB                     __ptext3:	
  1893 ;; *************** function _toggle_cursor *****************
  1894 ;; Defined at:
  1895 ;;		line 337 in file "concentration.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0
  1912 ;;      Totals:         0       0       0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    7
  1916 ;; This function calls:
  1917 ;;		_lcd_goto
  1918 ;;		_lcd_putch
  1919 ;; This function is called by:
  1920 ;;		_update_gameboard_from_input
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _toggle_cursor
  1926  07CB                     _toggle_cursor:	
  1927  07CB                     l1833:	
  1928                           ;incstack = 0
  1929 ;; hardware stack exceeded
  1930                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1931                           
  1932                           
  1933                           ;concentration.c: 338:     if(cursor_solid == 0) {
  1934  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1935  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1936  07CD  0865               	movf	_cursor_solid,w
  1937  07CE  1D03               	btfss	3,2
  1938  07CF  2FD1               	goto	u1051
  1939  07D0  2FD2               	goto	u1050
  1940  07D1                     u1051:	
  1941  07D1  2FE1               	goto	l1839
  1942  07D2                     u1050:	
  1943  07D2                     l1835:	
  1944                           
  1945                           ;concentration.c: 339:         lcd_putch(0x20, gameboard);
  1946  07D2  086A               	movf	_gameboard,w
  1947  07D3  00B4               	movwf	lcd_putch@port
  1948  07D4  086B               	movf	_gameboard+1,w
  1949  07D5  00B5               	movwf	lcd_putch@port+1
  1950  07D6  3020               	movlw	32
  1951  07D7  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  1952  07DC                     l1837:	
  1953                           
  1954                           ;concentration.c: 340:         cursor_solid = 1;
  1955  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1956  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1957  07DE  01E5               	clrf	_cursor_solid
  1958  07DF  0AE5               	incf	_cursor_solid,f
  1959                           
  1960                           ;concentration.c: 341:     } else {
  1961  07E0  2FEE               	goto	l1843
  1962  07E1                     l1839:	
  1963                           
  1964                           ;concentration.c: 342:         lcd_putch(current_char, gameboard);
  1965  07E1  086A               	movf	_gameboard,w
  1966  07E2  00B4               	movwf	lcd_putch@port
  1967  07E3  086B               	movf	_gameboard+1,w
  1968  07E4  00B5               	movwf	lcd_putch@port+1
  1969  07E5  0866               	movf	_current_char,w
  1970  07E6  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  1971  07EB                     l1841:	
  1972                           
  1973                           ;concentration.c: 343:         cursor_solid = 0;
  1974  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  1975  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  1976  07ED  01E5               	clrf	_cursor_solid
  1977  07EE                     l1843:	
  1978                           
  1979                           ;concentration.c: 345:     lcd_goto(cursor_pos, gameboard);
  1980  07EE  086A               	movf	_gameboard,w
  1981  07EF  00AC               	movwf	lcd_goto@port
  1982  07F0  086B               	movf	_gameboard+1,w
  1983  07F1  00AD               	movwf	lcd_goto@port+1
  1984  07F2  0867               	movf	_cursor_pos,w
  1985  07F3  120A  158A  26C9  120A  118A  	fcall	_lcd_goto
  1986  07F8                     l304:	
  1987  07F8  0008               	return
  1988  07F9                     __end_of_toggle_cursor:	
  1989                           
  1990                           	psect	text4
  1991  0492                     __ptext4:	
  1992 ;; *************** function _check_for_match *****************
  1993 ;; Defined at:
  1994 ;;		line 215 in file "concentration.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  player          1    wreg     unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  player          1   27[BANK0 ] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         0       1       0       0       0
  2010 ;;      Temps:          0       1       0       0       0
  2011 ;;      Totals:         0       2       0       0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    8
  2015 ;; This function calls:
  2016 ;;		_DelayMs
  2017 ;;		_display_gameboard
  2018 ;;		_display_scoreboard
  2019 ;;		_get_cursor_index
  2020 ;; This function is called by:
  2021 ;;		_update_gameboard_from_input
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _check_for_match
  2027  0492                     _check_for_match:	
  2028                           
  2029                           ;incstack = 0
  2030 ;; hardware stack exceeded
  2031                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2032                           ;check_for_match@player stored from wreg
  2033  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0494  00BB               	movwf	check_for_match@player
  2036  0495                     l1807:	
  2037                           
  2038                           ;concentration.c: 216:     if(selected_tile == 0xFF) {
  2039  0495  0A60               	incf	_selected_tile,w
  2040  0496  1D03               	btfss	3,2
  2041  0497  2C99               	goto	u1021
  2042  0498  2C9A               	goto	u1020
  2043  0499                     u1021:	
  2044  0499  2C9F               	goto	l1811
  2045  049A                     u1020:	
  2046  049A                     l1809:	
  2047                           
  2048                           ;concentration.c: 217:         selected_tile = cursor_pos;
  2049  049A  0867               	movf	_cursor_pos,w
  2050  049B  00BA               	movwf	??_check_for_match
  2051  049C  083A               	movf	??_check_for_match,w
  2052  049D  00E0               	movwf	_selected_tile
  2053                           
  2054                           ;concentration.c: 218:     } else {
  2055  049E  2D0B               	goto	l251
  2056  049F                     l1811:	
  2057                           
  2058                           ;concentration.c: 219:         if(board[get_cursor_index(selected_tile)] == board[get_cu
      +                          rsor_index(cursor_pos)]) {
  2059  049F  0867               	movf	_cursor_pos,w
  2060  04A0  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  2061  04A5  3EC0               	addlw	(low (_board| 0))& (0+255)
  2062  04A6  0084               	movwf	4
  2063  04A7  1383               	bcf	3,7	;select IRP bank1
  2064  04A8  0800               	movf	0,w
  2065  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2066  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2067  04AB  00BA               	movwf	??_check_for_match
  2068  04AC  0860               	movf	_selected_tile,w
  2069  04AD  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  2070  04B2  3EC0               	addlw	(low (_board| 0))& (0+255)
  2071  04B3  0084               	movwf	4
  2072  04B4  1383               	bcf	3,7	;select IRP bank1
  2073  04B5  0800               	movf	0,w
  2074  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2075  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2076  04B8  063A               	xorwf	??_check_for_match,w
  2077  04B9  1D03               	skipz
  2078  04BA  2CBC               	goto	u1031
  2079  04BB  2CBD               	goto	u1030
  2080  04BC                     u1031:	
  2081  04BC  2CD1               	goto	l1821
  2082  04BD                     u1030:	
  2083  04BD                     l1813:	
  2084                           
  2085                           ;concentration.c: 220:             if(player == 0) {
  2086  04BD  083B               	movf	check_for_match@player,w
  2087  04BE  1D03               	btfss	3,2
  2088  04BF  2CC1               	goto	u1041
  2089  04C0  2CC2               	goto	u1040
  2090  04C1                     u1041:	
  2091  04C1  2CC7               	goto	l1817
  2092  04C2                     u1040:	
  2093  04C2                     l1815:	
  2094                           
  2095                           ;concentration.c: 221:                 p1_score++;
  2096  04C2  3001               	movlw	1
  2097  04C3  00BA               	movwf	??_check_for_match
  2098  04C4  083A               	movf	??_check_for_match,w
  2099  04C5  07E2               	addwf	_p1_score,f
  2100                           
  2101                           ;concentration.c: 222:             } else {
  2102  04C6  2CCB               	goto	l1819
  2103  04C7                     l1817:	
  2104                           
  2105                           ;concentration.c: 223:                 p2_score++;
  2106  04C7  3001               	movlw	1
  2107  04C8  00BA               	movwf	??_check_for_match
  2108  04C9  083A               	movf	??_check_for_match,w
  2109  04CA  07E1               	addwf	_p2_score,f
  2110  04CB                     l1819:	
  2111                           
  2112                           ;concentration.c: 225:             display_scoreboard();
  2113  04CB  120A  118A  218A  120A  118A  	fcall	_display_scoreboard
  2114                           
  2115                           ;concentration.c: 226:         } else {
  2116  04D0  2D05               	goto	l1831
  2117  04D1                     l1821:	
  2118                           
  2119                           ;concentration.c: 227:             display_gameboard();
  2120  04D1  120A  158A  2774  120A  118A  	fcall	_display_gameboard
  2121  04D6                     l1823:	
  2122                           
  2123                           ;concentration.c: 228:             DelayMs(1000);
  2124  04D6  30E8               	movlw	232
  2125  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2126  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2127  04D9  00A4               	movwf	DelayMs@millis
  2128  04DA  3003               	movlw	3
  2129  04DB  00A5               	movwf	DelayMs@millis+1
  2130  04DC  120A  158A  267B  120A  118A  	fcall	_DelayMs
  2131  04E1                     l1825:	
  2132                           
  2133                           ;concentration.c: 229:             visible[get_cursor_index(selected_tile)] = 0xFF;
  2134  04E1  30FF               	movlw	255
  2135  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2136  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2137  04E4  00BA               	movwf	??_check_for_match
  2138  04E5  0860               	movf	_selected_tile,w
  2139  04E6  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  2140  04EB  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2141  04EC  0084               	movwf	4
  2142  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2143  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2144  04EF  083A               	movf	??_check_for_match,w
  2145  04F0  1383               	bcf	3,7	;select IRP bank1
  2146  04F1  0080               	movwf	0
  2147  04F2                     l1827:	
  2148                           
  2149                           ;concentration.c: 230:             visible[get_cursor_index(cursor_pos)] = 0xFF;
  2150  04F2  30FF               	movlw	255
  2151  04F3  00BA               	movwf	??_check_for_match
  2152  04F4  0867               	movf	_cursor_pos,w
  2153  04F5  120A  158A  2633  120A  118A  	fcall	_get_cursor_index
  2154  04FA  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2155  04FB  0084               	movwf	4
  2156  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2157  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2158  04FE  083A               	movf	??_check_for_match,w
  2159  04FF  1383               	bcf	3,7	;select IRP bank1
  2160  0500  0080               	movwf	0
  2161  0501                     l1829:	
  2162                           
  2163                           ;concentration.c: 231:             current_char = 0xFF;
  2164  0501  30FF               	movlw	255
  2165  0502  00BA               	movwf	??_check_for_match
  2166  0503  083A               	movf	??_check_for_match,w
  2167  0504  00E6               	movwf	_current_char
  2168  0505                     l1831:	
  2169                           
  2170                           ;concentration.c: 233:         selected_tile = 0xFF;
  2171  0505  30FF               	movlw	255
  2172  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0507  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0508  00BA               	movwf	??_check_for_match
  2175  0509  083A               	movf	??_check_for_match,w
  2176  050A  00E0               	movwf	_selected_tile
  2177  050B                     l251:	
  2178  050B  0008               	return
  2179  050C                     __end_of_check_for_match:	
  2180                           
  2181                           	psect	text5
  2182  038D                     __ptext5:	
  2183 ;; *************** function _startup *****************
  2184 ;; Defined at:
  2185 ;;		line 109 in file "concentration.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    8
  2206 ;; This function calls:
  2207 ;;		_DelayMs
  2208 ;;		_display_gameboard
  2209 ;;		_display_scoreboard
  2210 ;;		_lcd_clear
  2211 ;;		_lcd_goto
  2212 ;;		_lcd_puts
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _startup
  2220  038D                     _startup:	
  2221  038D                     l2009:	
  2222                           ;incstack = 0
  2223 ;; hardware stack exceeded
  2224                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2225                           
  2226                           
  2227                           ;concentration.c: 110:     lcd_clear(gameboard);
  2228  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2229  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2230  038F  086A               	movf	_gameboard,w
  2231  0390  00AC               	movwf	lcd_clear@port
  2232  0391  086B               	movf	_gameboard+1,w
  2233  0392  00AD               	movwf	lcd_clear@port+1
  2234  0393  120A  158A  2694  120A  118A  	fcall	_lcd_clear
  2235                           
  2236                           ;concentration.c: 111:     lcd_clear(scoreboard);
  2237  0398  3008               	movlw	8
  2238  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2239  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2240  039B  00AC               	movwf	lcd_clear@port
  2241  039C  3000               	movlw	0
  2242  039D  00AD               	movwf	lcd_clear@port+1
  2243  039E  120A  158A  2694  120A  118A  	fcall	_lcd_clear
  2244                           
  2245                           ;concentration.c: 112:     lcd_puts(" Concentration!", scoreboard);
  2246  03A3  3008               	movlw	8
  2247  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2248  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2249  03A6  00AC               	movwf	lcd_puts@port
  2250  03A7  3000               	movlw	0
  2251  03A8  00AD               	movwf	lcd_puts@port+1
  2252  03A9  3052               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2253  03AA  120A  158A  270E  120A  118A  	fcall	_lcd_puts
  2254                           
  2255                           ;concentration.c: 113:     lcd_puts("Press the button", gameboard);
  2256  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2257  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2258  03B1  086A               	movf	_gameboard,w
  2259  03B2  00AC               	movwf	lcd_puts@port
  2260  03B3  086B               	movf	_gameboard+1,w
  2261  03B4  00AD               	movwf	lcd_puts@port+1
  2262  03B5  3041               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2263  03B6  120A  158A  270E  120A  118A  	fcall	_lcd_puts
  2264                           
  2265                           ;concentration.c: 114:     lcd_goto(0x40, gameboard);
  2266  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2267  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2268  03BD  086A               	movf	_gameboard,w
  2269  03BE  00AC               	movwf	lcd_goto@port
  2270  03BF  086B               	movf	_gameboard+1,w
  2271  03C0  00AD               	movwf	lcd_goto@port+1
  2272  03C1  3040               	movlw	64
  2273  03C2  120A  158A  26C9  120A  118A  	fcall	_lcd_goto
  2274                           
  2275                           ;concentration.c: 115:     lcd_puts("    to start", gameboard);
  2276  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2277  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2278  03C9  086A               	movf	_gameboard,w
  2279  03CA  00AC               	movwf	lcd_puts@port
  2280  03CB  086B               	movf	_gameboard+1,w
  2281  03CC  00AD               	movwf	lcd_puts@port+1
  2282  03CD  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2283  03CE  120A  158A  270E  120A  118A  	fcall	_lcd_puts
  2284  03D3                     l190:	
  2285                           ;concentration.c: 116:     while(RB5);
  2286                           
  2287  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2288  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2289  03D5  1A86               	btfsc	6,5	;volatile
  2290  03D6  2BD8               	goto	u1091
  2291  03D7  2BD9               	goto	u1090
  2292  03D8                     u1091:	
  2293  03D8  2BD3               	goto	l190
  2294  03D9                     u1090:	
  2295  03D9                     l2011:	
  2296                           
  2297                           ;concentration.c: 117:     DelayMs(8);
  2298  03D9  3008               	movlw	8
  2299  03DA  00A4               	movwf	DelayMs@millis
  2300  03DB  3000               	movlw	0
  2301  03DC  00A5               	movwf	DelayMs@millis+1
  2302  03DD  120A  158A  267B  120A  118A  	fcall	_DelayMs
  2303  03E2                     l193:	
  2304                           ;concentration.c: 118:     while(!RB5);
  2305                           
  2306  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2307  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2308  03E4  1E86               	btfss	6,5	;volatile
  2309  03E5  2BE7               	goto	u1101
  2310  03E6  2BE8               	goto	u1100
  2311  03E7                     u1101:	
  2312  03E7  2BE2               	goto	l193
  2313  03E8                     u1100:	
  2314  03E8                     l2013:	
  2315                           
  2316                           ;concentration.c: 119:     DelayMs(8);
  2317  03E8  3008               	movlw	8
  2318  03E9  00A4               	movwf	DelayMs@millis
  2319  03EA  3000               	movlw	0
  2320  03EB  00A5               	movwf	DelayMs@millis+1
  2321  03EC  120A  158A  267B  120A  118A  	fcall	_DelayMs
  2322  03F1                     l2015:	
  2323                           
  2324                           ;concentration.c: 120:     lcd_clear(gameboard);
  2325  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2326  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2327  03F3  086A               	movf	_gameboard,w
  2328  03F4  00AC               	movwf	lcd_clear@port
  2329  03F5  086B               	movf	_gameboard+1,w
  2330  03F6  00AD               	movwf	lcd_clear@port+1
  2331  03F7  120A  158A  2694  120A  118A  	fcall	_lcd_clear
  2332  03FC                     l2017:	
  2333                           
  2334                           ;concentration.c: 121:     lcd_clear(scoreboard);
  2335  03FC  3008               	movlw	8
  2336  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2337  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2338  03FF  00AC               	movwf	lcd_clear@port
  2339  0400  3000               	movlw	0
  2340  0401  00AD               	movwf	lcd_clear@port+1
  2341  0402  120A  158A  2694  120A  118A  	fcall	_lcd_clear
  2342  0407                     l2019:	
  2343                           
  2344                           ;concentration.c: 122:     p1_score = 0;
  2345  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0409  01E2               	clrf	_p1_score
  2348  040A                     l2021:	
  2349                           
  2350                           ;concentration.c: 123:     p2_score = 0;
  2351  040A  01E1               	clrf	_p2_score
  2352  040B                     l2023:	
  2353                           
  2354                           ;concentration.c: 124:     display_scoreboard();
  2355  040B  120A  118A  218A  120A  118A  	fcall	_display_scoreboard
  2356  0410                     l2025:	
  2357                           
  2358                           ;concentration.c: 125:     display_gameboard();
  2359  0410  120A  158A  2774  120A  118A  	fcall	_display_gameboard
  2360  0415                     l196:	
  2361  0415  0008               	return
  2362  0416                     __end_of_startup:	
  2363                           
  2364                           	psect	text6
  2365  018A                     __ptext6:	
  2366 ;; *************** function _display_scoreboard *****************
  2367 ;; Defined at:
  2368 ;;		line 128 in file "concentration.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          0       2       0       0       0
  2385 ;;      Totals:         0       2       0       0       0
  2386 ;;Total ram usage:        2 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    7
  2389 ;; This function calls:
  2390 ;;		___awdiv
  2391 ;;		___awmod
  2392 ;;		_lcd_goto
  2393 ;;		_lcd_putch
  2394 ;;		_lcd_puts
  2395 ;; This function is called by:
  2396 ;;		_startup
  2397 ;;		_check_for_match
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _display_scoreboard
  2403  018A                     _display_scoreboard:	
  2404  018A                     l1737:	
  2405                           ;incstack = 0
  2406 ;; hardware stack exceeded
  2407                           ; Regs used in _display_scoreboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2408                           
  2409                           
  2410                           ;concentration.c: 129:     lcd_puts("     Score:", scoreboard);
  2411  018A  3008               	movlw	8
  2412  018B  1283               	bcf	3,5	;RP0=0, select bank0
  2413  018C  1303               	bcf	3,6	;RP1=0, select bank0
  2414  018D  00AC               	movwf	lcd_puts@port
  2415  018E  3000               	movlw	0
  2416  018F  00AD               	movwf	lcd_puts@port+1
  2417  0190  306F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2418  0191  120A  158A  270E  120A  118A  	fcall	_lcd_puts
  2419                           
  2420                           ;concentration.c: 130:     lcd_goto(0x40, scoreboard);
  2421  0196  3008               	movlw	8
  2422  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0199  00AC               	movwf	lcd_goto@port
  2425  019A  3000               	movlw	0
  2426  019B  00AD               	movwf	lcd_goto@port+1
  2427  019C  3040               	movlw	64
  2428  019D  120A  158A  26C9  120A  118A  	fcall	_lcd_goto
  2429                           
  2430                           ;concentration.c: 131:     lcd_puts(" P1: ", scoreboard);
  2431  01A2  3008               	movlw	8
  2432  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2433  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2434  01A5  00AC               	movwf	lcd_puts@port
  2435  01A6  3000               	movlw	0
  2436  01A7  00AD               	movwf	lcd_puts@port+1
  2437  01A8  3082               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2438  01A9  120A  158A  270E  120A  118A  	fcall	_lcd_puts
  2439                           
  2440                           ;concentration.c: 132:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  2441  01AE  3008               	movlw	8
  2442  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2443  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2444  01B1  00B4               	movwf	lcd_putch@port
  2445  01B2  3000               	movlw	0
  2446  01B3  00B5               	movwf	lcd_putch@port+1
  2447  01B4  300A               	movlw	10
  2448  01B5  00AB               	movwf	___awdiv@divisor
  2449  01B6  3000               	movlw	0
  2450  01B7  00AC               	movwf	___awdiv@divisor+1
  2451  01B8  0862               	movf	_p1_score,w
  2452  01B9  00B8               	movwf	??_display_scoreboard
  2453  01BA  01B9               	clrf	??_display_scoreboard+1
  2454  01BB  0838               	movf	??_display_scoreboard,w
  2455  01BC  00A6               	movwf	___awmod@dividend
  2456  01BD  0839               	movf	??_display_scoreboard+1,w
  2457  01BE  00A7               	movwf	___awmod@dividend+1
  2458  01BF  3064               	movlw	100
  2459  01C0  00A4               	movwf	___awmod@divisor
  2460  01C1  3000               	movlw	0
  2461  01C2  00A5               	movwf	___awmod@divisor+1
  2462  01C3  120A  118A  2634  120A  118A  	fcall	___awmod
  2463  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2464  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2465  01CA  0825               	movf	?___awmod+1,w
  2466  01CB  00AE               	movwf	___awdiv@dividend+1
  2467  01CC  0824               	movf	?___awmod,w
  2468  01CD  00AD               	movwf	___awdiv@dividend
  2469  01CE  120A  118A  250C  120A  118A  	fcall	___awdiv
  2470  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2471  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2472  01D5  082B               	movf	?___awdiv,w
  2473  01D6  3E30               	addlw	48
  2474  01D7  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  2475                           
  2476                           ;concentration.c: 133:     lcd_putch((p1_score%10)+0x30, scoreboard);
  2477  01DC  3008               	movlw	8
  2478  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2479  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2480  01DF  00B4               	movwf	lcd_putch@port
  2481  01E0  3000               	movlw	0
  2482  01E1  00B5               	movwf	lcd_putch@port+1
  2483  01E2  300A               	movlw	10
  2484  01E3  00A4               	movwf	___awmod@divisor
  2485  01E4  3000               	movlw	0
  2486  01E5  00A5               	movwf	___awmod@divisor+1
  2487  01E6  0862               	movf	_p1_score,w
  2488  01E7  00B8               	movwf	??_display_scoreboard
  2489  01E8  01B9               	clrf	??_display_scoreboard+1
  2490  01E9  0838               	movf	??_display_scoreboard,w
  2491  01EA  00A6               	movwf	___awmod@dividend
  2492  01EB  0839               	movf	??_display_scoreboard+1,w
  2493  01EC  00A7               	movwf	___awmod@dividend+1
  2494  01ED  120A  118A  2634  120A  118A  	fcall	___awmod
  2495  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2496  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2497  01F4  0824               	movf	?___awmod,w
  2498  01F5  3E30               	addlw	48
  2499  01F6  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  2500                           
  2501                           ;concentration.c: 134:     lcd_puts("  P2: ", scoreboard);
  2502  01FB  3008               	movlw	8
  2503  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2504  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2505  01FE  00AC               	movwf	lcd_puts@port
  2506  01FF  3000               	movlw	0
  2507  0200  00AD               	movwf	lcd_puts@port+1
  2508  0201  307B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2509  0202  120A  158A  270E  120A  118A  	fcall	_lcd_puts
  2510                           
  2511                           ;concentration.c: 135:     lcd_putch(((p2_score%100)/10)+0x30, scoreboard);
  2512  0207  3008               	movlw	8
  2513  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2515  020A  00B4               	movwf	lcd_putch@port
  2516  020B  3000               	movlw	0
  2517  020C  00B5               	movwf	lcd_putch@port+1
  2518  020D  300A               	movlw	10
  2519  020E  00AB               	movwf	___awdiv@divisor
  2520  020F  3000               	movlw	0
  2521  0210  00AC               	movwf	___awdiv@divisor+1
  2522  0211  0861               	movf	_p2_score,w
  2523  0212  00B8               	movwf	??_display_scoreboard
  2524  0213  01B9               	clrf	??_display_scoreboard+1
  2525  0214  0838               	movf	??_display_scoreboard,w
  2526  0215  00A6               	movwf	___awmod@dividend
  2527  0216  0839               	movf	??_display_scoreboard+1,w
  2528  0217  00A7               	movwf	___awmod@dividend+1
  2529  0218  3064               	movlw	100
  2530  0219  00A4               	movwf	___awmod@divisor
  2531  021A  3000               	movlw	0
  2532  021B  00A5               	movwf	___awmod@divisor+1
  2533  021C  120A  118A  2634  120A  118A  	fcall	___awmod
  2534  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0223  0825               	movf	?___awmod+1,w
  2537  0224  00AE               	movwf	___awdiv@dividend+1
  2538  0225  0824               	movf	?___awmod,w
  2539  0226  00AD               	movwf	___awdiv@dividend
  2540  0227  120A  118A  250C  120A  118A  	fcall	___awdiv
  2541  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2542  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2543  022E  082B               	movf	?___awdiv,w
  2544  022F  3E30               	addlw	48
  2545  0230  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  2546                           
  2547                           ;concentration.c: 136:     lcd_putch((p2_score%10)+0x30, scoreboard);
  2548  0235  3008               	movlw	8
  2549  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0238  00B4               	movwf	lcd_putch@port
  2552  0239  3000               	movlw	0
  2553  023A  00B5               	movwf	lcd_putch@port+1
  2554  023B  300A               	movlw	10
  2555  023C  00A4               	movwf	___awmod@divisor
  2556  023D  3000               	movlw	0
  2557  023E  00A5               	movwf	___awmod@divisor+1
  2558  023F  0861               	movf	_p2_score,w
  2559  0240  00B8               	movwf	??_display_scoreboard
  2560  0241  01B9               	clrf	??_display_scoreboard+1
  2561  0242  0838               	movf	??_display_scoreboard,w
  2562  0243  00A6               	movwf	___awmod@dividend
  2563  0244  0839               	movf	??_display_scoreboard+1,w
  2564  0245  00A7               	movwf	___awmod@dividend+1
  2565  0246  120A  118A  2634  120A  118A  	fcall	___awmod
  2566  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2567  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2568  024D  0824               	movf	?___awmod,w
  2569  024E  3E30               	addlw	48
  2570  024F  120A  118A  22E8  120A  118A  	fcall	_lcd_putch
  2571  0254                     l199:	
  2572  0254  0008               	return
  2573  0255                     __end_of_display_scoreboard:	
  2574                           
  2575                           	psect	text7
  2576  0F0E                     __ptext7:	
  2577 ;; *************** function _lcd_puts *****************
  2578 ;; Defined at:
  2579 ;;		line 129 in file "lcd4bits.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  string          1    wreg     PTR const unsigned char 
  2582 ;;		 -> STR_6(7), STR_5(6), STR_4(12), STR_3(13), 
  2583 ;;		 -> STR_2(17), STR_1(16), 
  2584 ;;  port            2   12[BANK0 ] PTR unsigned char 
  2585 ;;		 -> PORTD(1), PORTA(1), 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  string          1   15[BANK0 ] PTR const unsigned char 
  2588 ;;		 -> STR_6(7), STR_5(6), STR_4(12), STR_3(13), 
  2589 ;;		 -> STR_2(17), STR_1(16), 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2599 ;;      Params:         0       2       0       0       0
  2600 ;;      Locals:         0       1       0       0       0
  2601 ;;      Temps:          0       1       0       0       0
  2602 ;;      Totals:         0       4       0       0       0
  2603 ;;Total ram usage:        4 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    6
  2606 ;; This function calls:
  2607 ;;		_lcd_write
  2608 ;; This function is called by:
  2609 ;;		_startup
  2610 ;;		_display_scoreboard
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _lcd_puts
  2616  0F0E                     _lcd_puts:	
  2617                           
  2618                           ;incstack = 0
  2619 ;; hardware stack exceeded
  2620                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2621                           ;lcd_puts@string stored from wreg
  2622  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0F10  00AF               	movwf	lcd_puts@string
  2625  0F11                     l1631:	
  2626                           
  2627                           ;lcd4bits.c: 130:     while (*string != 0) {
  2628  0F11  2F2C               	goto	l1637
  2629  0F12                     l1633:	
  2630                           
  2631                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  2632  0F12  082F               	movf	lcd_puts@string,w
  2633  0F13  0084               	movwf	4
  2634  0F14  120A  118A  2300  120A  158A  	fcall	stringdir
  2635  0F19  00AE               	movwf	??_lcd_puts
  2636  0F1A  082E               	movf	??_lcd_puts,w
  2637  0F1B  00A6               	movwf	lcd_write@CmdChar
  2638  0F1C  082C               	movf	lcd_puts@port,w
  2639  0F1D  00A7               	movwf	lcd_write@port
  2640  0F1E  082D               	movf	lcd_puts@port+1,w
  2641  0F1F  00A8               	movwf	lcd_write@port+1
  2642  0F20  3010               	movlw	16
  2643  0F21  120A  118A  2733  120A  158A  	fcall	_lcd_write
  2644  0F26                     l1635:	
  2645  0F26  3001               	movlw	1
  2646  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0F29  00AE               	movwf	??_lcd_puts
  2649  0F2A  082E               	movf	??_lcd_puts,w
  2650  0F2B  07AF               	addwf	lcd_puts@string,f
  2651  0F2C                     l1637:	
  2652                           
  2653                           ;lcd4bits.c: 130:     while (*string != 0) {
  2654  0F2C  082F               	movf	lcd_puts@string,w
  2655  0F2D  0084               	movwf	4
  2656  0F2E  120A  118A  2300  120A  158A  	fcall	stringdir
  2657  0F33  3A00               	xorlw	0
  2658  0F34  1D03               	skipz
  2659  0F35  2F37               	goto	u721
  2660  0F36  2F38               	goto	u720
  2661  0F37                     u721:	
  2662  0F37  2F12               	goto	l1633
  2663  0F38                     u720:	
  2664  0F38                     l359:	
  2665  0F38  0008               	return
  2666  0F39                     __end_of_lcd_puts:	
  2667                           
  2668                           	psect	text8
  2669  0634                     __ptext8:	
  2670 ;; *************** function ___awmod *****************
  2671 ;; Defined at:
  2672 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  divisor         2    4[BANK0 ] int 
  2675 ;;  dividend        2    6[BANK0 ] int 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  sign            1   10[BANK0 ] unsigned char 
  2678 ;;  counter         1    9[BANK0 ] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2    4[BANK0 ] int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       4       0       0       0
  2689 ;;      Locals:         0       2       0       0       0
  2690 ;;      Temps:          0       1       0       0       0
  2691 ;;      Totals:         0       7       0       0       0
  2692 ;;Total ram usage:        7 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    4
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_display_scoreboard
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function ___awmod
  2704  0634                     ___awmod:	
  2705  0634                     l1699:	
  2706                           ;incstack = 0
  2707                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2708                           
  2709  0634  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0635  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0636  01AA               	clrf	___awmod@sign
  2712  0637                     l1701:	
  2713  0637  1FA7               	btfss	___awmod@dividend+1,7
  2714  0638  2E3A               	goto	u841
  2715  0639  2E3B               	goto	u840
  2716  063A                     u841:	
  2717  063A  2E42               	goto	l1707
  2718  063B                     u840:	
  2719  063B                     l1703:	
  2720  063B  09A6               	comf	___awmod@dividend,f
  2721  063C  09A7               	comf	___awmod@dividend+1,f
  2722  063D  0AA6               	incf	___awmod@dividend,f
  2723  063E  1903               	skipnz
  2724  063F  0AA7               	incf	___awmod@dividend+1,f
  2725  0640                     l1705:	
  2726  0640  01AA               	clrf	___awmod@sign
  2727  0641  0AAA               	incf	___awmod@sign,f
  2728  0642                     l1707:	
  2729  0642  1FA5               	btfss	___awmod@divisor+1,7
  2730  0643  2E45               	goto	u851
  2731  0644  2E46               	goto	u850
  2732  0645                     u851:	
  2733  0645  2E4B               	goto	l1711
  2734  0646                     u850:	
  2735  0646                     l1709:	
  2736  0646  09A4               	comf	___awmod@divisor,f
  2737  0647  09A5               	comf	___awmod@divisor+1,f
  2738  0648  0AA4               	incf	___awmod@divisor,f
  2739  0649  1903               	skipnz
  2740  064A  0AA5               	incf	___awmod@divisor+1,f
  2741  064B                     l1711:	
  2742  064B  0824               	movf	___awmod@divisor,w
  2743  064C  0425               	iorwf	___awmod@divisor+1,w
  2744  064D  1903               	btfsc	3,2
  2745  064E  2E50               	goto	u861
  2746  064F  2E51               	goto	u860
  2747  0650                     u861:	
  2748  0650  2E80               	goto	l1729
  2749  0651                     u860:	
  2750  0651                     l1713:	
  2751  0651  01A9               	clrf	___awmod@counter
  2752  0652  0AA9               	incf	___awmod@counter,f
  2753  0653  2E5F               	goto	l1719
  2754  0654                     l1715:	
  2755  0654  3001               	movlw	1
  2756  0655                     u875:	
  2757  0655  1003               	clrc
  2758  0656  0DA4               	rlf	___awmod@divisor,f
  2759  0657  0DA5               	rlf	___awmod@divisor+1,f
  2760  0658  3EFF               	addlw	-1
  2761  0659  1D03               	skipz
  2762  065A  2E55               	goto	u875
  2763  065B                     l1717:	
  2764  065B  3001               	movlw	1
  2765  065C  00A8               	movwf	??___awmod
  2766  065D  0828               	movf	??___awmod,w
  2767  065E  07A9               	addwf	___awmod@counter,f
  2768  065F                     l1719:	
  2769  065F  1FA5               	btfss	___awmod@divisor+1,7
  2770  0660  2E62               	goto	u881
  2771  0661  2E63               	goto	u880
  2772  0662                     u881:	
  2773  0662  2E54               	goto	l1715
  2774  0663                     u880:	
  2775  0663                     l1721:	
  2776  0663  0825               	movf	___awmod@divisor+1,w
  2777  0664  0227               	subwf	___awmod@dividend+1,w
  2778  0665  1D03               	skipz
  2779  0666  2E69               	goto	u895
  2780  0667  0824               	movf	___awmod@divisor,w
  2781  0668  0226               	subwf	___awmod@dividend,w
  2782  0669                     u895:	
  2783  0669  1C03               	skipc
  2784  066A  2E6C               	goto	u891
  2785  066B  2E6D               	goto	u890
  2786  066C                     u891:	
  2787  066C  2E73               	goto	l1725
  2788  066D                     u890:	
  2789  066D                     l1723:	
  2790  066D  0824               	movf	___awmod@divisor,w
  2791  066E  02A6               	subwf	___awmod@dividend,f
  2792  066F  0825               	movf	___awmod@divisor+1,w
  2793  0670  1C03               	skipc
  2794  0671  03A7               	decf	___awmod@dividend+1,f
  2795  0672  02A7               	subwf	___awmod@dividend+1,f
  2796  0673                     l1725:	
  2797  0673  3001               	movlw	1
  2798  0674                     u905:	
  2799  0674  1003               	clrc
  2800  0675  0CA5               	rrf	___awmod@divisor+1,f
  2801  0676  0CA4               	rrf	___awmod@divisor,f
  2802  0677  3EFF               	addlw	-1
  2803  0678  1D03               	skipz
  2804  0679  2E74               	goto	u905
  2805  067A                     l1727:	
  2806  067A  3001               	movlw	1
  2807  067B  02A9               	subwf	___awmod@counter,f
  2808  067C  1D03               	btfss	3,2
  2809  067D  2E7F               	goto	u911
  2810  067E  2E80               	goto	u910
  2811  067F                     u911:	
  2812  067F  2E63               	goto	l1721
  2813  0680                     u910:	
  2814  0680                     l1729:	
  2815  0680  082A               	movf	___awmod@sign,w
  2816  0681  1903               	btfsc	3,2
  2817  0682  2E84               	goto	u921
  2818  0683  2E85               	goto	u920
  2819  0684                     u921:	
  2820  0684  2E8A               	goto	l1733
  2821  0685                     u920:	
  2822  0685                     l1731:	
  2823  0685  09A6               	comf	___awmod@dividend,f
  2824  0686  09A7               	comf	___awmod@dividend+1,f
  2825  0687  0AA6               	incf	___awmod@dividend,f
  2826  0688  1903               	skipnz
  2827  0689  0AA7               	incf	___awmod@dividend+1,f
  2828  068A                     l1733:	
  2829  068A  0827               	movf	___awmod@dividend+1,w
  2830  068B  00A5               	movwf	?___awmod+1
  2831  068C  0826               	movf	___awmod@dividend,w
  2832  068D  00A4               	movwf	?___awmod
  2833  068E                     l625:	
  2834  068E  0008               	return
  2835  068F                     __end_of___awmod:	
  2836                           
  2837                           	psect	text9
  2838  0F74                     __ptext9:	
  2839 ;; *************** function _display_gameboard *****************
  2840 ;; Defined at:
  2841 ;;		line 139 in file "concentration.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  i               1   25[BANK0 ] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         0       1       0       0       0
  2857 ;;      Temps:          0       1       0       0       0
  2858 ;;      Totals:         0       2       0       0       0
  2859 ;;Total ram usage:        2 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    7
  2862 ;; This function calls:
  2863 ;;		_lcd_clear
  2864 ;;		_lcd_goto
  2865 ;;		_lcd_putch
  2866 ;; This function is called by:
  2867 ;;		_startup
  2868 ;;		_check_for_match
  2869 ;;		_update_gameboard_from_input
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _display_gameboard
  2875  0F74                     _display_gameboard:	
  2876  0F74                     l1739:	
  2877                           ;incstack = 0
  2878 ;; hardware stack exceeded
  2879                           ; Regs used in _display_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2880                           
  2881                           
  2882                           ;concentration.c: 140:     lcd_clear(gameboard);
  2883  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0F76  086A               	movf	_gameboard,w
  2886  0F77  00AC               	movwf	lcd_clear@port
  2887  0F78  086B               	movf	_gameboard+1,w
  2888  0F79  00AD               	movwf	lcd_clear@port+1
  2889  0F7A  120A  158A  2694  120A  158A  	fcall	_lcd_clear
  2890  0F7F                     l1741:	
  2891                           
  2892                           ;concentration.c: 141:     char i;;concentration.c: 142:     for(i=0;i<32;i++) {
  2893  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0F81  01B9               	clrf	display_gameboard@i
  2896  0F82                     l1747:	
  2897                           
  2898                           ;concentration.c: 143:         if(i == 16) {
  2899  0F82  3010               	movlw	16
  2900  0F83  0639               	xorwf	display_gameboard@i,w
  2901  0F84  1D03               	btfss	3,2
  2902  0F85  2F87               	goto	u931
  2903  0F86  2F88               	goto	u930
  2904  0F87                     u931:	
  2905  0F87  2F92               	goto	l204
  2906  0F88                     u930:	
  2907  0F88                     l1749:	
  2908                           
  2909                           ;concentration.c: 144:             lcd_goto(0x40, gameboard);
  2910  0F88  086A               	movf	_gameboard,w
  2911  0F89  00AC               	movwf	lcd_goto@port
  2912  0F8A  086B               	movf	_gameboard+1,w
  2913  0F8B  00AD               	movwf	lcd_goto@port+1
  2914  0F8C  3040               	movlw	64
  2915  0F8D  120A  158A  26C9  120A  158A  	fcall	_lcd_goto
  2916  0F92                     l204:	
  2917                           ;concentration.c: 145:         }
  2918                           
  2919                           
  2920                           ;concentration.c: 146:         lcd_putch(visible[i], gameboard);
  2921  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0F94  086A               	movf	_gameboard,w
  2924  0F95  00B4               	movwf	lcd_putch@port
  2925  0F96  086B               	movf	_gameboard+1,w
  2926  0F97  00B5               	movwf	lcd_putch@port+1
  2927  0F98  0839               	movf	display_gameboard@i,w
  2928  0F99  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2929  0F9A  0084               	movwf	4
  2930  0F9B  1383               	bcf	3,7	;select IRP bank1
  2931  0F9C  0800               	movf	0,w
  2932  0F9D  120A  118A  22E8  120A  158A  	fcall	_lcd_putch
  2933  0FA2                     l1751:	
  2934                           
  2935                           ;concentration.c: 147:     }
  2936  0FA2  3001               	movlw	1
  2937  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0FA5  00B8               	movwf	??_display_gameboard
  2940  0FA6  0838               	movf	??_display_gameboard,w
  2941  0FA7  07B9               	addwf	display_gameboard@i,f
  2942  0FA8                     l1753:	
  2943  0FA8  3020               	movlw	32
  2944  0FA9  0239               	subwf	display_gameboard@i,w
  2945  0FAA  1C03               	skipc
  2946  0FAB  2FAD               	goto	u941
  2947  0FAC  2FAE               	goto	u940
  2948  0FAD                     u941:	
  2949  0FAD  2F82               	goto	l1747
  2950  0FAE                     u940:	
  2951  0FAE                     l1755:	
  2952                           
  2953                           ;concentration.c: 148:     lcd_goto(cursor_pos, gameboard);
  2954  0FAE  086A               	movf	_gameboard,w
  2955  0FAF  00AC               	movwf	lcd_goto@port
  2956  0FB0  086B               	movf	_gameboard+1,w
  2957  0FB1  00AD               	movwf	lcd_goto@port+1
  2958  0FB2  0867               	movf	_cursor_pos,w
  2959  0FB3  120A  158A  26C9  120A  158A  	fcall	_lcd_goto
  2960  0FB8                     l205:	
  2961  0FB8  0008               	return
  2962  0FB9                     __end_of_display_gameboard:	
  2963                           
  2964                           	psect	text10
  2965  02E8                     __ptext10:	
  2966 ;; *************** function _lcd_putch *****************
  2967 ;; Defined at:
  2968 ;;		line 136 in file "lcd4bits.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  character       1    wreg     unsigned char 
  2971 ;;  port            2   20[BANK0 ] PTR unsigned char 
  2972 ;;		 -> PORTD(1), PORTA(1), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  character       1   23[BANK0 ] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       2       0       0       0
  2985 ;;      Locals:         0       1       0       0       0
  2986 ;;      Temps:          0       1       0       0       0
  2987 ;;      Totals:         0       4       0       0       0
  2988 ;;Total ram usage:        4 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    6
  2991 ;; This function calls:
  2992 ;;		_lcd_write
  2993 ;; This function is called by:
  2994 ;;		_display_scoreboard
  2995 ;;		_display_gameboard
  2996 ;;		_update_cursor
  2997 ;;		_toggle_cursor
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _lcd_putch
  3003  02E8                     _lcd_putch:	
  3004                           
  3005                           ;incstack = 0
  3006 ;; hardware stack exceeded
  3007                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3008                           ;lcd_putch@character stored from wreg
  3009  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3010  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3011  02EA  00B7               	movwf	lcd_putch@character
  3012  02EB                     l1643:	
  3013                           
  3014                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  3015  02EB  0837               	movf	lcd_putch@character,w
  3016  02EC  00B6               	movwf	??_lcd_putch
  3017  02ED  0836               	movf	??_lcd_putch,w
  3018  02EE  00A6               	movwf	lcd_write@CmdChar
  3019  02EF  0834               	movf	lcd_putch@port,w
  3020  02F0  00A7               	movwf	lcd_write@port
  3021  02F1  0835               	movf	lcd_putch@port+1,w
  3022  02F2  00A8               	movwf	lcd_write@port+1
  3023  02F3  3010               	movlw	16
  3024  02F4  120A  118A  2733  120A  118A  	fcall	_lcd_write
  3025  02F9                     l362:	
  3026  02F9  0008               	return
  3027  02FA                     __end_of_lcd_putch:	
  3028                           
  3029                           	psect	text11
  3030  0EAE                     __ptext11:	
  3031 ;; *************** function _serial_init *****************
  3032 ;; Defined at:
  3033 ;;		line 94 in file "concentration.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    4
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _serial_init
  3063  0EAE                     _serial_init:	
  3064  0EAE                     l1985:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _serial_init: [wreg+status,2]
  3067                           
  3068                           
  3069                           ;concentration.c: 95:     recieved_char = 0x00;
  3070  0EAE  01FC               	clrf	_recieved_char
  3071  0EAF                     l1987:	
  3072                           
  3073                           ;concentration.c: 96:     TRISC = 0x80;
  3074  0EAF  3080               	movlw	128
  3075  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0EB2  0087               	movwf	7	;volatile
  3078  0EB3                     l1989:	
  3079                           
  3080                           ;concentration.c: 97:     TXEN = 1;
  3081  0EB3  1698               	bsf	24,5	;volatile
  3082  0EB4                     l1991:	
  3083                           
  3084                           ;concentration.c: 98:     TX9 = 1;
  3085  0EB4  1718               	bsf	24,6	;volatile
  3086  0EB5                     l1993:	
  3087                           
  3088                           ;concentration.c: 99:     CREN = 1;
  3089  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0EB7  1618               	bsf	24,4	;volatile
  3092  0EB8                     l1995:	
  3093                           
  3094                           ;concentration.c: 100:     RX9 = 1;
  3095  0EB8  1718               	bsf	24,6	;volatile
  3096  0EB9                     l1997:	
  3097                           
  3098                           ;concentration.c: 101:     RCIE = 1;
  3099  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  3101  0EBB  168C               	bsf	12,5	;volatile
  3102  0EBC                     l1999:	
  3103                           
  3104                           ;concentration.c: 102:     SYNC = 0;
  3105  0EBC  1218               	bcf	24,4	;volatile
  3106  0EBD                     l2001:	
  3107                           
  3108                           ;concentration.c: 103:     BRGH = 1;
  3109  0EBD  1518               	bsf	24,2	;volatile
  3110  0EBE                     l2003:	
  3111                           
  3112                           ;concentration.c: 104:     BRG16 = 0;
  3113  0EBE  1683               	bsf	3,5	;RP0=1, select bank3
  3114  0EBF  1703               	bsf	3,6	;RP1=1, select bank3
  3115  0EC0  1187               	bcf	7,3	;volatile
  3116  0EC1                     l2005:	
  3117                           
  3118                           ;concentration.c: 105:     SPBRG = 10;
  3119  0EC1  300A               	movlw	10
  3120  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0EC4  0099               	movwf	25	;volatile
  3123  0EC5                     l2007:	
  3124                           
  3125                           ;concentration.c: 106:     SPEN = 1;
  3126  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  3128  0EC7  1798               	bsf	24,7	;volatile
  3129  0EC8                     l187:	
  3130  0EC8  0008               	return
  3131  0EC9                     __end_of_serial_init:	
  3132                           
  3133                           	psect	text12
  3134  068F                     __ptext12:	
  3135 ;; *************** function _lcd_init *****************
  3136 ;; Defined at:
  3137 ;;		line 155 in file "lcd4bits.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  port            2   14[BANK0 ] PTR unsigned char 
  3140 ;;		 -> PORTD(1), PORTA(1), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       2       0       0       0
  3153 ;;      Locals:         0       0       0       0       0
  3154 ;;      Temps:          0       1       0       0       0
  3155 ;;      Totals:         0       3       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    7
  3159 ;; This function calls:
  3160 ;;		_DelayMs
  3161 ;;		_lcd_clear
  3162 ;;		_lcd_write
  3163 ;;		_tmr0_init
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function _lcd_init
  3171  068F                     _lcd_init:	
  3172  068F                     l1903:	
  3173                           ;incstack = 0
  3174                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3175                           
  3176                           
  3177                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  3178  068F  120A  158A  261D  120A  118A  	fcall	_tmr0_init
  3179  0694                     l1905:	
  3180                           
  3181                           ;lcd4bits.c: 158:     *port = 0;
  3182  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0696  082E               	movf	lcd_init@port,w
  3185  0697  0084               	movwf	4
  3186  0698  1783               	bsf	3,7
  3187  0699  1C2F               	btfss	lcd_init@port+1,0
  3188  069A  1383               	bcf	3,7
  3189  069B  0180               	clrf	0
  3190  069C                     l1907:	
  3191                           
  3192                           ;lcd4bits.c: 159:     DelayMs(15);
  3193  069C  300F               	movlw	15
  3194  069D  00A4               	movwf	DelayMs@millis
  3195  069E  3000               	movlw	0
  3196  069F  00A5               	movwf	DelayMs@millis+1
  3197  06A0  120A  158A  267B  120A  118A  	fcall	_DelayMs
  3198  06A5                     l1909:	
  3199                           
  3200                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  3201  06A5  3028               	movlw	40
  3202  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3203  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  3204  06A8  00B0               	movwf	??_lcd_init
  3205  06A9  0830               	movf	??_lcd_init,w
  3206  06AA  00A6               	movwf	lcd_write@CmdChar
  3207  06AB  082E               	movf	lcd_init@port,w
  3208  06AC  00A7               	movwf	lcd_write@port
  3209  06AD  082F               	movf	lcd_init@port+1,w
  3210  06AE  00A8               	movwf	lcd_write@port+1
  3211  06AF  3000               	movlw	0
  3212  06B0  120A  118A  2733  120A  118A  	fcall	_lcd_write
  3213  06B5                     l1911:	
  3214                           
  3215                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  3216  06B5  300C               	movlw	12
  3217  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3218  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3219  06B8  00B0               	movwf	??_lcd_init
  3220  06B9  0830               	movf	??_lcd_init,w
  3221  06BA  00A6               	movwf	lcd_write@CmdChar
  3222  06BB  082E               	movf	lcd_init@port,w
  3223  06BC  00A7               	movwf	lcd_write@port
  3224  06BD  082F               	movf	lcd_init@port+1,w
  3225  06BE  00A8               	movwf	lcd_write@port+1
  3226  06BF  3000               	movlw	0
  3227  06C0  120A  118A  2733  120A  118A  	fcall	_lcd_write
  3228  06C5                     l1913:	
  3229                           
  3230                           ;lcd4bits.c: 162:     lcd_clear(port);
  3231  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3232  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3233  06C7  082E               	movf	lcd_init@port,w
  3234  06C8  00AC               	movwf	lcd_clear@port
  3235  06C9  082F               	movf	lcd_init@port+1,w
  3236  06CA  00AD               	movwf	lcd_clear@port+1
  3237  06CB  120A  158A  2694  120A  118A  	fcall	_lcd_clear
  3238  06D0                     l1915:	
  3239                           
  3240                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  3241  06D0  3006               	movlw	6
  3242  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3243  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3244  06D3  00B0               	movwf	??_lcd_init
  3245  06D4  0830               	movf	??_lcd_init,w
  3246  06D5  00A6               	movwf	lcd_write@CmdChar
  3247  06D6  082E               	movf	lcd_init@port,w
  3248  06D7  00A7               	movwf	lcd_write@port
  3249  06D8  082F               	movf	lcd_init@port+1,w
  3250  06D9  00A8               	movwf	lcd_write@port+1
  3251  06DA  3000               	movlw	0
  3252  06DB  120A  118A  2733  120A  118A  	fcall	_lcd_write
  3253  06E0                     l368:	
  3254  06E0  0008               	return
  3255  06E1                     __end_of_lcd_init:	
  3256                           
  3257                           	psect	text13
  3258  0E1D                     __ptext13:	
  3259 ;; *************** function _tmr0_init *****************
  3260 ;; Defined at:
  3261 ;;		line 72 in file "lcd4bits.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       1       0       0       0
  3278 ;;      Totals:         0       1       0       0       0
  3279 ;;Total ram usage:        1 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    4
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_lcd_init
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _tmr0_init
  3291  0E1D                     _tmr0_init:	
  3292  0E1D                     l1889:	
  3293                           ;incstack = 0
  3294                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  3295                           
  3296                           
  3297                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  3298  0E1D  30C0               	movlw	192
  3299  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  3300  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  3301  0E20  00A4               	movwf	??_tmr0_init
  3302  0E21  0824               	movf	??_tmr0_init,w
  3303  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  3304  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  3305  0E24  0581               	andwf	1,f	;volatile
  3306  0E25                     l1891:	
  3307                           
  3308                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  3309  0E25  1501               	bsf	1,2	;volatile
  3310  0E26                     l333:	
  3311  0E26  0008               	return
  3312  0E27                     __end_of_tmr0_init:	
  3313                           
  3314                           	psect	text14
  3315  0EE7                     __ptext14:	
  3316 ;; *************** function _joystick_init *****************
  3317 ;; Defined at:
  3318 ;;		line 366 in file "concentration.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0
  3335 ;;      Totals:         0       0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    4
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _joystick_init
  3348  0EE7                     _joystick_init:	
  3349  0EE7                     l1917:	
  3350                           ;incstack = 0
  3351                           ; Regs used in _joystick_init: [wreg+status,2]
  3352                           
  3353                           
  3354                           ;concentration.c: 367:     joystick_x_pos = 512;
  3355  0EE7  3000               	movlw	0
  3356  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0EEA  00DD               	movwf	_joystick_x_pos
  3359  0EEB  3002               	movlw	2
  3360  0EEC  00DE               	movwf	_joystick_x_pos+1
  3361                           
  3362                           ;concentration.c: 368:     joystick_y_pos = 512;
  3363  0EED  3000               	movlw	0
  3364  0EEE  00DB               	movwf	_joystick_y_pos
  3365  0EEF  3002               	movlw	2
  3366  0EF0  00DC               	movwf	_joystick_y_pos+1
  3367  0EF1                     l1919:	
  3368                           
  3369                           ;concentration.c: 369:     PORTB = 0;
  3370  0EF1  0186               	clrf	6	;volatile
  3371  0EF2                     l1921:	
  3372                           
  3373                           ;concentration.c: 370:     nRBPU = 0;
  3374  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  3376  0EF4  1381               	bcf	1,7	;volatile
  3377  0EF5                     l1923:	
  3378                           
  3379                           ;concentration.c: 371:     WPUB = 0x20;
  3380  0EF5  3020               	movlw	32
  3381  0EF6  0095               	movwf	21	;volatile
  3382  0EF7                     l1925:	
  3383                           
  3384                           ;concentration.c: 372:     TRISB = 0x38;
  3385  0EF7  3038               	movlw	56
  3386  0EF8  0086               	movwf	6	;volatile
  3387  0EF9                     l1927:	
  3388                           
  3389                           ;concentration.c: 373:     ANSELH = 0x0A;
  3390  0EF9  300A               	movlw	10
  3391  0EFA  1683               	bsf	3,5	;RP0=1, select bank3
  3392  0EFB  1703               	bsf	3,6	;RP1=1, select bank3
  3393  0EFC  0089               	movwf	9	;volatile
  3394  0EFD                     l1929:	
  3395                           
  3396                           ;concentration.c: 374:     GIE = 1;
  3397  0EFD  178B               	bsf	11,7	;volatile
  3398  0EFE                     l1931:	
  3399                           
  3400                           ;concentration.c: 375:     PEIE = 1;
  3401  0EFE  170B               	bsf	11,6	;volatile
  3402  0EFF                     l1933:	
  3403                           
  3404                           ;concentration.c: 376:     ADIF = 0;
  3405  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0F01  130C               	bcf	12,6	;volatile
  3408  0F02                     l1935:	
  3409                           
  3410                           ;concentration.c: 377:     ADIE = 1;
  3411  0F02  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0F03  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0F04  170C               	bsf	12,6	;volatile
  3414  0F05                     l1937:	
  3415                           
  3416                           ;concentration.c: 378:     ADCON1 = 0x80;
  3417  0F05  3080               	movlw	128
  3418  0F06  009F               	movwf	31	;volatile
  3419  0F07                     l1939:	
  3420                           
  3421                           ;concentration.c: 379:     ADCON0 = 0xA5;
  3422  0F07  30A5               	movlw	165
  3423  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0F0A  009F               	movwf	31	;volatile
  3426  0F0B                     l1941:	
  3427                           
  3428                           ;concentration.c: 380:     joystick_pressed = 1;
  3429  0F0B  01DF               	clrf	_joystick_pressed
  3430  0F0C  0ADF               	incf	_joystick_pressed,f
  3431  0F0D                     l313:	
  3432  0F0D  0008               	return
  3433  0F0E                     __end_of_joystick_init:	
  3434                           
  3435                           	psect	text15
  3436  0575                     __ptext15:	
  3437 ;; *************** function _gameboard_init *****************
  3438 ;; Defined at:
  3439 ;;		line 170 in file "concentration.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  i               1   58[BANK0 ] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         0       1       0       0       0
  3455 ;;      Temps:          0       1       0       0       0
  3456 ;;      Totals:         0       2       0       0       0
  3457 ;;Total ram usage:        2 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    8
  3460 ;; This function calls:
  3461 ;;		_get_current_char
  3462 ;;		_lcd_clear
  3463 ;;		_lcd_goto
  3464 ;;		_make_custom_chars
  3465 ;;		_randomize_gameboard
  3466 ;;		_time_init
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _gameboard_init
  3474  0575                     _gameboard_init:	
  3475  0575                     l1943:	
  3476                           ;incstack = 0
  3477 ;; hardware stack exceeded
  3478                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3479                           
  3480                           
  3481                           ;concentration.c: 171:     selected_tile = 0xFF;
  3482  0575  30FF               	movlw	255
  3483  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0578  00D9               	movwf	??_gameboard_init
  3486  0579  0859               	movf	??_gameboard_init,w
  3487  057A  00E0               	movwf	_selected_tile
  3488  057B                     l1945:	
  3489                           
  3490                           ;concentration.c: 172:     time_init();
  3491  057B  120A  158A  263F  120A  118A  	fcall	_time_init
  3492  0580                     l1947:	
  3493                           
  3494                           ;concentration.c: 173:     make_custom_chars();
  3495  0580  120A  118A  2416  120A  118A  	fcall	_make_custom_chars
  3496  0585                     l1949:	
  3497                           
  3498                           ;concentration.c: 174:     char i;;concentration.c: 175:     for(i = 0; i < 32; i++) {
  3499  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0587  01DA               	clrf	gameboard_init@i
  3502  0588                     l1955:	
  3503                           
  3504                           ;concentration.c: 176:         visible[i] = 0xFF;
  3505  0588  30FF               	movlw	255
  3506  0589  00D9               	movwf	??_gameboard_init
  3507  058A  085A               	movf	gameboard_init@i,w
  3508  058B  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3509  058C  0084               	movwf	4
  3510  058D  0859               	movf	??_gameboard_init,w
  3511  058E  1383               	bcf	3,7	;select IRP bank1
  3512  058F  0080               	movwf	0
  3513  0590                     l1957:	
  3514                           
  3515                           ;concentration.c: 177:     }
  3516  0590  3001               	movlw	1
  3517  0591  00D9               	movwf	??_gameboard_init
  3518  0592  0859               	movf	??_gameboard_init,w
  3519  0593  07DA               	addwf	gameboard_init@i,f
  3520  0594                     l1959:	
  3521  0594  3020               	movlw	32
  3522  0595  025A               	subwf	gameboard_init@i,w
  3523  0596  1C03               	skipc
  3524  0597  2D99               	goto	u1081
  3525  0598  2D9A               	goto	u1080
  3526  0599                     u1081:	
  3527  0599  2D88               	goto	l1955
  3528  059A                     u1080:	
  3529  059A                     l1961:	
  3530                           
  3531                           ;concentration.c: 178:     lcd_clear(gameboard);
  3532  059A  086A               	movf	_gameboard,w
  3533  059B  00AC               	movwf	lcd_clear@port
  3534  059C  086B               	movf	_gameboard+1,w
  3535  059D  00AD               	movwf	lcd_clear@port+1
  3536  059E  120A  158A  2694  120A  118A  	fcall	_lcd_clear
  3537  05A3                     l1963:	
  3538                           
  3539                           ;concentration.c: 179:     cursor_pos = 0x00;
  3540  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3541  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3542  05A5  01E7               	clrf	_cursor_pos
  3543  05A6                     l1965:	
  3544                           
  3545                           ;concentration.c: 180:     cursor_solid = 0;
  3546  05A6  01E5               	clrf	_cursor_solid
  3547                           
  3548                           ;concentration.c: 181:     get_current_char();
  3549  05A7  120A  158A  2669  120A  118A  	fcall	_get_current_char
  3550  05AC                     l1967:	
  3551                           
  3552                           ;concentration.c: 182:     delay_loops = 0;
  3553  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  3554  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  3555  05AE  01E4               	clrf	_delay_loops
  3556  05AF                     l1969:	
  3557                           
  3558                           ;concentration.c: 183:     cursor_movable = 1;
  3559  05AF  01E3               	clrf	_cursor_movable
  3560  05B0  0AE3               	incf	_cursor_movable,f
  3561  05B1                     l1971:	
  3562                           
  3563                           ;concentration.c: 184:     lcd_goto(cursor_pos, gameboard);
  3564  05B1  086A               	movf	_gameboard,w
  3565  05B2  00AC               	movwf	lcd_goto@port
  3566  05B3  086B               	movf	_gameboard+1,w
  3567  05B4  00AD               	movwf	lcd_goto@port+1
  3568  05B5  0867               	movf	_cursor_pos,w
  3569  05B6  120A  158A  26C9  120A  118A  	fcall	_lcd_goto
  3570  05BB                     l1973:	
  3571                           
  3572                           ;concentration.c: 185:     cursor_move_delay_count = 255;
  3573  05BB  30FF               	movlw	255
  3574  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3575  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3576  05BE  00D9               	movwf	??_gameboard_init
  3577  05BF  0859               	movf	??_gameboard_init,w
  3578  05C0  00FD               	movwf	_cursor_move_delay_count
  3579  05C1                     l1975:	
  3580                           
  3581                           ;concentration.c: 186:     PR2 = 250;
  3582  05C1  30FA               	movlw	250
  3583  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3584  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  3585  05C4  0092               	movwf	18	;volatile
  3586  05C5                     l1977:	
  3587                           
  3588                           ;concentration.c: 187:     TMR2IF = 0;
  3589  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3590  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3591  05C7  108C               	bcf	12,1	;volatile
  3592  05C8                     l1979:	
  3593                           
  3594                           ;concentration.c: 188:     TMR2IE = 1;
  3595  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3596  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  3597  05CA  148C               	bsf	12,1	;volatile
  3598  05CB                     l1981:	
  3599                           
  3600                           ;concentration.c: 189:     T2CON = 0x56;
  3601  05CB  3056               	movlw	86
  3602  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  3603  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  3604  05CE  0092               	movwf	18	;volatile
  3605  05CF                     l1983:	
  3606                           
  3607                           ;concentration.c: 190:     randomize_gameboard();
  3608  05CF  120A  118A  25D5  120A  118A  	fcall	_randomize_gameboard
  3609  05D4                     l229:	
  3610  05D4  0008               	return
  3611  05D5                     __end_of_gameboard_init:	
  3612                           
  3613                           	psect	text16
  3614  0E3F                     __ptext16:	
  3615 ;; *************** function _time_init *****************
  3616 ;; Defined at:
  3617 ;;		line 354 in file "concentration.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		None
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3631 ;;      Params:         0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0
  3634 ;;      Totals:         0       0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    4
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_gameboard_init
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _time_init
  3647  0E3F                     _time_init:	
  3648  0E3F                     l1787:	
  3649                           ;incstack = 0
  3650                           ; Regs used in _time_init: []
  3651                           
  3652                           
  3653                           ;concentration.c: 355:     CCP1M3 = 1;
  3654  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0E41  1597               	bsf	23,3	;volatile
  3657                           
  3658                           ;concentration.c: 356:     CCP1M2 = 0;
  3659  0E42  1117               	bcf	23,2	;volatile
  3660                           
  3661                           ;concentration.c: 357:     CCP1M1 = 1;
  3662  0E43  1497               	bsf	23,1	;volatile
  3663                           
  3664                           ;concentration.c: 358:     CCP1M0 = 0;
  3665  0E44  1017               	bcf	23,0	;volatile
  3666                           
  3667                           ;concentration.c: 359:     TMR1CS = 0;
  3668  0E45  1090               	bcf	16,1	;volatile
  3669                           
  3670                           ;concentration.c: 360:     T1CKPS0 = 0;
  3671  0E46  1210               	bcf	16,4	;volatile
  3672                           
  3673                           ;concentration.c: 361:     T1CKPS1 = 0;
  3674  0E47  1290               	bcf	16,5	;volatile
  3675                           
  3676                           ;concentration.c: 362:     TMR1GE = 0;
  3677  0E48  1310               	bcf	16,6	;volatile
  3678                           
  3679                           ;concentration.c: 363:     TMR1ON = 1;
  3680  0E49  1410               	bsf	16,0	;volatile
  3681  0E4A                     l310:	
  3682  0E4A  0008               	return
  3683  0E4B                     __end_of_time_init:	
  3684                           
  3685                           	psect	text17
  3686  05D5                     __ptext17:	
  3687 ;; *************** function _randomize_gameboard *****************
  3688 ;; Defined at:
  3689 ;;		line 200 in file "concentration.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  used           32   23[BANK0 ] unsigned char [32]
  3694 ;;  random          1   56[BANK0 ] unsigned char 
  3695 ;;  current         1   55[BANK0 ] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3705 ;;      Params:         0       0       0       0       0
  3706 ;;      Locals:         0      34       0       0       0
  3707 ;;      Temps:          0       3       0       0       0
  3708 ;;      Totals:         0      37       0       0       0
  3709 ;;Total ram usage:       37 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    5
  3712 ;; This function calls:
  3713 ;;		_DelayMs
  3714 ;;		___awdiv
  3715 ;; This function is called by:
  3716 ;;		_gameboard_init
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           
  3721                           ;psect for function _randomize_gameboard
  3722  05D5                     _randomize_gameboard:	
  3723  05D5                     l1789:	
  3724                           ;incstack = 0
  3725                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3726                           
  3727                           
  3728                           ;concentration.c: 201:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      +                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  3729  05D5  3037               	movlw	randomize_gameboard@used& (0+255)
  3730  05D6  0084               	movwf	4
  3731  05D7  3020               	movlw	32
  3732  05D8  00FF               	movwf	btemp+1
  3733  05D9                     u980:	
  3734  05D9  1383               	bcf	3,7	;select IRP bank0
  3735  05DA  0180               	clrf	0
  3736  05DB  0A84               	incf	4,f
  3737  05DC  0BFF               	decfsz	btemp+1,f
  3738  05DD  2DD9               	goto	u980
  3739  05DE                     l1791:	
  3740                           
  3741                           ;concentration.c: 202:     char current = 0;
  3742  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3743  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3744  05E0  01D7               	clrf	randomize_gameboard@current
  3745                           
  3746                           ;concentration.c: 203:     char random;;concentration.c: 204:     while(current != 32) {
  3747  05E1  2E2D               	goto	l1805
  3748  05E2                     l1793:	
  3749                           
  3750                           ;concentration.c: 205:         DelayMs(TMR2>>(2+(TMR1%4)));
  3751  05E2  0811               	movf	17,w	;volatile
  3752  05E3  00B4               	movwf	??_randomize_gameboard
  3753  05E4  080E               	movf	14,w	;volatile
  3754  05E5  3903               	andlw	3
  3755  05E6  3E02               	addlw	2
  3756  05E7  3E01               	addlw	1
  3757  05E8  2DEB               	goto	u994
  3758  05E9                     u995:	
  3759  05E9  1003               	clrc
  3760  05EA  0CB4               	rrf	??_randomize_gameboard,f
  3761  05EB                     u994:	
  3762  05EB  3EFF               	addlw	-1
  3763  05EC  1D03               	skipz
  3764  05ED  2DE9               	goto	u995
  3765  05EE  0834               	movf	??_randomize_gameboard,w
  3766  05EF  00B5               	movwf	??_randomize_gameboard+1
  3767  05F0  01B6               	clrf	??_randomize_gameboard+2
  3768  05F1  0835               	movf	??_randomize_gameboard+1,w
  3769  05F2  00A4               	movwf	DelayMs@millis
  3770  05F3  0836               	movf	??_randomize_gameboard+2,w
  3771  05F4  00A5               	movwf	DelayMs@millis+1
  3772  05F5  120A  158A  267B  120A  118A  	fcall	_DelayMs
  3773  05FA                     l1795:	
  3774                           
  3775                           ;concentration.c: 206:         random = TMR1 % 32;
  3776  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3777  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3778  05FC  080E               	movf	14,w	;volatile
  3779  05FD  391F               	andlw	31
  3780  05FE  00B4               	movwf	??_randomize_gameboard
  3781  05FF  0834               	movf	??_randomize_gameboard,w
  3782  0600  00D8               	movwf	randomize_gameboard@random
  3783  0601                     l1797:	
  3784                           
  3785                           ;concentration.c: 207:         if(used[random] == 0) {
  3786  0601  0858               	movf	randomize_gameboard@random,w
  3787  0602  3E37               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3788  0603  0084               	movwf	4
  3789  0604  1383               	bcf	3,7	;select IRP bank0
  3790  0605  0800               	movf	0,w
  3791  0606  1D03               	btfss	3,2
  3792  0607  2E09               	goto	u1001
  3793  0608  2E0A               	goto	u1000
  3794  0609                     u1001:	
  3795  0609  2E2D               	goto	l1805
  3796  060A                     u1000:	
  3797  060A                     l1799:	
  3798                           
  3799                           ;concentration.c: 208:             used[random] = 1;
  3800  060A  0858               	movf	randomize_gameboard@random,w
  3801  060B  3E37               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3802  060C  0084               	movwf	4
  3803  060D  0180               	clrf	0
  3804  060E  0A80               	incf	0,f
  3805  060F                     l1801:	
  3806                           
  3807                           ;concentration.c: 209:             board[random] = current/4;
  3808  060F  3004               	movlw	4
  3809  0610  00AB               	movwf	___awdiv@divisor
  3810  0611  3000               	movlw	0
  3811  0612  00AC               	movwf	___awdiv@divisor+1
  3812  0613  0857               	movf	randomize_gameboard@current,w
  3813  0614  00B4               	movwf	??_randomize_gameboard
  3814  0615  01B5               	clrf	??_randomize_gameboard+1
  3815  0616  0834               	movf	??_randomize_gameboard,w
  3816  0617  00AD               	movwf	___awdiv@dividend
  3817  0618  0835               	movf	??_randomize_gameboard+1,w
  3818  0619  00AE               	movwf	___awdiv@dividend+1
  3819  061A  120A  118A  250C  120A  118A  	fcall	___awdiv
  3820  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0621  082B               	movf	?___awdiv,w
  3823  0622  00B6               	movwf	??_randomize_gameboard+2
  3824  0623  0858               	movf	randomize_gameboard@random,w
  3825  0624  3EC0               	addlw	(low (_board| 0))& (0+255)
  3826  0625  0084               	movwf	4
  3827  0626  0836               	movf	??_randomize_gameboard+2,w
  3828  0627  1383               	bcf	3,7	;select IRP bank1
  3829  0628  0080               	movwf	0
  3830  0629                     l1803:	
  3831                           
  3832                           ;concentration.c: 210:             current++;
  3833  0629  3001               	movlw	1
  3834  062A  00B4               	movwf	??_randomize_gameboard
  3835  062B  0834               	movf	??_randomize_gameboard,w
  3836  062C  07D7               	addwf	randomize_gameboard@current,f
  3837  062D                     l1805:	
  3838                           
  3839                           ;concentration.c: 204:     while(current != 32) {
  3840  062D  3020               	movlw	32
  3841  062E  0657               	xorwf	randomize_gameboard@current,w
  3842  062F  1D03               	btfss	3,2
  3843  0630  2E32               	goto	u1011
  3844  0631  2E33               	goto	u1010
  3845  0632                     u1011:	
  3846  0632  2DE2               	goto	l1793
  3847  0633                     u1010:	
  3848  0633                     l242:	
  3849  0633  0008               	return
  3850  0634                     __end_of_randomize_gameboard:	
  3851                           
  3852                           	psect	text18
  3853  050C                     __ptext18:	
  3854 ;; *************** function ___awdiv *****************
  3855 ;; Defined at:
  3856 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  divisor         2   11[BANK0 ] int 
  3859 ;;  dividend        2   13[BANK0 ] int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  quotient        2   18[BANK0 ] int 
  3862 ;;  sign            1   17[BANK0 ] unsigned char 
  3863 ;;  counter         1   16[BANK0 ] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  2   11[BANK0 ] int 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3873 ;;      Params:         0       4       0       0       0
  3874 ;;      Locals:         0       4       0       0       0
  3875 ;;      Temps:          0       1       0       0       0
  3876 ;;      Totals:         0       9       0       0       0
  3877 ;;Total ram usage:        9 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    4
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_display_scoreboard
  3884 ;;		_randomize_gameboard
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function ___awdiv
  3890  050C                     ___awdiv:	
  3891  050C                     l1655:	
  3892                           ;incstack = 0
  3893                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3894                           
  3895  050C  1283               	bcf	3,5	;RP0=0, select bank0
  3896  050D  1303               	bcf	3,6	;RP1=0, select bank0
  3897  050E  01B1               	clrf	___awdiv@sign
  3898  050F                     l1657:	
  3899  050F  1FAC               	btfss	___awdiv@divisor+1,7
  3900  0510  2D12               	goto	u741
  3901  0511  2D13               	goto	u740
  3902  0512                     u741:	
  3903  0512  2D1A               	goto	l1663
  3904  0513                     u740:	
  3905  0513                     l1659:	
  3906  0513  09AB               	comf	___awdiv@divisor,f
  3907  0514  09AC               	comf	___awdiv@divisor+1,f
  3908  0515  0AAB               	incf	___awdiv@divisor,f
  3909  0516  1903               	skipnz
  3910  0517  0AAC               	incf	___awdiv@divisor+1,f
  3911  0518                     l1661:	
  3912  0518  01B1               	clrf	___awdiv@sign
  3913  0519  0AB1               	incf	___awdiv@sign,f
  3914  051A                     l1663:	
  3915  051A  1FAE               	btfss	___awdiv@dividend+1,7
  3916  051B  2D1D               	goto	u751
  3917  051C  2D1E               	goto	u750
  3918  051D                     u751:	
  3919  051D  2D27               	goto	l1669
  3920  051E                     u750:	
  3921  051E                     l1665:	
  3922  051E  09AD               	comf	___awdiv@dividend,f
  3923  051F  09AE               	comf	___awdiv@dividend+1,f
  3924  0520  0AAD               	incf	___awdiv@dividend,f
  3925  0521  1903               	skipnz
  3926  0522  0AAE               	incf	___awdiv@dividend+1,f
  3927  0523                     l1667:	
  3928  0523  3001               	movlw	1
  3929  0524  00AF               	movwf	??___awdiv
  3930  0525  082F               	movf	??___awdiv,w
  3931  0526  06B1               	xorwf	___awdiv@sign,f
  3932  0527                     l1669:	
  3933  0527  01B2               	clrf	___awdiv@quotient
  3934  0528  01B3               	clrf	___awdiv@quotient+1
  3935  0529                     l1671:	
  3936  0529  082B               	movf	___awdiv@divisor,w
  3937  052A  042C               	iorwf	___awdiv@divisor+1,w
  3938  052B  1903               	btfsc	3,2
  3939  052C  2D2E               	goto	u761
  3940  052D  2D2F               	goto	u760
  3941  052E                     u761:	
  3942  052E  2D66               	goto	l1691
  3943  052F                     u760:	
  3944  052F                     l1673:	
  3945  052F  01B0               	clrf	___awdiv@counter
  3946  0530  0AB0               	incf	___awdiv@counter,f
  3947  0531  2D3D               	goto	l1679
  3948  0532                     l1675:	
  3949  0532  3001               	movlw	1
  3950  0533                     u775:	
  3951  0533  1003               	clrc
  3952  0534  0DAB               	rlf	___awdiv@divisor,f
  3953  0535  0DAC               	rlf	___awdiv@divisor+1,f
  3954  0536  3EFF               	addlw	-1
  3955  0537  1D03               	skipz
  3956  0538  2D33               	goto	u775
  3957  0539                     l1677:	
  3958  0539  3001               	movlw	1
  3959  053A  00AF               	movwf	??___awdiv
  3960  053B  082F               	movf	??___awdiv,w
  3961  053C  07B0               	addwf	___awdiv@counter,f
  3962  053D                     l1679:	
  3963  053D  1FAC               	btfss	___awdiv@divisor+1,7
  3964  053E  2D40               	goto	u781
  3965  053F  2D41               	goto	u780
  3966  0540                     u781:	
  3967  0540  2D32               	goto	l1675
  3968  0541                     u780:	
  3969  0541                     l1681:	
  3970  0541  3001               	movlw	1
  3971  0542                     u795:	
  3972  0542  1003               	clrc
  3973  0543  0DB2               	rlf	___awdiv@quotient,f
  3974  0544  0DB3               	rlf	___awdiv@quotient+1,f
  3975  0545  3EFF               	addlw	-1
  3976  0546  1D03               	skipz
  3977  0547  2D42               	goto	u795
  3978  0548  082C               	movf	___awdiv@divisor+1,w
  3979  0549  022E               	subwf	___awdiv@dividend+1,w
  3980  054A  1D03               	skipz
  3981  054B  2D4E               	goto	u805
  3982  054C  082B               	movf	___awdiv@divisor,w
  3983  054D  022D               	subwf	___awdiv@dividend,w
  3984  054E                     u805:	
  3985  054E  1C03               	skipc
  3986  054F  2D51               	goto	u801
  3987  0550  2D52               	goto	u800
  3988  0551                     u801:	
  3989  0551  2D59               	goto	l1687
  3990  0552                     u800:	
  3991  0552                     l1683:	
  3992  0552  082B               	movf	___awdiv@divisor,w
  3993  0553  02AD               	subwf	___awdiv@dividend,f
  3994  0554  082C               	movf	___awdiv@divisor+1,w
  3995  0555  1C03               	skipc
  3996  0556  03AE               	decf	___awdiv@dividend+1,f
  3997  0557  02AE               	subwf	___awdiv@dividend+1,f
  3998  0558                     l1685:	
  3999  0558  1432               	bsf	___awdiv@quotient,0
  4000  0559                     l1687:	
  4001  0559  3001               	movlw	1
  4002  055A                     u815:	
  4003  055A  1003               	clrc
  4004  055B  0CAC               	rrf	___awdiv@divisor+1,f
  4005  055C  0CAB               	rrf	___awdiv@divisor,f
  4006  055D  3EFF               	addlw	-1
  4007  055E  1D03               	skipz
  4008  055F  2D5A               	goto	u815
  4009  0560                     l1689:	
  4010  0560  3001               	movlw	1
  4011  0561  02B0               	subwf	___awdiv@counter,f
  4012  0562  1D03               	btfss	3,2
  4013  0563  2D65               	goto	u821
  4014  0564  2D66               	goto	u820
  4015  0565                     u821:	
  4016  0565  2D41               	goto	l1681
  4017  0566                     u820:	
  4018  0566                     l1691:	
  4019  0566  0831               	movf	___awdiv@sign,w
  4020  0567  1903               	btfsc	3,2
  4021  0568  2D6A               	goto	u831
  4022  0569  2D6B               	goto	u830
  4023  056A                     u831:	
  4024  056A  2D70               	goto	l1695
  4025  056B                     u830:	
  4026  056B                     l1693:	
  4027  056B  09B2               	comf	___awdiv@quotient,f
  4028  056C  09B3               	comf	___awdiv@quotient+1,f
  4029  056D  0AB2               	incf	___awdiv@quotient,f
  4030  056E  1903               	skipnz
  4031  056F  0AB3               	incf	___awdiv@quotient+1,f
  4032  0570                     l1695:	
  4033  0570  0833               	movf	___awdiv@quotient+1,w
  4034  0571  00AC               	movwf	?___awdiv+1
  4035  0572  0832               	movf	___awdiv@quotient,w
  4036  0573  00AB               	movwf	?___awdiv
  4037  0574                     l612:	
  4038  0574  0008               	return
  4039  0575                     __end_of___awdiv:	
  4040                           
  4041                           	psect	text19
  4042  0416                     __ptext19:	
  4043 ;; *************** function _make_custom_chars *****************
  4044 ;; Defined at:
  4045 ;;		line 151 in file "concentration.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4059 ;;      Params:         0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0
  4061 ;;      Temps:          0       1       0       0       0
  4062 ;;      Totals:         0       1       0       0       0
  4063 ;;Total ram usage:        1 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    7
  4066 ;; This function calls:
  4067 ;;		_lcd_set_custom_char
  4068 ;; This function is called by:
  4069 ;;		_gameboard_init
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function _make_custom_chars
  4075  0416                     _make_custom_chars:	
  4076  0416                     l1785:	
  4077                           ;incstack = 0
  4078 ;; hardware stack exceeded
  4079                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4080                           
  4081                           
  4082                           ;concentration.c: 152:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0
      +                          E, 0x00};;concentration.c: 153:     lcd_set_custom_char(smile, 0x00, gameboard);
  4083  0416  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0417  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0418  01AC               	clrf	lcd_set_custom_char@cg_address
  4086  0419  086A               	movf	_gameboard,w
  4087  041A  00AD               	movwf	lcd_set_custom_char@port
  4088  041B  086B               	movf	_gameboard+1,w
  4089  041C  00AE               	movwf	lcd_set_custom_char@port+1
  4090  041D  3039               	movlw	(low ((make_custom_chars@smile-__stringbase)| (0+32768)))& (0+255)
  4091  041E  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4092                           
  4093                           ;concentration.c: 154:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0
      +                          x00, 0x00};;concentration.c: 155:     lcd_set_custom_char(diamond, 0x01, gameboard);
  4094  0423  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0424  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0425  01AC               	clrf	lcd_set_custom_char@cg_address
  4097  0426  0AAC               	incf	lcd_set_custom_char@cg_address,f
  4098  0427  086A               	movf	_gameboard,w
  4099  0428  00AD               	movwf	lcd_set_custom_char@port
  4100  0429  086B               	movf	_gameboard+1,w
  4101  042A  00AE               	movwf	lcd_set_custom_char@port+1
  4102  042B  3031               	movlw	(low ((make_custom_chars@diamond-__stringbase)| (0+32768)))& (0+255)
  4103  042C  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4104                           
  4105                           ;concentration.c: 156:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x00};;concentration.c: 157:     lcd_set_custom_char(heart, 0x02, gameboard);
  4106  0431  3002               	movlw	2
  4107  0432  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0433  1303               	bcf	3,6	;RP1=0, select bank0
  4109  0434  00B3               	movwf	??_make_custom_chars
  4110  0435  0833               	movf	??_make_custom_chars,w
  4111  0436  00AC               	movwf	lcd_set_custom_char@cg_address
  4112  0437  086A               	movf	_gameboard,w
  4113  0438  00AD               	movwf	lcd_set_custom_char@port
  4114  0439  086B               	movf	_gameboard+1,w
  4115  043A  00AE               	movwf	lcd_set_custom_char@port+1
  4116  043B  3029               	movlw	(low ((make_custom_chars@heart-__stringbase)| (0+32768)))& (0+255)
  4117  043C  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4118                           
  4119                           ;concentration.c: 158:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x0E};;concentration.c: 159:     lcd_set_custom_char(spade, 0x03, gameboard);
  4120  0441  3003               	movlw	3
  4121  0442  1283               	bcf	3,5	;RP0=0, select bank0
  4122  0443  1303               	bcf	3,6	;RP1=0, select bank0
  4123  0444  00B3               	movwf	??_make_custom_chars
  4124  0445  0833               	movf	??_make_custom_chars,w
  4125  0446  00AC               	movwf	lcd_set_custom_char@cg_address
  4126  0447  086A               	movf	_gameboard,w
  4127  0448  00AD               	movwf	lcd_set_custom_char@port
  4128  0449  086B               	movf	_gameboard+1,w
  4129  044A  00AE               	movwf	lcd_set_custom_char@port+1
  4130  044B  3021               	movlw	(low ((make_custom_chars@spade-__stringbase)| (0+32768)))& (0+255)
  4131  044C  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4132                           
  4133                           ;concentration.c: 160:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04
      +                          , 0x0E};;concentration.c: 161:     lcd_set_custom_char(club, 0x04, gameboard);
  4134  0451  3004               	movlw	4
  4135  0452  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0453  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0454  00B3               	movwf	??_make_custom_chars
  4138  0455  0833               	movf	??_make_custom_chars,w
  4139  0456  00AC               	movwf	lcd_set_custom_char@cg_address
  4140  0457  086A               	movf	_gameboard,w
  4141  0458  00AD               	movwf	lcd_set_custom_char@port
  4142  0459  086B               	movf	_gameboard+1,w
  4143  045A  00AE               	movwf	lcd_set_custom_char@port+1
  4144  045B  3019               	movlw	(low ((make_custom_chars@club-__stringbase)| (0+32768)))& (0+255)
  4145  045C  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4146                           
  4147                           ;concentration.c: 162:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0
      +                          E, 0x00};;concentration.c: 163:     lcd_set_custom_char(skull, 0x05, gameboard);
  4148  0461  3005               	movlw	5
  4149  0462  1283               	bcf	3,5	;RP0=0, select bank0
  4150  0463  1303               	bcf	3,6	;RP1=0, select bank0
  4151  0464  00B3               	movwf	??_make_custom_chars
  4152  0465  0833               	movf	??_make_custom_chars,w
  4153  0466  00AC               	movwf	lcd_set_custom_char@cg_address
  4154  0467  086A               	movf	_gameboard,w
  4155  0468  00AD               	movwf	lcd_set_custom_char@port
  4156  0469  086B               	movf	_gameboard+1,w
  4157  046A  00AE               	movwf	lcd_set_custom_char@port+1
  4158  046B  3011               	movlw	(low ((make_custom_chars@skull-__stringbase)| (0+32768)))& (0+255)
  4159  046C  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4160                           
  4161                           ;concentration.c: 164:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 
      +                          0x05};;concentration.c: 165:     lcd_set_custom_char(RH, 0x06, gameboard);
  4162  0471  3006               	movlw	6
  4163  0472  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0473  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0474  00B3               	movwf	??_make_custom_chars
  4166  0475  0833               	movf	??_make_custom_chars,w
  4167  0476  00AC               	movwf	lcd_set_custom_char@cg_address
  4168  0477  086A               	movf	_gameboard,w
  4169  0478  00AD               	movwf	lcd_set_custom_char@port
  4170  0479  086B               	movf	_gameboard+1,w
  4171  047A  00AE               	movwf	lcd_set_custom_char@port+1
  4172  047B  3009               	movlw	(low ((make_custom_chars@RH-__stringbase)| (0+32768)))& (0+255)
  4173  047C  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4174                           
  4175                           ;concentration.c: 166:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02,
      +                           0x03};;concentration.c: 167:     lcd_set_custom_char(PIC, 0x07, gameboard);
  4176  0481  3007               	movlw	7
  4177  0482  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0483  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0484  00B3               	movwf	??_make_custom_chars
  4180  0485  0833               	movf	??_make_custom_chars,w
  4181  0486  00AC               	movwf	lcd_set_custom_char@cg_address
  4182  0487  086A               	movf	_gameboard,w
  4183  0488  00AD               	movwf	lcd_set_custom_char@port
  4184  0489  086B               	movf	_gameboard+1,w
  4185  048A  00AE               	movwf	lcd_set_custom_char@port+1
  4186  048B  3001               	movlw	(low ((make_custom_chars@PIC-__stringbase)| (0+32768)))& (0+255)
  4187  048C  120A  118A  26E1  120A  118A  	fcall	_lcd_set_custom_char
  4188  0491                     l224:	
  4189  0491  0008               	return
  4190  0492                     __end_of_make_custom_chars:	
  4191                           
  4192                           	psect	text20
  4193  06E1                     __ptext20:	
  4194 ;; *************** function _lcd_set_custom_char *****************
  4195 ;; Defined at:
  4196 ;;		line 166 in file "lcd4bits.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  data            1    wreg     PTR const unsigned char 
  4199 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4200 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4201 ;;  cg_address      1   12[BANK0 ] unsigned char 
  4202 ;;  port            2   13[BANK0 ] PTR unsigned char 
  4203 ;;		 -> PORTA(1), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  data            1   18[BANK0 ] PTR const unsigned char 
  4206 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4207 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4208 ;;  row             1   17[BANK0 ] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4218 ;;      Params:         0       3       0       0       0
  4219 ;;      Locals:         0       2       0       0       0
  4220 ;;      Temps:          0       2       0       0       0
  4221 ;;      Totals:         0       7       0       0       0
  4222 ;;Total ram usage:        7 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    6
  4225 ;; This function calls:
  4226 ;;		_lcd_write
  4227 ;; This function is called by:
  4228 ;;		_make_custom_chars
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function _lcd_set_custom_char
  4234  06E1                     _lcd_set_custom_char:	
  4235                           
  4236                           ;incstack = 0
  4237 ;; hardware stack exceeded
  4238                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4239                           ;lcd_set_custom_char@data stored from wreg
  4240  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  4241  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  4242  06E3  00B2               	movwf	lcd_set_custom_char@data
  4243  06E4                     l1757:	
  4244                           
  4245                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  4246  06E4  01B1               	clrf	lcd_set_custom_char@row
  4247  06E5                     l1763:	
  4248                           
  4249                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  4250  06E5  082C               	movf	lcd_set_custom_char@cg_address,w
  4251  06E6  00AF               	movwf	??_lcd_set_custom_char
  4252  06E7  3002               	movlw	2
  4253  06E8                     u955:	
  4254  06E8  1003               	clrc
  4255  06E9  0DAF               	rlf	??_lcd_set_custom_char,f
  4256  06EA  3EFF               	addlw	-1
  4257  06EB  1D03               	skipz
  4258  06EC  2EE8               	goto	u955
  4259  06ED  1003               	clrc
  4260  06EE  0D2F               	rlf	??_lcd_set_custom_char,w
  4261  06EF  0431               	iorwf	lcd_set_custom_char@row,w
  4262  06F0  3840               	iorlw	64
  4263  06F1  00B0               	movwf	??_lcd_set_custom_char+1
  4264  06F2  0830               	movf	??_lcd_set_custom_char+1,w
  4265  06F3  00A6               	movwf	lcd_write@CmdChar
  4266  06F4  082D               	movf	lcd_set_custom_char@port,w
  4267  06F5  00A7               	movwf	lcd_write@port
  4268  06F6  082E               	movf	lcd_set_custom_char@port+1,w
  4269  06F7  00A8               	movwf	lcd_write@port+1
  4270  06F8  3000               	movlw	0
  4271  06F9  120A  118A  2733  120A  118A  	fcall	_lcd_write
  4272                           
  4273                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  4274  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  4275  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  4276  0700  0832               	movf	lcd_set_custom_char@data,w
  4277  0701  0084               	movwf	4
  4278  0702  120A  118A  2300  120A  118A  	fcall	stringdir
  4279  0707  00AF               	movwf	??_lcd_set_custom_char
  4280  0708  082F               	movf	??_lcd_set_custom_char,w
  4281  0709  00A6               	movwf	lcd_write@CmdChar
  4282  070A  082D               	movf	lcd_set_custom_char@port,w
  4283  070B  00A7               	movwf	lcd_write@port
  4284  070C  082E               	movf	lcd_set_custom_char@port+1,w
  4285  070D  00A8               	movwf	lcd_write@port+1
  4286  070E  3010               	movlw	16
  4287  070F  120A  118A  2733  120A  118A  	fcall	_lcd_write
  4288  0714                     l1765:	
  4289                           
  4290                           ;lcd4bits.c: 171:         *data++;
  4291  0714  3001               	movlw	1
  4292  0715  1283               	bcf	3,5	;RP0=0, select bank0
  4293  0716  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0717  00AF               	movwf	??_lcd_set_custom_char
  4295  0718  082F               	movf	??_lcd_set_custom_char,w
  4296  0719  07B2               	addwf	lcd_set_custom_char@data,f
  4297  071A                     l1767:	
  4298                           
  4299                           ;lcd4bits.c: 172:     }
  4300  071A  3001               	movlw	1
  4301  071B  00AF               	movwf	??_lcd_set_custom_char
  4302  071C  082F               	movf	??_lcd_set_custom_char,w
  4303  071D  07B1               	addwf	lcd_set_custom_char@row,f
  4304  071E                     l1769:	
  4305  071E  3008               	movlw	8
  4306  071F  0231               	subwf	lcd_set_custom_char@row,w
  4307  0720  1C03               	skipc
  4308  0721  2F23               	goto	u961
  4309  0722  2F24               	goto	u960
  4310  0723                     u961:	
  4311  0723  2EE5               	goto	l1763
  4312  0724                     u960:	
  4313  0724                     l1771:	
  4314                           
  4315                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  4316  0724  3080               	movlw	128
  4317  0725  00AF               	movwf	??_lcd_set_custom_char
  4318  0726  082F               	movf	??_lcd_set_custom_char,w
  4319  0727  00A6               	movwf	lcd_write@CmdChar
  4320  0728  082D               	movf	lcd_set_custom_char@port,w
  4321  0729  00A7               	movwf	lcd_write@port
  4322  072A  082E               	movf	lcd_set_custom_char@port+1,w
  4323  072B  00A8               	movwf	lcd_write@port+1
  4324  072C  3000               	movlw	0
  4325  072D  120A  118A  2733  120A  118A  	fcall	_lcd_write
  4326  0732                     l373:	
  4327  0732  0008               	return
  4328  0733                     __end_of_lcd_set_custom_char:	
  4329                           
  4330                           	psect	text21
  4331  0EC9                     __ptext21:	
  4332 ;; *************** function _lcd_goto *****************
  4333 ;; Defined at:
  4334 ;;		line 146 in file "lcd4bits.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  position        1    wreg     unsigned char 
  4337 ;;  port            2   12[BANK0 ] PTR unsigned char 
  4338 ;;		 -> PORTD(1), PORTA(1), 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  position        1   15[BANK0 ] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4350 ;;      Params:         0       2       0       0       0
  4351 ;;      Locals:         0       1       0       0       0
  4352 ;;      Temps:          0       1       0       0       0
  4353 ;;      Totals:         0       4       0       0       0
  4354 ;;Total ram usage:        4 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    6
  4357 ;; This function calls:
  4358 ;;		_DelayMs
  4359 ;;		_lcd_write
  4360 ;; This function is called by:
  4361 ;;		_startup
  4362 ;;		_display_scoreboard
  4363 ;;		_display_gameboard
  4364 ;;		_gameboard_init
  4365 ;;		_update_cursor
  4366 ;;		_toggle_cursor
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _lcd_goto
  4372  0EC9                     _lcd_goto:	
  4373                           
  4374                           ;incstack = 0
  4375 ;; hardware stack exceeded
  4376                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4377                           ;lcd_goto@position stored from wreg
  4378  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0ECB  00AF               	movwf	lcd_goto@position
  4381  0ECC                     l1639:	
  4382                           
  4383                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  4384  0ECC  082F               	movf	lcd_goto@position,w
  4385  0ECD  3E80               	addlw	128
  4386  0ECE  00AE               	movwf	??_lcd_goto
  4387  0ECF  082E               	movf	??_lcd_goto,w
  4388  0ED0  00A6               	movwf	lcd_write@CmdChar
  4389  0ED1  082C               	movf	lcd_goto@port,w
  4390  0ED2  00A7               	movwf	lcd_write@port
  4391  0ED3  082D               	movf	lcd_goto@port+1,w
  4392  0ED4  00A8               	movwf	lcd_write@port+1
  4393  0ED5  3000               	movlw	0
  4394  0ED6  120A  118A  2733  120A  158A  	fcall	_lcd_write
  4395  0EDB                     l1641:	
  4396                           
  4397                           ;lcd4bits.c: 149:     DelayMs(2);
  4398  0EDB  3002               	movlw	2
  4399  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0EDE  00A4               	movwf	DelayMs@millis
  4402  0EDF  3000               	movlw	0
  4403  0EE0  00A5               	movwf	DelayMs@millis+1
  4404  0EE1  120A  158A  267B  120A  158A  	fcall	_DelayMs
  4405  0EE6                     l365:	
  4406  0EE6  0008               	return
  4407  0EE7                     __end_of_lcd_goto:	
  4408                           
  4409                           	psect	text22
  4410  0E94                     __ptext22:	
  4411 ;; *************** function _lcd_clear *****************
  4412 ;; Defined at:
  4413 ;;		line 123 in file "lcd4bits.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  port            2   12[BANK0 ] PTR unsigned char 
  4416 ;;		 -> PORTD(1), PORTA(1), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       2       0       0       0
  4429 ;;      Locals:         0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0
  4431 ;;      Totals:         0       2       0       0       0
  4432 ;;Total ram usage:        2 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    6
  4435 ;; This function calls:
  4436 ;;		_DelayMs
  4437 ;;		_lcd_write
  4438 ;; This function is called by:
  4439 ;;		_startup
  4440 ;;		_display_gameboard
  4441 ;;		_gameboard_init
  4442 ;;		_lcd_init
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _lcd_clear
  4448  0E94                     _lcd_clear:	
  4449  0E94                     l1627:	
  4450                           ;incstack = 0
  4451 ;; hardware stack exceeded
  4452                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4453                           
  4454                           
  4455                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  4456  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0E96  01A6               	clrf	lcd_write@CmdChar
  4459  0E97  0AA6               	incf	lcd_write@CmdChar,f
  4460  0E98  082C               	movf	lcd_clear@port,w
  4461  0E99  00A7               	movwf	lcd_write@port
  4462  0E9A  082D               	movf	lcd_clear@port+1,w
  4463  0E9B  00A8               	movwf	lcd_write@port+1
  4464  0E9C  3000               	movlw	0
  4465  0E9D  120A  118A  2733  120A  158A  	fcall	_lcd_write
  4466  0EA2                     l1629:	
  4467                           
  4468                           ;lcd4bits.c: 125:     DelayMs(2);
  4469  0EA2  3002               	movlw	2
  4470  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0EA5  00A4               	movwf	DelayMs@millis
  4473  0EA6  3000               	movlw	0
  4474  0EA7  00A5               	movwf	DelayMs@millis+1
  4475  0EA8  120A  158A  267B  120A  158A  	fcall	_DelayMs
  4476  0EAD                     l353:	
  4477  0EAD  0008               	return
  4478  0EAE                     __end_of_lcd_clear:	
  4479                           
  4480                           	psect	text23
  4481  0733                     __ptext23:	
  4482 ;; *************** function _lcd_write *****************
  4483 ;; Defined at:
  4484 ;;		line 110 in file "lcd4bits.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  mode            1    wreg     unsigned char 
  4487 ;;  CmdChar         1    6[BANK0 ] unsigned char 
  4488 ;;  port            2    7[BANK0 ] PTR unsigned char 
  4489 ;;		 -> PORTD(1), PORTA(1), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  mode            1   11[BANK0 ] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       3       0       0       0
  4502 ;;      Locals:         0       1       0       0       0
  4503 ;;      Temps:          0       2       0       0       0
  4504 ;;      Totals:         0       6       0       0       0
  4505 ;;Total ram usage:        6 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    5
  4508 ;; This function calls:
  4509 ;;		_Delay20us
  4510 ;; This function is called by:
  4511 ;;		_lcd_clear
  4512 ;;		_lcd_puts
  4513 ;;		_lcd_putch
  4514 ;;		_lcd_goto
  4515 ;;		_lcd_init
  4516 ;;		_lcd_set_custom_char
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _lcd_write
  4522  0733                     _lcd_write:	
  4523                           
  4524                           ;incstack = 0
  4525 ;; hardware stack exceeded
  4526                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4527                           ;lcd_write@mode stored from wreg
  4528  0733  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0734  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0735  00AB               	movwf	lcd_write@mode
  4531  0736                     l1617:	
  4532                           
  4533                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  4534  0736  0826               	movf	lcd_write@CmdChar,w
  4535  0737  00A9               	movwf	??_lcd_write
  4536  0738  3004               	movlw	4
  4537  0739                     u715:	
  4538  0739  1003               	clrc
  4539  073A  0CA9               	rrf	??_lcd_write,f
  4540  073B  3EFF               	addlw	-1
  4541  073C  1D03               	skipz
  4542  073D  2F39               	goto	u715
  4543  073E  0829               	movf	??_lcd_write,w
  4544  073F  3E20               	addlw	32
  4545  0740  042B               	iorwf	lcd_write@mode,w
  4546  0741  00AA               	movwf	??_lcd_write+1
  4547  0742  0827               	movf	lcd_write@port,w
  4548  0743  0084               	movwf	4
  4549  0744  1783               	bsf	3,7
  4550  0745  1C28               	btfss	lcd_write@port+1,0
  4551  0746  1383               	bcf	3,7
  4552  0747  082A               	movf	??_lcd_write+1,w
  4553  0748  0080               	movwf	0
  4554  0749                     l1619:	
  4555                           
  4556                           ;lcd4bits.c: 112:     Delay20us();
  4557  0749  120A  158A  264B  120A  118A  	fcall	_Delay20us
  4558  074E                     l1621:	
  4559                           
  4560                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  4561  074E  1283               	bcf	3,5	;RP0=0, select bank0
  4562  074F  1303               	bcf	3,6	;RP1=0, select bank0
  4563  0750  0827               	movf	lcd_write@port,w
  4564  0751  0084               	movwf	4
  4565  0752  1783               	bsf	3,7
  4566  0753  1C28               	btfss	lcd_write@port+1,0
  4567  0754  1383               	bcf	3,7
  4568  0755  0800               	movf	0,w
  4569  0756  39DF               	andlw	223
  4570  0757  00A9               	movwf	??_lcd_write
  4571  0758  0827               	movf	lcd_write@port,w
  4572  0759  0084               	movwf	4
  4573  075A  1783               	bsf	3,7
  4574  075B  1C28               	btfss	lcd_write@port+1,0
  4575  075C  1383               	bcf	3,7
  4576  075D  0829               	movf	??_lcd_write,w
  4577  075E  0080               	movwf	0
  4578  075F                     l1623:	
  4579                           
  4580                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  4581  075F  0826               	movf	lcd_write@CmdChar,w
  4582  0760  390F               	andlw	15
  4583  0761  3E20               	addlw	32
  4584  0762  042B               	iorwf	lcd_write@mode,w
  4585  0763  00A9               	movwf	??_lcd_write
  4586  0764  0827               	movf	lcd_write@port,w
  4587  0765  0084               	movwf	4
  4588  0766  1783               	bsf	3,7
  4589  0767  1C28               	btfss	lcd_write@port+1,0
  4590  0768  1383               	bcf	3,7
  4591  0769  0829               	movf	??_lcd_write,w
  4592  076A  0080               	movwf	0
  4593  076B                     l1625:	
  4594                           
  4595                           ;lcd4bits.c: 116:     Delay20us();
  4596  076B  120A  158A  264B  120A  118A  	fcall	_Delay20us
  4597                           
  4598                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  4599  0770  1283               	bcf	3,5	;RP0=0, select bank0
  4600  0771  1303               	bcf	3,6	;RP1=0, select bank0
  4601  0772  0827               	movf	lcd_write@port,w
  4602  0773  0084               	movwf	4
  4603  0774  1783               	bsf	3,7
  4604  0775  1C28               	btfss	lcd_write@port+1,0
  4605  0776  1383               	bcf	3,7
  4606  0777  0800               	movf	0,w
  4607  0778  39DF               	andlw	223
  4608  0779  00A9               	movwf	??_lcd_write
  4609  077A  0827               	movf	lcd_write@port,w
  4610  077B  0084               	movwf	4
  4611  077C  1783               	bsf	3,7
  4612  077D  1C28               	btfss	lcd_write@port+1,0
  4613  077E  1383               	bcf	3,7
  4614  077F  0829               	movf	??_lcd_write,w
  4615  0780  0080               	movwf	0
  4616  0781                     l350:	
  4617  0781  0008               	return
  4618  0782                     __end_of_lcd_write:	
  4619                           
  4620                           	psect	text24
  4621  0E4B                     __ptext24:	
  4622 ;; *************** function _Delay20us *****************
  4623 ;; Defined at:
  4624 ;;		line 99 in file "lcd4bits.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  next            1    5[BANK0 ] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4638 ;;      Params:         0       0       0       0       0
  4639 ;;      Locals:         0       1       0       0       0
  4640 ;;      Temps:          0       1       0       0       0
  4641 ;;      Totals:         0       2       0       0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    4
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_lcd_write
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _Delay20us
  4654  0E4B                     _Delay20us:	
  4655  0E4B                     l1597:	
  4656                           ;incstack = 0
  4657 ;; hardware stack exceeded
  4658                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  4659                           
  4660                           
  4661                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  4662  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  4663  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  4664  0E4D  01A5               	clrf	Delay20us@next
  4665  0E4E                     l1603:	
  4666  0E4E  3001               	movlw	1
  4667  0E4F  00A4               	movwf	??_Delay20us
  4668  0E50  0824               	movf	??_Delay20us,w
  4669  0E51  07A5               	addwf	Delay20us@next,f
  4670  0E52                     l1605:	
  4671  0E52  3008               	movlw	8
  4672  0E53  0225               	subwf	Delay20us@next,w
  4673  0E54  1C03               	skipc
  4674  0E55  2E57               	goto	u681
  4675  0E56  2E58               	goto	u680
  4676  0E57                     u681:	
  4677  0E57  2E4E               	goto	l1603
  4678  0E58                     u680:	
  4679  0E58                     l347:	
  4680  0E58  0008               	return
  4681  0E59                     __end_of_Delay20us:	
  4682                           
  4683                           	psect	text25
  4684  0E7B                     __ptext25:	
  4685 ;; *************** function _DelayMs *****************
  4686 ;; Defined at:
  4687 ;;		line 86 in file "lcd4bits.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  millis          2    4[BANK0 ] unsigned int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         0       2       0       0       0
  4702 ;;      Locals:         0       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0
  4704 ;;      Totals:         0       2       0       0       0
  4705 ;;Total ram usage:        2 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    4
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_startup
  4712 ;;		_randomize_gameboard
  4713 ;;		_check_for_match
  4714 ;;		_update_gameboard_from_input
  4715 ;;		_lcd_clear
  4716 ;;		_lcd_goto
  4717 ;;		_lcd_init
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function _DelayMs
  4723  0E7B                     _DelayMs:	
  4724  0E7B                     l1607:	
  4725                           ;incstack = 0
  4726                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  4727                           
  4728                           
  4729                           ;lcd4bits.c: 87:     while (millis != 0) {
  4730  0E7B  2E8B               	goto	l1615
  4731  0E7C                     l1609:	
  4732                           
  4733                           ;lcd4bits.c: 88:         TMR0 = 100;
  4734  0E7C  3064               	movlw	100
  4735  0E7D  0081               	movwf	1	;volatile
  4736  0E7E                     l1611:	
  4737                           
  4738                           ;lcd4bits.c: 89:         T0IF = 0;
  4739  0E7E  110B               	bcf	11,2	;volatile
  4740  0E7F                     l338:	
  4741                           ;lcd4bits.c: 90:         while(T0IF == 0);
  4742                           
  4743  0E7F  1D0B               	btfss	11,2	;volatile
  4744  0E80  2E82               	goto	u691
  4745  0E81  2E83               	goto	u690
  4746  0E82                     u691:	
  4747  0E82  2E7F               	goto	l338
  4748  0E83                     u690:	
  4749  0E83                     l1613:	
  4750                           
  4751                           ;lcd4bits.c: 91:         millis--;
  4752  0E83  3001               	movlw	1
  4753  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0E86  02A4               	subwf	DelayMs@millis,f
  4756  0E87  3000               	movlw	0
  4757  0E88  1C03               	skipc
  4758  0E89  03A5               	decf	DelayMs@millis+1,f
  4759  0E8A  02A5               	subwf	DelayMs@millis+1,f
  4760  0E8B                     l1615:	
  4761                           
  4762                           ;lcd4bits.c: 87:     while (millis != 0) {
  4763  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  4765  0E8D  0824               	movf	DelayMs@millis,w
  4766  0E8E  0425               	iorwf	DelayMs@millis+1,w
  4767  0E8F  1D03               	btfss	3,2
  4768  0E90  2E92               	goto	u701
  4769  0E91  2E93               	goto	u700
  4770  0E92                     u701:	
  4771  0E92  2E7C               	goto	l1609
  4772  0E93                     u700:	
  4773  0E93                     l342:	
  4774  0E93  0008               	return
  4775  0E94                     __end_of_DelayMs:	
  4776                           
  4777                           	psect	text26
  4778  0E69                     __ptext26:	
  4779 ;; *************** function _get_current_char *****************
  4780 ;; Defined at:
  4781 ;;		line 348 in file "concentration.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4795 ;;      Params:         0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0
  4797 ;;      Temps:          0       1       0       0       0
  4798 ;;      Totals:         0       1       0       0       0
  4799 ;;Total ram usage:        1 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    5
  4802 ;; This function calls:
  4803 ;;		_get_cursor_index
  4804 ;; This function is called by:
  4805 ;;		_gameboard_init
  4806 ;;		_update_cursor
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _get_current_char
  4812  0E69                     _get_current_char:	
  4813  0E69                     l1773:	
  4814                           ;incstack = 0
  4815                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4816                           
  4817                           
  4818                           ;concentration.c: 349:     current_char = visible[get_cursor_index(cursor_pos)];
  4819  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  4821  0E6B  0867               	movf	_cursor_pos,w
  4822  0E6C  120A  158A  2633  120A  158A  	fcall	_get_cursor_index
  4823  0E71  3EA0               	addlw	(low (_visible| 0))& (0+255)
  4824  0E72  0084               	movwf	4
  4825  0E73  1383               	bcf	3,7	;select IRP bank1
  4826  0E74  0800               	movf	0,w
  4827  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0E77  00A5               	movwf	??_get_current_char
  4830  0E78  0825               	movf	??_get_current_char,w
  4831  0E79  00E6               	movwf	_current_char
  4832  0E7A                     l307:	
  4833  0E7A  0008               	return
  4834  0E7B                     __end_of_get_current_char:	
  4835                           
  4836                           	psect	text27
  4837  0E33                     __ptext27:	
  4838 ;; *************** function _get_cursor_index *****************
  4839 ;; Defined at:
  4840 ;;		line 193 in file "concentration.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  cursor          1    wreg     unsigned char 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  cursor          1    4[BANK0 ] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      unsigned char 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4854 ;;      Params:         0       0       0       0       0
  4855 ;;      Locals:         0       1       0       0       0
  4856 ;;      Temps:          0       0       0       0       0
  4857 ;;      Totals:         0       1       0       0       0
  4858 ;;Total ram usage:        1 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    4
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_check_for_match
  4865 ;;		_update_gameboard_from_input
  4866 ;;		_get_current_char
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _get_cursor_index
  4872  0E33                     _get_cursor_index:	
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  4876                           ;get_cursor_index@cursor stored from wreg
  4877  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0E35  00A4               	movwf	get_cursor_index@cursor
  4880  0E36                     l1645:	
  4881                           
  4882                           ;concentration.c: 194:     if(cursor&0x40) {
  4883  0E36  1F24               	btfss	get_cursor_index@cursor,6
  4884  0E37  2E39               	goto	u731
  4885  0E38  2E3A               	goto	u730
  4886  0E39                     u731:	
  4887  0E39  2E3D               	goto	l1651
  4888  0E3A                     u730:	
  4889  0E3A                     l1647:	
  4890                           
  4891                           ;concentration.c: 195:         return (cursor-0x30);
  4892  0E3A  0824               	movf	get_cursor_index@cursor,w
  4893  0E3B  3ED0               	addlw	208
  4894  0E3C  2E3E               	goto	l233
  4895  0E3D                     l1651:	
  4896                           
  4897                           ;concentration.c: 197:     return cursor;
  4898  0E3D  0824               	movf	get_cursor_index@cursor,w
  4899  0E3E                     l233:	
  4900  0E3E  0008               	return
  4901  0E3F                     __end_of_get_cursor_index:	
  4902                           
  4903                           	psect	text28
  4904  0FB9                     __ptext28:	
  4905 ;; *************** function _interrupt_handler *****************
  4906 ;; Defined at:
  4907 ;;		line 383 in file "concentration.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4921 ;;      Params:         0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0
  4923 ;;      Temps:          0       4       0       0       0
  4924 ;;      Totals:         0       4       0       0       0
  4925 ;;Total ram usage:        4 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    3
  4928 ;; This function calls:
  4929 ;;		i1_lcd_putch
  4930 ;; This function is called by:
  4931 ;;		Interrupt level 1
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           
  4936                           ;psect for function _interrupt_handler
  4937  0FB9                     _interrupt_handler:	
  4938  0FB9                     i1l2109:	
  4939                           
  4940                           ;concentration.c: 384:     if(ADIF) {
  4941  0FB9  1F0C               	btfss	12,6	;volatile
  4942  0FBA  2FBC               	goto	u130_21
  4943  0FBB  2FBD               	goto	u130_20
  4944  0FBC                     u130_21:	
  4945  0FBC  2FD5               	goto	i1l2123
  4946  0FBD                     u130_20:	
  4947  0FBD                     i1l2111:	
  4948                           
  4949                           ;concentration.c: 385:         if(CHS1 == 1) {
  4950  0FBD  1D9F               	btfss	31,3	;volatile
  4951  0FBE  2FC0               	goto	u131_21
  4952  0FBF  2FC1               	goto	u131_20
  4953  0FC0                     u131_21:	
  4954  0FC0  2FCB               	goto	i1l2117
  4955  0FC1                     u131_20:	
  4956  0FC1                     i1l2113:	
  4957                           
  4958                           ;concentration.c: 386:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  4959  0FC1  081E               	movf	30,w	;volatile
  4960  0FC2  00DE               	movwf	_joystick_x_pos+1
  4961  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  4962  0FC4  1303               	bcf	3,6	;RP1=0, select bank1
  4963  0FC5  081E               	movf	30,w	;volatile
  4964  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  4965  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  4966  0FC8  00DD               	movwf	_joystick_x_pos
  4967  0FC9                     i1l2115:	
  4968                           
  4969                           ;concentration.c: 387:             CHS1 = 0;
  4970  0FC9  119F               	bcf	31,3	;volatile
  4971                           
  4972                           ;concentration.c: 388:         } else {
  4973  0FCA  2FD4               	goto	i1l2121
  4974  0FCB                     i1l2117:	
  4975                           
  4976                           ;concentration.c: 389:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  4977  0FCB  081E               	movf	30,w	;volatile
  4978  0FCC  00DC               	movwf	_joystick_y_pos+1
  4979  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  4980  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  4981  0FCF  081E               	movf	30,w	;volatile
  4982  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4983  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4984  0FD2  00DB               	movwf	_joystick_y_pos
  4985  0FD3                     i1l2119:	
  4986                           
  4987                           ;concentration.c: 390:             CHS1 = 1;
  4988  0FD3  159F               	bsf	31,3	;volatile
  4989  0FD4                     i1l2121:	
  4990                           
  4991                           ;concentration.c: 392:         ADIF = 0;
  4992  0FD4  130C               	bcf	12,6	;volatile
  4993  0FD5                     i1l2123:	
  4994                           
  4995                           ;concentration.c: 394:     if(TMR2IF) {
  4996  0FD5  1C8C               	btfss	12,1	;volatile
  4997  0FD6  2FD8               	goto	u132_21
  4998  0FD7  2FD9               	goto	u132_20
  4999  0FD8                     u132_21:	
  5000  0FD8  2FE3               	goto	i1l321
  5001  0FD9                     u132_20:	
  5002  0FD9                     i1l2125:	
  5003                           
  5004                           ;concentration.c: 395:         cursor_move_delay_count--;
  5005  0FD9  3001               	movlw	1
  5006  0FDA  02FD               	subwf	_cursor_move_delay_count,f
  5007                           
  5008                           ;concentration.c: 396:         if(cursor_move_delay_count == 0) {
  5009  0FDB  087D               	movf	_cursor_move_delay_count,w
  5010  0FDC  1D03               	btfss	3,2
  5011  0FDD  2FDF               	goto	u133_21
  5012  0FDE  2FE0               	goto	u133_20
  5013  0FDF                     u133_21:	
  5014  0FDF  2FE2               	goto	i1l322
  5015  0FE0                     u133_20:	
  5016  0FE0                     i1l2127:	
  5017                           
  5018                           ;concentration.c: 397:             cursor_movable = 1;
  5019  0FE0  01E3               	clrf	_cursor_movable
  5020  0FE1  0AE3               	incf	_cursor_movable,f
  5021  0FE2                     i1l322:	
  5022                           ;concentration.c: 398:         }
  5023                           
  5024                           
  5025                           ;concentration.c: 399:         TMR2IF = 0;
  5026  0FE2  108C               	bcf	12,1	;volatile
  5027  0FE3                     i1l321:	
  5028                           ;concentration.c: 400:     }
  5029                           
  5030                           
  5031                           ;concentration.c: 401:     if(RCIF) {
  5032  0FE3  1E8C               	btfss	12,5	;volatile
  5033  0FE4  2FE6               	goto	u134_21
  5034  0FE5  2FE7               	goto	u134_20
  5035  0FE6                     u134_21:	
  5036  0FE6  2FF5               	goto	i1l324
  5037  0FE7                     u134_20:	
  5038  0FE7                     i1l2129:	
  5039                           
  5040                           ;concentration.c: 402:         recieved_char = RCREG;
  5041  0FE7  081A               	movf	26,w	;volatile
  5042  0FE8  00A0               	movwf	??_interrupt_handler
  5043  0FE9  0820               	movf	??_interrupt_handler,w
  5044  0FEA  00FC               	movwf	_recieved_char
  5045  0FEB                     i1l2131:	
  5046                           
  5047                           ;concentration.c: 403:         lcd_putch(recieved_char, gameboard);
  5048  0FEB  086A               	movf	_gameboard,w
  5049  0FEC  00F8               	movwf	i1lcd_putch@port
  5050  0FED  086B               	movf	_gameboard+1,w
  5051  0FEE  00F9               	movwf	i1lcd_putch@port+1
  5052  0FEF  087C               	movf	_recieved_char,w
  5053  0FF0  120A  158A  2659  120A  158A  	fcall	i1_lcd_putch
  5054  0FF5                     i1l324:	
  5055  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0FF7  0823               	movf	??_interrupt_handler+3,w
  5058  0FF8  008A               	movwf	10
  5059  0FF9  0822               	movf	??_interrupt_handler+2,w
  5060  0FFA  0084               	movwf	4
  5061  0FFB  0E21               	swapf	(??_interrupt_handler+1)^0,w
  5062  0FFC  0083               	movwf	3
  5063  0FFD  0EFE               	swapf	btemp,f
  5064  0FFE  0E7E               	swapf	btemp,w
  5065  0FFF  0009               	retfie
  5066  1000                     __end_of_interrupt_handler:	
  5067                           
  5068                           	psect	intentry
  5069  0004                     __pintentry:	
  5070                           ;incstack = 0
  5071 ;; hardware stack exceeded
  5072                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5073                           
  5074  0004                     interrupt_function:	
  5075  007E                     saved_w	set	btemp
  5076  0004  00FE               	movwf	btemp
  5077  0005  0E03               	swapf	3,w
  5078  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0008  00A1               	movwf	??_interrupt_handler+1
  5081  0009  0804               	movf	4,w
  5082  000A  00A2               	movwf	??_interrupt_handler+2
  5083  000B  080A               	movf	10,w
  5084  000C  00A3               	movwf	??_interrupt_handler+3
  5085  000D  120A  158A  2FB9   	ljmp	_interrupt_handler
  5086                           
  5087                           	psect	text29
  5088  0E59                     __ptext29:	
  5089 ;; *************** function i1_lcd_putch *****************
  5090 ;; Defined at:
  5091 ;;		line 136 in file "lcd4bits.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  character       1    wreg     unsigned char 
  5094 ;;  port            2    8[COMMON] PTR unsigned char 
  5095 ;;		 -> PORTD(1), PORTA(1), 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  character       1   11[COMMON] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5107 ;;      Params:         2       0       0       0       0
  5108 ;;      Locals:         1       0       0       0       0
  5109 ;;      Temps:          1       0       0       0       0
  5110 ;;      Totals:         4       0       0       0       0
  5111 ;;Total ram usage:        4 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    2
  5114 ;; This function calls:
  5115 ;;		i1_lcd_write
  5116 ;; This function is called by:
  5117 ;;		_interrupt_handler
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function i1_lcd_putch
  5123  0E59                     i1_lcd_putch:	
  5124                           
  5125                           ;incstack = 0
  5126 ;; hardware stack exceeded
  5127                           ; Regs used in i1_lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5128                           ;i1lcd_putch@character stored from wreg
  5129  0E59  00FB               	movwf	i1lcd_putch@character
  5130  0E5A                     i1l2089:	
  5131                           
  5132                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  5133  0E5A  087B               	movf	i1lcd_putch@character,w
  5134  0E5B  00FA               	movwf	??i1_lcd_putch
  5135  0E5C  087A               	movf	??i1_lcd_putch,w
  5136  0E5D  00F2               	movwf	i1lcd_write@CmdChar
  5137  0E5E  0878               	movf	i1lcd_putch@port,w
  5138  0E5F  00F3               	movwf	i1lcd_write@port
  5139  0E60  0879               	movf	i1lcd_putch@port+1,w
  5140  0E61  00F4               	movwf	i1lcd_write@port+1
  5141  0E62  3010               	movlw	16
  5142  0E63  120A  118A  2782  120A  158A  	fcall	i1_lcd_write
  5143  0E68                     i1l362:	
  5144  0E68  0008               	return
  5145  0E69                     __end_ofi1_lcd_putch:	
  5146                           
  5147                           	psect	text30
  5148  0782                     __ptext30:	
  5149 ;; *************** function i1_lcd_write *****************
  5150 ;; Defined at:
  5151 ;;		line 110 in file "lcd4bits.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  mode            1    wreg     unsigned char 
  5154 ;;  CmdChar         1    2[COMMON] unsigned char 
  5155 ;;  port            2    3[COMMON] PTR unsigned char 
  5156 ;;		 -> PORTD(1), PORTA(1), 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  mode            1    7[COMMON] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5168 ;;      Params:         3       0       0       0       0
  5169 ;;      Locals:         1       0       0       0       0
  5170 ;;      Temps:          2       0       0       0       0
  5171 ;;      Totals:         6       0       0       0       0
  5172 ;;Total ram usage:        6 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    1
  5175 ;; This function calls:
  5176 ;;		i1_Delay20us
  5177 ;; This function is called by:
  5178 ;;		i1_lcd_putch
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function i1_lcd_write
  5184  0782                     i1_lcd_write:	
  5185                           
  5186                           ;incstack = 0
  5187 ;; hardware stack exceeded
  5188                           ; Regs used in i1_lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5189                           ;i1lcd_write@mode stored from wreg
  5190  0782  00F7               	movwf	i1lcd_write@mode
  5191  0783                     i1l1893:	
  5192                           
  5193                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  5194  0783  0872               	movf	i1lcd_write@CmdChar,w
  5195  0784  00F5               	movwf	??i1_lcd_write
  5196  0785  3004               	movlw	4
  5197  0786                     u107_25:	
  5198  0786  1003               	clrc
  5199  0787  0CF5               	rrf	??i1_lcd_write,f
  5200  0788  3EFF               	addlw	-1
  5201  0789  1D03               	skipz
  5202  078A  2F86               	goto	u107_25
  5203  078B  0875               	movf	??i1_lcd_write,w
  5204  078C  3E20               	addlw	32
  5205  078D  0477               	iorwf	i1lcd_write@mode,w
  5206  078E  00F6               	movwf	??i1_lcd_write+1
  5207  078F  0873               	movf	i1lcd_write@port,w
  5208  0790  0084               	movwf	4
  5209  0791  1783               	bsf	3,7
  5210  0792  1C74               	btfss	i1lcd_write@port+1,0
  5211  0793  1383               	bcf	3,7
  5212  0794  0876               	movf	??i1_lcd_write+1,w
  5213  0795  0080               	movwf	0
  5214  0796                     i1l1895:	
  5215                           
  5216                           ;lcd4bits.c: 112:     Delay20us();
  5217  0796  120A  158A  2627  120A  118A  	fcall	i1_Delay20us
  5218  079B                     i1l1897:	
  5219                           
  5220                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  5221  079B  0873               	movf	i1lcd_write@port,w
  5222  079C  0084               	movwf	4
  5223  079D  1783               	bsf	3,7
  5224  079E  1C74               	btfss	i1lcd_write@port+1,0
  5225  079F  1383               	bcf	3,7
  5226  07A0  0800               	movf	0,w
  5227  07A1  39DF               	andlw	223
  5228  07A2  00F5               	movwf	??i1_lcd_write
  5229  07A3  0873               	movf	i1lcd_write@port,w
  5230  07A4  0084               	movwf	4
  5231  07A5  1783               	bsf	3,7
  5232  07A6  1C74               	btfss	i1lcd_write@port+1,0
  5233  07A7  1383               	bcf	3,7
  5234  07A8  0875               	movf	??i1_lcd_write,w
  5235  07A9  0080               	movwf	0
  5236  07AA                     i1l1899:	
  5237                           
  5238                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  5239  07AA  0872               	movf	i1lcd_write@CmdChar,w
  5240  07AB  390F               	andlw	15
  5241  07AC  3E20               	addlw	32
  5242  07AD  0477               	iorwf	i1lcd_write@mode,w
  5243  07AE  00F5               	movwf	??i1_lcd_write
  5244  07AF  0873               	movf	i1lcd_write@port,w
  5245  07B0  0084               	movwf	4
  5246  07B1  1783               	bsf	3,7
  5247  07B2  1C74               	btfss	i1lcd_write@port+1,0
  5248  07B3  1383               	bcf	3,7
  5249  07B4  0875               	movf	??i1_lcd_write,w
  5250  07B5  0080               	movwf	0
  5251  07B6                     i1l1901:	
  5252                           
  5253                           ;lcd4bits.c: 116:     Delay20us();
  5254  07B6  120A  158A  2627  120A  118A  	fcall	i1_Delay20us
  5255                           
  5256                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  5257  07BB  0873               	movf	i1lcd_write@port,w
  5258  07BC  0084               	movwf	4
  5259  07BD  1783               	bsf	3,7
  5260  07BE  1C74               	btfss	i1lcd_write@port+1,0
  5261  07BF  1383               	bcf	3,7
  5262  07C0  0800               	movf	0,w
  5263  07C1  39DF               	andlw	223
  5264  07C2  00F5               	movwf	??i1_lcd_write
  5265  07C3  0873               	movf	i1lcd_write@port,w
  5266  07C4  0084               	movwf	4
  5267  07C5  1783               	bsf	3,7
  5268  07C6  1C74               	btfss	i1lcd_write@port+1,0
  5269  07C7  1383               	bcf	3,7
  5270  07C8  0875               	movf	??i1_lcd_write,w
  5271  07C9  0080               	movwf	0
  5272  07CA                     i1l350:	
  5273  07CA  0008               	return
  5274  07CB                     __end_ofi1_lcd_write:	
  5275                           
  5276                           	psect	text31
  5277  0E27                     __ptext31:	
  5278 ;; *************** function i1_Delay20us *****************
  5279 ;; Defined at:
  5280 ;;		line 99 in file "lcd4bits.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  Delay20us       1    1[COMMON] unsigned char 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5294 ;;      Params:         0       0       0       0       0
  5295 ;;      Locals:         1       0       0       0       0
  5296 ;;      Temps:          1       0       0       0       0
  5297 ;;      Totals:         2       0       0       0       0
  5298 ;;Total ram usage:        2 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		i1_lcd_write
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           
  5308                           ;psect for function i1_Delay20us
  5309  0E27                     i1_Delay20us:	
  5310  0E27                     i1l1775:	
  5311                           ;incstack = 0
  5312 ;; hardware stack exceeded
  5313                           ; Regs used in i1_Delay20us: [wreg+status,2+status,0]
  5314                           
  5315                           
  5316                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  5317  0E27  01F1               	clrf	i1Delay20us@next
  5318  0E28                     i1l1781:	
  5319  0E28  3001               	movlw	1
  5320  0E29  00F0               	movwf	??i1_Delay20us
  5321  0E2A  0870               	movf	??i1_Delay20us,w
  5322  0E2B  07F1               	addwf	i1Delay20us@next,f
  5323  0E2C                     i1l1783:	
  5324  0E2C  3008               	movlw	8
  5325  0E2D  0271               	subwf	i1Delay20us@next,w
  5326  0E2E  1C03               	skipc
  5327  0E2F  2E31               	goto	u97_21
  5328  0E30  2E32               	goto	u97_20
  5329  0E31                     u97_21:	
  5330  0E31  2E28               	goto	i1l1781
  5331  0E32                     u97_20:	
  5332  0E32                     i1l347:	
  5333  0E32  0008               	return
  5334  0E33                     __end_ofi1_Delay20us:	
  5335  007E                     btemp	set	126	;btemp
  5336  007E                     wtemp0	set	126


Data Sizes:
    Strings     71
    Constant    64
    Data        4
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     59      76
    BANK1            80      0      64
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    lcd_set_custom_char@data	PTR const unsigned char  size(1) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[17]), STR_1(CODE[16]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    _interrupt_handler->i1_lcd_putch
    i1_lcd_putch->i1_lcd_write
    i1_lcd_write->i1_Delay20us

Critical Paths under _main in BANK0

    _main->_gameboard_init
    _update_gameboard_from_input->_check_for_match
    _update_gameboard_from_input->_update_cursor
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_gameboard
    _check_for_match->_display_scoreboard
    _startup->_display_gameboard
    _startup->_display_scoreboard
    _display_scoreboard->_lcd_putch
    _lcd_puts->_lcd_write
    _display_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_init->_lcd_clear
    _gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    ___awdiv->___awmod
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us
    _get_current_char->_get_cursor_index

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   84925
                     _gameboard_init
                      _joystick_init
                           _lcd_init
                        _serial_init
                            _startup
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0   40436
                                             28 BANK0      2     2      0
                            _DelayMs
                    _check_for_match
                  _display_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    6199
                                             24 BANK0      4     3      1
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    5633
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      2     2      0   19213
                                             26 BANK0      2     2      0
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0   27672
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _display_scoreboard                                   2     2      0    9800
                                             24 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (4) _lcd_puts                                             4     2      2    2507
                                             12 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     904
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _display_gameboard                                    2     2      0    8694
                                             24 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    2564
                                             20 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    5650
                                             14 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       2     2      0   11167
                                             57 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    1548
                                             20 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     756
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    3445
                                             19 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  7     4      3    3445
                                             12 BANK0      7     4      3
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    3069
                                             12 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            2     0      2    2971
                                             12 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    1786
                                              6 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      46
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     631
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0      66
                                              5 BANK0      1     1      0
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (4) _get_cursor_index                                     1     1      0      66
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    4     4      0     388
                                              0 BANK0      4     4      0
                        i1_lcd_putch
 ---------------------------------------------------------------------------------
 (8) i1_lcd_putch                                          4     2      2     388
                                              8 COMMON     4     2      2
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (9) i1_lcd_write                                          6     3      3     318
                                              2 COMMON     6     3      3
                        i1_Delay20us
 ---------------------------------------------------------------------------------
 (10) i1_Delay20us                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gameboard_init
     _get_current_char
       _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
     _time_init
   _joystick_init
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _serial_init
   _startup
     _DelayMs
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _update_gameboard_from_input
     _DelayMs
     _check_for_match
       _DelayMs
       _display_gameboard
         _lcd_clear
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _display_scoreboard
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_current_char
         _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us

 _interrupt_handler (ROOT)
   i1_lcd_putch
     i1_lcd_write
       i1_Delay20us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3B      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BA      12        0.0%
ABS                  0      0      BA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 18 23:22:45 2020

                    _joystick_pressed 005F                                     pc 0002  
 __end_of_update_gameboard_from_input 018A           _update_gameboard_from_input 004B  
                         __CFG_CP$OFF 0000                         _update_cursor 0255  
                                  _GO 00F9                          ___awdiv@sign 0031  
                                  fsr 0004                                   l204 0F92  
                                 l205 0FB8                                   l310 0E4A  
                                 l224 0491                                   l304 07F8  
                                 l233 0E3E                                   l313 0F0D  
                                 l242 0633                                   l307 0E7A  
                                 l251 050B                                   l229 05D4  
                                 l333 0E26                                   l261 00C9  
                                 l342 0E93                                   l350 0781  
                                 l190 03D3                                   l254 0052  
                                 l255 00AC                                   l280 0189  
                                 l353 0EAD                                   l193 03E2  
                                 l257 00B2                                   l338 0E7F  
                                 l362 02F9                                   l347 0E58  
                                 l187 0EC8                                   l612 0574  
                                 l196 0415                                   l365 0EE6  
                                 l373 0732                                   l277 0187  
                                 l359 0F38                                   l199 0254  
                                 l368 06E0                                   l625 068E  
                                 l299 02E7                                   _GIE 005F  
                                 _RB5 0035                                   _PR2 0092  
                        __CFG_CPD$OFF 0000                                   u700 0E93  
                                 u701 0E92                                   u800 0552  
                                 u720 0F38                                   u801 0551  
                                 u721 0F37                                   u730 0E3A  
                                 u731 0E39                                   u715 0739  
                                 u820 0566                                   u740 0513  
                                 u821 0565                                   u805 054E  
                                 u741 0512                                   _SCS 0478  
                                 u830 056B                                   u750 051E  
                                 u910 0680                                   u831 056A  
                                 u815 055A                                   u751 051D  
                                 u911 067F                                   u680 0E58  
                                 u760 052F                                   u920 0685  
                                 u840 063B                                   u681 0E57  
                                 u761 052E                                   u921 0684  
                                 u905 0674                                   u841 063A  
                                 u690 0E83                                   u930 0F88  
                                 u850 0646                                   u691 0E82  
                                 u931 0F87                                   u851 0645  
                                 u780 0541                                   u940 0FAE  
                                 u860 0651                                   u781 0540  
                                 u941 0FAD                                   u861 0650  
                                 u775 0533                                   u960 0724  
                                 u880 0663                                   u961 0723  
                                 u881 0662                                   _RX9 00C6  
                                 u890 066D                                   u955 06E8  
                                 u795 0542                                   u891 066C  
                                 u875 0655                                   u980 05D9  
                                 u895 0669                                   _TX9 04C6  
                                 u994 05EB                                   u995 05E9  
                                 fsr0 0004                                   indf 0000  
                        ___awmod@sign 002A                          __CFG_FOSC$HS 0000  
                        __CFG_LVP$OFF 0000                        ?_toggle_cursor 0070  
                       lcd_clear@port 002C                                  l2001 0EBD  
                                l2003 0EBE                                  l2011 03D9  
                                l2005 0EC1                                  l2021 040A  
                                l2013 03E8                                  l2101 0F5C  
                                l2007 0EC5                                  l2023 040B  
                                l2015 03F1                                  l2031 0056  
                                l2103 0F61                                  l2025 0410  
                                l2017 03FC                                  l2009 038D  
                                l2041 00B0                                  l2033 005B  
                                l2105 0F66                                  l2019 0407  
                                l2051 00D7                                  l2043 00B8  
                                l2035 0064                                  l2027 004B  
                                l2107 0F6B                                  l2061 0106  
                                l2045 00BD                                  l2053 00D8  
                                l2037 0067                                  l2029 0051  
                                l2071 0139                                  l2063 010D  
                                l2055 00E5                                  l2047 00C1  
                                l2039 0075                                  l2081 016A  
                                l2073 0148                                  l2065 0118  
                                l2057 00EC                                  l2049 00C7  
                                l1611 0E7E                                  l1603 0E4E  
                                l2083 0173                                  l2075 014F  
                                l2067 0127                                  l2059 00F7  
                                l2091 0F39                                  l1613 0E83  
                                l1605 0E52                                  l1621 074E  
                                l1701 0637                                  l2085 0179  
                                l2077 015A                                  l2069 012E  
                                l2093 0F3C                                  l1615 0E8B  
                                l1607 0E7B                                  l1623 075F  
                                l1711 064B                                  l1703 063B  
                                l1631 0F11                                  l2087 017E  
                                l2079 0165                                  l2095 0F41  
                                l1609 0E7C                                  l1625 076B  
                                l1617 0736                                  l1641 0EDB  
                                l1801 060F                                  l1721 0663  
                                l1713 0651                                  l1705 0640  
                                l1633 0F12                                  l2193 0278  
                                l2097 0F4C                                  l1651 0E3D  
                                l1619 0749                                  l1627 0E94  
                                l1803 0629                                  l1643 02EB  
                                l1731 0685                                  l1723 066D  
                                l1715 0654                                  l1707 0642  
                                l1635 0F26                                  l1811 049F  
                                l2195 0294                                  l2099 0F57  
                                l1645 0E36                                  l1629 0EA2  
                                l1661 0518                                  l1805 062D  
                                l1741 0F7F                                  l1733 068A  
                                l1725 0673                                  l1717 065B  
                                l1709 0646                                  l1637 0F2C  
                                l1813 04BD                                  l1821 04D1  
                                l2197 02A4                                  l1647 0E3A  
                                l1639 0ECC                                  l1671 0529  
                                l1663 051A                                  l1655 050C  
                                l1911 06B5                                  l1903 068F  
                                l1751 0FA2                                  l1727 067A  
                                l1719 065F                                  l1823 04D6  
                                l1831 0505                                  l1815 04C2  
                                l1807 0495                                  l1681 0541  
                                l1673 052F                                  l1665 051E  
                                l1657 050F                                  l1921 0EF2  
                                l1913 06C5                                  l1905 0694  
                                l1753 0FA8                                  l1729 0680  
                                l1737 018A                                  l1825 04E1  
                                l1817 04C7                                  l1809 049A  
                                l1841 07EB                                  l1833 07CB  
                                l1771 0724                                  l1763 06E5  
                                l1683 0552                                  l1675 0532  
                                l1691 0566                                  l1667 0523  
                                l1659 0513                                  l1931 0EFE  
                                l1923 0EF5                                  l1915 06D0  
                                l1907 069C                                  l1755 0FAE  
                                l1747 0F82                                  l1739 0F74  
                                l1827 04F2                                  l1819 04CB  
                                l1843 07EE                                  l1835 07D2  
                                l1851 0263                                  l1773 0E69  
                                l1597 0E4B                                  l1765 0714  
                                l1757 06E4                                  l1693 056B  
                                l1685 0558                                  l1677 0539  
                                l1669 0527                                  l1941 0F0B  
                                l1933 0EFF                                  l1925 0EF7  
                                l1917 0EE7                                  l1909 06A5  
                                l1749 0F88                                  l1829 0501  
                                l1837 07DC                                  l1861 0282  
                                l1853 0268                                  l1845 0258  
                                l1767 071A                                  l1695 0570  
                                l1687 0559                                  l1679 053D  
                                l1791 05DE                                  l1943 0575  
                                l1935 0F02                                  l1927 0EF9  
                                l1919 0EF1                                  l1839 07E1  
                                l1863 0287                                  l1855 026D  
                                l1871 02AF                                  l1847 0259  
                                l1769 071E                                  l1785 0416  
                                l1689 0560                                  l1793 05E2  
                                l1961 059A                                  l1945 057B  
                                l1937 0F05                                  l1929 0EFD  
                                l1873 02CA                                  l1865 028C  
                                l1857 0270                                  l1849 025E  
                                l1795 05FA                                  l1787 0E3F  
                                l1971 05B1                                  l1963 05A3  
                                l1955 0588                                  l1947 0580  
                                l1939 0F07                                  l1891 0E25  
                                l1699 0634                                  l1875 02D1  
                                l1859 0280                                  l1797 0601  
                                l1789 05D5                                  l1981 05CB  
                                l1973 05BB                                  l1965 05A6  
                                l1957 0590                                  l1949 0585  
                                l1869 029C                                  l1799 060A  
                                l1983 05CF                                  l1975 05C1  
                                l1967 05AC                                  l1959 0594  
                                l1991 0EB4                                  l1977 05C5  
                                l1969 05AF                                  l1889 0E1D  
                                l1993 0EB5                                  l1985 0EAE  
                                l1979 05C8                                  l1995 0EB8  
                                l1987 0EAF                                  l1997 0EB9  
                                l1989 0EB3                                  l1999 0EBC  
                                _ADIE 0466                                  _ADIF 0066  
                                _CHS1 00FB                                  STR_1 0357  
                                STR_2 0346                                  STR_3 0367  
                                STR_4 0374                                  STR_5 0387  
                                STR_6 0380                                  _BRGH 04C2  
                                u1000 060A                                  _CREN 00C4  
                                _T0IF 005A                                  u1001 0609  
                                u1010 0633                                  u1011 0632  
                                u1100 03E8                                  u1020 049A  
                                u1101 03E7                                  u1021 0499  
                                u1030 04BD                                  u1110 0051  
                                u1031 04BC                                  u1111 0050  
                                u1040 04C2                                  u1200 0106  
                                u1120 0056                                  u1041 04C1  
                                u1201 0105                                  u1121 0055  
                                u1050 07D2                                  u1210 010D  
                                u1130 005B                                  u1051 07D1  
                                u1211 010C                                  u1131 005A  
                                u1060 02D1                                  u1220 0127  
                                u1140 0075                                  u1061 02D0  
                                u1221 0126                                  u1205 0102  
                                u1141 0074                                  u1230 012E  
                                u1150 00B0                                  u1231 012D  
                                u1151 00AF                                  u1080 059A  
                                u1240 0148                                  u1160 00B8  
                                u1081 0599                                  u1241 0147  
                                u1225 0123                                  u1161 00B7  
                                u1090 03D9                                  u1250 014F  
                                u1170 00BD                                  u1091 03D8  
                                u1251 014E                                  u1171 00BC  
                                u1260 0165                                  u1180 00E5  
                                u1261 0164                                  u1245 0144  
                                u1181 00E4                                  u1270 016A  
                                u1190 00EC                                  u1271 0169  
                                u1191 00EB                                  u1280 0179  
                                u1281 0178                                  u1185 00E1  
                                u1290 017E                                  u1291 017D  
                                _PEIE 005E                                  _RCIE 0465  
                                _RCIF 0065                                  _TMR0 0001  
                                _TMR1 000E                                  _TMR2 0011  
                                _SPEN 00C7                                  _TXEN 04C5  
                                _SYNC 04C4                                  _WPUB 0095  
               make_custom_chars@club 031E                          __CFG_WRT$OFF 0000  
                                _main 0F39                                  btemp 007E  
                     _check_for_match 0492                          lcd_init@port 002E  
                                start 0010                          lcd_goto@port 002C  
                       __CFG_IESO$OFF 0000                       i1Delay20us@next 0071  
                     __end_of_DelayMs 0E94                         __CFG_MCLRE$ON 0000  
                         i1_lcd_putch 0E59                           i1_lcd_write 0782  
                      ?_update_cursor 0038                                 ?_main 0070  
                     __end_of___awdiv 0575                                 _CCPR1 0015  
                               _BRG16 0C3B                         __CFG_WDTE$OFF 0000  
                     __end_of___awmod 068F                                 _ANSEL 0188  
                     ___awdiv@divisor 002B                                 _T2CON 0012  
                               i1l321 0FE3                                 i1l322 0FE2  
                               i1l324 0FF5                                 i1l350 07CA  
                               i1l362 0E68                                 i1l347 0E32  
                     ___awdiv@counter 0030                                 _RCREG 001A  
        __size_of_randomize_gameboard 005F                                 _SPBRG 0099  
                               _PORTA 0005                                 _PORTB 0006  
                               _PORTD 0008                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                                 u97_20 0E32  
                               u97_21 0E31                make_custom_chars@heart 032E  
              make_custom_chars@spade 0326                        __CFG_FCMEN$OFF 0000  
              make_custom_chars@smile 033E                make_custom_chars@skull 0316  
                               _nRBPU 040F                                 _board 00C0  
                        lcd_puts@port 002C                        __CFG_BOREN$OFF 0000  
                               pclath 000A                                 status 0003  
                     __end_of_startup 0416                                 wtemp0 007E  
                       DelayMs@millis 0024                       __initialization 0013  
                        __end_of_main 0F74                    __size_of_Delay20us 000E  
                              ??_main 005B                       ??_toggle_cursor 0038  
                        ?i1_Delay20us 0070                                _ADCON0 001F  
                              _ADCON1 009F                                _CCP1M0 00B8  
                              _CCP1M1 00B9                                _CCP1M2 00BA  
                              _CCP1M3 00BB                                _CCP1IF 0062  
             __end_of_check_for_match 050C                                _ADRESH 001E  
                              _ADRESL 009E                      ___awdiv@dividend 002D  
         __end_ofmake_custom_chars@RH 0316                                _ANSELH 0189  
              update_cursor@direction 0038                    i1lcd_write@CmdChar 0072  
                              i1l2111 0FBD                                i1l2121 0FD4  
                              i1l2113 0FC1                                i1l2131 0FEB  
                              i1l2115 0FC9                                i1l2123 0FD5  
                              i1l2125 0FD9                                i1l2117 0FCB  
                              i1l2109 0FB9                                i1l2127 0FE0  
                              i1l2119 0FD3                                i1l2129 0FE7  
                              i1l2089 0E5A                                i1l1901 07B6  
                              u130_20 0FBD                                u130_21 0FBC  
             __size_of_gameboard_init 0060                                i1l1781 0E28  
                              i1l1783 0E2C                                i1l1775 0E27  
                              u131_20 0FC1                                u131_21 0FC0  
                              u107_25 0786                                i1l1893 0783  
                              i1l1895 0796                                u132_20 0FD9  
                              i1l1897 079B                                u132_21 0FD8  
                              i1l1899 07AA                                u133_20 0FE0  
                              u133_21 0FDF                                u134_20 0FE7  
                              u134_21 0FE6                             ??_DelayMs 0026  
                              _TMR1GE 0086                                _TMR1CS 0081  
                              _TMR2IE 0461                                _TMR2IF 0061  
                              _TMR1ON 0080            __end_of_display_scoreboard 0255  
                 _lcd_set_custom_char 06E1                        __CFG_PWRTE$OFF 0000  
                     ??_update_cursor 0039                          ?_serial_init 0070  
                    __end_of_lcd_init 06E1                      __end_of_lcd_goto 0EE7  
                    __end_of_lcd_puts 0F39                             ??___awdiv 002F  
                           ??___awmod 0028                      ___awdiv@quotient 0032  
                     ___awmod@divisor 0024                         lcd_putch@port 0034  
                     ___awmod@counter 0029                  ?_lcd_set_custom_char 002C  
                              saved_w 007E             __size_of_get_current_char 0012  
                           ??_startup 003A                     __end_of_Delay20us 0E59  
       update_cursor@move_delay_count 003B               __end_of__initialization 0047  
           __size_of_get_cursor_index 000C                         lcd_write@mode 002B  
                       lcd_write@port 0027                        __pcstackCOMMON 0070  
                        __pidataBANK0 07F9                 check_for_match@player 003B  
               __end_of_joystick_init 0F0E                 ??_lcd_set_custom_char 002F  
                  __size_of_lcd_clear 001A                    __size_of_lcd_putch 0012  
                  __size_of_lcd_write 004F                      ?_check_for_match 0070  
                          __pbssBANK0 005B                            __pbssBANK1 00A0  
                          __pbssBANK3 0190               _cursor_move_delay_count 007D  
                 _randomize_gameboard 05D5                            __pmaintext 0F39  
                        ?i1_lcd_putch 0078                          ?i1_lcd_write 0072  
                          __pintentry 0004                    __size_of_tmr0_init 000A  
        __end_ofmake_custom_chars@PIC 030E                               _T1CKPS0 0084  
                             _T1CKPS1 0085                  ?_randomize_gameboard 0070  
                  __size_of_time_init 000C                    display_gameboard@i 0039  
                     i1lcd_putch@port 0078                             ?_lcd_init 002E  
                           ?_lcd_goto 002C                             ?_lcd_puts 002C  
                          __stringtab 0300                        _gameboard_init 0575  
              lcd_set_custom_char@row 0031              make_custom_chars@diamond 0336  
                __size_ofi1_Delay20us 000C                               _DelayMs 0E7B  
          randomize_gameboard@current 0057                     __end_of_lcd_clear 0EAE  
           randomize_gameboard@random 0058                       i1lcd_write@mode 0077  
                     i1lcd_write@port 0073                     __end_of_lcd_putch 02FA  
                             ___awdiv 050C                               ___awmod 0634  
                   __end_of_lcd_write 0782                  __size_of_serial_init 001B  
      __end_ofmake_custom_chars@heart 0336        __end_ofmake_custom_chars@spade 032E  
      __end_ofmake_custom_chars@smile 0346        __end_ofmake_custom_chars@skull 031E  
                             __ptext1 004B                               __ptext2 0255  
                             __ptext3 07CB                               __ptext4 0492  
                             __ptext5 038D                               __ptext6 018A  
                             __ptext7 0F0E                               __ptext8 0634  
                             __ptext9 0F74                            _cursor_pos 0067  
               ??_randomize_gameboard 0034                      ___awmod@dividend 0026  
                    _get_current_char 0E69                __end_of_gameboard_init 05D5  
              get_cursor_index@cursor 0024                               _visible 00A0  
                             _startup 038D                               clrloop0 0E16  
                          ??_lcd_init 0030                            ??_lcd_goto 002E  
                          ??_lcd_puts 002E                  end_of_initialization 0047  
                   __end_of_tmr0_init 0E27                        lcd_puts@string 002F  
                    _get_cursor_index 0E33                         _recieved_char 007C  
                   __end_of_time_init 0E4B                            _scoreboard 0068  
                  _display_scoreboard 018A         lcd_set_custom_char@cg_address 002C  
                      _joystick_x_pos 005D                        _joystick_y_pos 005B  
                 ?_display_scoreboard 0070                       ?_gameboard_init 0070  
               __end_of_toggle_cursor 07F9                             _Delay20us 0E4B  
                make_custom_chars@PIC 0306                  ??_display_scoreboard 0038  
               __end_of_update_cursor 02E8          ?_update_gameboard_from_input 0070  
                __size_ofi1_lcd_putch 0010                  __size_ofi1_lcd_write 0049  
                 start_initialization 0013                            ?_Delay20us 0070  
                     gameboard_init@i 005A                  i1lcd_putch@character 007B  
         __end_of_lcd_set_custom_char 0733                           __pdataBANK0 0068  
       ??_update_gameboard_from_input 003C                           __pbssCOMMON 007C  
                           ___latbits 0002                         __pcstackBANK0 0020  
                       _selected_tile 0060                              ?_DelayMs 0024  
              __size_of_joystick_init 0027                     __size_of_lcd_init 0052  
                   __size_of_lcd_goto 001E                     __size_of_lcd_puts 002B  
                        _current_char 0066              __size_of_check_for_match 007A  
                         _delay_loops 0064              __end_of_get_current_char 0E7B  
                           _gameboard 006A                              ?___awdiv 002B  
                            ?___awmod 0024                     _display_gameboard 0F74  
                           _lcd_clear 0E94                          _cursor_solid 0065  
                           __pstrings 0300                             _lcd_putch 02E8  
                  ?_display_gameboard 0070                             _lcd_write 0733  
            __end_of_get_cursor_index 0E3F                     _interrupt_handler 0FB9  
                  ?_interrupt_handler 0070                         ??i1_Delay20us 0070  
                 ??_display_gameboard 0038         __end_ofmake_custom_chars@club 0326  
                            ?_startup 0070  __size_of_update_gameboard_from_input 013F  
                 ??_interrupt_handler 0020                     interrupt_function 0004  
                      _cursor_movable 0063                           ??_Delay20us 0024  
                           clear_ram0 0E15                             _tmr0_init 0E1D  
                       ??_serial_init 0024             __end_of_display_gameboard 0FB9  
                           _time_init 0E3F           __end_of_randomize_gameboard 0634  
                          ?_lcd_clear 002C             __end_of_interrupt_handler 1000  
                       _joystick_init 0EE7                            ?_lcd_putch 0034  
             lcd_set_custom_char@data 0032                           __stringbase 0305  
                          ?_lcd_write 0026                      ??_gameboard_init 0059  
             lcd_set_custom_char@port 002D                   make_custom_chars@RH 030E  
                    __size_of_DelayMs 0019                   __end_ofi1_Delay20us 0E33  
                          ?_tmr0_init 0070                              _p1_score 0062  
                            _p2_score 0061                            ?_time_init 0070  
                   _make_custom_chars 0416                      __size_of___awdiv 0069  
                   ??_check_for_match 003A                      __size_of___awmod 005B  
                      ?_joystick_init 0070                   __end_of_serial_init 0EC9  
                  ?_make_custom_chars 0070                    __end_of__stringtab 0306  
    __end_ofmake_custom_chars@diamond 033E                   ??_make_custom_chars 0033  
                            __ptext10 02E8                              __ptext11 0EAE  
                            __ptext20 06E1                              __ptext12 068F  
                            __ptext21 0EC9                              __ptext13 0E1D  
                            __ptext30 0782                              __ptext22 0E94  
                            __ptext14 0EE7                              __ptext31 0E27  
                            __ptext23 0733                              __ptext15 0575  
                            __ptext24 0E4B                              __ptext16 0E3F  
                            __ptext25 0E7B                              __ptext17 05D5  
                            __ptext26 0E69                              __ptext18 050C  
                            __ptext27 0E33                              __ptext19 0416  
                            __ptext28 0FB9                              __ptext29 0E59  
                   __CFG_BOR4V$BOR21V 0000                              _lcd_init 068F  
                            _lcd_goto 0EC9                              _lcd_puts 0F0E  
                    __size_of_startup 0089                         __size_of_main 003B  
                  lcd_putch@character 0037                         ??i1_lcd_putch 007A  
           __end_of_make_custom_chars 0492                         ??i1_lcd_write 0075  
         __size_of_display_scoreboard 00CB            __size_of_display_gameboard 0045  
              __size_of_toggle_cursor 002E                           ??_lcd_clear 002E  
          __size_of_interrupt_handler 0047              randomize_gameboard@F1346 0190  
                         ??_lcd_putch 0036                           ??_lcd_write 0029  
                         i1_Delay20us 0E27                              intlevel1 0000  
              __size_of_update_cursor 0093                         Delay20us@next 0025  
                         ??_tmr0_init 0024                             stringcode 0300  
                         _serial_init 0EAE                     ?_get_current_char 0070  
                     ??_joystick_init 0024                           ??_time_init 0024  
                  ??_get_current_char 0025                   __end_ofi1_lcd_putch 0E69  
                 __end_ofi1_lcd_write 07CB               randomize_gameboard@used 0037  
                          _OPTION_REG 0081                      lcd_goto@position 002F  
                   ?_get_cursor_index 0070          __size_of_lcd_set_custom_char 0052  
                            stringdir 0300                              stringtab 0300  
                  ??_get_cursor_index 0024                         _toggle_cursor 07CB  
                    lcd_write@CmdChar 0026            __size_of_make_custom_chars 007C  
