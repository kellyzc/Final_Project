

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 14 17:56:21 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301                           
   302                           	psect	idataBANK0
   303  043F                     __pidataBANK0:	
   304                           
   305                           ;initializer for _scoreboard
   306  043F  3405               	retlw	5
   307  0440  3400               	retlw	0
   308                           
   309                           ;initializer for _gameboard
   310  0441  3408               	retlw	8
   311  0442  3400               	retlw	0
   312                           
   313                           	psect	strings
   314  0375                     __pstrings:	
   315  0375                     stringtab:	
   316  0375                     __stringtab:	
   317  0375                     stringcode:	
   318                           ;	String table - string pointers are 1 byte each
   319                           
   320  0375                     stringdir:	
   321  0375  3003               	movlw	high stringdir
   322  0376  008A               	movwf	10
   323  0377  0804               	movf	4,w
   324  0378  0A84               	incf	4,f
   325  0379  0782               	addwf	2,f
   326  037A                     __stringbase:	
   327  037A  3400               	retlw	0
   328  037B                     __end_of__stringtab:	
   329  037B                     _board_r2:	
   330  037B  3454               	retlw	84
   331  037C  3448               	retlw	72
   332  037D  3449               	retlw	73
   333  037E  3453               	retlw	83
   334  037F  3420               	retlw	32
   335  0380  3449               	retlw	73
   336  0381  3453               	retlw	83
   337  0382  3420               	retlw	32
   338  0383  3452               	retlw	82
   339  0384  344F               	retlw	79
   340  0385  3457               	retlw	87
   341  0386  3420               	retlw	32
   342  0387  3432               	retlw	50
   343  0388  342E               	retlw	46
   344  0389  342E               	retlw	46
   345  038A  342E               	retlw	46
   346  038B  3400               	retlw	0
   347  038C                     __end_of_board_r2:	
   348  038C                     _board_r1:	
   349  038C  3430               	retlw	48
   350  038D  3431               	retlw	49
   351  038E  3432               	retlw	50
   352  038F  3433               	retlw	51
   353  0390  3434               	retlw	52
   354  0391  3435               	retlw	53
   355  0392  3436               	retlw	54
   356  0393  3437               	retlw	55
   357  0394  3438               	retlw	56
   358  0395  3439               	retlw	57
   359  0396  3441               	retlw	65
   360  0397  3442               	retlw	66
   361  0398  3443               	retlw	67
   362  0399  3444               	retlw	68
   363  039A  3445               	retlw	69
   364  039B  3446               	retlw	70
   365  039C  3400               	retlw	0
   366  039D                     __end_of_board_r1:	
   367  000E                     _TMR1	set	14
   368  0015                     _CCPR1	set	21
   369  0001                     _TMR0	set	1
   370  001E                     _ADRESH	set	30
   371  001F                     _ADCON0	set	31
   372  0006                     _PORTB	set	6
   373  0012                     _T2CON	set	18
   374  0005                     _PORTA	set	5
   375  0008                     _PORTD	set	8
   376  005A                     _T0IF	set	90
   377  00FB                     _CHS1	set	251
   378  0066                     _ADIF	set	102
   379  005E                     _PEIE	set	94
   380  005F                     _GIE	set	95
   381  0080                     _TMR1ON	set	128
   382  0086                     _TMR1GE	set	134
   383  0085                     _T1CKPS1	set	133
   384  0084                     _T1CKPS0	set	132
   385  0081                     _TMR1CS	set	129
   386  00B8                     _CCP1M0	set	184
   387  00B9                     _CCP1M1	set	185
   388  00BA                     _CCP1M2	set	186
   389  00BB                     _CCP1M3	set	187
   390  0062                     _CCP1IF	set	98
   391  00F9                     _GO	set	249
   392  0061                     _TMR2IF	set	97
   393  0081                     _OPTION_REG	set	129
   394  009E                     _ADRESL	set	158
   395  009F                     _ADCON1	set	159
   396  0086                     _TRISB	set	134
   397  0095                     _WPUB	set	149
   398  0092                     _PR2	set	146
   399  0085                     _TRISA	set	133
   400  0088                     _TRISD	set	136
   401  0466                     _ADIE	set	1126
   402  040F                     _nRBPU	set	1039
   403  0461                     _TMR2IE	set	1121
   404  0478                     _SCS	set	1144
   405  0189                     _ANSELH	set	393
   406  0188                     _ANSEL	set	392
   407                           
   408                           ; #config settings
   409  0000                     
   410                           	psect	cinit
   411  000F                     start_initialization:	
   412  000F                     __initialization:	
   413                           
   414                           ; Initialize objects allocated to BANK0
   415  000F  120A  118A  243F  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   416  0014  00B2               	movwf	__pdataBANK0& (0+127)
   417  0015  120A  118A  2440  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   418  001A  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   419  001B  120A  118A  2441  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   420  0020  00B4               	movwf	(__pdataBANK0+2)& (0+127)
   421  0021  120A  118A  2442  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   422  0026  00B5               	movwf	(__pdataBANK0+3)& (0+127)
   423                           
   424                           ; Clear objects allocated to BANK0
   425  0027  01A0               	clrf	__pbssBANK0& (0+127)
   426  0028  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   427  0029  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   428  002A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   429  002B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   430  002C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   431  002D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   432  002E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   433  002F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   434                           
   435                           ; Clear objects allocated to COMMON
   436  0030  01FA               	clrf	__pbssCOMMON& (0+127)
   437  0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   438  0032                     end_of_initialization:	
   439                           ;End of C runtime variable initialization code
   440                           
   441  0032                     __end_of__initialization:	
   442  0032  0183               	clrf	3
   443  0033  120A  118A  2ABE   	ljmp	_main	;jump to C main() function
   444                           
   445                           	psect	bssCOMMON
   446  007A                     __pbssCOMMON:	
   447  007A                     _cursor_movable:	
   448  007A                     	ds	1
   449  007B                     _cursor_pos:	
   450  007B                     	ds	1
   451                           
   452                           	psect	bssBANK0
   453  0020                     __pbssBANK0:	
   454  0020                     _joystick_y_pos:	
   455  0020                     	ds	2
   456  0022                     _joystick_x_pos:	
   457  0022                     	ds	2
   458  0024                     _cursor_fast:	
   459  0024                     	ds	1
   460  0025                     _cursor_move_delay_count:	
   461  0025                     	ds	1
   462  0026                     _delay_loops:	
   463  0026                     	ds	1
   464  0027                     _cursor_solid:	
   465  0027                     	ds	1
   466  0028                     _current_char:	
   467  0028                     	ds	1
   468                           
   469                           	psect	dataBANK0
   470  0032                     __pdataBANK0:	
   471  0032                     _scoreboard:	
   472  0032                     	ds	2
   473  0034                     _gameboard:	
   474  0034                     	ds	2
   475                           
   476                           	psect	cstackCOMMON
   477  0070                     __pcstackCOMMON:	
   478  0070                     ?_joystick_init:	
   479  0070                     ?_gameboard_init:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_update_gameboard_from_input:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_time_init:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_get_current_char:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_toggle_cursor:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_update_cursor:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_main:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_interrupt_handler:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_interrupt_handler:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_tmr0_init:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_Delay20us:	
   510                           ; 1 bytes @ 0x0
   511                           
   512                           
   513                           ; 1 bytes @ 0x0
   514  0070                     	ds	2
   515  0072                     ??_joystick_init:	
   516  0072                     ??_time_init:	
   517                           ; 1 bytes @ 0x2
   518                           
   519  0072                     ??_get_current_char:	
   520                           ; 1 bytes @ 0x2
   521                           
   522  0072                     ??_tmr0_init:	
   523                           ; 1 bytes @ 0x2
   524                           
   525  0072                     ?_DelayMs:	
   526                           ; 1 bytes @ 0x2
   527                           
   528  0072                     ??_Delay20us:	
   529                           ; 1 bytes @ 0x2
   530                           
   531  0072                     DelayMs@millis:	
   532                           ; 1 bytes @ 0x2
   533                           
   534                           
   535                           ; 2 bytes @ 0x2
   536  0072                     	ds	1
   537  0073                     Delay20us@next:	
   538                           
   539                           ; 1 bytes @ 0x3
   540  0073                     	ds	1
   541  0074                     ??_DelayMs:	
   542  0074                     ?_lcd_write:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0074                     lcd_write@CmdChar:	
   546                           ; 1 bytes @ 0x4
   547                           
   548                           
   549                           ; 1 bytes @ 0x4
   550  0074                     	ds	1
   551  0075                     lcd_write@port:	
   552                           
   553                           ; 2 bytes @ 0x5
   554  0075                     	ds	2
   555  0077                     ??_lcd_write:	
   556                           
   557                           ; 1 bytes @ 0x7
   558  0077                     	ds	2
   559  0079                     lcd_write@mode:	
   560                           
   561                           ; 1 bytes @ 0x9
   562  0079                     	ds	1
   563  007A                     ??_lcd_clear:	
   564  007A                     ??_toggle_cursor:	
   565                           ; 1 bytes @ 0xA
   566                           
   567  007A                     ??_main:	
   568                           ; 1 bytes @ 0xA
   569                           
   570                           
   571                           	psect	cstackBANK0
   572  0029                     __pcstackBANK0:	
   573                           ; 1 bytes @ 0xA
   574                           
   575  0029                     ?_lcd_clear:	
   576  0029                     ?_lcd_puts:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0029                     ?_lcd_goto:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0029                     ?_lcd_putch:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0029                     lcd_clear@port:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0029                     lcd_puts@port:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0029                     lcd_putch@port:	
   592                           ; 2 bytes @ 0x0
   593                           
   594  0029                     lcd_goto@port:	
   595                           ; 2 bytes @ 0x0
   596                           
   597                           
   598                           ; 2 bytes @ 0x0
   599  0029                     	ds	2
   600  002B                     ?_lcd_init:	
   601  002B                     ??_lcd_puts:	
   602                           ; 1 bytes @ 0x2
   603                           
   604  002B                     ??_lcd_goto:	
   605                           ; 1 bytes @ 0x2
   606                           
   607  002B                     ??_lcd_putch:	
   608                           ; 1 bytes @ 0x2
   609                           
   610  002B                     lcd_init@port:	
   611                           ; 1 bytes @ 0x2
   612                           
   613                           
   614                           ; 2 bytes @ 0x2
   615  002B                     	ds	1
   616  002C                     lcd_puts@string:	
   617  002C                     lcd_putch@character:	
   618                           ; 1 bytes @ 0x3
   619                           
   620  002C                     lcd_goto@position:	
   621                           ; 1 bytes @ 0x3
   622                           
   623                           
   624                           ; 1 bytes @ 0x3
   625  002C                     	ds	1
   626  002D                     ??_lcd_init:	
   627  002D                     ??_gameboard_init:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  002D                     ??_update_cursor:	
   631                           ; 1 bytes @ 0x4
   632                           
   633                           
   634                           ; 1 bytes @ 0x4
   635  002D                     	ds	1
   636  002E                     gameboard_init@cursor_init_pos:	
   637                           
   638                           ; 1 bytes @ 0x5
   639  002E                     	ds	1
   640  002F                     update_cursor@move_delay_count:	
   641                           
   642                           ; 1 bytes @ 0x6
   643  002F                     	ds	1
   644  0030                     ??_update_gameboard_from_input:	
   645                           
   646                           ; 1 bytes @ 0x7
   647  0030                     	ds	2
   648                           
   649                           	psect	maintext
   650  02BE                     __pmaintext:	
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 57 in file "concentration.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : B00/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0
   673 ;;      Totals:         0       0       0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels required when called:    6
   676 ;; This function calls:
   677 ;;		_gameboard_init
   678 ;;		_joystick_init
   679 ;;		_lcd_init
   680 ;;		_update_gameboard_from_input
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _main
   688  02BE                     _main:	
   689  02BE                     l1574:	
   690                           ;incstack = 0
   691                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   692                           
   693                           
   694                           ;concentration.c: 59:     SCS = 0;
   695  02BE  1683               	bsf	3,5	;RP0=1, select bank1
   696  02BF  1303               	bcf	3,6	;RP1=0, select bank1
   697  02C0  100F               	bcf	15,0	;volatile
   698  02C1                     l1576:	
   699                           
   700                           ;concentration.c: 61:     TRISD = 0;
   701  02C1  0188               	clrf	8	;volatile
   702                           
   703                           ;concentration.c: 62:     TRISA = 0;
   704  02C2  0185               	clrf	5	;volatile
   705                           
   706                           ;concentration.c: 63:     ANSEL = 0;
   707  02C3  1683               	bsf	3,5	;RP0=1, select bank3
   708  02C4  1703               	bsf	3,6	;RP1=1, select bank3
   709  02C5  0188               	clrf	8	;volatile
   710  02C6                     l1578:	
   711                           
   712                           ;concentration.c: 64:     lcd_init(gameboard);
   713  02C6  3008               	movlw	8
   714  02C7  1283               	bcf	3,5	;RP0=0, select bank0
   715  02C8  1303               	bcf	3,6	;RP1=0, select bank0
   716  02C9  00AB               	movwf	lcd_init@port
   717  02CA  3000               	movlw	0
   718  02CB  00AC               	movwf	lcd_init@port+1
   719  02CC  120A  118A  21F0  120A  118A  	fcall	_lcd_init
   720  02D1                     l1580:	
   721                           
   722                           ;concentration.c: 65:     lcd_init(scoreboard);
   723  02D1  3005               	movlw	5
   724  02D2  1283               	bcf	3,5	;RP0=0, select bank0
   725  02D3  1303               	bcf	3,6	;RP1=0, select bank0
   726  02D4  00AB               	movwf	lcd_init@port
   727  02D5  3000               	movlw	0
   728  02D6  00AC               	movwf	lcd_init@port+1
   729  02D7  120A  118A  21F0  120A  118A  	fcall	_lcd_init
   730  02DC                     l1582:	
   731                           
   732                           ;concentration.c: 66:     joystick_init();
   733  02DC  120A  118A  239D  120A  118A  	fcall	_joystick_init
   734  02E1                     l1584:	
   735                           
   736                           ;concentration.c: 67:     gameboard_init(0x45);
   737  02E1  3045               	movlw	69
   738  02E2  120A  118A  2189  120A  118A  	fcall	_gameboard_init
   739  02E7                     l1586:	
   740                           
   741                           ;concentration.c: 70:         update_gameboard_from_input();
   742  02E7  120A  118A  2036  120A  118A  	fcall	_update_gameboard_from_input
   743  02EC  2AE7               	goto	l1586
   744  02ED  120A  118A  280C   	ljmp	start
   745  02F0                     __end_of_main:	
   746                           
   747                           	psect	text1
   748  0036                     __ptext1:	
   749 ;; *************** function _update_gameboard_from_input *****************
   750 ;; Defined at:
   751 ;;		line 93 in file "concentration.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       2       0       0       0
   768 ;;      Totals:         0       2       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    5
   772 ;; This function calls:
   773 ;;		_toggle_cursor
   774 ;;		_update_cursor
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _update_gameboard_from_input
   782  0036                     _update_gameboard_from_input:	
   783  0036                     l1512:	
   784                           ;incstack = 0
   785                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
   786                           
   787                           
   788                           ;concentration.c: 95:     if(GO == 0) {
   789  0036  1283               	bcf	3,5	;RP0=0, select bank0
   790  0037  1303               	bcf	3,6	;RP1=0, select bank0
   791  0038  189F               	btfsc	31,1	;volatile
   792  0039  283B               	goto	u601
   793  003A  283C               	goto	u600
   794  003B                     u601:	
   795  003B  283D               	goto	l138
   796  003C                     u600:	
   797  003C                     l1514:	
   798                           
   799                           ;concentration.c: 96:         GO = 1;
   800  003C  149F               	bsf	31,1	;volatile
   801  003D                     l138:	
   802                           ;concentration.c: 97:     }
   803                           
   804                           
   805                           ;concentration.c: 99:     if(CCP1IF == 1) {
   806  003D  1D0C               	btfss	12,2	;volatile
   807  003E  2840               	goto	u611
   808  003F  2841               	goto	u610
   809  0040                     u611:	
   810  0040  2861               	goto	l1526
   811  0041                     u610:	
   812  0041                     l1516:	
   813                           
   814                           ;concentration.c: 100:         if(delay_loops == 0) {
   815  0041  0826               	movf	_delay_loops,w
   816  0042  1D03               	btfss	3,2
   817  0043  2845               	goto	u621
   818  0044  2846               	goto	u620
   819  0045                     u621:	
   820  0045  2850               	goto	l1522
   821  0046                     u620:	
   822  0046                     l1518:	
   823                           
   824                           ;concentration.c: 101:             delay_loops = 25;
   825  0046  3019               	movlw	25
   826  0047  00B0               	movwf	??_update_gameboard_from_input
   827  0048  0830               	movf	??_update_gameboard_from_input,w
   828  0049  00A6               	movwf	_delay_loops
   829  004A                     l1520:	
   830                           
   831                           ;concentration.c: 102:             toggle_cursor();
   832  004A  120A  118A  22F0  120A  118A  	fcall	_toggle_cursor
   833                           
   834                           ;concentration.c: 103:         } else {
   835  004F  2852               	goto	l141
   836  0050                     l1522:	
   837                           
   838                           ;concentration.c: 104:             delay_loops--;
   839  0050  3001               	movlw	1
   840  0051  02A6               	subwf	_delay_loops,f
   841  0052                     l141:	
   842                           ;concentration.c: 105:         }
   843                           
   844                           
   845                           ;concentration.c: 106:         CCPR1 = TMR1+50000;
   846  0052  1283               	bcf	3,5	;RP0=0, select bank0
   847  0053  1303               	bcf	3,6	;RP1=0, select bank0
   848  0054  080E               	movf	14,w	;volatile
   849  0055  3E50               	addlw	80
   850  0056  00B0               	movwf	??_update_gameboard_from_input
   851  0057  080F               	movf	15,w	;volatile
   852  0058  1803               	skipnc
   853  0059  3E01               	addlw	1
   854  005A  3EC3               	addlw	195
   855  005B  00B1               	movwf	??_update_gameboard_from_input+1
   856  005C  0830               	movf	??_update_gameboard_from_input,w
   857  005D  0095               	movwf	21	;volatile
   858  005E  0831               	movf	??_update_gameboard_from_input+1,w
   859  005F  0096               	movwf	22	;volatile
   860  0060                     l1524:	
   861                           
   862                           ;concentration.c: 107:         CCP1IF = 0;
   863  0060  110C               	bcf	12,2	;volatile
   864  0061                     l1526:	
   865                           
   866                           ;concentration.c: 110:     if(joystick_x_pos > 900) {
   867  0061  0823               	movf	_joystick_x_pos+1,w
   868  0062  3A80               	xorlw	128
   869  0063  00FF               	movwf	btemp+1
   870  0064  3083               	movlw	131
   871  0065  027F               	subwf	btemp+1,w
   872  0066  1D03               	skipz
   873  0067  286A               	goto	u635
   874  0068  3085               	movlw	133
   875  0069  0222               	subwf	_joystick_x_pos,w
   876  006A                     u635:	
   877  006A  1C03               	skipc
   878  006B  286D               	goto	u631
   879  006C  286E               	goto	u630
   880  006D                     u631:	
   881  006D  287C               	goto	l1534
   882  006E                     u630:	
   883  006E                     l1528:	
   884                           
   885                           ;concentration.c: 111:         if(cursor_movable) {
   886  006E  087A               	movf	_cursor_movable,w
   887  006F  1903               	btfsc	3,2
   888  0070  2872               	goto	u641
   889  0071  2873               	goto	u640
   890  0072                     u641:	
   891  0072  291F               	goto	l160
   892  0073                     u640:	
   893  0073                     l1530:	
   894                           
   895                           ;concentration.c: 112:             cursor_pos--;
   896  0073  3001               	movlw	1
   897  0074  02FB               	subwf	_cursor_pos,f
   898  0075                     l1532:	
   899                           
   900                           ;concentration.c: 113:             update_cursor(30);
   901  0075  301E               	movlw	30
   902  0076  120A  118A  2120  120A  118A  	fcall	_update_cursor
   903  007B  291F               	goto	l160
   904  007C                     l1534:	
   905  007C  1283               	bcf	3,5	;RP0=0, select bank0
   906  007D  1303               	bcf	3,6	;RP1=0, select bank0
   907  007E  0823               	movf	_joystick_x_pos+1,w
   908  007F  3A80               	xorlw	128
   909  0080  00FF               	movwf	btemp+1
   910  0081  3080               	movlw	128
   911  0082  027F               	subwf	btemp+1,w
   912  0083  1D03               	skipz
   913  0084  2887               	goto	u655
   914  0085  3064               	movlw	100
   915  0086  0222               	subwf	_joystick_x_pos,w
   916  0087                     u655:	
   917  0087  1803               	skipnc
   918  0088  288A               	goto	u651
   919  0089  288B               	goto	u650
   920  008A                     u651:	
   921  008A  289D               	goto	l1542
   922  008B                     u650:	
   923  008B                     l1536:	
   924                           
   925                           ;concentration.c: 116:         if(cursor_movable) {
   926  008B  087A               	movf	_cursor_movable,w
   927  008C  1903               	btfsc	3,2
   928  008D  288F               	goto	u661
   929  008E  2890               	goto	u660
   930  008F                     u661:	
   931  008F  291F               	goto	l160
   932  0090                     u660:	
   933  0090                     l1538:	
   934                           
   935                           ;concentration.c: 117:             cursor_pos++;
   936  0090  3001               	movlw	1
   937  0091  1283               	bcf	3,5	;RP0=0, select bank0
   938  0092  1303               	bcf	3,6	;RP1=0, select bank0
   939  0093  00B0               	movwf	??_update_gameboard_from_input
   940  0094  0830               	movf	??_update_gameboard_from_input,w
   941  0095  07FB               	addwf	_cursor_pos,f
   942  0096                     l1540:	
   943                           
   944                           ;concentration.c: 118:             update_cursor(30);
   945  0096  301E               	movlw	30
   946  0097  120A  118A  2120  120A  118A  	fcall	_update_cursor
   947  009C  291F               	goto	l160
   948  009D                     l1542:	
   949  009D  1283               	bcf	3,5	;RP0=0, select bank0
   950  009E  1303               	bcf	3,6	;RP1=0, select bank0
   951  009F  0823               	movf	_joystick_x_pos+1,w
   952  00A0  3A80               	xorlw	128
   953  00A1  00FF               	movwf	btemp+1
   954  00A2  3082               	movlw	130
   955  00A3  027F               	subwf	btemp+1,w
   956  00A4  1D03               	skipz
   957  00A5  28A8               	goto	u675
   958  00A6  3059               	movlw	89
   959  00A7  0222               	subwf	_joystick_x_pos,w
   960  00A8                     u675:	
   961  00A8  1C03               	skipc
   962  00A9  28AB               	goto	u671
   963  00AA  28AC               	goto	u670
   964  00AB                     u671:	
   965  00AB  28BA               	goto	l1550
   966  00AC                     u670:	
   967  00AC                     l1544:	
   968                           
   969                           ;concentration.c: 121:         if(cursor_movable) {
   970  00AC  087A               	movf	_cursor_movable,w
   971  00AD  1903               	btfsc	3,2
   972  00AE  28B0               	goto	u681
   973  00AF  28B1               	goto	u680
   974  00B0                     u681:	
   975  00B0  291F               	goto	l160
   976  00B1                     u680:	
   977  00B1                     l1546:	
   978                           
   979                           ;concentration.c: 122:             cursor_pos--;
   980  00B1  3001               	movlw	1
   981  00B2  02FB               	subwf	_cursor_pos,f
   982  00B3                     l1548:	
   983                           
   984                           ;concentration.c: 123:             update_cursor(60);
   985  00B3  303C               	movlw	60
   986  00B4  120A  118A  2120  120A  118A  	fcall	_update_cursor
   987  00B9  291F               	goto	l160
   988  00BA                     l1550:	
   989  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   990  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   991  00BC  0823               	movf	_joystick_x_pos+1,w
   992  00BD  3A80               	xorlw	128
   993  00BE  00FF               	movwf	btemp+1
   994  00BF  3081               	movlw	129
   995  00C0  027F               	subwf	btemp+1,w
   996  00C1  1D03               	skipz
   997  00C2  28C5               	goto	u695
   998  00C3  3090               	movlw	144
   999  00C4  0222               	subwf	_joystick_x_pos,w
  1000  00C5                     u695:	
  1001  00C5  1803               	skipnc
  1002  00C6  28C8               	goto	u691
  1003  00C7  28C9               	goto	u690
  1004  00C8                     u691:	
  1005  00C8  28DB               	goto	l1558
  1006  00C9                     u690:	
  1007  00C9                     l1552:	
  1008                           
  1009                           ;concentration.c: 126:         if(cursor_movable) {
  1010  00C9  087A               	movf	_cursor_movable,w
  1011  00CA  1903               	btfsc	3,2
  1012  00CB  28CD               	goto	u701
  1013  00CC  28CE               	goto	u700
  1014  00CD                     u701:	
  1015  00CD  291F               	goto	l160
  1016  00CE                     u700:	
  1017  00CE                     l1554:	
  1018                           
  1019                           ;concentration.c: 127:             cursor_pos++;
  1020  00CE  3001               	movlw	1
  1021  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1022  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1023  00D1  00B0               	movwf	??_update_gameboard_from_input
  1024  00D2  0830               	movf	??_update_gameboard_from_input,w
  1025  00D3  07FB               	addwf	_cursor_pos,f
  1026  00D4                     l1556:	
  1027                           
  1028                           ;concentration.c: 128:             update_cursor(60);
  1029  00D4  303C               	movlw	60
  1030  00D5  120A  118A  2120  120A  118A  	fcall	_update_cursor
  1031  00DA  291F               	goto	l160
  1032  00DB                     l1558:	
  1033  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00DD  0821               	movf	_joystick_y_pos+1,w
  1036  00DE  3A80               	xorlw	128
  1037  00DF  00FF               	movwf	btemp+1
  1038  00E0  3082               	movlw	130
  1039  00E1  027F               	subwf	btemp+1,w
  1040  00E2  1D03               	skipz
  1041  00E3  28E6               	goto	u715
  1042  00E4  30BD               	movlw	189
  1043  00E5  0220               	subwf	_joystick_y_pos,w
  1044  00E6                     u715:	
  1045  00E6  1C03               	skipc
  1046  00E7  28E9               	goto	u711
  1047  00E8  28EA               	goto	u710
  1048  00E9                     u711:	
  1049  00E9  28FC               	goto	l1566
  1050  00EA                     u710:	
  1051  00EA                     l1560:	
  1052                           
  1053                           ;concentration.c: 131:         if(cursor_movable) {
  1054  00EA  087A               	movf	_cursor_movable,w
  1055  00EB  1903               	btfsc	3,2
  1056  00EC  28EE               	goto	u721
  1057  00ED  28EF               	goto	u720
  1058  00EE                     u721:	
  1059  00EE  291F               	goto	l160
  1060  00EF                     u720:	
  1061  00EF                     l1562:	
  1062                           
  1063                           ;concentration.c: 132:             cursor_pos ^= 0x40;
  1064  00EF  3040               	movlw	64
  1065  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1066  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1067  00F2  00B0               	movwf	??_update_gameboard_from_input
  1068  00F3  0830               	movf	??_update_gameboard_from_input,w
  1069  00F4  06FB               	xorwf	_cursor_pos,f
  1070  00F5                     l1564:	
  1071                           
  1072                           ;concentration.c: 133:             update_cursor(62);
  1073  00F5  303E               	movlw	62
  1074  00F6  120A  118A  2120  120A  118A  	fcall	_update_cursor
  1075  00FB  291F               	goto	l160
  1076  00FC                     l1566:	
  1077  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1078  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1079  00FE  0821               	movf	_joystick_y_pos+1,w
  1080  00FF  3A80               	xorlw	128
  1081  0100  00FF               	movwf	btemp+1
  1082  0101  3081               	movlw	129
  1083  0102  027F               	subwf	btemp+1,w
  1084  0103  1D03               	skipz
  1085  0104  2907               	goto	u735
  1086  0105  302C               	movlw	44
  1087  0106  0220               	subwf	_joystick_y_pos,w
  1088  0107                     u735:	
  1089  0107  1803               	skipnc
  1090  0108  290A               	goto	u731
  1091  0109  290B               	goto	u730
  1092  010A                     u731:	
  1093  010A  291D               	goto	l157
  1094  010B                     u730:	
  1095  010B                     l1568:	
  1096                           
  1097                           ;concentration.c: 136:         if(cursor_movable) {
  1098  010B  087A               	movf	_cursor_movable,w
  1099  010C  1903               	btfsc	3,2
  1100  010D  290F               	goto	u741
  1101  010E  2910               	goto	u740
  1102  010F                     u741:	
  1103  010F  291F               	goto	l160
  1104  0110                     u740:	
  1105  0110                     l1570:	
  1106                           
  1107                           ;concentration.c: 137:             cursor_pos ^= 0x40;
  1108  0110  3040               	movlw	64
  1109  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0113  00B0               	movwf	??_update_gameboard_from_input
  1112  0114  0830               	movf	??_update_gameboard_from_input,w
  1113  0115  06FB               	xorwf	_cursor_pos,f
  1114  0116                     l1572:	
  1115                           
  1116                           ;concentration.c: 138:             update_cursor(62);
  1117  0116  303E               	movlw	62
  1118  0117  120A  118A  2120  120A  118A  	fcall	_update_cursor
  1119  011C  291F               	goto	l160
  1120  011D                     l157:	
  1121                           
  1122                           ;concentration.c: 141:         cursor_movable = 1;
  1123  011D  01FA               	clrf	_cursor_movable
  1124  011E  0AFA               	incf	_cursor_movable,f
  1125  011F                     l160:	
  1126  011F  0008               	return
  1127  0120                     __end_of_update_gameboard_from_input:	
  1128                           
  1129                           	psect	text2
  1130  0120                     __ptext2:	
  1131 ;; *************** function _update_cursor *****************
  1132 ;; Defined at:
  1133 ;;		line 145 in file "concentration.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  move_delay_c    1    wreg     unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  move_delay_c    1    6[BANK0 ] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       1       0       0       0
  1149 ;;      Temps:          0       2       0       0       0
  1150 ;;      Totals:         0       3       0       0       0
  1151 ;;Total ram usage:        3 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    4
  1154 ;; This function calls:
  1155 ;;		_get_current_char
  1156 ;;		_lcd_goto
  1157 ;;		_lcd_putch
  1158 ;; This function is called by:
  1159 ;;		_update_gameboard_from_input
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _update_cursor
  1165  0120                     _update_cursor:	
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1169                           ;update_cursor@move_delay_count stored from wreg
  1170  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0122  00AF               	movwf	update_cursor@move_delay_count
  1173  0123                     l1438:	
  1174                           
  1175                           ;concentration.c: 146:     cursor_movable = 0;
  1176  0123  01FA               	clrf	_cursor_movable
  1177  0124                     l1440:	
  1178                           
  1179                           ;concentration.c: 147:     cursor_move_delay_count = move_delay_count;
  1180  0124  082F               	movf	update_cursor@move_delay_count,w
  1181  0125  00AD               	movwf	??_update_cursor
  1182  0126  082D               	movf	??_update_cursor,w
  1183  0127  00A5               	movwf	_cursor_move_delay_count
  1184                           
  1185                           ;concentration.c: 148:     switch(cursor_pos) {
  1186  0128  293A               	goto	l1452
  1187  0129                     l1442:	
  1188                           
  1189                           ;concentration.c: 150:             cursor_pos = 0x00;
  1190  0129  01FB               	clrf	_cursor_pos
  1191                           
  1192                           ;concentration.c: 151:             break;
  1193  012A  2950               	goto	l1454
  1194  012B                     l1444:	
  1195                           
  1196                           ;concentration.c: 153:             cursor_pos = 0x40;
  1197  012B  3040               	movlw	64
  1198  012C  00AD               	movwf	??_update_cursor
  1199  012D  082D               	movf	??_update_cursor,w
  1200  012E  00FB               	movwf	_cursor_pos
  1201                           
  1202                           ;concentration.c: 154:             break;
  1203  012F  2950               	goto	l1454
  1204  0130                     l1446:	
  1205                           
  1206                           ;concentration.c: 156:             cursor_pos = 0x0F;
  1207  0130  300F               	movlw	15
  1208  0131  00AD               	movwf	??_update_cursor
  1209  0132  082D               	movf	??_update_cursor,w
  1210  0133  00FB               	movwf	_cursor_pos
  1211                           
  1212                           ;concentration.c: 157:             break;
  1213  0134  2950               	goto	l1454
  1214  0135                     l1448:	
  1215                           
  1216                           ;concentration.c: 159:             cursor_pos = 0x4F;
  1217  0135  304F               	movlw	79
  1218  0136  00AD               	movwf	??_update_cursor
  1219  0137  082D               	movf	??_update_cursor,w
  1220  0138  00FB               	movwf	_cursor_pos
  1221                           
  1222                           ;concentration.c: 160:             break;
  1223  0139  2950               	goto	l1454
  1224  013A                     l1452:	
  1225  013A  087B               	movf	_cursor_pos,w
  1226  013B  00AD               	movwf	??_update_cursor
  1227  013C  01AE               	clrf	??_update_cursor+1
  1228                           
  1229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1230                           ; Switch size 1, requested type "simple"
  1231                           ; Number of cases is 1, Range of values is 0 to 0
  1232                           ; switch strategies available:
  1233                           ; Name         Instructions Cycles
  1234                           ; simple_byte            4     3 (average)
  1235                           ; direct_byte           11     8 (fixed)
  1236                           ; jumptable            260     6 (fixed)
  1237                           ;	Chosen strategy is simple_byte
  1238  013D  082E               	movf	??_update_cursor+1,w
  1239  013E  3A00               	xorlw	0	; case 0
  1240  013F  1903               	skipnz
  1241  0140  2942               	goto	l1618
  1242  0141  2950               	goto	l1454
  1243  0142                     l1618:	
  1244                           
  1245                           ; Switch size 1, requested type "simple"
  1246                           ; Number of cases is 4, Range of values is 16 to 255
  1247                           ; switch strategies available:
  1248                           ; Name         Instructions Cycles
  1249                           ; simple_byte           13     7 (average)
  1250                           ; jumptable            263     9 (fixed)
  1251                           ;	Chosen strategy is simple_byte
  1252  0142  082D               	movf	??_update_cursor,w
  1253  0143  3A10               	xorlw	16	; case 16
  1254  0144  1903               	skipnz
  1255  0145  2929               	goto	l1442
  1256  0146  3A2F               	xorlw	47	; case 63
  1257  0147  1903               	skipnz
  1258  0148  2935               	goto	l1448
  1259  0149  3A6F               	xorlw	111	; case 80
  1260  014A  1903               	skipnz
  1261  014B  292B               	goto	l1444
  1262  014C  3AAF               	xorlw	175	; case 255
  1263  014D  1903               	skipnz
  1264  014E  2930               	goto	l1446
  1265  014F  2950               	goto	l1454
  1266  0150                     l1454:	
  1267                           
  1268                           ;concentration.c: 162:     lcd_putch(current_char, gameboard);
  1269  0150  3008               	movlw	8
  1270  0151  00A9               	movwf	lcd_putch@port
  1271  0152  3000               	movlw	0
  1272  0153  00AA               	movwf	lcd_putch@port+1
  1273  0154  0828               	movf	_current_char,w
  1274  0155  120A  118A  240D  120A  118A  	fcall	_lcd_putch
  1275                           
  1276                           ;concentration.c: 163:     lcd_goto(cursor_pos, gameboard);
  1277  015A  3008               	movlw	8
  1278  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1279  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1280  015D  00A9               	movwf	lcd_goto@port
  1281  015E  3000               	movlw	0
  1282  015F  00AA               	movwf	lcd_goto@port+1
  1283  0160  087B               	movf	_cursor_pos,w
  1284  0161  120A  118A  23C2  120A  118A  	fcall	_lcd_goto
  1285                           
  1286                           ;concentration.c: 164:     get_current_char();
  1287  0166  120A  118A  231E  120A  118A  	fcall	_get_current_char
  1288  016B                     l1456:	
  1289                           
  1290                           ;concentration.c: 165:     if(cursor_solid == 1) {
  1291  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1292  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1293  016D  0327               	decf	_cursor_solid,w
  1294  016E  1D03               	btfss	3,2
  1295  016F  2971               	goto	u591
  1296  0170  2972               	goto	u590
  1297  0171                     u591:	
  1298  0171  2988               	goto	l170
  1299  0172                     u590:	
  1300  0172                     l1458:	
  1301                           
  1302                           ;concentration.c: 166:         lcd_putch(0xFF, gameboard);
  1303  0172  3008               	movlw	8
  1304  0173  00A9               	movwf	lcd_putch@port
  1305  0174  3000               	movlw	0
  1306  0175  00AA               	movwf	lcd_putch@port+1
  1307  0176  30FF               	movlw	255
  1308  0177  120A  118A  240D  120A  118A  	fcall	_lcd_putch
  1309                           
  1310                           ;concentration.c: 167:         lcd_goto(cursor_pos, gameboard);
  1311  017C  3008               	movlw	8
  1312  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1313  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1314  017F  00A9               	movwf	lcd_goto@port
  1315  0180  3000               	movlw	0
  1316  0181  00AA               	movwf	lcd_goto@port+1
  1317  0182  087B               	movf	_cursor_pos,w
  1318  0183  120A  118A  23C2  120A  118A  	fcall	_lcd_goto
  1319  0188                     l170:	
  1320  0188  0008               	return
  1321  0189                     __end_of_update_cursor:	
  1322                           
  1323                           	psect	text3
  1324  02F0                     __ptext3:	
  1325 ;; *************** function _toggle_cursor *****************
  1326 ;; Defined at:
  1327 ;;		line 171 in file "concentration.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    4
  1348 ;; This function calls:
  1349 ;;		_lcd_goto
  1350 ;;		_lcd_putch
  1351 ;; This function is called by:
  1352 ;;		_update_gameboard_from_input
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _toggle_cursor
  1358  02F0                     _toggle_cursor:	
  1359  02F0                     l1426:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1362                           
  1363                           
  1364                           ;concentration.c: 172:     if(cursor_solid == 0) {
  1365  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1366  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1367  02F2  0827               	movf	_cursor_solid,w
  1368  02F3  1D03               	btfss	3,2
  1369  02F4  2AF6               	goto	u581
  1370  02F5  2AF7               	goto	u580
  1371  02F6                     u581:	
  1372  02F6  2B06               	goto	l1432
  1373  02F7                     u580:	
  1374  02F7                     l1428:	
  1375                           
  1376                           ;concentration.c: 173:         lcd_putch(0xFF, gameboard);
  1377  02F7  3008               	movlw	8
  1378  02F8  00A9               	movwf	lcd_putch@port
  1379  02F9  3000               	movlw	0
  1380  02FA  00AA               	movwf	lcd_putch@port+1
  1381  02FB  30FF               	movlw	255
  1382  02FC  120A  118A  240D  120A  118A  	fcall	_lcd_putch
  1383  0301                     l1430:	
  1384                           
  1385                           ;concentration.c: 174:         cursor_solid = 1;
  1386  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0303  01A7               	clrf	_cursor_solid
  1389  0304  0AA7               	incf	_cursor_solid,f
  1390                           
  1391                           ;concentration.c: 175:     } else {
  1392  0305  2B13               	goto	l1436
  1393  0306                     l1432:	
  1394                           
  1395                           ;concentration.c: 176:         lcd_putch(current_char, gameboard);
  1396  0306  3008               	movlw	8
  1397  0307  00A9               	movwf	lcd_putch@port
  1398  0308  3000               	movlw	0
  1399  0309  00AA               	movwf	lcd_putch@port+1
  1400  030A  0828               	movf	_current_char,w
  1401  030B  120A  118A  240D  120A  118A  	fcall	_lcd_putch
  1402  0310                     l1434:	
  1403                           
  1404                           ;concentration.c: 177:         cursor_solid = 0;
  1405  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0312  01A7               	clrf	_cursor_solid
  1408  0313                     l1436:	
  1409                           
  1410                           ;concentration.c: 179:     lcd_goto(cursor_pos, gameboard);
  1411  0313  3008               	movlw	8
  1412  0314  00A9               	movwf	lcd_goto@port
  1413  0315  3000               	movlw	0
  1414  0316  00AA               	movwf	lcd_goto@port+1
  1415  0317  087B               	movf	_cursor_pos,w
  1416  0318  120A  118A  23C2  120A  118A  	fcall	_lcd_goto
  1417  031D                     l175:	
  1418  031D  0008               	return
  1419  031E                     __end_of_toggle_cursor:	
  1420                           
  1421                           	psect	text4
  1422  040D                     __ptext4:	
  1423 ;; *************** function _lcd_putch *****************
  1424 ;; Defined at:
  1425 ;;		line 136 in file "lcd4bits.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  character       1    wreg     unsigned char 
  1428 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1429 ;;		 -> PORTD(1), 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  character       1    3[BANK0 ] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       2       0       0       0
  1442 ;;      Locals:         0       1       0       0       0
  1443 ;;      Temps:          0       1       0       0       0
  1444 ;;      Totals:         0       4       0       0       0
  1445 ;;Total ram usage:        4 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    3
  1448 ;; This function calls:
  1449 ;;		_lcd_write
  1450 ;; This function is called by:
  1451 ;;		_update_cursor
  1452 ;;		_toggle_cursor
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _lcd_putch
  1458  040D                     _lcd_putch:	
  1459                           
  1460                           ;incstack = 0
  1461                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1462                           ;lcd_putch@character stored from wreg
  1463  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1464  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1465  040F  00AC               	movwf	lcd_putch@character
  1466  0410                     l1412:	
  1467                           
  1468                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  1469  0410  082C               	movf	lcd_putch@character,w
  1470  0411  00AB               	movwf	??_lcd_putch
  1471  0412  082B               	movf	??_lcd_putch,w
  1472  0413  00F4               	movwf	lcd_write@CmdChar
  1473  0414  0829               	movf	lcd_putch@port,w
  1474  0415  00F5               	movwf	lcd_write@port
  1475  0416  082A               	movf	lcd_putch@port+1,w
  1476  0417  00F6               	movwf	lcd_write@port+1
  1477  0418  3010               	movlw	16
  1478  0419  120A  118A  2242  120A  118A  	fcall	_lcd_write
  1479  041E                     l234:	
  1480  041E  0008               	return
  1481  041F                     __end_of_lcd_putch:	
  1482                           
  1483                           	psect	text5
  1484  01F0                     __ptext5:	
  1485 ;; *************** function _lcd_init *****************
  1486 ;; Defined at:
  1487 ;;		line 155 in file "lcd4bits.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  port            2    2[BANK0 ] PTR unsigned char 
  1490 ;;		 -> PORTA(1), PORTD(1), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       2       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          0       1       0       0       0
  1505 ;;      Totals:         0       3       0       0       0
  1506 ;;Total ram usage:        3 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    4
  1509 ;; This function calls:
  1510 ;;		_DelayMs
  1511 ;;		_lcd_clear
  1512 ;;		_lcd_write
  1513 ;;		_tmr0_init
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _lcd_init
  1521  01F0                     _lcd_init:	
  1522  01F0                     l1466:	
  1523                           ;incstack = 0
  1524                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1525                           
  1526                           
  1527                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  1528  01F0  120A  118A  2437  120A  118A  	fcall	_tmr0_init
  1529  01F5                     l1468:	
  1530                           
  1531                           ;lcd4bits.c: 158:     *port = 0;
  1532  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1533  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1534  01F7  082B               	movf	lcd_init@port,w
  1535  01F8  0084               	movwf	4
  1536  01F9  1783               	bsf	3,7
  1537  01FA  1C2C               	btfss	lcd_init@port+1,0
  1538  01FB  1383               	bcf	3,7
  1539  01FC  0180               	clrf	0
  1540  01FD                     l1470:	
  1541                           
  1542                           ;lcd4bits.c: 159:     DelayMs(15);
  1543  01FD  300F               	movlw	15
  1544  01FE  00F2               	movwf	DelayMs@millis
  1545  01FF  3000               	movlw	0
  1546  0200  00F3               	movwf	DelayMs@millis+1
  1547  0201  120A  118A  23F6  120A  118A  	fcall	_DelayMs
  1548  0206                     l1472:	
  1549                           
  1550                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  1551  0206  3028               	movlw	40
  1552  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0209  00AD               	movwf	??_lcd_init
  1555  020A  082D               	movf	??_lcd_init,w
  1556  020B  00F4               	movwf	lcd_write@CmdChar
  1557  020C  082B               	movf	lcd_init@port,w
  1558  020D  00F5               	movwf	lcd_write@port
  1559  020E  082C               	movf	lcd_init@port+1,w
  1560  020F  00F6               	movwf	lcd_write@port+1
  1561  0210  3000               	movlw	0
  1562  0211  120A  118A  2242  120A  118A  	fcall	_lcd_write
  1563  0216                     l1474:	
  1564                           
  1565                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  1566  0216  300C               	movlw	12
  1567  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0219  00AD               	movwf	??_lcd_init
  1570  021A  082D               	movf	??_lcd_init,w
  1571  021B  00F4               	movwf	lcd_write@CmdChar
  1572  021C  082B               	movf	lcd_init@port,w
  1573  021D  00F5               	movwf	lcd_write@port
  1574  021E  082C               	movf	lcd_init@port+1,w
  1575  021F  00F6               	movwf	lcd_write@port+1
  1576  0220  3000               	movlw	0
  1577  0221  120A  118A  2242  120A  118A  	fcall	_lcd_write
  1578  0226                     l1476:	
  1579                           
  1580                           ;lcd4bits.c: 162:     lcd_clear(port);
  1581  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0228  082B               	movf	lcd_init@port,w
  1584  0229  00A9               	movwf	lcd_clear@port
  1585  022A  082C               	movf	lcd_init@port+1,w
  1586  022B  00AA               	movwf	lcd_clear@port+1
  1587  022C  120A  118A  23DE  120A  118A  	fcall	_lcd_clear
  1588  0231                     l1478:	
  1589                           
  1590                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  1591  0231  3006               	movlw	6
  1592  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0234  00AD               	movwf	??_lcd_init
  1595  0235  082D               	movf	??_lcd_init,w
  1596  0236  00F4               	movwf	lcd_write@CmdChar
  1597  0237  082B               	movf	lcd_init@port,w
  1598  0238  00F5               	movwf	lcd_write@port
  1599  0239  082C               	movf	lcd_init@port+1,w
  1600  023A  00F6               	movwf	lcd_write@port+1
  1601  023B  3000               	movlw	0
  1602  023C  120A  118A  2242  120A  118A  	fcall	_lcd_write
  1603  0241                     l240:	
  1604  0241  0008               	return
  1605  0242                     __end_of_lcd_init:	
  1606                           
  1607                           	psect	text6
  1608  0437                     __ptext6:	
  1609 ;; *************** function _tmr0_init *****************
  1610 ;; Defined at:
  1611 ;;		line 72 in file "lcd4bits.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0
  1627 ;;      Temps:          1       0       0       0       0
  1628 ;;      Totals:         1       0       0       0       0
  1629 ;;Total ram usage:        1 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    1
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_lcd_init
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _tmr0_init
  1641  0437                     _tmr0_init:	
  1642  0437                     l926:	
  1643                           ;incstack = 0
  1644                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  1645                           
  1646                           
  1647                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  1648  0437  30C0               	movlw	192
  1649  0438  00F2               	movwf	??_tmr0_init
  1650  0439  0872               	movf	??_tmr0_init,w
  1651  043A  1683               	bsf	3,5	;RP0=1, select bank1
  1652  043B  1303               	bcf	3,6	;RP1=0, select bank1
  1653  043C  0581               	andwf	1,f	;volatile
  1654  043D                     l928:	
  1655                           
  1656                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  1657  043D  1501               	bsf	1,2	;volatile
  1658  043E                     l205:	
  1659  043E  0008               	return
  1660  043F                     __end_of_tmr0_init:	
  1661                           
  1662                           	psect	text7
  1663  039D                     __ptext7:	
  1664 ;; *************** function _joystick_init *****************
  1665 ;; Defined at:
  1666 ;;		line 204 in file "concentration.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    1
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _joystick_init
  1696  039D                     _joystick_init:	
  1697  039D                     l1226:	
  1698                           ;incstack = 0
  1699                           ; Regs used in _joystick_init: [wreg+status,2]
  1700                           
  1701                           
  1702                           ;concentration.c: 205:     joystick_x_pos = 512;
  1703  039D  3000               	movlw	0
  1704  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1705  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1706  03A0  00A2               	movwf	_joystick_x_pos
  1707  03A1  3002               	movlw	2
  1708  03A2  00A3               	movwf	_joystick_x_pos+1
  1709                           
  1710                           ;concentration.c: 206:     joystick_y_pos = 512;
  1711  03A3  3000               	movlw	0
  1712  03A4  00A0               	movwf	_joystick_y_pos
  1713  03A5  3002               	movlw	2
  1714  03A6  00A1               	movwf	_joystick_y_pos+1
  1715  03A7                     l1228:	
  1716                           
  1717                           ;concentration.c: 207:     PORTB = 0;
  1718  03A7  0186               	clrf	6	;volatile
  1719  03A8                     l1230:	
  1720                           
  1721                           ;concentration.c: 208:     nRBPU = 0;
  1722  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1723  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1724  03AA  1381               	bcf	1,7	;volatile
  1725  03AB                     l1232:	
  1726                           
  1727                           ;concentration.c: 209:     WPUB = 0x20;
  1728  03AB  3020               	movlw	32
  1729  03AC  0095               	movwf	21	;volatile
  1730  03AD                     l1234:	
  1731                           
  1732                           ;concentration.c: 210:     TRISB = 0x38;
  1733  03AD  3038               	movlw	56
  1734  03AE  0086               	movwf	6	;volatile
  1735  03AF                     l1236:	
  1736                           
  1737                           ;concentration.c: 211:     ANSELH = 0x0A;
  1738  03AF  300A               	movlw	10
  1739  03B0  1683               	bsf	3,5	;RP0=1, select bank3
  1740  03B1  1703               	bsf	3,6	;RP1=1, select bank3
  1741  03B2  0089               	movwf	9	;volatile
  1742  03B3                     l1238:	
  1743                           
  1744                           ;concentration.c: 212:     GIE = 1;
  1745  03B3  178B               	bsf	11,7	;volatile
  1746  03B4                     l1240:	
  1747                           
  1748                           ;concentration.c: 213:     PEIE = 1;
  1749  03B4  170B               	bsf	11,6	;volatile
  1750  03B5                     l1242:	
  1751                           
  1752                           ;concentration.c: 214:     ADIF = 0;
  1753  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1754  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1755  03B7  130C               	bcf	12,6	;volatile
  1756  03B8                     l1244:	
  1757                           
  1758                           ;concentration.c: 215:     ADIE = 1;
  1759  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1760  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1761  03BA  170C               	bsf	12,6	;volatile
  1762  03BB                     l1246:	
  1763                           
  1764                           ;concentration.c: 216:     ADCON1 = 0x80;
  1765  03BB  3080               	movlw	128
  1766  03BC  009F               	movwf	31	;volatile
  1767  03BD                     l1248:	
  1768                           
  1769                           ;concentration.c: 217:     ADCON0 = 0xA5;
  1770  03BD  30A5               	movlw	165
  1771  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1772  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1773  03C0  009F               	movwf	31	;volatile
  1774  03C1                     l186:	
  1775  03C1  0008               	return
  1776  03C2                     __end_of_joystick_init:	
  1777                           
  1778                           	psect	text8
  1779  0189                     __ptext8:	
  1780 ;; *************** function _gameboard_init *****************
  1781 ;; Defined at:
  1782 ;;		line 74 in file "concentration.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  cursor_init_    1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  cursor_init_    1    5[BANK0 ] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         0       0       0       0       0
  1797 ;;      Locals:         0       1       0       0       0
  1798 ;;      Temps:          0       1       0       0       0
  1799 ;;      Totals:         0       2       0       0       0
  1800 ;;Total ram usage:        2 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    4
  1803 ;; This function calls:
  1804 ;;		_get_current_char
  1805 ;;		_lcd_clear
  1806 ;;		_lcd_goto
  1807 ;;		_lcd_puts
  1808 ;;		_time_init
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _gameboard_init
  1816  0189                     _gameboard_init:	
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1820                           ;gameboard_init@cursor_init_pos stored from wreg
  1821  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1822  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1823  018B  00AE               	movwf	gameboard_init@cursor_init_pos
  1824  018C                     l1480:	
  1825                           
  1826                           ;concentration.c: 75:     time_init();
  1827  018C  120A  118A  241F  120A  118A  	fcall	_time_init
  1828  0191                     l1482:	
  1829                           
  1830                           ;concentration.c: 76:     lcd_clear(gameboard);
  1831  0191  3008               	movlw	8
  1832  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0194  00A9               	movwf	lcd_clear@port
  1835  0195  3000               	movlw	0
  1836  0196  00AA               	movwf	lcd_clear@port+1
  1837  0197  120A  118A  23DE  120A  118A  	fcall	_lcd_clear
  1838  019C                     l1484:	
  1839                           
  1840                           ;concentration.c: 77:     lcd_puts(board_r1, gameboard);
  1841  019C  3008               	movlw	8
  1842  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1843  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1844  019F  00A9               	movwf	lcd_puts@port
  1845  01A0  3000               	movlw	0
  1846  01A1  00AA               	movwf	lcd_puts@port+1
  1847  01A2  3012               	movlw	(low ((_board_r1-__stringbase)| (0+32768)))& (0+255)
  1848  01A3  120A  118A  234A  120A  118A  	fcall	_lcd_puts
  1849  01A8                     l1486:	
  1850                           
  1851                           ;concentration.c: 78:     lcd_goto(0x40, gameboard);
  1852  01A8  3008               	movlw	8
  1853  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1854  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1855  01AB  00A9               	movwf	lcd_goto@port
  1856  01AC  3000               	movlw	0
  1857  01AD  00AA               	movwf	lcd_goto@port+1
  1858  01AE  3040               	movlw	64
  1859  01AF  120A  118A  23C2  120A  118A  	fcall	_lcd_goto
  1860  01B4                     l1488:	
  1861                           
  1862                           ;concentration.c: 79:     lcd_puts(board_r2, gameboard);
  1863  01B4  3008               	movlw	8
  1864  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1865  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1866  01B7  00A9               	movwf	lcd_puts@port
  1867  01B8  3000               	movlw	0
  1868  01B9  00AA               	movwf	lcd_puts@port+1
  1869  01BA  3001               	movlw	(low ((_board_r2-__stringbase)| (0+32768)))& (0+255)
  1870  01BB  120A  118A  234A  120A  118A  	fcall	_lcd_puts
  1871  01C0                     l1490:	
  1872                           
  1873                           ;concentration.c: 80:     cursor_pos = cursor_init_pos;
  1874  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1875  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1876  01C2  082E               	movf	gameboard_init@cursor_init_pos,w
  1877  01C3  00AD               	movwf	??_gameboard_init
  1878  01C4  082D               	movf	??_gameboard_init,w
  1879  01C5  00FB               	movwf	_cursor_pos
  1880  01C6                     l1492:	
  1881                           
  1882                           ;concentration.c: 81:     cursor_solid = 0;
  1883  01C6  01A7               	clrf	_cursor_solid
  1884  01C7                     l1494:	
  1885                           
  1886                           ;concentration.c: 82:     get_current_char();
  1887  01C7  120A  118A  231E  120A  118A  	fcall	_get_current_char
  1888  01CC                     l1496:	
  1889                           
  1890                           ;concentration.c: 83:     delay_loops = 0;
  1891  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1892  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1893  01CE  01A6               	clrf	_delay_loops
  1894  01CF                     l1498:	
  1895                           
  1896                           ;concentration.c: 84:     cursor_movable = 1;
  1897  01CF  01FA               	clrf	_cursor_movable
  1898  01D0  0AFA               	incf	_cursor_movable,f
  1899  01D1                     l1500:	
  1900                           
  1901                           ;concentration.c: 85:     lcd_goto(cursor_pos, gameboard);
  1902  01D1  3008               	movlw	8
  1903  01D2  00A9               	movwf	lcd_goto@port
  1904  01D3  3000               	movlw	0
  1905  01D4  00AA               	movwf	lcd_goto@port+1
  1906  01D5  087B               	movf	_cursor_pos,w
  1907  01D6  120A  118A  23C2  120A  118A  	fcall	_lcd_goto
  1908  01DB                     l1502:	
  1909                           
  1910                           ;concentration.c: 86:     cursor_move_delay_count = 255;
  1911  01DB  30FF               	movlw	255
  1912  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1913  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1914  01DE  00AD               	movwf	??_gameboard_init
  1915  01DF  082D               	movf	??_gameboard_init,w
  1916  01E0  00A5               	movwf	_cursor_move_delay_count
  1917  01E1                     l1504:	
  1918                           
  1919                           ;concentration.c: 87:     PR2 = 250;
  1920  01E1  30FA               	movlw	250
  1921  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1922  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1923  01E4  0092               	movwf	18	;volatile
  1924  01E5                     l1506:	
  1925                           
  1926                           ;concentration.c: 88:     TMR2IF = 0;
  1927  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1928  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1929  01E7  108C               	bcf	12,1	;volatile
  1930  01E8                     l1508:	
  1931                           
  1932                           ;concentration.c: 89:     TMR2IE = 1;
  1933  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1934  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1935  01EA  148C               	bsf	12,1	;volatile
  1936  01EB                     l1510:	
  1937                           
  1938                           ;concentration.c: 90:     T2CON = 0x56;
  1939  01EB  3056               	movlw	86
  1940  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1941  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1942  01EE  0092               	movwf	18	;volatile
  1943  01EF                     l135:	
  1944  01EF  0008               	return
  1945  01F0                     __end_of_gameboard_init:	
  1946                           
  1947                           	psect	text9
  1948  041F                     __ptext9:	
  1949 ;; *************** function _time_init *****************
  1950 ;; Defined at:
  1951 ;;		line 192 in file "concentration.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		None
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0
  1968 ;;      Totals:         0       0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_gameboard_init
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           
  1980                           ;psect for function _time_init
  1981  041F                     _time_init:	
  1982  041F                     l1158:	
  1983                           ;incstack = 0
  1984                           ; Regs used in _time_init: []
  1985                           
  1986                           
  1987                           ;concentration.c: 193:     CCP1M3 = 1;
  1988  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0421  1597               	bsf	23,3	;volatile
  1991                           
  1992                           ;concentration.c: 194:     CCP1M2 = 0;
  1993  0422  1117               	bcf	23,2	;volatile
  1994                           
  1995                           ;concentration.c: 195:     CCP1M1 = 1;
  1996  0423  1497               	bsf	23,1	;volatile
  1997                           
  1998                           ;concentration.c: 196:     CCP1M0 = 0;
  1999  0424  1017               	bcf	23,0	;volatile
  2000                           
  2001                           ;concentration.c: 197:     TMR1CS = 0;
  2002  0425  1090               	bcf	16,1	;volatile
  2003                           
  2004                           ;concentration.c: 198:     T1CKPS0 = 0;
  2005  0426  1210               	bcf	16,4	;volatile
  2006                           
  2007                           ;concentration.c: 199:     T1CKPS1 = 0;
  2008  0427  1290               	bcf	16,5	;volatile
  2009                           
  2010                           ;concentration.c: 200:     TMR1GE = 0;
  2011  0428  1310               	bcf	16,6	;volatile
  2012                           
  2013                           ;concentration.c: 201:     TMR1ON = 1;
  2014  0429  1410               	bsf	16,0	;volatile
  2015  042A                     l183:	
  2016  042A  0008               	return
  2017  042B                     __end_of_time_init:	
  2018                           
  2019                           	psect	text10
  2020  034A                     __ptext10:	
  2021 ;; *************** function _lcd_puts *****************
  2022 ;; Defined at:
  2023 ;;		line 129 in file "lcd4bits.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  string          1    wreg     PTR const unsigned char 
  2026 ;;		 -> board_r2(17), board_r1(17), 
  2027 ;;  port            2    0[BANK0 ] PTR unsigned char 
  2028 ;;		 -> PORTD(1), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  string          1    3[BANK0 ] PTR const unsigned char 
  2031 ;;		 -> board_r2(17), board_r1(17), 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2041 ;;      Params:         0       2       0       0       0
  2042 ;;      Locals:         0       1       0       0       0
  2043 ;;      Temps:          0       1       0       0       0
  2044 ;;      Totals:         0       4       0       0       0
  2045 ;;Total ram usage:        4 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    3
  2048 ;; This function calls:
  2049 ;;		_lcd_write
  2050 ;; This function is called by:
  2051 ;;		_gameboard_init
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _lcd_puts
  2057  034A                     _lcd_puts:	
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2061                           ;lcd_puts@string stored from wreg
  2062  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2063  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2064  034C  00AC               	movwf	lcd_puts@string
  2065  034D                     l1418:	
  2066                           
  2067                           ;lcd4bits.c: 130:     while (*string != 0) {
  2068  034D  2B68               	goto	l1424
  2069  034E                     l1420:	
  2070                           
  2071                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  2072  034E  082C               	movf	lcd_puts@string,w
  2073  034F  0084               	movwf	4
  2074  0350  120A  118A  2375  120A  118A  	fcall	stringdir
  2075  0355  00AB               	movwf	??_lcd_puts
  2076  0356  082B               	movf	??_lcd_puts,w
  2077  0357  00F4               	movwf	lcd_write@CmdChar
  2078  0358  0829               	movf	lcd_puts@port,w
  2079  0359  00F5               	movwf	lcd_write@port
  2080  035A  082A               	movf	lcd_puts@port+1,w
  2081  035B  00F6               	movwf	lcd_write@port+1
  2082  035C  3010               	movlw	16
  2083  035D  120A  118A  2242  120A  118A  	fcall	_lcd_write
  2084  0362                     l1422:	
  2085  0362  3001               	movlw	1
  2086  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0365  00AB               	movwf	??_lcd_puts
  2089  0366  082B               	movf	??_lcd_puts,w
  2090  0367  07AC               	addwf	lcd_puts@string,f
  2091  0368                     l1424:	
  2092                           
  2093                           ;lcd4bits.c: 130:     while (*string != 0) {
  2094  0368  082C               	movf	lcd_puts@string,w
  2095  0369  0084               	movwf	4
  2096  036A  120A  118A  2375  120A  118A  	fcall	stringdir
  2097  036F  3A00               	xorlw	0
  2098  0370  1D03               	skipz
  2099  0371  2B73               	goto	u571
  2100  0372  2B74               	goto	u570
  2101  0373                     u571:	
  2102  0373  2B4E               	goto	l1420
  2103  0374                     u570:	
  2104  0374                     l231:	
  2105  0374  0008               	return
  2106  0375                     __end_of_lcd_puts:	
  2107                           
  2108                           	psect	text11
  2109  03C2                     __ptext11:	
  2110 ;; *************** function _lcd_goto *****************
  2111 ;; Defined at:
  2112 ;;		line 146 in file "lcd4bits.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  position        1    wreg     unsigned char 
  2115 ;;  port            2    0[BANK0 ] PTR unsigned char 
  2116 ;;		 -> PORTD(1), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  position        1    3[BANK0 ] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       2       0       0       0
  2129 ;;      Locals:         0       1       0       0       0
  2130 ;;      Temps:          0       1       0       0       0
  2131 ;;      Totals:         0       4       0       0       0
  2132 ;;Total ram usage:        4 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    3
  2135 ;; This function calls:
  2136 ;;		_DelayMs
  2137 ;;		_lcd_write
  2138 ;; This function is called by:
  2139 ;;		_gameboard_init
  2140 ;;		_update_cursor
  2141 ;;		_toggle_cursor
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _lcd_goto
  2147  03C2                     _lcd_goto:	
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2151                           ;lcd_goto@position stored from wreg
  2152  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2153  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2154  03C4  00AC               	movwf	lcd_goto@position
  2155  03C5                     l1408:	
  2156                           
  2157                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  2158  03C5  082C               	movf	lcd_goto@position,w
  2159  03C6  3E80               	addlw	128
  2160  03C7  00AB               	movwf	??_lcd_goto
  2161  03C8  082B               	movf	??_lcd_goto,w
  2162  03C9  00F4               	movwf	lcd_write@CmdChar
  2163  03CA  0829               	movf	lcd_goto@port,w
  2164  03CB  00F5               	movwf	lcd_write@port
  2165  03CC  082A               	movf	lcd_goto@port+1,w
  2166  03CD  00F6               	movwf	lcd_write@port+1
  2167  03CE  3000               	movlw	0
  2168  03CF  120A  118A  2242  120A  118A  	fcall	_lcd_write
  2169  03D4                     l1410:	
  2170                           
  2171                           ;lcd4bits.c: 149:     DelayMs(2);
  2172  03D4  3002               	movlw	2
  2173  03D5  00F2               	movwf	DelayMs@millis
  2174  03D6  3000               	movlw	0
  2175  03D7  00F3               	movwf	DelayMs@millis+1
  2176  03D8  120A  118A  23F6  120A  118A  	fcall	_DelayMs
  2177  03DD                     l237:	
  2178  03DD  0008               	return
  2179  03DE                     __end_of_lcd_goto:	
  2180                           
  2181                           	psect	text12
  2182  03DE                     __ptext12:	
  2183 ;; *************** function _lcd_clear *****************
  2184 ;; Defined at:
  2185 ;;		line 123 in file "lcd4bits.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  port            2    0[BANK0 ] PTR unsigned char 
  2188 ;;		 -> PORTA(1), PORTD(1), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       2       0       0       0
  2201 ;;      Locals:         0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0
  2203 ;;      Totals:         0       2       0       0       0
  2204 ;;Total ram usage:        2 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    3
  2207 ;; This function calls:
  2208 ;;		_DelayMs
  2209 ;;		_lcd_write
  2210 ;; This function is called by:
  2211 ;;		_gameboard_init
  2212 ;;		_lcd_init
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _lcd_clear
  2218  03DE                     _lcd_clear:	
  2219  03DE                     l1414:	
  2220                           ;incstack = 0
  2221                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2222                           
  2223                           
  2224                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  2225  03DE  01F4               	clrf	lcd_write@CmdChar
  2226  03DF  0AF4               	incf	lcd_write@CmdChar,f
  2227  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2228  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2229  03E2  0829               	movf	lcd_clear@port,w
  2230  03E3  00F5               	movwf	lcd_write@port
  2231  03E4  082A               	movf	lcd_clear@port+1,w
  2232  03E5  00F6               	movwf	lcd_write@port+1
  2233  03E6  3000               	movlw	0
  2234  03E7  120A  118A  2242  120A  118A  	fcall	_lcd_write
  2235  03EC                     l1416:	
  2236                           
  2237                           ;lcd4bits.c: 125:     DelayMs(2);
  2238  03EC  3002               	movlw	2
  2239  03ED  00F2               	movwf	DelayMs@millis
  2240  03EE  3000               	movlw	0
  2241  03EF  00F3               	movwf	DelayMs@millis+1
  2242  03F0  120A  118A  23F6  120A  118A  	fcall	_DelayMs
  2243  03F5                     l225:	
  2244  03F5  0008               	return
  2245  03F6                     __end_of_lcd_clear:	
  2246                           
  2247                           	psect	text13
  2248  0242                     __ptext13:	
  2249 ;; *************** function _lcd_write *****************
  2250 ;; Defined at:
  2251 ;;		line 110 in file "lcd4bits.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  mode            1    wreg     unsigned char 
  2254 ;;  CmdChar         1    4[COMMON] unsigned char 
  2255 ;;  port            2    5[COMMON] PTR unsigned char 
  2256 ;;		 -> PORTA(1), PORTD(1), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  mode            1    9[COMMON] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         3       0       0       0       0
  2269 ;;      Locals:         1       0       0       0       0
  2270 ;;      Temps:          2       0       0       0       0
  2271 ;;      Totals:         6       0       0       0       0
  2272 ;;Total ram usage:        6 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		_Delay20us
  2277 ;; This function is called by:
  2278 ;;		_lcd_clear
  2279 ;;		_lcd_puts
  2280 ;;		_lcd_putch
  2281 ;;		_lcd_goto
  2282 ;;		_lcd_init
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _lcd_write
  2288  0242                     _lcd_write:	
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2292                           ;lcd_write@mode stored from wreg
  2293  0242  00F9               	movwf	lcd_write@mode
  2294  0243                     l1136:	
  2295                           
  2296                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  2297  0243  0874               	movf	lcd_write@CmdChar,w
  2298  0244  00F7               	movwf	??_lcd_write
  2299  0245  3004               	movlw	4
  2300  0246                     u325:	
  2301  0246  1003               	clrc
  2302  0247  0CF7               	rrf	??_lcd_write,f
  2303  0248  3EFF               	addlw	-1
  2304  0249  1D03               	skipz
  2305  024A  2A46               	goto	u325
  2306  024B  0877               	movf	??_lcd_write,w
  2307  024C  3E20               	addlw	32
  2308  024D  0479               	iorwf	lcd_write@mode,w
  2309  024E  00F8               	movwf	??_lcd_write+1
  2310  024F  0875               	movf	lcd_write@port,w
  2311  0250  0084               	movwf	4
  2312  0251  1783               	bsf	3,7
  2313  0252  1C76               	btfss	lcd_write@port+1,0
  2314  0253  1383               	bcf	3,7
  2315  0254  0878               	movf	??_lcd_write+1,w
  2316  0255  0080               	movwf	0
  2317  0256                     l1138:	
  2318                           
  2319                           ;lcd4bits.c: 112:     Delay20us();
  2320  0256  120A  118A  242B  120A  118A  	fcall	_Delay20us
  2321  025B                     l1140:	
  2322                           
  2323                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  2324  025B  0875               	movf	lcd_write@port,w
  2325  025C  0084               	movwf	4
  2326  025D  1783               	bsf	3,7
  2327  025E  1C76               	btfss	lcd_write@port+1,0
  2328  025F  1383               	bcf	3,7
  2329  0260  0800               	movf	0,w
  2330  0261  39DF               	andlw	223
  2331  0262  00F7               	movwf	??_lcd_write
  2332  0263  0875               	movf	lcd_write@port,w
  2333  0264  0084               	movwf	4
  2334  0265  1783               	bsf	3,7
  2335  0266  1C76               	btfss	lcd_write@port+1,0
  2336  0267  1383               	bcf	3,7
  2337  0268  0877               	movf	??_lcd_write,w
  2338  0269  0080               	movwf	0
  2339  026A                     l1142:	
  2340                           
  2341                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  2342  026A  0874               	movf	lcd_write@CmdChar,w
  2343  026B  390F               	andlw	15
  2344  026C  3E20               	addlw	32
  2345  026D  0479               	iorwf	lcd_write@mode,w
  2346  026E  00F7               	movwf	??_lcd_write
  2347  026F  0875               	movf	lcd_write@port,w
  2348  0270  0084               	movwf	4
  2349  0271  1783               	bsf	3,7
  2350  0272  1C76               	btfss	lcd_write@port+1,0
  2351  0273  1383               	bcf	3,7
  2352  0274  0877               	movf	??_lcd_write,w
  2353  0275  0080               	movwf	0
  2354  0276                     l1144:	
  2355                           
  2356                           ;lcd4bits.c: 116:     Delay20us();
  2357  0276  120A  118A  242B  120A  118A  	fcall	_Delay20us
  2358                           
  2359                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  2360  027B  0875               	movf	lcd_write@port,w
  2361  027C  0084               	movwf	4
  2362  027D  1783               	bsf	3,7
  2363  027E  1C76               	btfss	lcd_write@port+1,0
  2364  027F  1383               	bcf	3,7
  2365  0280  0800               	movf	0,w
  2366  0281  39DF               	andlw	223
  2367  0282  00F7               	movwf	??_lcd_write
  2368  0283  0875               	movf	lcd_write@port,w
  2369  0284  0084               	movwf	4
  2370  0285  1783               	bsf	3,7
  2371  0286  1C76               	btfss	lcd_write@port+1,0
  2372  0287  1383               	bcf	3,7
  2373  0288  0877               	movf	??_lcd_write,w
  2374  0289  0080               	movwf	0
  2375  028A                     l222:	
  2376  028A  0008               	return
  2377  028B                     __end_of_lcd_write:	
  2378                           
  2379                           	psect	text14
  2380  042B                     __ptext14:	
  2381 ;; *************** function _Delay20us *****************
  2382 ;; Defined at:
  2383 ;;		line 99 in file "lcd4bits.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  next            1    3[COMMON] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2397 ;;      Params:         0       0       0       0       0
  2398 ;;      Locals:         1       0       0       0       0
  2399 ;;      Temps:          1       0       0       0       0
  2400 ;;      Totals:         2       0       0       0       0
  2401 ;;Total ram usage:        2 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_lcd_write
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function _Delay20us
  2413  042B                     _Delay20us:	
  2414  042B                     l1116:	
  2415                           ;incstack = 0
  2416                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  2417                           
  2418                           
  2419                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  2420  042B  01F3               	clrf	Delay20us@next
  2421  042C                     l1122:	
  2422  042C  3001               	movlw	1
  2423  042D  00F2               	movwf	??_Delay20us
  2424  042E  0872               	movf	??_Delay20us,w
  2425  042F  07F3               	addwf	Delay20us@next,f
  2426  0430                     l1124:	
  2427  0430  3008               	movlw	8
  2428  0431  0273               	subwf	Delay20us@next,w
  2429  0432  1C03               	skipc
  2430  0433  2C35               	goto	u291
  2431  0434  2C36               	goto	u290
  2432  0435                     u291:	
  2433  0435  2C2C               	goto	l1122
  2434  0436                     u290:	
  2435  0436                     l219:	
  2436  0436  0008               	return
  2437  0437                     __end_of_Delay20us:	
  2438                           
  2439                           	psect	text15
  2440  03F6                     __ptext15:	
  2441 ;; *************** function _DelayMs *****************
  2442 ;; Defined at:
  2443 ;;		line 86 in file "lcd4bits.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  millis          2    2[COMMON] unsigned int 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         2       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0
  2460 ;;      Totals:         2       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    1
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_lcd_clear
  2468 ;;		_lcd_goto
  2469 ;;		_lcd_init
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _DelayMs
  2475  03F6                     _DelayMs:	
  2476  03F6                     l1126:	
  2477                           ;incstack = 0
  2478                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  2479                           
  2480                           
  2481                           ;lcd4bits.c: 87:     while (millis != 0) {
  2482  03F6  2C06               	goto	l1134
  2483  03F7                     l1128:	
  2484                           
  2485                           ;lcd4bits.c: 88:         TMR0 = 100;
  2486  03F7  3064               	movlw	100
  2487  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2488  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2489  03FA  0081               	movwf	1	;volatile
  2490  03FB                     l1130:	
  2491                           
  2492                           ;lcd4bits.c: 89:         T0IF = 0;
  2493  03FB  110B               	bcf	11,2	;volatile
  2494  03FC                     l210:	
  2495                           ;lcd4bits.c: 90:         while(T0IF == 0);
  2496                           
  2497  03FC  1D0B               	btfss	11,2	;volatile
  2498  03FD  2BFF               	goto	u301
  2499  03FE  2C00               	goto	u300
  2500  03FF                     u301:	
  2501  03FF  2BFC               	goto	l210
  2502  0400                     u300:	
  2503  0400                     l1132:	
  2504                           
  2505                           ;lcd4bits.c: 91:         millis--;
  2506  0400  3001               	movlw	1
  2507  0401  02F2               	subwf	DelayMs@millis,f
  2508  0402  3000               	movlw	0
  2509  0403  1C03               	skipc
  2510  0404  03F3               	decf	DelayMs@millis+1,f
  2511  0405  02F3               	subwf	DelayMs@millis+1,f
  2512  0406                     l1134:	
  2513                           
  2514                           ;lcd4bits.c: 87:     while (millis != 0) {
  2515  0406  0872               	movf	DelayMs@millis,w
  2516  0407  0473               	iorwf	DelayMs@millis+1,w
  2517  0408  1D03               	btfss	3,2
  2518  0409  2C0B               	goto	u311
  2519  040A  2C0C               	goto	u310
  2520  040B                     u311:	
  2521  040B  2BF7               	goto	l1128
  2522  040C                     u310:	
  2523  040C                     l214:	
  2524  040C  0008               	return
  2525  040D                     __end_of_DelayMs:	
  2526                           
  2527                           	psect	text16
  2528  031E                     __ptext16:	
  2529 ;; *************** function _get_current_char *****************
  2530 ;; Defined at:
  2531 ;;		line 182 in file "concentration.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          1       0       0       0       0
  2548 ;;      Totals:         1       0       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used:    2
  2551 ;; Hardware stack levels required when called:    1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_gameboard_init
  2556 ;;		_update_cursor
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function _get_current_char
  2562  031E                     _get_current_char:	
  2563  031E                     l1150:	
  2564                           ;incstack = 0
  2565                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath]
  2566                           
  2567                           
  2568                           ;concentration.c: 183:     if((cursor_pos>>4) == 4) {
  2569  031E  087B               	movf	_cursor_pos,w
  2570  031F  00F2               	movwf	??_get_current_char
  2571  0320  3004               	movlw	4
  2572  0321                     u335:	
  2573  0321  1003               	clrc
  2574  0322  0CF2               	rrf	??_get_current_char,f
  2575  0323  3EFF               	addlw	-1
  2576  0324  1D03               	skipz
  2577  0325  2B21               	goto	u335
  2578  0326  3004               	movlw	4
  2579  0327  0672               	xorwf	??_get_current_char,w
  2580  0328  1D03               	btfss	3,2
  2581  0329  2B2B               	goto	u341
  2582  032A  2B2C               	goto	u340
  2583  032B                     u341:	
  2584  032B  2B3B               	goto	l1154
  2585  032C                     u340:	
  2586  032C                     l1152:	
  2587                           
  2588                           ;concentration.c: 184:         current_char = board_r2[cursor_pos&0x0F];
  2589  032C  087B               	movf	_cursor_pos,w
  2590  032D  390F               	andlw	15
  2591  032E  3E01               	addlw	low ((_board_r2-__stringbase)| (0+32768))
  2592  032F  0084               	movwf	4
  2593  0330  120A  118A  2375  120A  118A  	fcall	stringdir
  2594  0335  00F2               	movwf	??_get_current_char
  2595  0336  0872               	movf	??_get_current_char,w
  2596  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0339  00A8               	movwf	_current_char
  2599                           
  2600                           ;concentration.c: 185:     } else {
  2601  033A  2B49               	goto	l180
  2602  033B                     l1154:	
  2603                           
  2604                           ;concentration.c: 186:         current_char = board_r1[cursor_pos&0x0F];
  2605  033B  087B               	movf	_cursor_pos,w
  2606  033C  390F               	andlw	15
  2607  033D  3E12               	addlw	low ((_board_r1-__stringbase)| (0+32768))
  2608  033E  0084               	movwf	4
  2609  033F  120A  118A  2375  120A  118A  	fcall	stringdir
  2610  0344  00F2               	movwf	??_get_current_char
  2611  0345  0872               	movf	??_get_current_char,w
  2612  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0348  00A8               	movwf	_current_char
  2615  0349                     l180:	
  2616  0349  0008               	return
  2617  034A                     __end_of_get_current_char:	
  2618                           
  2619                           	psect	text17
  2620  028B                     __ptext17:	
  2621 ;; *************** function _interrupt_handler *****************
  2622 ;; Defined at:
  2623 ;;		line 220 in file "concentration.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0
  2639 ;;      Temps:          2       0       0       0       0
  2640 ;;      Totals:         2       0       0       0       0
  2641 ;;Total ram usage:        2 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		Interrupt level 1
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _interrupt_handler
  2652  028B                     _interrupt_handler:	
  2653  028B                     i1l1358:	
  2654                           
  2655                           ;concentration.c: 221:     if(ADIF) {
  2656  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2657  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2658  028D  1F0C               	btfss	12,6	;volatile
  2659  028E  2A90               	goto	u53_21
  2660  028F  2A91               	goto	u53_20
  2661  0290                     u53_21:	
  2662  0290  2AA9               	goto	i1l1372
  2663  0291                     u53_20:	
  2664  0291                     i1l1360:	
  2665                           
  2666                           ;concentration.c: 222:         if(CHS1 == 1) {
  2667  0291  1D9F               	btfss	31,3	;volatile
  2668  0292  2A94               	goto	u54_21
  2669  0293  2A95               	goto	u54_20
  2670  0294                     u54_21:	
  2671  0294  2A9F               	goto	i1l1366
  2672  0295                     u54_20:	
  2673  0295                     i1l1362:	
  2674                           
  2675                           ;concentration.c: 223:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  2676  0295  081E               	movf	30,w	;volatile
  2677  0296  00A3               	movwf	_joystick_x_pos+1
  2678  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2680  0299  081E               	movf	30,w	;volatile
  2681  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2682  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2683  029C  00A2               	movwf	_joystick_x_pos
  2684  029D                     i1l1364:	
  2685                           
  2686                           ;concentration.c: 224:             CHS1 = 0;
  2687  029D  119F               	bcf	31,3	;volatile
  2688                           
  2689                           ;concentration.c: 225:         } else {
  2690  029E  2AA8               	goto	i1l1370
  2691  029F                     i1l1366:	
  2692                           
  2693                           ;concentration.c: 226:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  2694  029F  081E               	movf	30,w	;volatile
  2695  02A0  00A1               	movwf	_joystick_y_pos+1
  2696  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2697  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2698  02A3  081E               	movf	30,w	;volatile
  2699  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2700  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2701  02A6  00A0               	movwf	_joystick_y_pos
  2702  02A7                     i1l1368:	
  2703                           
  2704                           ;concentration.c: 227:             CHS1 = 1;
  2705  02A7  159F               	bsf	31,3	;volatile
  2706  02A8                     i1l1370:	
  2707                           
  2708                           ;concentration.c: 229:         ADIF = 0;
  2709  02A8  130C               	bcf	12,6	;volatile
  2710  02A9                     i1l1372:	
  2711                           
  2712                           ;concentration.c: 231:     if(TMR2IF) {
  2713  02A9  1C8C               	btfss	12,1	;volatile
  2714  02AA  2AAC               	goto	u55_21
  2715  02AB  2AAD               	goto	u55_20
  2716  02AC                     u55_21:	
  2717  02AC  2AB7               	goto	i1l196
  2718  02AD                     u55_20:	
  2719  02AD                     i1l1374:	
  2720                           
  2721                           ;concentration.c: 232:         cursor_move_delay_count--;
  2722  02AD  3001               	movlw	1
  2723  02AE  02A5               	subwf	_cursor_move_delay_count,f
  2724                           
  2725                           ;concentration.c: 233:         if(cursor_move_delay_count == 0) {
  2726  02AF  0825               	movf	_cursor_move_delay_count,w
  2727  02B0  1D03               	btfss	3,2
  2728  02B1  2AB3               	goto	u56_21
  2729  02B2  2AB4               	goto	u56_20
  2730  02B3                     u56_21:	
  2731  02B3  2AB6               	goto	i1l195
  2732  02B4                     u56_20:	
  2733  02B4                     i1l1376:	
  2734                           
  2735                           ;concentration.c: 234:             cursor_movable = 1;
  2736  02B4  01FA               	clrf	_cursor_movable
  2737  02B5  0AFA               	incf	_cursor_movable,f
  2738  02B6                     i1l195:	
  2739                           ;concentration.c: 235:         }
  2740                           
  2741                           
  2742                           ;concentration.c: 236:         TMR2IF = 0;
  2743  02B6  108C               	bcf	12,1	;volatile
  2744  02B7                     i1l196:	
  2745  02B7  0871               	movf	??_interrupt_handler+1,w
  2746  02B8  008A               	movwf	10
  2747  02B9  0E70               	swapf	??_interrupt_handler^(0+4294967168),w
  2748  02BA  0083               	movwf	3
  2749  02BB  0EFE               	swapf	btemp,f
  2750  02BC  0E7E               	swapf	btemp,w
  2751  02BD  0009               	retfie
  2752  02BE                     __end_of_interrupt_handler:	
  2753  007E                     btemp	set	126	;btemp
  2754  007E                     wtemp0	set	126
  2755                           
  2756                           	psect	intentry
  2757  0004                     __pintentry:	
  2758                           ;incstack = 0
  2759                           ; Regs used in _interrupt_handler: [wreg+status,2+status,0]
  2760                           
  2761  0004                     interrupt_function:	
  2762  007E                     saved_w	set	btemp
  2763  0004  00FE               	movwf	btemp
  2764  0005  0E03               	swapf	3,w
  2765  0006  00F0               	movwf	??_interrupt_handler
  2766  0007  080A               	movf	10,w
  2767  0008  00F1               	movwf	??_interrupt_handler+1
  2768  0009  120A  118A  2A8B   	ljmp	_interrupt_handler


Data Sizes:
    Strings     0
    Constant    34
    Data        4
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> board_r2(CODE[17]), board_r1(CODE[17]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    _lcd_putch->_lcd_write
    _lcd_init->_lcd_write
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_update_gameboard_from_input
    _update_gameboard_from_input->_update_cursor
    _update_cursor->_lcd_goto
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_goto
    _toggle_cursor->_lcd_putch
    _lcd_init->_lcd_clear
    _gameboard_init->_lcd_goto
    _gameboard_init->_lcd_puts

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17023
                     _gameboard_init
                      _joystick_init
                           _lcd_init
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0    7721
                                              7 BANK0      2     2      0
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        3     3      0    3876
                                              4 BANK0      3     3      0
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    3845
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    1752
                                              0 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    3708
                                              2 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       2     2      0    5594
                                              4 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             4     2      2    1678
                                              0 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    2093
                                              0 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    1792
                                              0 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    1330
                                              4 COMMON     6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     251
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _get_current_char                                     1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gameboard_init
     _get_current_char
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
     _time_init
   _joystick_init
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _update_gameboard_from_input
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         _lcd_write
           _Delay20us
     _update_cursor
       _get_current_char
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         _lcd_write
           _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 14 17:56:21 2020

                                   pc 0002   __end_of_update_gameboard_from_input 0120  
         _update_gameboard_from_input 0036                           __CFG_CP$OFF 0000  
                       _update_cursor 0120                                    _GO 00F9  
                                  fsr 0004                                   l210 03FC  
                                 l205 043E                                   l141 0052  
                                 l214 040C                                   l222 028A  
                                 l231 0374                                   l135 01EF  
                                 l240 0241                                   l160 011F  
                                 l225 03F5                                   l234 041E  
                                 l170 0188                                   l138 003D  
                                 l219 0436                                   l180 0349  
                                 l237 03DD                                   l157 011D  
                                 l183 042A                                   l175 031D  
                                 l186 03C1                                   l926 0437  
                                 l928 043D                                   _GIE 005F  
                                 u300 0400                                   u301 03FF  
                                 u310 040C                                   u311 040B  
                                 u340 032C                                   u341 032B  
                                 u325 0246                                   _PR2 0092  
                                 u335 0321                                   u600 003C  
                                 u601 003B                                   u290 0436  
                                 u610 0041                          __CFG_CPD$OFF 0000  
                                 u291 0435                                   u611 0040  
                                 u700 00CE                                   u620 0046  
                                 u701 00CD                                   u621 0045  
                                 u710 00EA                                   u630 006E  
                                 u711 00E9                                   u631 006D  
                                 u720 00EF                                   u640 0073  
                                 u721 00EE                                   u641 0072  
                                 u570 0374                                   u730 010B  
                                 u650 008B                                   u571 0373  
                                 u731 010A                                   u715 00E6  
                                 u651 008A                                   u635 006A  
                                 u580 02F7                                   u740 0110  
                                 u660 0090                                   u581 02F6  
                                 u741 010F                                   u661 008F  
                                 _SCS 0478                                   u590 0172  
                                 u670 00AC                                   u591 0171  
                                 u735 0107                                   u671 00AB  
                                 u655 0087                                   u680 00B1  
                                 u681 00B0                                   u690 00C9  
                                 u691 00C8                                   u675 00A8  
                                 u695 00C5                                   fsr0 0004  
                                 indf 0000                          __CFG_FOSC$HS 0000  
                        __CFG_LVP$OFF 0000                        ?_toggle_cursor 0070  
                       lcd_clear@port 0029                                  l1130 03FB  
                                l1122 042C                                  l1132 0400  
                                l1124 0430                                  l1116 042B  
                                l1140 025B                                  l1150 031E  
                                l1134 0406                                  l1126 03F6  
                                l1142 026A                                  l1230 03A8  
                                l1152 032C                                  l1128 03F7  
                                l1144 0276                                  l1136 0243  
                                l1240 03B4                                  l1232 03AB  
                                l1154 033B                                  l1138 0256  
                                l1410 03D4                                  l1242 03B5  
                                l1234 03AD                                  l1226 039D  
                                l1420 034E                                  l1500 01D1  
                                l1244 03B8                                  l1236 03AF  
                                l1228 03A7                                  l1412 0410  
                                l1414 03DE                                  l1422 0362  
                                l1158 041F                                  l1510 01EB  
                                l1502 01DB                                  l1246 03BB  
                                l1238 03B3                                  l1430 0301  
                                l1416 03EC                                  l1408 03C5  
                                l1424 0368                                  l1504 01E1  
                                l1248 03BD                                  l1432 0306  
                                l1440 0124                                  l1520 004A  
                                l1512 0036                                  l1418 034D  
                                l1506 01E5                                  l1434 0310  
                                l1426 02F0                                  l1442 0129  
                                l1530 0073                                  l1522 0050  
                                l1514 003C                                  l1508 01E8  
                                l1436 0313                                  l1428 02F7  
                                l1444 012B                                  l1452 013A  
                                l1540 0096                                  l1532 0075  
                                l1524 0060                                  l1516 0041  
                                l1470 01FD                                  l1446 0130  
                                l1454 0150                                  l1438 0123  
                                l1550 00BA                                  l1542 009D  
                                l1534 007C                                  l1518 0046  
                                l1526 0061                                  l1480 018C  
                                l1472 0206                                  l1456 016B  
                                l1448 0135                                  l1560 00EA  
                                l1552 00C9                                  l1544 00AC  
                                l1536 008B                                  l1528 006E  
                                l1490 01C0                                  l1482 0191  
                                l1474 0216                                  l1466 01F0  
                                l1458 0172                                  l1618 0142  
                                l1570 0110                                  l1562 00EF  
                                l1554 00CE                                  l1546 00B1  
                                l1538 0090                                  l1492 01C6  
                                l1484 019C                                  l1476 0226  
                                l1468 01F5                                  l1572 0116  
                                l1564 00F5                                  l1556 00D4  
                                l1548 00B3                                  l1580 02D1  
                                l1494 01C7                                  l1486 01A8  
                                l1478 0231                                  l1566 00FC  
                                l1558 00DB                                  l1582 02DC  
                                l1574 02BE                                  l1496 01CC  
                                l1488 01B4                                  l1568 010B  
                                l1584 02E1                                  l1576 02C1  
                                l1498 01CF                                  l1586 02E7  
                                l1578 02C6                                  _ADIE 0466  
                                _ADIF 0066                                  _CHS1 00FB  
                                _T0IF 005A                                  _PEIE 005E  
                                _TMR0 0001                                  _TMR1 000E  
                                _WPUB 0095                          __CFG_WRT$OFF 0000  
                                _main 02BE                                  btemp 007E  
                        lcd_init@port 002B                                  start 000C  
                        lcd_goto@port 0029                         __CFG_IESO$OFF 0000  
                     __end_of_DelayMs 040D                         __CFG_MCLRE$ON 0000  
                      ?_update_cursor 0070                                 ?_main 0070  
                               _CCPR1 0015                         __CFG_WDTE$OFF 0000  
                               _ANSEL 0188                                 _T2CON 0012  
                               i1l195 02B6                                 i1l196 02B7  
                               _PORTA 0005                                 _PORTB 0006  
                               _PORTD 0008                                 u53_20 0291  
                               u53_21 0290                                 u54_20 0295  
                               u54_21 0294                                 u55_20 02AD  
                               u55_21 02AC                                 u56_20 02B4  
                               u56_21 02B3                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISD 0088  
                      __CFG_FCMEN$OFF 0000                                 _nRBPU 040F  
                        lcd_puts@port 0029                        __CFG_BOREN$OFF 0000  
                               pclath 000A                                 status 0003  
                               wtemp0 007E                         DelayMs@millis 0072  
                     __initialization 000F                          __end_of_main 02F0  
                  __size_of_Delay20us 000C                                ??_main 007A  
                     ??_toggle_cursor 007A                                _ADCON0 001F  
                              _ADCON1 009F                                _CCP1M0 00B8  
                              _CCP1M1 00B9                                _CCP1M2 00BA  
                              _CCP1M3 00BB                                _CCP1IF 0062  
                              _ADRESH 001E                                _ADRESL 009E  
                              _ANSELH 0189                                i1l1360 0291  
                              i1l1370 02A8                                i1l1362 0295  
                              i1l1364 029D                                i1l1372 02A9  
                              i1l1374 02AD                                i1l1366 029F  
                              i1l1358 028B                                i1l1376 02B4  
                              i1l1368 02A7               __size_of_gameboard_init 0067  
                           ??_DelayMs 0074                                _TMR1GE 0086  
                              _TMR1CS 0081                                _TMR2IE 0461  
                              _TMR2IF 0061                                _TMR1ON 0080  
                    __end_of_board_r1 039D                      __end_of_board_r2 038C  
                      __CFG_PWRTE$OFF 0000                       ??_update_cursor 002D  
                    __end_of_lcd_init 0242                      __end_of_lcd_goto 03DE  
                    __end_of_lcd_puts 0375                         lcd_putch@port 0029  
                              saved_w 007E             __size_of_get_current_char 002C  
                   __end_of_Delay20us 0437         update_cursor@move_delay_count 002F  
             __end_of__initialization 0032                         lcd_write@mode 0079  
                       lcd_write@port 0075                        __pcstackCOMMON 0070  
                        __pidataBANK0 043F                 __end_of_joystick_init 03C2  
                  __size_of_lcd_clear 0018                    __size_of_lcd_putch 0012  
                  __size_of_lcd_write 0049                            __pbssBANK0 0020  
             _cursor_move_delay_count 0025                            __pmaintext 02BE  
                          __pintentry 0004                    __size_of_tmr0_init 0008  
                             _T1CKPS0 0084                               _T1CKPS1 0085  
                  __size_of_time_init 000C                             ?_lcd_init 002B  
                           ?_lcd_goto 0029                             ?_lcd_puts 0029  
                          __stringtab 0375                        _gameboard_init 0189  
                             _DelayMs 03F6                     __end_of_lcd_clear 03F6  
                   __end_of_lcd_putch 041F                     __end_of_lcd_write 028B  
                             __ptext1 0036                               __ptext2 0120  
                             __ptext3 02F0                               __ptext4 040D  
                             __ptext5 01F0                               __ptext6 0437  
                             __ptext7 039D                               __ptext8 0189  
                             __ptext9 041F                            _cursor_pos 007B  
                    _get_current_char 031E                __end_of_gameboard_init 01F0  
                          ??_lcd_init 002D                            ??_lcd_goto 002B  
                          ??_lcd_puts 002B                  end_of_initialization 0032  
                   __end_of_tmr0_init 043F                        lcd_puts@string 002C  
                   __end_of_time_init 042B                            _scoreboard 0032  
                      _joystick_x_pos 0022                        _joystick_y_pos 0020  
                     ?_gameboard_init 0070                 __end_of_toggle_cursor 031E  
                           _Delay20us 042B                 __end_of_update_cursor 0189  
        ?_update_gameboard_from_input 0070                   start_initialization 000F  
                          ?_Delay20us 0070                           __pdataBANK0 0032  
       ??_update_gameboard_from_input 0030                           __pbssCOMMON 007A  
                           ___latbits 0002                         __pcstackBANK0 0029  
                            ?_DelayMs 0072                __size_of_joystick_init 0025  
                   __size_of_lcd_init 0052                     __size_of_lcd_goto 001C  
                   __size_of_lcd_puts 002B                          _current_char 0028  
                         _delay_loops 0026              __end_of_get_current_char 034A  
                           _gameboard 0034                             _lcd_clear 03DE  
                        _cursor_solid 0027                             __pstrings 0375  
                           _lcd_putch 040D                             _lcd_write 0242  
                   _interrupt_handler 028B                    ?_interrupt_handler 0070  
__size_of_update_gameboard_from_input 00EA                   ??_interrupt_handler 0070  
                   interrupt_function 0004                        _cursor_movable 007A  
                         ??_Delay20us 0072                             _tmr0_init 0437  
                           _time_init 041F                            ?_lcd_clear 0029  
           __end_of_interrupt_handler 02BE                         _joystick_init 039D  
                          ?_lcd_putch 0029                           __stringbase 037A  
                          ?_lcd_write 0074                      ??_gameboard_init 002D  
                    __size_of_DelayMs 0017                            ?_tmr0_init 0070  
                          ?_time_init 0070                        ?_joystick_init 0070  
                  __end_of__stringtab 037B                              _board_r1 038C  
                            _board_r2 037B                              __ptext10 034A  
                            __ptext11 03C2                              __ptext12 03DE  
                            __ptext13 0242                              __ptext14 042B  
                            __ptext15 03F6                              __ptext16 031E  
                            __ptext17 028B                           _cursor_fast 0024  
                   __CFG_BOR4V$BOR21V 0000                              _lcd_init 01F0  
                            _lcd_goto 03C2                              _lcd_puts 034A  
                       __size_of_main 0032                    lcd_putch@character 002C  
              __size_of_toggle_cursor 002E         gameboard_init@cursor_init_pos 002E  
                         ??_lcd_clear 007A            __size_of_interrupt_handler 0033  
                         ??_lcd_putch 002B                           ??_lcd_write 0077  
                            intlevel1 0000                __size_of_update_cursor 0069  
                       Delay20us@next 0073                           ??_tmr0_init 0072  
                           stringcode 0375                     ?_get_current_char 0070  
                     ??_joystick_init 0072                           ??_time_init 0072  
                  ??_get_current_char 0072                            _OPTION_REG 0081  
                    lcd_goto@position 002C                              stringdir 0375  
                            stringtab 0375                         _toggle_cursor 02F0  
                    lcd_write@CmdChar 0074  
