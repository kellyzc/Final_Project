

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 14 17:06:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299                           
   300                           	psect	idataBANK0
   301  03AF                     __pidataBANK0:	
   302                           
   303                           ;initializer for _scoreboard
   304  03AF  3405               	retlw	5
   305  03B0  3400               	retlw	0
   306                           
   307                           ;initializer for _gameboard
   308  03B1  3408               	retlw	8
   309  03B2  3400               	retlw	0
   310                           
   311                           	psect	strings
   312  02C0                     __pstrings:	
   313  02C0                     stringtab:	
   314  02C0                     __stringtab:	
   315  02C0                     stringcode:	
   316                           ;	String table - string pointers are 1 byte each
   317                           
   318  02C0                     stringdir:	
   319  02C0  3002               	movlw	high stringdir
   320  02C1  008A               	movwf	10
   321  02C2  0804               	movf	4,w
   322  02C3  0A84               	incf	4,f
   323  02C4  0782               	addwf	2,f
   324  02C5                     __stringbase:	
   325  02C5  3400               	retlw	0
   326  02C6                     __end_of__stringtab:	
   327  02C6                     _board_r2:	
   328  02C6  3454               	retlw	84
   329  02C7  3448               	retlw	72
   330  02C8  3449               	retlw	73
   331  02C9  3453               	retlw	83
   332  02CA  3420               	retlw	32
   333  02CB  3449               	retlw	73
   334  02CC  3453               	retlw	83
   335  02CD  3420               	retlw	32
   336  02CE  3452               	retlw	82
   337  02CF  344F               	retlw	79
   338  02D0  3457               	retlw	87
   339  02D1  3420               	retlw	32
   340  02D2  3432               	retlw	50
   341  02D3  342E               	retlw	46
   342  02D4  342E               	retlw	46
   343  02D5  342E               	retlw	46
   344  02D6  3400               	retlw	0
   345  02D7                     __end_of_board_r2:	
   346  02D7                     _board_r1:	
   347  02D7  3430               	retlw	48
   348  02D8  3431               	retlw	49
   349  02D9  3432               	retlw	50
   350  02DA  3433               	retlw	51
   351  02DB  3434               	retlw	52
   352  02DC  3435               	retlw	53
   353  02DD  3436               	retlw	54
   354  02DE  3437               	retlw	55
   355  02DF  3438               	retlw	56
   356  02E0  3439               	retlw	57
   357  02E1  3441               	retlw	65
   358  02E2  3442               	retlw	66
   359  02E3  3443               	retlw	67
   360  02E4  3444               	retlw	68
   361  02E5  3445               	retlw	69
   362  02E6  3446               	retlw	70
   363  02E7  3400               	retlw	0
   364  02E8                     __end_of_board_r1:	
   365  000E                     _TMR1	set	14
   366  0015                     _CCPR1	set	21
   367  0001                     _TMR0	set	1
   368  001E                     _ADRESH	set	30
   369  001F                     _ADCON0	set	31
   370  0006                     _PORTB	set	6
   371  0005                     _PORTA	set	5
   372  0008                     _PORTD	set	8
   373  005A                     _T0IF	set	90
   374  00FB                     _CHS1	set	251
   375  0066                     _ADIF	set	102
   376  005E                     _PEIE	set	94
   377  005F                     _GIE	set	95
   378  0080                     _TMR1ON	set	128
   379  0086                     _TMR1GE	set	134
   380  0085                     _T1CKPS1	set	133
   381  0084                     _T1CKPS0	set	132
   382  0081                     _TMR1CS	set	129
   383  00B8                     _CCP1M0	set	184
   384  00B9                     _CCP1M1	set	185
   385  00BA                     _CCP1M2	set	186
   386  00BB                     _CCP1M3	set	187
   387  0062                     _CCP1IF	set	98
   388  00F9                     _GO	set	249
   389  0081                     _OPTION_REG	set	129
   390  009E                     _ADRESL	set	158
   391  009F                     _ADCON1	set	159
   392  0086                     _TRISB	set	134
   393  0095                     _WPUB	set	149
   394  0085                     _TRISA	set	133
   395  0088                     _TRISD	set	136
   396  0466                     _ADIE	set	1126
   397  040F                     _nRBPU	set	1039
   398  0478                     _SCS	set	1144
   399  0189                     _ANSELH	set	393
   400  0188                     _ANSEL	set	392
   401                           
   402                           ; #config settings
   403  0000                     
   404                           	psect	cinit
   405  000F                     start_initialization:	
   406  000F                     __initialization:	
   407                           
   408                           ; Initialize objects allocated to BANK0
   409  000F  120A  118A  23AF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   410  0014  00AF               	movwf	__pdataBANK0& (0+127)
   411  0015  120A  118A  23B0  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   412  001A  00B0               	movwf	(__pdataBANK0+1)& (0+127)
   413  001B  120A  118A  23B1  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   414  0020  00B1               	movwf	(__pdataBANK0+2)& (0+127)
   415  0021  120A  118A  23B2  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   416  0026  00B2               	movwf	(__pdataBANK0+3)& (0+127)
   417                           
   418                           ; Clear objects allocated to BANK0
   419  0027  01A8               	clrf	__pbssBANK0& (0+127)
   420  0028  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   421  0029  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   422  002A  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   423  002B  01AC               	clrf	(__pbssBANK0+4)& (0+127)
   424  002C  01AD               	clrf	(__pbssBANK0+5)& (0+127)
   425  002D  01AE               	clrf	(__pbssBANK0+6)& (0+127)
   426                           
   427                           ; Clear objects allocated to COMMON
   428  002E  01FA               	clrf	__pbssCOMMON& (0+127)
   429  002F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   430  0030                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433  0030                     __end_of__initialization:	
   434  0030  0183               	clrf	3
   435  0031  120A  118A  2834   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  007A                     __pbssCOMMON:	
   439  007A                     _joystick_pressed:	
   440  007A                     	ds	1
   441  007B                     _cursor_pos:	
   442  007B                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445  0028                     __pbssBANK0:	
   446  0028                     _joystick_y_pos:	
   447  0028                     	ds	2
   448  002A                     _joystick_x_pos:	
   449  002A                     	ds	2
   450  002C                     _delay_loops:	
   451  002C                     	ds	1
   452  002D                     _cursor_solid:	
   453  002D                     	ds	1
   454  002E                     _current_char:	
   455  002E                     	ds	1
   456                           
   457                           	psect	dataBANK0
   458  002F                     __pdataBANK0:	
   459  002F                     _scoreboard:	
   460  002F                     	ds	2
   461  0031                     _gameboard:	
   462  0031                     	ds	2
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:	
   466  0070                     ?_joystick_init:	
   467  0070                     ?_time_init:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_get_current_char:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_toggle_cursor:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_update_cursor:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_main:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_interrupt_handler:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??_interrupt_handler:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_tmr0_init:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_Delay20us:	
   492                           ; 1 bytes @ 0x0
   493                           
   494                           
   495                           ; 1 bytes @ 0x0
   496  0070                     	ds	2
   497  0072                     ??_joystick_init:	
   498  0072                     ??_time_init:	
   499                           ; 1 bytes @ 0x2
   500                           
   501  0072                     ??_get_current_char:	
   502                           ; 1 bytes @ 0x2
   503                           
   504  0072                     ??_tmr0_init:	
   505                           ; 1 bytes @ 0x2
   506                           
   507  0072                     ?_DelayMs:	
   508                           ; 1 bytes @ 0x2
   509                           
   510  0072                     ??_Delay20us:	
   511                           ; 1 bytes @ 0x2
   512                           
   513  0072                     DelayMs@millis:	
   514                           ; 1 bytes @ 0x2
   515                           
   516                           
   517                           ; 2 bytes @ 0x2
   518  0072                     	ds	1
   519  0073                     Delay20us@next:	
   520                           
   521                           ; 1 bytes @ 0x3
   522  0073                     	ds	1
   523  0074                     ??_DelayMs:	
   524  0074                     ?_lcd_write:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0074                     lcd_write@CmdChar:	
   528                           ; 1 bytes @ 0x4
   529                           
   530                           
   531                           ; 1 bytes @ 0x4
   532  0074                     	ds	1
   533  0075                     lcd_write@port:	
   534                           
   535                           ; 2 bytes @ 0x5
   536  0075                     	ds	2
   537  0077                     ??_lcd_write:	
   538                           
   539                           ; 1 bytes @ 0x7
   540  0077                     	ds	2
   541  0079                     lcd_write@mode:	
   542                           
   543                           ; 1 bytes @ 0x9
   544  0079                     	ds	1
   545  007A                     ??_lcd_clear:	
   546  007A                     ??_toggle_cursor:	
   547                           ; 1 bytes @ 0xA
   548                           
   549                           
   550                           	psect	cstackBANK0
   551  0020                     __pcstackBANK0:	
   552                           ; 1 bytes @ 0xA
   553                           
   554  0020                     ?_lcd_clear:	
   555  0020                     ?_lcd_puts:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0020                     ?_lcd_goto:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0020                     ?_lcd_putch:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0020                     lcd_clear@port:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     lcd_puts@port:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     lcd_putch@port:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0020                     lcd_goto@port:	
   574                           ; 2 bytes @ 0x0
   575                           
   576                           
   577                           ; 2 bytes @ 0x0
   578  0020                     	ds	2
   579  0022                     ?_lcd_init:	
   580  0022                     ??_lcd_puts:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0022                     ??_lcd_goto:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0022                     ??_lcd_putch:	
   587                           ; 1 bytes @ 0x2
   588                           
   589  0022                     lcd_init@port:	
   590                           ; 1 bytes @ 0x2
   591                           
   592                           
   593                           ; 2 bytes @ 0x2
   594  0022                     	ds	1
   595  0023                     lcd_puts@string:	
   596  0023                     lcd_putch@character:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0023                     lcd_goto@position:	
   600                           ; 1 bytes @ 0x3
   601                           
   602                           
   603                           ; 1 bytes @ 0x3
   604  0023                     	ds	1
   605  0024                     ??_lcd_init:	
   606  0024                     ??_update_cursor:	
   607                           ; 1 bytes @ 0x4
   608                           
   609                           
   610                           ; 1 bytes @ 0x4
   611  0024                     	ds	2
   612  0026                     ??_main:	
   613                           
   614                           ; 1 bytes @ 0x6
   615  0026                     	ds	2
   616                           
   617                           	psect	maintext
   618  0034                     __pmaintext:	
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 53 in file "concentration.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B00/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       2       0       0       0
   641 ;;      Totals:         0       2       0       0       0
   642 ;;Total ram usage:        2 bytes
   643 ;; Hardware stack levels required when called:    5
   644 ;; This function calls:
   645 ;;		_get_current_char
   646 ;;		_joystick_init
   647 ;;		_lcd_clear
   648 ;;		_lcd_goto
   649 ;;		_lcd_init
   650 ;;		_lcd_puts
   651 ;;		_time_init
   652 ;;		_toggle_cursor
   653 ;;		_update_cursor
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _main
   661  0034                     _main:	
   662  0034                     l1438:	
   663                           ;incstack = 0
   664                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   665                           
   666                           
   667                           ;concentration.c: 55:     SCS = 0;
   668  0034  1683               	bsf	3,5	;RP0=1, select bank1
   669  0035  1303               	bcf	3,6	;RP1=0, select bank1
   670  0036  100F               	bcf	15,0	;volatile
   671  0037                     l1440:	
   672                           
   673                           ;concentration.c: 57:     TRISD = 0;
   674  0037  0188               	clrf	8	;volatile
   675                           
   676                           ;concentration.c: 58:     TRISA = 0;
   677  0038  0185               	clrf	5	;volatile
   678                           
   679                           ;concentration.c: 59:     ANSEL = 0;
   680  0039  1683               	bsf	3,5	;RP0=1, select bank3
   681  003A  1703               	bsf	3,6	;RP1=1, select bank3
   682  003B  0188               	clrf	8	;volatile
   683  003C                     l1442:	
   684                           
   685                           ;concentration.c: 60:     lcd_init(gameboard);
   686  003C  3008               	movlw	8
   687  003D  1283               	bcf	3,5	;RP0=0, select bank0
   688  003E  1303               	bcf	3,6	;RP1=0, select bank0
   689  003F  00A2               	movwf	lcd_init@port
   690  0040  3000               	movlw	0
   691  0041  00A3               	movwf	lcd_init@port+1
   692  0042  120A  118A  21A0  120A  118A  	fcall	_lcd_init
   693  0047                     l1444:	
   694                           
   695                           ;concentration.c: 61:     lcd_init(scoreboard);
   696  0047  3005               	movlw	5
   697  0048  1283               	bcf	3,5	;RP0=0, select bank0
   698  0049  1303               	bcf	3,6	;RP1=0, select bank0
   699  004A  00A2               	movwf	lcd_init@port
   700  004B  3000               	movlw	0
   701  004C  00A3               	movwf	lcd_init@port+1
   702  004D  120A  118A  21A0  120A  118A  	fcall	_lcd_init
   703  0052                     l1446:	
   704                           
   705                           ;concentration.c: 62:     joystick_init();
   706  0052  120A  118A  22E8  120A  118A  	fcall	_joystick_init
   707  0057                     l1448:	
   708                           
   709                           ;concentration.c: 64:     time_init();
   710  0057  120A  118A  238F  120A  118A  	fcall	_time_init
   711  005C                     l1450:	
   712                           
   713                           ;concentration.c: 65:     lcd_clear(gameboard);
   714  005C  3008               	movlw	8
   715  005D  1283               	bcf	3,5	;RP0=0, select bank0
   716  005E  1303               	bcf	3,6	;RP1=0, select bank0
   717  005F  00A0               	movwf	lcd_clear@port
   718  0060  3000               	movlw	0
   719  0061  00A1               	movwf	lcd_clear@port+1
   720  0062  120A  118A  234E  120A  118A  	fcall	_lcd_clear
   721  0067                     l1452:	
   722                           
   723                           ;concentration.c: 66:     lcd_puts(board_r1, gameboard);
   724  0067  3008               	movlw	8
   725  0068  1283               	bcf	3,5	;RP0=0, select bank0
   726  0069  1303               	bcf	3,6	;RP1=0, select bank0
   727  006A  00A0               	movwf	lcd_puts@port
   728  006B  3000               	movlw	0
   729  006C  00A1               	movwf	lcd_puts@port+1
   730  006D  3012               	movlw	(low ((_board_r1-__stringbase)| (0+32768)))& (0+255)
   731  006E  120A  118A  2295  120A  118A  	fcall	_lcd_puts
   732  0073                     l1454:	
   733                           
   734                           ;concentration.c: 67:     lcd_goto(0x40, gameboard);
   735  0073  3008               	movlw	8
   736  0074  1283               	bcf	3,5	;RP0=0, select bank0
   737  0075  1303               	bcf	3,6	;RP1=0, select bank0
   738  0076  00A0               	movwf	lcd_goto@port
   739  0077  3000               	movlw	0
   740  0078  00A1               	movwf	lcd_goto@port+1
   741  0079  3040               	movlw	64
   742  007A  120A  118A  2332  120A  118A  	fcall	_lcd_goto
   743  007F                     l1456:	
   744                           
   745                           ;concentration.c: 68:     lcd_puts(board_r2, gameboard);
   746  007F  3008               	movlw	8
   747  0080  1283               	bcf	3,5	;RP0=0, select bank0
   748  0081  1303               	bcf	3,6	;RP1=0, select bank0
   749  0082  00A0               	movwf	lcd_puts@port
   750  0083  3000               	movlw	0
   751  0084  00A1               	movwf	lcd_puts@port+1
   752  0085  3001               	movlw	(low ((_board_r2-__stringbase)| (0+32768)))& (0+255)
   753  0086  120A  118A  2295  120A  118A  	fcall	_lcd_puts
   754  008B                     l1458:	
   755                           
   756                           ;concentration.c: 69:     cursor_pos = 0x45;
   757  008B  3045               	movlw	69
   758  008C  1283               	bcf	3,5	;RP0=0, select bank0
   759  008D  1303               	bcf	3,6	;RP1=0, select bank0
   760  008E  00A6               	movwf	??_main
   761  008F  0826               	movf	??_main,w
   762  0090  00FB               	movwf	_cursor_pos
   763                           
   764                           ;concentration.c: 70:     cursor_solid = 0;
   765  0091  01AD               	clrf	_cursor_solid
   766  0092                     l1460:	
   767                           
   768                           ;concentration.c: 71:     get_current_char();
   769  0092  120A  118A  2269  120A  118A  	fcall	_get_current_char
   770  0097                     l1462:	
   771                           
   772                           ;concentration.c: 72:     delay_loops = 0;
   773  0097  1283               	bcf	3,5	;RP0=0, select bank0
   774  0098  1303               	bcf	3,6	;RP1=0, select bank0
   775  0099  01AC               	clrf	_delay_loops
   776  009A                     l1464:	
   777                           
   778                           ;concentration.c: 73:     joystick_pressed = 0;
   779  009A  01FA               	clrf	_joystick_pressed
   780  009B                     l1466:	
   781                           
   782                           ;concentration.c: 74:     lcd_goto(cursor_pos, gameboard);
   783  009B  3008               	movlw	8
   784  009C  00A0               	movwf	lcd_goto@port
   785  009D  3000               	movlw	0
   786  009E  00A1               	movwf	lcd_goto@port+1
   787  009F  087B               	movf	_cursor_pos,w
   788  00A0  120A  118A  2332  120A  118A  	fcall	_lcd_goto
   789  00A5                     l1468:	
   790                           
   791                           ;concentration.c: 76:         if(GO == 0) {
   792  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   793  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   794  00A7  189F               	btfsc	31,1	;volatile
   795  00A8  28AA               	goto	u501
   796  00A9  28AB               	goto	u500
   797  00AA                     u501:	
   798  00AA  28AC               	goto	l114
   799  00AB                     u500:	
   800  00AB                     l1470:	
   801                           
   802                           ;concentration.c: 77:             GO = 1;
   803  00AB  149F               	bsf	31,1	;volatile
   804  00AC                     l114:	
   805                           ;concentration.c: 78:         }
   806                           
   807                           
   808                           ;concentration.c: 79:         if(CCP1IF == 1) {
   809  00AC  1D0C               	btfss	12,2	;volatile
   810  00AD  28AF               	goto	u511
   811  00AE  28B0               	goto	u510
   812  00AF                     u511:	
   813  00AF  28D0               	goto	l1482
   814  00B0                     u510:	
   815  00B0                     l1472:	
   816                           
   817                           ;concentration.c: 80:             if(delay_loops == 0) {
   818  00B0  082C               	movf	_delay_loops,w
   819  00B1  1D03               	btfss	3,2
   820  00B2  28B4               	goto	u521
   821  00B3  28B5               	goto	u520
   822  00B4                     u521:	
   823  00B4  28BF               	goto	l1478
   824  00B5                     u520:	
   825  00B5                     l1474:	
   826                           
   827                           ;concentration.c: 81:                 delay_loops = 25;
   828  00B5  3019               	movlw	25
   829  00B6  00A6               	movwf	??_main
   830  00B7  0826               	movf	??_main,w
   831  00B8  00AC               	movwf	_delay_loops
   832  00B9                     l1476:	
   833                           
   834                           ;concentration.c: 82:                 toggle_cursor();
   835  00B9  120A  118A  223B  120A  118A  	fcall	_toggle_cursor
   836                           
   837                           ;concentration.c: 83:             } else {
   838  00BE  28C1               	goto	l117
   839  00BF                     l1478:	
   840                           
   841                           ;concentration.c: 84:                 delay_loops--;
   842  00BF  3001               	movlw	1
   843  00C0  02AC               	subwf	_delay_loops,f
   844  00C1                     l117:	
   845                           ;concentration.c: 85:             }
   846                           
   847                           
   848                           ;concentration.c: 86:             CCPR1 = TMR1+50000;
   849  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   850  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   851  00C3  080E               	movf	14,w	;volatile
   852  00C4  3E50               	addlw	80
   853  00C5  00A6               	movwf	??_main
   854  00C6  080F               	movf	15,w	;volatile
   855  00C7  1803               	skipnc
   856  00C8  3E01               	addlw	1
   857  00C9  3EC3               	addlw	195
   858  00CA  00A7               	movwf	??_main+1
   859  00CB  0826               	movf	??_main,w
   860  00CC  0095               	movwf	21	;volatile
   861  00CD  0827               	movf	??_main+1,w
   862  00CE  0096               	movwf	22	;volatile
   863  00CF                     l1480:	
   864                           
   865                           ;concentration.c: 87:             CCP1IF = 0;
   866  00CF  110C               	bcf	12,2	;volatile
   867  00D0                     l1482:	
   868                           
   869                           ;concentration.c: 89:         if(joystick_x_pos > 700) {
   870  00D0  082B               	movf	_joystick_x_pos+1,w
   871  00D1  3A80               	xorlw	128
   872  00D2  00FF               	movwf	btemp+1
   873  00D3  3082               	movlw	130
   874  00D4  027F               	subwf	btemp+1,w
   875  00D5  1D03               	skipz
   876  00D6  28D9               	goto	u535
   877  00D7  30BD               	movlw	189
   878  00D8  022A               	subwf	_joystick_x_pos,w
   879  00D9                     u535:	
   880  00D9  1C03               	skipc
   881  00DA  28DC               	goto	u531
   882  00DB  28DD               	goto	u530
   883  00DC                     u531:	
   884  00DC  28EA               	goto	l1490
   885  00DD                     u530:	
   886  00DD                     l1484:	
   887                           
   888                           ;concentration.c: 90:             if(joystick_pressed == 0) {
   889  00DD  087A               	movf	_joystick_pressed,w
   890  00DE  1D03               	btfss	3,2
   891  00DF  28E1               	goto	u541
   892  00E0  28E2               	goto	u540
   893  00E1                     u541:	
   894  00E1  28A5               	goto	l1468
   895  00E2                     u540:	
   896  00E2                     l1486:	
   897                           
   898                           ;concentration.c: 91:                 cursor_pos--;
   899  00E2  3001               	movlw	1
   900  00E3  02FB               	subwf	_cursor_pos,f
   901  00E4                     l1488:	
   902                           
   903                           ;concentration.c: 92:                 update_cursor();
   904  00E4  120A  118A  213B  120A  118A  	fcall	_update_cursor
   905  00E9  28A5               	goto	l1468
   906  00EA                     l1490:	
   907  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   908  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   909  00EC  082B               	movf	_joystick_x_pos+1,w
   910  00ED  3A80               	xorlw	128
   911  00EE  00FF               	movwf	btemp+1
   912  00EF  3081               	movlw	129
   913  00F0  027F               	subwf	btemp+1,w
   914  00F1  1D03               	skipz
   915  00F2  28F5               	goto	u555
   916  00F3  302C               	movlw	44
   917  00F4  022A               	subwf	_joystick_x_pos,w
   918  00F5                     u555:	
   919  00F5  1803               	skipnc
   920  00F6  28F8               	goto	u551
   921  00F7  28F9               	goto	u550
   922  00F8                     u551:	
   923  00F8  2905               	goto	l1498
   924  00F9                     u550:	
   925  00F9                     l1492:	
   926                           
   927                           ;concentration.c: 95:             if(joystick_pressed == 0) {
   928  00F9  087A               	movf	_joystick_pressed,w
   929  00FA  1D03               	btfss	3,2
   930  00FB  28FD               	goto	u561
   931  00FC  28FE               	goto	u560
   932  00FD                     u561:	
   933  00FD  28A5               	goto	l1468
   934  00FE                     u560:	
   935  00FE                     l1494:	
   936                           
   937                           ;concentration.c: 96:                 cursor_pos++;
   938  00FE  3001               	movlw	1
   939  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   940  0100  1303               	bcf	3,6	;RP1=0, select bank0
   941  0101  00A6               	movwf	??_main
   942  0102  0826               	movf	??_main,w
   943  0103  07FB               	addwf	_cursor_pos,f
   944  0104  28E4               	goto	l1488
   945  0105                     l1498:	
   946  0105  1283               	bcf	3,5	;RP0=0, select bank0
   947  0106  1303               	bcf	3,6	;RP1=0, select bank0
   948  0107  0829               	movf	_joystick_y_pos+1,w
   949  0108  3A80               	xorlw	128
   950  0109  00FF               	movwf	btemp+1
   951  010A  3082               	movlw	130
   952  010B  027F               	subwf	btemp+1,w
   953  010C  1D03               	skipz
   954  010D  2910               	goto	u575
   955  010E  30BD               	movlw	189
   956  010F  0228               	subwf	_joystick_y_pos,w
   957  0110                     u575:	
   958  0110  1C03               	skipc
   959  0111  2913               	goto	u571
   960  0112  2914               	goto	u570
   961  0113                     u571:	
   962  0113  2920               	goto	l1506
   963  0114                     u570:	
   964  0114                     l1500:	
   965                           
   966                           ;concentration.c: 100:             if(joystick_pressed == 0) {
   967  0114  087A               	movf	_joystick_pressed,w
   968  0115  1D03               	btfss	3,2
   969  0116  2918               	goto	u581
   970  0117  2919               	goto	u580
   971  0118                     u581:	
   972  0118  28A5               	goto	l1468
   973  0119                     u580:	
   974  0119                     l1502:	
   975                           
   976                           ;concentration.c: 101:                 cursor_pos ^= 0x40;
   977  0119  3040               	movlw	64
   978  011A  1283               	bcf	3,5	;RP0=0, select bank0
   979  011B  1303               	bcf	3,6	;RP1=0, select bank0
   980  011C  00A6               	movwf	??_main
   981  011D  0826               	movf	??_main,w
   982  011E  06FB               	xorwf	_cursor_pos,f
   983  011F  28E4               	goto	l1488
   984  0120                     l1506:	
   985  0120  1283               	bcf	3,5	;RP0=0, select bank0
   986  0121  1303               	bcf	3,6	;RP1=0, select bank0
   987  0122  0829               	movf	_joystick_y_pos+1,w
   988  0123  3A80               	xorlw	128
   989  0124  00FF               	movwf	btemp+1
   990  0125  3081               	movlw	129
   991  0126  027F               	subwf	btemp+1,w
   992  0127  1D03               	skipz
   993  0128  292B               	goto	u595
   994  0129  302C               	movlw	44
   995  012A  0228               	subwf	_joystick_y_pos,w
   996  012B                     u595:	
   997  012B  1803               	skipnc
   998  012C  292E               	goto	u591
   999  012D  292F               	goto	u590
  1000  012E                     u591:	
  1001  012E  2935               	goto	l1514
  1002  012F                     u590:	
  1003  012F                     l1508:	
  1004                           
  1005                           ;concentration.c: 105:             if(joystick_pressed == 0) {
  1006  012F  087A               	movf	_joystick_pressed,w
  1007  0130  1D03               	btfss	3,2
  1008  0131  2933               	goto	u601
  1009  0132  2934               	goto	u600
  1010  0133                     u601:	
  1011  0133  2937               	goto	l120
  1012  0134                     u600:	
  1013  0134  2919               	goto	l1502
  1014  0135                     l1514:	
  1015                           
  1016                           ;concentration.c: 110:             joystick_pressed = 0;
  1017  0135  01FA               	clrf	_joystick_pressed
  1018  0136  28A5               	goto	l1468
  1019  0137                     l120:	
  1020  0137  28A5               	goto	l1468
  1021  0138  120A  118A  280C   	ljmp	start
  1022  013B                     __end_of_main:	
  1023                           
  1024                           	psect	text1
  1025  013B                     __ptext1:	
  1026 ;; *************** function _update_cursor *****************
  1027 ;; Defined at:
  1028 ;;		line 115 in file "concentration.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0
  1044 ;;      Temps:          0       2       0       0       0
  1045 ;;      Totals:         0       2       0       0       0
  1046 ;;Total ram usage:        2 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    4
  1049 ;; This function calls:
  1050 ;;		_get_current_char
  1051 ;;		_lcd_goto
  1052 ;;		_lcd_putch
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function _update_cursor
  1060  013B                     _update_cursor:	
  1061  013B                     l1412:	
  1062                           ;incstack = 0
  1063                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1064                           
  1065                           
  1066                           ;concentration.c: 116:     joystick_pressed = 1;
  1067  013B  01FA               	clrf	_joystick_pressed
  1068  013C  0AFA               	incf	_joystick_pressed,f
  1069                           
  1070                           ;concentration.c: 117:     switch(cursor_pos) {
  1071  013D  294F               	goto	l1424
  1072  013E                     l1414:	
  1073                           
  1074                           ;concentration.c: 119:             cursor_pos = 0x00;
  1075  013E  01FB               	clrf	_cursor_pos
  1076                           
  1077                           ;concentration.c: 120:             break;
  1078  013F  2967               	goto	l1426
  1079  0140                     l1416:	
  1080                           
  1081                           ;concentration.c: 122:             cursor_pos = 0x40;
  1082  0140  3040               	movlw	64
  1083  0141  00A4               	movwf	??_update_cursor
  1084  0142  0824               	movf	??_update_cursor,w
  1085  0143  00FB               	movwf	_cursor_pos
  1086                           
  1087                           ;concentration.c: 123:             break;
  1088  0144  2967               	goto	l1426
  1089  0145                     l1418:	
  1090                           
  1091                           ;concentration.c: 125:             cursor_pos = 0x0F;
  1092  0145  300F               	movlw	15
  1093  0146  00A4               	movwf	??_update_cursor
  1094  0147  0824               	movf	??_update_cursor,w
  1095  0148  00FB               	movwf	_cursor_pos
  1096                           
  1097                           ;concentration.c: 126:             break;
  1098  0149  2967               	goto	l1426
  1099  014A                     l1420:	
  1100                           
  1101                           ;concentration.c: 128:             cursor_pos = 0x4F;
  1102  014A  304F               	movlw	79
  1103  014B  00A4               	movwf	??_update_cursor
  1104  014C  0824               	movf	??_update_cursor,w
  1105  014D  00FB               	movwf	_cursor_pos
  1106                           
  1107                           ;concentration.c: 129:             break;
  1108  014E  2967               	goto	l1426
  1109  014F                     l1424:	
  1110  014F  087B               	movf	_cursor_pos,w
  1111  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0152  00A4               	movwf	??_update_cursor
  1114  0153  01A5               	clrf	??_update_cursor+1
  1115                           
  1116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 1, Range of values is 0 to 0
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte            4     3 (average)
  1122                           ; direct_byte           11     8 (fixed)
  1123                           ; jumptable            260     6 (fixed)
  1124                           ;	Chosen strategy is simple_byte
  1125  0154  0825               	movf	??_update_cursor+1,w
  1126  0155  3A00               	xorlw	0	; case 0
  1127  0156  1903               	skipnz
  1128  0157  2959               	goto	l1572
  1129  0158  2967               	goto	l1426
  1130  0159                     l1572:	
  1131                           
  1132                           ; Switch size 1, requested type "simple"
  1133                           ; Number of cases is 4, Range of values is 16 to 255
  1134                           ; switch strategies available:
  1135                           ; Name         Instructions Cycles
  1136                           ; simple_byte           13     7 (average)
  1137                           ; jumptable            263     9 (fixed)
  1138                           ;	Chosen strategy is simple_byte
  1139  0159  0824               	movf	??_update_cursor,w
  1140  015A  3A10               	xorlw	16	; case 16
  1141  015B  1903               	skipnz
  1142  015C  293E               	goto	l1414
  1143  015D  3A2F               	xorlw	47	; case 63
  1144  015E  1903               	skipnz
  1145  015F  294A               	goto	l1420
  1146  0160  3A6F               	xorlw	111	; case 80
  1147  0161  1903               	skipnz
  1148  0162  2940               	goto	l1416
  1149  0163  3AAF               	xorlw	175	; case 255
  1150  0164  1903               	skipnz
  1151  0165  2945               	goto	l1418
  1152  0166  2967               	goto	l1426
  1153  0167                     l1426:	
  1154                           
  1155                           ;concentration.c: 131:     lcd_putch(current_char, gameboard);
  1156  0167  3008               	movlw	8
  1157  0168  00A0               	movwf	lcd_putch@port
  1158  0169  3000               	movlw	0
  1159  016A  00A1               	movwf	lcd_putch@port+1
  1160  016B  082E               	movf	_current_char,w
  1161  016C  120A  118A  237D  120A  118A  	fcall	_lcd_putch
  1162                           
  1163                           ;concentration.c: 132:     lcd_goto(cursor_pos, gameboard);
  1164  0171  3008               	movlw	8
  1165  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0174  00A0               	movwf	lcd_goto@port
  1168  0175  3000               	movlw	0
  1169  0176  00A1               	movwf	lcd_goto@port+1
  1170  0177  087B               	movf	_cursor_pos,w
  1171  0178  120A  118A  2332  120A  118A  	fcall	_lcd_goto
  1172                           
  1173                           ;concentration.c: 133:     get_current_char();
  1174  017D  120A  118A  2269  120A  118A  	fcall	_get_current_char
  1175  0182                     l1428:	
  1176                           
  1177                           ;concentration.c: 134:     if(cursor_solid == 1) {
  1178  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0184  032D               	decf	_cursor_solid,w
  1181  0185  1D03               	btfss	3,2
  1182  0186  2988               	goto	u491
  1183  0187  2989               	goto	u490
  1184  0188                     u491:	
  1185  0188  299F               	goto	l142
  1186  0189                     u490:	
  1187  0189                     l1430:	
  1188                           
  1189                           ;concentration.c: 135:         lcd_putch(0xFF, gameboard);
  1190  0189  3008               	movlw	8
  1191  018A  00A0               	movwf	lcd_putch@port
  1192  018B  3000               	movlw	0
  1193  018C  00A1               	movwf	lcd_putch@port+1
  1194  018D  30FF               	movlw	255
  1195  018E  120A  118A  237D  120A  118A  	fcall	_lcd_putch
  1196                           
  1197                           ;concentration.c: 136:         lcd_goto(cursor_pos, gameboard);
  1198  0193  3008               	movlw	8
  1199  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0196  00A0               	movwf	lcd_goto@port
  1202  0197  3000               	movlw	0
  1203  0198  00A1               	movwf	lcd_goto@port+1
  1204  0199  087B               	movf	_cursor_pos,w
  1205  019A  120A  118A  2332  120A  118A  	fcall	_lcd_goto
  1206  019F                     l142:	
  1207  019F  0008               	return
  1208  01A0                     __end_of_update_cursor:	
  1209                           
  1210                           	psect	text2
  1211  0269                     __ptext2:	
  1212 ;; *************** function _get_current_char *****************
  1213 ;; Defined at:
  1214 ;;		line 151 in file "concentration.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0
  1230 ;;      Temps:          1       0       0       0       0
  1231 ;;      Totals:         1       0       0       0       0
  1232 ;;Total ram usage:        1 bytes
  1233 ;; Hardware stack levels used:    2
  1234 ;; Hardware stack levels required when called:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;;		_update_cursor
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _get_current_char
  1245  0269                     _get_current_char:	
  1246  0269                     l1122:	
  1247                           ;incstack = 0
  1248                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath]
  1249                           
  1250                           
  1251                           ;concentration.c: 152:     if((cursor_pos>>4) == 4) {
  1252  0269  087B               	movf	_cursor_pos,w
  1253  026A  00F2               	movwf	??_get_current_char
  1254  026B  3004               	movlw	4
  1255  026C                     u285:	
  1256  026C  1003               	clrc
  1257  026D  0CF2               	rrf	??_get_current_char,f
  1258  026E  3EFF               	addlw	-1
  1259  026F  1D03               	skipz
  1260  0270  2A6C               	goto	u285
  1261  0271  3004               	movlw	4
  1262  0272  0672               	xorwf	??_get_current_char,w
  1263  0273  1D03               	btfss	3,2
  1264  0274  2A76               	goto	u291
  1265  0275  2A77               	goto	u290
  1266  0276                     u291:	
  1267  0276  2A86               	goto	l1126
  1268  0277                     u290:	
  1269  0277                     l1124:	
  1270                           
  1271                           ;concentration.c: 153:         current_char = board_r2[cursor_pos&0x0F];
  1272  0277  087B               	movf	_cursor_pos,w
  1273  0278  390F               	andlw	15
  1274  0279  3E01               	addlw	low ((_board_r2-__stringbase)| (0+32768))
  1275  027A  0084               	movwf	4
  1276  027B  120A  118A  22C0  120A  118A  	fcall	stringdir
  1277  0280  00F2               	movwf	??_get_current_char
  1278  0281  0872               	movf	??_get_current_char,w
  1279  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0284  00AE               	movwf	_current_char
  1282                           
  1283                           ;concentration.c: 154:     } else {
  1284  0285  2A94               	goto	l152
  1285  0286                     l1126:	
  1286                           
  1287                           ;concentration.c: 155:         current_char = board_r1[cursor_pos&0x0F];
  1288  0286  087B               	movf	_cursor_pos,w
  1289  0287  390F               	andlw	15
  1290  0288  3E12               	addlw	low ((_board_r1-__stringbase)| (0+32768))
  1291  0289  0084               	movwf	4
  1292  028A  120A  118A  22C0  120A  118A  	fcall	stringdir
  1293  028F  00F2               	movwf	??_get_current_char
  1294  0290  0872               	movf	??_get_current_char,w
  1295  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0293  00AE               	movwf	_current_char
  1298  0294                     l152:	
  1299  0294  0008               	return
  1300  0295                     __end_of_get_current_char:	
  1301                           
  1302                           	psect	text3
  1303  023B                     __ptext3:	
  1304 ;; *************** function _toggle_cursor *****************
  1305 ;; Defined at:
  1306 ;;		line 140 in file "concentration.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    4
  1327 ;; This function calls:
  1328 ;;		_lcd_goto
  1329 ;;		_lcd_putch
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _toggle_cursor
  1337  023B                     _toggle_cursor:	
  1338  023B                     l1400:	
  1339                           ;incstack = 0
  1340                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1341                           
  1342                           
  1343                           ;concentration.c: 141:     if(cursor_solid == 0) {
  1344  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1345  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1346  023D  082D               	movf	_cursor_solid,w
  1347  023E  1D03               	btfss	3,2
  1348  023F  2A41               	goto	u481
  1349  0240  2A42               	goto	u480
  1350  0241                     u481:	
  1351  0241  2A51               	goto	l1406
  1352  0242                     u480:	
  1353  0242                     l1402:	
  1354                           
  1355                           ;concentration.c: 142:         lcd_putch(0xFF, gameboard);
  1356  0242  3008               	movlw	8
  1357  0243  00A0               	movwf	lcd_putch@port
  1358  0244  3000               	movlw	0
  1359  0245  00A1               	movwf	lcd_putch@port+1
  1360  0246  30FF               	movlw	255
  1361  0247  120A  118A  237D  120A  118A  	fcall	_lcd_putch
  1362  024C                     l1404:	
  1363                           
  1364                           ;concentration.c: 143:         cursor_solid = 1;
  1365  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1366  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1367  024E  01AD               	clrf	_cursor_solid
  1368  024F  0AAD               	incf	_cursor_solid,f
  1369                           
  1370                           ;concentration.c: 144:     } else {
  1371  0250  2A5E               	goto	l1410
  1372  0251                     l1406:	
  1373                           
  1374                           ;concentration.c: 145:         lcd_putch(current_char, gameboard);
  1375  0251  3008               	movlw	8
  1376  0252  00A0               	movwf	lcd_putch@port
  1377  0253  3000               	movlw	0
  1378  0254  00A1               	movwf	lcd_putch@port+1
  1379  0255  082E               	movf	_current_char,w
  1380  0256  120A  118A  237D  120A  118A  	fcall	_lcd_putch
  1381  025B                     l1408:	
  1382                           
  1383                           ;concentration.c: 146:         cursor_solid = 0;
  1384  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1385  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1386  025D  01AD               	clrf	_cursor_solid
  1387  025E                     l1410:	
  1388                           
  1389                           ;concentration.c: 148:     lcd_goto(cursor_pos, gameboard);
  1390  025E  3008               	movlw	8
  1391  025F  00A0               	movwf	lcd_goto@port
  1392  0260  3000               	movlw	0
  1393  0261  00A1               	movwf	lcd_goto@port+1
  1394  0262  087B               	movf	_cursor_pos,w
  1395  0263  120A  118A  2332  120A  118A  	fcall	_lcd_goto
  1396  0268                     l147:	
  1397  0268  0008               	return
  1398  0269                     __end_of_toggle_cursor:	
  1399                           
  1400                           	psect	text4
  1401  037D                     __ptext4:	
  1402 ;; *************** function _lcd_putch *****************
  1403 ;; Defined at:
  1404 ;;		line 136 in file "lcd4bits.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  character       1    wreg     unsigned char 
  1407 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1408 ;;		 -> PORTD(1), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  character       1    3[BANK0 ] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       2       0       0       0
  1421 ;;      Locals:         0       1       0       0       0
  1422 ;;      Temps:          0       1       0       0       0
  1423 ;;      Totals:         0       4       0       0       0
  1424 ;;Total ram usage:        4 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    3
  1427 ;; This function calls:
  1428 ;;		_lcd_write
  1429 ;; This function is called by:
  1430 ;;		_update_cursor
  1431 ;;		_toggle_cursor
  1432 ;;		_update_gameboard
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _lcd_putch
  1438  037D                     _lcd_putch:	
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1442                           ;lcd_putch@character stored from wreg
  1443  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1444  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1445  037F  00A3               	movwf	lcd_putch@character
  1446  0380                     l1376:	
  1447                           
  1448                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  1449  0380  0823               	movf	lcd_putch@character,w
  1450  0381  00A2               	movwf	??_lcd_putch
  1451  0382  0822               	movf	??_lcd_putch,w
  1452  0383  00F4               	movwf	lcd_write@CmdChar
  1453  0384  0820               	movf	lcd_putch@port,w
  1454  0385  00F5               	movwf	lcd_write@port
  1455  0386  0821               	movf	lcd_putch@port+1,w
  1456  0387  00F6               	movwf	lcd_write@port+1
  1457  0388  3010               	movlw	16
  1458  0389  120A  118A  21F2  120A  118A  	fcall	_lcd_write
  1459  038E                     l214:	
  1460  038E  0008               	return
  1461  038F                     __end_of_lcd_putch:	
  1462                           
  1463                           	psect	text5
  1464  0332                     __ptext5:	
  1465 ;; *************** function _lcd_goto *****************
  1466 ;; Defined at:
  1467 ;;		line 146 in file "lcd4bits.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  position        1    wreg     unsigned char 
  1470 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1471 ;;		 -> PORTD(1), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  position        1    3[BANK0 ] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       2       0       0       0
  1484 ;;      Locals:         0       1       0       0       0
  1485 ;;      Temps:          0       1       0       0       0
  1486 ;;      Totals:         0       4       0       0       0
  1487 ;;Total ram usage:        4 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    3
  1490 ;; This function calls:
  1491 ;;		_DelayMs
  1492 ;;		_lcd_write
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;;		_update_cursor
  1496 ;;		_toggle_cursor
  1497 ;;		_update_gameboard
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _lcd_goto
  1503  0332                     _lcd_goto:	
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1507                           ;lcd_goto@position stored from wreg
  1508  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0334  00A3               	movwf	lcd_goto@position
  1511  0335                     l1372:	
  1512                           
  1513                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  1514  0335  0823               	movf	lcd_goto@position,w
  1515  0336  3E80               	addlw	128
  1516  0337  00A2               	movwf	??_lcd_goto
  1517  0338  0822               	movf	??_lcd_goto,w
  1518  0339  00F4               	movwf	lcd_write@CmdChar
  1519  033A  0820               	movf	lcd_goto@port,w
  1520  033B  00F5               	movwf	lcd_write@port
  1521  033C  0821               	movf	lcd_goto@port+1,w
  1522  033D  00F6               	movwf	lcd_write@port+1
  1523  033E  3000               	movlw	0
  1524  033F  120A  118A  21F2  120A  118A  	fcall	_lcd_write
  1525  0344                     l1374:	
  1526                           
  1527                           ;lcd4bits.c: 149:     DelayMs(2);
  1528  0344  3002               	movlw	2
  1529  0345  00F2               	movwf	DelayMs@millis
  1530  0346  3000               	movlw	0
  1531  0347  00F3               	movwf	DelayMs@millis+1
  1532  0348  120A  118A  2366  120A  118A  	fcall	_DelayMs
  1533  034D                     l217:	
  1534  034D  0008               	return
  1535  034E                     __end_of_lcd_goto:	
  1536                           
  1537                           	psect	text6
  1538  038F                     __ptext6:	
  1539 ;; *************** function _time_init *****************
  1540 ;; Defined at:
  1541 ;;		line 186 in file "concentration.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		None
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0
  1558 ;;      Totals:         0       0       0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _time_init
  1571  038F                     _time_init:	
  1572  038F                     l1172:	
  1573                           ;incstack = 0
  1574                           ; Regs used in _time_init: []
  1575                           
  1576                           
  1577                           ;concentration.c: 187:     CCP1M3 = 1;
  1578  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0391  1597               	bsf	23,3	;volatile
  1581                           
  1582                           ;concentration.c: 188:     CCP1M2 = 0;
  1583  0392  1117               	bcf	23,2	;volatile
  1584                           
  1585                           ;concentration.c: 189:     CCP1M1 = 1;
  1586  0393  1497               	bsf	23,1	;volatile
  1587                           
  1588                           ;concentration.c: 190:     CCP1M0 = 0;
  1589  0394  1017               	bcf	23,0	;volatile
  1590                           
  1591                           ;concentration.c: 191:     TMR1CS = 0;
  1592  0395  1090               	bcf	16,1	;volatile
  1593                           
  1594                           ;concentration.c: 192:     T1CKPS0 = 0;
  1595  0396  1210               	bcf	16,4	;volatile
  1596                           
  1597                           ;concentration.c: 193:     T1CKPS1 = 0;
  1598  0397  1290               	bcf	16,5	;volatile
  1599                           
  1600                           ;concentration.c: 194:     TMR1GE = 0;
  1601  0398  1310               	bcf	16,6	;volatile
  1602                           
  1603                           ;concentration.c: 195:     TMR1ON = 1;
  1604  0399  1410               	bsf	16,0	;volatile
  1605  039A                     l165:	
  1606  039A  0008               	return
  1607  039B                     __end_of_time_init:	
  1608                           
  1609                           	psect	text7
  1610  0295                     __ptext7:	
  1611 ;; *************** function _lcd_puts *****************
  1612 ;; Defined at:
  1613 ;;		line 129 in file "lcd4bits.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  string          1    wreg     PTR const unsigned char 
  1616 ;;		 -> board_r2(17), board_r1(17), 
  1617 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1618 ;;		 -> PORTD(1), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  string          1    3[BANK0 ] PTR const unsigned char 
  1621 ;;		 -> board_r2(17), board_r1(17), 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       2       0       0       0
  1632 ;;      Locals:         0       1       0       0       0
  1633 ;;      Temps:          0       1       0       0       0
  1634 ;;      Totals:         0       4       0       0       0
  1635 ;;Total ram usage:        4 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    3
  1638 ;; This function calls:
  1639 ;;		_lcd_write
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _lcd_puts
  1647  0295                     _lcd_puts:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1651                           ;lcd_puts@string stored from wreg
  1652  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0297  00A3               	movwf	lcd_puts@string
  1655  0298                     l1392:	
  1656                           
  1657                           ;lcd4bits.c: 130:     while (*string != 0) {
  1658  0298  2AB3               	goto	l1398
  1659  0299                     l1394:	
  1660                           
  1661                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  1662  0299  0823               	movf	lcd_puts@string,w
  1663  029A  0084               	movwf	4
  1664  029B  120A  118A  22C0  120A  118A  	fcall	stringdir
  1665  02A0  00A2               	movwf	??_lcd_puts
  1666  02A1  0822               	movf	??_lcd_puts,w
  1667  02A2  00F4               	movwf	lcd_write@CmdChar
  1668  02A3  0820               	movf	lcd_puts@port,w
  1669  02A4  00F5               	movwf	lcd_write@port
  1670  02A5  0821               	movf	lcd_puts@port+1,w
  1671  02A6  00F6               	movwf	lcd_write@port+1
  1672  02A7  3010               	movlw	16
  1673  02A8  120A  118A  21F2  120A  118A  	fcall	_lcd_write
  1674  02AD                     l1396:	
  1675  02AD  3001               	movlw	1
  1676  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1677  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1678  02B0  00A2               	movwf	??_lcd_puts
  1679  02B1  0822               	movf	??_lcd_puts,w
  1680  02B2  07A3               	addwf	lcd_puts@string,f
  1681  02B3                     l1398:	
  1682                           
  1683                           ;lcd4bits.c: 130:     while (*string != 0) {
  1684  02B3  0823               	movf	lcd_puts@string,w
  1685  02B4  0084               	movwf	4
  1686  02B5  120A  118A  22C0  120A  118A  	fcall	stringdir
  1687  02BA  3A00               	xorlw	0
  1688  02BB  1D03               	skipz
  1689  02BC  2ABE               	goto	u471
  1690  02BD  2ABF               	goto	u470
  1691  02BE                     u471:	
  1692  02BE  2A99               	goto	l1394
  1693  02BF                     u470:	
  1694  02BF                     l211:	
  1695  02BF  0008               	return
  1696  02C0                     __end_of_lcd_puts:	
  1697                           
  1698                           	psect	text8
  1699  01A0                     __ptext8:	
  1700 ;; *************** function _lcd_init *****************
  1701 ;; Defined at:
  1702 ;;		line 155 in file "lcd4bits.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  port            2    2[BANK0 ] PTR unsigned char 
  1705 ;;		 -> PORTA(1), PORTD(1), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       2       0       0       0
  1718 ;;      Locals:         0       0       0       0       0
  1719 ;;      Temps:          0       1       0       0       0
  1720 ;;      Totals:         0       3       0       0       0
  1721 ;;Total ram usage:        3 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    4
  1724 ;; This function calls:
  1725 ;;		_DelayMs
  1726 ;;		_lcd_clear
  1727 ;;		_lcd_write
  1728 ;;		_tmr0_init
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _lcd_init
  1736  01A0                     _lcd_init:	
  1737  01A0                     l1378:	
  1738                           ;incstack = 0
  1739                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1740                           
  1741                           
  1742                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  1743  01A0  120A  118A  23A7  120A  118A  	fcall	_tmr0_init
  1744  01A5                     l1380:	
  1745                           
  1746                           ;lcd4bits.c: 158:     *port = 0;
  1747  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1748  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1749  01A7  0822               	movf	lcd_init@port,w
  1750  01A8  0084               	movwf	4
  1751  01A9  1783               	bsf	3,7
  1752  01AA  1C23               	btfss	lcd_init@port+1,0
  1753  01AB  1383               	bcf	3,7
  1754  01AC  0180               	clrf	0
  1755  01AD                     l1382:	
  1756                           
  1757                           ;lcd4bits.c: 159:     DelayMs(15);
  1758  01AD  300F               	movlw	15
  1759  01AE  00F2               	movwf	DelayMs@millis
  1760  01AF  3000               	movlw	0
  1761  01B0  00F3               	movwf	DelayMs@millis+1
  1762  01B1  120A  118A  2366  120A  118A  	fcall	_DelayMs
  1763  01B6                     l1384:	
  1764                           
  1765                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  1766  01B6  3028               	movlw	40
  1767  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1768  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1769  01B9  00A4               	movwf	??_lcd_init
  1770  01BA  0824               	movf	??_lcd_init,w
  1771  01BB  00F4               	movwf	lcd_write@CmdChar
  1772  01BC  0822               	movf	lcd_init@port,w
  1773  01BD  00F5               	movwf	lcd_write@port
  1774  01BE  0823               	movf	lcd_init@port+1,w
  1775  01BF  00F6               	movwf	lcd_write@port+1
  1776  01C0  3000               	movlw	0
  1777  01C1  120A  118A  21F2  120A  118A  	fcall	_lcd_write
  1778  01C6                     l1386:	
  1779                           
  1780                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  1781  01C6  300C               	movlw	12
  1782  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1783  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1784  01C9  00A4               	movwf	??_lcd_init
  1785  01CA  0824               	movf	??_lcd_init,w
  1786  01CB  00F4               	movwf	lcd_write@CmdChar
  1787  01CC  0822               	movf	lcd_init@port,w
  1788  01CD  00F5               	movwf	lcd_write@port
  1789  01CE  0823               	movf	lcd_init@port+1,w
  1790  01CF  00F6               	movwf	lcd_write@port+1
  1791  01D0  3000               	movlw	0
  1792  01D1  120A  118A  21F2  120A  118A  	fcall	_lcd_write
  1793  01D6                     l1388:	
  1794                           
  1795                           ;lcd4bits.c: 162:     lcd_clear(port);
  1796  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1797  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1798  01D8  0822               	movf	lcd_init@port,w
  1799  01D9  00A0               	movwf	lcd_clear@port
  1800  01DA  0823               	movf	lcd_init@port+1,w
  1801  01DB  00A1               	movwf	lcd_clear@port+1
  1802  01DC  120A  118A  234E  120A  118A  	fcall	_lcd_clear
  1803  01E1                     l1390:	
  1804                           
  1805                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  1806  01E1  3006               	movlw	6
  1807  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1808  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1809  01E4  00A4               	movwf	??_lcd_init
  1810  01E5  0824               	movf	??_lcd_init,w
  1811  01E6  00F4               	movwf	lcd_write@CmdChar
  1812  01E7  0822               	movf	lcd_init@port,w
  1813  01E8  00F5               	movwf	lcd_write@port
  1814  01E9  0823               	movf	lcd_init@port+1,w
  1815  01EA  00F6               	movwf	lcd_write@port+1
  1816  01EB  3000               	movlw	0
  1817  01EC  120A  118A  21F2  120A  118A  	fcall	_lcd_write
  1818  01F1                     l220:	
  1819  01F1  0008               	return
  1820  01F2                     __end_of_lcd_init:	
  1821                           
  1822                           	psect	text9
  1823  03A7                     __ptext9:	
  1824 ;; *************** function _tmr0_init *****************
  1825 ;; Defined at:
  1826 ;;		line 72 in file "lcd4bits.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0
  1842 ;;      Temps:          1       0       0       0       0
  1843 ;;      Totals:         1       0       0       0       0
  1844 ;;Total ram usage:        1 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_lcd_init
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _tmr0_init
  1856  03A7                     _tmr0_init:	
  1857  03A7                     l1130:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  1860                           
  1861                           
  1862                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  1863  03A7  30C0               	movlw	192
  1864  03A8  00F2               	movwf	??_tmr0_init
  1865  03A9  0872               	movf	??_tmr0_init,w
  1866  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1867  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1868  03AC  0581               	andwf	1,f	;volatile
  1869  03AD                     l1132:	
  1870                           
  1871                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  1872  03AD  1501               	bsf	1,2	;volatile
  1873  03AE                     l185:	
  1874  03AE  0008               	return
  1875  03AF                     __end_of_tmr0_init:	
  1876                           
  1877                           	psect	text10
  1878  034E                     __ptext10:	
  1879 ;; *************** function _lcd_clear *****************
  1880 ;; Defined at:
  1881 ;;		line 123 in file "lcd4bits.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1884 ;;		 -> PORTA(1), PORTD(1), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       2       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0
  1899 ;;      Totals:         0       2       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    3
  1903 ;; This function calls:
  1904 ;;		_DelayMs
  1905 ;;		_lcd_write
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;;		_lcd_init
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _lcd_clear
  1914  034E                     _lcd_clear:	
  1915  034E                     l1368:	
  1916                           ;incstack = 0
  1917                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1918                           
  1919                           
  1920                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  1921  034E  01F4               	clrf	lcd_write@CmdChar
  1922  034F  0AF4               	incf	lcd_write@CmdChar,f
  1923  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0352  0820               	movf	lcd_clear@port,w
  1926  0353  00F5               	movwf	lcd_write@port
  1927  0354  0821               	movf	lcd_clear@port+1,w
  1928  0355  00F6               	movwf	lcd_write@port+1
  1929  0356  3000               	movlw	0
  1930  0357  120A  118A  21F2  120A  118A  	fcall	_lcd_write
  1931  035C                     l1370:	
  1932                           
  1933                           ;lcd4bits.c: 125:     DelayMs(2);
  1934  035C  3002               	movlw	2
  1935  035D  00F2               	movwf	DelayMs@millis
  1936  035E  3000               	movlw	0
  1937  035F  00F3               	movwf	DelayMs@millis+1
  1938  0360  120A  118A  2366  120A  118A  	fcall	_DelayMs
  1939  0365                     l205:	
  1940  0365  0008               	return
  1941  0366                     __end_of_lcd_clear:	
  1942                           
  1943                           	psect	text11
  1944  01F2                     __ptext11:	
  1945 ;; *************** function _lcd_write *****************
  1946 ;; Defined at:
  1947 ;;		line 110 in file "lcd4bits.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  mode            1    wreg     unsigned char 
  1950 ;;  CmdChar         1    4[COMMON] unsigned char 
  1951 ;;  port            2    5[COMMON] PTR unsigned char 
  1952 ;;		 -> PORTA(1), PORTD(1), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  mode            1    9[COMMON] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1964 ;;      Params:         3       0       0       0       0
  1965 ;;      Locals:         1       0       0       0       0
  1966 ;;      Temps:          2       0       0       0       0
  1967 ;;      Totals:         6       0       0       0       0
  1968 ;;Total ram usage:        6 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		_Delay20us
  1973 ;; This function is called by:
  1974 ;;		_lcd_clear
  1975 ;;		_lcd_puts
  1976 ;;		_lcd_putch
  1977 ;;		_lcd_goto
  1978 ;;		_lcd_init
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _lcd_write
  1984  01F2                     _lcd_write:	
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1988                           ;lcd_write@mode stored from wreg
  1989  01F2  00F9               	movwf	lcd_write@mode
  1990  01F3                     l1104:	
  1991                           
  1992                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  1993  01F3  0874               	movf	lcd_write@CmdChar,w
  1994  01F4  00F7               	movwf	??_lcd_write
  1995  01F5  3004               	movlw	4
  1996  01F6                     u275:	
  1997  01F6  1003               	clrc
  1998  01F7  0CF7               	rrf	??_lcd_write,f
  1999  01F8  3EFF               	addlw	-1
  2000  01F9  1D03               	skipz
  2001  01FA  29F6               	goto	u275
  2002  01FB  0877               	movf	??_lcd_write,w
  2003  01FC  3E20               	addlw	32
  2004  01FD  0479               	iorwf	lcd_write@mode,w
  2005  01FE  00F8               	movwf	??_lcd_write+1
  2006  01FF  0875               	movf	lcd_write@port,w
  2007  0200  0084               	movwf	4
  2008  0201  1783               	bsf	3,7
  2009  0202  1C76               	btfss	lcd_write@port+1,0
  2010  0203  1383               	bcf	3,7
  2011  0204  0878               	movf	??_lcd_write+1,w
  2012  0205  0080               	movwf	0
  2013  0206                     l1106:	
  2014                           
  2015                           ;lcd4bits.c: 112:     Delay20us();
  2016  0206  120A  118A  239B  120A  118A  	fcall	_Delay20us
  2017  020B                     l1108:	
  2018                           
  2019                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  2020  020B  0875               	movf	lcd_write@port,w
  2021  020C  0084               	movwf	4
  2022  020D  1783               	bsf	3,7
  2023  020E  1C76               	btfss	lcd_write@port+1,0
  2024  020F  1383               	bcf	3,7
  2025  0210  0800               	movf	0,w
  2026  0211  39DF               	andlw	223
  2027  0212  00F7               	movwf	??_lcd_write
  2028  0213  0875               	movf	lcd_write@port,w
  2029  0214  0084               	movwf	4
  2030  0215  1783               	bsf	3,7
  2031  0216  1C76               	btfss	lcd_write@port+1,0
  2032  0217  1383               	bcf	3,7
  2033  0218  0877               	movf	??_lcd_write,w
  2034  0219  0080               	movwf	0
  2035  021A                     l1110:	
  2036                           
  2037                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  2038  021A  0874               	movf	lcd_write@CmdChar,w
  2039  021B  390F               	andlw	15
  2040  021C  3E20               	addlw	32
  2041  021D  0479               	iorwf	lcd_write@mode,w
  2042  021E  00F7               	movwf	??_lcd_write
  2043  021F  0875               	movf	lcd_write@port,w
  2044  0220  0084               	movwf	4
  2045  0221  1783               	bsf	3,7
  2046  0222  1C76               	btfss	lcd_write@port+1,0
  2047  0223  1383               	bcf	3,7
  2048  0224  0877               	movf	??_lcd_write,w
  2049  0225  0080               	movwf	0
  2050  0226                     l1112:	
  2051                           
  2052                           ;lcd4bits.c: 116:     Delay20us();
  2053  0226  120A  118A  239B  120A  118A  	fcall	_Delay20us
  2054                           
  2055                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  2056  022B  0875               	movf	lcd_write@port,w
  2057  022C  0084               	movwf	4
  2058  022D  1783               	bsf	3,7
  2059  022E  1C76               	btfss	lcd_write@port+1,0
  2060  022F  1383               	bcf	3,7
  2061  0230  0800               	movf	0,w
  2062  0231  39DF               	andlw	223
  2063  0232  00F7               	movwf	??_lcd_write
  2064  0233  0875               	movf	lcd_write@port,w
  2065  0234  0084               	movwf	4
  2066  0235  1783               	bsf	3,7
  2067  0236  1C76               	btfss	lcd_write@port+1,0
  2068  0237  1383               	bcf	3,7
  2069  0238  0877               	movf	??_lcd_write,w
  2070  0239  0080               	movwf	0
  2071  023A                     l202:	
  2072  023A  0008               	return
  2073  023B                     __end_of_lcd_write:	
  2074                           
  2075                           	psect	text12
  2076  039B                     __ptext12:	
  2077 ;; *************** function _Delay20us *****************
  2078 ;; Defined at:
  2079 ;;		line 99 in file "lcd4bits.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  next            1    3[COMMON] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0
  2095 ;;      Temps:          1       0       0       0       0
  2096 ;;      Totals:         2       0       0       0       0
  2097 ;;Total ram usage:        2 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_lcd_write
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _Delay20us
  2109  039B                     _Delay20us:	
  2110  039B                     l1084:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  2113                           
  2114                           
  2115                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  2116  039B  01F3               	clrf	Delay20us@next
  2117  039C                     l1090:	
  2118  039C  3001               	movlw	1
  2119  039D  00F2               	movwf	??_Delay20us
  2120  039E  0872               	movf	??_Delay20us,w
  2121  039F  07F3               	addwf	Delay20us@next,f
  2122  03A0                     l1092:	
  2123  03A0  3008               	movlw	8
  2124  03A1  0273               	subwf	Delay20us@next,w
  2125  03A2  1C03               	skipc
  2126  03A3  2BA5               	goto	u241
  2127  03A4  2BA6               	goto	u240
  2128  03A5                     u241:	
  2129  03A5  2B9C               	goto	l1090
  2130  03A6                     u240:	
  2131  03A6                     l199:	
  2132  03A6  0008               	return
  2133  03A7                     __end_of_Delay20us:	
  2134                           
  2135                           	psect	text13
  2136  0366                     __ptext13:	
  2137 ;; *************** function _DelayMs *****************
  2138 ;; Defined at:
  2139 ;;		line 86 in file "lcd4bits.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  millis          2    2[COMMON] unsigned int 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         2       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0
  2156 ;;      Totals:         2       0       0       0       0
  2157 ;;Total ram usage:        2 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_lcd_clear
  2164 ;;		_lcd_goto
  2165 ;;		_lcd_init
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _DelayMs
  2171  0366                     _DelayMs:	
  2172  0366                     l1094:	
  2173                           ;incstack = 0
  2174                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  2175                           
  2176                           
  2177                           ;lcd4bits.c: 87:     while (millis != 0) {
  2178  0366  2B76               	goto	l1102
  2179  0367                     l1096:	
  2180                           
  2181                           ;lcd4bits.c: 88:         TMR0 = 100;
  2182  0367  3064               	movlw	100
  2183  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2185  036A  0081               	movwf	1	;volatile
  2186  036B                     l1098:	
  2187                           
  2188                           ;lcd4bits.c: 89:         T0IF = 0;
  2189  036B  110B               	bcf	11,2	;volatile
  2190  036C                     l190:	
  2191                           ;lcd4bits.c: 90:         while(T0IF == 0);
  2192                           
  2193  036C  1D0B               	btfss	11,2	;volatile
  2194  036D  2B6F               	goto	u251
  2195  036E  2B70               	goto	u250
  2196  036F                     u251:	
  2197  036F  2B6C               	goto	l190
  2198  0370                     u250:	
  2199  0370                     l1100:	
  2200                           
  2201                           ;lcd4bits.c: 91:         millis--;
  2202  0370  3001               	movlw	1
  2203  0371  02F2               	subwf	DelayMs@millis,f
  2204  0372  3000               	movlw	0
  2205  0373  1C03               	skipc
  2206  0374  03F3               	decf	DelayMs@millis+1,f
  2207  0375  02F3               	subwf	DelayMs@millis+1,f
  2208  0376                     l1102:	
  2209                           
  2210                           ;lcd4bits.c: 87:     while (millis != 0) {
  2211  0376  0872               	movf	DelayMs@millis,w
  2212  0377  0473               	iorwf	DelayMs@millis+1,w
  2213  0378  1D03               	btfss	3,2
  2214  0379  2B7B               	goto	u261
  2215  037A  2B7C               	goto	u260
  2216  037B                     u261:	
  2217  037B  2B67               	goto	l1096
  2218  037C                     u260:	
  2219  037C                     l194:	
  2220  037C  0008               	return
  2221  037D                     __end_of_DelayMs:	
  2222                           
  2223                           	psect	text14
  2224  02E8                     __ptext14:	
  2225 ;; *************** function _joystick_init *****************
  2226 ;; Defined at:
  2227 ;;		line 198 in file "concentration.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0
  2244 ;;      Totals:         0       0       0       0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _joystick_init
  2257  02E8                     _joystick_init:	
  2258  02E8                     l1148:	
  2259                           ;incstack = 0
  2260                           ; Regs used in _joystick_init: [wreg+status,2]
  2261                           
  2262                           
  2263                           ;concentration.c: 199:     joystick_x_pos = 512;
  2264  02E8  3000               	movlw	0
  2265  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2266  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2267  02EB  00AA               	movwf	_joystick_x_pos
  2268  02EC  3002               	movlw	2
  2269  02ED  00AB               	movwf	_joystick_x_pos+1
  2270                           
  2271                           ;concentration.c: 200:     joystick_y_pos = 512;
  2272  02EE  3000               	movlw	0
  2273  02EF  00A8               	movwf	_joystick_y_pos
  2274  02F0  3002               	movlw	2
  2275  02F1  00A9               	movwf	_joystick_y_pos+1
  2276  02F2                     l1150:	
  2277                           
  2278                           ;concentration.c: 201:     PORTB = 0;
  2279  02F2  0186               	clrf	6	;volatile
  2280  02F3                     l1152:	
  2281                           
  2282                           ;concentration.c: 202:     nRBPU = 0;
  2283  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2284  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2285  02F5  1381               	bcf	1,7	;volatile
  2286  02F6                     l1154:	
  2287                           
  2288                           ;concentration.c: 203:     WPUB = 0x20;
  2289  02F6  3020               	movlw	32
  2290  02F7  0095               	movwf	21	;volatile
  2291  02F8                     l1156:	
  2292                           
  2293                           ;concentration.c: 204:     TRISB = 0x38;
  2294  02F8  3038               	movlw	56
  2295  02F9  0086               	movwf	6	;volatile
  2296  02FA                     l1158:	
  2297                           
  2298                           ;concentration.c: 205:     ANSELH = 0x0A;
  2299  02FA  300A               	movlw	10
  2300  02FB  1683               	bsf	3,5	;RP0=1, select bank3
  2301  02FC  1703               	bsf	3,6	;RP1=1, select bank3
  2302  02FD  0089               	movwf	9	;volatile
  2303  02FE                     l1160:	
  2304                           
  2305                           ;concentration.c: 206:     GIE = 1;
  2306  02FE  178B               	bsf	11,7	;volatile
  2307  02FF                     l1162:	
  2308                           
  2309                           ;concentration.c: 207:     PEIE = 1;
  2310  02FF  170B               	bsf	11,6	;volatile
  2311  0300                     l1164:	
  2312                           
  2313                           ;concentration.c: 208:     ADIF = 0;
  2314  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0302  130C               	bcf	12,6	;volatile
  2317  0303                     l1166:	
  2318                           
  2319                           ;concentration.c: 209:     ADIE = 1;
  2320  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0304  1303               	bcf	3,6	;RP1=0, select bank1
  2322  0305  170C               	bsf	12,6	;volatile
  2323  0306                     l1168:	
  2324                           
  2325                           ;concentration.c: 210:     ADCON1 = 0x80;
  2326  0306  3080               	movlw	128
  2327  0307  009F               	movwf	31	;volatile
  2328  0308                     l1170:	
  2329                           
  2330                           ;concentration.c: 211:     ADCON0 = 0xA5;
  2331  0308  30A5               	movlw	165
  2332  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2333  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2334  030B  009F               	movwf	31	;volatile
  2335  030C                     l168:	
  2336  030C  0008               	return
  2337  030D                     __end_of_joystick_init:	
  2338                           
  2339                           	psect	text15
  2340  030D                     __ptext15:	
  2341 ;; *************** function _interrupt_handler *****************
  2342 ;; Defined at:
  2343 ;;		line 214 in file "concentration.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0
  2359 ;;      Temps:          2       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		Interrupt level 1
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function _interrupt_handler
  2372  030D                     _interrupt_handler:	
  2373  030D                     i1l1324:	
  2374                           
  2375                           ;concentration.c: 215:     if(ADIF) {
  2376  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2377  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2378  030F  1F0C               	btfss	12,6	;volatile
  2379  0310  2B12               	goto	u45_21
  2380  0311  2B13               	goto	u45_20
  2381  0312                     u45_21:	
  2382  0312  2B2B               	goto	i1l176
  2383  0313                     u45_20:	
  2384  0313                     i1l1326:	
  2385                           
  2386                           ;concentration.c: 216:         if(CHS1 == 1) {
  2387  0313  1D9F               	btfss	31,3	;volatile
  2388  0314  2B16               	goto	u46_21
  2389  0315  2B17               	goto	u46_20
  2390  0316                     u46_21:	
  2391  0316  2B21               	goto	i1l1332
  2392  0317                     u46_20:	
  2393  0317                     i1l1328:	
  2394                           
  2395                           ;concentration.c: 217:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  2396  0317  081E               	movf	30,w	;volatile
  2397  0318  00AB               	movwf	_joystick_x_pos+1
  2398  0319  1683               	bsf	3,5	;RP0=1, select bank1
  2399  031A  1303               	bcf	3,6	;RP1=0, select bank1
  2400  031B  081E               	movf	30,w	;volatile
  2401  031C  1283               	bcf	3,5	;RP0=0, select bank0
  2402  031D  1303               	bcf	3,6	;RP1=0, select bank0
  2403  031E  00AA               	movwf	_joystick_x_pos
  2404  031F                     i1l1330:	
  2405                           
  2406                           ;concentration.c: 218:             CHS1 = 0;
  2407  031F  119F               	bcf	31,3	;volatile
  2408                           
  2409                           ;concentration.c: 219:         } else {
  2410  0320  2B2A               	goto	i1l1336
  2411  0321                     i1l1332:	
  2412                           
  2413                           ;concentration.c: 220:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  2414  0321  081E               	movf	30,w	;volatile
  2415  0322  00A9               	movwf	_joystick_y_pos+1
  2416  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0325  081E               	movf	30,w	;volatile
  2419  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0328  00A8               	movwf	_joystick_y_pos
  2422  0329                     i1l1334:	
  2423                           
  2424                           ;concentration.c: 221:             CHS1 = 1;
  2425  0329  159F               	bsf	31,3	;volatile
  2426  032A                     i1l1336:	
  2427                           
  2428                           ;concentration.c: 223:         ADIF = 0;
  2429  032A  130C               	bcf	12,6	;volatile
  2430  032B                     i1l176:	
  2431  032B  0871               	movf	??_interrupt_handler+1,w
  2432  032C  008A               	movwf	10
  2433  032D  0E70               	swapf	??_interrupt_handler^(0+4294967168),w
  2434  032E  0083               	movwf	3
  2435  032F  0EFE               	swapf	btemp,f
  2436  0330  0E7E               	swapf	btemp,w
  2437  0331  0009               	retfie
  2438  0332                     __end_of_interrupt_handler:	
  2439  007E                     btemp	set	126	;btemp
  2440  007E                     wtemp0	set	126
  2441                           
  2442                           	psect	intentry
  2443  0004                     __pintentry:	
  2444                           ;incstack = 0
  2445                           ; Regs used in _interrupt_handler: [wreg]
  2446                           
  2447  0004                     interrupt_function:	
  2448  007E                     saved_w	set	btemp
  2449  0004  00FE               	movwf	btemp
  2450  0005  0E03               	swapf	3,w
  2451  0006  00F0               	movwf	??_interrupt_handler
  2452  0007  080A               	movf	10,w
  2453  0008  00F1               	movwf	??_interrupt_handler+1
  2454  0009  120A  118A  2B0D   	ljmp	_interrupt_handler


Data Sizes:
    Strings     0
    Constant    34
    Data        4
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      8      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> board_r2(CODE[17]), board_r1(CODE[17]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    _lcd_putch->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_update_cursor
    _update_cursor->_lcd_goto
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_goto
    _toggle_cursor->_lcd_putch
    _lcd_init->_lcd_clear

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17681
                                              6 BANK0      2     2      0
                   _get_current_char
                      _joystick_init
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                          _time_init
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (1) _update_cursor                                        2     2      0    4115
                                              4 BANK0      2     2      0
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _toggle_cursor                                        0     0      0    4115
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            4     2      2    1842
                                              0 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             4     2      2    2273
                                              0 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     2      2    1678
                                              0 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    3708
                                              2 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    1792
                                              0 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            6     3      3    1330
                                              4 COMMON     6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (4) _Delay20us                                            2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DelayMs                                              2     0      2     251
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupt_handler                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_current_char
   _joystick_init
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_goto
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_puts
     _lcd_write
       _Delay20us
   _time_init
   _toggle_cursor
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_putch
       _lcd_write
         _Delay20us
   _update_cursor
     _get_current_char
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_putch
       _lcd_write
         _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 14 17:06:53 2020

          _joystick_pressed 007A                           pc 0002                 __CFG_CP$OFF 0000  
             _update_cursor 013B                          _GO 00F9                          fsr 0004  
                       l120 0137                         l202 023A                         l114 00AC  
                       l211 02BF                         l220 01F1                         l205 0365  
                       l117 00C1                         l214 038E                         l142 019F  
                       l152 0294                         l217 034D                         l147 0268  
                       l165 039A                         l190 036C                         l168 030C  
                       l185 03AE                         l194 037C                         l199 03A6  
                       _GIE 005F                         u240 03A6                         u241 03A5  
                       u250 0370                         u251 036F                         u260 037C  
                       u500 00AB                         u261 037B                         u501 00AA  
                       u510 00B0                         u511 00AF                         u600 0134  
                       u520 00B5                         u601 0133                         u521 00B4  
                       u290 0277                         u530 00DD                __CFG_CPD$OFF 0000  
                       u275 01F6                         u291 0276                         u531 00DC  
                       u540 00E2                         u285 026C                         u541 00E1  
                       u470 02BF                         u550 00F9                         u471 02BE  
                       u551 00F8                         u535 00D9                         u480 0242  
                       u560 00FE                         u481 0241                         u561 00FD  
                       u490 0189                         u570 0114                         u491 0188  
                       u571 0113                         u555 00F5                         u580 0119  
                       u581 0118                         _SCS 0478                         u590 012F  
                       u591 012E                         u575 0110                         u595 012B  
                       fsr0 0004                         indf 0000                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000              ?_toggle_cursor 0070               lcd_clear@port 0020  
                      l1100 0370                        l1102 0376                        l1110 021A  
                      l1112 0226                        l1104 01F3                        l1106 0206  
                      l1130 03A7                        l1122 0269                        l1108 020B  
                      l1132 03AD                        l1124 0277                        l1150 02F2  
                      l1126 0286                        l1160 02FE                        l1152 02F3  
                      l1400 023B                        l1170 0308                        l1162 02FF  
                      l1154 02F6                        l1090 039C                        l1410 025E  
                      l1402 0242                        l1164 0300                        l1156 02F8  
                      l1148 02E8                        l1092 03A0                        l1084 039B  
                      l1172 038F                        l1404 024C                        l1420 014A  
                      l1412 013B                        l1500 0114                        l1166 0303  
                      l1158 02FA                        l1094 0366                        l1406 0251  
                      l1430 0189                        l1414 013E                        l1502 0119  
                      l1168 0306                        l1096 0367                        l1408 025B  
                      l1416 0140                        l1424 014F                        l1440 0037  
                      l1098 036B                        l1370 035C                        l1418 0145  
                      l1426 0167                        l1514 0135                        l1506 0120  
                      l1450 005C                        l1442 003C                        l1380 01A5  
                      l1372 0335                        l1428 0182                        l1508 012F  
                      l1460 0092                        l1452 0067                        l1444 0047  
                      l1390 01E1                        l1382 01AD                        l1374 0344  
                      l1470 00AB                        l1462 0097                        l1454 0073  
                      l1446 0052                        l1438 0034                        l1368 034E  
                      l1384 01B6                        l1392 0298                        l1376 0380  
                      l1480 00CF                        l1472 00B0                        l1464 009A  
                      l1456 007F                        l1448 0057                        l1386 01C6  
                      l1378 01A0                        l1394 0299                        l1490 00EA  
                      l1474 00B5                        l1482 00D0                        l1466 009B  
                      l1458 008B                        l1388 01D6                        l1396 02AD  
                      l1572 0159                        l1492 00F9                        l1484 00DD  
                      l1476 00B9                        l1468 00A5                        l1398 02B3  
                      l1494 00FE                        l1486 00E2                        l1478 00BF  
                      l1488 00E4                        l1498 0105                        _ADIE 0466  
                      _ADIF 0066                        _CHS1 00FB                        _T0IF 005A  
                      _PEIE 005E                        _TMR0 0001                        _TMR1 000E  
                      _WPUB 0095                __CFG_WRT$OFF 0000                        _main 0034  
                      btemp 007E                lcd_init@port 0022                        start 000C  
              lcd_goto@port 0020               __CFG_IESO$OFF 0000             __end_of_DelayMs 037D  
             __CFG_MCLRE$ON 0000              ?_update_cursor 0070                       ?_main 0070  
                     _CCPR1 0015               __CFG_WDTE$OFF 0000                       _ANSEL 0188  
                     i1l176 032B                       _PORTA 0005                       _PORTB 0006  
                     _PORTD 0008                       u45_20 0313                       u45_21 0312  
                     u46_20 0317                       u46_21 0316                       _TRISA 0085  
                     _TRISB 0086                       _TRISD 0088              __CFG_FCMEN$OFF 0000  
                     _nRBPU 040F                lcd_puts@port 0020              __CFG_BOREN$OFF 0000  
                     pclath 000A                       status 0003                       wtemp0 007E  
             DelayMs@millis 0072             __initialization 000F                __end_of_main 013B  
        __size_of_Delay20us 000C                      ??_main 0026             ??_toggle_cursor 007A  
                    _ADCON0 001F                      _ADCON1 009F                      _CCP1M0 00B8  
                    _CCP1M1 00B9                      _CCP1M2 00BA                      _CCP1M3 00BB  
                    _CCP1IF 0062                      _ADRESH 001E                      _ADRESL 009E  
                    _ANSELH 0189                      i1l1330 031F                      i1l1332 0321  
                    i1l1324 030D                      i1l1334 0329                      i1l1326 0313  
                    i1l1336 032A                      i1l1328 0317                   ??_DelayMs 0074  
                    _TMR1GE 0086                      _TMR1CS 0081                      _TMR1ON 0080  
          __end_of_board_r1 02E8            __end_of_board_r2 02D7              __CFG_PWRTE$OFF 0000  
           ??_update_cursor 0024            __end_of_lcd_init 01F2            __end_of_lcd_goto 034E  
          __end_of_lcd_puts 02C0               lcd_putch@port 0020                      saved_w 007E  
 __size_of_get_current_char 002C           __end_of_Delay20us 03A7     __end_of__initialization 0030  
             lcd_write@mode 0079               lcd_write@port 0075              __pcstackCOMMON 0070  
              __pidataBANK0 03AF       __end_of_joystick_init 030D          __size_of_lcd_clear 0018  
        __size_of_lcd_putch 0012          __size_of_lcd_write 0049                  __pbssBANK0 0028  
                __pmaintext 0034                  __pintentry 0004          __size_of_tmr0_init 0008  
                   _T1CKPS0 0084                     _T1CKPS1 0085          __size_of_time_init 000C  
                 ?_lcd_init 0022                   ?_lcd_goto 0020                   ?_lcd_puts 0020  
                __stringtab 02C0                     _DelayMs 0366           __end_of_lcd_clear 0366  
         __end_of_lcd_putch 038F           __end_of_lcd_write 023B                     __ptext1 013B  
                   __ptext2 0269                     __ptext3 023B                     __ptext4 037D  
                   __ptext5 0332                     __ptext6 038F                     __ptext7 0295  
                   __ptext8 01A0                     __ptext9 03A7                  _cursor_pos 007B  
          _get_current_char 0269                  ??_lcd_init 0024                  ??_lcd_goto 0022  
                ??_lcd_puts 0022        end_of_initialization 0030           __end_of_tmr0_init 03AF  
            lcd_puts@string 0023           __end_of_time_init 039B                  _scoreboard 002F  
            _joystick_x_pos 002A              _joystick_y_pos 0028       __end_of_toggle_cursor 0269  
                 _Delay20us 039B       __end_of_update_cursor 01A0         start_initialization 000F  
                ?_Delay20us 0070                 __pdataBANK0 002F                 __pbssCOMMON 007A  
                 ___latbits 0002               __pcstackBANK0 0020                    ?_DelayMs 0072  
    __size_of_joystick_init 0025           __size_of_lcd_init 0052           __size_of_lcd_goto 001C  
         __size_of_lcd_puts 002B                _current_char 002E                 _delay_loops 002C  
  __end_of_get_current_char 0295                   _gameboard 0031                   _lcd_clear 034E  
              _cursor_solid 002D                   __pstrings 02C0                   _lcd_putch 037D  
                 _lcd_write 01F2           _interrupt_handler 030D          ?_interrupt_handler 0070  
       ??_interrupt_handler 0070           interrupt_function 0004                 ??_Delay20us 0072  
                 _tmr0_init 03A7                   _time_init 038F                  ?_lcd_clear 0020  
 __end_of_interrupt_handler 0332               _joystick_init 02E8                  ?_lcd_putch 0020  
               __stringbase 02C5                  ?_lcd_write 0074            __size_of_DelayMs 0017  
                ?_tmr0_init 0070                  ?_time_init 0070              ?_joystick_init 0070  
        __end_of__stringtab 02C6                    _board_r1 02D7                    _board_r2 02C6  
                  __ptext10 034E                    __ptext11 01F2                    __ptext12 039B  
                  __ptext13 0366                    __ptext14 02E8                    __ptext15 030D  
         __CFG_BOR4V$BOR21V 0000                    _lcd_init 01A0                    _lcd_goto 0332  
                  _lcd_puts 0295               __size_of_main 0107          lcd_putch@character 0023  
    __size_of_toggle_cursor 002E                 ??_lcd_clear 007A  __size_of_interrupt_handler 0025  
               ??_lcd_putch 0022                 ??_lcd_write 0077                    intlevel1 0000  
    __size_of_update_cursor 0065               Delay20us@next 0073                 ??_tmr0_init 0072  
                 stringcode 02C0           ?_get_current_char 0070             ??_joystick_init 0072  
               ??_time_init 0072          ??_get_current_char 0072                  _OPTION_REG 0081  
          lcd_goto@position 0023                    stringdir 02C0                    stringtab 02C0  
             _toggle_cursor 023B            lcd_write@CmdChar 0074  
