

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 12:56:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323                           
   324                           	psect	idataCOMMON
   325  0003                     __pidataCOMMON:	
   326                           
   327                           ;initializer for _my_turn
   328  0003  3401               	retlw	1
   329                           
   330                           	psect	idataBANK0
   331  0932                     __pidataBANK0:	
   332                           
   333                           ;initializer for _scoreboard
   334  0932  3408               	retlw	8
   335  0933  3400               	retlw	0
   336                           
   337                           ;initializer for _gameboard
   338  0934  3405               	retlw	5
   339  0935  3400               	retlw	0
   340                           
   341                           	psect	idataBANK1
   342  0936                     __pidataBANK1:	
   343                           
   344                           ;initializer for end_screen@F1344
   345  0936  3400               	retlw	0
   346  0937  3403               	retlw	3
   347  0938  3401               	retlw	1
   348  0939  3404               	retlw	4
   349  093A  3402               	retlw	2
   350  093B  3405               	retlw	5
   351                           
   352                           	psect	stringtext
   353  0600                     __pstringtext:	
   354  0600                     stringtab:	
   355  0600                     __stringtab:	
   356                           
   357                           ;	String table - string pointers are 2 bytes each
   358  0600  1BFF               	btfsc	btemp+1,7
   359  0601  2E0A               	ljmp	stringcode
   360  0602  1383               	bcf	3,7
   361  0603  187F               	btfsc	btemp+1,0
   362  0604  1783               	bsf	3,7
   363  0605  0800               	movf	0,w
   364  0606  0A84               	incf	4,f
   365  0607  1903               	skipnz
   366  0608  0AFF               	incf	btemp+1,f
   367  0609  0008               	return
   368  060A                     stringcode:	
   369  060A  087F               	movf	btemp+1,w
   370  060B  397F               	andlw	127
   371  060C  008A               	movwf	10
   372  060D  0804               	movf	4,w
   373  060E  0A84               	incf	4,f
   374  060F  1903               	skipnz
   375  0610  0AFF               	incf	btemp+1,f
   376  0611  0082               	movwf	2
   377  0612                     __stringbase:	
   378  0612                     __end_of__stringtab:	
   379  0612                     make_custom_chars@PIC:	
   380  0612  3418               	retlw	24
   381  0613  3418               	retlw	24
   382  0614  3414               	retlw	20
   383  0615  3404               	retlw	4
   384  0616  3404               	retlw	4
   385  0617  3403               	retlw	3
   386  0618  3402               	retlw	2
   387  0619  3403               	retlw	3
   388  061A                     __end_ofmake_custom_chars@PIC:	
   389  061A                     make_custom_chars@RH:	
   390  061A  341C               	retlw	28
   391  061B  3414               	retlw	20
   392  061C  3418               	retlw	24
   393  061D  3414               	retlw	20
   394  061E  3400               	retlw	0
   395  061F  3405               	retlw	5
   396  0620  3407               	retlw	7
   397  0621  3405               	retlw	5
   398  0622                     __end_ofmake_custom_chars@RH:	
   399  0622                     make_custom_chars@skull:	
   400  0622  340E               	retlw	14
   401  0623  3415               	retlw	21
   402  0624  3415               	retlw	21
   403  0625  341F               	retlw	31
   404  0626  340A               	retlw	10
   405  0627  340E               	retlw	14
   406  0628  340E               	retlw	14
   407  0629  3400               	retlw	0
   408  062A                     __end_ofmake_custom_chars@skull:	
   409  062A                     make_custom_chars@club:	
   410  062A  3400               	retlw	0
   411  062B  340E               	retlw	14
   412  062C  340E               	retlw	14
   413  062D  341F               	retlw	31
   414  062E  341F               	retlw	31
   415  062F  341F               	retlw	31
   416  0630  3404               	retlw	4
   417  0631  340E               	retlw	14
   418  0632                     __end_ofmake_custom_chars@club:	
   419  0632                     make_custom_chars@spade:	
   420  0632  3400               	retlw	0
   421  0633  3404               	retlw	4
   422  0634  340E               	retlw	14
   423  0635  341F               	retlw	31
   424  0636  341F               	retlw	31
   425  0637  340E               	retlw	14
   426  0638  3404               	retlw	4
   427  0639  340E               	retlw	14
   428  063A                     __end_ofmake_custom_chars@spade:	
   429  063A                     make_custom_chars@heart:	
   430  063A  3400               	retlw	0
   431  063B  3400               	retlw	0
   432  063C  340A               	retlw	10
   433  063D  341F               	retlw	31
   434  063E  341F               	retlw	31
   435  063F  340E               	retlw	14
   436  0640  3404               	retlw	4
   437  0641  3400               	retlw	0
   438  0642                     __end_ofmake_custom_chars@heart:	
   439  0642                     make_custom_chars@diamond:	
   440  0642  3400               	retlw	0
   441  0643  3404               	retlw	4
   442  0644  340E               	retlw	14
   443  0645  341F               	retlw	31
   444  0646  340E               	retlw	14
   445  0647  3404               	retlw	4
   446  0648  3400               	retlw	0
   447  0649  3400               	retlw	0
   448  064A                     __end_ofmake_custom_chars@diamond:	
   449  064A                     make_custom_chars@smile:	
   450  064A  3400               	retlw	0
   451  064B  340A               	retlw	10
   452  064C  340A               	retlw	10
   453  064D  3400               	retlw	0
   454  064E  3415               	retlw	21
   455  064F  3411               	retlw	17
   456  0650  340E               	retlw	14
   457  0651  3400               	retlw	0
   458  0652                     __end_ofmake_custom_chars@smile:	
   459  001B                     _CCPR2	set	27
   460  0015                     _CCPR1	set	21
   461  000E                     _TMR1	set	14
   462  0001                     _TMR0	set	1
   463  001E                     _ADRESH	set	30
   464  001F                     _ADCON0	set	31
   465  0006                     _PORTB	set	6
   466  0012                     _T2CON	set	18
   467  0011                     _TMR2	set	17
   468  0007                     _PORTC	set	7
   469  0008                     _PORTD	set	8
   470  0005                     _PORTA	set	5
   471  005A                     _T0IF	set	90
   472  0066                     _ADIF	set	102
   473  005E                     _PEIE	set	94
   474  005F                     _GIE	set	95
   475  00E8                     _CCP2M0	set	232
   476  00E9                     _CCP2M1	set	233
   477  00EA                     _CCP2M2	set	234
   478  00EB                     _CCP2M3	set	235
   479  0080                     _TMR1ON	set	128
   480  0086                     _TMR1GE	set	134
   481  0085                     _T1CKPS1	set	133
   482  0084                     _T1CKPS0	set	132
   483  0081                     _TMR1CS	set	129
   484  00B8                     _CCP1M0	set	184
   485  00B9                     _CCP1M1	set	185
   486  00BA                     _CCP1M2	set	186
   487  00BB                     _CCP1M3	set	187
   488  0061                     _TMR2IF	set	97
   489  0068                     _CCP2IF	set	104
   490  0062                     _CCP1IF	set	98
   491  0032                     _RB2	set	50
   492  003F                     _RC7	set	63
   493  003D                     _RC5	set	61
   494  0035                     _RB5	set	53
   495  003E                     _RC6	set	62
   496  00F9                     _GO	set	249
   497  0081                     _OPTION_REG	set	129
   498  009E                     _ADRESL	set	158
   499  009F                     _ADCON1	set	159
   500  0086                     _TRISB	set	134
   501  0095                     _WPUB	set	149
   502  0092                     _PR2	set	146
   503  0087                     _TRISC	set	135
   504  0085                     _TRISA	set	133
   505  0088                     _TRISD	set	136
   506  0466                     _ADIE	set	1126
   507  040F                     _nRBPU	set	1039
   508  0461                     _TMR2IE	set	1121
   509  0468                     _CCP2IE	set	1128
   510  0478                     _SCS	set	1144
   511  0189                     _ANSELH	set	393
   512  0188                     _ANSEL	set	392
   513  0652                     STR_11:	
   514  0652  3450               	retlw	80	;'P'
   515  0653  3472               	retlw	114	;'r'
   516  0654  3465               	retlw	101	;'e'
   517  0655  3473               	retlw	115	;'s'
   518  0656  3473               	retlw	115	;'s'
   519  0657  3420               	retlw	32	;' '
   520  0658  3474               	retlw	116	;'t'
   521  0659  3468               	retlw	104	;'h'
   522  065A  3465               	retlw	101	;'e'
   523  065B  3420               	retlw	32	;' '
   524  065C  3462               	retlw	98	;'b'
   525  065D  3475               	retlw	117	;'u'
   526  065E  3474               	retlw	116	;'t'
   527  065F  3474               	retlw	116	;'t'
   528  0660  346F               	retlw	111	;'o'
   529  0661  346E               	retlw	110	;'n'
   530  0662  3400               	retlw	0
   531  0663                     STR_10:	
   532  0663  3420               	retlw	32	;' '
   533  0664  3443               	retlw	67	;'C'
   534  0665  346F               	retlw	111	;'o'
   535  0666  346E               	retlw	110	;'n'
   536  0667  3463               	retlw	99	;'c'
   537  0668  3465               	retlw	101	;'e'
   538  0669  346E               	retlw	110	;'n'
   539  066A  3474               	retlw	116	;'t'
   540  066B  3472               	retlw	114	;'r'
   541  066C  3461               	retlw	97	;'a'
   542  066D  3474               	retlw	116	;'t'
   543  066E  3469               	retlw	105	;'i'
   544  066F  346F               	retlw	111	;'o'
   545  0670  346E               	retlw	110	;'n'
   546  0671  3421               	retlw	33	;'!'
   547  0672  3400               	retlw	0
   548  0673                     STR_2:	
   549  0673  3420               	retlw	32	;' '
   550  0674  3420               	retlw	32	;' '
   551  0675  3443               	retlw	67	;'C'
   552  0676  346F               	retlw	111	;'o'
   553  0677  346E               	retlw	110	;'n'
   554  0678  3463               	retlw	99	;'c'
   555  0679  3465               	retlw	101	;'e'
   556  067A  346E               	retlw	110	;'n'
   557  067B  3474               	retlw	116	;'t'
   558  067C  3472               	retlw	114	;'r'
   559  067D  3461               	retlw	97	;'a'
   560  067E  3474               	retlw	116	;'t'
   561  067F  3469               	retlw	105	;'i'
   562  0680  346F               	retlw	111	;'o'
   563  0681  346E               	retlw	110	;'n'
   564  0682  3400               	retlw	0
   565  0683                     STR_1:	
   566  0683  3420               	retlw	32	;' '
   567  0684  3447               	retlw	71	;'G'
   568  0685  3461               	retlw	97	;'a'
   569  0686  346D               	retlw	109	;'m'
   570  0687  3465               	retlw	101	;'e'
   571  0688  3420               	retlw	32	;' '
   572  0689  3453               	retlw	83	;'S'
   573  068A  3465               	retlw	101	;'e'
   574  068B  346C               	retlw	108	;'l'
   575  068C  3465               	retlw	101	;'e'
   576  068D  3463               	retlw	99	;'c'
   577  068E  3474               	retlw	116	;'t'
   578  068F  3469               	retlw	105	;'i'
   579  0690  346F               	retlw	111	;'o'
   580  0691  346E               	retlw	110	;'n'
   581  0692  3400               	retlw	0
   582  0693                     STR_8:	
   583  0693  3420               	retlw	32	;' '
   584  0694  3420               	retlw	32	;' '
   585  0695  3420               	retlw	32	;' '
   586  0696  344E               	retlw	78	;'N'
   587  0697  344F               	retlw	79	;'O'
   588  0698  3420               	retlw	32	;' '
   589  0699  3457               	retlw	87	;'W'
   590  069A  3449               	retlw	73	;'I'
   591  069B  344E               	retlw	78	;'N'
   592  069C  344E               	retlw	78	;'N'
   593  069D  3445               	retlw	69	;'E'
   594  069E  3452               	retlw	82	;'R'
   595  069F  3421               	retlw	33	;'!'
   596  06A0  3400               	retlw	0
   597  06A1                     STR_4:	
   598  06A1  3420               	retlw	32	;' '
   599  06A2  3420               	retlw	32	;' '
   600  06A3  3420               	retlw	32	;' '
   601  06A4  3420               	retlw	32	;' '
   602  06A5  3457               	retlw	87	;'W'
   603  06A6  3449               	retlw	73	;'I'
   604  06A7  344E               	retlw	78	;'N'
   605  06A8  344E               	retlw	78	;'N'
   606  06A9  3445               	retlw	69	;'E'
   607  06AA  3452               	retlw	82	;'R'
   608  06AB  3421               	retlw	33	;'!'
   609  06AC  3421               	retlw	33	;'!'
   610  06AD  3400               	retlw	0
   611  06AE                     STR_5:	
   612  06AE  3420               	retlw	32	;' '
   613  06AF  3420               	retlw	32	;' '
   614  06B0  3420               	retlw	32	;' '
   615  06B1  3420               	retlw	32	;' '
   616  06B2  3450               	retlw	80	;'P'
   617  06B3  344C               	retlw	76	;'L'
   618  06B4  3441               	retlw	65	;'A'
   619  06B5  3459               	retlw	89	;'Y'
   620  06B6  3445               	retlw	69	;'E'
   621  06B7  3452               	retlw	82	;'R'
   622  06B8  3420               	retlw	32	;' '
   623  06B9  3431               	retlw	49	;'1'
   624  06BA  3400               	retlw	0
   625  06BB                     STR_7:	
   626  06BB  3420               	retlw	32	;' '
   627  06BC  3420               	retlw	32	;' '
   628  06BD  3420               	retlw	32	;' '
   629  06BE  3420               	retlw	32	;' '
   630  06BF  3450               	retlw	80	;'P'
   631  06C0  344C               	retlw	76	;'L'
   632  06C1  3441               	retlw	65	;'A'
   633  06C2  3459               	retlw	89	;'Y'
   634  06C3  3445               	retlw	69	;'E'
   635  06C4  3452               	retlw	82	;'R'
   636  06C5  3420               	retlw	32	;' '
   637  06C6  3432               	retlw	50	;'2'
   638  06C7  3400               	retlw	0
   639  06C8                     STR_3:	
   640  06C8  3420               	retlw	32	;' '
   641  06C9  3420               	retlw	32	;' '
   642  06CA  3453               	retlw	83	;'S'
   643  06CB  3469               	retlw	105	;'i'
   644  06CC  346D               	retlw	109	;'m'
   645  06CD  346F               	retlw	111	;'o'
   646  06CE  346E               	retlw	110	;'n'
   647  06CF  3420               	retlw	32	;' '
   648  06D0  3453               	retlw	83	;'S'
   649  06D1  3461               	retlw	97	;'a'
   650  06D2  3479               	retlw	121	;'y'
   651  06D3  3473               	retlw	115	;'s'
   652  06D4  3400               	retlw	0
   653  06D5                     STR_12:	
   654  06D5  3420               	retlw	32	;' '
   655  06D6  3420               	retlw	32	;' '
   656  06D7  3420               	retlw	32	;' '
   657  06D8  3420               	retlw	32	;' '
   658  06D9  3474               	retlw	116	;'t'
   659  06DA  346F               	retlw	111	;'o'
   660  06DB  3420               	retlw	32	;' '
   661  06DC  3473               	retlw	115	;'s'
   662  06DD  3474               	retlw	116	;'t'
   663  06DE  3461               	retlw	97	;'a'
   664  06DF  3472               	retlw	114	;'r'
   665  06E0  3474               	retlw	116	;'t'
   666  06E1  3400               	retlw	0
   667  06E2                     STR_13:	
   668  06E2  3420               	retlw	32	;' '
   669  06E3  3420               	retlw	32	;' '
   670  06E4  3420               	retlw	32	;' '
   671  06E5  3420               	retlw	32	;' '
   672  06E6  3420               	retlw	32	;' '
   673  06E7  3453               	retlw	83	;'S'
   674  06E8  3463               	retlw	99	;'c'
   675  06E9  346F               	retlw	111	;'o'
   676  06EA  3472               	retlw	114	;'r'
   677  06EB  3465               	retlw	101	;'e'
   678  06EC  343A               	retlw	58	;':'
   679  06ED  3400               	retlw	0
   680  06EE                     STR_9:	
   681  06EE  3420               	retlw	32	;' '
   682  06EF  3420               	retlw	32	;' '
   683  06F0  3420               	retlw	32	;' '
   684  06F1  3420               	retlw	32	;' '
   685  06F2  3420               	retlw	32	;' '
   686  06F3  3420               	retlw	32	;' '
   687  06F4  3454               	retlw	84	;'T'
   688  06F5  3449               	retlw	73	;'I'
   689  06F6  3445               	retlw	69	;'E'
   690  06F7  3444               	retlw	68	;'D'
   691  06F8  3400               	retlw	0
   692  06F9                     STR_15:	
   693  06F9  3420               	retlw	32	;' '
   694  06FA  3420               	retlw	32	;' '
   695  06FB  3450               	retlw	80	;'P'
   696  06FC  3432               	retlw	50	;'2'
   697  06FD  343A               	retlw	58	;':'
   698  06FE  3420               	retlw	32	;' '
   699  06FF  3400               	retlw	0
   700  0700                     STR_14:	
   701  0700  3420               	retlw	32	;' '
   702  0701  3450               	retlw	80	;'P'
   703  0702  3431               	retlw	49	;'1'
   704  0703  343A               	retlw	58	;':'
   705  0704  3420               	retlw	32	;' '
   706  0705  3400               	retlw	0
   707  06A1                     
   708                           ; #config settings
   709  0000                     
   710                           	psect	cinit
   711  0011                     start_initialization:	
   712  0011                     __initialization:	
   713                           
   714                           ; Initialize objects allocated to BANK1
   715  0011  1383               	bcf	3,7	;select IRP bank0
   716  0012  30E6               	movlw	low (__pdataBANK1+6)
   717  0013  00FD               	movwf	btemp+-1
   718  0014  3009               	movlw	high __pidataBANK1
   719  0015  00FE               	movwf	btemp
   720  0016  3036               	movlw	low __pidataBANK1
   721  0017  00FF               	movwf	btemp+1
   722  0018  30E0               	movlw	low __pdataBANK1
   723  0019  0084               	movwf	4
   724  001A  120A  158A  217E  120A  118A  	fcall	init_ram0
   725                           
   726                           ; Initialize objects allocated to BANK0
   727  001F  306E               	movlw	low (__pdataBANK0+4)
   728  0020  00FD               	movwf	btemp+-1
   729  0021  3009               	movlw	high __pidataBANK0
   730  0022  00FE               	movwf	btemp
   731  0023  3032               	movlw	low __pidataBANK0
   732  0024  00FF               	movwf	btemp+1
   733  0025  306A               	movlw	low __pdataBANK0
   734  0026  0084               	movwf	4
   735  0027  120A  158A  217E  120A  118A  	fcall	init_ram0
   736                           
   737                           ; Initialize objects allocated to COMMON
   738  002C  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   739  0031  00FB               	movwf	__pdataCOMMON& (0+127)
   740                           
   741                           ; Clear objects allocated to BANK3
   742  0032  1783               	bsf	3,7	;select IRP bank2
   743  0033  3090               	movlw	low __pbssBANK3
   744  0034  0084               	movwf	4
   745  0035  30B0               	movlw	low (__pbssBANK3+32)
   746  0036  120A  158A  213C  120A  118A  	fcall	clear_ram0
   747                           
   748                           ; Clear objects allocated to BANK1
   749  003B  1383               	bcf	3,7	;select IRP bank0
   750  003C  30A0               	movlw	low __pbssBANK1
   751  003D  0084               	movwf	4
   752  003E  30E0               	movlw	low (__pbssBANK1+64)
   753  003F  120A  158A  213C  120A  118A  	fcall	clear_ram0
   754                           
   755                           ; Clear objects allocated to BANK0
   756  0044  305B               	movlw	low __pbssBANK0
   757  0045  0084               	movwf	4
   758  0046  306A               	movlw	low (__pbssBANK0+15)
   759  0047  120A  158A  213C  120A  118A  	fcall	clear_ram0
   760                           
   761                           ; Clear objects allocated to COMMON
   762  004C  01F6               	clrf	__pbssCOMMON& (0+127)
   763  004D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   764  004E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   765  004F  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   766  0050  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   767  0051                     end_of_initialization:	
   768                           ;End of C runtime variable initialization code
   769                           
   770  0051                     __end_of__initialization:	
   771  0051  0183               	clrf	3
   772  0052  120A  118A  2B98   	ljmp	_main	;jump to C main() function
   773                           
   774                           	psect	bssCOMMON
   775  0076                     __pbssCOMMON:	
   776  0076                     _tone_delay:	
   777  0076                     	ds	2
   778  0078                     _id_num:	
   779  0078                     	ds	1
   780  0079                     _received_char:	
   781  0079                     	ds	1
   782  007A                     _event_delay_count:	
   783  007A                     	ds	1
   784                           
   785                           	psect	dataCOMMON
   786  007B                     __pdataCOMMON:	
   787  007B                     _my_turn:	
   788  007B                     	ds	1
   789                           
   790                           	psect	bssBANK0
   791  005B                     __pbssBANK0:	
   792  005B                     _joystick_y_pos:	
   793  005B                     	ds	2
   794  005D                     _joystick_x_pos:	
   795  005D                     	ds	2
   796  005F                     _game_over:	
   797  005F                     	ds	1
   798  0060                     _current_player:	
   799  0060                     	ds	1
   800  0061                     _joystick_pressed:	
   801  0061                     	ds	1
   802  0062                     _selected_tile:	
   803  0062                     	ds	1
   804  0063                     _p2_score:	
   805  0063                     	ds	1
   806  0064                     _p1_score:	
   807  0064                     	ds	1
   808  0065                     _event_enabled:	
   809  0065                     	ds	1
   810  0066                     _delay_loops:	
   811  0066                     	ds	1
   812  0067                     _cursor_solid:	
   813  0067                     	ds	1
   814  0068                     _current_char:	
   815  0068                     	ds	1
   816  0069                     _cursor_pos:	
   817  0069                     	ds	1
   818                           
   819                           	psect	dataBANK0
   820  006A                     __pdataBANK0:	
   821  006A                     _scoreboard:	
   822  006A                     	ds	2
   823  006C                     _gameboard:	
   824  006C                     	ds	2
   825                           
   826                           	psect	bssBANK1
   827  00A0                     __pbssBANK1:	
   828  00A0                     _visible:	
   829  00A0                     	ds	32
   830  00C0                     _board:	
   831  00C0                     	ds	32
   832                           
   833                           	psect	dataBANK1
   834  00E0                     __pdataBANK1:	
   835  00E0                     end_screen@F1344:	
   836  00E0                     	ds	6
   837                           
   838                           	psect	bssBANK3
   839  0190                     __pbssBANK3:	
   840  0190                     randomize_gameboard@F1367:	
   841  0190                     	ds	32
   842                           
   843                           	psect	inittext
   844  097A                     init_fetch0:	
   845                           ;	Called with low address in FSR and high address in W
   846                           
   847  097A  087E               	movf	btemp,w
   848  097B  008A               	movwf	10
   849  097C  087F               	movf	btemp+1,w
   850  097D  0082               	movwf	2
   851  097E                     init_ram0:	
   852                           ;Called with:
   853                           ;	high address of idata address in btemp 
   854                           ;	low address of idata address in btemp+1 
   855                           ;	low address of data in FSR
   856                           ;	high address + 1 of data in btemp-1
   857                           
   858  097E  120A  158A  217A  120A  158A  	fcall	init_fetch0
   859  0983  0080               	movwf	0
   860  0984  0A84               	incf	4,f
   861  0985  0804               	movf	4,w
   862  0986  067D               	xorwf	btemp+-1,w
   863  0987  1903               	btfsc	3,2
   864  0988  3400               	retlw	0
   865  0989  0AFF               	incf	btemp+1,f
   866  098A  1903               	btfsc	3,2
   867  098B  0AFE               	incf	btemp,f
   868  098C  297E               	goto	init_ram0
   869                           
   870                           	psect	clrtext
   871  093C                     clear_ram0:	
   872                           ;	Called with FSR containing the base address, and
   873                           ;	W with the last address+1
   874                           
   875  093C  0064               	clrwdt	;clear the watchdog before getting into this loop
   876  093D                     clrloop0:	
   877  093D  0180               	clrf	0	;clear RAM location pointed to by FSR
   878  093E  0A84               	incf	4,f	;increment pointer
   879  093F  0604               	xorwf	4,w	;XOR with final address
   880  0940  1903               	btfsc	3,2	;have we reached the end yet?
   881  0941  3400               	retlw	0	;all done for this memory range, return
   882  0942  0604               	xorwf	4,w	;XOR again to restore value
   883  0943  293D               	goto	clrloop0	;do the next byte
   884                           
   885                           	psect	cstackCOMMON
   886  0070                     __pcstackCOMMON:	
   887  0070                     ?_joystick_init:	
   888  0070                     ?_time_init:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_concentration_gameboard_init:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_startup:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_update_gameboard_from_input:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_game_end:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_display_scoreboard:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_display_gameboard:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_get_current_char:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_randomize_gameboard:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_toggle_cursor:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_main:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_turn_on_led:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_make_custom_chars:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_get_cursor_index:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_check_for_match:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_interrupt_handler:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ??_interrupt_handler:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_tmr0_init:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_Delay20us:	
   943                           ; 1 bytes @ 0x0
   944                           
   945                           
   946                           ; 1 bytes @ 0x0
   947  0070                     	ds	5
   948  0075                     interrupt_handler@current_analog:	
   949                           
   950                           ; 1 bytes @ 0x5
   951  0075                     	ds	1
   952                           
   953                           	psect	cstackBANK0
   954  0020                     __pcstackBANK0:	
   955  0020                     ??_joystick_init:	
   956  0020                     ??_time_init:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0020                     ?_DelayMs:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0020                     ?_play_tone:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0020                     ??_turn_on_led:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0020                     ??_get_cursor_index:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0020                     ??_tmr0_init:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0020                     ??_Delay20us:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0020                     ?___awmod:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0020                     get_cursor_index@cursor:	
   981                           ; 2 bytes @ 0x0
   982                           
   983  0020                     play_tone@tone_period:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0020                     DelayMs@millis:	
   987                           ; 2 bytes @ 0x0
   988                           
   989  0020                     ___awmod@divisor:	
   990                           ; 2 bytes @ 0x0
   991                           
   992                           
   993                           ; 2 bytes @ 0x0
   994  0020                     	ds	1
   995  0021                     ??_get_current_char:	
   996  0021                     Delay20us@next:	
   997                           ; 1 bytes @ 0x1
   998                           
   999                           
  1000                           ; 1 bytes @ 0x1
  1001  0021                     	ds	1
  1002  0022                     ??_DelayMs:	
  1003  0022                     ?_lcd_write:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006  0022                     turn_on_led@color:	
  1007                           ; 1 bytes @ 0x2
  1008                           
  1009  0022                     play_tone@duration_8ms:	
  1010                           ; 1 bytes @ 0x2
  1011                           
  1012  0022                     lcd_write@CmdChar:	
  1013                           ; 1 bytes @ 0x2
  1014                           
  1015  0022                     ___awmod@dividend:	
  1016                           ; 1 bytes @ 0x2
  1017                           
  1018                           
  1019                           ; 2 bytes @ 0x2
  1020  0022                     	ds	1
  1021  0023                     ??_play_tone:	
  1022  0023                     lcd_write@port:	
  1023                           ; 1 bytes @ 0x3
  1024                           
  1025                           
  1026                           ; 2 bytes @ 0x3
  1027  0023                     	ds	1
  1028  0024                     ??___awmod:	
  1029                           
  1030                           ; 1 bytes @ 0x4
  1031  0024                     	ds	1
  1032  0025                     ??_lcd_write:	
  1033  0025                     ___awmod@counter:	
  1034                           ; 1 bytes @ 0x5
  1035                           
  1036                           
  1037                           ; 1 bytes @ 0x5
  1038  0025                     	ds	1
  1039  0026                     ___awmod@sign:	
  1040                           
  1041                           ; 1 bytes @ 0x6
  1042  0026                     	ds	1
  1043  0027                     ?___awdiv:	
  1044  0027                     lcd_write@mode:	
  1045                           ; 2 bytes @ 0x7
  1046                           
  1047  0027                     ___awdiv@divisor:	
  1048                           ; 1 bytes @ 0x7
  1049                           
  1050                           
  1051                           ; 2 bytes @ 0x7
  1052  0027                     	ds	1
  1053  0028                     ?_lcd_puts:	
  1054  0028                     ?_lcd_goto:	
  1055                           ; 1 bytes @ 0x8
  1056                           
  1057  0028                     ?_lcd_clear:	
  1058                           ; 1 bytes @ 0x8
  1059                           
  1060  0028                     ?_lcd_set_custom_char:	
  1061                           ; 1 bytes @ 0x8
  1062                           
  1063  0028                     lcd_clear@port:	
  1064                           ; 1 bytes @ 0x8
  1065                           
  1066  0028                     lcd_puts@string:	
  1067                           ; 2 bytes @ 0x8
  1068                           
  1069  0028                     lcd_goto@port:	
  1070                           ; 2 bytes @ 0x8
  1071                           
  1072  0028                     lcd_set_custom_char@data:	
  1073                           ; 2 bytes @ 0x8
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x8
  1077  0028                     	ds	1
  1078  0029                     ___awdiv@dividend:	
  1079                           
  1080                           ; 2 bytes @ 0x9
  1081  0029                     	ds	1
  1082  002A                     ?_lcd_init:	
  1083  002A                     ??_lcd_goto:	
  1084                           ; 1 bytes @ 0xA
  1085                           
  1086  002A                     ??_lcd_clear:	
  1087                           ; 1 bytes @ 0xA
  1088                           
  1089  002A                     lcd_set_custom_char@cg_address:	
  1090                           ; 1 bytes @ 0xA
  1091                           
  1092  002A                     lcd_puts@port:	
  1093                           ; 1 bytes @ 0xA
  1094                           
  1095  002A                     lcd_init@port:	
  1096                           ; 2 bytes @ 0xA
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0xA
  1100  002A                     	ds	1
  1101  002B                     ??___awdiv:	
  1102  002B                     lcd_goto@position:	
  1103                           ; 1 bytes @ 0xB
  1104                           
  1105  002B                     lcd_set_custom_char@port:	
  1106                           ; 1 bytes @ 0xB
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0xB
  1110  002B                     	ds	1
  1111  002C                     ??_lcd_init:	
  1112  002C                     ??_lcd_puts:	
  1113                           ; 1 bytes @ 0xC
  1114                           
  1115  002C                     ___awdiv@counter:	
  1116                           ; 1 bytes @ 0xC
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0xC
  1120  002C                     	ds	1
  1121  002D                     ??_lcd_set_custom_char:	
  1122  002D                     ?_end_screen:	
  1123                           ; 1 bytes @ 0xD
  1124                           
  1125  002D                     ___awdiv@sign:	
  1126                           ; 1 bytes @ 0xD
  1127                           
  1128  002D                     end_screen@first_row:	
  1129                           ; 1 bytes @ 0xD
  1130                           
  1131                           
  1132                           ; 2 bytes @ 0xD
  1133  002D                     	ds	1
  1134  002E                     ___awdiv@quotient:	
  1135                           
  1136                           ; 2 bytes @ 0xE
  1137  002E                     	ds	1
  1138  002F                     lcd_set_custom_char@row:	
  1139  002F                     end_screen@second_row:	
  1140                           ; 1 bytes @ 0xF
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0xF
  1144  002F                     	ds	1
  1145  0030                     ?_lcd_putch:	
  1146  0030                     ??_randomize_gameboard:	
  1147                           ; 1 bytes @ 0x10
  1148                           
  1149  0030                     ??_make_custom_chars:	
  1150                           ; 1 bytes @ 0x10
  1151                           
  1152  0030                     lcd_putch@port:	
  1153                           ; 1 bytes @ 0x10
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x10
  1157  0030                     	ds	1
  1158  0031                     ??_end_screen:	
  1159                           
  1160                           ; 1 bytes @ 0x11
  1161  0031                     	ds	1
  1162  0032                     ??_lcd_putch:	
  1163                           
  1164                           ; 1 bytes @ 0x12
  1165  0032                     	ds	1
  1166  0033                     lcd_putch@character:	
  1167  0033                     randomize_gameboard@used:	
  1168                           ; 1 bytes @ 0x13
  1169                           
  1170                           
  1171                           ; 32 bytes @ 0x13
  1172  0033                     	ds	1
  1173  0034                     ??_display_scoreboard:	
  1174  0034                     ??_display_gameboard:	
  1175                           ; 1 bytes @ 0x14
  1176                           
  1177  0034                     ??_toggle_cursor:	
  1178                           ; 1 bytes @ 0x14
  1179                           
  1180  0034                     ?_update_cursor:	
  1181                           ; 1 bytes @ 0x14
  1182                           
  1183  0034                     update_cursor@direction:	
  1184                           ; 1 bytes @ 0x14
  1185                           
  1186  0034                     end_screen@colors:	
  1187                           ; 1 bytes @ 0x14
  1188                           
  1189                           
  1190                           ; 6 bytes @ 0x14
  1191  0034                     	ds	1
  1192  0035                     ??_update_cursor:	
  1193  0035                     display_gameboard@i:	
  1194                           ; 1 bytes @ 0x15
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0x15
  1198  0035                     	ds	1
  1199  0036                     ??_startup:	
  1200  0036                     ??_check_for_match:	
  1201                           ; 1 bytes @ 0x16
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0x16
  1205  0036                     	ds	1
  1206  0037                     update_cursor@move_delay_count:	
  1207                           
  1208                           ; 1 bytes @ 0x17
  1209  0037                     	ds	1
  1210  0038                     check_for_match@player:	
  1211                           
  1212                           ; 1 bytes @ 0x18
  1213  0038                     	ds	1
  1214  0039                     ??_update_gameboard_from_input:	
  1215                           
  1216                           ; 1 bytes @ 0x19
  1217  0039                     	ds	1
  1218  003A                     end_screen@i:	
  1219                           
  1220                           ; 1 bytes @ 0x1A
  1221  003A                     	ds	1
  1222  003B                     end_screen@color_index:	
  1223                           
  1224                           ; 1 bytes @ 0x1B
  1225  003B                     	ds	1
  1226  003C                     ??_game_end:	
  1227                           
  1228                           ; 1 bytes @ 0x1C
  1229  003C                     	ds	23
  1230  0053                     randomize_gameboard@current:	
  1231                           
  1232                           ; 1 bytes @ 0x33
  1233  0053                     	ds	1
  1234  0054                     randomize_gameboard@random:	
  1235                           
  1236                           ; 1 bytes @ 0x34
  1237  0054                     	ds	1
  1238  0055                     ??_concentration_gameboard_init:	
  1239                           
  1240                           ; 1 bytes @ 0x35
  1241  0055                     	ds	1
  1242  0056                     concentration_gameboard_init@i:	
  1243                           
  1244                           ; 1 bytes @ 0x36
  1245  0056                     	ds	1
  1246  0057                     ??_main:	
  1247                           
  1248                           ; 1 bytes @ 0x37
  1249  0057                     	ds	2
  1250  0059                     main@game_selection:	
  1251                           
  1252                           ; 1 bytes @ 0x39
  1253  0059                     	ds	1
  1254  005A                     main@selector_pos:	
  1255                           
  1256                           ; 1 bytes @ 0x3A
  1257  005A                     	ds	1
  1258                           
  1259                           	psect	maintext
  1260  0398                     __pmaintext:	
  1261 ;;
  1262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1263 ;;
  1264 ;; *************** function _main *****************
  1265 ;; Defined at:
  1266 ;;		line 106 in file "concentration.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  selector_pos    1   58[BANK0 ] unsigned char 
  1271 ;;  game_selecti    1   57[BANK0 ] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : B00/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       2       0       0       0
  1283 ;;      Temps:          0       2       0       0       0
  1284 ;;      Totals:         0       4       0       0       0
  1285 ;;Total ram usage:        4 bytes
  1286 ;; Hardware stack levels required when called:    7
  1287 ;; This function calls:
  1288 ;;		_DelayMs
  1289 ;;		_concentration_gameboard_init
  1290 ;;		_game_end
  1291 ;;		_joystick_init
  1292 ;;		_lcd_goto
  1293 ;;		_lcd_init
  1294 ;;		_lcd_putch
  1295 ;;		_lcd_puts
  1296 ;;		_startup
  1297 ;;		_time_init
  1298 ;;		_update_gameboard_from_input
  1299 ;; This function is called by:
  1300 ;;		Startup code after reset
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _main
  1306  0398                     _main:	
  1307  0398                     l3665:	
  1308                           ;incstack = 0
  1309                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1310                           
  1311                           
  1312                           ;concentration.c: 108:     SCS = 0;
  1313  0398  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0399  1303               	bcf	3,6	;RP1=0, select bank1
  1315  039A  100F               	bcf	15,0	;volatile
  1316  039B                     l3667:	
  1317                           
  1318                           ;concentration.c: 110:     TRISD = 0;
  1319  039B  0188               	clrf	8	;volatile
  1320                           
  1321                           ;concentration.c: 111:     TRISA = 0;
  1322  039C  0185               	clrf	5	;volatile
  1323                           
  1324                           ;concentration.c: 112:     ANSEL = 0;
  1325  039D  1683               	bsf	3,5	;RP0=1, select bank3
  1326  039E  1703               	bsf	3,6	;RP1=1, select bank3
  1327  039F  0188               	clrf	8	;volatile
  1328  03A0                     l3669:	
  1329                           
  1330                           ;concentration.c: 113:     lcd_init(gameboard);
  1331  03A0  3005               	movlw	5
  1332  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1333  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1334  03A3  00AA               	movwf	lcd_init@port
  1335  03A4  3000               	movlw	0
  1336  03A5  00AB               	movwf	lcd_init@port+1
  1337  03A6  120A  158A  23E8  120A  118A  	fcall	_lcd_init
  1338  03AB                     l3671:	
  1339                           
  1340                           ;concentration.c: 114:     lcd_init(scoreboard);
  1341  03AB  3008               	movlw	8
  1342  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1343  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1344  03AE  00AA               	movwf	lcd_init@port
  1345  03AF  3000               	movlw	0
  1346  03B0  00AB               	movwf	lcd_init@port+1
  1347  03B1  120A  158A  23E8  120A  118A  	fcall	_lcd_init
  1348  03B6                     l3673:	
  1349                           
  1350                           ;concentration.c: 116:     joystick_init();
  1351  03B6  120A  158A  21DE  120A  118A  	fcall	_joystick_init
  1352  03BB                     l3675:	
  1353                           
  1354                           ;concentration.c: 118:     TRISC &= 0x1F;
  1355  03BB  301F               	movlw	31
  1356  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1357  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1358  03BE  00D7               	movwf	??_main
  1359  03BF  0857               	movf	??_main,w
  1360  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  1361  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  1362  03C2  0587               	andwf	7,f	;volatile
  1363  03C3                     l3677:	
  1364                           
  1365                           ;concentration.c: 119:     PORTC = 0;
  1366  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1367  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1368  03C5  0187               	clrf	7	;volatile
  1369  03C6                     l3679:	
  1370                           
  1371                           ;concentration.c: 121:     time_init();
  1372  03C6  120A  158A  2205  120A  118A  	fcall	_time_init
  1373  03CB                     l3681:	
  1374                           
  1375                           ;concentration.c: 123:     current_player = 0;
  1376  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1377  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1378  03CD  01E0               	clrf	_current_player
  1379  03CE                     l3683:	
  1380                           
  1381                           ;concentration.c: 125:     lcd_puts(" Game Selection", scoreboard);
  1382  03CE  3083               	movlw	low (STR_1| (0+32768))
  1383  03CF  00A8               	movwf	lcd_puts@string
  1384  03D0  3086               	movlw	high (STR_1| (0+32768))
  1385  03D1  00A9               	movwf	lcd_puts@string+1
  1386  03D2  3008               	movlw	8
  1387  03D3  00AA               	movwf	lcd_puts@port
  1388  03D4  3000               	movlw	0
  1389  03D5  00AB               	movwf	lcd_puts@port+1
  1390  03D6  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  1391  03DB                     l3685:	
  1392                           
  1393                           ;concentration.c: 126:     lcd_puts("  Concentration", gameboard);
  1394  03DB  3073               	movlw	low (STR_2| (0+32768))
  1395  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1396  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1397  03DE  00A8               	movwf	lcd_puts@string
  1398  03DF  3086               	movlw	high (STR_2| (0+32768))
  1399  03E0  00A9               	movwf	lcd_puts@string+1
  1400  03E1  3005               	movlw	5
  1401  03E2  00AA               	movwf	lcd_puts@port
  1402  03E3  3000               	movlw	0
  1403  03E4  00AB               	movwf	lcd_puts@port+1
  1404  03E5  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  1405  03EA                     l3687:	
  1406                           
  1407                           ;concentration.c: 127:     lcd_goto(0x40, gameboard);
  1408  03EA  3005               	movlw	5
  1409  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1410  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1411  03ED  00A8               	movwf	lcd_goto@port
  1412  03EE  3000               	movlw	0
  1413  03EF  00A9               	movwf	lcd_goto@port+1
  1414  03F0  3040               	movlw	64
  1415  03F1  120A  158A  21C0  120A  118A  	fcall	_lcd_goto
  1416  03F6                     l3689:	
  1417                           
  1418                           ;concentration.c: 128:     lcd_puts("  Simon Says", gameboard);
  1419  03F6  30C8               	movlw	low (STR_3| (0+32768))
  1420  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1421  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1422  03F9  00A8               	movwf	lcd_puts@string
  1423  03FA  3086               	movlw	high (STR_3| (0+32768))
  1424  03FB  00A9               	movwf	lcd_puts@string+1
  1425  03FC  3005               	movlw	5
  1426  03FD  00AA               	movwf	lcd_puts@port
  1427  03FE  3000               	movlw	0
  1428  03FF  00AB               	movwf	lcd_puts@port+1
  1429  0400  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  1430  0405                     l3691:	
  1431                           
  1432                           ;concentration.c: 129:     lcd_goto(0, gameboard);
  1433  0405  3005               	movlw	5
  1434  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0408  00A8               	movwf	lcd_goto@port
  1437  0409  3000               	movlw	0
  1438  040A  00A9               	movwf	lcd_goto@port+1
  1439  040B  3000               	movlw	0
  1440  040C  120A  158A  21C0  120A  118A  	fcall	_lcd_goto
  1441  0411                     l3693:	
  1442                           
  1443                           ;concentration.c: 130:     lcd_putch(0x7E, gameboard);
  1444  0411  3005               	movlw	5
  1445  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0414  00B0               	movwf	lcd_putch@port
  1448  0415  3000               	movlw	0
  1449  0416  00B1               	movwf	lcd_putch@port+1
  1450  0417  307E               	movlw	126
  1451  0418  120A  118A  25EE  120A  118A  	fcall	_lcd_putch
  1452  041D                     l3695:	
  1453                           
  1454                           ;concentration.c: 131:     char game_selection = 0xFF;
  1455  041D  30FF               	movlw	255
  1456  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1457  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0420  00D7               	movwf	??_main
  1459  0421  0857               	movf	??_main,w
  1460  0422  00D9               	movwf	main@game_selection
  1461  0423                     l3697:	
  1462                           
  1463                           ;concentration.c: 132:     char selector_pos = 0x00;
  1464  0423  01DA               	clrf	main@selector_pos
  1465  0424                     l3699:	
  1466                           
  1467                           ;concentration.c: 133:     GO = 1;
  1468  0424  149F               	bsf	31,1	;volatile
  1469                           
  1470                           ;concentration.c: 134:     while(game_selection == 0xFF) {
  1471  0425  2CB4               	goto	l3731
  1472  0426                     l192:	
  1473                           
  1474                           ;concentration.c: 135:         if(GO == 0) {
  1475  0426  189F               	btfsc	31,1	;volatile
  1476  0427  2C29               	goto	u2691
  1477  0428  2C2A               	goto	u2690
  1478  0429                     u2691:	
  1479  0429  2C2C               	goto	l3703
  1480  042A                     u2690:	
  1481  042A                     l3701:	
  1482                           
  1483                           ;concentration.c: 136:             RC6 = 1;
  1484  042A  1707               	bsf	7,6	;volatile
  1485                           
  1486                           ;concentration.c: 137:             GO = 1;
  1487  042B  149F               	bsf	31,1	;volatile
  1488  042C                     l3703:	
  1489                           
  1490                           ;concentration.c: 139:         if(event_enabled) {
  1491  042C  0865               	movf	_event_enabled,w
  1492  042D  1903               	btfsc	3,2
  1493  042E  2C30               	goto	u2701
  1494  042F  2C31               	goto	u2700
  1495  0430                     u2701:	
  1496  0430  2CB4               	goto	l3731
  1497  0431                     u2700:	
  1498  0431                     l3705:	
  1499                           
  1500                           ;concentration.c: 140:             if(RB5 == 0) {
  1501  0431  1A86               	btfsc	6,5	;volatile
  1502  0432  2C34               	goto	u2711
  1503  0433  2C35               	goto	u2710
  1504  0434                     u2711:	
  1505  0434  2C49               	goto	l3711
  1506  0435                     u2710:	
  1507  0435                     l3707:	
  1508                           
  1509                           ;concentration.c: 141:                 game_selection = selector_pos;
  1510  0435  085A               	movf	main@selector_pos,w
  1511  0436  00D7               	movwf	??_main
  1512  0437  0857               	movf	??_main,w
  1513  0438  00D9               	movwf	main@game_selection
  1514  0439                     l3709:	
  1515                           
  1516                           ;concentration.c: 142:                 DelayMs(8);
  1517  0439  3008               	movlw	8
  1518  043A  00A0               	movwf	DelayMs@millis
  1519  043B  3000               	movlw	0
  1520  043C  00A1               	movwf	DelayMs@millis+1
  1521  043D  120A  158A  218D  120A  118A  	fcall	_DelayMs
  1522  0442                     l196:	
  1523                           ;concentration.c: 143:                 while(RB5 == 0);
  1524                           
  1525  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0444  1E86               	btfss	6,5	;volatile
  1528  0445  2C47               	goto	u2721
  1529  0446  2C48               	goto	u2720
  1530  0447                     u2721:	
  1531  0447  2C42               	goto	l196
  1532  0448                     u2720:	
  1533  0448  2CBB               	goto	l3733
  1534  0449                     l3711:	
  1535                           
  1536                           ;concentration.c: 146:             if((joystick_y_pos < 100)||(joystick_y_pos > 900)) {
  1537  0449  085C               	movf	_joystick_y_pos+1,w
  1538  044A  3A80               	xorlw	128
  1539  044B  00FF               	movwf	btemp+1
  1540  044C  3080               	movlw	128
  1541  044D  027F               	subwf	btemp+1,w
  1542  044E  1D03               	skipz
  1543  044F  2C52               	goto	u2735
  1544  0450  3064               	movlw	100
  1545  0451  025B               	subwf	_joystick_y_pos,w
  1546  0452                     u2735:	
  1547  0452  1C03               	skipc
  1548  0453  2C55               	goto	u2731
  1549  0454  2C56               	goto	u2730
  1550  0455                     u2731:	
  1551  0455  2C65               	goto	l3715
  1552  0456                     u2730:	
  1553  0456                     l3713:	
  1554  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0458  085C               	movf	_joystick_y_pos+1,w
  1557  0459  3A80               	xorlw	128
  1558  045A  00FF               	movwf	btemp+1
  1559  045B  3083               	movlw	131
  1560  045C  027F               	subwf	btemp+1,w
  1561  045D  1D03               	skipz
  1562  045E  2C61               	goto	u2745
  1563  045F  3085               	movlw	133
  1564  0460  025B               	subwf	_joystick_y_pos,w
  1565  0461                     u2745:	
  1566  0461  1C03               	skipc
  1567  0462  2C64               	goto	u2741
  1568  0463  2C65               	goto	u2740
  1569  0464                     u2741:	
  1570  0464  2CB4               	goto	l3731
  1571  0465                     u2740:	
  1572  0465                     l3715:	
  1573                           
  1574                           ;concentration.c: 147:                 lcd_goto(selector_pos, gameboard);
  1575  0465  3005               	movlw	5
  1576  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0468  00A8               	movwf	lcd_goto@port
  1579  0469  3000               	movlw	0
  1580  046A  00A9               	movwf	lcd_goto@port+1
  1581  046B  085A               	movf	main@selector_pos,w
  1582  046C  120A  158A  21C0  120A  118A  	fcall	_lcd_goto
  1583                           
  1584                           ;concentration.c: 148:                 lcd_putch(0x20, gameboard);
  1585  0471  3005               	movlw	5
  1586  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0474  00B0               	movwf	lcd_putch@port
  1589  0475  3000               	movlw	0
  1590  0476  00B1               	movwf	lcd_putch@port+1
  1591  0477  3020               	movlw	32
  1592  0478  120A  118A  25EE  120A  118A  	fcall	_lcd_putch
  1593                           
  1594                           ;concentration.c: 149:                 switch(selector_pos) {
  1595  047D  2C85               	goto	l3723
  1596  047E                     l3717:	
  1597                           
  1598                           ;concentration.c: 151:                         selector_pos = 0x40;
  1599  047E  3040               	movlw	64
  1600  047F  00D7               	movwf	??_main
  1601  0480  0857               	movf	??_main,w
  1602  0481  00DA               	movwf	main@selector_pos
  1603                           
  1604                           ;concentration.c: 152:                         break;
  1605  0482  2C97               	goto	l3725
  1606  0483                     l3719:	
  1607                           
  1608                           ;concentration.c: 154:                         selector_pos = 0x00;
  1609  0483  01DA               	clrf	main@selector_pos
  1610                           
  1611                           ;concentration.c: 155:                         break;
  1612  0484  2C97               	goto	l3725
  1613  0485                     l3723:	
  1614  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0487  085A               	movf	main@selector_pos,w
  1617  0488  00D7               	movwf	??_main
  1618  0489  01D8               	clrf	??_main+1
  1619                           
  1620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1621                           ; Switch size 1, requested type "simple"
  1622                           ; Number of cases is 1, Range of values is 0 to 0
  1623                           ; switch strategies available:
  1624                           ; Name         Instructions Cycles
  1625                           ; simple_byte            4     3 (average)
  1626                           ; direct_byte           11     8 (fixed)
  1627                           ; jumptable            260     6 (fixed)
  1628                           ;	Chosen strategy is simple_byte
  1629  048A  0858               	movf	??_main+1,w
  1630  048B  3A00               	xorlw	0	; case 0
  1631  048C  1903               	skipnz
  1632  048D  2C8F               	goto	l3899
  1633  048E  2C97               	goto	l3725
  1634  048F                     l3899:	
  1635                           
  1636                           ; Switch size 1, requested type "simple"
  1637                           ; Number of cases is 2, Range of values is 0 to 64
  1638                           ; switch strategies available:
  1639                           ; Name         Instructions Cycles
  1640                           ; simple_byte            7     4 (average)
  1641                           ; direct_byte          203     8 (fixed)
  1642                           ; jumptable            260     6 (fixed)
  1643                           ;	Chosen strategy is simple_byte
  1644  048F  0857               	movf	??_main,w
  1645  0490  3A00               	xorlw	0	; case 0
  1646  0491  1903               	skipnz
  1647  0492  2C7E               	goto	l3717
  1648  0493  3A40               	xorlw	64	; case 64
  1649  0494  1903               	skipnz
  1650  0495  2C83               	goto	l3719
  1651  0496  2C97               	goto	l3725
  1652  0497                     l3725:	
  1653                           
  1654                           ;concentration.c: 157:                 lcd_goto(selector_pos, gameboard);
  1655  0497  3005               	movlw	5
  1656  0498  00A8               	movwf	lcd_goto@port
  1657  0499  3000               	movlw	0
  1658  049A  00A9               	movwf	lcd_goto@port+1
  1659  049B  085A               	movf	main@selector_pos,w
  1660  049C  120A  158A  21C0  120A  118A  	fcall	_lcd_goto
  1661                           
  1662                           ;concentration.c: 158:                 lcd_putch(0x7E, gameboard);
  1663  04A1  3005               	movlw	5
  1664  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1665  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1666  04A4  00B0               	movwf	lcd_putch@port
  1667  04A5  3000               	movlw	0
  1668  04A6  00B1               	movwf	lcd_putch@port+1
  1669  04A7  307E               	movlw	126
  1670  04A8  120A  118A  25EE  120A  118A  	fcall	_lcd_putch
  1671  04AD                     l3727:	
  1672                           
  1673                           ;concentration.c: 159:                 event_enabled = 0;
  1674  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1675  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1676  04AF  01E5               	clrf	_event_enabled
  1677  04B0                     l3729:	
  1678                           
  1679                           ;concentration.c: 160:                 event_delay_count = 62;
  1680  04B0  303E               	movlw	62
  1681  04B1  00D7               	movwf	??_main
  1682  04B2  0857               	movf	??_main,w
  1683  04B3  00FA               	movwf	_event_delay_count
  1684  04B4                     l3731:	
  1685                           
  1686                           ;concentration.c: 134:     while(game_selection == 0xFF) {
  1687  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1688  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1689  04B6  0A59               	incf	main@game_selection,w
  1690  04B7  1903               	btfsc	3,2
  1691  04B8  2CBA               	goto	u2751
  1692  04B9  2CBB               	goto	u2750
  1693  04BA                     u2751:	
  1694  04BA  2C26               	goto	l192
  1695  04BB                     u2750:	
  1696  04BB                     l3733:	
  1697                           
  1698                           ;concentration.c: 164:     if(game_selection == 0x00) {
  1699  04BB  0859               	movf	main@game_selection,w
  1700  04BC  1D03               	btfss	3,2
  1701  04BD  2CBF               	goto	u2761
  1702  04BE  2CC0               	goto	u2760
  1703  04BF                     u2761:	
  1704  04BF  2CDC               	goto	l212
  1705  04C0                     u2760:	
  1706  04C0                     l3735:	
  1707                           
  1708                           ;concentration.c: 166:         concentration_gameboard_init();
  1709  04C0  120A  158A  22C1  120A  118A  	fcall	_concentration_gameboard_init
  1710                           
  1711                           ;concentration.c: 168:         startup();
  1712  04C5  120A  158A  25B2  120A  118A  	fcall	_startup
  1713                           
  1714                           ;concentration.c: 170:         while(!game_over) {
  1715  04CA  2CD0               	goto	l3739
  1716  04CB                     l3737:	
  1717                           
  1718                           ;concentration.c: 171:             update_gameboard_from_input();
  1719  04CB  120A  118A  223D  120A  118A  	fcall	_update_gameboard_from_input
  1720  04D0                     l3739:	
  1721                           
  1722                           ;concentration.c: 170:         while(!game_over) {
  1723  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  1724  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  1725  04D2  085F               	movf	_game_over,w
  1726  04D3  1903               	btfsc	3,2
  1727  04D4  2CD6               	goto	u2771
  1728  04D5  2CD7               	goto	u2770
  1729  04D6                     u2771:	
  1730  04D6  2CCB               	goto	l3737
  1731  04D7                     u2770:	
  1732  04D7                     l3741:	
  1733                           
  1734                           ;concentration.c: 173:         game_end();
  1735  04D7  120A  158A  234B  120A  118A  	fcall	_game_end
  1736  04DC                     l212:	
  1737                           ;concentration.c: 174:     } else {
  1738                           
  1739  04DC  120A  118A  280E   	ljmp	start
  1740  04DF                     __end_of_main:	
  1741                           
  1742                           	psect	text1
  1743  023D                     __ptext1:	
  1744 ;; *************** function _update_gameboard_from_input *****************
  1745 ;; Defined at:
  1746 ;;		line 418 in file "concentration.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0
  1762 ;;      Temps:          0       2       0       0       0
  1763 ;;      Totals:         0       2       0       0       0
  1764 ;;Total ram usage:        2 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    6
  1767 ;; This function calls:
  1768 ;;		_DelayMs
  1769 ;;		_check_for_match
  1770 ;;		_display_gameboard
  1771 ;;		_get_cursor_index
  1772 ;;		_toggle_cursor
  1773 ;;		_update_cursor
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _update_gameboard_from_input
  1781  023D                     _update_gameboard_from_input:	
  1782  023D                     l3579:	
  1783                           ;incstack = 0
  1784                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1785                           
  1786                           
  1787                           ;concentration.c: 420:     if(GO == 0) {
  1788  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1789  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1790  023F  189F               	btfsc	31,1	;volatile
  1791  0240  2A42               	goto	u2421
  1792  0241  2A43               	goto	u2420
  1793  0242                     u2421:	
  1794  0242  2A44               	goto	l320
  1795  0243                     u2420:	
  1796  0243                     l3581:	
  1797                           
  1798                           ;concentration.c: 421:         GO = 1;
  1799  0243  149F               	bsf	31,1	;volatile
  1800  0244                     l320:	
  1801                           ;concentration.c: 422:     }
  1802                           
  1803                           
  1804                           ;concentration.c: 423:     if((((RB5 == 0)&&(current_player == 0))||
  1805  0244  1A86               	btfsc	6,5	;volatile
  1806  0245  2A47               	goto	u2431
  1807  0246  2A48               	goto	u2430
  1808  0247                     u2431:	
  1809  0247  2A4D               	goto	l325
  1810  0248                     u2430:	
  1811  0248                     l3583:	
  1812  0248  0860               	movf	_current_player,w
  1813  0249  1903               	btfsc	3,2
  1814  024A  2A4C               	goto	u2441
  1815  024B  2A4D               	goto	u2440
  1816  024C                     u2441:	
  1817  024C  2A56               	goto	l3587
  1818  024D                     u2440:	
  1819  024D                     l325:	
  1820  024D  1906               	btfsc	6,2	;volatile
  1821  024E  2A50               	goto	u2451
  1822  024F  2A51               	goto	u2450
  1823  0250                     u2451:	
  1824  0250  2AAC               	goto	l321
  1825  0251                     u2450:	
  1826  0251                     l3585:	
  1827  0251  0360               	decf	_current_player,w
  1828  0252  1D03               	btfss	3,2
  1829  0253  2A55               	goto	u2461
  1830  0254  2A56               	goto	u2460
  1831  0255                     u2461:	
  1832  0255  2AAC               	goto	l321
  1833  0256                     u2460:	
  1834  0256                     l3587:	
  1835  0256  0361               	decf	_joystick_pressed,w
  1836  0257  1D03               	btfss	3,2
  1837  0258  2A5A               	goto	u2471
  1838  0259  2A5B               	goto	u2470
  1839  025A                     u2471:	
  1840  025A  2AAC               	goto	l321
  1841  025B                     u2470:	
  1842  025B                     l3589:	
  1843                           
  1844                           ;concentration.c: 425:             &&(joystick_pressed == 1)) {;concentration.c: 426:   
      +                                DelayMs(6);
  1845  025B  3006               	movlw	6
  1846  025C  00A0               	movwf	DelayMs@millis
  1847  025D  3000               	movlw	0
  1848  025E  00A1               	movwf	DelayMs@millis+1
  1849  025F  120A  158A  218D  120A  118A  	fcall	_DelayMs
  1850  0264                     l3591:	
  1851                           
  1852                           ;concentration.c: 427:         joystick_pressed = 0;
  1853  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0266  01E1               	clrf	_joystick_pressed
  1856  0267                     l3593:	
  1857                           
  1858                           ;concentration.c: 428:         if(visible[get_cursor_index(cursor_pos)] == 0xFF) {
  1859  0267  0869               	movf	_cursor_pos,w
  1860  0268  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  1861  026D  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1862  026E  0084               	movwf	4
  1863  026F  1383               	bcf	3,7	;select IRP bank1
  1864  0270  0A00               	incf	0,w
  1865  0271  1D03               	btfss	3,2
  1866  0272  2A74               	goto	u2481
  1867  0273  2A75               	goto	u2480
  1868  0274                     u2481:	
  1869  0274  2AC0               	goto	l327
  1870  0275                     u2480:	
  1871  0275                     l3595:	
  1872                           
  1873                           ;concentration.c: 429:             visible[get_cursor_index(cursor_pos)] = board[get_cur
      +                          sor_index(cursor_pos)];
  1874  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0277  0869               	movf	_cursor_pos,w
  1877  0278  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  1878  027D  3EC0               	addlw	(low (_board| 0))& (0+255)
  1879  027E  0084               	movwf	4
  1880  027F  1383               	bcf	3,7	;select IRP bank1
  1881  0280  0800               	movf	0,w
  1882  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0283  00B9               	movwf	??_update_gameboard_from_input
  1885  0284  0869               	movf	_cursor_pos,w
  1886  0285  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  1887  028A  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1888  028B  0084               	movwf	4
  1889  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1890  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1891  028E  0839               	movf	??_update_gameboard_from_input,w
  1892  028F  1383               	bcf	3,7	;select IRP bank1
  1893  0290  0080               	movwf	0
  1894                           
  1895                           ;concentration.c: 430:             current_char = board[get_cursor_index(cursor_pos)];
  1896  0291  0869               	movf	_cursor_pos,w
  1897  0292  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  1898  0297  3EC0               	addlw	(low (_board| 0))& (0+255)
  1899  0298  0084               	movwf	4
  1900  0299  1383               	bcf	3,7	;select IRP bank1
  1901  029A  0800               	movf	0,w
  1902  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1903  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1904  029D  00B9               	movwf	??_update_gameboard_from_input
  1905  029E  0839               	movf	??_update_gameboard_from_input,w
  1906  029F  00E8               	movwf	_current_char
  1907  02A0                     l3597:	
  1908                           
  1909                           ;concentration.c: 431:             check_for_match(current_player);
  1910  02A0  0860               	movf	_current_player,w
  1911  02A1  120A  118A  24DF  120A  118A  	fcall	_check_for_match
  1912  02A6                     l3599:	
  1913                           
  1914                           ;concentration.c: 432:             display_gameboard();
  1915  02A6  120A  158A  2306  120A  118A  	fcall	_display_gameboard
  1916  02AB  2AC0               	goto	l327
  1917  02AC                     l321:	
  1918  02AC  1E86               	btfss	6,5	;volatile
  1919  02AD  2AAF               	goto	u2491
  1920  02AE  2AB0               	goto	u2490
  1921  02AF                     u2491:	
  1922  02AF  2AB5               	goto	l332
  1923  02B0                     u2490:	
  1924  02B0                     l3601:	
  1925  02B0  0860               	movf	_current_player,w
  1926  02B1  1903               	btfsc	3,2
  1927  02B2  2AB4               	goto	u2501
  1928  02B3  2AB5               	goto	u2500
  1929  02B4                     u2501:	
  1930  02B4  2ABE               	goto	l330
  1931  02B5                     u2500:	
  1932  02B5                     l332:	
  1933  02B5  1D06               	btfss	6,2	;volatile
  1934  02B6  2AB8               	goto	u2511
  1935  02B7  2AB9               	goto	u2510
  1936  02B8                     u2511:	
  1937  02B8  2AC0               	goto	l327
  1938  02B9                     u2510:	
  1939  02B9                     l3603:	
  1940  02B9  0360               	decf	_current_player,w
  1941  02BA  1D03               	btfss	3,2
  1942  02BB  2ABD               	goto	u2521
  1943  02BC  2ABE               	goto	u2520
  1944  02BD                     u2521:	
  1945  02BD  2AC0               	goto	l327
  1946  02BE                     u2520:	
  1947  02BE                     l330:	
  1948                           
  1949                           ;concentration.c: 435:             ((RB2 == 1)&&(current_player == 1)))) {;concentration
      +                          .c: 436:         joystick_pressed = 1;
  1950  02BE  01E1               	clrf	_joystick_pressed
  1951  02BF  0AE1               	incf	_joystick_pressed,f
  1952  02C0                     l327:	
  1953                           
  1954                           ;concentration.c: 439:     if(CCP1IF == 1) {
  1955  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1956  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1957  02C2  1D0C               	btfss	12,2	;volatile
  1958  02C3  2AC5               	goto	u2531
  1959  02C4  2AC6               	goto	u2530
  1960  02C5                     u2531:	
  1961  02C5  2AE6               	goto	l3615
  1962  02C6                     u2530:	
  1963  02C6                     l3605:	
  1964                           
  1965                           ;concentration.c: 440:         if(delay_loops == 0) {
  1966  02C6  0866               	movf	_delay_loops,w
  1967  02C7  1D03               	btfss	3,2
  1968  02C8  2ACA               	goto	u2541
  1969  02C9  2ACB               	goto	u2540
  1970  02CA                     u2541:	
  1971  02CA  2AD5               	goto	l3611
  1972  02CB                     u2540:	
  1973  02CB                     l3607:	
  1974                           
  1975                           ;concentration.c: 441:             delay_loops = 25;
  1976  02CB  3019               	movlw	25
  1977  02CC  00B9               	movwf	??_update_gameboard_from_input
  1978  02CD  0839               	movf	??_update_gameboard_from_input,w
  1979  02CE  00E6               	movwf	_delay_loops
  1980  02CF                     l3609:	
  1981                           
  1982                           ;concentration.c: 442:             toggle_cursor();
  1983  02CF  120A  158A  222F  120A  118A  	fcall	_toggle_cursor
  1984                           
  1985                           ;concentration.c: 443:         } else {
  1986  02D4  2AD7               	goto	l335
  1987  02D5                     l3611:	
  1988                           
  1989                           ;concentration.c: 444:             delay_loops--;
  1990  02D5  3001               	movlw	1
  1991  02D6  02E6               	subwf	_delay_loops,f
  1992  02D7                     l335:	
  1993                           ;concentration.c: 445:         }
  1994                           
  1995                           
  1996                           ;concentration.c: 446:         CCPR1 = TMR1+50000;
  1997  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1998  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1999  02D9  080E               	movf	14,w	;volatile
  2000  02DA  3E50               	addlw	80
  2001  02DB  00B9               	movwf	??_update_gameboard_from_input
  2002  02DC  080F               	movf	15,w	;volatile
  2003  02DD  1803               	skipnc
  2004  02DE  3E01               	addlw	1
  2005  02DF  3EC3               	addlw	195
  2006  02E0  00BA               	movwf	??_update_gameboard_from_input+1
  2007  02E1  0839               	movf	??_update_gameboard_from_input,w
  2008  02E2  0095               	movwf	21	;volatile
  2009  02E3  083A               	movf	??_update_gameboard_from_input+1,w
  2010  02E4  0096               	movwf	22	;volatile
  2011  02E5                     l3613:	
  2012                           
  2013                           ;concentration.c: 447:         CCP1IF = 0;
  2014  02E5  110C               	bcf	12,2	;volatile
  2015  02E6                     l3615:	
  2016                           
  2017                           ;concentration.c: 450:     if(joystick_x_pos > 900) {
  2018  02E6  085E               	movf	_joystick_x_pos+1,w
  2019  02E7  3A80               	xorlw	128
  2020  02E8  00FF               	movwf	btemp+1
  2021  02E9  3083               	movlw	131
  2022  02EA  027F               	subwf	btemp+1,w
  2023  02EB  1D03               	skipz
  2024  02EC  2AEF               	goto	u2555
  2025  02ED  3085               	movlw	133
  2026  02EE  025D               	subwf	_joystick_x_pos,w
  2027  02EF                     u2555:	
  2028  02EF  1C03               	skipc
  2029  02F0  2AF2               	goto	u2551
  2030  02F1  2AF3               	goto	u2550
  2031  02F2                     u2551:	
  2032  02F2  2B05               	goto	l3621
  2033  02F3                     u2550:	
  2034  02F3                     l3617:	
  2035                           
  2036                           ;concentration.c: 451:         if(event_enabled) {
  2037  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2038  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2039  02F5  0865               	movf	_event_enabled,w
  2040  02F6  1903               	btfsc	3,2
  2041  02F7  2AF9               	goto	u2561
  2042  02F8  2AFA               	goto	u2560
  2043  02F9                     u2561:	
  2044  02F9  2B97               	goto	l354
  2045  02FA                     u2560:	
  2046  02FA                     l3619:	
  2047                           
  2048                           ;concentration.c: 452:             update_cursor(30, 2);
  2049  02FA  3002               	movlw	2
  2050  02FB  00B9               	movwf	??_update_gameboard_from_input
  2051  02FC  0839               	movf	??_update_gameboard_from_input,w
  2052  02FD  00B4               	movwf	update_cursor@direction
  2053  02FE  301E               	movlw	30
  2054  02FF  120A  158A  2645  120A  118A  	fcall	_update_cursor
  2055  0304  2B97               	goto	l354
  2056  0305                     l3621:	
  2057  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0307  085E               	movf	_joystick_x_pos+1,w
  2060  0308  3A80               	xorlw	128
  2061  0309  00FF               	movwf	btemp+1
  2062  030A  3080               	movlw	128
  2063  030B  027F               	subwf	btemp+1,w
  2064  030C  1D03               	skipz
  2065  030D  2B10               	goto	u2575
  2066  030E  3064               	movlw	100
  2067  030F  025D               	subwf	_joystick_x_pos,w
  2068  0310                     u2575:	
  2069  0310  1803               	skipnc
  2070  0311  2B13               	goto	u2571
  2071  0312  2B14               	goto	u2570
  2072  0313                     u2571:	
  2073  0313  2B26               	goto	l3627
  2074  0314                     u2570:	
  2075  0314                     l3623:	
  2076                           
  2077                           ;concentration.c: 455:         if(event_enabled) {
  2078  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0316  0865               	movf	_event_enabled,w
  2081  0317  1903               	btfsc	3,2
  2082  0318  2B1A               	goto	u2581
  2083  0319  2B1B               	goto	u2580
  2084  031A                     u2581:	
  2085  031A  2B97               	goto	l354
  2086  031B                     u2580:	
  2087  031B                     l3625:	
  2088                           
  2089                           ;concentration.c: 456:             update_cursor(30, 3);
  2090  031B  3003               	movlw	3
  2091  031C  00B9               	movwf	??_update_gameboard_from_input
  2092  031D  0839               	movf	??_update_gameboard_from_input,w
  2093  031E  00B4               	movwf	update_cursor@direction
  2094  031F  301E               	movlw	30
  2095  0320  120A  158A  2645  120A  118A  	fcall	_update_cursor
  2096  0325  2B97               	goto	l354
  2097  0326                     l3627:	
  2098  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0328  085E               	movf	_joystick_x_pos+1,w
  2101  0329  3A80               	xorlw	128
  2102  032A  00FF               	movwf	btemp+1
  2103  032B  3083               	movlw	131
  2104  032C  027F               	subwf	btemp+1,w
  2105  032D  1D03               	skipz
  2106  032E  2B31               	goto	u2595
  2107  032F  3021               	movlw	33
  2108  0330  025D               	subwf	_joystick_x_pos,w
  2109  0331                     u2595:	
  2110  0331  1C03               	skipc
  2111  0332  2B34               	goto	u2591
  2112  0333  2B35               	goto	u2590
  2113  0334                     u2591:	
  2114  0334  2B47               	goto	l3633
  2115  0335                     u2590:	
  2116  0335                     l3629:	
  2117                           
  2118                           ;concentration.c: 459:         if(event_enabled) {
  2119  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0337  0865               	movf	_event_enabled,w
  2122  0338  1903               	btfsc	3,2
  2123  0339  2B3B               	goto	u2601
  2124  033A  2B3C               	goto	u2600
  2125  033B                     u2601:	
  2126  033B  2B97               	goto	l354
  2127  033C                     u2600:	
  2128  033C                     l3631:	
  2129                           
  2130                           ;concentration.c: 460:             update_cursor(60, 2);
  2131  033C  3002               	movlw	2
  2132  033D  00B9               	movwf	??_update_gameboard_from_input
  2133  033E  0839               	movf	??_update_gameboard_from_input,w
  2134  033F  00B4               	movwf	update_cursor@direction
  2135  0340  303C               	movlw	60
  2136  0341  120A  158A  2645  120A  118A  	fcall	_update_cursor
  2137  0346  2B97               	goto	l354
  2138  0347                     l3633:	
  2139  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0349  085E               	movf	_joystick_x_pos+1,w
  2142  034A  3A80               	xorlw	128
  2143  034B  00FF               	movwf	btemp+1
  2144  034C  3080               	movlw	128
  2145  034D  027F               	subwf	btemp+1,w
  2146  034E  1D03               	skipz
  2147  034F  2B52               	goto	u2615
  2148  0350  30C8               	movlw	200
  2149  0351  025D               	subwf	_joystick_x_pos,w
  2150  0352                     u2615:	
  2151  0352  1803               	skipnc
  2152  0353  2B55               	goto	u2611
  2153  0354  2B56               	goto	u2610
  2154  0355                     u2611:	
  2155  0355  2B68               	goto	l3639
  2156  0356                     u2610:	
  2157  0356                     l3635:	
  2158                           
  2159                           ;concentration.c: 463:         if(event_enabled) {
  2160  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0358  0865               	movf	_event_enabled,w
  2163  0359  1903               	btfsc	3,2
  2164  035A  2B5C               	goto	u2621
  2165  035B  2B5D               	goto	u2620
  2166  035C                     u2621:	
  2167  035C  2B97               	goto	l354
  2168  035D                     u2620:	
  2169  035D                     l3637:	
  2170                           
  2171                           ;concentration.c: 464:             update_cursor(60, 3);
  2172  035D  3003               	movlw	3
  2173  035E  00B9               	movwf	??_update_gameboard_from_input
  2174  035F  0839               	movf	??_update_gameboard_from_input,w
  2175  0360  00B4               	movwf	update_cursor@direction
  2176  0361  303C               	movlw	60
  2177  0362  120A  158A  2645  120A  118A  	fcall	_update_cursor
  2178  0367  2B97               	goto	l354
  2179  0368                     l3639:	
  2180  0368  30FD               	movlw	253
  2181  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2182  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2183  036B  065B               	xorwf	_joystick_y_pos,w
  2184  036C  3003               	movlw	3
  2185  036D  1903               	skipnz
  2186  036E  065C               	xorwf	_joystick_y_pos+1,w
  2187  036F  1D03               	btfss	3,2
  2188  0370  2B72               	goto	u2631
  2189  0371  2B73               	goto	u2630
  2190  0372                     u2631:	
  2191  0372  2B81               	goto	l3645
  2192  0373                     u2630:	
  2193  0373                     l3641:	
  2194                           
  2195                           ;concentration.c: 467:         if(event_enabled) {
  2196  0373  0865               	movf	_event_enabled,w
  2197  0374  1903               	btfsc	3,2
  2198  0375  2B77               	goto	u2641
  2199  0376  2B78               	goto	u2640
  2200  0377                     u2641:	
  2201  0377  2B97               	goto	l354
  2202  0378                     u2640:	
  2203  0378                     l3643:	
  2204                           
  2205                           ;concentration.c: 468:             update_cursor(100, 1);
  2206  0378  01B4               	clrf	update_cursor@direction
  2207  0379  0AB4               	incf	update_cursor@direction,f
  2208  037A  3064               	movlw	100
  2209  037B  120A  158A  2645  120A  118A  	fcall	_update_cursor
  2210  0380  2B97               	goto	l354
  2211  0381                     l3645:	
  2212  0381  085B               	movf	_joystick_y_pos,w
  2213  0382  045C               	iorwf	_joystick_y_pos+1,w
  2214  0383  1D03               	btfss	3,2
  2215  0384  2B86               	goto	u2651
  2216  0385  2B87               	goto	u2650
  2217  0386                     u2651:	
  2218  0386  2B95               	goto	l351
  2219  0387                     u2650:	
  2220  0387                     l3647:	
  2221                           
  2222                           ;concentration.c: 471:         if(event_enabled) {
  2223  0387  0865               	movf	_event_enabled,w
  2224  0388  1903               	btfsc	3,2
  2225  0389  2B8B               	goto	u2661
  2226  038A  2B8C               	goto	u2660
  2227  038B                     u2661:	
  2228  038B  2B97               	goto	l354
  2229  038C                     u2660:	
  2230  038C                     l3649:	
  2231                           
  2232                           ;concentration.c: 472:             update_cursor(100, 1);
  2233  038C  01B4               	clrf	update_cursor@direction
  2234  038D  0AB4               	incf	update_cursor@direction,f
  2235  038E  3064               	movlw	100
  2236  038F  120A  158A  2645  120A  118A  	fcall	_update_cursor
  2237  0394  2B97               	goto	l354
  2238  0395                     l351:	
  2239                           
  2240                           ;concentration.c: 475:         event_enabled = 1;
  2241  0395  01E5               	clrf	_event_enabled
  2242  0396  0AE5               	incf	_event_enabled,f
  2243  0397                     l354:	
  2244  0397  0008               	return
  2245  0398                     __end_of_update_gameboard_from_input:	
  2246                           
  2247                           	psect	text2
  2248  0E45                     __ptext2:	
  2249 ;; *************** function _update_cursor *****************
  2250 ;; Defined at:
  2251 ;;		line 479 in file "concentration.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  move_delay_c    1    wreg     unsigned char 
  2254 ;;  direction       1   20[BANK0 ] unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  move_delay_c    1   23[BANK0 ] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       1       0       0       0
  2267 ;;      Locals:         0       1       0       0       0
  2268 ;;      Temps:          0       2       0       0       0
  2269 ;;      Totals:         0       4       0       0       0
  2270 ;;Total ram usage:        4 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    4
  2273 ;; This function calls:
  2274 ;;		_get_current_char
  2275 ;;		_lcd_goto
  2276 ;;		_lcd_putch
  2277 ;; This function is called by:
  2278 ;;		_update_gameboard_from_input
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _update_cursor
  2284  0E45                     _update_cursor:	
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2288                           ;update_cursor@move_delay_count stored from wreg
  2289  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0E47  00B7               	movwf	update_cursor@move_delay_count
  2292  0E48                     l3397:	
  2293                           
  2294                           ;concentration.c: 480:     event_enabled = 0;
  2295  0E48  01E5               	clrf	_event_enabled
  2296  0E49                     l3399:	
  2297                           
  2298                           ;concentration.c: 481:     event_delay_count = move_delay_count;
  2299  0E49  0837               	movf	update_cursor@move_delay_count,w
  2300  0E4A  00B5               	movwf	??_update_cursor
  2301  0E4B  0835               	movf	??_update_cursor,w
  2302  0E4C  00FA               	movwf	_event_delay_count
  2303                           
  2304                           ;concentration.c: 482:     switch(direction) {
  2305  0E4D  2E8C               	goto	l3421
  2306  0E4E                     l3401:	
  2307                           
  2308                           ;concentration.c: 484:             cursor_pos ^= 0x40;
  2309  0E4E  3040               	movlw	64
  2310  0E4F  00B5               	movwf	??_update_cursor
  2311  0E50  0835               	movf	??_update_cursor,w
  2312  0E51  06E9               	xorwf	_cursor_pos,f
  2313                           
  2314                           ;concentration.c: 485:             break;
  2315  0E52  2E9F               	goto	l3423
  2316  0E53                     l3403:	
  2317                           
  2318                           ;concentration.c: 489:                     cursor_pos = 0x0F;
  2319  0E53  300F               	movlw	15
  2320  0E54  00B5               	movwf	??_update_cursor
  2321  0E55  0835               	movf	??_update_cursor,w
  2322  0E56  00E9               	movwf	_cursor_pos
  2323                           
  2324                           ;concentration.c: 490:                     break;
  2325  0E57  2E9F               	goto	l3423
  2326  0E58                     l3405:	
  2327                           
  2328                           ;concentration.c: 492:                     cursor_pos = 0x4F;
  2329  0E58  304F               	movlw	79
  2330  0E59  00B5               	movwf	??_update_cursor
  2331  0E5A  0835               	movf	??_update_cursor,w
  2332  0E5B  00E9               	movwf	_cursor_pos
  2333                           
  2334                           ;concentration.c: 493:                     break;
  2335  0E5C  2E9F               	goto	l3423
  2336  0E5D                     l3407:	
  2337                           
  2338                           ;concentration.c: 495:                     cursor_pos--;
  2339  0E5D  3001               	movlw	1
  2340  0E5E  02E9               	subwf	_cursor_pos,f
  2341                           
  2342                           ;concentration.c: 496:             }
  2343  0E5F  2E9F               	goto	l3423
  2344  0E60                     l3409:	
  2345  0E60  0869               	movf	_cursor_pos,w
  2346  0E61  00B5               	movwf	??_update_cursor
  2347  0E62  01B6               	clrf	??_update_cursor+1
  2348                           
  2349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2350                           ; Switch size 1, requested type "simple"
  2351                           ; Number of cases is 1, Range of values is 0 to 0
  2352                           ; switch strategies available:
  2353                           ; Name         Instructions Cycles
  2354                           ; simple_byte            4     3 (average)
  2355                           ; direct_byte           11     8 (fixed)
  2356                           ; jumptable            260     6 (fixed)
  2357                           ;	Chosen strategy is simple_byte
  2358  0E63  0836               	movf	??_update_cursor+1,w
  2359  0E64  3A00               	xorlw	0	; case 0
  2360  0E65  1903               	skipnz
  2361  0E66  2E68               	goto	l3901
  2362  0E67  2E5D               	goto	l3407
  2363  0E68                     l3901:	
  2364                           
  2365                           ; Switch size 1, requested type "simple"
  2366                           ; Number of cases is 2, Range of values is 0 to 64
  2367                           ; switch strategies available:
  2368                           ; Name         Instructions Cycles
  2369                           ; simple_byte            7     4 (average)
  2370                           ; direct_byte          203     8 (fixed)
  2371                           ; jumptable            260     6 (fixed)
  2372                           ;	Chosen strategy is simple_byte
  2373  0E68  0835               	movf	??_update_cursor,w
  2374  0E69  3A00               	xorlw	0	; case 0
  2375  0E6A  1903               	skipnz
  2376  0E6B  2E53               	goto	l3403
  2377  0E6C  3A40               	xorlw	64	; case 64
  2378  0E6D  1903               	skipnz
  2379  0E6E  2E58               	goto	l3405
  2380  0E6F  2E5D               	goto	l3407
  2381  0E70                     l3411:	
  2382                           
  2383                           ;concentration.c: 501:                     cursor_pos = 0x00;
  2384  0E70  01E9               	clrf	_cursor_pos
  2385                           
  2386                           ;concentration.c: 502:                     break;
  2387  0E71  2E9F               	goto	l3423
  2388  0E72                     l3413:	
  2389                           
  2390                           ;concentration.c: 504:                     cursor_pos = 0x40;
  2391  0E72  3040               	movlw	64
  2392  0E73  00B5               	movwf	??_update_cursor
  2393  0E74  0835               	movf	??_update_cursor,w
  2394  0E75  00E9               	movwf	_cursor_pos
  2395                           
  2396                           ;concentration.c: 505:                     break;
  2397  0E76  2E9F               	goto	l3423
  2398  0E77                     l3415:	
  2399                           
  2400                           ;concentration.c: 507:                     cursor_pos++;
  2401  0E77  3001               	movlw	1
  2402  0E78  00B5               	movwf	??_update_cursor
  2403  0E79  0835               	movf	??_update_cursor,w
  2404  0E7A  07E9               	addwf	_cursor_pos,f
  2405                           
  2406                           ;concentration.c: 508:             }
  2407  0E7B  2E9F               	goto	l3423
  2408  0E7C                     l3417:	
  2409  0E7C  0869               	movf	_cursor_pos,w
  2410  0E7D  00B5               	movwf	??_update_cursor
  2411  0E7E  01B6               	clrf	??_update_cursor+1
  2412                           
  2413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2414                           ; Switch size 1, requested type "simple"
  2415                           ; Number of cases is 1, Range of values is 0 to 0
  2416                           ; switch strategies available:
  2417                           ; Name         Instructions Cycles
  2418                           ; simple_byte            4     3 (average)
  2419                           ; direct_byte           11     8 (fixed)
  2420                           ; jumptable            260     6 (fixed)
  2421                           ;	Chosen strategy is simple_byte
  2422  0E7F  0836               	movf	??_update_cursor+1,w
  2423  0E80  3A00               	xorlw	0	; case 0
  2424  0E81  1903               	skipnz
  2425  0E82  2E84               	goto	l3903
  2426  0E83  2E77               	goto	l3415
  2427  0E84                     l3903:	
  2428                           
  2429                           ; Switch size 1, requested type "simple"
  2430                           ; Number of cases is 2, Range of values is 15 to 79
  2431                           ; switch strategies available:
  2432                           ; Name         Instructions Cycles
  2433                           ; simple_byte            7     4 (average)
  2434                           ; direct_byte          206    11 (fixed)
  2435                           ; jumptable            263     9 (fixed)
  2436                           ;	Chosen strategy is simple_byte
  2437  0E84  0835               	movf	??_update_cursor,w
  2438  0E85  3A0F               	xorlw	15	; case 15
  2439  0E86  1903               	skipnz
  2440  0E87  2E70               	goto	l3411
  2441  0E88  3A40               	xorlw	64	; case 79
  2442  0E89  1903               	skipnz
  2443  0E8A  2E72               	goto	l3413
  2444  0E8B  2E77               	goto	l3415
  2445  0E8C                     l3421:	
  2446  0E8C  0834               	movf	update_cursor@direction,w
  2447  0E8D  00B5               	movwf	??_update_cursor
  2448  0E8E  01B6               	clrf	??_update_cursor+1
  2449                           
  2450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 1, Range of values is 0 to 0
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte            4     3 (average)
  2456                           ; direct_byte           11     8 (fixed)
  2457                           ; jumptable            260     6 (fixed)
  2458                           ;	Chosen strategy is simple_byte
  2459  0E8F  0836               	movf	??_update_cursor+1,w
  2460  0E90  3A00               	xorlw	0	; case 0
  2461  0E91  1903               	skipnz
  2462  0E92  2E94               	goto	l3905
  2463  0E93  2E9F               	goto	l3423
  2464  0E94                     l3905:	
  2465                           
  2466                           ; Switch size 1, requested type "simple"
  2467                           ; Number of cases is 3, Range of values is 1 to 3
  2468                           ; switch strategies available:
  2469                           ; Name         Instructions Cycles
  2470                           ; simple_byte           10     6 (average)
  2471                           ; direct_byte           20    11 (fixed)
  2472                           ; jumptable            263     9 (fixed)
  2473                           ;	Chosen strategy is simple_byte
  2474  0E94  0835               	movf	??_update_cursor,w
  2475  0E95  3A01               	xorlw	1	; case 1
  2476  0E96  1903               	skipnz
  2477  0E97  2E4E               	goto	l3401
  2478  0E98  3A03               	xorlw	3	; case 2
  2479  0E99  1903               	skipnz
  2480  0E9A  2E60               	goto	l3409
  2481  0E9B  3A01               	xorlw	1	; case 3
  2482  0E9C  1903               	skipnz
  2483  0E9D  2E7C               	goto	l3417
  2484  0E9E  2E9F               	goto	l3423
  2485  0E9F                     l3423:	
  2486                           
  2487                           ;concentration.c: 511:     lcd_putch(current_char, gameboard);
  2488  0E9F  3005               	movlw	5
  2489  0EA0  00B0               	movwf	lcd_putch@port
  2490  0EA1  3000               	movlw	0
  2491  0EA2  00B1               	movwf	lcd_putch@port+1
  2492  0EA3  0868               	movf	_current_char,w
  2493  0EA4  120A  118A  25EE  120A  158A  	fcall	_lcd_putch
  2494                           
  2495                           ;concentration.c: 512:     lcd_goto(cursor_pos, gameboard);
  2496  0EA9  3005               	movlw	5
  2497  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0EAC  00A8               	movwf	lcd_goto@port
  2500  0EAD  3000               	movlw	0
  2501  0EAE  00A9               	movwf	lcd_goto@port+1
  2502  0EAF  0869               	movf	_cursor_pos,w
  2503  0EB0  120A  158A  21C0  120A  158A  	fcall	_lcd_goto
  2504                           
  2505                           ;concentration.c: 513:     get_current_char();
  2506  0EB5  120A  158A  2168  120A  158A  	fcall	_get_current_char
  2507  0EBA                     l3425:	
  2508                           
  2509                           ;concentration.c: 514:     if(cursor_solid == 1) {
  2510  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0EBC  0367               	decf	_cursor_solid,w
  2513  0EBD  1D03               	btfss	3,2
  2514  0EBE  2EC0               	goto	u2381
  2515  0EBF  2EC1               	goto	u2380
  2516  0EC0                     u2381:	
  2517  0EC0  2ED7               	goto	l373
  2518  0EC1                     u2380:	
  2519  0EC1                     l3427:	
  2520                           
  2521                           ;concentration.c: 515:         lcd_putch(0x20, gameboard);
  2522  0EC1  3005               	movlw	5
  2523  0EC2  00B0               	movwf	lcd_putch@port
  2524  0EC3  3000               	movlw	0
  2525  0EC4  00B1               	movwf	lcd_putch@port+1
  2526  0EC5  3020               	movlw	32
  2527  0EC6  120A  118A  25EE  120A  158A  	fcall	_lcd_putch
  2528                           
  2529                           ;concentration.c: 516:         lcd_goto(cursor_pos, gameboard);
  2530  0ECB  3005               	movlw	5
  2531  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0ECE  00A8               	movwf	lcd_goto@port
  2534  0ECF  3000               	movlw	0
  2535  0ED0  00A9               	movwf	lcd_goto@port+1
  2536  0ED1  0869               	movf	_cursor_pos,w
  2537  0ED2  120A  158A  21C0  120A  158A  	fcall	_lcd_goto
  2538  0ED7                     l373:	
  2539  0ED7  0008               	return
  2540  0ED8                     __end_of_update_cursor:	
  2541                           
  2542                           	psect	text3
  2543  0A2F                     __ptext3:	
  2544 ;; *************** function _toggle_cursor *****************
  2545 ;; Defined at:
  2546 ;;		line 520 in file "concentration.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0
  2563 ;;      Totals:         0       0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    4
  2567 ;; This function calls:
  2568 ;;		_lcd_goto
  2569 ;;		_lcd_putch
  2570 ;; This function is called by:
  2571 ;;		_update_gameboard_from_input
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _toggle_cursor
  2577  0A2F                     _toggle_cursor:	
  2578  0A2F                     l3385:	
  2579                           ;incstack = 0
  2580                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2581                           
  2582                           
  2583                           ;concentration.c: 521:     if(cursor_solid == 0) {
  2584  0A2F  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0A30  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0A31  0867               	movf	_cursor_solid,w
  2587  0A32  1D03               	btfss	3,2
  2588  0A33  2A35               	goto	u2371
  2589  0A34  2A36               	goto	u2370
  2590  0A35                     u2371:	
  2591  0A35  2A45               	goto	l3391
  2592  0A36                     u2370:	
  2593  0A36                     l3387:	
  2594                           
  2595                           ;concentration.c: 522:         lcd_putch(0x20, gameboard);
  2596  0A36  3005               	movlw	5
  2597  0A37  00B0               	movwf	lcd_putch@port
  2598  0A38  3000               	movlw	0
  2599  0A39  00B1               	movwf	lcd_putch@port+1
  2600  0A3A  3020               	movlw	32
  2601  0A3B  120A  118A  25EE  120A  158A  	fcall	_lcd_putch
  2602  0A40                     l3389:	
  2603                           
  2604                           ;concentration.c: 523:         cursor_solid = 1;
  2605  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0A42  01E7               	clrf	_cursor_solid
  2608  0A43  0AE7               	incf	_cursor_solid,f
  2609                           
  2610                           ;concentration.c: 524:     } else {
  2611  0A44  2A52               	goto	l3395
  2612  0A45                     l3391:	
  2613                           
  2614                           ;concentration.c: 525:         lcd_putch(current_char, gameboard);
  2615  0A45  3005               	movlw	5
  2616  0A46  00B0               	movwf	lcd_putch@port
  2617  0A47  3000               	movlw	0
  2618  0A48  00B1               	movwf	lcd_putch@port+1
  2619  0A49  0868               	movf	_current_char,w
  2620  0A4A  120A  118A  25EE  120A  158A  	fcall	_lcd_putch
  2621  0A4F                     l3393:	
  2622                           
  2623                           ;concentration.c: 526:         cursor_solid = 0;
  2624  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0A51  01E7               	clrf	_cursor_solid
  2627  0A52                     l3395:	
  2628                           
  2629                           ;concentration.c: 528:     lcd_goto(cursor_pos, gameboard);
  2630  0A52  3005               	movlw	5
  2631  0A53  00A8               	movwf	lcd_goto@port
  2632  0A54  3000               	movlw	0
  2633  0A55  00A9               	movwf	lcd_goto@port+1
  2634  0A56  0869               	movf	_cursor_pos,w
  2635  0A57  120A  158A  21C0  120A  158A  	fcall	_lcd_goto
  2636  0A5C                     l378:	
  2637  0A5C  0008               	return
  2638  0A5D                     __end_of_toggle_cursor:	
  2639                           
  2640                           	psect	text4
  2641  04DF                     __ptext4:	
  2642 ;; *************** function _check_for_match *****************
  2643 ;; Defined at:
  2644 ;;		line 374 in file "concentration.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  player          1    wreg     unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  player          1   24[BANK0 ] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         0       0       0       0       0
  2659 ;;      Locals:         0       1       0       0       0
  2660 ;;      Temps:          0       2       0       0       0
  2661 ;;      Totals:         0       3       0       0       0
  2662 ;;Total ram usage:        3 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    5
  2665 ;; This function calls:
  2666 ;;		_DelayMs
  2667 ;;		_display_gameboard
  2668 ;;		_display_scoreboard
  2669 ;;		_get_cursor_index
  2670 ;;		_play_tone
  2671 ;;		_turn_on_led
  2672 ;; This function is called by:
  2673 ;;		_update_gameboard_from_input
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function _check_for_match
  2679  04DF                     _check_for_match:	
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2683                           ;check_for_match@player stored from wreg
  2684  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2685  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2686  04E1  00B8               	movwf	check_for_match@player
  2687  04E2                     l3327:	
  2688                           
  2689                           ;concentration.c: 375:     if(selected_tile == 0xFF) {
  2690  04E2  0A62               	incf	_selected_tile,w
  2691  04E3  1D03               	btfss	3,2
  2692  04E4  2CE6               	goto	u2331
  2693  04E5  2CE7               	goto	u2330
  2694  04E6                     u2331:	
  2695  04E6  2CEC               	goto	l3331
  2696  04E7                     u2330:	
  2697  04E7                     l3329:	
  2698                           
  2699                           ;concentration.c: 376:         selected_tile = cursor_pos;
  2700  04E7  0869               	movf	_cursor_pos,w
  2701  04E8  00B6               	movwf	??_check_for_match
  2702  04E9  0836               	movf	??_check_for_match,w
  2703  04EA  00E2               	movwf	_selected_tile
  2704                           
  2705                           ;concentration.c: 377:     } else {
  2706  04EB  2DED               	goto	l317
  2707  04EC                     l3331:	
  2708                           
  2709                           ;concentration.c: 378:         if(board[get_cursor_index(selected_tile)] == board[get_cu
      +                          rsor_index(cursor_pos)]) {
  2710  04EC  0869               	movf	_cursor_pos,w
  2711  04ED  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  2712  04F2  3EC0               	addlw	(low (_board| 0))& (0+255)
  2713  04F3  0084               	movwf	4
  2714  04F4  1383               	bcf	3,7	;select IRP bank1
  2715  04F5  0800               	movf	0,w
  2716  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2717  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2718  04F8  00B6               	movwf	??_check_for_match
  2719  04F9  0862               	movf	_selected_tile,w
  2720  04FA  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  2721  04FF  3EC0               	addlw	(low (_board| 0))& (0+255)
  2722  0500  0084               	movwf	4
  2723  0501  1383               	bcf	3,7	;select IRP bank1
  2724  0502  0800               	movf	0,w
  2725  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0505  0636               	xorwf	??_check_for_match,w
  2728  0506  1D03               	skipz
  2729  0507  2D09               	goto	u2341
  2730  0508  2D0A               	goto	u2340
  2731  0509                     u2341:	
  2732  0509  2D78               	goto	l3359
  2733  050A                     u2340:	
  2734  050A                     l3333:	
  2735                           
  2736                           ;concentration.c: 379:             if(player == 0) {
  2737  050A  0838               	movf	check_for_match@player,w
  2738  050B  1D03               	btfss	3,2
  2739  050C  2D0E               	goto	u2351
  2740  050D  2D0F               	goto	u2350
  2741  050E                     u2351:	
  2742  050E  2D14               	goto	l3337
  2743  050F                     u2350:	
  2744  050F                     l3335:	
  2745                           
  2746                           ;concentration.c: 380:                 p1_score++;
  2747  050F  3001               	movlw	1
  2748  0510  00B6               	movwf	??_check_for_match
  2749  0511  0836               	movf	??_check_for_match,w
  2750  0512  07E4               	addwf	_p1_score,f
  2751                           
  2752                           ;concentration.c: 381:             } else {
  2753  0513  2D18               	goto	l3339
  2754  0514                     l3337:	
  2755                           
  2756                           ;concentration.c: 382:                 p2_score++;
  2757  0514  3001               	movlw	1
  2758  0515  00B6               	movwf	??_check_for_match
  2759  0516  0836               	movf	??_check_for_match,w
  2760  0517  07E3               	addwf	_p2_score,f
  2761  0518                     l3339:	
  2762                           
  2763                           ;concentration.c: 384:             turn_on_led(1);
  2764  0518  3001               	movlw	1
  2765  0519  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  2766  051E                     l3341:	
  2767                           
  2768                           ;concentration.c: 385:             play_tone(1689, 15);
  2769  051E  3099               	movlw	153
  2770  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0521  00A0               	movwf	play_tone@tone_period
  2773  0522  3006               	movlw	6
  2774  0523  00A1               	movwf	play_tone@tone_period+1
  2775  0524  300F               	movlw	15
  2776  0525  00B6               	movwf	??_check_for_match
  2777  0526  0836               	movf	??_check_for_match,w
  2778  0527  00A2               	movwf	play_tone@duration_8ms
  2779  0528  120A  118A  27DA  120A  118A  	fcall	_play_tone
  2780  052D                     l3343:	
  2781                           
  2782                           ;concentration.c: 386:             RC6 = 0;
  2783  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2784  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2785  052F  1307               	bcf	7,6	;volatile
  2786  0530                     l3345:	
  2787                           
  2788                           ;concentration.c: 387:             play_tone(1420, 5);
  2789  0530  308C               	movlw	140
  2790  0531  00A0               	movwf	play_tone@tone_period
  2791  0532  3005               	movlw	5
  2792  0533  00A1               	movwf	play_tone@tone_period+1
  2793  0534  3005               	movlw	5
  2794  0535  00B6               	movwf	??_check_for_match
  2795  0536  0836               	movf	??_check_for_match,w
  2796  0537  00A2               	movwf	play_tone@duration_8ms
  2797  0538  120A  118A  27DA  120A  118A  	fcall	_play_tone
  2798  053D                     l3347:	
  2799                           
  2800                           ;concentration.c: 388:             turn_on_led(1);
  2801  053D  3001               	movlw	1
  2802  053E  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  2803  0543                     l3349:	
  2804                           
  2805                           ;concentration.c: 389:             play_tone(1689, 15);
  2806  0543  3099               	movlw	153
  2807  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0546  00A0               	movwf	play_tone@tone_period
  2810  0547  3006               	movlw	6
  2811  0548  00A1               	movwf	play_tone@tone_period+1
  2812  0549  300F               	movlw	15
  2813  054A  00B6               	movwf	??_check_for_match
  2814  054B  0836               	movf	??_check_for_match,w
  2815  054C  00A2               	movwf	play_tone@duration_8ms
  2816  054D  120A  118A  27DA  120A  118A  	fcall	_play_tone
  2817  0552                     l3351:	
  2818                           
  2819                           ;concentration.c: 390:             RC6 = 0;
  2820  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0554  1307               	bcf	7,6	;volatile
  2823  0555                     l3353:	
  2824                           
  2825                           ;concentration.c: 391:             play_tone(1420, 5);
  2826  0555  308C               	movlw	140
  2827  0556  00A0               	movwf	play_tone@tone_period
  2828  0557  3005               	movlw	5
  2829  0558  00A1               	movwf	play_tone@tone_period+1
  2830  0559  3005               	movlw	5
  2831  055A  00B6               	movwf	??_check_for_match
  2832  055B  0836               	movf	??_check_for_match,w
  2833  055C  00A2               	movwf	play_tone@duration_8ms
  2834  055D  120A  118A  27DA  120A  118A  	fcall	_play_tone
  2835                           
  2836                           ;concentration.c: 393:             if((p1_score+p2_score)==2) {
  2837  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0564  0864               	movf	_p1_score,w
  2840  0565  0763               	addwf	_p2_score,w
  2841  0566  00B6               	movwf	??_check_for_match
  2842  0567  01B7               	clrf	??_check_for_match+1
  2843  0568  0DB7               	rlf	??_check_for_match+1,f
  2844  0569  3002               	movlw	2
  2845  056A  0636               	xorwf	??_check_for_match,w
  2846  056B  0437               	iorwf	??_check_for_match+1,w
  2847  056C  1D03               	btfss	3,2
  2848  056D  2D6F               	goto	u2361
  2849  056E  2D70               	goto	u2360
  2850  056F                     u2361:	
  2851  056F  2D72               	goto	l3357
  2852  0570                     u2360:	
  2853  0570                     l3355:	
  2854                           
  2855                           ;concentration.c: 394:                 game_over = 1;
  2856  0570  01DF               	clrf	_game_over
  2857  0571  0ADF               	incf	_game_over,f
  2858  0572                     l3357:	
  2859                           
  2860                           ;concentration.c: 396:             display_scoreboard();
  2861  0572  120A  118A  2706  120A  118A  	fcall	_display_scoreboard
  2862                           
  2863                           ;concentration.c: 398:         } else {
  2864  0577  2DD8               	goto	l3377
  2865  0578                     l3359:	
  2866                           
  2867                           ;concentration.c: 399:             display_gameboard();
  2868  0578  120A  158A  2306  120A  118A  	fcall	_display_gameboard
  2869                           
  2870                           ;concentration.c: 400:             turn_on_led(0);
  2871  057D  3000               	movlw	0
  2872  057E  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  2873  0583                     l3361:	
  2874                           
  2875                           ;concentration.c: 401:             play_tone(36075, 30);
  2876  0583  30EB               	movlw	235
  2877  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0586  00A0               	movwf	play_tone@tone_period
  2880  0587  308C               	movlw	140
  2881  0588  00A1               	movwf	play_tone@tone_period+1
  2882  0589  301E               	movlw	30
  2883  058A  00B6               	movwf	??_check_for_match
  2884  058B  0836               	movf	??_check_for_match,w
  2885  058C  00A2               	movwf	play_tone@duration_8ms
  2886  058D  120A  118A  27DA  120A  118A  	fcall	_play_tone
  2887  0592                     l3363:	
  2888                           
  2889                           ;concentration.c: 402:             RC5 = 0;
  2890  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0594  1287               	bcf	7,5	;volatile
  2893  0595                     l3365:	
  2894                           
  2895                           ;concentration.c: 403:             DelayMs(100);
  2896  0595  3064               	movlw	100
  2897  0596  00A0               	movwf	DelayMs@millis
  2898  0597  3000               	movlw	0
  2899  0598  00A1               	movwf	DelayMs@millis+1
  2900  0599  120A  158A  218D  120A  118A  	fcall	_DelayMs
  2901                           
  2902                           ;concentration.c: 404:             turn_on_led(0);
  2903  059E  3000               	movlw	0
  2904  059F  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  2905  05A4                     l3367:	
  2906                           
  2907                           ;concentration.c: 405:             play_tone(36075, 30);
  2908  05A4  30EB               	movlw	235
  2909  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2910  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2911  05A7  00A0               	movwf	play_tone@tone_period
  2912  05A8  308C               	movlw	140
  2913  05A9  00A1               	movwf	play_tone@tone_period+1
  2914  05AA  301E               	movlw	30
  2915  05AB  00B6               	movwf	??_check_for_match
  2916  05AC  0836               	movf	??_check_for_match,w
  2917  05AD  00A2               	movwf	play_tone@duration_8ms
  2918  05AE  120A  118A  27DA  120A  118A  	fcall	_play_tone
  2919  05B3                     l3369:	
  2920                           
  2921                           ;concentration.c: 406:             RC5 = 0;
  2922  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2923  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2924  05B5  1287               	bcf	7,5	;volatile
  2925  05B6                     l3371:	
  2926                           
  2927                           ;concentration.c: 407:             visible[get_cursor_index(selected_tile)] = 0xFF;
  2928  05B6  30FF               	movlw	255
  2929  05B7  00B6               	movwf	??_check_for_match
  2930  05B8  0862               	movf	_selected_tile,w
  2931  05B9  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  2932  05BE  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2933  05BF  0084               	movwf	4
  2934  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2935  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2936  05C2  0836               	movf	??_check_for_match,w
  2937  05C3  1383               	bcf	3,7	;select IRP bank1
  2938  05C4  0080               	movwf	0
  2939  05C5                     l3373:	
  2940                           
  2941                           ;concentration.c: 408:             visible[get_cursor_index(cursor_pos)] = 0xFF;
  2942  05C5  30FF               	movlw	255
  2943  05C6  00B6               	movwf	??_check_for_match
  2944  05C7  0869               	movf	_cursor_pos,w
  2945  05C8  120A  158A  214E  120A  118A  	fcall	_get_cursor_index
  2946  05CD  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2947  05CE  0084               	movwf	4
  2948  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2949  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2950  05D1  0836               	movf	??_check_for_match,w
  2951  05D2  1383               	bcf	3,7	;select IRP bank1
  2952  05D3  0080               	movwf	0
  2953  05D4                     l3375:	
  2954                           
  2955                           ;concentration.c: 409:             current_char = 0xFF;
  2956  05D4  30FF               	movlw	255
  2957  05D5  00B6               	movwf	??_check_for_match
  2958  05D6  0836               	movf	??_check_for_match,w
  2959  05D7  00E8               	movwf	_current_char
  2960  05D8                     l3377:	
  2961                           
  2962                           ;concentration.c: 411:         selected_tile = 0xFF;
  2963  05D8  30FF               	movlw	255
  2964  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2965  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2966  05DB  00B6               	movwf	??_check_for_match
  2967  05DC  0836               	movf	??_check_for_match,w
  2968  05DD  00E2               	movwf	_selected_tile
  2969  05DE                     l3379:	
  2970                           
  2971                           ;concentration.c: 412:         current_player ^= 0x01;
  2972  05DE  3001               	movlw	1
  2973  05DF  00B6               	movwf	??_check_for_match
  2974  05E0  0836               	movf	??_check_for_match,w
  2975  05E1  06E0               	xorwf	_current_player,f
  2976  05E2                     l3381:	
  2977                           
  2978                           ;concentration.c: 413:         joystick_pressed = 1;
  2979  05E2  01E1               	clrf	_joystick_pressed
  2980  05E3  0AE1               	incf	_joystick_pressed,f
  2981  05E4                     l3383:	
  2982                           
  2983                           ;concentration.c: 414:         DelayMs(100);
  2984  05E4  3064               	movlw	100
  2985  05E5  00A0               	movwf	DelayMs@millis
  2986  05E6  3000               	movlw	0
  2987  05E7  00A1               	movwf	DelayMs@millis+1
  2988  05E8  120A  158A  218D  120A  118A  	fcall	_DelayMs
  2989  05ED                     l317:	
  2990  05ED  0008               	return
  2991  05EE                     __end_of_check_for_match:	
  2992                           
  2993                           	psect	text5
  2994  0A05                     __ptext5:	
  2995 ;; *************** function _time_init *****************
  2996 ;; Defined at:
  2997 ;;		line 548 in file "concentration.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          0       1       0       0       0
  3014 ;;      Totals:         0       1       0       0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _time_init
  3027  0A05                     _time_init:	
  3028  0A05                     l3485:	
  3029                           ;incstack = 0
  3030                           ; Regs used in _time_init: [wreg+status,2+status,0]
  3031                           
  3032                           
  3033                           ;concentration.c: 549:     event_delay_count = 255;
  3034  0A05  30FF               	movlw	255
  3035  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0A08  00A0               	movwf	??_time_init
  3038  0A09  0820               	movf	??_time_init,w
  3039  0A0A  00FA               	movwf	_event_delay_count
  3040  0A0B                     l3487:	
  3041                           
  3042                           ;concentration.c: 550:     event_enabled = 1;
  3043  0A0B  01E5               	clrf	_event_enabled
  3044  0A0C  0AE5               	incf	_event_enabled,f
  3045                           
  3046                           ;concentration.c: 551:     PR2 = 250;
  3047  0A0D  30FA               	movlw	250
  3048  0A0E  1683               	bsf	3,5	;RP0=1, select bank1
  3049  0A0F  1303               	bcf	3,6	;RP1=0, select bank1
  3050  0A10  0092               	movwf	18	;volatile
  3051  0A11                     l3489:	
  3052                           
  3053                           ;concentration.c: 552:     TMR2IF = 0;
  3054  0A11  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0A12  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0A13  108C               	bcf	12,1	;volatile
  3057  0A14                     l3491:	
  3058                           
  3059                           ;concentration.c: 553:     TMR2IE = 1;
  3060  0A14  1683               	bsf	3,5	;RP0=1, select bank1
  3061  0A15  1303               	bcf	3,6	;RP1=0, select bank1
  3062  0A16  148C               	bsf	12,1	;volatile
  3063                           
  3064                           ;concentration.c: 554:     T2CON = 0x56;
  3065  0A17  3056               	movlw	86
  3066  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0A19  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0A1A  0092               	movwf	18	;volatile
  3069  0A1B                     l3493:	
  3070                           
  3071                           ;concentration.c: 556:     CCP1M3 = 1;
  3072  0A1B  1597               	bsf	23,3	;volatile
  3073  0A1C                     l3495:	
  3074                           
  3075                           ;concentration.c: 557:     CCP1M2 = 0;
  3076  0A1C  1117               	bcf	23,2	;volatile
  3077  0A1D                     l3497:	
  3078                           
  3079                           ;concentration.c: 558:     CCP1M1 = 1;
  3080  0A1D  1497               	bsf	23,1	;volatile
  3081  0A1E                     l3499:	
  3082                           
  3083                           ;concentration.c: 559:     CCP1M0 = 0;
  3084  0A1E  1017               	bcf	23,0	;volatile
  3085  0A1F                     l3501:	
  3086                           
  3087                           ;concentration.c: 560:     TMR1CS = 0;
  3088  0A1F  1090               	bcf	16,1	;volatile
  3089  0A20                     l3503:	
  3090                           
  3091                           ;concentration.c: 561:     T1CKPS0 = 0;
  3092  0A20  1210               	bcf	16,4	;volatile
  3093  0A21                     l3505:	
  3094                           
  3095                           ;concentration.c: 562:     T1CKPS1 = 0;
  3096  0A21  1290               	bcf	16,5	;volatile
  3097  0A22                     l3507:	
  3098                           
  3099                           ;concentration.c: 563:     TMR1GE = 0;
  3100  0A22  1310               	bcf	16,6	;volatile
  3101  0A23                     l3509:	
  3102                           
  3103                           ;concentration.c: 564:     TMR1ON = 1;
  3104  0A23  1410               	bsf	16,0	;volatile
  3105  0A24                     l3511:	
  3106                           
  3107                           ;concentration.c: 566:     CCP2M3 = 1;
  3108  0A24  159D               	bsf	29,3	;volatile
  3109  0A25                     l3513:	
  3110                           
  3111                           ;concentration.c: 567:     CCP2M2 = 0;
  3112  0A25  111D               	bcf	29,2	;volatile
  3113  0A26                     l3515:	
  3114                           
  3115                           ;concentration.c: 568:     CCP2M1 = 0;
  3116  0A26  109D               	bcf	29,1	;volatile
  3117  0A27                     l3517:	
  3118                           
  3119                           ;concentration.c: 569:     CCP2M0 = 0;
  3120  0A27  101D               	bcf	29,0	;volatile
  3121  0A28                     l3519:	
  3122                           
  3123                           ;concentration.c: 570:     TRISC &= 0xFD;
  3124  0A28  30FD               	movlw	253
  3125  0A29  00A0               	movwf	??_time_init
  3126  0A2A  0820               	movf	??_time_init,w
  3127  0A2B  1683               	bsf	3,5	;RP0=1, select bank1
  3128  0A2C  1303               	bcf	3,6	;RP1=0, select bank1
  3129  0A2D  0587               	andwf	7,f	;volatile
  3130  0A2E                     l390:	
  3131  0A2E  0008               	return
  3132  0A2F                     __end_of_time_init:	
  3133                           
  3134                           	psect	text6
  3135  0DB2                     __ptext6:	
  3136 ;; *************** function _startup *****************
  3137 ;; Defined at:
  3138 ;;		line 274 in file "concentration.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0
  3155 ;;      Totals:         0       0       0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    5
  3159 ;; This function calls:
  3160 ;;		_DelayMs
  3161 ;;		_display_gameboard
  3162 ;;		_display_scoreboard
  3163 ;;		_lcd_clear
  3164 ;;		_lcd_goto
  3165 ;;		_lcd_puts
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _startup
  3173  0DB2                     _startup:	
  3174  0DB2                     l3549:	
  3175                           ;incstack = 0
  3176                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3177                           
  3178                           
  3179                           ;concentration.c: 275:     game_over = 0;
  3180  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0DB4  01DF               	clrf	_game_over
  3183  0DB5                     l3551:	
  3184                           
  3185                           ;concentration.c: 276:     lcd_clear(gameboard);
  3186  0DB5  3005               	movlw	5
  3187  0DB6  00A8               	movwf	lcd_clear@port
  3188  0DB7  3000               	movlw	0
  3189  0DB8  00A9               	movwf	lcd_clear@port+1
  3190  0DB9  120A  158A  21A6  120A  158A  	fcall	_lcd_clear
  3191  0DBE                     l3553:	
  3192                           
  3193                           ;concentration.c: 277:     lcd_clear(scoreboard);
  3194  0DBE  3008               	movlw	8
  3195  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0DC1  00A8               	movwf	lcd_clear@port
  3198  0DC2  3000               	movlw	0
  3199  0DC3  00A9               	movwf	lcd_clear@port+1
  3200  0DC4  120A  158A  21A6  120A  158A  	fcall	_lcd_clear
  3201  0DC9                     l3555:	
  3202                           
  3203                           ;concentration.c: 278:     lcd_puts(" Concentration!", scoreboard);
  3204  0DC9  3063               	movlw	low (STR_10| (0+32768))
  3205  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0DCC  00A8               	movwf	lcd_puts@string
  3208  0DCD  3086               	movlw	high (STR_10| (0+32768))
  3209  0DCE  00A9               	movwf	lcd_puts@string+1
  3210  0DCF  3008               	movlw	8
  3211  0DD0  00AA               	movwf	lcd_puts@port
  3212  0DD1  3000               	movlw	0
  3213  0DD2  00AB               	movwf	lcd_puts@port+1
  3214  0DD3  120A  158A  225D  120A  158A  	fcall	_lcd_puts
  3215  0DD8                     l3557:	
  3216                           
  3217                           ;concentration.c: 279:     lcd_puts("Press the button", gameboard);
  3218  0DD8  3052               	movlw	low (STR_11| (0+32768))
  3219  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0DDB  00A8               	movwf	lcd_puts@string
  3222  0DDC  3086               	movlw	high (STR_11| (0+32768))
  3223  0DDD  00A9               	movwf	lcd_puts@string+1
  3224  0DDE  3005               	movlw	5
  3225  0DDF  00AA               	movwf	lcd_puts@port
  3226  0DE0  3000               	movlw	0
  3227  0DE1  00AB               	movwf	lcd_puts@port+1
  3228  0DE2  120A  158A  225D  120A  158A  	fcall	_lcd_puts
  3229  0DE7                     l3559:	
  3230                           
  3231                           ;concentration.c: 280:     lcd_goto(0x40, gameboard);
  3232  0DE7  3005               	movlw	5
  3233  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0DEA  00A8               	movwf	lcd_goto@port
  3236  0DEB  3000               	movlw	0
  3237  0DEC  00A9               	movwf	lcd_goto@port+1
  3238  0DED  3040               	movlw	64
  3239  0DEE  120A  158A  21C0  120A  158A  	fcall	_lcd_goto
  3240  0DF3                     l3561:	
  3241                           
  3242                           ;concentration.c: 281:     lcd_puts("    to start", gameboard);
  3243  0DF3  30D5               	movlw	low (STR_12| (0+32768))
  3244  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3246  0DF6  00A8               	movwf	lcd_puts@string
  3247  0DF7  3086               	movlw	high (STR_12| (0+32768))
  3248  0DF8  00A9               	movwf	lcd_puts@string+1
  3249  0DF9  3005               	movlw	5
  3250  0DFA  00AA               	movwf	lcd_puts@port
  3251  0DFB  3000               	movlw	0
  3252  0DFC  00AB               	movwf	lcd_puts@port+1
  3253  0DFD  120A  158A  225D  120A  158A  	fcall	_lcd_puts
  3254  0E02                     l255:	
  3255                           ;concentration.c: 282:     while(RB5);
  3256                           
  3257  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0E04  1A86               	btfsc	6,5	;volatile
  3260  0E05  2E07               	goto	u2401
  3261  0E06  2E08               	goto	u2400
  3262  0E07                     u2401:	
  3263  0E07  2E02               	goto	l255
  3264  0E08                     u2400:	
  3265  0E08                     l3563:	
  3266                           
  3267                           ;concentration.c: 283:     DelayMs(8);
  3268  0E08  3008               	movlw	8
  3269  0E09  00A0               	movwf	DelayMs@millis
  3270  0E0A  3000               	movlw	0
  3271  0E0B  00A1               	movwf	DelayMs@millis+1
  3272  0E0C  120A  158A  218D  120A  158A  	fcall	_DelayMs
  3273  0E11                     l258:	
  3274                           ;concentration.c: 284:     while(!RB5);
  3275                           
  3276  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0E13  1E86               	btfss	6,5	;volatile
  3279  0E14  2E16               	goto	u2411
  3280  0E15  2E17               	goto	u2410
  3281  0E16                     u2411:	
  3282  0E16  2E11               	goto	l258
  3283  0E17                     u2410:	
  3284  0E17                     l3565:	
  3285                           
  3286                           ;concentration.c: 285:     DelayMs(8);
  3287  0E17  3008               	movlw	8
  3288  0E18  00A0               	movwf	DelayMs@millis
  3289  0E19  3000               	movlw	0
  3290  0E1A  00A1               	movwf	DelayMs@millis+1
  3291  0E1B  120A  158A  218D  120A  158A  	fcall	_DelayMs
  3292  0E20                     l3567:	
  3293                           
  3294                           ;concentration.c: 286:     lcd_clear(gameboard);
  3295  0E20  3005               	movlw	5
  3296  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0E23  00A8               	movwf	lcd_clear@port
  3299  0E24  3000               	movlw	0
  3300  0E25  00A9               	movwf	lcd_clear@port+1
  3301  0E26  120A  158A  21A6  120A  158A  	fcall	_lcd_clear
  3302  0E2B                     l3569:	
  3303                           
  3304                           ;concentration.c: 287:     lcd_clear(scoreboard);
  3305  0E2B  3008               	movlw	8
  3306  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0E2E  00A8               	movwf	lcd_clear@port
  3309  0E2F  3000               	movlw	0
  3310  0E30  00A9               	movwf	lcd_clear@port+1
  3311  0E31  120A  158A  21A6  120A  158A  	fcall	_lcd_clear
  3312  0E36                     l3571:	
  3313                           
  3314                           ;concentration.c: 288:     p1_score = 0;
  3315  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  3317  0E38  01E4               	clrf	_p1_score
  3318  0E39                     l3573:	
  3319                           
  3320                           ;concentration.c: 289:     p2_score = 0;
  3321  0E39  01E3               	clrf	_p2_score
  3322  0E3A                     l3575:	
  3323                           
  3324                           ;concentration.c: 290:     display_scoreboard();
  3325  0E3A  120A  118A  2706  120A  158A  	fcall	_display_scoreboard
  3326  0E3F                     l3577:	
  3327                           
  3328                           ;concentration.c: 291:     display_gameboard();
  3329  0E3F  120A  158A  2306  120A  158A  	fcall	_display_gameboard
  3330  0E44                     l261:	
  3331  0E44  0008               	return
  3332  0E45                     __end_of_startup:	
  3333                           
  3334                           	psect	text7
  3335  0706                     __ptext7:	
  3336 ;; *************** function _display_scoreboard *****************
  3337 ;; Defined at:
  3338 ;;		line 294 in file "concentration.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       2       0       0       0
  3355 ;;      Totals:         0       2       0       0       0
  3356 ;;Total ram usage:        2 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    4
  3359 ;; This function calls:
  3360 ;;		___awdiv
  3361 ;;		___awmod
  3362 ;;		_lcd_goto
  3363 ;;		_lcd_putch
  3364 ;;		_lcd_puts
  3365 ;; This function is called by:
  3366 ;;		_startup
  3367 ;;		_check_for_match
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _display_scoreboard
  3373  0706                     _display_scoreboard:	
  3374  0706                     l3161:	
  3375                           ;incstack = 0
  3376                           ; Regs used in _display_scoreboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3377                           
  3378                           
  3379                           ;concentration.c: 295:     lcd_puts("     Score:", scoreboard);
  3380  0706  30E2               	movlw	low (STR_13| (0+32768))
  3381  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0708  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0709  00A8               	movwf	lcd_puts@string
  3384  070A  3086               	movlw	high (STR_13| (0+32768))
  3385  070B  00A9               	movwf	lcd_puts@string+1
  3386  070C  3008               	movlw	8
  3387  070D  00AA               	movwf	lcd_puts@port
  3388  070E  3000               	movlw	0
  3389  070F  00AB               	movwf	lcd_puts@port+1
  3390  0710  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  3391  0715                     l3163:	
  3392                           
  3393                           ;concentration.c: 296:     lcd_goto(0x40, scoreboard);
  3394  0715  3008               	movlw	8
  3395  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3397  0718  00A8               	movwf	lcd_goto@port
  3398  0719  3000               	movlw	0
  3399  071A  00A9               	movwf	lcd_goto@port+1
  3400  071B  3040               	movlw	64
  3401  071C  120A  158A  21C0  120A  118A  	fcall	_lcd_goto
  3402  0721                     l3165:	
  3403                           
  3404                           ;concentration.c: 297:     lcd_puts(" P1: ", scoreboard);
  3405  0721  3000               	movlw	low (STR_14| (0+32768))
  3406  0722  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0723  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0724  00A8               	movwf	lcd_puts@string
  3409  0725  3087               	movlw	high (STR_14| (0+32768))
  3410  0726  00A9               	movwf	lcd_puts@string+1
  3411  0727  3008               	movlw	8
  3412  0728  00AA               	movwf	lcd_puts@port
  3413  0729  3000               	movlw	0
  3414  072A  00AB               	movwf	lcd_puts@port+1
  3415  072B  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  3416                           
  3417                           ;concentration.c: 298:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  3418  0730  3008               	movlw	8
  3419  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0733  00B0               	movwf	lcd_putch@port
  3422  0734  3000               	movlw	0
  3423  0735  00B1               	movwf	lcd_putch@port+1
  3424  0736  300A               	movlw	10
  3425  0737  00A7               	movwf	___awdiv@divisor
  3426  0738  3000               	movlw	0
  3427  0739  00A8               	movwf	___awdiv@divisor+1
  3428  073A  0864               	movf	_p1_score,w
  3429  073B  00B4               	movwf	??_display_scoreboard
  3430  073C  01B5               	clrf	??_display_scoreboard+1
  3431  073D  0834               	movf	??_display_scoreboard,w
  3432  073E  00A2               	movwf	___awmod@dividend
  3433  073F  0835               	movf	??_display_scoreboard+1,w
  3434  0740  00A3               	movwf	___awmod@dividend+1
  3435  0741  3064               	movlw	100
  3436  0742  00A0               	movwf	___awmod@divisor
  3437  0743  3000               	movlw	0
  3438  0744  00A1               	movwf	___awmod@divisor+1
  3439  0745  120A  158A  248F  120A  118A  	fcall	___awmod
  3440  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3441  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3442  074C  0821               	movf	?___awmod+1,w
  3443  074D  00AA               	movwf	___awdiv@dividend+1
  3444  074E  0820               	movf	?___awmod,w
  3445  074F  00A9               	movwf	___awdiv@dividend
  3446  0750  120A  158A  2549  120A  118A  	fcall	___awdiv
  3447  0755  1283               	bcf	3,5	;RP0=0, select bank0
  3448  0756  1303               	bcf	3,6	;RP1=0, select bank0
  3449  0757  0827               	movf	?___awdiv,w
  3450  0758  3E30               	addlw	48
  3451  0759  120A  118A  25EE  120A  118A  	fcall	_lcd_putch
  3452                           
  3453                           ;concentration.c: 299:     lcd_putch((p1_score%10)+0x30, scoreboard);
  3454  075E  3008               	movlw	8
  3455  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0761  00B0               	movwf	lcd_putch@port
  3458  0762  3000               	movlw	0
  3459  0763  00B1               	movwf	lcd_putch@port+1
  3460  0764  300A               	movlw	10
  3461  0765  00A0               	movwf	___awmod@divisor
  3462  0766  3000               	movlw	0
  3463  0767  00A1               	movwf	___awmod@divisor+1
  3464  0768  0864               	movf	_p1_score,w
  3465  0769  00B4               	movwf	??_display_scoreboard
  3466  076A  01B5               	clrf	??_display_scoreboard+1
  3467  076B  0834               	movf	??_display_scoreboard,w
  3468  076C  00A2               	movwf	___awmod@dividend
  3469  076D  0835               	movf	??_display_scoreboard+1,w
  3470  076E  00A3               	movwf	___awmod@dividend+1
  3471  076F  120A  158A  248F  120A  118A  	fcall	___awmod
  3472  0774  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0775  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0776  0820               	movf	?___awmod,w
  3475  0777  3E30               	addlw	48
  3476  0778  120A  118A  25EE  120A  118A  	fcall	_lcd_putch
  3477  077D                     l3167:	
  3478                           
  3479                           ;concentration.c: 300:     lcd_puts("  P2: ", scoreboard);
  3480  077D  30F9               	movlw	low (STR_15| (0+32768))
  3481  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3482  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0780  00A8               	movwf	lcd_puts@string
  3484  0781  3086               	movlw	high (STR_15| (0+32768))
  3485  0782  00A9               	movwf	lcd_puts@string+1
  3486  0783  3008               	movlw	8
  3487  0784  00AA               	movwf	lcd_puts@port
  3488  0785  3000               	movlw	0
  3489  0786  00AB               	movwf	lcd_puts@port+1
  3490  0787  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  3491  078C                     l3169:	
  3492                           
  3493                           ;concentration.c: 301:     lcd_putch(((p2_score%100)/10)+0x30, scoreboard);
  3494  078C  3008               	movlw	8
  3495  078D  1283               	bcf	3,5	;RP0=0, select bank0
  3496  078E  1303               	bcf	3,6	;RP1=0, select bank0
  3497  078F  00B0               	movwf	lcd_putch@port
  3498  0790  3000               	movlw	0
  3499  0791  00B1               	movwf	lcd_putch@port+1
  3500  0792  300A               	movlw	10
  3501  0793  00A7               	movwf	___awdiv@divisor
  3502  0794  3000               	movlw	0
  3503  0795  00A8               	movwf	___awdiv@divisor+1
  3504  0796  0863               	movf	_p2_score,w
  3505  0797  00B4               	movwf	??_display_scoreboard
  3506  0798  01B5               	clrf	??_display_scoreboard+1
  3507  0799  0834               	movf	??_display_scoreboard,w
  3508  079A  00A2               	movwf	___awmod@dividend
  3509  079B  0835               	movf	??_display_scoreboard+1,w
  3510  079C  00A3               	movwf	___awmod@dividend+1
  3511  079D  3064               	movlw	100
  3512  079E  00A0               	movwf	___awmod@divisor
  3513  079F  3000               	movlw	0
  3514  07A0  00A1               	movwf	___awmod@divisor+1
  3515  07A1  120A  158A  248F  120A  118A  	fcall	___awmod
  3516  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  3517  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  3518  07A8  0821               	movf	?___awmod+1,w
  3519  07A9  00AA               	movwf	___awdiv@dividend+1
  3520  07AA  0820               	movf	?___awmod,w
  3521  07AB  00A9               	movwf	___awdiv@dividend
  3522  07AC  120A  158A  2549  120A  118A  	fcall	___awdiv
  3523  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3524  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3525  07B3  0827               	movf	?___awdiv,w
  3526  07B4  3E30               	addlw	48
  3527  07B5  120A  118A  25EE  120A  118A  	fcall	_lcd_putch
  3528  07BA                     l3171:	
  3529                           
  3530                           ;concentration.c: 302:     lcd_putch((p2_score%10)+0x30, scoreboard);
  3531  07BA  3008               	movlw	8
  3532  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3533  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3534  07BD  00B0               	movwf	lcd_putch@port
  3535  07BE  3000               	movlw	0
  3536  07BF  00B1               	movwf	lcd_putch@port+1
  3537  07C0  300A               	movlw	10
  3538  07C1  00A0               	movwf	___awmod@divisor
  3539  07C2  3000               	movlw	0
  3540  07C3  00A1               	movwf	___awmod@divisor+1
  3541  07C4  0863               	movf	_p2_score,w
  3542  07C5  00B4               	movwf	??_display_scoreboard
  3543  07C6  01B5               	clrf	??_display_scoreboard+1
  3544  07C7  0834               	movf	??_display_scoreboard,w
  3545  07C8  00A2               	movwf	___awmod@dividend
  3546  07C9  0835               	movf	??_display_scoreboard+1,w
  3547  07CA  00A3               	movwf	___awmod@dividend+1
  3548  07CB  120A  158A  248F  120A  118A  	fcall	___awmod
  3549  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  3550  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  3551  07D2  0820               	movf	?___awmod,w
  3552  07D3  3E30               	addlw	48
  3553  07D4  120A  118A  25EE  120A  118A  	fcall	_lcd_putch
  3554  07D9                     l264:	
  3555  07D9  0008               	return
  3556  07DA                     __end_of_display_scoreboard:	
  3557                           
  3558                           	psect	text8
  3559  0B06                     __ptext8:	
  3560 ;; *************** function _display_gameboard *****************
  3561 ;; Defined at:
  3562 ;;		line 305 in file "concentration.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  i               1   21[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3576 ;;      Params:         0       0       0       0       0
  3577 ;;      Locals:         0       1       0       0       0
  3578 ;;      Temps:          0       1       0       0       0
  3579 ;;      Totals:         0       2       0       0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    4
  3583 ;; This function calls:
  3584 ;;		_lcd_clear
  3585 ;;		_lcd_goto
  3586 ;;		_lcd_putch
  3587 ;; This function is called by:
  3588 ;;		_startup
  3589 ;;		_check_for_match
  3590 ;;		_update_gameboard_from_input
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _display_gameboard
  3596  0B06                     _display_gameboard:	
  3597  0B06                     l3173:	
  3598                           ;incstack = 0
  3599                           ; Regs used in _display_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3600                           
  3601                           
  3602                           ;concentration.c: 306:     lcd_clear(gameboard);
  3603  0B06  3005               	movlw	5
  3604  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0B09  00A8               	movwf	lcd_clear@port
  3607  0B0A  3000               	movlw	0
  3608  0B0B  00A9               	movwf	lcd_clear@port+1
  3609  0B0C  120A  158A  21A6  120A  158A  	fcall	_lcd_clear
  3610  0B11                     l3175:	
  3611                           
  3612                           ;concentration.c: 307:     char i;;concentration.c: 308:     for(i=0;i<32;i++) {
  3613  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0B13  01B5               	clrf	display_gameboard@i
  3616  0B14                     l3181:	
  3617                           
  3618                           ;concentration.c: 309:         if(i == 16) {
  3619  0B14  3010               	movlw	16
  3620  0B15  0635               	xorwf	display_gameboard@i,w
  3621  0B16  1D03               	btfss	3,2
  3622  0B17  2B19               	goto	u2171
  3623  0B18  2B1A               	goto	u2170
  3624  0B19                     u2171:	
  3625  0B19  2B24               	goto	l269
  3626  0B1A                     u2170:	
  3627  0B1A                     l3183:	
  3628                           
  3629                           ;concentration.c: 310:             lcd_goto(0x40, gameboard);
  3630  0B1A  3005               	movlw	5
  3631  0B1B  00A8               	movwf	lcd_goto@port
  3632  0B1C  3000               	movlw	0
  3633  0B1D  00A9               	movwf	lcd_goto@port+1
  3634  0B1E  3040               	movlw	64
  3635  0B1F  120A  158A  21C0  120A  158A  	fcall	_lcd_goto
  3636  0B24                     l269:	
  3637                           ;concentration.c: 311:         }
  3638                           
  3639                           
  3640                           ;concentration.c: 312:         lcd_putch(visible[i], gameboard);
  3641  0B24  3005               	movlw	5
  3642  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0B26  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0B27  00B0               	movwf	lcd_putch@port
  3645  0B28  3000               	movlw	0
  3646  0B29  00B1               	movwf	lcd_putch@port+1
  3647  0B2A  0835               	movf	display_gameboard@i,w
  3648  0B2B  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3649  0B2C  0084               	movwf	4
  3650  0B2D  1383               	bcf	3,7	;select IRP bank1
  3651  0B2E  0800               	movf	0,w
  3652  0B2F  120A  118A  25EE  120A  158A  	fcall	_lcd_putch
  3653  0B34                     l3185:	
  3654                           
  3655                           ;concentration.c: 313:     }
  3656  0B34  3001               	movlw	1
  3657  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0B37  00B4               	movwf	??_display_gameboard
  3660  0B38  0834               	movf	??_display_gameboard,w
  3661  0B39  07B5               	addwf	display_gameboard@i,f
  3662  0B3A                     l3187:	
  3663  0B3A  3020               	movlw	32
  3664  0B3B  0235               	subwf	display_gameboard@i,w
  3665  0B3C  1C03               	skipc
  3666  0B3D  2B3F               	goto	u2181
  3667  0B3E  2B40               	goto	u2180
  3668  0B3F                     u2181:	
  3669  0B3F  2B14               	goto	l3181
  3670  0B40                     u2180:	
  3671  0B40                     l3189:	
  3672                           
  3673                           ;concentration.c: 314:     lcd_goto(cursor_pos, gameboard);
  3674  0B40  3005               	movlw	5
  3675  0B41  00A8               	movwf	lcd_goto@port
  3676  0B42  3000               	movlw	0
  3677  0B43  00A9               	movwf	lcd_goto@port+1
  3678  0B44  0869               	movf	_cursor_pos,w
  3679  0B45  120A  158A  21C0  120A  158A  	fcall	_lcd_goto
  3680  0B4A                     l270:	
  3681  0B4A  0008               	return
  3682  0B4B                     __end_of_display_gameboard:	
  3683                           
  3684                           	psect	text9
  3685  05EE                     __ptext9:	
  3686 ;; *************** function _lcd_putch *****************
  3687 ;; Defined at:
  3688 ;;		line 136 in file "lcd4bits.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  character       1    wreg     unsigned char 
  3691 ;;  port            2   16[BANK0 ] PTR unsigned char 
  3692 ;;		 -> PORTD(1), PORTA(1), 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  character       1   19[BANK0 ] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3704 ;;      Params:         0       2       0       0       0
  3705 ;;      Locals:         0       1       0       0       0
  3706 ;;      Temps:          0       1       0       0       0
  3707 ;;      Totals:         0       4       0       0       0
  3708 ;;Total ram usage:        4 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    3
  3711 ;; This function calls:
  3712 ;;		_lcd_write
  3713 ;; This function is called by:
  3714 ;;		_main
  3715 ;;		_display_scoreboard
  3716 ;;		_display_gameboard
  3717 ;;		_update_cursor
  3718 ;;		_toggle_cursor
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _lcd_putch
  3724  05EE                     _lcd_putch:	
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3728                           ;lcd_putch@character stored from wreg
  3729  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3730  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3731  05F0  00B3               	movwf	lcd_putch@character
  3732  05F1                     l3039:	
  3733                           
  3734                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  3735  05F1  0833               	movf	lcd_putch@character,w
  3736  05F2  00B2               	movwf	??_lcd_putch
  3737  05F3  0832               	movf	??_lcd_putch,w
  3738  05F4  00A2               	movwf	lcd_write@CmdChar
  3739  05F5  0830               	movf	lcd_putch@port,w
  3740  05F6  00A3               	movwf	lcd_write@port
  3741  05F7  0831               	movf	lcd_putch@port+1,w
  3742  05F8  00A4               	movwf	lcd_write@port+1
  3743  05F9  3010               	movlw	16
  3744  05FA  120A  158A  2399  120A  118A  	fcall	_lcd_write
  3745  05FF                     l454:	
  3746  05FF  0008               	return
  3747  0600                     __end_of_lcd_putch:	
  3748                           
  3749                           	psect	text10
  3750  0BE8                     __ptext10:	
  3751 ;; *************** function _lcd_init *****************
  3752 ;; Defined at:
  3753 ;;		line 155 in file "lcd4bits.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  port            2   10[BANK0 ] PTR unsigned char 
  3756 ;;		 -> PORTD(1), PORTA(1), 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       2       0       0       0
  3769 ;;      Locals:         0       0       0       0       0
  3770 ;;      Temps:          0       1       0       0       0
  3771 ;;      Totals:         0       3       0       0       0
  3772 ;;Total ram usage:        3 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    4
  3775 ;; This function calls:
  3776 ;;		_DelayMs
  3777 ;;		_lcd_clear
  3778 ;;		_lcd_write
  3779 ;;		_tmr0_init
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _lcd_init
  3787  0BE8                     _lcd_init:	
  3788  0BE8                     l3445:	
  3789                           ;incstack = 0
  3790                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3791                           
  3792                           
  3793                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  3794  0BE8  120A  158A  2144  120A  158A  	fcall	_tmr0_init
  3795  0BED                     l3447:	
  3796                           
  3797                           ;lcd4bits.c: 158:     *port = 0;
  3798  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0BEF  082A               	movf	lcd_init@port,w
  3801  0BF0  0084               	movwf	4
  3802  0BF1  1783               	bsf	3,7
  3803  0BF2  1C2B               	btfss	lcd_init@port+1,0
  3804  0BF3  1383               	bcf	3,7
  3805  0BF4  0180               	clrf	0
  3806  0BF5                     l3449:	
  3807                           
  3808                           ;lcd4bits.c: 159:     DelayMs(15);
  3809  0BF5  300F               	movlw	15
  3810  0BF6  00A0               	movwf	DelayMs@millis
  3811  0BF7  3000               	movlw	0
  3812  0BF8  00A1               	movwf	DelayMs@millis+1
  3813  0BF9  120A  158A  218D  120A  158A  	fcall	_DelayMs
  3814  0BFE                     l3451:	
  3815                           
  3816                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  3817  0BFE  3028               	movlw	40
  3818  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0C01  00AC               	movwf	??_lcd_init
  3821  0C02  082C               	movf	??_lcd_init,w
  3822  0C03  00A2               	movwf	lcd_write@CmdChar
  3823  0C04  082A               	movf	lcd_init@port,w
  3824  0C05  00A3               	movwf	lcd_write@port
  3825  0C06  082B               	movf	lcd_init@port+1,w
  3826  0C07  00A4               	movwf	lcd_write@port+1
  3827  0C08  3000               	movlw	0
  3828  0C09  120A  158A  2399  120A  158A  	fcall	_lcd_write
  3829  0C0E                     l3453:	
  3830                           
  3831                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  3832  0C0E  300C               	movlw	12
  3833  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0C10  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0C11  00AC               	movwf	??_lcd_init
  3836  0C12  082C               	movf	??_lcd_init,w
  3837  0C13  00A2               	movwf	lcd_write@CmdChar
  3838  0C14  082A               	movf	lcd_init@port,w
  3839  0C15  00A3               	movwf	lcd_write@port
  3840  0C16  082B               	movf	lcd_init@port+1,w
  3841  0C17  00A4               	movwf	lcd_write@port+1
  3842  0C18  3000               	movlw	0
  3843  0C19  120A  158A  2399  120A  158A  	fcall	_lcd_write
  3844  0C1E                     l3455:	
  3845                           
  3846                           ;lcd4bits.c: 162:     lcd_clear(port);
  3847  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0C20  082A               	movf	lcd_init@port,w
  3850  0C21  00A8               	movwf	lcd_clear@port
  3851  0C22  082B               	movf	lcd_init@port+1,w
  3852  0C23  00A9               	movwf	lcd_clear@port+1
  3853  0C24  120A  158A  21A6  120A  158A  	fcall	_lcd_clear
  3854  0C29                     l3457:	
  3855                           
  3856                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  3857  0C29  3006               	movlw	6
  3858  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  3859  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  3860  0C2C  00AC               	movwf	??_lcd_init
  3861  0C2D  082C               	movf	??_lcd_init,w
  3862  0C2E  00A2               	movwf	lcd_write@CmdChar
  3863  0C2F  082A               	movf	lcd_init@port,w
  3864  0C30  00A3               	movwf	lcd_write@port
  3865  0C31  082B               	movf	lcd_init@port+1,w
  3866  0C32  00A4               	movwf	lcd_write@port+1
  3867  0C33  3000               	movlw	0
  3868  0C34  120A  158A  2399  120A  158A  	fcall	_lcd_write
  3869  0C39                     l460:	
  3870  0C39  0008               	return
  3871  0C3A                     __end_of_lcd_init:	
  3872                           
  3873                           	psect	text11
  3874  0944                     __ptext11:	
  3875 ;; *************** function _tmr0_init *****************
  3876 ;; Defined at:
  3877 ;;		line 72 in file "lcd4bits.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0
  3893 ;;      Temps:          0       1       0       0       0
  3894 ;;      Totals:         0       1       0       0       0
  3895 ;;Total ram usage:        1 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_lcd_init
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           
  3906                           ;psect for function _tmr0_init
  3907  0944                     _tmr0_init:	
  3908  0944                     l3441:	
  3909                           ;incstack = 0
  3910                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  3911                           
  3912                           
  3913                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  3914  0944  30C0               	movlw	192
  3915  0945  1283               	bcf	3,5	;RP0=0, select bank0
  3916  0946  1303               	bcf	3,6	;RP1=0, select bank0
  3917  0947  00A0               	movwf	??_tmr0_init
  3918  0948  0820               	movf	??_tmr0_init,w
  3919  0949  1683               	bsf	3,5	;RP0=1, select bank1
  3920  094A  1303               	bcf	3,6	;RP1=0, select bank1
  3921  094B  0581               	andwf	1,f	;volatile
  3922  094C                     l3443:	
  3923                           
  3924                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  3925  094C  1501               	bsf	1,2	;volatile
  3926  094D                     l425:	
  3927  094D  0008               	return
  3928  094E                     __end_of_tmr0_init:	
  3929                           
  3930                           	psect	text12
  3931  09DE                     __ptext12:	
  3932 ;; *************** function _joystick_init *****************
  3933 ;; Defined at:
  3934 ;;		line 573 in file "concentration.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _joystick_init
  3964  09DE                     _joystick_init:	
  3965  09DE                     l3459:	
  3966                           ;incstack = 0
  3967                           ; Regs used in _joystick_init: [wreg+status,2]
  3968                           
  3969                           
  3970                           ;concentration.c: 574:     joystick_x_pos = 512;
  3971  09DE  3000               	movlw	0
  3972  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  3973  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  3974  09E1  00DD               	movwf	_joystick_x_pos
  3975  09E2  3002               	movlw	2
  3976  09E3  00DE               	movwf	_joystick_x_pos+1
  3977                           
  3978                           ;concentration.c: 575:     joystick_y_pos = 512;
  3979  09E4  3000               	movlw	0
  3980  09E5  00DB               	movwf	_joystick_y_pos
  3981  09E6  3002               	movlw	2
  3982  09E7  00DC               	movwf	_joystick_y_pos+1
  3983  09E8                     l3461:	
  3984                           
  3985                           ;concentration.c: 576:     PORTB = 0;
  3986  09E8  0186               	clrf	6	;volatile
  3987  09E9                     l3463:	
  3988                           
  3989                           ;concentration.c: 577:     nRBPU = 0;
  3990  09E9  1683               	bsf	3,5	;RP0=1, select bank1
  3991  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  3992  09EB  1381               	bcf	1,7	;volatile
  3993  09EC                     l3465:	
  3994                           
  3995                           ;concentration.c: 578:     WPUB = 0x24;
  3996  09EC  3024               	movlw	36
  3997  09ED  0095               	movwf	21	;volatile
  3998  09EE                     l3467:	
  3999                           
  4000                           ;concentration.c: 579:     TRISB = 0x3F;
  4001  09EE  303F               	movlw	63
  4002  09EF  0086               	movwf	6	;volatile
  4003  09F0                     l3469:	
  4004                           
  4005                           ;concentration.c: 580:     ANSELH = 0x1E;
  4006  09F0  301E               	movlw	30
  4007  09F1  1683               	bsf	3,5	;RP0=1, select bank3
  4008  09F2  1703               	bsf	3,6	;RP1=1, select bank3
  4009  09F3  0089               	movwf	9	;volatile
  4010  09F4                     l3471:	
  4011                           
  4012                           ;concentration.c: 581:     GIE = 1;
  4013  09F4  178B               	bsf	11,7	;volatile
  4014  09F5                     l3473:	
  4015                           
  4016                           ;concentration.c: 582:     PEIE = 1;
  4017  09F5  170B               	bsf	11,6	;volatile
  4018  09F6                     l3475:	
  4019                           
  4020                           ;concentration.c: 583:     ADIF = 0;
  4021  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  4022  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  4023  09F8  130C               	bcf	12,6	;volatile
  4024  09F9                     l3477:	
  4025                           
  4026                           ;concentration.c: 584:     ADIE = 1;
  4027  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  4028  09FA  1303               	bcf	3,6	;RP1=0, select bank1
  4029  09FB  170C               	bsf	12,6	;volatile
  4030  09FC                     l3479:	
  4031                           
  4032                           ;concentration.c: 585:     ADCON1 = 0x80;
  4033  09FC  3080               	movlw	128
  4034  09FD  009F               	movwf	31	;volatile
  4035  09FE                     l3481:	
  4036                           
  4037                           ;concentration.c: 586:     ADCON0 = 0xA5;
  4038  09FE  30A5               	movlw	165
  4039  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0A01  009F               	movwf	31	;volatile
  4042  0A02                     l3483:	
  4043                           
  4044                           ;concentration.c: 587:     joystick_pressed = 1;
  4045  0A02  01E1               	clrf	_joystick_pressed
  4046  0A03  0AE1               	incf	_joystick_pressed,f
  4047  0A04                     l393:	
  4048  0A04  0008               	return
  4049  0A05                     __end_of_joystick_init:	
  4050                           
  4051                           	psect	text13
  4052  0B4B                     __ptext13:	
  4053 ;; *************** function _game_end *****************
  4054 ;; Defined at:
  4055 ;;		line 262 in file "concentration.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    5
  4076 ;; This function calls:
  4077 ;;		_DelayMs
  4078 ;;		_end_screen
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _game_end
  4086  0B4B                     _game_end:	
  4087  0B4B                     l3651:	
  4088                           ;incstack = 0
  4089                           ; Regs used in _game_end: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4090                           
  4091                           
  4092                           ;concentration.c: 263:     DelayMs(1000);
  4093  0B4B  30E8               	movlw	232
  4094  0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0B4D  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0B4E  00A0               	movwf	DelayMs@millis
  4097  0B4F  3003               	movlw	3
  4098  0B50  00A1               	movwf	DelayMs@millis+1
  4099  0B51  120A  158A  218D  120A  158A  	fcall	_DelayMs
  4100  0B56                     l3653:	
  4101                           
  4102                           ;concentration.c: 264:     if(p1_score>p2_score) {
  4103  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0B58  0864               	movf	_p1_score,w
  4106  0B59  0263               	subwf	_p2_score,w
  4107  0B5A  1803               	skipnc
  4108  0B5B  2B5D               	goto	u2671
  4109  0B5C  2B5E               	goto	u2670
  4110  0B5D                     u2671:	
  4111  0B5D  2B6C               	goto	l3657
  4112  0B5E                     u2670:	
  4113  0B5E                     l3655:	
  4114                           
  4115                           ;concentration.c: 265:         end_screen("    WINNER!!","    PLAYER 1");
  4116  0B5E  30A1               	movlw	low (STR_4| (0+32768))
  4117  0B5F  00AD               	movwf	end_screen@first_row
  4118  0B60  3086               	movlw	high (STR_4| (0+32768))
  4119  0B61  00AE               	movwf	end_screen@first_row+1
  4120  0B62  30AE               	movlw	low (STR_5| (0+32768))
  4121  0B63  00AF               	movwf	end_screen@second_row
  4122  0B64  3086               	movlw	high (STR_5| (0+32768))
  4123  0B65  00B0               	movwf	end_screen@second_row+1
  4124  0B66  120A  118A  2055  120A  158A  	fcall	_end_screen
  4125                           
  4126                           ;concentration.c: 266:     } else if(p1_score<p2_score) {
  4127  0B6B  2B8D               	goto	l3663
  4128  0B6C                     l3657:	
  4129  0B6C  0863               	movf	_p2_score,w
  4130  0B6D  0264               	subwf	_p1_score,w
  4131  0B6E  1803               	skipnc
  4132  0B6F  2B71               	goto	u2681
  4133  0B70  2B72               	goto	u2680
  4134  0B71                     u2681:	
  4135  0B71  2B80               	goto	l3661
  4136  0B72                     u2680:	
  4137  0B72                     l3659:	
  4138                           
  4139                           ;concentration.c: 267:         end_screen("    WINNER!!","    PLAYER 2");
  4140  0B72  30A1               	movlw	low (STR_4| (0+32768))
  4141  0B73  00AD               	movwf	end_screen@first_row
  4142  0B74  3086               	movlw	high (STR_4| (0+32768))
  4143  0B75  00AE               	movwf	end_screen@first_row+1
  4144  0B76  30BB               	movlw	low (STR_7| (0+32768))
  4145  0B77  00AF               	movwf	end_screen@second_row
  4146  0B78  3086               	movlw	high (STR_7| (0+32768))
  4147  0B79  00B0               	movwf	end_screen@second_row+1
  4148  0B7A  120A  118A  2055  120A  158A  	fcall	_end_screen
  4149                           
  4150                           ;concentration.c: 268:     } else {
  4151  0B7F  2B8D               	goto	l3663
  4152  0B80                     l3661:	
  4153                           
  4154                           ;concentration.c: 269:         end_screen("   NO WINNER!","      TIED");
  4155  0B80  3093               	movlw	low (STR_8| (0+32768))
  4156  0B81  00AD               	movwf	end_screen@first_row
  4157  0B82  3086               	movlw	high (STR_8| (0+32768))
  4158  0B83  00AE               	movwf	end_screen@first_row+1
  4159  0B84  30EE               	movlw	low (STR_9| (0+32768))
  4160  0B85  00AF               	movwf	end_screen@second_row
  4161  0B86  3086               	movlw	high (STR_9| (0+32768))
  4162  0B87  00B0               	movwf	end_screen@second_row+1
  4163  0B88  120A  118A  2055  120A  158A  	fcall	_end_screen
  4164  0B8D                     l3663:	
  4165                           
  4166                           ;concentration.c: 271:     DelayMs(1000);
  4167  0B8D  30E8               	movlw	232
  4168  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  4170  0B90  00A0               	movwf	DelayMs@millis
  4171  0B91  3003               	movlw	3
  4172  0B92  00A1               	movwf	DelayMs@millis+1
  4173  0B93  120A  158A  218D  120A  158A  	fcall	_DelayMs
  4174  0B98                     l252:	
  4175  0B98  0008               	return
  4176  0B99                     __end_of_game_end:	
  4177                           
  4178                           	psect	text14
  4179  0055                     __ptext14:	
  4180 ;; *************** function _end_screen *****************
  4181 ;; Defined at:
  4182 ;;		line 206 in file "concentration.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  first_row       2   13[BANK0 ] PTR const unsigned char 
  4185 ;;		 -> STR_8(14), STR_6(13), STR_4(13), 
  4186 ;;  second_row      2   15[BANK0 ] PTR unsigned char 
  4187 ;;		 -> STR_9(11), STR_7(13), STR_5(13), 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  colors          6   20[BANK0 ] unsigned char [6]
  4190 ;;  color_index     1   27[BANK0 ] unsigned char 
  4191 ;;  i               1   26[BANK0 ] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       4       0       0       0
  4202 ;;      Locals:         0       8       0       0       0
  4203 ;;      Temps:          0       3       0       0       0
  4204 ;;      Totals:         0      15       0       0       0
  4205 ;;Total ram usage:       15 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    4
  4208 ;; This function calls:
  4209 ;;		_DelayMs
  4210 ;;		___awmod
  4211 ;;		_lcd_clear
  4212 ;;		_lcd_goto
  4213 ;;		_lcd_puts
  4214 ;;		_play_tone
  4215 ;;		_turn_on_led
  4216 ;; This function is called by:
  4217 ;;		_game_end
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function _end_screen
  4223  0055                     _end_screen:	
  4224  0055                     l3211:	
  4225                           ;incstack = 0
  4226                           ; Regs used in _end_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4227                           
  4228                           
  4229                           ;concentration.c: 207:     joystick_pressed = 1;
  4230  0055  1283               	bcf	3,5	;RP0=0, select bank0
  4231  0056  1303               	bcf	3,6	;RP1=0, select bank0
  4232  0057  01E1               	clrf	_joystick_pressed
  4233  0058  0AE1               	incf	_joystick_pressed,f
  4234  0059                     l3213:	
  4235                           
  4236                           ;concentration.c: 208:     char colors[] = {0,3,1,4,2,5};
  4237  0059  3034               	movlw	end_screen@colors& (0+255)
  4238  005A  0084               	movwf	4
  4239  005B  1683               	bsf	3,5	;RP0=1, select bank1
  4240  005C  1303               	bcf	3,6	;RP1=0, select bank1
  4241  005D  0860               	movf	end_screen@F1344^(0+128),w
  4242  005E  1383               	bcf	3,7	;select IRP bank0
  4243  005F  0080               	movwf	0
  4244  0060  0A84               	incf	4,f
  4245  0061  0861               	movf	(end_screen@F1344^(0+128)+1),w
  4246  0062  0080               	movwf	0
  4247  0063  0A84               	incf	4,f
  4248  0064  0862               	movf	(end_screen@F1344^(0+128)+2),w
  4249  0065  0080               	movwf	0
  4250  0066  0A84               	incf	4,f
  4251  0067  0863               	movf	(end_screen@F1344^(0+128)+3),w
  4252  0068  0080               	movwf	0
  4253  0069  0A84               	incf	4,f
  4254  006A  0864               	movf	(end_screen@F1344^(0+128)+4),w
  4255  006B  0080               	movwf	0
  4256  006C  0A84               	incf	4,f
  4257  006D  0865               	movf	(end_screen@F1344^(0+128)+5),w
  4258  006E  0080               	movwf	0
  4259  006F                     l3215:	
  4260                           
  4261                           ;concentration.c: 209:     char color_index = 0;
  4262  006F  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0070  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0071  01BB               	clrf	end_screen@color_index
  4265  0072                     l3217:	
  4266                           
  4267                           ;concentration.c: 210:     char i;;concentration.c: 211:     for(i=0;i<3;i++) {
  4268  0072  01BA               	clrf	end_screen@i
  4269  0073                     l3223:	
  4270                           
  4271                           ;concentration.c: 212:         turn_on_led(colors[color_index]);
  4272  0073  083B               	movf	end_screen@color_index,w
  4273  0074  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  4274  0075  0084               	movwf	4
  4275  0076  1383               	bcf	3,7	;select IRP bank0
  4276  0077  0800               	movf	0,w
  4277  0078  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  4278  007D                     l3225:	
  4279                           
  4280                           ;concentration.c: 213:         color_index++;
  4281  007D  3001               	movlw	1
  4282  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4283  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4284  0080  00B1               	movwf	??_end_screen
  4285  0081  0831               	movf	??_end_screen,w
  4286  0082  07BB               	addwf	end_screen@color_index,f
  4287  0083                     l3227:	
  4288                           
  4289                           ;concentration.c: 214:         color_index %= 6;
  4290  0083  3006               	movlw	6
  4291  0084  00A0               	movwf	___awmod@divisor
  4292  0085  3000               	movlw	0
  4293  0086  00A1               	movwf	___awmod@divisor+1
  4294  0087  083B               	movf	end_screen@color_index,w
  4295  0088  00B1               	movwf	??_end_screen
  4296  0089  01B2               	clrf	??_end_screen+1
  4297  008A  0831               	movf	??_end_screen,w
  4298  008B  00A2               	movwf	___awmod@dividend
  4299  008C  0832               	movf	??_end_screen+1,w
  4300  008D  00A3               	movwf	___awmod@dividend+1
  4301  008E  120A  158A  248F  120A  118A  	fcall	___awmod
  4302  0093  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0094  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0095  0820               	movf	?___awmod,w
  4305  0096  00B3               	movwf	??_end_screen+2
  4306  0097  0833               	movf	??_end_screen+2,w
  4307  0098  00BB               	movwf	end_screen@color_index
  4308  0099                     l3229:	
  4309                           
  4310                           ;concentration.c: 215:         play_tone(2009, 30);
  4311  0099  30D9               	movlw	217
  4312  009A  00A0               	movwf	play_tone@tone_period
  4313  009B  3007               	movlw	7
  4314  009C  00A1               	movwf	play_tone@tone_period+1
  4315  009D  301E               	movlw	30
  4316  009E  00B1               	movwf	??_end_screen
  4317  009F  0831               	movf	??_end_screen,w
  4318  00A0  00A2               	movwf	play_tone@duration_8ms
  4319  00A1  120A  118A  27DA  120A  118A  	fcall	_play_tone
  4320  00A6                     l3231:	
  4321                           
  4322                           ;concentration.c: 216:         turn_on_led(colors[color_index]);
  4323  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  4324  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  4325  00A8  083B               	movf	end_screen@color_index,w
  4326  00A9  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  4327  00AA  0084               	movwf	4
  4328  00AB  1383               	bcf	3,7	;select IRP bank0
  4329  00AC  0800               	movf	0,w
  4330  00AD  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  4331                           
  4332                           ;concentration.c: 217:         color_index++;
  4333  00B2  3001               	movlw	1
  4334  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  4335  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  4336  00B5  00B1               	movwf	??_end_screen
  4337  00B6  0831               	movf	??_end_screen,w
  4338  00B7  07BB               	addwf	end_screen@color_index,f
  4339  00B8                     l3233:	
  4340                           
  4341                           ;concentration.c: 218:         color_index %= 6;
  4342  00B8  3006               	movlw	6
  4343  00B9  00A0               	movwf	___awmod@divisor
  4344  00BA  3000               	movlw	0
  4345  00BB  00A1               	movwf	___awmod@divisor+1
  4346  00BC  083B               	movf	end_screen@color_index,w
  4347  00BD  00B1               	movwf	??_end_screen
  4348  00BE  01B2               	clrf	??_end_screen+1
  4349  00BF  0831               	movf	??_end_screen,w
  4350  00C0  00A2               	movwf	___awmod@dividend
  4351  00C1  0832               	movf	??_end_screen+1,w
  4352  00C2  00A3               	movwf	___awmod@dividend+1
  4353  00C3  120A  158A  248F  120A  118A  	fcall	___awmod
  4354  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  4355  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  4356  00CA  0820               	movf	?___awmod,w
  4357  00CB  00B3               	movwf	??_end_screen+2
  4358  00CC  0833               	movf	??_end_screen+2,w
  4359  00CD  00BB               	movwf	end_screen@color_index
  4360  00CE                     l3235:	
  4361                           
  4362                           ;concentration.c: 219:         play_tone(1896, 30);
  4363  00CE  3068               	movlw	104
  4364  00CF  00A0               	movwf	play_tone@tone_period
  4365  00D0  3007               	movlw	7
  4366  00D1  00A1               	movwf	play_tone@tone_period+1
  4367  00D2  301E               	movlw	30
  4368  00D3  00B1               	movwf	??_end_screen
  4369  00D4  0831               	movf	??_end_screen,w
  4370  00D5  00A2               	movwf	play_tone@duration_8ms
  4371  00D6  120A  118A  27DA  120A  118A  	fcall	_play_tone
  4372  00DB                     l3237:	
  4373                           
  4374                           ;concentration.c: 220:         turn_on_led(colors[color_index]);
  4375  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  4376  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  4377  00DD  083B               	movf	end_screen@color_index,w
  4378  00DE  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  4379  00DF  0084               	movwf	4
  4380  00E0  1383               	bcf	3,7	;select IRP bank0
  4381  00E1  0800               	movf	0,w
  4382  00E2  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  4383  00E7                     l3239:	
  4384                           
  4385                           ;concentration.c: 221:         color_index++;
  4386  00E7  3001               	movlw	1
  4387  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  4388  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  4389  00EA  00B1               	movwf	??_end_screen
  4390  00EB  0831               	movf	??_end_screen,w
  4391  00EC  07BB               	addwf	end_screen@color_index,f
  4392  00ED                     l3241:	
  4393                           
  4394                           ;concentration.c: 222:         color_index %= 6;
  4395  00ED  3006               	movlw	6
  4396  00EE  00A0               	movwf	___awmod@divisor
  4397  00EF  3000               	movlw	0
  4398  00F0  00A1               	movwf	___awmod@divisor+1
  4399  00F1  083B               	movf	end_screen@color_index,w
  4400  00F2  00B1               	movwf	??_end_screen
  4401  00F3  01B2               	clrf	??_end_screen+1
  4402  00F4  0831               	movf	??_end_screen,w
  4403  00F5  00A2               	movwf	___awmod@dividend
  4404  00F6  0832               	movf	??_end_screen+1,w
  4405  00F7  00A3               	movwf	___awmod@dividend+1
  4406  00F8  120A  158A  248F  120A  118A  	fcall	___awmod
  4407  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  4408  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  4409  00FF  0820               	movf	?___awmod,w
  4410  0100  00B3               	movwf	??_end_screen+2
  4411  0101  0833               	movf	??_end_screen+2,w
  4412  0102  00BB               	movwf	end_screen@color_index
  4413  0103                     l3243:	
  4414                           
  4415                           ;concentration.c: 223:         play_tone(1594, 30);
  4416  0103  303A               	movlw	58
  4417  0104  00A0               	movwf	play_tone@tone_period
  4418  0105  3006               	movlw	6
  4419  0106  00A1               	movwf	play_tone@tone_period+1
  4420  0107  301E               	movlw	30
  4421  0108  00B1               	movwf	??_end_screen
  4422  0109  0831               	movf	??_end_screen,w
  4423  010A  00A2               	movwf	play_tone@duration_8ms
  4424  010B  120A  118A  27DA  120A  118A  	fcall	_play_tone
  4425                           
  4426                           ;concentration.c: 224:         turn_on_led(colors[color_index]);
  4427  0110  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0111  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0112  083B               	movf	end_screen@color_index,w
  4430  0113  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  4431  0114  0084               	movwf	4
  4432  0115  1383               	bcf	3,7	;select IRP bank0
  4433  0116  0800               	movf	0,w
  4434  0117  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  4435  011C                     l3245:	
  4436                           
  4437                           ;concentration.c: 225:         color_index++;
  4438  011C  3001               	movlw	1
  4439  011D  1283               	bcf	3,5	;RP0=0, select bank0
  4440  011E  1303               	bcf	3,6	;RP1=0, select bank0
  4441  011F  00B1               	movwf	??_end_screen
  4442  0120  0831               	movf	??_end_screen,w
  4443  0121  07BB               	addwf	end_screen@color_index,f
  4444  0122                     l3247:	
  4445                           
  4446                           ;concentration.c: 226:         color_index %= 6;
  4447  0122  3006               	movlw	6
  4448  0123  00A0               	movwf	___awmod@divisor
  4449  0124  3000               	movlw	0
  4450  0125  00A1               	movwf	___awmod@divisor+1
  4451  0126  083B               	movf	end_screen@color_index,w
  4452  0127  00B1               	movwf	??_end_screen
  4453  0128  01B2               	clrf	??_end_screen+1
  4454  0129  0831               	movf	??_end_screen,w
  4455  012A  00A2               	movwf	___awmod@dividend
  4456  012B  0832               	movf	??_end_screen+1,w
  4457  012C  00A3               	movwf	___awmod@dividend+1
  4458  012D  120A  158A  248F  120A  118A  	fcall	___awmod
  4459  0132  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0133  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0134  0820               	movf	?___awmod,w
  4462  0135  00B3               	movwf	??_end_screen+2
  4463  0136  0833               	movf	??_end_screen+2,w
  4464  0137  00BB               	movwf	end_screen@color_index
  4465  0138                     l3249:	
  4466                           
  4467                           ;concentration.c: 227:         DelayMs(250);
  4468  0138  30FA               	movlw	250
  4469  0139  00A0               	movwf	DelayMs@millis
  4470  013A  3000               	movlw	0
  4471  013B  00A1               	movwf	DelayMs@millis+1
  4472  013C  120A  158A  218D  120A  118A  	fcall	_DelayMs
  4473  0141                     l3251:	
  4474                           
  4475                           ;concentration.c: 228:     }
  4476  0141  3001               	movlw	1
  4477  0142  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0143  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0144  00B1               	movwf	??_end_screen
  4480  0145  0831               	movf	??_end_screen,w
  4481  0146  07BA               	addwf	end_screen@i,f
  4482  0147                     l3253:	
  4483  0147  3003               	movlw	3
  4484  0148  023A               	subwf	end_screen@i,w
  4485  0149  1C03               	skipc
  4486  014A  294C               	goto	u2211
  4487  014B  294D               	goto	u2210
  4488  014C                     u2211:	
  4489  014C  2873               	goto	l3223
  4490  014D                     u2210:	
  4491  014D                     l3255:	
  4492                           
  4493                           ;concentration.c: 229:     turn_on_led(colors[color_index]);
  4494  014D  083B               	movf	end_screen@color_index,w
  4495  014E  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  4496  014F  0084               	movwf	4
  4497  0150  1383               	bcf	3,7	;select IRP bank0
  4498  0151  0800               	movf	0,w
  4499  0152  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  4500  0157                     l3257:	
  4501                           
  4502                           ;concentration.c: 230:     color_index++;
  4503  0157  3001               	movlw	1
  4504  0158  1283               	bcf	3,5	;RP0=0, select bank0
  4505  0159  1303               	bcf	3,6	;RP1=0, select bank0
  4506  015A  00B1               	movwf	??_end_screen
  4507  015B  0831               	movf	??_end_screen,w
  4508  015C  07BB               	addwf	end_screen@color_index,f
  4509  015D                     l3259:	
  4510                           
  4511                           ;concentration.c: 231:     color_index %= 6;
  4512  015D  3006               	movlw	6
  4513  015E  00A0               	movwf	___awmod@divisor
  4514  015F  3000               	movlw	0
  4515  0160  00A1               	movwf	___awmod@divisor+1
  4516  0161  083B               	movf	end_screen@color_index,w
  4517  0162  00B1               	movwf	??_end_screen
  4518  0163  01B2               	clrf	??_end_screen+1
  4519  0164  0831               	movf	??_end_screen,w
  4520  0165  00A2               	movwf	___awmod@dividend
  4521  0166  0832               	movf	??_end_screen+1,w
  4522  0167  00A3               	movwf	___awmod@dividend+1
  4523  0168  120A  158A  248F  120A  118A  	fcall	___awmod
  4524  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4525  016E  1303               	bcf	3,6	;RP1=0, select bank0
  4526  016F  0820               	movf	?___awmod,w
  4527  0170  00B3               	movwf	??_end_screen+2
  4528  0171  0833               	movf	??_end_screen+2,w
  4529  0172  00BB               	movwf	end_screen@color_index
  4530  0173                     l3261:	
  4531                           
  4532                           ;concentration.c: 232:     play_tone(2389, 60);
  4533  0173  3055               	movlw	85
  4534  0174  00A0               	movwf	play_tone@tone_period
  4535  0175  3009               	movlw	9
  4536  0176  00A1               	movwf	play_tone@tone_period+1
  4537  0177  303C               	movlw	60
  4538  0178  00B1               	movwf	??_end_screen
  4539  0179  0831               	movf	??_end_screen,w
  4540  017A  00A2               	movwf	play_tone@duration_8ms
  4541  017B  120A  118A  27DA  120A  118A  	fcall	_play_tone
  4542                           
  4543                           ;concentration.c: 233:     while(joystick_pressed==1) {
  4544  0180  2A35               	goto	l3305
  4545  0181                     l3263:	
  4546                           
  4547                           ;concentration.c: 234:         lcd_clear(gameboard);
  4548  0181  3005               	movlw	5
  4549  0182  00A8               	movwf	lcd_clear@port
  4550  0183  3000               	movlw	0
  4551  0184  00A9               	movwf	lcd_clear@port+1
  4552  0185  120A  158A  21A6  120A  118A  	fcall	_lcd_clear
  4553  018A                     l3265:	
  4554                           
  4555                           ;concentration.c: 235:         lcd_puts(first_row,gameboard);
  4556  018A  1283               	bcf	3,5	;RP0=0, select bank0
  4557  018B  1303               	bcf	3,6	;RP1=0, select bank0
  4558  018C  082D               	movf	end_screen@first_row,w
  4559  018D  00A8               	movwf	lcd_puts@string
  4560  018E  082E               	movf	end_screen@first_row+1,w
  4561  018F  00A9               	movwf	lcd_puts@string+1
  4562  0190  3005               	movlw	5
  4563  0191  00AA               	movwf	lcd_puts@port
  4564  0192  3000               	movlw	0
  4565  0193  00AB               	movwf	lcd_puts@port+1
  4566  0194  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  4567  0199                     l3267:	
  4568                           
  4569                           ;concentration.c: 236:         event_enabled = 0;
  4570  0199  1283               	bcf	3,5	;RP0=0, select bank0
  4571  019A  1303               	bcf	3,6	;RP1=0, select bank0
  4572  019B  01E5               	clrf	_event_enabled
  4573  019C                     l3269:	
  4574                           
  4575                           ;concentration.c: 237:         event_delay_count = 120;
  4576  019C  3078               	movlw	120
  4577  019D  00B1               	movwf	??_end_screen
  4578  019E  0831               	movf	??_end_screen,w
  4579  019F  00FA               	movwf	_event_delay_count
  4580                           
  4581                           ;concentration.c: 238:         while(event_enabled == 0) {
  4582  01A0  29AA               	goto	l3275
  4583  01A1                     l233:	
  4584                           
  4585                           ;concentration.c: 239:             if((RB5 == 0)||(RB2 == 0)) {
  4586  01A1  1E86               	btfss	6,5	;volatile
  4587  01A2  29A4               	goto	u2221
  4588  01A3  29A5               	goto	u2220
  4589  01A4                     u2221:	
  4590  01A4  29A9               	goto	l3273
  4591  01A5                     u2220:	
  4592  01A5                     l3271:	
  4593  01A5  1906               	btfsc	6,2	;volatile
  4594  01A6  29A8               	goto	u2231
  4595  01A7  29A9               	goto	u2230
  4596  01A8                     u2231:	
  4597  01A8  29AA               	goto	l3275
  4598  01A9                     u2230:	
  4599  01A9                     l3273:	
  4600                           
  4601                           ;concentration.c: 240:                 joystick_pressed = 0;
  4602  01A9  01E1               	clrf	_joystick_pressed
  4603  01AA                     l3275:	
  4604                           
  4605                           ;concentration.c: 238:         while(event_enabled == 0) {
  4606  01AA  0865               	movf	_event_enabled,w
  4607  01AB  1903               	btfsc	3,2
  4608  01AC  29AE               	goto	u2241
  4609  01AD  29AF               	goto	u2240
  4610  01AE                     u2241:	
  4611  01AE  29A1               	goto	l233
  4612  01AF                     u2240:	
  4613  01AF                     l3277:	
  4614                           
  4615                           ;concentration.c: 243:         turn_on_led(colors[color_index]);
  4616  01AF  083B               	movf	end_screen@color_index,w
  4617  01B0  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  4618  01B1  0084               	movwf	4
  4619  01B2  1383               	bcf	3,7	;select IRP bank0
  4620  01B3  0800               	movf	0,w
  4621  01B4  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  4622  01B9                     l3279:	
  4623                           
  4624                           ;concentration.c: 244:         color_index++;
  4625  01B9  3001               	movlw	1
  4626  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  4627  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  4628  01BC  00B1               	movwf	??_end_screen
  4629  01BD  0831               	movf	??_end_screen,w
  4630  01BE  07BB               	addwf	end_screen@color_index,f
  4631  01BF                     l3281:	
  4632                           
  4633                           ;concentration.c: 245:         color_index %= 6;
  4634  01BF  3006               	movlw	6
  4635  01C0  00A0               	movwf	___awmod@divisor
  4636  01C1  3000               	movlw	0
  4637  01C2  00A1               	movwf	___awmod@divisor+1
  4638  01C3  083B               	movf	end_screen@color_index,w
  4639  01C4  00B1               	movwf	??_end_screen
  4640  01C5  01B2               	clrf	??_end_screen+1
  4641  01C6  0831               	movf	??_end_screen,w
  4642  01C7  00A2               	movwf	___awmod@dividend
  4643  01C8  0832               	movf	??_end_screen+1,w
  4644  01C9  00A3               	movwf	___awmod@dividend+1
  4645  01CA  120A  158A  248F  120A  118A  	fcall	___awmod
  4646  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  4647  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  4648  01D1  0820               	movf	?___awmod,w
  4649  01D2  00B3               	movwf	??_end_screen+2
  4650  01D3  0833               	movf	??_end_screen+2,w
  4651  01D4  00BB               	movwf	end_screen@color_index
  4652  01D5                     l3283:	
  4653                           
  4654                           ;concentration.c: 246:         lcd_clear(gameboard);
  4655  01D5  3005               	movlw	5
  4656  01D6  00A8               	movwf	lcd_clear@port
  4657  01D7  3000               	movlw	0
  4658  01D8  00A9               	movwf	lcd_clear@port+1
  4659  01D9  120A  158A  21A6  120A  118A  	fcall	_lcd_clear
  4660  01DE                     l3285:	
  4661                           
  4662                           ;concentration.c: 247:         lcd_goto(0x40,gameboard);
  4663  01DE  3005               	movlw	5
  4664  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  4665  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  4666  01E1  00A8               	movwf	lcd_goto@port
  4667  01E2  3000               	movlw	0
  4668  01E3  00A9               	movwf	lcd_goto@port+1
  4669  01E4  3040               	movlw	64
  4670  01E5  120A  158A  21C0  120A  118A  	fcall	_lcd_goto
  4671  01EA                     l3287:	
  4672                           
  4673                           ;concentration.c: 248:         lcd_puts(second_row,gameboard);
  4674  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4675  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4676  01EC  082F               	movf	end_screen@second_row,w
  4677  01ED  00A8               	movwf	lcd_puts@string
  4678  01EE  0830               	movf	end_screen@second_row+1,w
  4679  01EF  00A9               	movwf	lcd_puts@string+1
  4680  01F0  3005               	movlw	5
  4681  01F1  00AA               	movwf	lcd_puts@port
  4682  01F2  3000               	movlw	0
  4683  01F3  00AB               	movwf	lcd_puts@port+1
  4684  01F4  120A  158A  225D  120A  118A  	fcall	_lcd_puts
  4685  01F9                     l3289:	
  4686                           
  4687                           ;concentration.c: 249:         event_enabled = 0;
  4688  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  4689  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  4690  01FB  01E5               	clrf	_event_enabled
  4691  01FC                     l3291:	
  4692                           
  4693                           ;concentration.c: 250:         event_delay_count = 120;
  4694  01FC  3078               	movlw	120
  4695  01FD  00B1               	movwf	??_end_screen
  4696  01FE  0831               	movf	??_end_screen,w
  4697  01FF  00FA               	movwf	_event_delay_count
  4698                           
  4699                           ;concentration.c: 251:         while(event_enabled == 0) {
  4700  0200  2A0A               	goto	l3297
  4701  0201                     l239:	
  4702                           
  4703                           ;concentration.c: 252:             if((RB5 == 0)||(RB2 == 0)) {
  4704  0201  1E86               	btfss	6,5	;volatile
  4705  0202  2A04               	goto	u2251
  4706  0203  2A05               	goto	u2250
  4707  0204                     u2251:	
  4708  0204  2A09               	goto	l3295
  4709  0205                     u2250:	
  4710  0205                     l3293:	
  4711  0205  1906               	btfsc	6,2	;volatile
  4712  0206  2A08               	goto	u2261
  4713  0207  2A09               	goto	u2260
  4714  0208                     u2261:	
  4715  0208  2A0A               	goto	l3297
  4716  0209                     u2260:	
  4717  0209                     l3295:	
  4718                           
  4719                           ;concentration.c: 253:                 joystick_pressed = 0;
  4720  0209  01E1               	clrf	_joystick_pressed
  4721  020A                     l3297:	
  4722                           
  4723                           ;concentration.c: 251:         while(event_enabled == 0) {
  4724  020A  0865               	movf	_event_enabled,w
  4725  020B  1903               	btfsc	3,2
  4726  020C  2A0E               	goto	u2271
  4727  020D  2A0F               	goto	u2270
  4728  020E                     u2271:	
  4729  020E  2A01               	goto	l239
  4730  020F                     u2270:	
  4731  020F                     l3299:	
  4732                           
  4733                           ;concentration.c: 256:         turn_on_led(colors[color_index]);
  4734  020F  083B               	movf	end_screen@color_index,w
  4735  0210  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  4736  0211  0084               	movwf	4
  4737  0212  1383               	bcf	3,7	;select IRP bank0
  4738  0213  0800               	movf	0,w
  4739  0214  120A  158A  228D  120A  118A  	fcall	_turn_on_led
  4740  0219                     l3301:	
  4741                           
  4742                           ;concentration.c: 257:         color_index++;
  4743  0219  3001               	movlw	1
  4744  021A  1283               	bcf	3,5	;RP0=0, select bank0
  4745  021B  1303               	bcf	3,6	;RP1=0, select bank0
  4746  021C  00B1               	movwf	??_end_screen
  4747  021D  0831               	movf	??_end_screen,w
  4748  021E  07BB               	addwf	end_screen@color_index,f
  4749  021F                     l3303:	
  4750                           
  4751                           ;concentration.c: 258:         color_index %= 6;
  4752  021F  3006               	movlw	6
  4753  0220  00A0               	movwf	___awmod@divisor
  4754  0221  3000               	movlw	0
  4755  0222  00A1               	movwf	___awmod@divisor+1
  4756  0223  083B               	movf	end_screen@color_index,w
  4757  0224  00B1               	movwf	??_end_screen
  4758  0225  01B2               	clrf	??_end_screen+1
  4759  0226  0831               	movf	??_end_screen,w
  4760  0227  00A2               	movwf	___awmod@dividend
  4761  0228  0832               	movf	??_end_screen+1,w
  4762  0229  00A3               	movwf	___awmod@dividend+1
  4763  022A  120A  158A  248F  120A  118A  	fcall	___awmod
  4764  022F  1283               	bcf	3,5	;RP0=0, select bank0
  4765  0230  1303               	bcf	3,6	;RP1=0, select bank0
  4766  0231  0820               	movf	?___awmod,w
  4767  0232  00B3               	movwf	??_end_screen+2
  4768  0233  0833               	movf	??_end_screen+2,w
  4769  0234  00BB               	movwf	end_screen@color_index
  4770  0235                     l3305:	
  4771                           
  4772                           ;concentration.c: 233:     while(joystick_pressed==1) {
  4773  0235  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0236  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0237  0361               	decf	_joystick_pressed,w
  4776  0238  1903               	btfsc	3,2
  4777  0239  2A3B               	goto	u2281
  4778  023A  2A3C               	goto	u2280
  4779  023B                     u2281:	
  4780  023B  2981               	goto	l3263
  4781  023C                     u2280:	
  4782  023C                     l245:	
  4783  023C  0008               	return
  4784  023D                     __end_of_end_screen:	
  4785                           
  4786                           	psect	text15
  4787  0A8D                     __ptext15:	
  4788 ;; *************** function _turn_on_led *****************
  4789 ;; Defined at:
  4790 ;;		line 179 in file "concentration.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  color           1    wreg     unsigned char 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  color           1    2[BANK0 ] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4804 ;;      Params:         0       0       0       0       0
  4805 ;;      Locals:         0       1       0       0       0
  4806 ;;      Temps:          0       2       0       0       0
  4807 ;;      Totals:         0       3       0       0       0
  4808 ;;Total ram usage:        3 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    1
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_end_screen
  4815 ;;		_check_for_match
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           
  4820                           ;psect for function _turn_on_led
  4821  0A8D                     _turn_on_led:	
  4822                           
  4823                           ;incstack = 0
  4824                           ; Regs used in _turn_on_led: [wreg-fsr0h+status,2+status,0]
  4825                           ;turn_on_led@color stored from wreg
  4826  0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0A8E  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0A8F  00A2               	movwf	turn_on_led@color
  4829  0A90                     l3137:	
  4830                           
  4831                           ;concentration.c: 180:     PORTC &= 0x1F;
  4832  0A90  301F               	movlw	31
  4833  0A91  00A0               	movwf	??_turn_on_led
  4834  0A92  0820               	movf	??_turn_on_led,w
  4835  0A93  0587               	andwf	7,f	;volatile
  4836                           
  4837                           ;concentration.c: 181:     switch(color) {
  4838  0A94  2AA4               	goto	l3141
  4839  0A95                     l216:	
  4840                           ;concentration.c: 182:         case 0:
  4841                           
  4842                           
  4843                           ;concentration.c: 183:             RC5 = 1;
  4844  0A95  1687               	bsf	7,5	;volatile
  4845                           
  4846                           ;concentration.c: 184:             break;
  4847  0A96  2AC0               	goto	l223
  4848  0A97                     l218:	
  4849                           ;concentration.c: 185:         case 1:
  4850                           
  4851                           
  4852                           ;concentration.c: 186:             RC6 = 1;
  4853  0A97  1707               	bsf	7,6	;volatile
  4854                           
  4855                           ;concentration.c: 187:             break;
  4856  0A98  2AC0               	goto	l223
  4857  0A99                     l219:	
  4858                           ;concentration.c: 188:         case 2:
  4859                           
  4860                           
  4861                           ;concentration.c: 189:             RC7 = 1;
  4862  0A99  1787               	bsf	7,7	;volatile
  4863                           
  4864                           ;concentration.c: 190:             break;
  4865  0A9A  2AC0               	goto	l223
  4866  0A9B                     l220:	
  4867                           ;concentration.c: 191:         case 3:
  4868                           
  4869                           
  4870                           ;concentration.c: 192:             RC5 = 1;
  4871  0A9B  1687               	bsf	7,5	;volatile
  4872                           
  4873                           ;concentration.c: 193:             RC6 = 1;
  4874  0A9C  1707               	bsf	7,6	;volatile
  4875                           
  4876                           ;concentration.c: 194:             break;
  4877  0A9D  2AC0               	goto	l223
  4878  0A9E                     l221:	
  4879                           ;concentration.c: 195:         case 4:
  4880                           
  4881                           
  4882                           ;concentration.c: 196:             RC6 = 1;
  4883  0A9E  1707               	bsf	7,6	;volatile
  4884                           
  4885                           ;concentration.c: 197:             RC7 = 1;
  4886  0A9F  1787               	bsf	7,7	;volatile
  4887                           
  4888                           ;concentration.c: 198:             break;
  4889  0AA0  2AC0               	goto	l223
  4890  0AA1                     l222:	
  4891                           ;concentration.c: 199:         case 5:
  4892                           
  4893                           
  4894                           ;concentration.c: 200:             RC7 = 1;
  4895  0AA1  1787               	bsf	7,7	;volatile
  4896                           
  4897                           ;concentration.c: 201:             RC5 = 1;
  4898  0AA2  1687               	bsf	7,5	;volatile
  4899                           
  4900                           ;concentration.c: 202:             break;
  4901  0AA3  2AC0               	goto	l223
  4902  0AA4                     l3141:	
  4903  0AA4  0822               	movf	turn_on_led@color,w
  4904  0AA5  00A0               	movwf	??_turn_on_led
  4905  0AA6  01A1               	clrf	??_turn_on_led+1
  4906                           
  4907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4908                           ; Switch size 1, requested type "simple"
  4909                           ; Number of cases is 1, Range of values is 0 to 0
  4910                           ; switch strategies available:
  4911                           ; Name         Instructions Cycles
  4912                           ; simple_byte            4     3 (average)
  4913                           ; direct_byte           11     8 (fixed)
  4914                           ; jumptable            260     6 (fixed)
  4915                           ;	Chosen strategy is simple_byte
  4916  0AA7  0821               	movf	??_turn_on_led+1,w
  4917  0AA8  3A00               	xorlw	0	; case 0
  4918  0AA9  1903               	skipnz
  4919  0AAA  2AAC               	goto	l3907
  4920  0AAB  2AC0               	goto	l223
  4921  0AAC                     l3907:	
  4922                           
  4923                           ; Switch size 1, requested type "simple"
  4924                           ; Number of cases is 6, Range of values is 0 to 5
  4925                           ; switch strategies available:
  4926                           ; Name         Instructions Cycles
  4927                           ; simple_byte           19    10 (average)
  4928                           ; direct_byte           26     8 (fixed)
  4929                           ; jumptable            260     6 (fixed)
  4930                           ;	Chosen strategy is simple_byte
  4931  0AAC  0820               	movf	??_turn_on_led,w
  4932  0AAD  3A00               	xorlw	0	; case 0
  4933  0AAE  1903               	skipnz
  4934  0AAF  2A95               	goto	l216
  4935  0AB0  3A01               	xorlw	1	; case 1
  4936  0AB1  1903               	skipnz
  4937  0AB2  2A97               	goto	l218
  4938  0AB3  3A03               	xorlw	3	; case 2
  4939  0AB4  1903               	skipnz
  4940  0AB5  2A99               	goto	l219
  4941  0AB6  3A01               	xorlw	1	; case 3
  4942  0AB7  1903               	skipnz
  4943  0AB8  2A9B               	goto	l220
  4944  0AB9  3A07               	xorlw	7	; case 4
  4945  0ABA  1903               	skipnz
  4946  0ABB  2A9E               	goto	l221
  4947  0ABC  3A01               	xorlw	1	; case 5
  4948  0ABD  1903               	skipnz
  4949  0ABE  2AA1               	goto	l222
  4950  0ABF  2AC0               	goto	l223
  4951  0AC0                     l223:	
  4952  0AC0  0008               	return
  4953  0AC1                     __end_of_turn_on_led:	
  4954                           
  4955                           	psect	text16
  4956  07DA                     __ptext16:	
  4957 ;; *************** function _play_tone *****************
  4958 ;; Defined at:
  4959 ;;		line 535 in file "concentration.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  tone_period     2    0[BANK0 ] unsigned int 
  4962 ;;  duration_8ms    1    2[BANK0 ] unsigned char 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4974 ;;      Params:         0       3       0       0       0
  4975 ;;      Locals:         0       0       0       0       0
  4976 ;;      Temps:          0       2       0       0       0
  4977 ;;      Totals:         0       5       0       0       0
  4978 ;;Total ram usage:        5 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    1
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_end_screen
  4985 ;;		_check_for_match
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _play_tone
  4991  07DA                     _play_tone:	
  4992  07DA                     l3147:	
  4993                           ;incstack = 0
  4994                           ; Regs used in _play_tone: [wreg+status,2+status,0]
  4995                           
  4996                           
  4997                           ;concentration.c: 536:     tone_delay = tone_period;
  4998  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4999  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  5000  07DC  0821               	movf	play_tone@tone_period+1,w
  5001  07DD  00F7               	movwf	_tone_delay+1
  5002  07DE  0820               	movf	play_tone@tone_period,w
  5003  07DF  00F6               	movwf	_tone_delay
  5004  07E0                     l3149:	
  5005                           
  5006                           ;concentration.c: 537:     CCPR2 = TMR1+tone_period;
  5007  07E0  0820               	movf	play_tone@tone_period,w
  5008  07E1  070E               	addwf	14,w	;volatile
  5009  07E2  00A3               	movwf	??_play_tone
  5010  07E3  0821               	movf	play_tone@tone_period+1,w
  5011  07E4  1803               	skipnc
  5012  07E5  0A21               	incf	play_tone@tone_period+1,w
  5013  07E6  070F               	addwf	15,w	;volatile
  5014  07E7  00A4               	movwf	??_play_tone+1
  5015  07E8  0823               	movf	??_play_tone,w
  5016  07E9  009B               	movwf	27	;volatile
  5017  07EA  0824               	movf	??_play_tone+1,w
  5018  07EB  009C               	movwf	28	;volatile
  5019  07EC                     l3151:	
  5020                           
  5021                           ;concentration.c: 538:     CCP2IF = 0;
  5022  07EC  100D               	bcf	13,0	;volatile
  5023  07ED                     l3153:	
  5024                           
  5025                           ;concentration.c: 539:     CCP2IE = 1;
  5026  07ED  1683               	bsf	3,5	;RP0=1, select bank1
  5027  07EE  1303               	bcf	3,6	;RP1=0, select bank1
  5028  07EF  140D               	bsf	13,0	;volatile
  5029  07F0                     l3155:	
  5030                           
  5031                           ;concentration.c: 540:     event_delay_count = duration_8ms;
  5032  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  5033  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  5034  07F2  0822               	movf	play_tone@duration_8ms,w
  5035  07F3  00A3               	movwf	??_play_tone
  5036  07F4  0823               	movf	??_play_tone,w
  5037  07F5  00FA               	movwf	_event_delay_count
  5038  07F6                     l3157:	
  5039                           
  5040                           ;concentration.c: 541:     event_enabled = 0;
  5041  07F6  01E5               	clrf	_event_enabled
  5042  07F7                     l3159:	
  5043                           ;concentration.c: 542:     while(event_enabled == 0);
  5044                           
  5045  07F7  0865               	movf	_event_enabled,w
  5046  07F8  1903               	btfsc	3,2
  5047  07F9  2FFB               	goto	u2161
  5048  07FA  2FFC               	goto	u2160
  5049  07FB                     u2161:	
  5050  07FB  2FF7               	goto	l3159
  5051  07FC                     u2160:	
  5052  07FC                     l386:	
  5053                           
  5054                           ;concentration.c: 543:     CCP2IE = 0;
  5055  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  5056  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  5057  07FE  100D               	bcf	13,0	;volatile
  5058  07FF                     l387:	
  5059  07FF  0008               	return
  5060  0800                     __end_of_play_tone:	
  5061                           
  5062                           	psect	text17
  5063  0A5D                     __ptext17:	
  5064 ;; *************** function _lcd_puts *****************
  5065 ;; Defined at:
  5066 ;;		line 129 in file "lcd4bits.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  string          2    8[BANK0 ] PTR const unsigned char 
  5069 ;;		 -> STR_15(7), STR_14(6), STR_13(12), STR_12(13), 
  5070 ;;		 -> STR_11(17), STR_10(16), STR_9(11), STR_8(14), 
  5071 ;;		 -> STR_7(13), STR_6(13), STR_5(13), STR_4(13), 
  5072 ;;		 -> STR_3(13), STR_2(16), STR_1(16), 
  5073 ;;  port            2   10[BANK0 ] PTR unsigned char 
  5074 ;;		 -> PORTD(1), PORTA(1), 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       4       0       0       0
  5087 ;;      Locals:         0       0       0       0       0
  5088 ;;      Temps:          0       1       0       0       0
  5089 ;;      Totals:         0       5       0       0       0
  5090 ;;Total ram usage:        5 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    3
  5093 ;; This function calls:
  5094 ;;		_lcd_write
  5095 ;; This function is called by:
  5096 ;;		_main
  5097 ;;		_end_screen
  5098 ;;		_startup
  5099 ;;		_display_scoreboard
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _lcd_puts
  5105  0A5D                     _lcd_puts:	
  5106  0A5D                     l3027:	
  5107                           ;incstack = 0
  5108                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5109                           
  5110                           
  5111                           ;lcd4bits.c: 130:     while (*string != 0) {
  5112  0A5D  2A7C               	goto	l3033
  5113  0A5E                     l3029:	
  5114                           
  5115                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  5116  0A5E  0829               	movf	lcd_puts@string+1,w
  5117  0A5F  00FF               	movwf	btemp+1
  5118  0A60  0828               	movf	lcd_puts@string,w
  5119  0A61  0084               	movwf	4
  5120  0A62  120A  118A  2600  120A  158A  	fcall	stringtab
  5121  0A67  00AC               	movwf	??_lcd_puts
  5122  0A68  082C               	movf	??_lcd_puts,w
  5123  0A69  00A2               	movwf	lcd_write@CmdChar
  5124  0A6A  082A               	movf	lcd_puts@port,w
  5125  0A6B  00A3               	movwf	lcd_write@port
  5126  0A6C  082B               	movf	lcd_puts@port+1,w
  5127  0A6D  00A4               	movwf	lcd_write@port+1
  5128  0A6E  3010               	movlw	16
  5129  0A6F  120A  158A  2399  120A  158A  	fcall	_lcd_write
  5130  0A74                     l3031:	
  5131  0A74  3001               	movlw	1
  5132  0A75  1283               	bcf	3,5	;RP0=0, select bank0
  5133  0A76  1303               	bcf	3,6	;RP1=0, select bank0
  5134  0A77  07A8               	addwf	lcd_puts@string,f
  5135  0A78  1803               	skipnc
  5136  0A79  0AA9               	incf	lcd_puts@string+1,f
  5137  0A7A  3000               	movlw	0
  5138  0A7B  07A9               	addwf	lcd_puts@string+1,f
  5139  0A7C                     l3033:	
  5140                           
  5141                           ;lcd4bits.c: 130:     while (*string != 0) {
  5142  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  5143  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  5144  0A7E  0829               	movf	lcd_puts@string+1,w
  5145  0A7F  00FF               	movwf	btemp+1
  5146  0A80  0828               	movf	lcd_puts@string,w
  5147  0A81  0084               	movwf	4
  5148  0A82  120A  118A  2600  120A  158A  	fcall	stringtab
  5149  0A87  3A00               	xorlw	0
  5150  0A88  1D03               	skipz
  5151  0A89  2A8B               	goto	u1951
  5152  0A8A  2A8C               	goto	u1950
  5153  0A8B                     u1951:	
  5154  0A8B  2A5E               	goto	l3029
  5155  0A8C                     u1950:	
  5156  0A8C                     l451:	
  5157  0A8C  0008               	return
  5158  0A8D                     __end_of_lcd_puts:	
  5159                           
  5160                           	psect	text18
  5161  0C8F                     __ptext18:	
  5162 ;; *************** function ___awmod *****************
  5163 ;; Defined at:
  5164 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  divisor         2    0[BANK0 ] int 
  5167 ;;  dividend        2    2[BANK0 ] int 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  sign            1    6[BANK0 ] unsigned char 
  5170 ;;  counter         1    5[BANK0 ] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2    0[BANK0 ] int 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5180 ;;      Params:         0       4       0       0       0
  5181 ;;      Locals:         0       2       0       0       0
  5182 ;;      Temps:          0       1       0       0       0
  5183 ;;      Totals:         0       7       0       0       0
  5184 ;;Total ram usage:        7 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    1
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_end_screen
  5191 ;;		_display_scoreboard
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function ___awmod
  5197  0C8F                     ___awmod:	
  5198  0C8F                     l3099:	
  5199                           ;incstack = 0
  5200                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5201                           
  5202  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5203  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  5204  0C91  01A6               	clrf	___awmod@sign
  5205  0C92                     l3101:	
  5206  0C92  1FA3               	btfss	___awmod@dividend+1,7
  5207  0C93  2C95               	goto	u2071
  5208  0C94  2C96               	goto	u2070
  5209  0C95                     u2071:	
  5210  0C95  2C9D               	goto	l3107
  5211  0C96                     u2070:	
  5212  0C96                     l3103:	
  5213  0C96  09A2               	comf	___awmod@dividend,f
  5214  0C97  09A3               	comf	___awmod@dividend+1,f
  5215  0C98  0AA2               	incf	___awmod@dividend,f
  5216  0C99  1903               	skipnz
  5217  0C9A  0AA3               	incf	___awmod@dividend+1,f
  5218  0C9B                     l3105:	
  5219  0C9B  01A6               	clrf	___awmod@sign
  5220  0C9C  0AA6               	incf	___awmod@sign,f
  5221  0C9D                     l3107:	
  5222  0C9D  1FA1               	btfss	___awmod@divisor+1,7
  5223  0C9E  2CA0               	goto	u2081
  5224  0C9F  2CA1               	goto	u2080
  5225  0CA0                     u2081:	
  5226  0CA0  2CA6               	goto	l3111
  5227  0CA1                     u2080:	
  5228  0CA1                     l3109:	
  5229  0CA1  09A0               	comf	___awmod@divisor,f
  5230  0CA2  09A1               	comf	___awmod@divisor+1,f
  5231  0CA3  0AA0               	incf	___awmod@divisor,f
  5232  0CA4  1903               	skipnz
  5233  0CA5  0AA1               	incf	___awmod@divisor+1,f
  5234  0CA6                     l3111:	
  5235  0CA6  0820               	movf	___awmod@divisor,w
  5236  0CA7  0421               	iorwf	___awmod@divisor+1,w
  5237  0CA8  1903               	btfsc	3,2
  5238  0CA9  2CAB               	goto	u2091
  5239  0CAA  2CAC               	goto	u2090
  5240  0CAB                     u2091:	
  5241  0CAB  2CDB               	goto	l3129
  5242  0CAC                     u2090:	
  5243  0CAC                     l3113:	
  5244  0CAC  01A5               	clrf	___awmod@counter
  5245  0CAD  0AA5               	incf	___awmod@counter,f
  5246  0CAE  2CBA               	goto	l3119
  5247  0CAF                     l3115:	
  5248  0CAF  3001               	movlw	1
  5249  0CB0                     u2105:	
  5250  0CB0  1003               	clrc
  5251  0CB1  0DA0               	rlf	___awmod@divisor,f
  5252  0CB2  0DA1               	rlf	___awmod@divisor+1,f
  5253  0CB3  3EFF               	addlw	-1
  5254  0CB4  1D03               	skipz
  5255  0CB5  2CB0               	goto	u2105
  5256  0CB6                     l3117:	
  5257  0CB6  3001               	movlw	1
  5258  0CB7  00A4               	movwf	??___awmod
  5259  0CB8  0824               	movf	??___awmod,w
  5260  0CB9  07A5               	addwf	___awmod@counter,f
  5261  0CBA                     l3119:	
  5262  0CBA  1FA1               	btfss	___awmod@divisor+1,7
  5263  0CBB  2CBD               	goto	u2111
  5264  0CBC  2CBE               	goto	u2110
  5265  0CBD                     u2111:	
  5266  0CBD  2CAF               	goto	l3115
  5267  0CBE                     u2110:	
  5268  0CBE                     l3121:	
  5269  0CBE  0821               	movf	___awmod@divisor+1,w
  5270  0CBF  0223               	subwf	___awmod@dividend+1,w
  5271  0CC0  1D03               	skipz
  5272  0CC1  2CC4               	goto	u2125
  5273  0CC2  0820               	movf	___awmod@divisor,w
  5274  0CC3  0222               	subwf	___awmod@dividend,w
  5275  0CC4                     u2125:	
  5276  0CC4  1C03               	skipc
  5277  0CC5  2CC7               	goto	u2121
  5278  0CC6  2CC8               	goto	u2120
  5279  0CC7                     u2121:	
  5280  0CC7  2CCE               	goto	l3125
  5281  0CC8                     u2120:	
  5282  0CC8                     l3123:	
  5283  0CC8  0820               	movf	___awmod@divisor,w
  5284  0CC9  02A2               	subwf	___awmod@dividend,f
  5285  0CCA  0821               	movf	___awmod@divisor+1,w
  5286  0CCB  1C03               	skipc
  5287  0CCC  03A3               	decf	___awmod@dividend+1,f
  5288  0CCD  02A3               	subwf	___awmod@dividend+1,f
  5289  0CCE                     l3125:	
  5290  0CCE  3001               	movlw	1
  5291  0CCF                     u2135:	
  5292  0CCF  1003               	clrc
  5293  0CD0  0CA1               	rrf	___awmod@divisor+1,f
  5294  0CD1  0CA0               	rrf	___awmod@divisor,f
  5295  0CD2  3EFF               	addlw	-1
  5296  0CD3  1D03               	skipz
  5297  0CD4  2CCF               	goto	u2135
  5298  0CD5                     l3127:	
  5299  0CD5  3001               	movlw	1
  5300  0CD6  02A5               	subwf	___awmod@counter,f
  5301  0CD7  1D03               	btfss	3,2
  5302  0CD8  2CDA               	goto	u2141
  5303  0CD9  2CDB               	goto	u2140
  5304  0CDA                     u2141:	
  5305  0CDA  2CBE               	goto	l3121
  5306  0CDB                     u2140:	
  5307  0CDB                     l3129:	
  5308  0CDB  0826               	movf	___awmod@sign,w
  5309  0CDC  1903               	btfsc	3,2
  5310  0CDD  2CDF               	goto	u2151
  5311  0CDE  2CE0               	goto	u2150
  5312  0CDF                     u2151:	
  5313  0CDF  2CE5               	goto	l3133
  5314  0CE0                     u2150:	
  5315  0CE0                     l3131:	
  5316  0CE0  09A2               	comf	___awmod@dividend,f
  5317  0CE1  09A3               	comf	___awmod@dividend+1,f
  5318  0CE2  0AA2               	incf	___awmod@dividend,f
  5319  0CE3  1903               	skipnz
  5320  0CE4  0AA3               	incf	___awmod@dividend+1,f
  5321  0CE5                     l3133:	
  5322  0CE5  0823               	movf	___awmod@dividend+1,w
  5323  0CE6  00A1               	movwf	?___awmod+1
  5324  0CE7  0822               	movf	___awmod@dividend,w
  5325  0CE8  00A0               	movwf	?___awmod
  5326  0CE9                     l717:	
  5327  0CE9  0008               	return
  5328  0CEA                     __end_of___awmod:	
  5329                           
  5330                           	psect	text19
  5331  0AC1                     __ptext19:	
  5332 ;; *************** function _concentration_gameboard_init *****************
  5333 ;; Defined at:
  5334 ;;		line 336 in file "concentration.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  i               1   54[BANK0 ] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       0       0       0       0
  5349 ;;      Locals:         0       1       0       0       0
  5350 ;;      Temps:          0       1       0       0       0
  5351 ;;      Totals:         0       2       0       0       0
  5352 ;;Total ram usage:        2 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    5
  5355 ;; This function calls:
  5356 ;;		_get_current_char
  5357 ;;		_lcd_clear
  5358 ;;		_lcd_goto
  5359 ;;		_make_custom_chars
  5360 ;;		_randomize_gameboard
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           
  5367                           ;psect for function _concentration_gameboard_init
  5368  0AC1                     _concentration_gameboard_init:	
  5369  0AC1                     l3521:	
  5370                           ;incstack = 0
  5371                           ; Regs used in _concentration_gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
      +                          th+cstack]
  5372                           
  5373                           
  5374                           ;concentration.c: 337:     selected_tile = 0xFF;
  5375  0AC1  30FF               	movlw	255
  5376  0AC2  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0AC3  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0AC4  00D5               	movwf	??_concentration_gameboard_init
  5379  0AC5  0855               	movf	??_concentration_gameboard_init,w
  5380  0AC6  00E2               	movwf	_selected_tile
  5381  0AC7                     l3523:	
  5382                           
  5383                           ;concentration.c: 338:     make_custom_chars();
  5384  0AC7  120A  158A  276C  120A  158A  	fcall	_make_custom_chars
  5385  0ACC                     l3525:	
  5386                           
  5387                           ;concentration.c: 339:     char i;;concentration.c: 340:     for(i = 0; i < 32; i++) {
  5388  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  5389  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  5390  0ACE  01D6               	clrf	concentration_gameboard_init@i
  5391  0ACF                     l3531:	
  5392                           
  5393                           ;concentration.c: 341:         visible[i] = 0xFF;
  5394  0ACF  30FF               	movlw	255
  5395  0AD0  00D5               	movwf	??_concentration_gameboard_init
  5396  0AD1  0856               	movf	concentration_gameboard_init@i,w
  5397  0AD2  3EA0               	addlw	(low (_visible| 0))& (0+255)
  5398  0AD3  0084               	movwf	4
  5399  0AD4  0855               	movf	??_concentration_gameboard_init,w
  5400  0AD5  1383               	bcf	3,7	;select IRP bank1
  5401  0AD6  0080               	movwf	0
  5402  0AD7                     l3533:	
  5403                           
  5404                           ;concentration.c: 342:     }
  5405  0AD7  3001               	movlw	1
  5406  0AD8  00D5               	movwf	??_concentration_gameboard_init
  5407  0AD9  0855               	movf	??_concentration_gameboard_init,w
  5408  0ADA  07D6               	addwf	concentration_gameboard_init@i,f
  5409  0ADB                     l3535:	
  5410  0ADB  3020               	movlw	32
  5411  0ADC  0256               	subwf	concentration_gameboard_init@i,w
  5412  0ADD  1C03               	skipc
  5413  0ADE  2AE0               	goto	u2391
  5414  0ADF  2AE1               	goto	u2390
  5415  0AE0                     u2391:	
  5416  0AE0  2ACF               	goto	l3531
  5417  0AE1                     u2390:	
  5418  0AE1                     l3537:	
  5419                           
  5420                           ;concentration.c: 343:     lcd_clear(gameboard);
  5421  0AE1  3005               	movlw	5
  5422  0AE2  00A8               	movwf	lcd_clear@port
  5423  0AE3  3000               	movlw	0
  5424  0AE4  00A9               	movwf	lcd_clear@port+1
  5425  0AE5  120A  158A  21A6  120A  158A  	fcall	_lcd_clear
  5426  0AEA                     l3539:	
  5427                           
  5428                           ;concentration.c: 344:     cursor_pos = 0x00;
  5429  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  5431  0AEC  01E9               	clrf	_cursor_pos
  5432  0AED                     l3541:	
  5433                           
  5434                           ;concentration.c: 345:     cursor_solid = 0;
  5435  0AED  01E7               	clrf	_cursor_solid
  5436                           
  5437                           ;concentration.c: 346:     get_current_char();
  5438  0AEE  120A  158A  2168  120A  158A  	fcall	_get_current_char
  5439  0AF3                     l3543:	
  5440                           
  5441                           ;concentration.c: 347:     delay_loops = 0;
  5442  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  5443  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  5444  0AF5  01E6               	clrf	_delay_loops
  5445  0AF6                     l3545:	
  5446                           
  5447                           ;concentration.c: 348:     lcd_goto(cursor_pos, gameboard);
  5448  0AF6  3005               	movlw	5
  5449  0AF7  00A8               	movwf	lcd_goto@port
  5450  0AF8  3000               	movlw	0
  5451  0AF9  00A9               	movwf	lcd_goto@port+1
  5452  0AFA  0869               	movf	_cursor_pos,w
  5453  0AFB  120A  158A  21C0  120A  158A  	fcall	_lcd_goto
  5454  0B00                     l3547:	
  5455                           
  5456                           ;concentration.c: 349:     randomize_gameboard();
  5457  0B00  120A  158A  24EA  120A  158A  	fcall	_randomize_gameboard
  5458  0B05                     l294:	
  5459  0B05  0008               	return
  5460  0B06                     __end_of_concentration_gameboard_init:	
  5461                           
  5462                           	psect	text20
  5463  0CEA                     __ptext20:	
  5464 ;; *************** function _randomize_gameboard *****************
  5465 ;; Defined at:
  5466 ;;		line 359 in file "concentration.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  used           32   19[BANK0 ] unsigned char [32]
  5471 ;;  random          1   52[BANK0 ] unsigned char 
  5472 ;;  current         1   51[BANK0 ] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5482 ;;      Params:         0       0       0       0       0
  5483 ;;      Locals:         0      34       0       0       0
  5484 ;;      Temps:          0       3       0       0       0
  5485 ;;      Totals:         0      37       0       0       0
  5486 ;;Total ram usage:       37 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    2
  5489 ;; This function calls:
  5490 ;;		_DelayMs
  5491 ;;		___awdiv
  5492 ;; This function is called by:
  5493 ;;		_concentration_gameboard_init
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _randomize_gameboard
  5499  0CEA                     _randomize_gameboard:	
  5500  0CEA                     l3309:	
  5501                           ;incstack = 0
  5502                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5503                           
  5504                           
  5505                           ;concentration.c: 360:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      +                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  5506  0CEA  3033               	movlw	randomize_gameboard@used& (0+255)
  5507  0CEB  0084               	movwf	4
  5508  0CEC  3020               	movlw	32
  5509  0CED  00FF               	movwf	btemp+1
  5510  0CEE                     u2290:	
  5511  0CEE  1383               	bcf	3,7	;select IRP bank0
  5512  0CEF  0180               	clrf	0
  5513  0CF0  0A84               	incf	4,f
  5514  0CF1  0BFF               	decfsz	btemp+1,f
  5515  0CF2  2CEE               	goto	u2290
  5516  0CF3                     l3311:	
  5517                           
  5518                           ;concentration.c: 361:     char current = 0;
  5519  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0CF5  01D3               	clrf	randomize_gameboard@current
  5522                           
  5523                           ;concentration.c: 362:     char random;;concentration.c: 363:     while(current != 32) {
  5524  0CF6  2D42               	goto	l3325
  5525  0CF7                     l3313:	
  5526                           
  5527                           ;concentration.c: 364:         DelayMs(TMR2>>(2+(TMR1%4)));
  5528  0CF7  0811               	movf	17,w	;volatile
  5529  0CF8  00B0               	movwf	??_randomize_gameboard
  5530  0CF9  080E               	movf	14,w	;volatile
  5531  0CFA  3903               	andlw	3
  5532  0CFB  3E02               	addlw	2
  5533  0CFC  3E01               	addlw	1
  5534  0CFD  2D00               	goto	u2304
  5535  0CFE                     u2305:	
  5536  0CFE  1003               	clrc
  5537  0CFF  0CB0               	rrf	??_randomize_gameboard,f
  5538  0D00                     u2304:	
  5539  0D00  3EFF               	addlw	-1
  5540  0D01  1D03               	skipz
  5541  0D02  2CFE               	goto	u2305
  5542  0D03  0830               	movf	??_randomize_gameboard,w
  5543  0D04  00B1               	movwf	??_randomize_gameboard+1
  5544  0D05  01B2               	clrf	??_randomize_gameboard+2
  5545  0D06  0831               	movf	??_randomize_gameboard+1,w
  5546  0D07  00A0               	movwf	DelayMs@millis
  5547  0D08  0832               	movf	??_randomize_gameboard+2,w
  5548  0D09  00A1               	movwf	DelayMs@millis+1
  5549  0D0A  120A  158A  218D  120A  158A  	fcall	_DelayMs
  5550  0D0F                     l3315:	
  5551                           
  5552                           ;concentration.c: 365:         random = TMR1 % 32;
  5553  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5554  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  5555  0D11  080E               	movf	14,w	;volatile
  5556  0D12  391F               	andlw	31
  5557  0D13  00B0               	movwf	??_randomize_gameboard
  5558  0D14  0830               	movf	??_randomize_gameboard,w
  5559  0D15  00D4               	movwf	randomize_gameboard@random
  5560  0D16                     l3317:	
  5561                           
  5562                           ;concentration.c: 366:         if(used[random] == 0) {
  5563  0D16  0854               	movf	randomize_gameboard@random,w
  5564  0D17  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  5565  0D18  0084               	movwf	4
  5566  0D19  1383               	bcf	3,7	;select IRP bank0
  5567  0D1A  0800               	movf	0,w
  5568  0D1B  1D03               	btfss	3,2
  5569  0D1C  2D1E               	goto	u2311
  5570  0D1D  2D1F               	goto	u2310
  5571  0D1E                     u2311:	
  5572  0D1E  2D42               	goto	l3325
  5573  0D1F                     u2310:	
  5574  0D1F                     l3319:	
  5575                           
  5576                           ;concentration.c: 367:             used[random] = 1;
  5577  0D1F  0854               	movf	randomize_gameboard@random,w
  5578  0D20  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  5579  0D21  0084               	movwf	4
  5580  0D22  0180               	clrf	0
  5581  0D23  0A80               	incf	0,f
  5582  0D24                     l3321:	
  5583                           
  5584                           ;concentration.c: 368:             board[random] = current/4;
  5585  0D24  3004               	movlw	4
  5586  0D25  00A7               	movwf	___awdiv@divisor
  5587  0D26  3000               	movlw	0
  5588  0D27  00A8               	movwf	___awdiv@divisor+1
  5589  0D28  0853               	movf	randomize_gameboard@current,w
  5590  0D29  00B0               	movwf	??_randomize_gameboard
  5591  0D2A  01B1               	clrf	??_randomize_gameboard+1
  5592  0D2B  0830               	movf	??_randomize_gameboard,w
  5593  0D2C  00A9               	movwf	___awdiv@dividend
  5594  0D2D  0831               	movf	??_randomize_gameboard+1,w
  5595  0D2E  00AA               	movwf	___awdiv@dividend+1
  5596  0D2F  120A  158A  2549  120A  158A  	fcall	___awdiv
  5597  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  5599  0D36  0827               	movf	?___awdiv,w
  5600  0D37  00B2               	movwf	??_randomize_gameboard+2
  5601  0D38  0854               	movf	randomize_gameboard@random,w
  5602  0D39  3EC0               	addlw	(low (_board| 0))& (0+255)
  5603  0D3A  0084               	movwf	4
  5604  0D3B  0832               	movf	??_randomize_gameboard+2,w
  5605  0D3C  1383               	bcf	3,7	;select IRP bank1
  5606  0D3D  0080               	movwf	0
  5607  0D3E                     l3323:	
  5608                           
  5609                           ;concentration.c: 369:             current++;
  5610  0D3E  3001               	movlw	1
  5611  0D3F  00B0               	movwf	??_randomize_gameboard
  5612  0D40  0830               	movf	??_randomize_gameboard,w
  5613  0D41  07D3               	addwf	randomize_gameboard@current,f
  5614  0D42                     l3325:	
  5615                           
  5616                           ;concentration.c: 363:     while(current != 32) {
  5617  0D42  3020               	movlw	32
  5618  0D43  0653               	xorwf	randomize_gameboard@current,w
  5619  0D44  1D03               	btfss	3,2
  5620  0D45  2D47               	goto	u2321
  5621  0D46  2D48               	goto	u2320
  5622  0D47                     u2321:	
  5623  0D47  2CF7               	goto	l3313
  5624  0D48                     u2320:	
  5625  0D48                     l307:	
  5626  0D48  0008               	return
  5627  0D49                     __end_of_randomize_gameboard:	
  5628                           
  5629                           	psect	text21
  5630  0D49                     __ptext21:	
  5631 ;; *************** function ___awdiv *****************
  5632 ;; Defined at:
  5633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  divisor         2    7[BANK0 ] int 
  5636 ;;  dividend        2    9[BANK0 ] int 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  quotient        2   14[BANK0 ] int 
  5639 ;;  sign            1   13[BANK0 ] unsigned char 
  5640 ;;  counter         1   12[BANK0 ] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    7[BANK0 ] int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         0       4       0       0       0
  5651 ;;      Locals:         0       4       0       0       0
  5652 ;;      Temps:          0       1       0       0       0
  5653 ;;      Totals:         0       9       0       0       0
  5654 ;;Total ram usage:        9 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    1
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_display_scoreboard
  5661 ;;		_randomize_gameboard
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           
  5666                           ;psect for function ___awdiv
  5667  0D49                     ___awdiv:	
  5668  0D49                     l3055:	
  5669                           ;incstack = 0
  5670                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5671                           
  5672  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  5673  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  5674  0D4B  01AD               	clrf	___awdiv@sign
  5675  0D4C                     l3057:	
  5676  0D4C  1FA8               	btfss	___awdiv@divisor+1,7
  5677  0D4D  2D4F               	goto	u1971
  5678  0D4E  2D50               	goto	u1970
  5679  0D4F                     u1971:	
  5680  0D4F  2D57               	goto	l3063
  5681  0D50                     u1970:	
  5682  0D50                     l3059:	
  5683  0D50  09A7               	comf	___awdiv@divisor,f
  5684  0D51  09A8               	comf	___awdiv@divisor+1,f
  5685  0D52  0AA7               	incf	___awdiv@divisor,f
  5686  0D53  1903               	skipnz
  5687  0D54  0AA8               	incf	___awdiv@divisor+1,f
  5688  0D55                     l3061:	
  5689  0D55  01AD               	clrf	___awdiv@sign
  5690  0D56  0AAD               	incf	___awdiv@sign,f
  5691  0D57                     l3063:	
  5692  0D57  1FAA               	btfss	___awdiv@dividend+1,7
  5693  0D58  2D5A               	goto	u1981
  5694  0D59  2D5B               	goto	u1980
  5695  0D5A                     u1981:	
  5696  0D5A  2D64               	goto	l3069
  5697  0D5B                     u1980:	
  5698  0D5B                     l3065:	
  5699  0D5B  09A9               	comf	___awdiv@dividend,f
  5700  0D5C  09AA               	comf	___awdiv@dividend+1,f
  5701  0D5D  0AA9               	incf	___awdiv@dividend,f
  5702  0D5E  1903               	skipnz
  5703  0D5F  0AAA               	incf	___awdiv@dividend+1,f
  5704  0D60                     l3067:	
  5705  0D60  3001               	movlw	1
  5706  0D61  00AB               	movwf	??___awdiv
  5707  0D62  082B               	movf	??___awdiv,w
  5708  0D63  06AD               	xorwf	___awdiv@sign,f
  5709  0D64                     l3069:	
  5710  0D64  01AE               	clrf	___awdiv@quotient
  5711  0D65  01AF               	clrf	___awdiv@quotient+1
  5712  0D66                     l3071:	
  5713  0D66  0827               	movf	___awdiv@divisor,w
  5714  0D67  0428               	iorwf	___awdiv@divisor+1,w
  5715  0D68  1903               	btfsc	3,2
  5716  0D69  2D6B               	goto	u1991
  5717  0D6A  2D6C               	goto	u1990
  5718  0D6B                     u1991:	
  5719  0D6B  2DA3               	goto	l3091
  5720  0D6C                     u1990:	
  5721  0D6C                     l3073:	
  5722  0D6C  01AC               	clrf	___awdiv@counter
  5723  0D6D  0AAC               	incf	___awdiv@counter,f
  5724  0D6E  2D7A               	goto	l3079
  5725  0D6F                     l3075:	
  5726  0D6F  3001               	movlw	1
  5727  0D70                     u2005:	
  5728  0D70  1003               	clrc
  5729  0D71  0DA7               	rlf	___awdiv@divisor,f
  5730  0D72  0DA8               	rlf	___awdiv@divisor+1,f
  5731  0D73  3EFF               	addlw	-1
  5732  0D74  1D03               	skipz
  5733  0D75  2D70               	goto	u2005
  5734  0D76                     l3077:	
  5735  0D76  3001               	movlw	1
  5736  0D77  00AB               	movwf	??___awdiv
  5737  0D78  082B               	movf	??___awdiv,w
  5738  0D79  07AC               	addwf	___awdiv@counter,f
  5739  0D7A                     l3079:	
  5740  0D7A  1FA8               	btfss	___awdiv@divisor+1,7
  5741  0D7B  2D7D               	goto	u2011
  5742  0D7C  2D7E               	goto	u2010
  5743  0D7D                     u2011:	
  5744  0D7D  2D6F               	goto	l3075
  5745  0D7E                     u2010:	
  5746  0D7E                     l3081:	
  5747  0D7E  3001               	movlw	1
  5748  0D7F                     u2025:	
  5749  0D7F  1003               	clrc
  5750  0D80  0DAE               	rlf	___awdiv@quotient,f
  5751  0D81  0DAF               	rlf	___awdiv@quotient+1,f
  5752  0D82  3EFF               	addlw	-1
  5753  0D83  1D03               	skipz
  5754  0D84  2D7F               	goto	u2025
  5755  0D85  0828               	movf	___awdiv@divisor+1,w
  5756  0D86  022A               	subwf	___awdiv@dividend+1,w
  5757  0D87  1D03               	skipz
  5758  0D88  2D8B               	goto	u2035
  5759  0D89  0827               	movf	___awdiv@divisor,w
  5760  0D8A  0229               	subwf	___awdiv@dividend,w
  5761  0D8B                     u2035:	
  5762  0D8B  1C03               	skipc
  5763  0D8C  2D8E               	goto	u2031
  5764  0D8D  2D8F               	goto	u2030
  5765  0D8E                     u2031:	
  5766  0D8E  2D96               	goto	l3087
  5767  0D8F                     u2030:	
  5768  0D8F                     l3083:	
  5769  0D8F  0827               	movf	___awdiv@divisor,w
  5770  0D90  02A9               	subwf	___awdiv@dividend,f
  5771  0D91  0828               	movf	___awdiv@divisor+1,w
  5772  0D92  1C03               	skipc
  5773  0D93  03AA               	decf	___awdiv@dividend+1,f
  5774  0D94  02AA               	subwf	___awdiv@dividend+1,f
  5775  0D95                     l3085:	
  5776  0D95  142E               	bsf	___awdiv@quotient,0
  5777  0D96                     l3087:	
  5778  0D96  3001               	movlw	1
  5779  0D97                     u2045:	
  5780  0D97  1003               	clrc
  5781  0D98  0CA8               	rrf	___awdiv@divisor+1,f
  5782  0D99  0CA7               	rrf	___awdiv@divisor,f
  5783  0D9A  3EFF               	addlw	-1
  5784  0D9B  1D03               	skipz
  5785  0D9C  2D97               	goto	u2045
  5786  0D9D                     l3089:	
  5787  0D9D  3001               	movlw	1
  5788  0D9E  02AC               	subwf	___awdiv@counter,f
  5789  0D9F  1D03               	btfss	3,2
  5790  0DA0  2DA2               	goto	u2051
  5791  0DA1  2DA3               	goto	u2050
  5792  0DA2                     u2051:	
  5793  0DA2  2D7E               	goto	l3081
  5794  0DA3                     u2050:	
  5795  0DA3                     l3091:	
  5796  0DA3  082D               	movf	___awdiv@sign,w
  5797  0DA4  1903               	btfsc	3,2
  5798  0DA5  2DA7               	goto	u2061
  5799  0DA6  2DA8               	goto	u2060
  5800  0DA7                     u2061:	
  5801  0DA7  2DAD               	goto	l3095
  5802  0DA8                     u2060:	
  5803  0DA8                     l3093:	
  5804  0DA8  09AE               	comf	___awdiv@quotient,f
  5805  0DA9  09AF               	comf	___awdiv@quotient+1,f
  5806  0DAA  0AAE               	incf	___awdiv@quotient,f
  5807  0DAB  1903               	skipnz
  5808  0DAC  0AAF               	incf	___awdiv@quotient+1,f
  5809  0DAD                     l3095:	
  5810  0DAD  082F               	movf	___awdiv@quotient+1,w
  5811  0DAE  00A8               	movwf	?___awdiv+1
  5812  0DAF  082E               	movf	___awdiv@quotient,w
  5813  0DB0  00A7               	movwf	?___awdiv
  5814  0DB1                     l704:	
  5815  0DB1  0008               	return
  5816  0DB2                     __end_of___awdiv:	
  5817                           
  5818                           	psect	text22
  5819  0F6C                     __ptext22:	
  5820 ;; *************** function _make_custom_chars *****************
  5821 ;; Defined at:
  5822 ;;		line 317 in file "concentration.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;		None
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5836 ;;      Params:         0       0       0       0       0
  5837 ;;      Locals:         0       0       0       0       0
  5838 ;;      Temps:          0       1       0       0       0
  5839 ;;      Totals:         0       1       0       0       0
  5840 ;;Total ram usage:        1 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    4
  5843 ;; This function calls:
  5844 ;;		_lcd_set_custom_char
  5845 ;; This function is called by:
  5846 ;;		_concentration_gameboard_init
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           
  5851                           ;psect for function _make_custom_chars
  5852  0F6C                     _make_custom_chars:	
  5853  0F6C                     l3307:	
  5854                           ;incstack = 0
  5855                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5856                           
  5857                           
  5858                           ;concentration.c: 318:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0
      +                          E, 0x00};;concentration.c: 319:     lcd_set_custom_char(smile, 0x00, gameboard);
  5859  0F6C  304A               	movlw	low (make_custom_chars@smile| (0+32768))
  5860  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5861  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  5862  0F6F  00A8               	movwf	lcd_set_custom_char@data
  5863  0F70  3086               	movlw	high (make_custom_chars@smile| (0+32768))
  5864  0F71  00A9               	movwf	lcd_set_custom_char@data+1
  5865  0F72  01AA               	clrf	lcd_set_custom_char@cg_address
  5866  0F73  3005               	movlw	5
  5867  0F74  00AB               	movwf	lcd_set_custom_char@port
  5868  0F75  3000               	movlw	0
  5869  0F76  00AC               	movwf	lcd_set_custom_char@port+1
  5870  0F77  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5871                           
  5872                           ;concentration.c: 320:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0
      +                          x00, 0x00};;concentration.c: 321:     lcd_set_custom_char(diamond, 0x01, gameboard);
  5873  0F7C  3042               	movlw	low (make_custom_chars@diamond| (0+32768))
  5874  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5875  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  5876  0F7F  00A8               	movwf	lcd_set_custom_char@data
  5877  0F80  3086               	movlw	high (make_custom_chars@diamond| (0+32768))
  5878  0F81  00A9               	movwf	lcd_set_custom_char@data+1
  5879  0F82  01AA               	clrf	lcd_set_custom_char@cg_address
  5880  0F83  0AAA               	incf	lcd_set_custom_char@cg_address,f
  5881  0F84  3005               	movlw	5
  5882  0F85  00AB               	movwf	lcd_set_custom_char@port
  5883  0F86  3000               	movlw	0
  5884  0F87  00AC               	movwf	lcd_set_custom_char@port+1
  5885  0F88  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5886                           
  5887                           ;concentration.c: 322:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x00};;concentration.c: 323:     lcd_set_custom_char(heart, 0x02, gameboard);
  5888  0F8D  303A               	movlw	low (make_custom_chars@heart| (0+32768))
  5889  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  5890  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  5891  0F90  00A8               	movwf	lcd_set_custom_char@data
  5892  0F91  3086               	movlw	high (make_custom_chars@heart| (0+32768))
  5893  0F92  00A9               	movwf	lcd_set_custom_char@data+1
  5894  0F93  3002               	movlw	2
  5895  0F94  00B0               	movwf	??_make_custom_chars
  5896  0F95  0830               	movf	??_make_custom_chars,w
  5897  0F96  00AA               	movwf	lcd_set_custom_char@cg_address
  5898  0F97  3005               	movlw	5
  5899  0F98  00AB               	movwf	lcd_set_custom_char@port
  5900  0F99  3000               	movlw	0
  5901  0F9A  00AC               	movwf	lcd_set_custom_char@port+1
  5902  0F9B  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5903                           
  5904                           ;concentration.c: 324:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x0E};;concentration.c: 325:     lcd_set_custom_char(spade, 0x03, gameboard);
  5905  0FA0  3032               	movlw	low (make_custom_chars@spade| (0+32768))
  5906  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  5907  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  5908  0FA3  00A8               	movwf	lcd_set_custom_char@data
  5909  0FA4  3086               	movlw	high (make_custom_chars@spade| (0+32768))
  5910  0FA5  00A9               	movwf	lcd_set_custom_char@data+1
  5911  0FA6  3003               	movlw	3
  5912  0FA7  00B0               	movwf	??_make_custom_chars
  5913  0FA8  0830               	movf	??_make_custom_chars,w
  5914  0FA9  00AA               	movwf	lcd_set_custom_char@cg_address
  5915  0FAA  3005               	movlw	5
  5916  0FAB  00AB               	movwf	lcd_set_custom_char@port
  5917  0FAC  3000               	movlw	0
  5918  0FAD  00AC               	movwf	lcd_set_custom_char@port+1
  5919  0FAE  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5920                           
  5921                           ;concentration.c: 326:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04
      +                          , 0x0E};;concentration.c: 327:     lcd_set_custom_char(club, 0x04, gameboard);
  5922  0FB3  302A               	movlw	low (make_custom_chars@club| (0+32768))
  5923  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0FB6  00A8               	movwf	lcd_set_custom_char@data
  5926  0FB7  3086               	movlw	high (make_custom_chars@club| (0+32768))
  5927  0FB8  00A9               	movwf	lcd_set_custom_char@data+1
  5928  0FB9  3004               	movlw	4
  5929  0FBA  00B0               	movwf	??_make_custom_chars
  5930  0FBB  0830               	movf	??_make_custom_chars,w
  5931  0FBC  00AA               	movwf	lcd_set_custom_char@cg_address
  5932  0FBD  3005               	movlw	5
  5933  0FBE  00AB               	movwf	lcd_set_custom_char@port
  5934  0FBF  3000               	movlw	0
  5935  0FC0  00AC               	movwf	lcd_set_custom_char@port+1
  5936  0FC1  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5937                           
  5938                           ;concentration.c: 328:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0
      +                          E, 0x00};;concentration.c: 329:     lcd_set_custom_char(skull, 0x05, gameboard);
  5939  0FC6  3022               	movlw	low (make_custom_chars@skull| (0+32768))
  5940  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  5941  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  5942  0FC9  00A8               	movwf	lcd_set_custom_char@data
  5943  0FCA  3086               	movlw	high (make_custom_chars@skull| (0+32768))
  5944  0FCB  00A9               	movwf	lcd_set_custom_char@data+1
  5945  0FCC  3005               	movlw	5
  5946  0FCD  00B0               	movwf	??_make_custom_chars
  5947  0FCE  0830               	movf	??_make_custom_chars,w
  5948  0FCF  00AA               	movwf	lcd_set_custom_char@cg_address
  5949  0FD0  3005               	movlw	5
  5950  0FD1  00AB               	movwf	lcd_set_custom_char@port
  5951  0FD2  3000               	movlw	0
  5952  0FD3  00AC               	movwf	lcd_set_custom_char@port+1
  5953  0FD4  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5954                           
  5955                           ;concentration.c: 330:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 
      +                          0x05};;concentration.c: 331:     lcd_set_custom_char(RH, 0x06, gameboard);
  5956  0FD9  301A               	movlw	low (make_custom_chars@RH| (0+32768))
  5957  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0FDC  00A8               	movwf	lcd_set_custom_char@data
  5960  0FDD  3086               	movlw	high (make_custom_chars@RH| (0+32768))
  5961  0FDE  00A9               	movwf	lcd_set_custom_char@data+1
  5962  0FDF  3006               	movlw	6
  5963  0FE0  00B0               	movwf	??_make_custom_chars
  5964  0FE1  0830               	movf	??_make_custom_chars,w
  5965  0FE2  00AA               	movwf	lcd_set_custom_char@cg_address
  5966  0FE3  3005               	movlw	5
  5967  0FE4  00AB               	movwf	lcd_set_custom_char@port
  5968  0FE5  3000               	movlw	0
  5969  0FE6  00AC               	movwf	lcd_set_custom_char@port+1
  5970  0FE7  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5971                           
  5972                           ;concentration.c: 332:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02,
      +                           0x03};;concentration.c: 333:     lcd_set_custom_char(PIC, 0x07, gameboard);
  5973  0FEC  3012               	movlw	low (make_custom_chars@PIC| (0+32768))
  5974  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  5975  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  5976  0FEF  00A8               	movwf	lcd_set_custom_char@data
  5977  0FF0  3086               	movlw	high (make_custom_chars@PIC| (0+32768))
  5978  0FF1  00A9               	movwf	lcd_set_custom_char@data+1
  5979  0FF2  3007               	movlw	7
  5980  0FF3  00B0               	movwf	??_make_custom_chars
  5981  0FF4  0830               	movf	??_make_custom_chars,w
  5982  0FF5  00AA               	movwf	lcd_set_custom_char@cg_address
  5983  0FF6  3005               	movlw	5
  5984  0FF7  00AB               	movwf	lcd_set_custom_char@port
  5985  0FF8  3000               	movlw	0
  5986  0FF9  00AC               	movwf	lcd_set_custom_char@port+1
  5987  0FFA  120A  158A  243A  120A  158A  	fcall	_lcd_set_custom_char
  5988  0FFF                     l289:	
  5989  0FFF  0008               	return
  5990  1000                     __end_of_make_custom_chars:	
  5991                           
  5992                           	psect	text23
  5993  0C3A                     __ptext23:	
  5994 ;; *************** function _lcd_set_custom_char *****************
  5995 ;; Defined at:
  5996 ;;		line 166 in file "lcd4bits.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  data            2    8[BANK0 ] PTR const unsigned char 
  5999 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  6000 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  6001 ;;  cg_address      1   10[BANK0 ] unsigned char 
  6002 ;;  port            2   11[BANK0 ] PTR unsigned char 
  6003 ;;		 -> PORTA(1), 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  row             1   15[BANK0 ] unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6015 ;;      Params:         0       5       0       0       0
  6016 ;;      Locals:         0       1       0       0       0
  6017 ;;      Temps:          0       2       0       0       0
  6018 ;;      Totals:         0       8       0       0       0
  6019 ;;Total ram usage:        8 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    3
  6022 ;; This function calls:
  6023 ;;		_lcd_write
  6024 ;; This function is called by:
  6025 ;;		_make_custom_chars
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           
  6030                           ;psect for function _lcd_set_custom_char
  6031  0C3A                     _lcd_set_custom_char:	
  6032  0C3A                     l3191:	
  6033                           ;incstack = 0
  6034                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  6035                           
  6036                           
  6037                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  6038  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  6039  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  6040  0C3C  01AF               	clrf	lcd_set_custom_char@row
  6041  0C3D                     l3197:	
  6042                           
  6043                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  6044  0C3D  082A               	movf	lcd_set_custom_char@cg_address,w
  6045  0C3E  00AD               	movwf	??_lcd_set_custom_char
  6046  0C3F  3002               	movlw	2
  6047  0C40                     u2195:	
  6048  0C40  1003               	clrc
  6049  0C41  0DAD               	rlf	??_lcd_set_custom_char,f
  6050  0C42  3EFF               	addlw	-1
  6051  0C43  1D03               	skipz
  6052  0C44  2C40               	goto	u2195
  6053  0C45  1003               	clrc
  6054  0C46  0D2D               	rlf	??_lcd_set_custom_char,w
  6055  0C47  042F               	iorwf	lcd_set_custom_char@row,w
  6056  0C48  3840               	iorlw	64
  6057  0C49  00AE               	movwf	??_lcd_set_custom_char+1
  6058  0C4A  082E               	movf	??_lcd_set_custom_char+1,w
  6059  0C4B  00A2               	movwf	lcd_write@CmdChar
  6060  0C4C  082B               	movf	lcd_set_custom_char@port,w
  6061  0C4D  00A3               	movwf	lcd_write@port
  6062  0C4E  082C               	movf	lcd_set_custom_char@port+1,w
  6063  0C4F  00A4               	movwf	lcd_write@port+1
  6064  0C50  3000               	movlw	0
  6065  0C51  120A  158A  2399  120A  158A  	fcall	_lcd_write
  6066  0C56                     l3199:	
  6067                           
  6068                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  6069  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0C58  0829               	movf	lcd_set_custom_char@data+1,w
  6072  0C59  00FF               	movwf	btemp+1
  6073  0C5A  0828               	movf	lcd_set_custom_char@data,w
  6074  0C5B  0084               	movwf	4
  6075  0C5C  120A  118A  2600  120A  158A  	fcall	stringtab
  6076  0C61  00AD               	movwf	??_lcd_set_custom_char
  6077  0C62  082D               	movf	??_lcd_set_custom_char,w
  6078  0C63  00A2               	movwf	lcd_write@CmdChar
  6079  0C64  082B               	movf	lcd_set_custom_char@port,w
  6080  0C65  00A3               	movwf	lcd_write@port
  6081  0C66  082C               	movf	lcd_set_custom_char@port+1,w
  6082  0C67  00A4               	movwf	lcd_write@port+1
  6083  0C68  3010               	movlw	16
  6084  0C69  120A  158A  2399  120A  158A  	fcall	_lcd_write
  6085  0C6E                     l3201:	
  6086                           
  6087                           ;lcd4bits.c: 171:         *data++;
  6088  0C6E  3001               	movlw	1
  6089  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  6090  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  6091  0C71  07A8               	addwf	lcd_set_custom_char@data,f
  6092  0C72  1803               	skipnc
  6093  0C73  0AA9               	incf	lcd_set_custom_char@data+1,f
  6094  0C74  3000               	movlw	0
  6095  0C75  07A9               	addwf	lcd_set_custom_char@data+1,f
  6096  0C76                     l3203:	
  6097                           
  6098                           ;lcd4bits.c: 172:     }
  6099  0C76  3001               	movlw	1
  6100  0C77  00AD               	movwf	??_lcd_set_custom_char
  6101  0C78  082D               	movf	??_lcd_set_custom_char,w
  6102  0C79  07AF               	addwf	lcd_set_custom_char@row,f
  6103  0C7A                     l3205:	
  6104  0C7A  3008               	movlw	8
  6105  0C7B  022F               	subwf	lcd_set_custom_char@row,w
  6106  0C7C  1C03               	skipc
  6107  0C7D  2C7F               	goto	u2201
  6108  0C7E  2C80               	goto	u2200
  6109  0C7F                     u2201:	
  6110  0C7F  2C3D               	goto	l3197
  6111  0C80                     u2200:	
  6112  0C80                     l3207:	
  6113                           
  6114                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  6115  0C80  3080               	movlw	128
  6116  0C81  00AD               	movwf	??_lcd_set_custom_char
  6117  0C82  082D               	movf	??_lcd_set_custom_char,w
  6118  0C83  00A2               	movwf	lcd_write@CmdChar
  6119  0C84  082B               	movf	lcd_set_custom_char@port,w
  6120  0C85  00A3               	movwf	lcd_write@port
  6121  0C86  082C               	movf	lcd_set_custom_char@port+1,w
  6122  0C87  00A4               	movwf	lcd_write@port+1
  6123  0C88  3000               	movlw	0
  6124  0C89  120A  158A  2399  120A  158A  	fcall	_lcd_write
  6125  0C8E                     l465:	
  6126  0C8E  0008               	return
  6127  0C8F                     __end_of_lcd_set_custom_char:	
  6128                           
  6129                           	psect	text24
  6130  09C0                     __ptext24:	
  6131 ;; *************** function _lcd_goto *****************
  6132 ;; Defined at:
  6133 ;;		line 146 in file "lcd4bits.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  position        1    wreg     unsigned char 
  6136 ;;  port            2    8[BANK0 ] PTR unsigned char 
  6137 ;;		 -> PORTD(1), PORTA(1), 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  position        1   11[BANK0 ] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6149 ;;      Params:         0       2       0       0       0
  6150 ;;      Locals:         0       1       0       0       0
  6151 ;;      Temps:          0       1       0       0       0
  6152 ;;      Totals:         0       4       0       0       0
  6153 ;;Total ram usage:        4 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    3
  6156 ;; This function calls:
  6157 ;;		_DelayMs
  6158 ;;		_lcd_write
  6159 ;; This function is called by:
  6160 ;;		_main
  6161 ;;		_end_screen
  6162 ;;		_startup
  6163 ;;		_display_scoreboard
  6164 ;;		_display_gameboard
  6165 ;;		_concentration_gameboard_init
  6166 ;;		_update_cursor
  6167 ;;		_toggle_cursor
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           
  6172                           ;psect for function _lcd_goto
  6173  09C0                     _lcd_goto:	
  6174                           
  6175                           ;incstack = 0
  6176                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6177                           ;lcd_goto@position stored from wreg
  6178  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  6179  09C1  1303               	bcf	3,6	;RP1=0, select bank0
  6180  09C2  00AB               	movwf	lcd_goto@position
  6181  09C3                     l3035:	
  6182                           
  6183                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  6184  09C3  082B               	movf	lcd_goto@position,w
  6185  09C4  3E80               	addlw	128
  6186  09C5  00AA               	movwf	??_lcd_goto
  6187  09C6  082A               	movf	??_lcd_goto,w
  6188  09C7  00A2               	movwf	lcd_write@CmdChar
  6189  09C8  0828               	movf	lcd_goto@port,w
  6190  09C9  00A3               	movwf	lcd_write@port
  6191  09CA  0829               	movf	lcd_goto@port+1,w
  6192  09CB  00A4               	movwf	lcd_write@port+1
  6193  09CC  3000               	movlw	0
  6194  09CD  120A  158A  2399  120A  158A  	fcall	_lcd_write
  6195  09D2                     l3037:	
  6196                           
  6197                           ;lcd4bits.c: 149:     DelayMs(2);
  6198  09D2  3002               	movlw	2
  6199  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  6200  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  6201  09D5  00A0               	movwf	DelayMs@millis
  6202  09D6  3000               	movlw	0
  6203  09D7  00A1               	movwf	DelayMs@millis+1
  6204  09D8  120A  158A  218D  120A  158A  	fcall	_DelayMs
  6205  09DD                     l457:	
  6206  09DD  0008               	return
  6207  09DE                     __end_of_lcd_goto:	
  6208                           
  6209                           	psect	text25
  6210  09A6                     __ptext25:	
  6211 ;; *************** function _lcd_clear *****************
  6212 ;; Defined at:
  6213 ;;		line 123 in file "lcd4bits.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  port            2    8[BANK0 ] PTR unsigned char 
  6216 ;;		 -> PORTD(1), PORTA(1), 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6228 ;;      Params:         0       2       0       0       0
  6229 ;;      Locals:         0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0
  6231 ;;      Totals:         0       2       0       0       0
  6232 ;;Total ram usage:        2 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    3
  6235 ;; This function calls:
  6236 ;;		_DelayMs
  6237 ;;		_lcd_write
  6238 ;; This function is called by:
  6239 ;;		_end_screen
  6240 ;;		_startup
  6241 ;;		_display_gameboard
  6242 ;;		_concentration_gameboard_init
  6243 ;;		_lcd_init
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           
  6248                           ;psect for function _lcd_clear
  6249  09A6                     _lcd_clear:	
  6250  09A6                     l3041:	
  6251                           ;incstack = 0
  6252                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6253                           
  6254                           
  6255                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  6256  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  6257  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  6258  09A8  01A2               	clrf	lcd_write@CmdChar
  6259  09A9  0AA2               	incf	lcd_write@CmdChar,f
  6260  09AA  0828               	movf	lcd_clear@port,w
  6261  09AB  00A3               	movwf	lcd_write@port
  6262  09AC  0829               	movf	lcd_clear@port+1,w
  6263  09AD  00A4               	movwf	lcd_write@port+1
  6264  09AE  3000               	movlw	0
  6265  09AF  120A  158A  2399  120A  158A  	fcall	_lcd_write
  6266  09B4                     l3043:	
  6267                           
  6268                           ;lcd4bits.c: 125:     DelayMs(2);
  6269  09B4  3002               	movlw	2
  6270  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  6271  09B6  1303               	bcf	3,6	;RP1=0, select bank0
  6272  09B7  00A0               	movwf	DelayMs@millis
  6273  09B8  3000               	movlw	0
  6274  09B9  00A1               	movwf	DelayMs@millis+1
  6275  09BA  120A  158A  218D  120A  158A  	fcall	_DelayMs
  6276  09BF                     l445:	
  6277  09BF  0008               	return
  6278  09C0                     __end_of_lcd_clear:	
  6279                           
  6280                           	psect	text26
  6281  0B99                     __ptext26:	
  6282 ;; *************** function _lcd_write *****************
  6283 ;; Defined at:
  6284 ;;		line 110 in file "lcd4bits.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  mode            1    wreg     unsigned char 
  6287 ;;  CmdChar         1    2[BANK0 ] unsigned char 
  6288 ;;  port            2    3[BANK0 ] PTR unsigned char 
  6289 ;;		 -> PORTD(1), PORTA(1), 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  mode            1    7[BANK0 ] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6301 ;;      Params:         0       3       0       0       0
  6302 ;;      Locals:         0       1       0       0       0
  6303 ;;      Temps:          0       2       0       0       0
  6304 ;;      Totals:         0       6       0       0       0
  6305 ;;Total ram usage:        6 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    2
  6308 ;; This function calls:
  6309 ;;		_Delay20us
  6310 ;; This function is called by:
  6311 ;;		_lcd_clear
  6312 ;;		_lcd_puts
  6313 ;;		_lcd_putch
  6314 ;;		_lcd_goto
  6315 ;;		_lcd_init
  6316 ;;		_lcd_set_custom_char
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function _lcd_write
  6322  0B99                     _lcd_write:	
  6323                           
  6324                           ;incstack = 0
  6325                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6326                           ;lcd_write@mode stored from wreg
  6327  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  6328  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  6329  0B9B  00A7               	movwf	lcd_write@mode
  6330  0B9C                     l3017:	
  6331                           
  6332                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  6333  0B9C  0822               	movf	lcd_write@CmdChar,w
  6334  0B9D  00A5               	movwf	??_lcd_write
  6335  0B9E  3004               	movlw	4
  6336  0B9F                     u1945:	
  6337  0B9F  1003               	clrc
  6338  0BA0  0CA5               	rrf	??_lcd_write,f
  6339  0BA1  3EFF               	addlw	-1
  6340  0BA2  1D03               	skipz
  6341  0BA3  2B9F               	goto	u1945
  6342  0BA4  0825               	movf	??_lcd_write,w
  6343  0BA5  3E20               	addlw	32
  6344  0BA6  0427               	iorwf	lcd_write@mode,w
  6345  0BA7  00A6               	movwf	??_lcd_write+1
  6346  0BA8  0823               	movf	lcd_write@port,w
  6347  0BA9  0084               	movwf	4
  6348  0BAA  1783               	bsf	3,7
  6349  0BAB  1C24               	btfss	lcd_write@port+1,0
  6350  0BAC  1383               	bcf	3,7
  6351  0BAD  0826               	movf	??_lcd_write+1,w
  6352  0BAE  0080               	movwf	0
  6353  0BAF                     l3019:	
  6354                           
  6355                           ;lcd4bits.c: 112:     Delay20us();
  6356  0BAF  120A  158A  215A  120A  158A  	fcall	_Delay20us
  6357  0BB4                     l3021:	
  6358                           
  6359                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  6360  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  6361  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  6362  0BB6  0823               	movf	lcd_write@port,w
  6363  0BB7  0084               	movwf	4
  6364  0BB8  1783               	bsf	3,7
  6365  0BB9  1C24               	btfss	lcd_write@port+1,0
  6366  0BBA  1383               	bcf	3,7
  6367  0BBB  0800               	movf	0,w
  6368  0BBC  39DF               	andlw	223
  6369  0BBD  00A5               	movwf	??_lcd_write
  6370  0BBE  0823               	movf	lcd_write@port,w
  6371  0BBF  0084               	movwf	4
  6372  0BC0  1783               	bsf	3,7
  6373  0BC1  1C24               	btfss	lcd_write@port+1,0
  6374  0BC2  1383               	bcf	3,7
  6375  0BC3  0825               	movf	??_lcd_write,w
  6376  0BC4  0080               	movwf	0
  6377  0BC5                     l3023:	
  6378                           
  6379                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  6380  0BC5  0822               	movf	lcd_write@CmdChar,w
  6381  0BC6  390F               	andlw	15
  6382  0BC7  3E20               	addlw	32
  6383  0BC8  0427               	iorwf	lcd_write@mode,w
  6384  0BC9  00A5               	movwf	??_lcd_write
  6385  0BCA  0823               	movf	lcd_write@port,w
  6386  0BCB  0084               	movwf	4
  6387  0BCC  1783               	bsf	3,7
  6388  0BCD  1C24               	btfss	lcd_write@port+1,0
  6389  0BCE  1383               	bcf	3,7
  6390  0BCF  0825               	movf	??_lcd_write,w
  6391  0BD0  0080               	movwf	0
  6392  0BD1                     l3025:	
  6393                           
  6394                           ;lcd4bits.c: 116:     Delay20us();
  6395  0BD1  120A  158A  215A  120A  158A  	fcall	_Delay20us
  6396                           
  6397                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  6398  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  6400  0BD8  0823               	movf	lcd_write@port,w
  6401  0BD9  0084               	movwf	4
  6402  0BDA  1783               	bsf	3,7
  6403  0BDB  1C24               	btfss	lcd_write@port+1,0
  6404  0BDC  1383               	bcf	3,7
  6405  0BDD  0800               	movf	0,w
  6406  0BDE  39DF               	andlw	223
  6407  0BDF  00A5               	movwf	??_lcd_write
  6408  0BE0  0823               	movf	lcd_write@port,w
  6409  0BE1  0084               	movwf	4
  6410  0BE2  1783               	bsf	3,7
  6411  0BE3  1C24               	btfss	lcd_write@port+1,0
  6412  0BE4  1383               	bcf	3,7
  6413  0BE5  0825               	movf	??_lcd_write,w
  6414  0BE6  0080               	movwf	0
  6415  0BE7                     l442:	
  6416  0BE7  0008               	return
  6417  0BE8                     __end_of_lcd_write:	
  6418                           
  6419                           	psect	text27
  6420  095A                     __ptext27:	
  6421 ;; *************** function _Delay20us *****************
  6422 ;; Defined at:
  6423 ;;		line 99 in file "lcd4bits.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  next            1    1[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6437 ;;      Params:         0       0       0       0       0
  6438 ;;      Locals:         0       1       0       0       0
  6439 ;;      Temps:          0       1       0       0       0
  6440 ;;      Totals:         0       2       0       0       0
  6441 ;;Total ram usage:        2 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    1
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_lcd_write
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           
  6452                           ;psect for function _Delay20us
  6453  095A                     _Delay20us:	
  6454  095A                     l2997:	
  6455                           ;incstack = 0
  6456                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  6457                           
  6458                           
  6459                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  6460  095A  1283               	bcf	3,5	;RP0=0, select bank0
  6461  095B  1303               	bcf	3,6	;RP1=0, select bank0
  6462  095C  01A1               	clrf	Delay20us@next
  6463  095D                     l3003:	
  6464  095D  3001               	movlw	1
  6465  095E  00A0               	movwf	??_Delay20us
  6466  095F  0820               	movf	??_Delay20us,w
  6467  0960  07A1               	addwf	Delay20us@next,f
  6468  0961                     l3005:	
  6469  0961  3008               	movlw	8
  6470  0962  0221               	subwf	Delay20us@next,w
  6471  0963  1C03               	skipc
  6472  0964  2966               	goto	u1911
  6473  0965  2967               	goto	u1910
  6474  0966                     u1911:	
  6475  0966  295D               	goto	l3003
  6476  0967                     u1910:	
  6477  0967                     l439:	
  6478  0967  0008               	return
  6479  0968                     __end_of_Delay20us:	
  6480                           
  6481                           	psect	text28
  6482  098D                     __ptext28:	
  6483 ;; *************** function _DelayMs *****************
  6484 ;; Defined at:
  6485 ;;		line 86 in file "lcd4bits.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  millis          2    0[BANK0 ] unsigned int 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2, status,0
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6499 ;;      Params:         0       2       0       0       0
  6500 ;;      Locals:         0       0       0       0       0
  6501 ;;      Temps:          0       0       0       0       0
  6502 ;;      Totals:         0       2       0       0       0
  6503 ;;Total ram usage:        2 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    1
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_main
  6510 ;;		_end_screen
  6511 ;;		_game_end
  6512 ;;		_startup
  6513 ;;		_randomize_gameboard
  6514 ;;		_check_for_match
  6515 ;;		_update_gameboard_from_input
  6516 ;;		_lcd_clear
  6517 ;;		_lcd_goto
  6518 ;;		_lcd_init
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function _DelayMs
  6524  098D                     _DelayMs:	
  6525  098D                     l3007:	
  6526                           ;incstack = 0
  6527                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  6528                           
  6529                           
  6530                           ;lcd4bits.c: 87:     while (millis != 0) {
  6531  098D  299D               	goto	l3015
  6532  098E                     l3009:	
  6533                           
  6534                           ;lcd4bits.c: 88:         TMR0 = 100;
  6535  098E  3064               	movlw	100
  6536  098F  0081               	movwf	1	;volatile
  6537  0990                     l3011:	
  6538                           
  6539                           ;lcd4bits.c: 89:         T0IF = 0;
  6540  0990  110B               	bcf	11,2	;volatile
  6541  0991                     l430:	
  6542                           ;lcd4bits.c: 90:         while(T0IF == 0);
  6543                           
  6544  0991  1D0B               	btfss	11,2	;volatile
  6545  0992  2994               	goto	u1921
  6546  0993  2995               	goto	u1920
  6547  0994                     u1921:	
  6548  0994  2991               	goto	l430
  6549  0995                     u1920:	
  6550  0995                     l3013:	
  6551                           
  6552                           ;lcd4bits.c: 91:         millis--;
  6553  0995  3001               	movlw	1
  6554  0996  1283               	bcf	3,5	;RP0=0, select bank0
  6555  0997  1303               	bcf	3,6	;RP1=0, select bank0
  6556  0998  02A0               	subwf	DelayMs@millis,f
  6557  0999  3000               	movlw	0
  6558  099A  1C03               	skipc
  6559  099B  03A1               	decf	DelayMs@millis+1,f
  6560  099C  02A1               	subwf	DelayMs@millis+1,f
  6561  099D                     l3015:	
  6562                           
  6563                           ;lcd4bits.c: 87:     while (millis != 0) {
  6564  099D  1283               	bcf	3,5	;RP0=0, select bank0
  6565  099E  1303               	bcf	3,6	;RP1=0, select bank0
  6566  099F  0820               	movf	DelayMs@millis,w
  6567  09A0  0421               	iorwf	DelayMs@millis+1,w
  6568  09A1  1D03               	btfss	3,2
  6569  09A2  29A4               	goto	u1931
  6570  09A3  29A5               	goto	u1930
  6571  09A4                     u1931:	
  6572  09A4  298E               	goto	l3009
  6573  09A5                     u1930:	
  6574  09A5                     l434:	
  6575  09A5  0008               	return
  6576  09A6                     __end_of_DelayMs:	
  6577                           
  6578                           	psect	text29
  6579  0968                     __ptext29:	
  6580 ;; *************** function _get_current_char *****************
  6581 ;; Defined at:
  6582 ;;		line 531 in file "concentration.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6596 ;;      Params:         0       0       0       0       0
  6597 ;;      Locals:         0       0       0       0       0
  6598 ;;      Temps:          0       1       0       0       0
  6599 ;;      Totals:         0       1       0       0       0
  6600 ;;Total ram usage:        1 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    2
  6603 ;; This function calls:
  6604 ;;		_get_cursor_index
  6605 ;; This function is called by:
  6606 ;;		_concentration_gameboard_init
  6607 ;;		_update_cursor
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           
  6612                           ;psect for function _get_current_char
  6613  0968                     _get_current_char:	
  6614  0968                     l3209:	
  6615                           ;incstack = 0
  6616                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6617                           
  6618                           
  6619                           ;concentration.c: 532:     current_char = visible[get_cursor_index(cursor_pos)];
  6620  0968  1283               	bcf	3,5	;RP0=0, select bank0
  6621  0969  1303               	bcf	3,6	;RP1=0, select bank0
  6622  096A  0869               	movf	_cursor_pos,w
  6623  096B  120A  158A  214E  120A  158A  	fcall	_get_cursor_index
  6624  0970  3EA0               	addlw	(low (_visible| 0))& (0+255)
  6625  0971  0084               	movwf	4
  6626  0972  1383               	bcf	3,7	;select IRP bank1
  6627  0973  0800               	movf	0,w
  6628  0974  1283               	bcf	3,5	;RP0=0, select bank0
  6629  0975  1303               	bcf	3,6	;RP1=0, select bank0
  6630  0976  00A1               	movwf	??_get_current_char
  6631  0977  0821               	movf	??_get_current_char,w
  6632  0978  00E8               	movwf	_current_char
  6633  0979                     l381:	
  6634  0979  0008               	return
  6635  097A                     __end_of_get_current_char:	
  6636                           
  6637                           	psect	text30
  6638  094E                     __ptext30:	
  6639 ;; *************** function _get_cursor_index *****************
  6640 ;; Defined at:
  6641 ;;		line 352 in file "concentration.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  cursor          1    wreg     unsigned char 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  cursor          1    0[BANK0 ] unsigned char 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      unsigned char 
  6648 ;; Registers used:
  6649 ;;		wreg, status,2, status,0
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6655 ;;      Params:         0       0       0       0       0
  6656 ;;      Locals:         0       1       0       0       0
  6657 ;;      Temps:          0       0       0       0       0
  6658 ;;      Totals:         0       1       0       0       0
  6659 ;;Total ram usage:        1 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_check_for_match
  6666 ;;		_update_gameboard_from_input
  6667 ;;		_get_current_char
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function _get_cursor_index
  6673  094E                     _get_cursor_index:	
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  6677                           ;get_cursor_index@cursor stored from wreg
  6678  094E  1283               	bcf	3,5	;RP0=0, select bank0
  6679  094F  1303               	bcf	3,6	;RP1=0, select bank0
  6680  0950  00A0               	movwf	get_cursor_index@cursor
  6681  0951                     l3045:	
  6682                           
  6683                           ;concentration.c: 353:     if(cursor&0x40) {
  6684  0951  1F20               	btfss	get_cursor_index@cursor,6
  6685  0952  2954               	goto	u1961
  6686  0953  2955               	goto	u1960
  6687  0954                     u1961:	
  6688  0954  2958               	goto	l3051
  6689  0955                     u1960:	
  6690  0955                     l3047:	
  6691                           
  6692                           ;concentration.c: 354:         return (cursor-0x30);
  6693  0955  0820               	movf	get_cursor_index@cursor,w
  6694  0956  3ED0               	addlw	208
  6695  0957  2959               	goto	l298
  6696  0958                     l3051:	
  6697                           
  6698                           ;concentration.c: 356:     return cursor;
  6699  0958  0820               	movf	get_cursor_index@cursor,w
  6700  0959                     l298:	
  6701  0959  0008               	return
  6702  095A                     __end_of_get_cursor_index:	
  6703                           
  6704                           	psect	text31
  6705  0ED8                     __ptext31:	
  6706 ;; *************** function _interrupt_handler *****************
  6707 ;; Defined at:
  6708 ;;		line 590 in file "concentration.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  current_anal    1    5[COMMON] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6722 ;;      Params:         0       0       0       0       0
  6723 ;;      Locals:         1       0       0       0       0
  6724 ;;      Temps:          5       0       0       0       0
  6725 ;;      Totals:         6       0       0       0       0
  6726 ;;Total ram usage:        6 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		Interrupt level 1
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _interrupt_handler
  6737  0ED8                     _interrupt_handler:	
  6738  0ED8                     i1l2797:	
  6739                           
  6740                           ;concentration.c: 591:     if((CCP2IF==1) && (CCP2IE==1)) {
  6741  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  6742  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  6743  0EDA  1C0D               	btfss	13,0	;volatile
  6744  0EDB  2EDD               	goto	u183_21
  6745  0EDC  2EDE               	goto	u183_20
  6746  0EDD                     u183_21:	
  6747  0EDD  2EF4               	goto	i1l398
  6748  0EDE                     u183_20:	
  6749  0EDE                     i1l2799:	
  6750  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  6751  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  6752  0EE0  1C0D               	btfss	13,0	;volatile
  6753  0EE1  2EE3               	goto	u184_21
  6754  0EE2  2EE4               	goto	u184_20
  6755  0EE3                     u184_21:	
  6756  0EE3  2EF4               	goto	i1l398
  6757  0EE4                     u184_20:	
  6758  0EE4                     i1l2801:	
  6759                           
  6760                           ;concentration.c: 592:         CCPR2 += tone_delay;
  6761  0EE4  0876               	movf	_tone_delay,w	;volatile
  6762  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  6763  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  6764  0EE7  079B               	addwf	27,f	;volatile
  6765  0EE8  1803               	skipnc
  6766  0EE9  0A9C               	incf	28,f	;volatile
  6767  0EEA  0877               	movf	_tone_delay+1,w	;volatile
  6768  0EEB  079C               	addwf	28,f	;volatile
  6769  0EEC                     i1l2803:	
  6770                           
  6771                           ;concentration.c: 593:         if(CCP2M0 == 1) {
  6772  0EEC  1C1D               	btfss	29,0	;volatile
  6773  0EED  2EEF               	goto	u185_21
  6774  0EEE  2EF0               	goto	u185_20
  6775  0EEF                     u185_21:	
  6776  0EEF  2EF2               	goto	i1l399
  6777  0EF0                     u185_20:	
  6778  0EF0                     i1l2805:	
  6779                           
  6780                           ;concentration.c: 594:             CCP2M0 = 0;
  6781  0EF0  101D               	bcf	29,0	;volatile
  6782                           
  6783                           ;concentration.c: 595:         } else {
  6784  0EF1  2EF3               	goto	i1l400
  6785  0EF2                     i1l399:	
  6786                           
  6787                           ;concentration.c: 596:             CCP2M0 = 1;
  6788  0EF2  141D               	bsf	29,0	;volatile
  6789  0EF3                     i1l400:	
  6790                           ;concentration.c: 597:         }
  6791                           
  6792                           
  6793                           ;concentration.c: 598:         CCP2IF = 0;
  6794  0EF3  100D               	bcf	13,0	;volatile
  6795  0EF4                     i1l398:	
  6796                           ;concentration.c: 599:     }
  6797                           
  6798                           
  6799                           ;concentration.c: 600:     if(ADIF) {
  6800  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  6801  0EF5  1F0C               	btfss	12,6	;volatile
  6802  0EF6  2EF8               	goto	u186_21
  6803  0EF7  2EF9               	goto	u186_20
  6804  0EF8                     u186_21:	
  6805  0EF8  2F55               	goto	i1l401
  6806  0EF9                     u186_20:	
  6807  0EF9                     i1l2807:	
  6808                           
  6809                           ;concentration.c: 601:         char current_analog = ADCON0&0x3C;
  6810  0EF9  081F               	movf	31,w	;volatile
  6811  0EFA  393C               	andlw	60
  6812  0EFB  00F0               	movwf	??_interrupt_handler
  6813  0EFC  0870               	movf	??_interrupt_handler,w
  6814  0EFD  00F5               	movwf	interrupt_handler@current_analog
  6815  0EFE                     i1l2809:	
  6816                           
  6817                           ;concentration.c: 602:         ADCON0 &= 0xC3;
  6818  0EFE  30C3               	movlw	195
  6819  0EFF  00F0               	movwf	??_interrupt_handler
  6820  0F00  0870               	movf	??_interrupt_handler,w
  6821  0F01  059F               	andwf	31,f	;volatile
  6822  0F02                     i1l2811:	
  6823                           
  6824                           ;concentration.c: 603:         if(((current_analog) == 0x2C)||((current_analog) == 0x28)
      +                          ) {
  6825  0F02  302C               	movlw	44
  6826  0F03  0675               	xorwf	interrupt_handler@current_analog,w
  6827  0F04  1903               	btfsc	3,2
  6828  0F05  2F07               	goto	u187_21
  6829  0F06  2F08               	goto	u187_20
  6830  0F07                     u187_21:	
  6831  0F07  2F0E               	goto	i1l2815
  6832  0F08                     u187_20:	
  6833  0F08                     i1l2813:	
  6834  0F08  3028               	movlw	40
  6835  0F09  0675               	xorwf	interrupt_handler@current_analog,w
  6836  0F0A  1D03               	btfss	3,2
  6837  0F0B  2F0D               	goto	u188_21
  6838  0F0C  2F0E               	goto	u188_20
  6839  0F0D                     u188_21:	
  6840  0F0D  2F31               	goto	i1l2825
  6841  0F0E                     u188_20:	
  6842  0F0E                     i1l2815:	
  6843                           
  6844                           ;concentration.c: 604:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  6845  0F0E  081E               	movf	30,w	;volatile
  6846  0F0F  00DE               	movwf	_joystick_x_pos+1
  6847  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  6848  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  6849  0F12  081E               	movf	30,w	;volatile
  6850  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  6851  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  6852  0F15  00DD               	movwf	_joystick_x_pos
  6853                           
  6854                           ;concentration.c: 605:             switch(current_player) {
  6855  0F16  2F21               	goto	i1l2823
  6856  0F17                     i1l2817:	
  6857                           
  6858                           ;concentration.c: 607:                     ADCON0 |= 0x24;
  6859  0F17  3024               	movlw	36
  6860  0F18  00F0               	movwf	??_interrupt_handler
  6861  0F19  0870               	movf	??_interrupt_handler,w
  6862  0F1A  049F               	iorwf	31,f	;volatile
  6863                           
  6864                           ;concentration.c: 608:                     break;
  6865  0F1B  2F54               	goto	i1l409
  6866  0F1C                     i1l2819:	
  6867                           
  6868                           ;concentration.c: 610:                     ADCON0 |= 0x30;
  6869  0F1C  3030               	movlw	48
  6870  0F1D  00F0               	movwf	??_interrupt_handler
  6871  0F1E  0870               	movf	??_interrupt_handler,w
  6872  0F1F  049F               	iorwf	31,f	;volatile
  6873                           
  6874                           ;concentration.c: 611:                     break;
  6875  0F20  2F54               	goto	i1l409
  6876  0F21                     i1l2823:	
  6877  0F21  0860               	movf	_current_player,w
  6878  0F22  00F0               	movwf	??_interrupt_handler
  6879  0F23  01F1               	clrf	??_interrupt_handler+1
  6880                           
  6881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6882                           ; Switch size 1, requested type "simple"
  6883                           ; Number of cases is 1, Range of values is 0 to 0
  6884                           ; switch strategies available:
  6885                           ; Name         Instructions Cycles
  6886                           ; simple_byte            4     3 (average)
  6887                           ; direct_byte           11     8 (fixed)
  6888                           ; jumptable            260     6 (fixed)
  6889                           ;	Chosen strategy is simple_byte
  6890  0F24  0871               	movf	??_interrupt_handler+1,w
  6891  0F25  3A00               	xorlw	0	; case 0
  6892  0F26  1903               	skipnz
  6893  0F27  2F29               	goto	i1l3909
  6894  0F28  2F54               	goto	i1l409
  6895  0F29                     i1l3909:	
  6896                           
  6897                           ; Switch size 1, requested type "simple"
  6898                           ; Number of cases is 2, Range of values is 0 to 1
  6899                           ; switch strategies available:
  6900                           ; Name         Instructions Cycles
  6901                           ; simple_byte            7     4 (average)
  6902                           ; direct_byte           14     8 (fixed)
  6903                           ; jumptable            260     6 (fixed)
  6904                           ;	Chosen strategy is simple_byte
  6905  0F29  0870               	movf	??_interrupt_handler,w
  6906  0F2A  3A00               	xorlw	0	; case 0
  6907  0F2B  1903               	skipnz
  6908  0F2C  2F17               	goto	i1l2817
  6909  0F2D  3A01               	xorlw	1	; case 1
  6910  0F2E  1903               	skipnz
  6911  0F2F  2F1C               	goto	i1l2819
  6912  0F30  2F54               	goto	i1l409
  6913  0F31                     i1l2825:	
  6914                           
  6915                           ;concentration.c: 614:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  6916  0F31  081E               	movf	30,w	;volatile
  6917  0F32  00DC               	movwf	_joystick_y_pos+1
  6918  0F33  1683               	bsf	3,5	;RP0=1, select bank1
  6919  0F34  1303               	bcf	3,6	;RP1=0, select bank1
  6920  0F35  081E               	movf	30,w	;volatile
  6921  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  6922  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  6923  0F38  00DB               	movwf	_joystick_y_pos
  6924                           
  6925                           ;concentration.c: 615:             switch(current_player) {
  6926  0F39  2F44               	goto	i1l2833
  6927  0F3A                     i1l2827:	
  6928                           
  6929                           ;concentration.c: 617:                     ADCON0 |= 0x2C;
  6930  0F3A  302C               	movlw	44
  6931  0F3B  00F0               	movwf	??_interrupt_handler
  6932  0F3C  0870               	movf	??_interrupt_handler,w
  6933  0F3D  049F               	iorwf	31,f	;volatile
  6934                           
  6935                           ;concentration.c: 618:                     break;
  6936  0F3E  2F54               	goto	i1l409
  6937  0F3F                     i1l2829:	
  6938                           
  6939                           ;concentration.c: 620:                     ADCON0 |= 0x28;
  6940  0F3F  3028               	movlw	40
  6941  0F40  00F0               	movwf	??_interrupt_handler
  6942  0F41  0870               	movf	??_interrupt_handler,w
  6943  0F42  049F               	iorwf	31,f	;volatile
  6944                           
  6945                           ;concentration.c: 621:                     break;
  6946  0F43  2F54               	goto	i1l409
  6947  0F44                     i1l2833:	
  6948  0F44  0860               	movf	_current_player,w
  6949  0F45  00F0               	movwf	??_interrupt_handler
  6950  0F46  01F1               	clrf	??_interrupt_handler+1
  6951                           
  6952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6953                           ; Switch size 1, requested type "simple"
  6954                           ; Number of cases is 1, Range of values is 0 to 0
  6955                           ; switch strategies available:
  6956                           ; Name         Instructions Cycles
  6957                           ; simple_byte            4     3 (average)
  6958                           ; direct_byte           11     8 (fixed)
  6959                           ; jumptable            260     6 (fixed)
  6960                           ;	Chosen strategy is simple_byte
  6961  0F47  0871               	movf	??_interrupt_handler+1,w
  6962  0F48  3A00               	xorlw	0	; case 0
  6963  0F49  1903               	skipnz
  6964  0F4A  2F4C               	goto	i1l3911
  6965  0F4B  2F54               	goto	i1l409
  6966  0F4C                     i1l3911:	
  6967                           
  6968                           ; Switch size 1, requested type "simple"
  6969                           ; Number of cases is 2, Range of values is 0 to 1
  6970                           ; switch strategies available:
  6971                           ; Name         Instructions Cycles
  6972                           ; simple_byte            7     4 (average)
  6973                           ; direct_byte           14     8 (fixed)
  6974                           ; jumptable            260     6 (fixed)
  6975                           ;	Chosen strategy is simple_byte
  6976  0F4C  0870               	movf	??_interrupt_handler,w
  6977  0F4D  3A00               	xorlw	0	; case 0
  6978  0F4E  1903               	skipnz
  6979  0F4F  2F3A               	goto	i1l2827
  6980  0F50  3A01               	xorlw	1	; case 1
  6981  0F51  1903               	skipnz
  6982  0F52  2F3F               	goto	i1l2829
  6983  0F53  2F54               	goto	i1l409
  6984  0F54                     i1l409:	
  6985                           ;concentration.c: 623:         }
  6986                           
  6987                           
  6988                           ;concentration.c: 624:         ADIF = 0;
  6989  0F54  130C               	bcf	12,6	;volatile
  6990  0F55                     i1l401:	
  6991                           ;concentration.c: 625:     }
  6992                           
  6993                           
  6994                           ;concentration.c: 626:     if(TMR2IF) {
  6995  0F55  1C8C               	btfss	12,1	;volatile
  6996  0F56  2F58               	goto	u189_21
  6997  0F57  2F59               	goto	u189_20
  6998  0F58                     u189_21:	
  6999  0F58  2F63               	goto	i1l416
  7000  0F59                     u189_20:	
  7001  0F59                     i1l2835:	
  7002                           
  7003                           ;concentration.c: 627:         event_delay_count--;
  7004  0F59  3001               	movlw	1
  7005  0F5A  02FA               	subwf	_event_delay_count,f
  7006                           
  7007                           ;concentration.c: 628:         if(event_delay_count == 0) {
  7008  0F5B  087A               	movf	_event_delay_count,w
  7009  0F5C  1D03               	btfss	3,2
  7010  0F5D  2F5F               	goto	u190_21
  7011  0F5E  2F60               	goto	u190_20
  7012  0F5F                     u190_21:	
  7013  0F5F  2F62               	goto	i1l415
  7014  0F60                     u190_20:	
  7015  0F60                     i1l2837:	
  7016                           
  7017                           ;concentration.c: 629:             event_enabled = 1;
  7018  0F60  01E5               	clrf	_event_enabled
  7019  0F61  0AE5               	incf	_event_enabled,f
  7020  0F62                     i1l415:	
  7021                           ;concentration.c: 630:         }
  7022                           
  7023                           
  7024                           ;concentration.c: 631:         TMR2IF = 0;
  7025  0F62  108C               	bcf	12,1	;volatile
  7026  0F63                     i1l416:	
  7027  0F63  0874               	movf	??_interrupt_handler+4,w
  7028  0F64  008A               	movwf	10
  7029  0F65  0873               	movf	??_interrupt_handler+3,w
  7030  0F66  0084               	movwf	4
  7031  0F67  0E72               	swapf	(??_interrupt_handler+2)^(0+4294967168),w
  7032  0F68  0083               	movwf	3
  7033  0F69  0EFE               	swapf	btemp,f
  7034  0F6A  0E7E               	swapf	btemp,w
  7035  0F6B  0009               	retfie
  7036  0F6C                     __end_of_interrupt_handler:	
  7037  007E                     btemp	set	126	;btemp
  7038  007E                     wtemp0	set	126
  7039                           
  7040                           	psect	intentry
  7041  0004                     __pintentry:	
  7042                           ;incstack = 0
  7043                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0]
  7044                           
  7045  0004                     interrupt_function:	
  7046  007E                     saved_w	set	btemp
  7047  0004  00FE               	movwf	btemp
  7048  0005  0E03               	swapf	3,w
  7049  0006  00F2               	movwf	??_interrupt_handler+2
  7050  0007  0804               	movf	4,w
  7051  0008  00F3               	movwf	??_interrupt_handler+3
  7052  0009  080A               	movf	10,w
  7053  000A  00F4               	movwf	??_interrupt_handler+4
  7054  000B  120A  158A  2ED8   	ljmp	_interrupt_handler


Data Sizes:
    Strings     180
    Constant    64
    Data        11
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     59      78
    BANK1            80      0      70
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    lcd_set_custom_char@data	PTR const unsigned char  size(2) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[7]), STR_14(CODE[6]), STR_13(CODE[12]), STR_12(CODE[13]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[13]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[13]), 
		 -> STR_3(CODE[13]), STR_2(CODE[16]), STR_1(CODE[16]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    end_screen@second_row	PTR unsigned char  size(2) Largest target is 13
		 -> STR_9(CODE[11]), STR_7(CODE[13]), STR_5(CODE[13]), 

    end_screen@first_row	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_8(CODE[14]), STR_6(CODE[13]), STR_4(CODE[13]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_concentration_gameboard_init
    _update_gameboard_from_input->_check_for_match
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_gameboard
    _check_for_match->_display_scoreboard
    _startup->_display_gameboard
    _startup->_display_scoreboard
    _display_scoreboard->_lcd_putch
    _display_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_init->_lcd_clear
    _game_end->_end_screen
    _end_screen->_lcd_puts
    _lcd_puts->_lcd_write
    _concentration_gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    ___awdiv->___awmod
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us
    _get_current_char->_get_cursor_index

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  162250
                                             55 BANK0      4     4      0
                            _DelayMs
       _concentration_gameboard_init
                           _game_end
                      _joystick_init
                           _lcd_goto
                           _lcd_init
                          _lcd_putch
                           _lcd_puts
                            _startup
                          _time_init
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0   61272
                                             25 BANK0      2     2      0
                            _DelayMs
                    _check_for_match
                  _display_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    8629
                                             20 BANK0      4     3      1
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    7934
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      3     3      0   31125
                                             22 BANK0      3     3      0
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                   _get_cursor_index
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (1) _time_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0   42168
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _display_scoreboard                                   2     2      0   15586
                                             20 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _display_gameboard                                    2     2      0   12287
                                             20 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    3320
                                             16 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    7940
                                             10 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_end                                             0     0      0   21226
                            _DelayMs
                         _end_screen
 ---------------------------------------------------------------------------------
 (2) _end_screen                                          15    11      4   20022
                                             13 BANK0     15    11      4
                            _DelayMs
                            ___awmod
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (3) _turn_on_led                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _play_tone                                            5     2      3    1893
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _lcd_puts                                             5     1      4    4254
                                              8 BANK0      5     1      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    2413
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _concentration_gameboard_init                         2     2      0   16051
                                             53 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    2427
                                             16 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     985
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    4595
                                             16 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  8     3      5    4595
                                              8 BANK0      8     3      5
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    4614
                                              8 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            2     0      2    4223
                                              8 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    2178
                                              2 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2    1204
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0      93
                                              1 BANK0      1     1      0
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (4) _get_cursor_index                                     1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    6     6      0      45
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _concentration_gameboard_init
     _get_current_char
       _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
   _game_end
     _DelayMs
     _end_screen
       _DelayMs
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
   _joystick_init
   _lcd_goto
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_putch
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     _lcd_write (ARG)
       _Delay20us
   _lcd_puts
     _lcd_write
       _Delay20us
   _startup
     _DelayMs
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _time_init
   _update_gameboard_from_input
     _DelayMs
     _check_for_match
       _DelayMs
       _display_gameboard
         _lcd_clear
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _display_scoreboard
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
       _play_tone
       _turn_on_led
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_current_char
         _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3B      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C0      12        0.0%
ABS                  0      0      C0       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 12:56:02 2020

                     _joystick_pressed 0061                                      pc 0002  
  __end_of_update_gameboard_from_input 0398            _update_gameboard_from_input 023D  
                          __CFG_CP$OFF 0000                          _update_cursor 0E45  
                                   _GO 00F9                           ___awdiv@sign 002D  
                                   fsr 0004                                    l220 0A9B  
                                  l212 04DC                                    l221 0A9E  
                                  l222 0AA1                                    l223 0AC0  
                                  l216 0A95                                    l320 0244  
                                  l233 01A1                                    l321 02AC  
                                  l218 0A97                                    l330 02BE  
                                  l307 0D48                                    l219 0A99  
                                  l252 0B98                                    l332 02B5  
                                  l245 023C                                    l261 0E44  
                                  l317 05ED                                    l325 024D  
                                  l430 0991                                    l270 0B4A  
                                  l239 0201                                    l255 0E02  
                                  l351 0395                                    l335 02D7  
                                  l327 02C0                                    l264 07D9  
                                  l192 0426                                    l425 094D  
                                  l434 09A5                                    l442 0BE7  
                                  l258 0E11                                    l354 0397  
                                  l451 0A8C                                    l460 0C39  
                                  l196 0442                                    l381 0979  
                                  l445 09BF                                    l269 0B24  
                                  l373 0ED7                                    l294 0B05  
                                  l454 05FF                                    l390 0A2E  
                                  l439 0967                                    l704 0DB1  
                                  l457 09DD                                    l465 0C8E  
                                  l289 0FFF                                    l393 0A04  
                                  l298 0959                                    l386 07FC  
                                  l378 0A5C                                    l387 07FF  
                                  l717 0CE9                                    _GIE 005F  
                                  _RB2 0032                                    _RB5 0035  
                                  _RC5 003D                                    _RC6 003E  
                                  _RC7 003F                                    _PR2 0092  
                         __CFG_CPD$OFF 0000                                    _SCS 0478  
                                  fsr0 0004                                    indf 0000  
                         ___awmod@sign 0026                           __CFG_FOSC$HS 0000  
                         __CFG_LVP$OFF 0000                         ?_toggle_cursor 0070  
                        lcd_clear@port 0028                                   l3011 0990  
                                 l3003 095D                                   l3013 0995  
                                 l3005 0961                                   l3021 0BB4  
                                 l3101 0C92                                   l3015 099D  
                                 l3007 098D                                   l3023 0BC5  
                                 l3111 0CA6                                   l3103 0C96  
                                 l3031 0A74                                   l3009 098E  
                                 l3025 0BD1                                   l3017 0B9C  
                                 l3041 09A6                                   l3201 0C6E  
                                 l3121 0CBE                                   l3113 0CAC  
                                 l3105 0C9B                                   l3033 0A7C  
                                 l3051 0958                                   l3019 0BAF  
                                 l3043 09B4                                   l3035 09C3  
                                 l3203 0C76                                   l3131 0CE0  
                                 l3123 0CC8                                   l3115 0CAF  
                                 l3107 0C9D                                   l3027 0A5D  
                                 l3211 0055                                   l3045 0951  
                                 l3037 09D2                                   l3205 0C7A  
                                 l3061 0D55                                   l3133 0CE5  
                                 l3125 0CCE                                   l3117 0CB6  
                                 l3109 0CA1                                   l3029 0A5E  
                                 l3141 0AA4                                   l3301 0219  
                                 l3213 0059                                   l3047 0955  
                                 l3207 0C80                                   l3071 0D66  
                                 l3063 0D57                                   l3055 0D49  
                                 l3311 0CF3                                   l3127 0CD5  
                                 l3119 0CBA                                   l3151 07EC  
                                 l3303 021F                                   l3231 00A6  
                                 l3223 0073                                   l3215 006F  
                                 l3039 05F1                                   l3209 0968  
                                 l3081 0D7E                                   l3073 0D6C  
                                 l3065 0D5B                                   l3057 0D4C  
                                 l3321 0D24                                   l3313 0CF7  
                                 l3129 0CDB                                   l3153 07ED  
                                 l3137 0A90                                   l3305 0235  
                                 l3241 00ED                                   l3233 00B8  
                                 l3225 007D                                   l3217 0072  
                                 l3161 0706                                   l3401 0E4E  
                                 l3307 0F6C                                   l3083 0D8F  
                                 l3075 0D6F                                   l3091 0DA3  
                                 l3067 0D60                                   l3059 0D50  
                                 l3323 0D3E                                   l3315 0D0F  
                                 l3155 07F0                                   l3147 07DA  
                                 l3251 0141                                   l3243 0103  
                                 l3235 00CE                                   l3227 0083  
                                 l3171 07BA                                   l3163 0715  
                                 l3331 04EC                                   l3411 0E70  
                                 l3403 0E53                                   l3093 0DA8  
                                 l3085 0D95                                   l3077 0D76  
                                 l3069 0D64                                   l3317 0D16  
                                 l3325 0D42                                   l3309 0CEA  
                                 l3157 07F6                                   l3149 07E0  
                                 l3261 0173                                   l3253 0147  
                                 l3245 011C                                   l3237 00DB  
                                 l3229 0099                                   l3181 0B14  
                                 l3173 0B06                                   l3165 0721  
                                 l3501 0A1F                                   l3341 051E  
                                 l3333 050A                                   l3413 0E72  
                                 l3405 0E58                                   l3421 0E8C  
                                 l3191 0C3A                                   l3095 0DAD  
                                 l3087 0D96                                   l3079 0D7A  
                                 l3319 0D1F                                   l3159 07F7  
                                 l3271 01A5                                   l3263 0181  
                                 l3255 014D                                   l3247 0122  
                                 l3239 00E7                                   l3183 0B1A  
                                 l3175 0B11                                   l3167 077D  
                                 l3511 0A24                                   l3503 0A20  
                                 l3351 0552                                   l3343 052D  
                                 l3335 050F                                   l3327 04E2  
                                 l3415 0E77                                   l3407 0E5D  
                                 l3423 0E9F                                   l3089 0D9D  
                                 l3521 0AC1                                   l3281 01BF  
                                 l3273 01A9                                   l3265 018A  
                                 l3257 0157                                   l3249 0138  
                                 l3441 0944                                   l3185 0B34  
                                 l3169 078C                                   l3513 0A25  
                                 l3505 0A21                                   l3361 0583  
                                 l3353 0555                                   l3345 0530  
                                 l3337 0514                                   l3329 04E7  
                                 l3425 0EBA                                   l3417 0E7C  
                                 l3409 0E60                                   l3601 02B0  
                                 l3531 0ACF                                   l3523 0AC7  
                                 l3099 0C8F                                   l3291 01FC  
                                 l3283 01D5                                   l3275 01AA  
                                 l3267 0199                                   l3259 015D  
                                 l3443 094C                                   l3451 0BFE  
                                 l3187 0B3A                                   l3515 0A26  
                                 l3507 0A22                                   l3371 05B6  
                                 l3363 0592                                   l3355 0570  
                                 l3347 053D                                   l3339 0518  
                                 l3427 0EC1                                   l3611 02D5  
                                 l3603 02B9                                   l3197 0C3D  
                                 l3541 0AED                                   l3533 0AD7  
                                 l3525 0ACC                                   l3293 0205  
                                 l3285 01DE                                   l3277 01AF  
                                 l3269 019C                                   l3461 09E8  
                                 l3453 0C0E                                   l3445 0BE8  
                                 l3189 0B40                                   l3517 0A27  
                                 l3509 0A23                                   l3381 05E2  
                                 l3373 05C5                                   l3365 0595  
                                 l3357 0572                                   l3349 0543  
                                 l3621 0305                                   l3613 02E5  
                                 l3605 02C6                                   l3701 042A  
                                 l3199 0C56                                   l3543 0AF3  
                                 l3535 0ADB                                   l3295 0209  
                                 l3287 01EA                                   l3279 01B9  
                                 l3471 09F4                                   l3463 09E9  
                                 l3455 0C1E                                   l3447 0BED  
                                 l3551 0DB5                                   l3519 0A28  
                                 l3383 05E4                                   l3375 05D4  
                                 l3367 05A4                                   l3359 0578  
                                 l3391 0A45                                   l3631 033C  
                                 l3623 0314                                   l3607 02CB  
                                 l3615 02E6                                   l3711 0449  
                                 l3703 042C                                   l3545 0AF6  
                                 l3537 0AE1                                   l3297 020A  
                                 l3289 01F9                                   l3481 09FE  
                                 l3473 09F5                                   l3465 09EC  
                                 l3457 0C29                                   l3449 0BF5  
                                 l3561 0DF3                                   l3553 0DBE  
                                 l3369 05B3                                   l3377 05D8  
                                 l3393 0A4F                                   l3385 0A2F  
                                 l3641 0373                                   l3633 0347  
                                 l3625 031B                                   l3617 02F3  
                                 l3609 02CF                                   l3713 0456  
                                 l3705 0431                                   l3547 0B00  
                                 l3539 0AEA                                   l3299 020F  
                                 l3651 0B4B                                   l3483 0A02  
                                 l3475 09F6                                   l3467 09EE  
                                 l3459 09DE                                   l3571 0E36  
                                 l3563 0E08                                   l3555 0DC9  
                                 l3491 0A14                                   l3379 05DE  
                                 l3395 0A52                                   l3387 0A36  
                                 l3643 0378                                   l3635 0356  
                                 l3627 0326                                   l3619 02FA  
                                 l3723 0485                                   l3715 0465  
                                 l3707 0435                                   l3731 04B4  
                                 l3661 0B80                                   l3653 0B56  
                                 l3477 09F9                                   l3469 09F0  
                                 l3573 0E39                                   l3565 0E17  
                                 l3557 0DD8                                   l3549 0DB2  
                                 l3493 0A1B                                   l3485 0A05  
                                 l3389 0A40                                   l3901 0E68  
                                 l3397 0E48                                   l3645 0381  
                                 l3637 035D                                   l3629 0335  
                                 l3581 0243                                   l3741 04D7  
                                 l3725 0497                                   l3717 047E  
                                 l3733 04BB                                   l3709 0439  
                                 l3663 0B8D                                   l3655 0B5E  
                                 l3479 09FC                                   l3575 0E3A  
                                 l3567 0E20                                   l3559 0DE7  
                                 l3495 0A1C                                   l3487 0A0B  
                                 l3903 0E84                                   l3399 0E49  
                                 l3647 0387                                   l3639 0368  
                                 l3591 0264                                   l3583 0248  
                                 l3735 04C0                                   l3727 04AD  
                                 l3719 0483                                   l3671 03AB  
                                 l3657 0B6C                                   l3577 0E3F  
                                 l3569 0E2B                                   l3497 0A1D  
                                 l3489 0A11                                   l3905 0E94  
                                 l3649 038C                                   l3593 0267  
                                 l3585 0251                                   l3737 04CB  
                                 l3729 04B0                                   l3681 03CB  
                                 l3673 03B6                                   l3665 0398  
                                 l3907 0AAC                                   l3659 0B72  
                                 l3499 0A1E                                   l3595 0275  
                                 l3587 0256                                   l3579 023D  
                                 l3739 04D0                                   l3691 0405  
                                 l3683 03CE                                   l3675 03BB  
                                 l3667 039B                                   l3597 02A0  
                                 l3589 025B                                   l3693 0411  
                                 l3685 03DB                                   l3677 03C3  
                                 l3669 03A0                                   l3599 02A6  
                                 l3695 041D                                   l3687 03EA  
                                 l3679 03C6                                   l3697 0423  
                                 l3689 03F6                                   l3699 0424  
                                 l2997 095A                                   _ADIE 0466  
                                 _ADIF 0066                                   l3899 048F  
                                 STR_1 0683                                   STR_2 0673  
                                 STR_3 06C8                                   STR_4 06A1  
                                 STR_5 06AE                                   STR_6 06A1  
                                 STR_7 06BB                                   STR_8 0693  
                                 STR_9 06EE                                   _T0IF 005A  
                                 u2010 0D7E                                   u2011 0D7D  
                                 u2005 0D70                                   u2030 0D8F  
                                 u2110 0CBE                                   u2031 0D8E  
                                 u2111 0CBD                                   u2200 0C80  
                                 u2120 0CC8                                   u2201 0C7F  
                                 u2025 0D7F                                   u2121 0CC7  
                                 u2105 0CB0                                   u2050 0DA3  
                                 u2210 014D                                   u2051 0DA2  
                                 u2035 0D8B                                   u2211 014C  
                                 u2060 0DA8                                   u2140 0CDB  
                                 u2220 01A5                                   u2061 0DA7  
                                 u2045 0D97                                   u2141 0CDA  
                                 u2125 0CC4                                   u2221 01A4  
                                 u2310 0D1F                                   u2150 0CE0  
                                 u2070 0C96                                   u2230 01A9  
                                 u2311 0D1E                                   u2151 0CDF  
                                 u2135 0CCF                                   u2071 0C95  
                                 u2231 01A8                                   u2320 0D48  
                                 u2304 0D00                                   u2080 0CA1  
                                 u2160 07FC                                   u2240 01AF  
                                 u2400 0E08                                   u2321 0D47  
                                 u2305 0CFE                                   u2081 0CA0  
                                 u2161 07FB                                   u2241 01AE  
                                 u2401 0E07                                   u2090 0CAC  
                                 u2250 0205                                   u2170 0B1A  
                                 u2410 0E17                                   u2330 04E7  
                                 u2091 0CAB                                   u2251 0204  
                                 u2171 0B19                                   u2411 0E16  
                                 u2331 04E6                                   u2260 0209  
                                 u2180 0B40                                   u2340 050A  
                                 u2500 02B5                                   u2420 0243  
                                 u2261 0208                                   u2181 0B3F  
                                 u2341 0509                                   u2501 02B4  
                                 u2421 0242                                   u2270 020F  
                                 u2350 050F                                   u2510 02B9  
                                 u2430 0248                                   u2271 020E  
                                 u2351 050E                                   u2511 02B8  
                                 u2431 0247                                   u2280 023C  
                                 u2360 0570                                   u2600 033C  
                                 u2520 02BE                                   u2440 024D  
                                 u2281 023B                                   u2361 056F  
                                 u2601 033B                                   u2521 02BD  
                                 u2441 024C                                   u2290 0CEE  
                                 u2370 0A36                                   u2610 0356  
                                 u2530 02C6                                   u2450 0251  
                                 u2195 0C40                                   u2371 0A35  
                                 u2611 0355                                   u2531 02C5  
                                 u2451 0250                                   u2380 0EC1  
                                 u2620 035D                                   u2540 02CB  
                                 u2460 0256                                   u2700 0431  
                                 u2381 0EC0                                   u2621 035C  
                                 u2541 02CA                                   u2461 0255  
                                 u2701 0430                                   u1910 0967  
                                 u2390 0AE1                                   u2630 0373  
                                 u2550 02F3                                   u2470 025B  
                                 u2710 0435                                   u1911 0966  
                                 u2391 0AE0                                   u2631 0372  
                                 u2615 0352                                   u2551 02F2  
                                 u2471 025A                                   u2711 0434  
                                 u1920 0995                                   u2640 0378  
                                 u2560 02FA                                   u2480 0275  
                                 u2720 0448                                   u1921 0994  
                                 u2641 0377                                   u2561 02F9  
                                 u2481 0274                                   u2721 0447  
                                 u1930 09A5                                   u2650 0387  
                                 u2570 0314                                   u2490 02B0  
                                 u2730 0456                                   u1931 09A4  
                                 u2651 0386                                   u2571 0313  
                                 u2555 02EF                                   u2491 02AF  
                                 u2731 0455                                   u2660 038C  
                                 u2580 031B                                   u2740 0465  
                                 u2661 038B                                   u2581 031A  
                                 u2741 0464                                   u1950 0A8C  
                                 u2670 0B5E                                   u2590 0335  
                                 u2750 04BB                                   u1951 0A8B  
                                 u2671 0B5D                                   u2591 0334  
                                 u2575 0310                                   u2751 04BA  
                                 u2735 0452                                   u1960 0955  
                                 u2680 0B72                                   u2760 04C0  
                                 u1961 0954                                   u1945 0B9F  
                                 u2681 0B71                                   u2761 04BF  
                                 u2745 0461                                   u1970 0D50  
                                 u2770 04D7                                   u2690 042A  
                                 u1971 0D4F                                   u2595 0331  
                                 u2771 04D6                                   u2691 0429  
                                 _PEIE 005E                                   u1980 0D5B  
                                 u1981 0D5A                                   u1990 0D6C  
                                 u1991 0D6B                                   _TMR0 0001  
                                 _TMR1 000E                                   _TMR2 0011  
                                 _WPUB 0095                  make_custom_chars@club 062A  
                         __CFG_WRT$OFF 0000                                   _main 0398  
                                 btemp 007E                        _check_for_match 04DF  
                         lcd_init@port 002A                                   start 000E  
                         lcd_goto@port 0028                          __CFG_IESO$OFF 0000  
                      __end_of_DelayMs 09A6                          __CFG_MCLRE$ON 0000  
                       ?_update_cursor 0034                                  ?_main 0070  
                      __end_of___awdiv 0DB2                                  _CCPR1 0015  
                                STR_10 0663                                  _CCPR2 001B  
                                STR_11 0652                                  STR_12 06D5  
                                STR_13 06E2                                  STR_14 0700  
                                STR_15 06F9                          __CFG_WDTE$OFF 0000  
                      __end_of___awmod 0CEA                                  _ANSEL 0188  
                      ___awdiv@divisor 0027                                  _T2CON 0012  
                                i1l400 0EF3                                  i1l401 0F55  
                                i1l415 0F62                                  i1l416 0F63  
                                i1l409 0F54                                  i1l398 0EF4  
                                i1l399 0EF2                        ___awdiv@counter 002C  
         __size_of_randomize_gameboard 005F                                  _PORTA 0005  
                                _PORTB 0006                                  _PORTC 0007  
                                _PORTD 0008                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                 make_custom_chars@heart 063A  
               make_custom_chars@spade 0632                         __CFG_FCMEN$OFF 0000  
               make_custom_chars@smile 064A                 make_custom_chars@skull 0622  
                          _turn_on_led 0A8D                                  _nRBPU 040F  
                                _board 00C0                           lcd_puts@port 002A  
                       __CFG_BOREN$OFF 0000                                  pclath 000A  
                                status 0003                        __end_of_startup 0E45  
                                wtemp0 007E                          DelayMs@millis 0020  
                      __initialization 0011                           __end_of_main 04DF  
                   __size_of_Delay20us 000E                                 ??_main 0057  
                      ??_toggle_cursor 0034                                 _ADCON0 001F  
                               _ADCON1 009F                                 _CCP1M0 00B8  
                               _CCP1M1 00B9                                 _CCP1M2 00BA  
                               _CCP1M3 00BB                                 _CCP2M0 00E8  
                               _CCP2M1 00E9                                 _CCP2M2 00EA  
                               _CCP2M3 00EB                                 _CCP1IF 0062  
                               _CCP2IE 0468                                 _CCP2IF 0068  
              __end_of_check_for_match 05EE                                 _ADRESH 001E  
                               _ADRESL 009E                       ___awdiv@dividend 0029  
          __end_ofmake_custom_chars@RH 0622                                 _ANSELH 0189  
               update_cursor@direction 0034                                 i1l2801 0EE4  
                               i1l2811 0F02                                 i1l2803 0EEC  
                               i1l2813 0F08                                 i1l2805 0EF0  
                               i1l2823 0F21                                 i1l2815 0F0E  
                               i1l2807 0EF9                                 i1l2833 0F44  
                               i1l2817 0F17                                 i1l2825 0F31  
                               i1l2809 0EFE                                 i1l2835 0F59  
                               i1l2827 0F3A                                 i1l2819 0F1C  
                               i1l2837 0F60                                 i1l2829 0F3F  
                               i1l3911 0F4C                                 i1l3909 0F29  
                               i1l2797 0ED8                                 i1l2799 0EDE  
                               u190_20 0F60                                 u190_21 0F5F  
                               u183_20 0EDE                                 u183_21 0EDD  
                            ??_DelayMs 0022                                 u184_20 0EE4  
                               u184_21 0EE3                                 u185_20 0EF0  
                               u185_21 0EEF                                 u186_20 0EF9  
                               u186_21 0EF8                                 u187_20 0F08  
                               u187_21 0F07                                 u188_20 0F0E  
                               u188_21 0F0D                                 u189_20 0F59  
                               u189_21 0F58                                 _TMR1GE 0086  
                               _TMR1CS 0081                                 _TMR2IE 0461  
                               _TMR2IF 0061                                 _TMR1ON 0080  
           __end_of_display_scoreboard 07DA                       __end_of_game_end 0B99  
                  _lcd_set_custom_char 0C3A                         __CFG_PWRTE$OFF 0000  
                      ??_update_cursor 0035                       __end_of_lcd_init 0C3A  
                     __end_of_lcd_goto 09DE                       __end_of_lcd_puts 0A8D  
                            ??___awdiv 002B                              ??___awmod 0024  
                               _id_num 0078                       ___awdiv@quotient 002E  
                      ___awmod@divisor 0020                          lcd_putch@port 0030  
                      ___awmod@counter 0025                   ?_lcd_set_custom_char 0028  
                         __pdataCOMMON 007B                                 saved_w 007E  
            __size_of_get_current_char 0012                              ??_startup 0036  
                    __end_of_Delay20us 0968          update_cursor@move_delay_count 0037  
                        _event_enabled 0065                __end_of__initialization 0051  
            __size_of_get_cursor_index 000C                          lcd_write@mode 0027  
                        lcd_write@port 0023   __end_of_concentration_gameboard_init 0B06  
__size_of_concentration_gameboard_init 0045           _concentration_gameboard_init 0AC1  
                       __pcstackCOMMON 0070                           __pidataBANK0 0932  
                         __pidataBANK1 0936                  check_for_match@player 0038  
                __end_of_joystick_init 0A05                  ??_lcd_set_custom_char 002D  
                   __size_of_lcd_clear 001A                     __size_of_lcd_putch 0012  
                   __size_of_lcd_write 004F                       ?_check_for_match 0070  
                           __pbssBANK0 005B                             __pbssBANK1 00A0  
                           __pbssBANK3 0190                    _randomize_gameboard 0CEA  
                           __pmaintext 0398          ?_concentration_gameboard_init 0070  
                           __pintentry 0004                     __size_of_tmr0_init 000A  
                   __size_of_play_tone 0026           __end_ofmake_custom_chars@PIC 061A  
                              _T1CKPS0 0084                                _T1CKPS1 0085  
                           _end_screen 0055                   ?_randomize_gameboard 0070  
                   __size_of_time_init 002A                     display_gameboard@i 0035  
                         ?_turn_on_led 0070                              ?_game_end 0070  
                            ?_lcd_init 002A                              ?_lcd_goto 0028  
                            ?_lcd_puts 0028                             __stringtab 0600  
               lcd_set_custom_char@row 002F               make_custom_chars@diamond 0642  
                              _DelayMs 098D             randomize_gameboard@current 0053  
                    __end_of_lcd_clear 09C0              randomize_gameboard@random 0054  
                    __end_of_lcd_putch 0600                                ___awdiv 0D49  
                              ___awmod 0C8F                      __end_of_lcd_write 0BE8  
       __end_ofmake_custom_chars@heart 0642         __end_ofmake_custom_chars@spade 063A  
       __end_ofmake_custom_chars@smile 0652         __end_ofmake_custom_chars@skull 062A  
                              __ptext1 023D                                __ptext2 0E45  
                              __ptext3 0A2F                                __ptext4 04DF  
                              __ptext5 0A05                                __ptext6 0DB2  
                              __ptext7 0706                                __ptext8 0B06  
                              __ptext9 05EE                             _cursor_pos 0069  
                ??_randomize_gameboard 0030                       ___awmod@dividend 0022  
                     _get_current_char 0968                             ??_game_end 003C  
                              _my_turn 007B                 get_cursor_index@cursor 0020  
                              _visible 00A0                          _received_char 0079  
                              _startup 0DB2                                clrloop0 093D  
                           ??_lcd_init 002C                             ??_lcd_goto 002A  
                           ??_lcd_puts 002C                   end_of_initialization 0051  
                    __end_of_tmr0_init 094E                      __end_of_play_tone 0800  
                       lcd_puts@string 0028                       _get_cursor_index 094E  
                 play_tone@tone_period 0020                      __end_of_time_init 0A2F  
                           _scoreboard 006A                           __pstringtext 0600  
       ??_concentration_gameboard_init 0055          concentration_gameboard_init@i 0056  
                   _display_scoreboard 0706                            ?_end_screen 002D  
        lcd_set_custom_char@cg_address 002A                         _joystick_x_pos 005D  
                       _joystick_y_pos 005B                    ?_display_scoreboard 0070  
                           _tone_delay 0076                  __end_of_toggle_cursor 0A5D  
                 end_screen@second_row 002F                              _Delay20us 095A  
                 make_custom_chars@PIC 0612                  play_tone@duration_8ms 0022  
                 ??_display_scoreboard 0034                  __end_of_update_cursor 0ED8  
                     turn_on_led@color 0022           ?_update_gameboard_from_input 0070  
                        __pidataCOMMON 0003                    start_initialization 0011  
                 __size_of_turn_on_led 0034                             ?_Delay20us 0070  
                  __size_of_end_screen 01E8                             init_fetch0 097A  
          __end_of_lcd_set_custom_char 0C8F                            __pdataBANK0 006A  
                          __pdataBANK1 00E0          ??_update_gameboard_from_input 0039  
                          __pbssCOMMON 0076                         _current_player 0060  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        _selected_tile 0062                      __size_of_game_end 004E  
                             ?_DelayMs 0020                 __size_of_joystick_init 0027  
                    __size_of_lcd_init 0052                      __size_of_lcd_goto 001E  
                    __size_of_lcd_puts 0030                           _current_char 0068  
             __size_of_check_for_match 010F                            _delay_loops 0066  
             __end_of_get_current_char 097A                              _gameboard 006C  
                            _game_over 005F                               ?___awdiv 0027  
                             ?___awmod 0020                      _display_gameboard 0B06  
                            _lcd_clear 09A6                           _cursor_solid 0067  
                            _lcd_putch 05EE                     ?_display_gameboard 0070  
                            _lcd_write 0B99               __end_of_get_cursor_index 095A  
                    _interrupt_handler 0ED8                       main@selector_pos 005A  
                   ?_interrupt_handler 0070                    ??_display_gameboard 0034  
        __end_ofmake_custom_chars@club 0632                               ?_startup 0070  
 __size_of_update_gameboard_from_input 015B                    ??_interrupt_handler 0070  
                     end_screen@colors 0034                      interrupt_function 0004  
                          ??_Delay20us 0020                              clear_ram0 093C  
                            _tmr0_init 0944                              _play_tone 07DA  
                  end_screen@first_row 002D              __end_of_display_gameboard 0B4B  
                            _time_init 0A05            __end_of_randomize_gameboard 0D49  
                           ?_lcd_clear 0028              __end_of_interrupt_handler 0F6C  
                        _joystick_init 09DE                             ?_lcd_putch 0030  
              lcd_set_custom_char@data 0028                            __stringbase 0612  
                           ?_lcd_write 0022                           ??_end_screen 0031  
              lcd_set_custom_char@port 002B                    make_custom_chars@RH 061A  
                     __size_of_DelayMs 0019                             ?_tmr0_init 0070  
                           ?_play_tone 0020                     __end_of_end_screen 023D  
                             _p1_score 0064                               _p2_score 0063  
                           ?_time_init 0070                      _make_custom_chars 0F6C  
                     __size_of___awdiv 0069                      ??_check_for_match 0036  
                     __size_of___awmod 005B                         ?_joystick_init 0070  
                   ?_make_custom_chars 0070                     __end_of__stringtab 0612  
     __end_ofmake_custom_chars@diamond 064A                               _game_end 0B4B  
                  ??_make_custom_chars 0030                        end_screen@F1344 00E0  
                   main@game_selection 0059                               __ptext10 0BE8  
                             __ptext11 0944                               __ptext20 0CEA  
                             __ptext12 09DE                               __ptext21 0D49  
                             __ptext13 0B4B                               __ptext30 094E  
                             __ptext22 0F6C                               __ptext14 0055  
                             __ptext31 0ED8                               __ptext23 0C3A  
                             __ptext15 0A8D                               __ptext24 09C0  
                             __ptext16 07DA                               __ptext25 09A6  
                             __ptext17 0A5D                               __ptext26 0B99  
                             __ptext18 0C8F                               __ptext27 095A  
                             __ptext19 0AC1                               __ptext28 098D  
                             __ptext29 0968                      __CFG_BOR4V$BOR21V 0000  
                             _lcd_init 0BE8                               _lcd_goto 09C0  
                             _lcd_puts 0A5D                       __size_of_startup 0093  
                        __size_of_main 0147                     lcd_putch@character 0033  
            __end_of_make_custom_chars 1000            __size_of_display_scoreboard 00D4  
           __size_of_display_gameboard 0045                 __size_of_toggle_cursor 002E  
                          ??_lcd_clear 002A             __size_of_interrupt_handler 0094  
             randomize_gameboard@F1367 0190                            ??_lcd_putch 0032  
                          ??_lcd_write 0025                  end_screen@color_index 003B  
                        ??_turn_on_led 0020                               init_ram0 097E  
                             intlevel1 0000                 __size_of_update_cursor 0093  
                        Delay20us@next 0021                            ??_tmr0_init 0020  
                          ??_play_tone 0023                              stringcode 060A  
                    ?_get_current_char 0070                        ??_joystick_init 0020  
                          ??_time_init 0020                      _event_delay_count 007A  
                   ??_get_current_char 0021                randomize_gameboard@used 0033  
                           _OPTION_REG 0081                       lcd_goto@position 002B  
                    ?_get_cursor_index 0070           __size_of_lcd_set_custom_char 0055  
                             stringtab 0600                     ??_get_cursor_index 0020  
                        _toggle_cursor 0A2F                    __end_of_turn_on_led 0AC1  
      interrupt_handler@current_analog 0075                            end_screen@i 003A  
                     lcd_write@CmdChar 0022             __size_of_make_custom_chars 0094  
