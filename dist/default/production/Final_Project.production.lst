

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 13 14:52:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295                           
   296                           	psect	idataBANK0
   297  02B6                     __pidataBANK0:	
   298                           
   299                           ;initializer for _scoreboard
   300  02B6  3405               	retlw	5
   301  02B7  3400               	retlw	0
   302                           
   303                           ;initializer for _gameboard
   304  02B8  3408               	retlw	8
   305  02B9  3400               	retlw	0
   306                           
   307                           	psect	strings
   308  01D7                     __pstrings:	
   309  01D7                     stringtab:	
   310  01D7                     __stringtab:	
   311  01D7                     stringcode:	
   312                           ;	String table - string pointers are 1 byte each
   313                           
   314  01D7                     stringdir:	
   315  01D7  3001               	movlw	high stringdir
   316  01D8  008A               	movwf	10
   317  01D9  0804               	movf	4,w
   318  01DA  0A84               	incf	4,f
   319  01DB  0782               	addwf	2,f
   320  01DC                     __stringbase:	
   321  01DC  3400               	retlw	0
   322  01DD                     __end_of__stringtab:	
   323  01DD                     main@board_r2:	
   324  01DD  3454               	retlw	84
   325  01DE  3448               	retlw	72
   326  01DF  3449               	retlw	73
   327  01E0  3453               	retlw	83
   328  01E1  3420               	retlw	32
   329  01E2  3449               	retlw	73
   330  01E3  3453               	retlw	83
   331  01E4  3420               	retlw	32
   332  01E5  3452               	retlw	82
   333  01E6  344F               	retlw	79
   334  01E7  3457               	retlw	87
   335  01E8  3420               	retlw	32
   336  01E9  3432               	retlw	50
   337  01EA  342E               	retlw	46
   338  01EB  342E               	retlw	46
   339  01EC  342E               	retlw	46
   340  01ED  3400               	retlw	0
   341  01EE                     __end_ofmain@board_r2:	
   342  01EE                     main@board_r1:	
   343  01EE  3430               	retlw	48
   344  01EF  3431               	retlw	49
   345  01F0  3432               	retlw	50
   346  01F1  3433               	retlw	51
   347  01F2  3434               	retlw	52
   348  01F3  3435               	retlw	53
   349  01F4  3436               	retlw	54
   350  01F5  3437               	retlw	55
   351  01F6  3438               	retlw	56
   352  01F7  3439               	retlw	57
   353  01F8  3441               	retlw	65
   354  01F9  3442               	retlw	66
   355  01FA  3443               	retlw	67
   356  01FB  3444               	retlw	68
   357  01FC  3445               	retlw	69
   358  01FD  3446               	retlw	70
   359  01FE  3400               	retlw	0
   360  01FF                     __end_ofmain@board_r1:	
   361  0001                     _TMR0	set	1
   362  001E                     _ADRESH	set	30
   363  001F                     _ADCON0	set	31
   364  0006                     _PORTB	set	6
   365  0005                     _PORTA	set	5
   366  0008                     _PORTD	set	8
   367  005A                     _T0IF	set	90
   368  00F9                     _GO	set	249
   369  0035                     _RB5	set	53
   370  00FB                     _CHS1	set	251
   371  0066                     _ADIF	set	102
   372  005E                     _PEIE	set	94
   373  005F                     _GIE	set	95
   374  0081                     _OPTION_REG	set	129
   375  009E                     _ADRESL	set	158
   376  009F                     _ADCON1	set	159
   377  0086                     _TRISB	set	134
   378  0095                     _WPUB	set	149
   379  0085                     _TRISA	set	133
   380  0088                     _TRISD	set	136
   381  0466                     _ADIE	set	1126
   382  040F                     _nRBPU	set	1039
   383  0478                     _SCS	set	1144
   384  0189                     _ANSELH	set	393
   385  0188                     _ANSEL	set	392
   386                           
   387                           ; #config settings
   388  0000                     
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391  000F                     __initialization:	
   392                           
   393                           ; Initialize objects allocated to BANK0
   394  000F  120A  118A  22B6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   395  0014  00AB               	movwf	__pdataBANK0& (0+127)
   396  0015  120A  118A  22B7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   397  001A  00AC               	movwf	(__pdataBANK0+1)& (0+127)
   398  001B  120A  118A  22B8  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   399  0020  00AD               	movwf	(__pdataBANK0+2)& (0+127)
   400  0021  120A  118A  22B9  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   401  0026  00AE               	movwf	(__pdataBANK0+3)& (0+127)
   402                           
   403                           ; Clear objects allocated to BANK0
   404  0027  01A7               	clrf	__pbssBANK0& (0+127)
   405  0028  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   406  0029  01A9               	clrf	(__pbssBANK0+2)& (0+127)
   407  002A  01AA               	clrf	(__pbssBANK0+3)& (0+127)
   408                           
   409                           ; Clear objects allocated to COMMON
   410  002B  01FA               	clrf	__pbssCOMMON& (0+127)
   411  002C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   412  002D                     end_of_initialization:	
   413                           ;End of C runtime variable initialization code
   414                           
   415  002D                     __end_of__initialization:	
   416  002D  0183               	clrf	3
   417  002E  120A  118A  2831   	ljmp	_main	;jump to C main() function
   418                           
   419                           	psect	bssCOMMON
   420  007A                     __pbssCOMMON:	
   421  007A                     _current_char:	
   422  007A                     	ds	1
   423  007B                     _cursor_pos:	
   424  007B                     	ds	1
   425                           
   426                           	psect	bssBANK0
   427  0027                     __pbssBANK0:	
   428  0027                     _joystick_y_pos:	
   429  0027                     	ds	2
   430  0029                     _joystick_x_pos:	
   431  0029                     	ds	2
   432                           
   433                           	psect	dataBANK0
   434  002B                     __pdataBANK0:	
   435  002B                     _scoreboard:	
   436  002B                     	ds	2
   437  002D                     _gameboard:	
   438  002D                     	ds	2
   439                           
   440                           	psect	cstackCOMMON
   441  0070                     __pcstackCOMMON:	
   442  0070                     ?_joystick_init:	
   443  0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_interrupt_handler:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_interrupt_handler:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_tmr0_init:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_Delay20us:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 1 bytes @ 0x0
   460  0070                     	ds	2
   461  0072                     ??_joystick_init:	
   462  0072                     ?_DelayMs:	
   463                           ; 1 bytes @ 0x2
   464                           
   465  0072                     ??_tmr0_init:	
   466                           ; 1 bytes @ 0x2
   467                           
   468  0072                     ??_Delay20us:	
   469                           ; 1 bytes @ 0x2
   470                           
   471  0072                     DelayMs@millis:	
   472                           ; 1 bytes @ 0x2
   473                           
   474                           
   475                           ; 2 bytes @ 0x2
   476  0072                     	ds	1
   477  0073                     Delay20us@next:	
   478                           
   479                           ; 1 bytes @ 0x3
   480  0073                     	ds	1
   481  0074                     ??_DelayMs:	
   482  0074                     ?_lcd_write:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0074                     lcd_write@CmdChar:	
   486                           ; 1 bytes @ 0x4
   487                           
   488                           
   489                           ; 1 bytes @ 0x4
   490  0074                     	ds	1
   491  0075                     lcd_write@port:	
   492                           
   493                           ; 2 bytes @ 0x5
   494  0075                     	ds	2
   495  0077                     ??_lcd_write:	
   496                           
   497                           ; 1 bytes @ 0x7
   498  0077                     	ds	2
   499  0079                     lcd_write@mode:	
   500                           
   501                           ; 1 bytes @ 0x9
   502  0079                     	ds	1
   503  007A                     ??_lcd_clear:	
   504                           
   505                           	psect	cstackBANK0
   506  0020                     __pcstackBANK0:	
   507                           ; 1 bytes @ 0xA
   508                           
   509  0020                     ?_lcd_clear:	
   510  0020                     ?_lcd_puts:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0020                     ?_lcd_goto:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0020                     ?_lcd_putch:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0020                     lcd_clear@port:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0020                     lcd_puts@port:	
   523                           ; 2 bytes @ 0x0
   524                           
   525  0020                     lcd_putch@port:	
   526                           ; 2 bytes @ 0x0
   527                           
   528  0020                     lcd_goto@port:	
   529                           ; 2 bytes @ 0x0
   530                           
   531                           
   532                           ; 2 bytes @ 0x0
   533  0020                     	ds	2
   534  0022                     ?_lcd_init:	
   535  0022                     ??_lcd_puts:	
   536                           ; 1 bytes @ 0x2
   537                           
   538  0022                     ??_lcd_goto:	
   539                           ; 1 bytes @ 0x2
   540                           
   541  0022                     ??_lcd_putch:	
   542                           ; 1 bytes @ 0x2
   543                           
   544  0022                     lcd_init@port:	
   545                           ; 1 bytes @ 0x2
   546                           
   547                           
   548                           ; 2 bytes @ 0x2
   549  0022                     	ds	1
   550  0023                     lcd_puts@string:	
   551  0023                     lcd_putch@character:	
   552                           ; 1 bytes @ 0x3
   553                           
   554  0023                     lcd_goto@position:	
   555                           ; 1 bytes @ 0x3
   556                           
   557                           
   558                           ; 1 bytes @ 0x3
   559  0023                     	ds	1
   560  0024                     ??_lcd_init:	
   561                           
   562                           ; 1 bytes @ 0x4
   563  0024                     	ds	1
   564  0025                     ??_main:	
   565                           
   566                           ; 1 bytes @ 0x5
   567  0025                     	ds	2
   568                           
   569                           	psect	maintext
   570  0031                     __pmaintext:	
   571 ;;
   572 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   573 ;;
   574 ;; *************** function _main *****************
   575 ;; Defined at:
   576 ;;		line 43 in file "concentration.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : B00/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          0       2       0       0       0
   593 ;;      Totals:         0       2       0       0       0
   594 ;;Total ram usage:        2 bytes
   595 ;; Hardware stack levels required when called:    5
   596 ;; This function calls:
   597 ;;		_DelayMs
   598 ;;		_joystick_init
   599 ;;		_lcd_clear
   600 ;;		_lcd_goto
   601 ;;		_lcd_init
   602 ;;		_lcd_putch
   603 ;;		_lcd_puts
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _main
   611  0031                     _main:	
   612  0031                     l1282:	
   613                           ;incstack = 0
   614                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   615                           
   616                           
   617                           ;concentration.c: 45:     SCS = 0;
   618  0031  1683               	bsf	3,5	;RP0=1, select bank1
   619  0032  1303               	bcf	3,6	;RP1=0, select bank1
   620  0033  100F               	bcf	15,0	;volatile
   621  0034                     l1284:	
   622                           
   623                           ;concentration.c: 47:     TRISD = 0;
   624  0034  0188               	clrf	8	;volatile
   625                           
   626                           ;concentration.c: 48:     TRISA = 0;
   627  0035  0185               	clrf	5	;volatile
   628                           
   629                           ;concentration.c: 49:     ANSEL = 0;
   630  0036  1683               	bsf	3,5	;RP0=1, select bank3
   631  0037  1703               	bsf	3,6	;RP1=1, select bank3
   632  0038  0188               	clrf	8	;volatile
   633  0039                     l1286:	
   634                           
   635                           ;concentration.c: 50:     lcd_init(gameboard);
   636  0039  3008               	movlw	8
   637  003A  1283               	bcf	3,5	;RP0=0, select bank0
   638  003B  1303               	bcf	3,6	;RP1=0, select bank0
   639  003C  00A2               	movwf	lcd_init@port
   640  003D  3000               	movlw	0
   641  003E  00A3               	movwf	lcd_init@port+1
   642  003F  120A  118A  2111  120A  118A  	fcall	_lcd_init
   643  0044                     l1288:	
   644                           
   645                           ;concentration.c: 51:     lcd_init(scoreboard);
   646  0044  3005               	movlw	5
   647  0045  1283               	bcf	3,5	;RP0=0, select bank0
   648  0046  1303               	bcf	3,6	;RP1=0, select bank0
   649  0047  00A2               	movwf	lcd_init@port
   650  0048  3000               	movlw	0
   651  0049  00A3               	movwf	lcd_init@port+1
   652  004A  120A  118A  2111  120A  118A  	fcall	_lcd_init
   653  004F                     l1290:	
   654                           
   655                           ;concentration.c: 52:     joystick_init();
   656  004F  120A  118A  2224  120A  118A  	fcall	_joystick_init
   657  0054                     l1292:	
   658                           
   659                           ;concentration.c: 54:     const char board_r1[] = "0123456789ABCDEF";;concentration.c: 5
      +                          5:     const char board_r2[] = "THIS IS ROW 2...";;concentration.c: 56:     lcd_clear(ga
      +                          meboard);
   660  0054  3008               	movlw	8
   661  0055  1283               	bcf	3,5	;RP0=0, select bank0
   662  0056  1303               	bcf	3,6	;RP1=0, select bank0
   663  0057  00A0               	movwf	lcd_clear@port
   664  0058  3000               	movlw	0
   665  0059  00A1               	movwf	lcd_clear@port+1
   666  005A  120A  118A  2261  120A  118A  	fcall	_lcd_clear
   667  005F                     l1294:	
   668                           
   669                           ;concentration.c: 57:     lcd_puts(board_r1, gameboard);
   670  005F  3008               	movlw	8
   671  0060  1283               	bcf	3,5	;RP0=0, select bank0
   672  0061  1303               	bcf	3,6	;RP1=0, select bank0
   673  0062  00A0               	movwf	lcd_puts@port
   674  0063  3000               	movlw	0
   675  0064  00A1               	movwf	lcd_puts@port+1
   676  0065  3012               	movlw	(low ((main@board_r1-__stringbase)| (0+32768)))& (0+255)
   677  0066  120A  118A  21AC  120A  118A  	fcall	_lcd_puts
   678  006B                     l1296:	
   679                           
   680                           ;concentration.c: 58:     lcd_goto(0x40, gameboard);
   681  006B  3008               	movlw	8
   682  006C  1283               	bcf	3,5	;RP0=0, select bank0
   683  006D  1303               	bcf	3,6	;RP1=0, select bank0
   684  006E  00A0               	movwf	lcd_goto@port
   685  006F  3000               	movlw	0
   686  0070  00A1               	movwf	lcd_goto@port+1
   687  0071  3040               	movlw	64
   688  0072  120A  118A  2245  120A  118A  	fcall	_lcd_goto
   689  0077                     l1298:	
   690                           
   691                           ;concentration.c: 59:     lcd_puts(board_r2, gameboard);
   692  0077  3008               	movlw	8
   693  0078  1283               	bcf	3,5	;RP0=0, select bank0
   694  0079  1303               	bcf	3,6	;RP1=0, select bank0
   695  007A  00A0               	movwf	lcd_puts@port
   696  007B  3000               	movlw	0
   697  007C  00A1               	movwf	lcd_puts@port+1
   698  007D  3001               	movlw	(low ((main@board_r2-__stringbase)| (0+32768)))& (0+255)
   699  007E  120A  118A  21AC  120A  118A  	fcall	_lcd_puts
   700  0083                     l1300:	
   701                           
   702                           ;concentration.c: 60:     cursor_pos = 0x41;
   703  0083  3041               	movlw	65
   704  0084  1283               	bcf	3,5	;RP0=0, select bank0
   705  0085  1303               	bcf	3,6	;RP1=0, select bank0
   706  0086  00A5               	movwf	??_main
   707  0087  0825               	movf	??_main,w
   708  0088  00FB               	movwf	_cursor_pos
   709  0089                     l1302:	
   710                           
   711                           ;concentration.c: 63:         lcd_goto(cursor_pos, gameboard);
   712  0089  3008               	movlw	8
   713  008A  00A0               	movwf	lcd_goto@port
   714  008B  3000               	movlw	0
   715  008C  00A1               	movwf	lcd_goto@port+1
   716  008D  087B               	movf	_cursor_pos,w
   717  008E  120A  118A  2245  120A  118A  	fcall	_lcd_goto
   718  0093                     l1304:	
   719                           
   720                           ;concentration.c: 64:         if((cursor_pos>>4) == 4) {
   721  0093  087B               	movf	_cursor_pos,w
   722  0094  1283               	bcf	3,5	;RP0=0, select bank0
   723  0095  1303               	bcf	3,6	;RP1=0, select bank0
   724  0096  00A5               	movwf	??_main
   725  0097  3004               	movlw	4
   726  0098                     u435:	
   727  0098  1003               	clrc
   728  0099  0CA5               	rrf	??_main,f
   729  009A  3EFF               	addlw	-1
   730  009B  1D03               	skipz
   731  009C  2898               	goto	u435
   732  009D  3004               	movlw	4
   733  009E  0625               	xorwf	??_main,w
   734  009F  1D03               	btfss	3,2
   735  00A0  28A2               	goto	u441
   736  00A1  28A3               	goto	u440
   737  00A2                     u441:	
   738  00A2  28B0               	goto	l1308
   739  00A3                     u440:	
   740  00A3                     l1306:	
   741                           
   742                           ;concentration.c: 65:             current_char = board_r2[cursor_pos&0x0F];
   743  00A3  087B               	movf	_cursor_pos,w
   744  00A4  390F               	andlw	15
   745  00A5  3E01               	addlw	low ((main@board_r2-__stringbase)| (0+32768))
   746  00A6  0084               	movwf	4
   747  00A7  120A  118A  21D7  120A  118A  	fcall	stringdir
   748  00AC  00A5               	movwf	??_main
   749  00AD  0825               	movf	??_main,w
   750  00AE  00FA               	movwf	_current_char
   751                           
   752                           ;concentration.c: 66:         } else {
   753  00AF  28BC               	goto	l1310
   754  00B0                     l1308:	
   755                           
   756                           ;concentration.c: 67:             current_char = board_r1[cursor_pos&0x0F];
   757  00B0  087B               	movf	_cursor_pos,w
   758  00B1  390F               	andlw	15
   759  00B2  3E12               	addlw	low ((main@board_r1-__stringbase)| (0+32768))
   760  00B3  0084               	movwf	4
   761  00B4  120A  118A  21D7  120A  118A  	fcall	stringdir
   762  00B9  00A5               	movwf	??_main
   763  00BA  0825               	movf	??_main,w
   764  00BB  00FA               	movwf	_current_char
   765  00BC                     l1310:	
   766                           
   767                           ;concentration.c: 69:         lcd_putch(0xFF, gameboard);
   768  00BC  3008               	movlw	8
   769  00BD  00A0               	movwf	lcd_putch@port
   770  00BE  3000               	movlw	0
   771  00BF  00A1               	movwf	lcd_putch@port+1
   772  00C0  30FF               	movlw	255
   773  00C1  120A  118A  2290  120A  118A  	fcall	_lcd_putch
   774  00C6                     l1312:	
   775                           
   776                           ;concentration.c: 70:         DelayMs(250);
   777  00C6  30FA               	movlw	250
   778  00C7  00F2               	movwf	DelayMs@millis
   779  00C8  3000               	movlw	0
   780  00C9  00F3               	movwf	DelayMs@millis+1
   781  00CA  120A  118A  2279  120A  118A  	fcall	_DelayMs
   782  00CF                     l1314:	
   783                           
   784                           ;concentration.c: 71:         lcd_goto(cursor_pos, gameboard);
   785  00CF  3008               	movlw	8
   786  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   787  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   788  00D2  00A0               	movwf	lcd_goto@port
   789  00D3  3000               	movlw	0
   790  00D4  00A1               	movwf	lcd_goto@port+1
   791  00D5  087B               	movf	_cursor_pos,w
   792  00D6  120A  118A  2245  120A  118A  	fcall	_lcd_goto
   793  00DB                     l1316:	
   794                           
   795                           ;concentration.c: 72:         lcd_putch(current_char, gameboard);
   796  00DB  3008               	movlw	8
   797  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   798  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   799  00DE  00A0               	movwf	lcd_putch@port
   800  00DF  3000               	movlw	0
   801  00E0  00A1               	movwf	lcd_putch@port+1
   802  00E1  087A               	movf	_current_char,w
   803  00E2  120A  118A  2290  120A  118A  	fcall	_lcd_putch
   804  00E7                     l1318:	
   805                           
   806                           ;concentration.c: 73:         DelayMs(250);
   807  00E7  30FA               	movlw	250
   808  00E8  00F2               	movwf	DelayMs@millis
   809  00E9  3000               	movlw	0
   810  00EA  00F3               	movwf	DelayMs@millis+1
   811  00EB  120A  118A  2279  120A  118A  	fcall	_DelayMs
   812  00F0                     l1320:	
   813                           
   814                           ;concentration.c: 74:         cursor_pos++;
   815  00F0  3001               	movlw	1
   816  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   817  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   818  00F3  00A5               	movwf	??_main
   819  00F4  0825               	movf	??_main,w
   820  00F5  07FB               	addwf	_cursor_pos,f
   821                           
   822                           ;concentration.c: 75:         switch(cursor_pos) {
   823  00F6  28FE               	goto	l1328
   824  00F7                     l1322:	
   825                           
   826                           ;concentration.c: 77:                 cursor_pos = 0x40;
   827  00F7  3040               	movlw	64
   828  00F8  00A5               	movwf	??_main
   829  00F9  0825               	movf	??_main,w
   830  00FA  00FB               	movwf	_cursor_pos
   831                           
   832                           ;concentration.c: 78:                 break;
   833  00FB  2889               	goto	l1302
   834  00FC                     l1324:	
   835                           
   836                           ;concentration.c: 80:                 cursor_pos = 0x00;
   837  00FC  01FB               	clrf	_cursor_pos
   838                           
   839                           ;concentration.c: 81:                 break;
   840  00FD  2889               	goto	l1302
   841  00FE                     l1328:	
   842  00FE  087B               	movf	_cursor_pos,w
   843  00FF  00A5               	movwf	??_main
   844  0100  01A6               	clrf	??_main+1
   845                           
   846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 1, Range of values is 0 to 0
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte            4     3 (average)
   852                           ; direct_byte           11     8 (fixed)
   853                           ; jumptable            260     6 (fixed)
   854                           ;	Chosen strategy is simple_byte
   855  0101  0826               	movf	??_main+1,w
   856  0102  3A00               	xorlw	0	; case 0
   857  0103  1903               	skipnz
   858  0104  2906               	goto	l1378
   859  0105  2889               	goto	l1302
   860  0106                     l1378:	
   861                           
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 2, Range of values is 16 to 80
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte            7     4 (average)
   867                           ; direct_byte          206    11 (fixed)
   868                           ; jumptable            263     9 (fixed)
   869                           ;	Chosen strategy is simple_byte
   870  0106  0825               	movf	??_main,w
   871  0107  3A10               	xorlw	16	; case 16
   872  0108  1903               	skipnz
   873  0109  28F7               	goto	l1322
   874  010A  3A40               	xorlw	64	; case 80
   875  010B  1903               	skipnz
   876  010C  28FC               	goto	l1324
   877  010D  2889               	goto	l1302
   878  010E  120A  118A  280C   	ljmp	start
   879  0111                     __end_of_main:	
   880                           
   881                           	psect	text1
   882  01AC                     __ptext1:	
   883 ;; *************** function _lcd_puts *****************
   884 ;; Defined at:
   885 ;;		line 129 in file "lcd4bits.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  string          1    wreg     PTR const unsigned char 
   888 ;;		 -> main@board_r2(17), main@board_r1(17), 
   889 ;;  port            2    0[BANK0 ] PTR unsigned char 
   890 ;;		 -> PORTD(1), 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  string          1    3[BANK0 ] PTR const unsigned char 
   893 ;;		 -> main@board_r2(17), main@board_r1(17), 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       2       0       0       0
   904 ;;      Locals:         0       1       0       0       0
   905 ;;      Temps:          0       1       0       0       0
   906 ;;      Totals:         0       4       0       0       0
   907 ;;Total ram usage:        4 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    3
   910 ;; This function calls:
   911 ;;		_lcd_write
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _lcd_puts
   919  01AC                     _lcd_puts:	
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   923                           ;lcd_puts@string stored from wreg
   924  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   925  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   926  01AE  00A3               	movwf	lcd_puts@string
   927  01AF                     l1268:	
   928                           
   929                           ;lcd4bits.c: 130:     while (*string != 0) {
   930  01AF  29CA               	goto	l1274
   931  01B0                     l1270:	
   932                           
   933                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
   934  01B0  0823               	movf	lcd_puts@string,w
   935  01B1  0084               	movwf	4
   936  01B2  120A  118A  21D7  120A  118A  	fcall	stringdir
   937  01B7  00A2               	movwf	??_lcd_puts
   938  01B8  0822               	movf	??_lcd_puts,w
   939  01B9  00F4               	movwf	lcd_write@CmdChar
   940  01BA  0820               	movf	lcd_puts@port,w
   941  01BB  00F5               	movwf	lcd_write@port
   942  01BC  0821               	movf	lcd_puts@port+1,w
   943  01BD  00F6               	movwf	lcd_write@port+1
   944  01BE  3010               	movlw	16
   945  01BF  120A  118A  2163  120A  118A  	fcall	_lcd_write
   946  01C4                     l1272:	
   947  01C4  3001               	movlw	1
   948  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   949  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   950  01C7  00A2               	movwf	??_lcd_puts
   951  01C8  0822               	movf	??_lcd_puts,w
   952  01C9  07A3               	addwf	lcd_puts@string,f
   953  01CA                     l1274:	
   954                           
   955                           ;lcd4bits.c: 130:     while (*string != 0) {
   956  01CA  0823               	movf	lcd_puts@string,w
   957  01CB  0084               	movwf	4
   958  01CC  120A  118A  21D7  120A  118A  	fcall	stringdir
   959  01D1  3A00               	xorlw	0
   960  01D2  1D03               	skipz
   961  01D3  29D5               	goto	u421
   962  01D4  29D6               	goto	u420
   963  01D5                     u421:	
   964  01D5  29B0               	goto	l1270
   965  01D6                     u420:	
   966  01D6                     l143:	
   967  01D6  0008               	return
   968  01D7                     __end_of_lcd_puts:	
   969                           
   970                           	psect	text2
   971  0290                     __ptext2:	
   972 ;; *************** function _lcd_putch *****************
   973 ;; Defined at:
   974 ;;		line 136 in file "lcd4bits.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  character       1    wreg     unsigned char 
   977 ;;  port            2    0[BANK0 ] PTR unsigned char 
   978 ;;		 -> PORTA(1), PORTD(1), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  character       1    3[BANK0 ] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       2       0       0       0
   991 ;;      Locals:         0       1       0       0       0
   992 ;;      Temps:          0       1       0       0       0
   993 ;;      Totals:         0       4       0       0       0
   994 ;;Total ram usage:        4 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    3
   997 ;; This function calls:
   998 ;;		_lcd_write
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;;		_display_joystick_values
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _lcd_putch
  1007  0290                     _lcd_putch:	
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1011                           ;lcd_putch@character stored from wreg
  1012  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0292  00A3               	movwf	lcd_putch@character
  1015  0293                     l1280:	
  1016                           
  1017                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  1018  0293  0823               	movf	lcd_putch@character,w
  1019  0294  00A2               	movwf	??_lcd_putch
  1020  0295  0822               	movf	??_lcd_putch,w
  1021  0296  00F4               	movwf	lcd_write@CmdChar
  1022  0297  0820               	movf	lcd_putch@port,w
  1023  0298  00F5               	movwf	lcd_write@port
  1024  0299  0821               	movf	lcd_putch@port+1,w
  1025  029A  00F6               	movwf	lcd_write@port+1
  1026  029B  3010               	movlw	16
  1027  029C  120A  118A  2163  120A  118A  	fcall	_lcd_write
  1028  02A1                     l146:	
  1029  02A1  0008               	return
  1030  02A2                     __end_of_lcd_putch:	
  1031                           
  1032                           	psect	text3
  1033  0111                     __ptext3:	
  1034 ;; *************** function _lcd_init *****************
  1035 ;; Defined at:
  1036 ;;		line 155 in file "lcd4bits.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  port            2    2[BANK0 ] PTR unsigned char 
  1039 ;;		 -> PORTA(1), PORTD(1), 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       2       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       1       0       0       0
  1054 ;;      Totals:         0       3       0       0       0
  1055 ;;Total ram usage:        3 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    4
  1058 ;; This function calls:
  1059 ;;		_DelayMs
  1060 ;;		_lcd_clear
  1061 ;;		_lcd_write
  1062 ;;		_tmr0_init
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _lcd_init
  1070  0111                     _lcd_init:	
  1071  0111                     l1254:	
  1072                           ;incstack = 0
  1073                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1074                           
  1075                           
  1076                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  1077  0111  120A  118A  22AE  120A  118A  	fcall	_tmr0_init
  1078  0116                     l1256:	
  1079                           
  1080                           ;lcd4bits.c: 158:     *port = 0;
  1081  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0118  0822               	movf	lcd_init@port,w
  1084  0119  0084               	movwf	4
  1085  011A  1783               	bsf	3,7
  1086  011B  1C23               	btfss	lcd_init@port+1,0
  1087  011C  1383               	bcf	3,7
  1088  011D  0180               	clrf	0
  1089  011E                     l1258:	
  1090                           
  1091                           ;lcd4bits.c: 159:     DelayMs(15);
  1092  011E  300F               	movlw	15
  1093  011F  00F2               	movwf	DelayMs@millis
  1094  0120  3000               	movlw	0
  1095  0121  00F3               	movwf	DelayMs@millis+1
  1096  0122  120A  118A  2279  120A  118A  	fcall	_DelayMs
  1097  0127                     l1260:	
  1098                           
  1099                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  1100  0127  3028               	movlw	40
  1101  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1103  012A  00A4               	movwf	??_lcd_init
  1104  012B  0824               	movf	??_lcd_init,w
  1105  012C  00F4               	movwf	lcd_write@CmdChar
  1106  012D  0822               	movf	lcd_init@port,w
  1107  012E  00F5               	movwf	lcd_write@port
  1108  012F  0823               	movf	lcd_init@port+1,w
  1109  0130  00F6               	movwf	lcd_write@port+1
  1110  0131  3000               	movlw	0
  1111  0132  120A  118A  2163  120A  118A  	fcall	_lcd_write
  1112  0137                     l1262:	
  1113                           
  1114                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  1115  0137  300C               	movlw	12
  1116  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1118  013A  00A4               	movwf	??_lcd_init
  1119  013B  0824               	movf	??_lcd_init,w
  1120  013C  00F4               	movwf	lcd_write@CmdChar
  1121  013D  0822               	movf	lcd_init@port,w
  1122  013E  00F5               	movwf	lcd_write@port
  1123  013F  0823               	movf	lcd_init@port+1,w
  1124  0140  00F6               	movwf	lcd_write@port+1
  1125  0141  3000               	movlw	0
  1126  0142  120A  118A  2163  120A  118A  	fcall	_lcd_write
  1127  0147                     l1264:	
  1128                           
  1129                           ;lcd4bits.c: 162:     lcd_clear(port);
  1130  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0149  0822               	movf	lcd_init@port,w
  1133  014A  00A0               	movwf	lcd_clear@port
  1134  014B  0823               	movf	lcd_init@port+1,w
  1135  014C  00A1               	movwf	lcd_clear@port+1
  1136  014D  120A  118A  2261  120A  118A  	fcall	_lcd_clear
  1137  0152                     l1266:	
  1138                           
  1139                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  1140  0152  3006               	movlw	6
  1141  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0155  00A4               	movwf	??_lcd_init
  1144  0156  0824               	movf	??_lcd_init,w
  1145  0157  00F4               	movwf	lcd_write@CmdChar
  1146  0158  0822               	movf	lcd_init@port,w
  1147  0159  00F5               	movwf	lcd_write@port
  1148  015A  0823               	movf	lcd_init@port+1,w
  1149  015B  00F6               	movwf	lcd_write@port+1
  1150  015C  3000               	movlw	0
  1151  015D  120A  118A  2163  120A  118A  	fcall	_lcd_write
  1152  0162                     l152:	
  1153  0162  0008               	return
  1154  0163                     __end_of_lcd_init:	
  1155                           
  1156                           	psect	text4
  1157  02AE                     __ptext4:	
  1158 ;; *************** function _tmr0_init *****************
  1159 ;; Defined at:
  1160 ;;		line 72 in file "lcd4bits.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0
  1176 ;;      Temps:          1       0       0       0       0
  1177 ;;      Totals:         1       0       0       0       0
  1178 ;;Total ram usage:        1 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_lcd_init
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           
  1189                           ;psect for function _tmr0_init
  1190  02AE                     _tmr0_init:	
  1191  02AE                     l778:	
  1192                           ;incstack = 0
  1193                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  1194                           
  1195                           
  1196                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  1197  02AE  30C0               	movlw	192
  1198  02AF  00F2               	movwf	??_tmr0_init
  1199  02B0  0872               	movf	??_tmr0_init,w
  1200  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1201  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  1202  02B3  0581               	andwf	1,f	;volatile
  1203  02B4                     l780:	
  1204                           
  1205                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  1206  02B4  1501               	bsf	1,2	;volatile
  1207  02B5                     l117:	
  1208  02B5  0008               	return
  1209  02B6                     __end_of_tmr0_init:	
  1210                           
  1211                           	psect	text5
  1212  0261                     __ptext5:	
  1213 ;; *************** function _lcd_clear *****************
  1214 ;; Defined at:
  1215 ;;		line 123 in file "lcd4bits.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1218 ;;		 -> PORTA(1), PORTD(1), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       2       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         0       2       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    3
  1237 ;; This function calls:
  1238 ;;		_DelayMs
  1239 ;;		_lcd_write
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;;		_lcd_init
  1243 ;;		_display_joystick_values
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _lcd_clear
  1249  0261                     _lcd_clear:	
  1250  0261                     l1250:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1253                           
  1254                           
  1255                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  1256  0261  01F4               	clrf	lcd_write@CmdChar
  1257  0262  0AF4               	incf	lcd_write@CmdChar,f
  1258  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0265  0820               	movf	lcd_clear@port,w
  1261  0266  00F5               	movwf	lcd_write@port
  1262  0267  0821               	movf	lcd_clear@port+1,w
  1263  0268  00F6               	movwf	lcd_write@port+1
  1264  0269  3000               	movlw	0
  1265  026A  120A  118A  2163  120A  118A  	fcall	_lcd_write
  1266  026F                     l1252:	
  1267                           
  1268                           ;lcd4bits.c: 125:     DelayMs(2);
  1269  026F  3002               	movlw	2
  1270  0270  00F2               	movwf	DelayMs@millis
  1271  0271  3000               	movlw	0
  1272  0272  00F3               	movwf	DelayMs@millis+1
  1273  0273  120A  118A  2279  120A  118A  	fcall	_DelayMs
  1274  0278                     l137:	
  1275  0278  0008               	return
  1276  0279                     __end_of_lcd_clear:	
  1277                           
  1278                           	psect	text6
  1279  0245                     __ptext6:	
  1280 ;; *************** function _lcd_goto *****************
  1281 ;; Defined at:
  1282 ;;		line 146 in file "lcd4bits.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  position        1    wreg     unsigned char 
  1285 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1286 ;;		 -> PORTD(1), 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  position        1    3[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       2       0       0       0
  1299 ;;      Locals:         0       1       0       0       0
  1300 ;;      Temps:          0       1       0       0       0
  1301 ;;      Totals:         0       4       0       0       0
  1302 ;;Total ram usage:        4 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    3
  1305 ;; This function calls:
  1306 ;;		_DelayMs
  1307 ;;		_lcd_write
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _lcd_goto
  1315  0245                     _lcd_goto:	
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1319                           ;lcd_goto@position stored from wreg
  1320  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0247  00A3               	movwf	lcd_goto@position
  1323  0248                     l1276:	
  1324                           
  1325                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  1326  0248  0823               	movf	lcd_goto@position,w
  1327  0249  3E80               	addlw	128
  1328  024A  00A2               	movwf	??_lcd_goto
  1329  024B  0822               	movf	??_lcd_goto,w
  1330  024C  00F4               	movwf	lcd_write@CmdChar
  1331  024D  0820               	movf	lcd_goto@port,w
  1332  024E  00F5               	movwf	lcd_write@port
  1333  024F  0821               	movf	lcd_goto@port+1,w
  1334  0250  00F6               	movwf	lcd_write@port+1
  1335  0251  3000               	movlw	0
  1336  0252  120A  118A  2163  120A  118A  	fcall	_lcd_write
  1337  0257                     l1278:	
  1338                           
  1339                           ;lcd4bits.c: 149:     DelayMs(2);
  1340  0257  3002               	movlw	2
  1341  0258  00F2               	movwf	DelayMs@millis
  1342  0259  3000               	movlw	0
  1343  025A  00F3               	movwf	DelayMs@millis+1
  1344  025B  120A  118A  2279  120A  118A  	fcall	_DelayMs
  1345  0260                     l149:	
  1346  0260  0008               	return
  1347  0261                     __end_of_lcd_goto:	
  1348                           
  1349                           	psect	text7
  1350  0163                     __ptext7:	
  1351 ;; *************** function _lcd_write *****************
  1352 ;; Defined at:
  1353 ;;		line 110 in file "lcd4bits.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  mode            1    wreg     unsigned char 
  1356 ;;  CmdChar         1    4[COMMON] unsigned char 
  1357 ;;  port            2    5[COMMON] PTR unsigned char 
  1358 ;;		 -> PORTA(1), PORTD(1), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  mode            1    9[COMMON] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         3       0       0       0       0
  1371 ;;      Locals:         1       0       0       0       0
  1372 ;;      Temps:          2       0       0       0       0
  1373 ;;      Totals:         6       0       0       0       0
  1374 ;;Total ram usage:        6 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    2
  1377 ;; This function calls:
  1378 ;;		_Delay20us
  1379 ;; This function is called by:
  1380 ;;		_lcd_clear
  1381 ;;		_lcd_puts
  1382 ;;		_lcd_putch
  1383 ;;		_lcd_goto
  1384 ;;		_lcd_init
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _lcd_write
  1390  0163                     _lcd_write:	
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1394                           ;lcd_write@mode stored from wreg
  1395  0163  00F9               	movwf	lcd_write@mode
  1396  0164                     l978:	
  1397                           
  1398                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  1399  0164  0874               	movf	lcd_write@CmdChar,w
  1400  0165  00F7               	movwf	??_lcd_write
  1401  0166  3004               	movlw	4
  1402  0167                     u155:	
  1403  0167  1003               	clrc
  1404  0168  0CF7               	rrf	??_lcd_write,f
  1405  0169  3EFF               	addlw	-1
  1406  016A  1D03               	skipz
  1407  016B  2967               	goto	u155
  1408  016C  0877               	movf	??_lcd_write,w
  1409  016D  3E20               	addlw	32
  1410  016E  0479               	iorwf	lcd_write@mode,w
  1411  016F  00F8               	movwf	??_lcd_write+1
  1412  0170  0875               	movf	lcd_write@port,w
  1413  0171  0084               	movwf	4
  1414  0172  1783               	bsf	3,7
  1415  0173  1C76               	btfss	lcd_write@port+1,0
  1416  0174  1383               	bcf	3,7
  1417  0175  0878               	movf	??_lcd_write+1,w
  1418  0176  0080               	movwf	0
  1419  0177                     l980:	
  1420                           
  1421                           ;lcd4bits.c: 112:     Delay20us();
  1422  0177  120A  118A  22A2  120A  118A  	fcall	_Delay20us
  1423  017C                     l982:	
  1424                           
  1425                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  1426  017C  0875               	movf	lcd_write@port,w
  1427  017D  0084               	movwf	4
  1428  017E  1783               	bsf	3,7
  1429  017F  1C76               	btfss	lcd_write@port+1,0
  1430  0180  1383               	bcf	3,7
  1431  0181  0800               	movf	0,w
  1432  0182  39DF               	andlw	223
  1433  0183  00F7               	movwf	??_lcd_write
  1434  0184  0875               	movf	lcd_write@port,w
  1435  0185  0084               	movwf	4
  1436  0186  1783               	bsf	3,7
  1437  0187  1C76               	btfss	lcd_write@port+1,0
  1438  0188  1383               	bcf	3,7
  1439  0189  0877               	movf	??_lcd_write,w
  1440  018A  0080               	movwf	0
  1441  018B                     l984:	
  1442                           
  1443                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  1444  018B  0874               	movf	lcd_write@CmdChar,w
  1445  018C  390F               	andlw	15
  1446  018D  3E20               	addlw	32
  1447  018E  0479               	iorwf	lcd_write@mode,w
  1448  018F  00F7               	movwf	??_lcd_write
  1449  0190  0875               	movf	lcd_write@port,w
  1450  0191  0084               	movwf	4
  1451  0192  1783               	bsf	3,7
  1452  0193  1C76               	btfss	lcd_write@port+1,0
  1453  0194  1383               	bcf	3,7
  1454  0195  0877               	movf	??_lcd_write,w
  1455  0196  0080               	movwf	0
  1456  0197                     l986:	
  1457                           
  1458                           ;lcd4bits.c: 116:     Delay20us();
  1459  0197  120A  118A  22A2  120A  118A  	fcall	_Delay20us
  1460                           
  1461                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  1462  019C  0875               	movf	lcd_write@port,w
  1463  019D  0084               	movwf	4
  1464  019E  1783               	bsf	3,7
  1465  019F  1C76               	btfss	lcd_write@port+1,0
  1466  01A0  1383               	bcf	3,7
  1467  01A1  0800               	movf	0,w
  1468  01A2  39DF               	andlw	223
  1469  01A3  00F7               	movwf	??_lcd_write
  1470  01A4  0875               	movf	lcd_write@port,w
  1471  01A5  0084               	movwf	4
  1472  01A6  1783               	bsf	3,7
  1473  01A7  1C76               	btfss	lcd_write@port+1,0
  1474  01A8  1383               	bcf	3,7
  1475  01A9  0877               	movf	??_lcd_write,w
  1476  01AA  0080               	movwf	0
  1477  01AB                     l134:	
  1478  01AB  0008               	return
  1479  01AC                     __end_of_lcd_write:	
  1480                           
  1481                           	psect	text8
  1482  02A2                     __ptext8:	
  1483 ;; *************** function _Delay20us *****************
  1484 ;; Defined at:
  1485 ;;		line 99 in file "lcd4bits.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  next            1    3[COMMON] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         1       0       0       0       0
  1501 ;;      Temps:          1       0       0       0       0
  1502 ;;      Totals:         2       0       0       0       0
  1503 ;;Total ram usage:        2 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_lcd_write
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _Delay20us
  1515  02A2                     _Delay20us:	
  1516  02A2                     l958:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  1519                           
  1520                           
  1521                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  1522  02A2  01F3               	clrf	Delay20us@next
  1523  02A3                     l964:	
  1524  02A3  3001               	movlw	1
  1525  02A4  00F2               	movwf	??_Delay20us
  1526  02A5  0872               	movf	??_Delay20us,w
  1527  02A6  07F3               	addwf	Delay20us@next,f
  1528  02A7                     l966:	
  1529  02A7  3008               	movlw	8
  1530  02A8  0273               	subwf	Delay20us@next,w
  1531  02A9  1C03               	skipc
  1532  02AA  2AAC               	goto	u121
  1533  02AB  2AAD               	goto	u120
  1534  02AC                     u121:	
  1535  02AC  2AA3               	goto	l964
  1536  02AD                     u120:	
  1537  02AD                     l131:	
  1538  02AD  0008               	return
  1539  02AE                     __end_of_Delay20us:	
  1540                           
  1541                           	psect	text9
  1542  0279                     __ptext9:	
  1543 ;; *************** function _DelayMs *****************
  1544 ;; Defined at:
  1545 ;;		line 86 in file "lcd4bits.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  millis          2    2[COMMON] unsigned int 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         2       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         2       0       0       0       0
  1563 ;;Total ram usage:        2 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;;		_lcd_clear
  1571 ;;		_lcd_goto
  1572 ;;		_lcd_init
  1573 ;;		_display_joystick_values
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _DelayMs
  1579  0279                     _DelayMs:	
  1580  0279                     l968:	
  1581                           ;incstack = 0
  1582                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  1583                           
  1584                           
  1585                           ;lcd4bits.c: 87:     while (millis != 0) {
  1586  0279  2A89               	goto	l976
  1587  027A                     l970:	
  1588                           
  1589                           ;lcd4bits.c: 88:         TMR0 = 100;
  1590  027A  3064               	movlw	100
  1591  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1592  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1593  027D  0081               	movwf	1	;volatile
  1594  027E                     l972:	
  1595                           
  1596                           ;lcd4bits.c: 89:         T0IF = 0;
  1597  027E  110B               	bcf	11,2	;volatile
  1598  027F                     l122:	
  1599                           ;lcd4bits.c: 90:         while(T0IF == 0);
  1600                           
  1601  027F  1D0B               	btfss	11,2	;volatile
  1602  0280  2A82               	goto	u131
  1603  0281  2A83               	goto	u130
  1604  0282                     u131:	
  1605  0282  2A7F               	goto	l122
  1606  0283                     u130:	
  1607  0283                     l974:	
  1608                           
  1609                           ;lcd4bits.c: 91:         millis--;
  1610  0283  3001               	movlw	1
  1611  0284  02F2               	subwf	DelayMs@millis,f
  1612  0285  3000               	movlw	0
  1613  0286  1C03               	skipc
  1614  0287  03F3               	decf	DelayMs@millis+1,f
  1615  0288  02F3               	subwf	DelayMs@millis+1,f
  1616  0289                     l976:	
  1617                           
  1618                           ;lcd4bits.c: 87:     while (millis != 0) {
  1619  0289  0872               	movf	DelayMs@millis,w
  1620  028A  0473               	iorwf	DelayMs@millis+1,w
  1621  028B  1D03               	btfss	3,2
  1622  028C  2A8E               	goto	u141
  1623  028D  2A8F               	goto	u140
  1624  028E                     u141:	
  1625  028E  2A7A               	goto	l970
  1626  028F                     u140:	
  1627  028F                     l126:	
  1628  028F  0008               	return
  1629  0290                     __end_of_DelayMs:	
  1630                           
  1631                           	psect	text10
  1632  0224                     __ptext10:	
  1633 ;; *************** function _joystick_init *****************
  1634 ;; Defined at:
  1635 ;;		line 86 in file "concentration.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _joystick_init
  1665  0224                     _joystick_init:	
  1666  0224                     l1006:	
  1667                           ;incstack = 0
  1668                           ; Regs used in _joystick_init: [wreg+status,2]
  1669                           
  1670                           
  1671                           ;concentration.c: 87:     joystick_x_pos = 0;
  1672  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0226  01A9               	clrf	_joystick_x_pos
  1675  0227  01AA               	clrf	_joystick_x_pos+1
  1676                           
  1677                           ;concentration.c: 88:     joystick_y_pos = 0;
  1678  0228  01A7               	clrf	_joystick_y_pos
  1679  0229  01A8               	clrf	_joystick_y_pos+1
  1680                           
  1681                           ;concentration.c: 89:     PORTB = 0;
  1682  022A  0186               	clrf	6	;volatile
  1683  022B                     l1008:	
  1684                           
  1685                           ;concentration.c: 90:     nRBPU = 0;
  1686  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1687  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1688  022D  1381               	bcf	1,7	;volatile
  1689  022E                     l1010:	
  1690                           
  1691                           ;concentration.c: 91:     WPUB = 0x20;
  1692  022E  3020               	movlw	32
  1693  022F  0095               	movwf	21	;volatile
  1694  0230                     l1012:	
  1695                           
  1696                           ;concentration.c: 92:     TRISB = 0x38;
  1697  0230  3038               	movlw	56
  1698  0231  0086               	movwf	6	;volatile
  1699  0232                     l1014:	
  1700                           
  1701                           ;concentration.c: 93:     ANSELH = 0x0A;
  1702  0232  300A               	movlw	10
  1703  0233  1683               	bsf	3,5	;RP0=1, select bank3
  1704  0234  1703               	bsf	3,6	;RP1=1, select bank3
  1705  0235  0089               	movwf	9	;volatile
  1706  0236                     l1016:	
  1707                           
  1708                           ;concentration.c: 94:     GIE = 1;
  1709  0236  178B               	bsf	11,7	;volatile
  1710  0237                     l1018:	
  1711                           
  1712                           ;concentration.c: 95:     PEIE = 1;
  1713  0237  170B               	bsf	11,6	;volatile
  1714  0238                     l1020:	
  1715                           
  1716                           ;concentration.c: 96:     ADIF = 0;
  1717  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1719  023A  130C               	bcf	12,6	;volatile
  1720  023B                     l1022:	
  1721                           
  1722                           ;concentration.c: 97:     ADIE = 1;
  1723  023B  1683               	bsf	3,5	;RP0=1, select bank1
  1724  023C  1303               	bcf	3,6	;RP1=0, select bank1
  1725  023D  170C               	bsf	12,6	;volatile
  1726  023E                     l1024:	
  1727                           
  1728                           ;concentration.c: 98:     ADCON1 = 0x80;
  1729  023E  3080               	movlw	128
  1730  023F  009F               	movwf	31	;volatile
  1731  0240                     l1026:	
  1732                           
  1733                           ;concentration.c: 99:     ADCON0 = 0xA5;
  1734  0240  30A5               	movlw	165
  1735  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0243  009F               	movwf	31	;volatile
  1738  0244                     l91:	
  1739  0244  0008               	return
  1740  0245                     __end_of_joystick_init:	
  1741                           
  1742                           	psect	text11
  1743  01FF                     __ptext11:	
  1744 ;; *************** function _interrupt_handler *****************
  1745 ;; Defined at:
  1746 ;;		line 102 in file "concentration.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0
  1762 ;;      Temps:          2       0       0       0       0
  1763 ;;      Totals:         2       0       0       0       0
  1764 ;;Total ram usage:        2 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		Interrupt level 1
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _interrupt_handler
  1775  01FF                     _interrupt_handler:	
  1776  01FF                     i1l1096:	
  1777                           
  1778                           ;concentration.c: 103:     if(ADIF) {
  1779  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0201  1F0C               	btfss	12,6	;volatile
  1782  0202  2A04               	goto	u19_21
  1783  0203  2A05               	goto	u19_20
  1784  0204                     u19_21:	
  1785  0204  2A1D               	goto	i1l99
  1786  0205                     u19_20:	
  1787  0205                     i1l1098:	
  1788                           
  1789                           ;concentration.c: 104:         if(CHS1 == 1) {
  1790  0205  1D9F               	btfss	31,3	;volatile
  1791  0206  2A08               	goto	u20_21
  1792  0207  2A09               	goto	u20_20
  1793  0208                     u20_21:	
  1794  0208  2A13               	goto	i1l1104
  1795  0209                     u20_20:	
  1796  0209                     i1l1100:	
  1797                           
  1798                           ;concentration.c: 105:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  1799  0209  081E               	movf	30,w	;volatile
  1800  020A  00AA               	movwf	_joystick_x_pos+1
  1801  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1802  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1803  020D  081E               	movf	30,w	;volatile
  1804  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1805  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0210  00A9               	movwf	_joystick_x_pos
  1807  0211                     i1l1102:	
  1808                           
  1809                           ;concentration.c: 106:             CHS1 = 0;
  1810  0211  119F               	bcf	31,3	;volatile
  1811                           
  1812                           ;concentration.c: 107:         } else {
  1813  0212  2A1C               	goto	i1l1108
  1814  0213                     i1l1104:	
  1815                           
  1816                           ;concentration.c: 108:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  1817  0213  081E               	movf	30,w	;volatile
  1818  0214  00A8               	movwf	_joystick_y_pos+1
  1819  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1821  0217  081E               	movf	30,w	;volatile
  1822  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1824  021A  00A7               	movwf	_joystick_y_pos
  1825  021B                     i1l1106:	
  1826                           
  1827                           ;concentration.c: 109:             CHS1 = 1;
  1828  021B  159F               	bsf	31,3	;volatile
  1829  021C                     i1l1108:	
  1830                           
  1831                           ;concentration.c: 111:         ADIF = 0;
  1832  021C  130C               	bcf	12,6	;volatile
  1833  021D                     i1l99:	
  1834  021D  0871               	movf	??_interrupt_handler+1,w
  1835  021E  008A               	movwf	10
  1836  021F  0E70               	swapf	??_interrupt_handler^(0+4294967168),w
  1837  0220  0083               	movwf	3
  1838  0221  0EFE               	swapf	btemp,f
  1839  0222  0E7E               	swapf	btemp,w
  1840  0223  0009               	retfie
  1841  0224                     __end_of_interrupt_handler:	
  1842  007E                     btemp	set	126	;btemp
  1843  007E                     wtemp0	set	126
  1844                           
  1845                           	psect	intentry
  1846  0004                     __pintentry:	
  1847                           ;incstack = 0
  1848                           ; Regs used in _interrupt_handler: [wreg]
  1849                           
  1850  0004                     interrupt_function:	
  1851  007E                     saved_w	set	btemp
  1852  0004  00FE               	movwf	btemp
  1853  0005  0E03               	swapf	3,w
  1854  0006  00F0               	movwf	??_interrupt_handler
  1855  0007  080A               	movf	10,w
  1856  0008  00F1               	movwf	??_interrupt_handler+1
  1857  0009  120A  118A  29FF   	ljmp	_interrupt_handler


Data Sizes:
    Strings     0
    Constant    34
    Data        4
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      7      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> main@board_r2(CODE[17]), main@board_r1(CODE[17]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    _lcd_puts->_lcd_write
    _lcd_putch->_lcd_write
    _lcd_init->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_init
    _lcd_init->_lcd_clear

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13784
                                              5 BANK0      2     2      0
                            _DelayMs
                      _joystick_init
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     2      2    1678
                                              0 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_putch                                            4     2      2    2382
                                              0 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    4586
                                              2 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    2366
                                              0 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             4     2      2    2217
                                              0 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            6     3      3    1330
                                              4 COMMON     6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (3) _Delay20us                                            2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DelayMs                                              2     0      2     555
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupt_handler                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _joystick_init
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_goto
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_putch
     _lcd_write
       _Delay20us
   _lcd_puts
     _lcd_write
       _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 13 14:52:13 2020

                         pc 0002                 __CFG_CP$OFF 0000                          l91 0244  
                        _GO 00F9                          fsr 0004                         l122 027F  
                       l131 02AD                         l117 02B5                         l126 028F  
                       l134 01AB                         l143 01D6                         l152 0162  
                       l137 0278                         l146 02A1                         l149 0260  
                       l780 02B4                         l970 027A                         l778 02AE  
                       l972 027E                         l964 02A3                         l980 0177  
                       l974 0283                         l966 02A7                         l958 02A2  
                       l982 017C                         l976 0289                         l968 0279  
                       l984 018B                         l986 0197                         l978 0164  
                       _GIE 005F                         _RB5 0035                         u120 02AD  
                       u121 02AC                         u130 0283                         u131 0282  
                       u140 028F                         u141 028E                         u155 0167  
                       u420 01D6                         u421 01D5                         u440 00A3  
                       u441 00A2                __CFG_CPD$OFF 0000                         u435 0098  
                       _SCS 0478                         fsr0 0004                         indf 0000  
              __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000               lcd_clear@port 0020  
                      l1010 022E                        l1020 0238                        l1012 0230  
                      l1022 023B                        l1014 0232                        l1006 0224  
                      l1024 023E                        l1016 0236                        l1008 022B  
                      l1026 0240                        l1018 0237                        l1300 0083  
                      l1310 00BC                        l1302 0089                        l1320 00F0  
                      l1312 00C6                        l1304 0093                        l1250 0261  
                      l1322 00F7                        l1314 00CF                        l1306 00A3  
                      l1252 026F                        l1260 0127                        l1324 00FC  
                      l1316 00DB                        l1308 00B0                        l1262 0137  
                      l1254 0111                        l1270 01B0                        l1318 00E7  
                      l1264 0147                        l1256 0116                        l1280 0293  
                      l1272 01C4                        l1328 00FE                        l1266 0152  
                      l1258 011E                        l1274 01CA                        l1290 004F  
                      l1282 0031                        l1276 0248                        l1268 01AF  
                      l1292 0054                        l1284 0034                        l1278 0257  
                      l1294 005F                        l1286 0039                        l1296 006B  
                      l1288 0044                        l1378 0106                        l1298 0077  
                      _ADIE 0466                        _ADIF 0066                        _CHS1 00FB  
                      _T0IF 005A                        _PEIE 005E                        i1l99 021D  
                      _TMR0 0001                        _WPUB 0095                __CFG_WRT$OFF 0000  
                      _main 0031                        btemp 007E                lcd_init@port 0022  
                      start 000C                lcd_goto@port 0020               __CFG_IESO$OFF 0000  
           __end_of_DelayMs 0290               __CFG_MCLRE$ON 0000                main@board_r1 01EE  
              main@board_r2 01DD                       ?_main 0070               __CFG_WDTE$OFF 0000  
                     _ANSEL 0188                       u20_20 0209                       u20_21 0208  
                     u19_20 0205                       u19_21 0204                       _PORTA 0005  
                     _PORTB 0006                       _PORTD 0008                       _TRISA 0085  
                     _TRISB 0086                       _TRISD 0088              __CFG_FCMEN$OFF 0000  
                     _nRBPU 040F                lcd_puts@port 0020              __CFG_BOREN$OFF 0000  
                     pclath 000A                       status 0003                       wtemp0 007E  
             DelayMs@millis 0072             __initialization 000F                __end_of_main 0111  
        __size_of_Delay20us 000C                      ??_main 0025                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _ANSELH 0189                      i1l1100 0209                      i1l1102 0211  
                    i1l1104 0213                      i1l1106 021B                      i1l1108 021C  
                    i1l1096 01FF                      i1l1098 0205                   ??_DelayMs 0074  
            __CFG_PWRTE$OFF 0000            __end_of_lcd_init 0163            __end_of_lcd_goto 0261  
          __end_of_lcd_puts 01D7               lcd_putch@port 0020                      saved_w 007E  
         __end_of_Delay20us 02AE     __end_of__initialization 002D               lcd_write@mode 0079  
             lcd_write@port 0075              __pcstackCOMMON 0070                __pidataBANK0 02B6  
     __end_of_joystick_init 0245          __size_of_lcd_clear 0018          __size_of_lcd_putch 0012  
        __size_of_lcd_write 0049                  __pbssBANK0 0027                  __pmaintext 0031  
                __pintentry 0004          __size_of_tmr0_init 0008                   ?_lcd_init 0022  
                 ?_lcd_goto 0020                   ?_lcd_puts 0020                  __stringtab 01D7  
                   _DelayMs 0279           __end_of_lcd_clear 0279           __end_of_lcd_putch 02A2  
         __end_of_lcd_write 01AC                     __ptext1 01AC                     __ptext2 0290  
                   __ptext3 0111                     __ptext4 02AE                     __ptext5 0261  
                   __ptext6 0245                     __ptext7 0163                     __ptext8 02A2  
                   __ptext9 0279                  _cursor_pos 007B                  ??_lcd_init 0024  
                ??_lcd_goto 0022                  ??_lcd_puts 0022        end_of_initialization 002D  
         __end_of_tmr0_init 02B6              lcd_puts@string 0023                  _scoreboard 002B  
            _joystick_x_pos 0029              _joystick_y_pos 0027                   _Delay20us 02A2  
       start_initialization 000F                  ?_Delay20us 0070                 __pdataBANK0 002B  
               __pbssCOMMON 007A                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_DelayMs 0072      __size_of_joystick_init 0021           __size_of_lcd_init 0052  
         __size_of_lcd_goto 001C           __size_of_lcd_puts 002B                _current_char 007A  
                 _gameboard 002D                   _lcd_clear 0261                   __pstrings 01D7  
                 _lcd_putch 0290                   _lcd_write 0163           _interrupt_handler 01FF  
        ?_interrupt_handler 0070         ??_interrupt_handler 0070           interrupt_function 0004  
               ??_Delay20us 0072                   _tmr0_init 02AE                  ?_lcd_clear 0020  
 __end_of_interrupt_handler 0224               _joystick_init 0224                  ?_lcd_putch 0020  
               __stringbase 01DC                  ?_lcd_write 0074            __size_of_DelayMs 0017  
                ?_tmr0_init 0070              ?_joystick_init 0070          __end_of__stringtab 01DD  
                  __ptext10 0224                    __ptext11 01FF           __CFG_BOR4V$BOR21V 0000  
      __end_ofmain@board_r1 01FF        __end_ofmain@board_r2 01EE                    _lcd_init 0111  
                  _lcd_goto 0245                    _lcd_puts 01AC               __size_of_main 00E0  
        lcd_putch@character 0023                 ??_lcd_clear 007A  __size_of_interrupt_handler 0025  
               ??_lcd_putch 0022                 ??_lcd_write 0077                    intlevel1 0000  
             Delay20us@next 0073                 ??_tmr0_init 0072                   stringcode 01D7  
           ??_joystick_init 0072                  _OPTION_REG 0081            lcd_goto@position 0023  
                  stringdir 01D7                    stringtab 01D7            lcd_write@CmdChar 0074  
