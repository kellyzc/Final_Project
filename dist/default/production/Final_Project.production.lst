

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 10:48:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	idataBANK0
   296  03A6                     __pidataBANK0:	
   297                           
   298                           ;initializer for _scoreboard
   299  03A6  3405               	retlw	5
   300  03A7  3400               	retlw	0
   301                           
   302                           ;initializer for _gameboard
   303  03A8  3408               	retlw	8
   304  03A9  3400               	retlw	0
   305  0001                     _TMR0	set	1
   306  001E                     _ADRESH	set	30
   307  001F                     _ADCON0	set	31
   308  0006                     _PORTB	set	6
   309  0005                     _PORTA	set	5
   310  0008                     _PORTD	set	8
   311  005A                     _T0IF	set	90
   312  00FB                     _CHS1	set	251
   313  00F9                     _GO	set	249
   314  0066                     _ADIF	set	102
   315  005E                     _PEIE	set	94
   316  005F                     _GIE	set	95
   317  0081                     _OPTION_REG	set	129
   318  009E                     _ADRESL	set	158
   319  009F                     _ADCON1	set	159
   320  0086                     _TRISB	set	134
   321  0095                     _WPUB	set	149
   322  0085                     _TRISA	set	133
   323  0088                     _TRISD	set	136
   324  0466                     _ADIE	set	1126
   325  040F                     _nRBPU	set	1039
   326  0478                     _SCS	set	1144
   327  0189                     _ANSELH	set	393
   328  0188                     _ANSEL	set	392
   329                           
   330                           ; #config settings
   331  0000                     
   332                           	psect	cinit
   333  000F                     start_initialization:	
   334  000F                     __initialization:	
   335                           
   336                           ; Initialize objects allocated to BANK0
   337  000F  120A  118A  23A6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   338  0014  00AF               	movwf	__pdataBANK0& (0+127)
   339  0015  120A  118A  23A7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   340  001A  00B0               	movwf	(__pdataBANK0+1)& (0+127)
   341  001B  120A  118A  23A8  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   342  0020  00B1               	movwf	(__pdataBANK0+2)& (0+127)
   343  0021  120A  118A  23A9  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   344  0026  00B2               	movwf	(__pdataBANK0+3)& (0+127)
   345                           
   346                           ; Clear objects allocated to BANK0
   347  0027  01AB               	clrf	__pbssBANK0& (0+127)
   348  0028  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   349  0029  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   350  002A  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   351                           
   352                           ; Clear objects allocated to COMMON
   353  002B  01FB               	clrf	__pbssCOMMON& (0+127)
   354  002C                     end_of_initialization:	
   355                           ;End of C runtime variable initialization code
   356                           
   357  002C                     __end_of__initialization:	
   358  002C  0183               	clrf	3
   359  002D  120A  118A  29D4   	ljmp	_main	;jump to C main() function
   360                           
   361                           	psect	bssCOMMON
   362  007B                     __pbssCOMMON:	
   363  007B                     _cursor_pos:	
   364  007B                     	ds	1
   365                           
   366                           	psect	bssBANK0
   367  002B                     __pbssBANK0:	
   368  002B                     _joystick_y_pos:	
   369  002B                     	ds	2
   370  002D                     _joystick_x_pos:	
   371  002D                     	ds	2
   372                           
   373                           	psect	dataBANK0
   374  002F                     __pdataBANK0:	
   375  002F                     _scoreboard:	
   376  002F                     	ds	2
   377  0031                     _gameboard:	
   378  0031                     	ds	2
   379                           
   380                           	psect	cstackCOMMON
   381  0070                     __pcstackCOMMON:	
   382  0070                     ?_update_board:	
   383  0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_interrupt_handler:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_interrupt_handler:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_tmr0_init:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_Delay20us:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 1 bytes @ 0x0
   400  0070                     	ds	2
   401  0072                     ?_DelayMs:	
   402  0072                     ??_tmr0_init:	
   403                           ; 1 bytes @ 0x2
   404                           
   405  0072                     ??_Delay20us:	
   406                           ; 1 bytes @ 0x2
   407                           
   408  0072                     ?___awmod:	
   409                           ; 1 bytes @ 0x2
   410                           
   411  0072                     DelayMs@millis:	
   412                           ; 2 bytes @ 0x2
   413                           
   414  0072                     ___awmod@divisor:	
   415                           ; 2 bytes @ 0x2
   416                           
   417                           
   418                           ; 2 bytes @ 0x2
   419  0072                     	ds	1
   420  0073                     Delay20us@next:	
   421                           
   422                           ; 1 bytes @ 0x3
   423  0073                     	ds	1
   424  0074                     ??_DelayMs:	
   425  0074                     ?_lcd_write:	
   426                           ; 1 bytes @ 0x4
   427                           
   428  0074                     lcd_write@CmdChar:	
   429                           ; 1 bytes @ 0x4
   430                           
   431  0074                     ___awmod@dividend:	
   432                           ; 1 bytes @ 0x4
   433                           
   434                           
   435                           ; 2 bytes @ 0x4
   436  0074                     	ds	1
   437  0075                     lcd_write@port:	
   438                           
   439                           ; 2 bytes @ 0x5
   440  0075                     	ds	1
   441  0076                     ??___awmod:	
   442                           
   443                           ; 1 bytes @ 0x6
   444  0076                     	ds	1
   445  0077                     ??_lcd_write:	
   446  0077                     ___awmod@counter:	
   447                           ; 1 bytes @ 0x7
   448                           
   449                           
   450                           ; 1 bytes @ 0x7
   451  0077                     	ds	1
   452  0078                     ___awmod@sign:	
   453                           
   454                           ; 1 bytes @ 0x8
   455  0078                     	ds	1
   456  0079                     ??___awdiv:	
   457  0079                     lcd_write@mode:	
   458                           ; 1 bytes @ 0x9
   459                           
   460                           
   461                           ; 1 bytes @ 0x9
   462  0079                     	ds	1
   463  007A                     ??_lcd_init:	
   464  007A                     ??_lcd_putch:	
   465                           ; 1 bytes @ 0xA
   466                           
   467  007A                     ??_lcd_clear:	
   468                           ; 1 bytes @ 0xA
   469                           
   470                           
   471                           ; 1 bytes @ 0xA
   472  007A                     	ds	1
   473  007B                     ??_update_board:	
   474  007B                     ??_main:	
   475                           ; 1 bytes @ 0xB
   476                           
   477                           
   478                           	psect	cstackBANK0
   479  0020                     __pcstackBANK0:	
   480                           ; 1 bytes @ 0xB
   481                           
   482  0020                     ?_lcd_clear:	
   483  0020                     ?___awdiv:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0020                     lcd_clear@port:	
   487                           ; 2 bytes @ 0x0
   488                           
   489  0020                     ___awdiv@divisor:	
   490                           ; 2 bytes @ 0x0
   491                           
   492                           
   493                           ; 2 bytes @ 0x0
   494  0020                     	ds	2
   495  0022                     ?_lcd_init:	
   496  0022                     lcd_init@port:	
   497                           ; 1 bytes @ 0x2
   498                           
   499  0022                     ___awdiv@dividend:	
   500                           ; 2 bytes @ 0x2
   501                           
   502                           
   503                           ; 2 bytes @ 0x2
   504  0022                     	ds	2
   505  0024                     ___awdiv@counter:	
   506                           
   507                           ; 1 bytes @ 0x4
   508  0024                     	ds	1
   509  0025                     ___awdiv@sign:	
   510                           
   511                           ; 1 bytes @ 0x5
   512  0025                     	ds	1
   513  0026                     ___awdiv@quotient:	
   514                           
   515                           ; 2 bytes @ 0x6
   516  0026                     	ds	2
   517  0028                     ?_lcd_putch:	
   518  0028                     lcd_putch@port:	
   519                           ; 1 bytes @ 0x8
   520                           
   521                           
   522                           ; 2 bytes @ 0x8
   523  0028                     	ds	2
   524  002A                     lcd_putch@character:	
   525                           
   526                           ; 1 bytes @ 0xA
   527  002A                     	ds	1
   528                           
   529                           	psect	maintext
   530  01D4                     __pmaintext:	
   531 ;;
   532 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   533 ;;
   534 ;; *************** function _main *****************
   535 ;; Defined at:
   536 ;;		line 39 in file "concentration.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : B00/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0
   553 ;;      Totals:         0       0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels required when called:    5
   556 ;; This function calls:
   557 ;;		_DelayMs
   558 ;;		_lcd_init
   559 ;;		_lcd_putch
   560 ;;		_update_board
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _main
   568  01D4                     _main:	
   569  01D4                     l1213:	
   570                           ;incstack = 0
   571                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   572                           
   573                           
   574                           ;concentration.c: 41:     SCS = 0;
   575  01D4  1683               	bsf	3,5	;RP0=1, select bank1
   576  01D5  1303               	bcf	3,6	;RP1=0, select bank1
   577  01D6  100F               	bcf	15,0	;volatile
   578  01D7                     l1215:	
   579                           
   580                           ;concentration.c: 43:     TRISD = 0;
   581  01D7  0188               	clrf	8	;volatile
   582                           
   583                           ;concentration.c: 44:     TRISA = 0;
   584  01D8  0185               	clrf	5	;volatile
   585                           
   586                           ;concentration.c: 45:     ANSEL = 0;
   587  01D9  1683               	bsf	3,5	;RP0=1, select bank3
   588  01DA  1703               	bsf	3,6	;RP1=1, select bank3
   589  01DB  0188               	clrf	8	;volatile
   590  01DC                     l1217:	
   591                           
   592                           ;concentration.c: 46:     lcd_init(gameboard);
   593  01DC  3008               	movlw	8
   594  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   595  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   596  01DF  00A2               	movwf	lcd_init@port
   597  01E0  3000               	movlw	0
   598  01E1  00A3               	movwf	lcd_init@port+1
   599  01E2  120A  118A  2293  120A  118A  	fcall	_lcd_init
   600  01E7                     l1219:	
   601                           
   602                           ;concentration.c: 47:     lcd_init(scoreboard);
   603  01E7  3005               	movlw	5
   604  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   605  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   606  01EA  00A2               	movwf	lcd_init@port
   607  01EB  3000               	movlw	0
   608  01EC  00A3               	movwf	lcd_init@port+1
   609  01ED  120A  118A  2293  120A  118A  	fcall	_lcd_init
   610                           
   611                           ;concentration.c: 49:     PORTB = 0;
   612  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   613  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   614  01F4  0186               	clrf	6	;volatile
   615  01F5                     l1221:	
   616                           
   617                           ;concentration.c: 50:     nRBPU = 0;
   618  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   619  01F6  1303               	bcf	3,6	;RP1=0, select bank1
   620  01F7  1381               	bcf	1,7	;volatile
   621  01F8                     l1223:	
   622                           
   623                           ;concentration.c: 51:     WPUB = 0x31;
   624  01F8  3031               	movlw	49
   625  01F9  0095               	movwf	21	;volatile
   626  01FA                     l1225:	
   627                           
   628                           ;concentration.c: 52:     TRISB = 0x31;
   629  01FA  3031               	movlw	49
   630  01FB  0086               	movwf	6	;volatile
   631  01FC                     l1227:	
   632                           
   633                           ;concentration.c: 53:     ANSELH = 0x18;
   634  01FC  3018               	movlw	24
   635  01FD  1683               	bsf	3,5	;RP0=1, select bank3
   636  01FE  1703               	bsf	3,6	;RP1=1, select bank3
   637  01FF  0089               	movwf	9	;volatile
   638  0200                     l1229:	
   639                           
   640                           ;concentration.c: 54:     ADCON0 = 0xA5;
   641  0200  30A5               	movlw	165
   642  0201  1283               	bcf	3,5	;RP0=0, select bank0
   643  0202  1303               	bcf	3,6	;RP1=0, select bank0
   644  0203  009F               	movwf	31	;volatile
   645  0204                     l1231:	
   646                           
   647                           ;concentration.c: 55:     ADCON1 = 0x80;
   648  0204  3080               	movlw	128
   649  0205  1683               	bsf	3,5	;RP0=1, select bank1
   650  0206  1303               	bcf	3,6	;RP1=0, select bank1
   651  0207  009F               	movwf	31	;volatile
   652  0208                     l1233:	
   653                           
   654                           ;concentration.c: 56:     GIE = 1;
   655  0208  178B               	bsf	11,7	;volatile
   656  0209                     l1235:	
   657                           
   658                           ;concentration.c: 57:     PEIE = 1;
   659  0209  170B               	bsf	11,6	;volatile
   660  020A                     l1237:	
   661                           
   662                           ;concentration.c: 58:     ADIF = 0;
   663  020A  1283               	bcf	3,5	;RP0=0, select bank0
   664  020B  1303               	bcf	3,6	;RP1=0, select bank0
   665  020C  130C               	bcf	12,6	;volatile
   666  020D                     l1239:	
   667                           
   668                           ;concentration.c: 59:     ADIE = 1;
   669  020D  1683               	bsf	3,5	;RP0=1, select bank1
   670  020E  1303               	bcf	3,6	;RP1=0, select bank1
   671  020F  170C               	bsf	12,6	;volatile
   672  0210                     l1241:	
   673                           
   674                           ;concentration.c: 61:     lcd_putch('X', gameboard);
   675  0210  3008               	movlw	8
   676  0211  1283               	bcf	3,5	;RP0=0, select bank0
   677  0212  1303               	bcf	3,6	;RP1=0, select bank0
   678  0213  00A8               	movwf	lcd_putch@port
   679  0214  3000               	movlw	0
   680  0215  00A9               	movwf	lcd_putch@port+1
   681  0216  3058               	movlw	88
   682  0217  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   683  021C                     l1243:	
   684                           
   685                           ;concentration.c: 62:     lcd_putch('X', scoreboard);
   686  021C  3005               	movlw	5
   687  021D  1283               	bcf	3,5	;RP0=0, select bank0
   688  021E  1303               	bcf	3,6	;RP1=0, select bank0
   689  021F  00A8               	movwf	lcd_putch@port
   690  0220  3000               	movlw	0
   691  0221  00A9               	movwf	lcd_putch@port+1
   692  0222  3058               	movlw	88
   693  0223  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   694  0228                     l1245:	
   695                           
   696                           ;concentration.c: 63:     DelayMs(1000);
   697  0228  30E8               	movlw	232
   698  0229  00F2               	movwf	DelayMs@millis
   699  022A  3003               	movlw	3
   700  022B  00F3               	movwf	DelayMs@millis+1
   701  022C  120A  118A  2369  120A  118A  	fcall	_DelayMs
   702  0231                     l1247:	
   703                           
   704                           ;concentration.c: 65:         update_board();
   705  0231  120A  118A  2030  120A  118A  	fcall	_update_board
   706  0236  2A31               	goto	l1247
   707  0237  120A  118A  280C   	ljmp	start
   708  023A                     __end_of_main:	
   709                           
   710                           	psect	text1
   711  0030                     __ptext1:	
   712 ;; *************** function _update_board *****************
   713 ;; Defined at:
   714 ;;		line 69 in file "concentration.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    4
   735 ;; This function calls:
   736 ;;		_DelayMs
   737 ;;		___awdiv
   738 ;;		___awmod
   739 ;;		_lcd_clear
   740 ;;		_lcd_putch
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _update_board
   748  0030                     _update_board:	
   749  0030                     l1189:	
   750                           ;incstack = 0
   751                           ; Regs used in _update_board: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   752                           
   753                           
   754                           ;concentration.c: 71:     GO = 1;
   755  0030  1283               	bcf	3,5	;RP0=0, select bank0
   756  0031  1303               	bcf	3,6	;RP1=0, select bank0
   757  0032  149F               	bsf	31,1	;volatile
   758  0033                     l1191:	
   759                           
   760                           ;concentration.c: 72:     DelayMs(250);
   761  0033  30FA               	movlw	250
   762  0034  00F2               	movwf	DelayMs@millis
   763  0035  3000               	movlw	0
   764  0036  00F3               	movwf	DelayMs@millis+1
   765  0037  120A  118A  2369  120A  118A  	fcall	_DelayMs
   766  003C                     l1193:	
   767                           
   768                           ;concentration.c: 73:     lcd_clear(gameboard);
   769  003C  3008               	movlw	8
   770  003D  1283               	bcf	3,5	;RP0=0, select bank0
   771  003E  1303               	bcf	3,6	;RP1=0, select bank0
   772  003F  00A0               	movwf	lcd_clear@port
   773  0040  3000               	movlw	0
   774  0041  00A1               	movwf	lcd_clear@port+1
   775  0042  120A  118A  2351  120A  118A  	fcall	_lcd_clear
   776  0047                     l1195:	
   777                           
   778                           ;concentration.c: 74:     lcd_putch(0x30+(joystick_x_pos/1000), gameboard);
   779  0047  3008               	movlw	8
   780  0048  1283               	bcf	3,5	;RP0=0, select bank0
   781  0049  1303               	bcf	3,6	;RP1=0, select bank0
   782  004A  00A8               	movwf	lcd_putch@port
   783  004B  3000               	movlw	0
   784  004C  00A9               	movwf	lcd_putch@port+1
   785  004D  30E8               	movlw	232
   786  004E  00A0               	movwf	___awdiv@divisor
   787  004F  3003               	movlw	3
   788  0050  00A1               	movwf	___awdiv@divisor+1
   789  0051  082E               	movf	_joystick_x_pos+1,w
   790  0052  00A3               	movwf	___awdiv@dividend+1
   791  0053  082D               	movf	_joystick_x_pos,w
   792  0054  00A2               	movwf	___awdiv@dividend
   793  0055  120A  118A  216B  120A  118A  	fcall	___awdiv
   794  005A  1283               	bcf	3,5	;RP0=0, select bank0
   795  005B  1303               	bcf	3,6	;RP1=0, select bank0
   796  005C  0820               	movf	?___awdiv,w
   797  005D  3E30               	addlw	48
   798  005E  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   799  0063                     l1197:	
   800                           
   801                           ;concentration.c: 75:     lcd_putch(0x30+((joystick_x_pos%1000)/100), gameboard);
   802  0063  3008               	movlw	8
   803  0064  1283               	bcf	3,5	;RP0=0, select bank0
   804  0065  1303               	bcf	3,6	;RP1=0, select bank0
   805  0066  00A8               	movwf	lcd_putch@port
   806  0067  3000               	movlw	0
   807  0068  00A9               	movwf	lcd_putch@port+1
   808  0069  3064               	movlw	100
   809  006A  00A0               	movwf	___awdiv@divisor
   810  006B  3000               	movlw	0
   811  006C  00A1               	movwf	___awdiv@divisor+1
   812  006D  082E               	movf	_joystick_x_pos+1,w
   813  006E  00F5               	movwf	___awmod@dividend+1
   814  006F  082D               	movf	_joystick_x_pos,w
   815  0070  00F4               	movwf	___awmod@dividend
   816  0071  30E8               	movlw	232
   817  0072  00F2               	movwf	___awmod@divisor
   818  0073  3003               	movlw	3
   819  0074  00F3               	movwf	___awmod@divisor+1
   820  0075  120A  118A  223A  120A  118A  	fcall	___awmod
   821  007A  0873               	movf	?___awmod+1,w
   822  007B  1283               	bcf	3,5	;RP0=0, select bank0
   823  007C  1303               	bcf	3,6	;RP1=0, select bank0
   824  007D  00A3               	movwf	___awdiv@dividend+1
   825  007E  0872               	movf	?___awmod,w
   826  007F  00A2               	movwf	___awdiv@dividend
   827  0080  120A  118A  216B  120A  118A  	fcall	___awdiv
   828  0085  1283               	bcf	3,5	;RP0=0, select bank0
   829  0086  1303               	bcf	3,6	;RP1=0, select bank0
   830  0087  0820               	movf	?___awdiv,w
   831  0088  3E30               	addlw	48
   832  0089  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   833  008E                     l1199:	
   834                           
   835                           ;concentration.c: 76:     lcd_putch(0x30+((joystick_x_pos%100)/10), gameboard);
   836  008E  3008               	movlw	8
   837  008F  1283               	bcf	3,5	;RP0=0, select bank0
   838  0090  1303               	bcf	3,6	;RP1=0, select bank0
   839  0091  00A8               	movwf	lcd_putch@port
   840  0092  3000               	movlw	0
   841  0093  00A9               	movwf	lcd_putch@port+1
   842  0094  300A               	movlw	10
   843  0095  00A0               	movwf	___awdiv@divisor
   844  0096  3000               	movlw	0
   845  0097  00A1               	movwf	___awdiv@divisor+1
   846  0098  082E               	movf	_joystick_x_pos+1,w
   847  0099  00F5               	movwf	___awmod@dividend+1
   848  009A  082D               	movf	_joystick_x_pos,w
   849  009B  00F4               	movwf	___awmod@dividend
   850  009C  3064               	movlw	100
   851  009D  00F2               	movwf	___awmod@divisor
   852  009E  3000               	movlw	0
   853  009F  00F3               	movwf	___awmod@divisor+1
   854  00A0  120A  118A  223A  120A  118A  	fcall	___awmod
   855  00A5  0873               	movf	?___awmod+1,w
   856  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   857  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   858  00A8  00A3               	movwf	___awdiv@dividend+1
   859  00A9  0872               	movf	?___awmod,w
   860  00AA  00A2               	movwf	___awdiv@dividend
   861  00AB  120A  118A  216B  120A  118A  	fcall	___awdiv
   862  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   863  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   864  00B2  0820               	movf	?___awdiv,w
   865  00B3  3E30               	addlw	48
   866  00B4  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   867  00B9                     l1201:	
   868                           
   869                           ;concentration.c: 77:     lcd_putch(0x30+((joystick_x_pos%10)/1), gameboard);
   870  00B9  3008               	movlw	8
   871  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   872  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   873  00BC  00A8               	movwf	lcd_putch@port
   874  00BD  3000               	movlw	0
   875  00BE  00A9               	movwf	lcd_putch@port+1
   876  00BF  300A               	movlw	10
   877  00C0  00F2               	movwf	___awmod@divisor
   878  00C1  3000               	movlw	0
   879  00C2  00F3               	movwf	___awmod@divisor+1
   880  00C3  082E               	movf	_joystick_x_pos+1,w
   881  00C4  00F5               	movwf	___awmod@dividend+1
   882  00C5  082D               	movf	_joystick_x_pos,w
   883  00C6  00F4               	movwf	___awmod@dividend
   884  00C7  120A  118A  223A  120A  118A  	fcall	___awmod
   885  00CC  0872               	movf	?___awmod,w
   886  00CD  3E30               	addlw	48
   887  00CE  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   888  00D3                     l1203:	
   889                           
   890                           ;concentration.c: 78:     lcd_clear(scoreboard);
   891  00D3  3005               	movlw	5
   892  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   893  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   894  00D6  00A0               	movwf	lcd_clear@port
   895  00D7  3000               	movlw	0
   896  00D8  00A1               	movwf	lcd_clear@port+1
   897  00D9  120A  118A  2351  120A  118A  	fcall	_lcd_clear
   898  00DE                     l1205:	
   899                           
   900                           ;concentration.c: 79:     lcd_putch(0x30+(joystick_x_pos/1000), scoreboard);
   901  00DE  3005               	movlw	5
   902  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   903  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   904  00E1  00A8               	movwf	lcd_putch@port
   905  00E2  3000               	movlw	0
   906  00E3  00A9               	movwf	lcd_putch@port+1
   907  00E4  30E8               	movlw	232
   908  00E5  00A0               	movwf	___awdiv@divisor
   909  00E6  3003               	movlw	3
   910  00E7  00A1               	movwf	___awdiv@divisor+1
   911  00E8  082E               	movf	_joystick_x_pos+1,w
   912  00E9  00A3               	movwf	___awdiv@dividend+1
   913  00EA  082D               	movf	_joystick_x_pos,w
   914  00EB  00A2               	movwf	___awdiv@dividend
   915  00EC  120A  118A  216B  120A  118A  	fcall	___awdiv
   916  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   917  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   918  00F3  0820               	movf	?___awdiv,w
   919  00F4  3E30               	addlw	48
   920  00F5  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   921  00FA                     l1207:	
   922                           
   923                           ;concentration.c: 80:     lcd_putch(0x30+((joystick_x_pos%1000)/100), scoreboard);
   924  00FA  3005               	movlw	5
   925  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   926  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   927  00FD  00A8               	movwf	lcd_putch@port
   928  00FE  3000               	movlw	0
   929  00FF  00A9               	movwf	lcd_putch@port+1
   930  0100  3064               	movlw	100
   931  0101  00A0               	movwf	___awdiv@divisor
   932  0102  3000               	movlw	0
   933  0103  00A1               	movwf	___awdiv@divisor+1
   934  0104  082E               	movf	_joystick_x_pos+1,w
   935  0105  00F5               	movwf	___awmod@dividend+1
   936  0106  082D               	movf	_joystick_x_pos,w
   937  0107  00F4               	movwf	___awmod@dividend
   938  0108  30E8               	movlw	232
   939  0109  00F2               	movwf	___awmod@divisor
   940  010A  3003               	movlw	3
   941  010B  00F3               	movwf	___awmod@divisor+1
   942  010C  120A  118A  223A  120A  118A  	fcall	___awmod
   943  0111  0873               	movf	?___awmod+1,w
   944  0112  1283               	bcf	3,5	;RP0=0, select bank0
   945  0113  1303               	bcf	3,6	;RP1=0, select bank0
   946  0114  00A3               	movwf	___awdiv@dividend+1
   947  0115  0872               	movf	?___awmod,w
   948  0116  00A2               	movwf	___awdiv@dividend
   949  0117  120A  118A  216B  120A  118A  	fcall	___awdiv
   950  011C  1283               	bcf	3,5	;RP0=0, select bank0
   951  011D  1303               	bcf	3,6	;RP1=0, select bank0
   952  011E  0820               	movf	?___awdiv,w
   953  011F  3E30               	addlw	48
   954  0120  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   955  0125                     l1209:	
   956                           
   957                           ;concentration.c: 81:     lcd_putch(0x30+((joystick_x_pos%100)/10), scoreboard);
   958  0125  3005               	movlw	5
   959  0126  1283               	bcf	3,5	;RP0=0, select bank0
   960  0127  1303               	bcf	3,6	;RP1=0, select bank0
   961  0128  00A8               	movwf	lcd_putch@port
   962  0129  3000               	movlw	0
   963  012A  00A9               	movwf	lcd_putch@port+1
   964  012B  300A               	movlw	10
   965  012C  00A0               	movwf	___awdiv@divisor
   966  012D  3000               	movlw	0
   967  012E  00A1               	movwf	___awdiv@divisor+1
   968  012F  082E               	movf	_joystick_x_pos+1,w
   969  0130  00F5               	movwf	___awmod@dividend+1
   970  0131  082D               	movf	_joystick_x_pos,w
   971  0132  00F4               	movwf	___awmod@dividend
   972  0133  3064               	movlw	100
   973  0134  00F2               	movwf	___awmod@divisor
   974  0135  3000               	movlw	0
   975  0136  00F3               	movwf	___awmod@divisor+1
   976  0137  120A  118A  223A  120A  118A  	fcall	___awmod
   977  013C  0873               	movf	?___awmod+1,w
   978  013D  1283               	bcf	3,5	;RP0=0, select bank0
   979  013E  1303               	bcf	3,6	;RP1=0, select bank0
   980  013F  00A3               	movwf	___awdiv@dividend+1
   981  0140  0872               	movf	?___awmod,w
   982  0141  00A2               	movwf	___awdiv@dividend
   983  0142  120A  118A  216B  120A  118A  	fcall	___awdiv
   984  0147  1283               	bcf	3,5	;RP0=0, select bank0
   985  0148  1303               	bcf	3,6	;RP1=0, select bank0
   986  0149  0820               	movf	?___awdiv,w
   987  014A  3E30               	addlw	48
   988  014B  120A  118A  2380  120A  118A  	fcall	_lcd_putch
   989  0150                     l1211:	
   990                           
   991                           ;concentration.c: 82:     lcd_putch(0x30+((joystick_x_pos%10)/1), scoreboard);
   992  0150  3005               	movlw	5
   993  0151  1283               	bcf	3,5	;RP0=0, select bank0
   994  0152  1303               	bcf	3,6	;RP1=0, select bank0
   995  0153  00A8               	movwf	lcd_putch@port
   996  0154  3000               	movlw	0
   997  0155  00A9               	movwf	lcd_putch@port+1
   998  0156  300A               	movlw	10
   999  0157  00F2               	movwf	___awmod@divisor
  1000  0158  3000               	movlw	0
  1001  0159  00F3               	movwf	___awmod@divisor+1
  1002  015A  082E               	movf	_joystick_x_pos+1,w
  1003  015B  00F5               	movwf	___awmod@dividend+1
  1004  015C  082D               	movf	_joystick_x_pos,w
  1005  015D  00F4               	movwf	___awmod@dividend
  1006  015E  120A  118A  223A  120A  118A  	fcall	___awmod
  1007  0163  0872               	movf	?___awmod,w
  1008  0164  3E30               	addlw	48
  1009  0165  120A  118A  2380  120A  118A  	fcall	_lcd_putch
  1010  016A                     l73:	
  1011  016A  0008               	return
  1012  016B                     __end_of_update_board:	
  1013                           
  1014                           	psect	text2
  1015  0380                     __ptext2:	
  1016 ;; *************** function _lcd_putch *****************
  1017 ;; Defined at:
  1018 ;;		line 136 in file "lcd4bits.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  character       1    wreg     unsigned char 
  1021 ;;  port            2    8[BANK0 ] PTR unsigned char 
  1022 ;;		 -> PORTA(1), PORTD(1), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  character       1   10[BANK0 ] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       2       0       0       0
  1035 ;;      Locals:         0       1       0       0       0
  1036 ;;      Temps:          1       0       0       0       0
  1037 ;;      Totals:         1       3       0       0       0
  1038 ;;Total ram usage:        4 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    3
  1041 ;; This function calls:
  1042 ;;		_lcd_write
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;;		_update_board
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _lcd_putch
  1051  0380                     _lcd_putch:	
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1055                           ;lcd_putch@character stored from wreg
  1056  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0382  00AA               	movwf	lcd_putch@character
  1059  0383                     l1169:	
  1060                           
  1061                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  1062  0383  082A               	movf	lcd_putch@character,w
  1063  0384  00FA               	movwf	??_lcd_putch
  1064  0385  087A               	movf	??_lcd_putch,w
  1065  0386  00F4               	movwf	lcd_write@CmdChar
  1066  0387  0828               	movf	lcd_putch@port,w
  1067  0388  00F5               	movwf	lcd_write@port
  1068  0389  0829               	movf	lcd_putch@port+1,w
  1069  038A  00F6               	movwf	lcd_write@port+1
  1070  038B  3010               	movlw	16
  1071  038C  120A  118A  22E5  120A  118A  	fcall	_lcd_write
  1072  0391                     l119:	
  1073  0391  0008               	return
  1074  0392                     __end_of_lcd_putch:	
  1075                           
  1076                           	psect	text3
  1077  023A                     __ptext3:	
  1078 ;; *************** function ___awmod *****************
  1079 ;; Defined at:
  1080 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  divisor         2    2[COMMON] int 
  1083 ;;  dividend        2    4[COMMON] int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  sign            1    8[COMMON] unsigned char 
  1086 ;;  counter         1    7[COMMON] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2    2[COMMON] int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         4       0       0       0       0
  1097 ;;      Locals:         2       0       0       0       0
  1098 ;;      Temps:          1       0       0       0       0
  1099 ;;      Totals:         7       0       0       0       0
  1100 ;;Total ram usage:        7 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_update_board
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function ___awmod
  1112  023A                     ___awmod:	
  1113  023A                     l1015:	
  1114                           ;incstack = 0
  1115                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1116                           
  1117  023A  01F8               	clrf	___awmod@sign
  1118  023B                     l1017:	
  1119  023B  1FF5               	btfss	___awmod@dividend+1,7
  1120  023C  2A3E               	goto	u411
  1121  023D  2A3F               	goto	u410
  1122  023E                     u411:	
  1123  023E  2A46               	goto	l1023
  1124  023F                     u410:	
  1125  023F                     l1019:	
  1126  023F  09F4               	comf	___awmod@dividend,f
  1127  0240  09F5               	comf	___awmod@dividend+1,f
  1128  0241  0AF4               	incf	___awmod@dividend,f
  1129  0242  1903               	skipnz
  1130  0243  0AF5               	incf	___awmod@dividend+1,f
  1131  0244                     l1021:	
  1132  0244  01F8               	clrf	___awmod@sign
  1133  0245  0AF8               	incf	___awmod@sign,f
  1134  0246                     l1023:	
  1135  0246  1FF3               	btfss	___awmod@divisor+1,7
  1136  0247  2A49               	goto	u421
  1137  0248  2A4A               	goto	u420
  1138  0249                     u421:	
  1139  0249  2A4F               	goto	l1027
  1140  024A                     u420:	
  1141  024A                     l1025:	
  1142  024A  09F2               	comf	___awmod@divisor,f
  1143  024B  09F3               	comf	___awmod@divisor+1,f
  1144  024C  0AF2               	incf	___awmod@divisor,f
  1145  024D  1903               	skipnz
  1146  024E  0AF3               	incf	___awmod@divisor+1,f
  1147  024F                     l1027:	
  1148  024F  0872               	movf	___awmod@divisor,w
  1149  0250  0473               	iorwf	___awmod@divisor+1,w
  1150  0251  1903               	btfsc	3,2
  1151  0252  2A54               	goto	u431
  1152  0253  2A55               	goto	u430
  1153  0254                     u431:	
  1154  0254  2A84               	goto	l1045
  1155  0255                     u430:	
  1156  0255                     l1029:	
  1157  0255  01F7               	clrf	___awmod@counter
  1158  0256  0AF7               	incf	___awmod@counter,f
  1159  0257  2A63               	goto	l1035
  1160  0258                     l1031:	
  1161  0258  3001               	movlw	1
  1162  0259                     u445:	
  1163  0259  1003               	clrc
  1164  025A  0DF2               	rlf	___awmod@divisor,f
  1165  025B  0DF3               	rlf	___awmod@divisor+1,f
  1166  025C  3EFF               	addlw	-1
  1167  025D  1D03               	skipz
  1168  025E  2A59               	goto	u445
  1169  025F                     l1033:	
  1170  025F  3001               	movlw	1
  1171  0260  00F6               	movwf	??___awmod
  1172  0261  0876               	movf	??___awmod,w
  1173  0262  07F7               	addwf	___awmod@counter,f
  1174  0263                     l1035:	
  1175  0263  1FF3               	btfss	___awmod@divisor+1,7
  1176  0264  2A66               	goto	u451
  1177  0265  2A67               	goto	u450
  1178  0266                     u451:	
  1179  0266  2A58               	goto	l1031
  1180  0267                     u450:	
  1181  0267                     l1037:	
  1182  0267  0873               	movf	___awmod@divisor+1,w
  1183  0268  0275               	subwf	___awmod@dividend+1,w
  1184  0269  1D03               	skipz
  1185  026A  2A6D               	goto	u465
  1186  026B  0872               	movf	___awmod@divisor,w
  1187  026C  0274               	subwf	___awmod@dividend,w
  1188  026D                     u465:	
  1189  026D  1C03               	skipc
  1190  026E  2A70               	goto	u461
  1191  026F  2A71               	goto	u460
  1192  0270                     u461:	
  1193  0270  2A77               	goto	l1041
  1194  0271                     u460:	
  1195  0271                     l1039:	
  1196  0271  0872               	movf	___awmod@divisor,w
  1197  0272  02F4               	subwf	___awmod@dividend,f
  1198  0273  0873               	movf	___awmod@divisor+1,w
  1199  0274  1C03               	skipc
  1200  0275  03F5               	decf	___awmod@dividend+1,f
  1201  0276  02F5               	subwf	___awmod@dividend+1,f
  1202  0277                     l1041:	
  1203  0277  3001               	movlw	1
  1204  0278                     u475:	
  1205  0278  1003               	clrc
  1206  0279  0CF3               	rrf	___awmod@divisor+1,f
  1207  027A  0CF2               	rrf	___awmod@divisor,f
  1208  027B  3EFF               	addlw	-1
  1209  027C  1D03               	skipz
  1210  027D  2A78               	goto	u475
  1211  027E                     l1043:	
  1212  027E  3001               	movlw	1
  1213  027F  02F7               	subwf	___awmod@counter,f
  1214  0280  1D03               	btfss	3,2
  1215  0281  2A83               	goto	u481
  1216  0282  2A84               	goto	u480
  1217  0283                     u481:	
  1218  0283  2A67               	goto	l1037
  1219  0284                     u480:	
  1220  0284                     l1045:	
  1221  0284  0878               	movf	___awmod@sign,w
  1222  0285  1903               	btfsc	3,2
  1223  0286  2A88               	goto	u491
  1224  0287  2A89               	goto	u490
  1225  0288                     u491:	
  1226  0288  2A8E               	goto	l1049
  1227  0289                     u490:	
  1228  0289                     l1047:	
  1229  0289  09F4               	comf	___awmod@dividend,f
  1230  028A  09F5               	comf	___awmod@dividend+1,f
  1231  028B  0AF4               	incf	___awmod@dividend,f
  1232  028C  1903               	skipnz
  1233  028D  0AF5               	incf	___awmod@dividend+1,f
  1234  028E                     l1049:	
  1235  028E  0875               	movf	___awmod@dividend+1,w
  1236  028F  00F3               	movwf	?___awmod+1
  1237  0290  0874               	movf	___awmod@dividend,w
  1238  0291  00F2               	movwf	?___awmod
  1239  0292                     l377:	
  1240  0292  0008               	return
  1241  0293                     __end_of___awmod:	
  1242                           
  1243                           	psect	text4
  1244  016B                     __ptext4:	
  1245 ;; *************** function ___awdiv *****************
  1246 ;; Defined at:
  1247 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  divisor         2    0[BANK0 ] int 
  1250 ;;  dividend        2    2[BANK0 ] int 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  quotient        2    6[BANK0 ] int 
  1253 ;;  sign            1    5[BANK0 ] unsigned char 
  1254 ;;  counter         1    4[BANK0 ] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2    0[BANK0 ] int 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       4       0       0       0
  1265 ;;      Locals:         0       4       0       0       0
  1266 ;;      Temps:          1       0       0       0       0
  1267 ;;      Totals:         1       8       0       0       0
  1268 ;;Total ram usage:        9 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_update_board
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function ___awdiv
  1280  016B                     ___awdiv:	
  1281  016B                     l971:	
  1282                           ;incstack = 0
  1283                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1284                           
  1285  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1286  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1287  016D  01A5               	clrf	___awdiv@sign
  1288  016E                     l973:	
  1289  016E  1FA1               	btfss	___awdiv@divisor+1,7
  1290  016F  2971               	goto	u311
  1291  0170  2972               	goto	u310
  1292  0171                     u311:	
  1293  0171  2979               	goto	l979
  1294  0172                     u310:	
  1295  0172                     l975:	
  1296  0172  09A0               	comf	___awdiv@divisor,f
  1297  0173  09A1               	comf	___awdiv@divisor+1,f
  1298  0174  0AA0               	incf	___awdiv@divisor,f
  1299  0175  1903               	skipnz
  1300  0176  0AA1               	incf	___awdiv@divisor+1,f
  1301  0177                     l977:	
  1302  0177  01A5               	clrf	___awdiv@sign
  1303  0178  0AA5               	incf	___awdiv@sign,f
  1304  0179                     l979:	
  1305  0179  1FA3               	btfss	___awdiv@dividend+1,7
  1306  017A  297C               	goto	u321
  1307  017B  297D               	goto	u320
  1308  017C                     u321:	
  1309  017C  2986               	goto	l985
  1310  017D                     u320:	
  1311  017D                     l981:	
  1312  017D  09A2               	comf	___awdiv@dividend,f
  1313  017E  09A3               	comf	___awdiv@dividend+1,f
  1314  017F  0AA2               	incf	___awdiv@dividend,f
  1315  0180  1903               	skipnz
  1316  0181  0AA3               	incf	___awdiv@dividend+1,f
  1317  0182                     l983:	
  1318  0182  3001               	movlw	1
  1319  0183  00F9               	movwf	??___awdiv
  1320  0184  0879               	movf	??___awdiv,w
  1321  0185  06A5               	xorwf	___awdiv@sign,f
  1322  0186                     l985:	
  1323  0186  01A6               	clrf	___awdiv@quotient
  1324  0187  01A7               	clrf	___awdiv@quotient+1
  1325  0188                     l987:	
  1326  0188  0820               	movf	___awdiv@divisor,w
  1327  0189  0421               	iorwf	___awdiv@divisor+1,w
  1328  018A  1903               	btfsc	3,2
  1329  018B  298D               	goto	u331
  1330  018C  298E               	goto	u330
  1331  018D                     u331:	
  1332  018D  29C5               	goto	l1007
  1333  018E                     u330:	
  1334  018E                     l989:	
  1335  018E  01A4               	clrf	___awdiv@counter
  1336  018F  0AA4               	incf	___awdiv@counter,f
  1337  0190  299C               	goto	l995
  1338  0191                     l991:	
  1339  0191  3001               	movlw	1
  1340  0192                     u345:	
  1341  0192  1003               	clrc
  1342  0193  0DA0               	rlf	___awdiv@divisor,f
  1343  0194  0DA1               	rlf	___awdiv@divisor+1,f
  1344  0195  3EFF               	addlw	-1
  1345  0196  1D03               	skipz
  1346  0197  2992               	goto	u345
  1347  0198                     l993:	
  1348  0198  3001               	movlw	1
  1349  0199  00F9               	movwf	??___awdiv
  1350  019A  0879               	movf	??___awdiv,w
  1351  019B  07A4               	addwf	___awdiv@counter,f
  1352  019C                     l995:	
  1353  019C  1FA1               	btfss	___awdiv@divisor+1,7
  1354  019D  299F               	goto	u351
  1355  019E  29A0               	goto	u350
  1356  019F                     u351:	
  1357  019F  2991               	goto	l991
  1358  01A0                     u350:	
  1359  01A0                     l997:	
  1360  01A0  3001               	movlw	1
  1361  01A1                     u365:	
  1362  01A1  1003               	clrc
  1363  01A2  0DA6               	rlf	___awdiv@quotient,f
  1364  01A3  0DA7               	rlf	___awdiv@quotient+1,f
  1365  01A4  3EFF               	addlw	-1
  1366  01A5  1D03               	skipz
  1367  01A6  29A1               	goto	u365
  1368  01A7  0821               	movf	___awdiv@divisor+1,w
  1369  01A8  0223               	subwf	___awdiv@dividend+1,w
  1370  01A9  1D03               	skipz
  1371  01AA  29AD               	goto	u375
  1372  01AB  0820               	movf	___awdiv@divisor,w
  1373  01AC  0222               	subwf	___awdiv@dividend,w
  1374  01AD                     u375:	
  1375  01AD  1C03               	skipc
  1376  01AE  29B0               	goto	u371
  1377  01AF  29B1               	goto	u370
  1378  01B0                     u371:	
  1379  01B0  29B8               	goto	l1003
  1380  01B1                     u370:	
  1381  01B1                     l999:	
  1382  01B1  0820               	movf	___awdiv@divisor,w
  1383  01B2  02A2               	subwf	___awdiv@dividend,f
  1384  01B3  0821               	movf	___awdiv@divisor+1,w
  1385  01B4  1C03               	skipc
  1386  01B5  03A3               	decf	___awdiv@dividend+1,f
  1387  01B6  02A3               	subwf	___awdiv@dividend+1,f
  1388  01B7                     l1001:	
  1389  01B7  1426               	bsf	___awdiv@quotient,0
  1390  01B8                     l1003:	
  1391  01B8  3001               	movlw	1
  1392  01B9                     u385:	
  1393  01B9  1003               	clrc
  1394  01BA  0CA1               	rrf	___awdiv@divisor+1,f
  1395  01BB  0CA0               	rrf	___awdiv@divisor,f
  1396  01BC  3EFF               	addlw	-1
  1397  01BD  1D03               	skipz
  1398  01BE  29B9               	goto	u385
  1399  01BF                     l1005:	
  1400  01BF  3001               	movlw	1
  1401  01C0  02A4               	subwf	___awdiv@counter,f
  1402  01C1  1D03               	btfss	3,2
  1403  01C2  29C4               	goto	u391
  1404  01C3  29C5               	goto	u390
  1405  01C4                     u391:	
  1406  01C4  29A0               	goto	l997
  1407  01C5                     u390:	
  1408  01C5                     l1007:	
  1409  01C5  0825               	movf	___awdiv@sign,w
  1410  01C6  1903               	btfsc	3,2
  1411  01C7  29C9               	goto	u401
  1412  01C8  29CA               	goto	u400
  1413  01C9                     u401:	
  1414  01C9  29CF               	goto	l1011
  1415  01CA                     u400:	
  1416  01CA                     l1009:	
  1417  01CA  09A6               	comf	___awdiv@quotient,f
  1418  01CB  09A7               	comf	___awdiv@quotient+1,f
  1419  01CC  0AA6               	incf	___awdiv@quotient,f
  1420  01CD  1903               	skipnz
  1421  01CE  0AA7               	incf	___awdiv@quotient+1,f
  1422  01CF                     l1011:	
  1423  01CF  0827               	movf	___awdiv@quotient+1,w
  1424  01D0  00A1               	movwf	?___awdiv+1
  1425  01D1  0826               	movf	___awdiv@quotient,w
  1426  01D2  00A0               	movwf	?___awdiv
  1427  01D3                     l364:	
  1428  01D3  0008               	return
  1429  01D4                     __end_of___awdiv:	
  1430                           
  1431                           	psect	text5
  1432  0293                     __ptext5:	
  1433 ;; *************** function _lcd_init *****************
  1434 ;; Defined at:
  1435 ;;		line 155 in file "lcd4bits.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  port            2    2[BANK0 ] PTR unsigned char 
  1438 ;;		 -> PORTA(1), PORTD(1), 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       2       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          1       0       0       0       0
  1453 ;;      Totals:         1       2       0       0       0
  1454 ;;Total ram usage:        3 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    4
  1457 ;; This function calls:
  1458 ;;		_DelayMs
  1459 ;;		_lcd_clear
  1460 ;;		_lcd_write
  1461 ;;		_tmr0_init
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _lcd_init
  1469  0293                     _lcd_init:	
  1470  0293                     l1175:	
  1471                           ;incstack = 0
  1472                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1473                           
  1474                           
  1475                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  1476  0293  120A  118A  239E  120A  118A  	fcall	_tmr0_init
  1477  0298                     l1177:	
  1478                           
  1479                           ;lcd4bits.c: 158:     *port = 0;
  1480  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1482  029A  0822               	movf	lcd_init@port,w
  1483  029B  0084               	movwf	4
  1484  029C  1783               	bsf	3,7
  1485  029D  1C23               	btfss	lcd_init@port+1,0
  1486  029E  1383               	bcf	3,7
  1487  029F  0180               	clrf	0
  1488  02A0                     l1179:	
  1489                           
  1490                           ;lcd4bits.c: 159:     DelayMs(15);
  1491  02A0  300F               	movlw	15
  1492  02A1  00F2               	movwf	DelayMs@millis
  1493  02A2  3000               	movlw	0
  1494  02A3  00F3               	movwf	DelayMs@millis+1
  1495  02A4  120A  118A  2369  120A  118A  	fcall	_DelayMs
  1496  02A9                     l1181:	
  1497                           
  1498                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  1499  02A9  3028               	movlw	40
  1500  02AA  00FA               	movwf	??_lcd_init
  1501  02AB  087A               	movf	??_lcd_init,w
  1502  02AC  00F4               	movwf	lcd_write@CmdChar
  1503  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1504  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1505  02AF  0822               	movf	lcd_init@port,w
  1506  02B0  00F5               	movwf	lcd_write@port
  1507  02B1  0823               	movf	lcd_init@port+1,w
  1508  02B2  00F6               	movwf	lcd_write@port+1
  1509  02B3  3000               	movlw	0
  1510  02B4  120A  118A  22E5  120A  118A  	fcall	_lcd_write
  1511  02B9                     l1183:	
  1512                           
  1513                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  1514  02B9  300C               	movlw	12
  1515  02BA  00FA               	movwf	??_lcd_init
  1516  02BB  087A               	movf	??_lcd_init,w
  1517  02BC  00F4               	movwf	lcd_write@CmdChar
  1518  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1519  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1520  02BF  0822               	movf	lcd_init@port,w
  1521  02C0  00F5               	movwf	lcd_write@port
  1522  02C1  0823               	movf	lcd_init@port+1,w
  1523  02C2  00F6               	movwf	lcd_write@port+1
  1524  02C3  3000               	movlw	0
  1525  02C4  120A  118A  22E5  120A  118A  	fcall	_lcd_write
  1526  02C9                     l1185:	
  1527                           
  1528                           ;lcd4bits.c: 162:     lcd_clear(port);
  1529  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1530  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1531  02CB  0822               	movf	lcd_init@port,w
  1532  02CC  00A0               	movwf	lcd_clear@port
  1533  02CD  0823               	movf	lcd_init@port+1,w
  1534  02CE  00A1               	movwf	lcd_clear@port+1
  1535  02CF  120A  118A  2351  120A  118A  	fcall	_lcd_clear
  1536  02D4                     l1187:	
  1537                           
  1538                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  1539  02D4  3006               	movlw	6
  1540  02D5  00FA               	movwf	??_lcd_init
  1541  02D6  087A               	movf	??_lcd_init,w
  1542  02D7  00F4               	movwf	lcd_write@CmdChar
  1543  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1544  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1545  02DA  0822               	movf	lcd_init@port,w
  1546  02DB  00F5               	movwf	lcd_write@port
  1547  02DC  0823               	movf	lcd_init@port+1,w
  1548  02DD  00F6               	movwf	lcd_write@port+1
  1549  02DE  3000               	movlw	0
  1550  02DF  120A  118A  22E5  120A  118A  	fcall	_lcd_write
  1551  02E4                     l125:	
  1552  02E4  0008               	return
  1553  02E5                     __end_of_lcd_init:	
  1554                           
  1555                           	psect	text6
  1556  039E                     __ptext6:	
  1557 ;; *************** function _tmr0_init *****************
  1558 ;; Defined at:
  1559 ;;		line 72 in file "lcd4bits.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0
  1575 ;;      Temps:          1       0       0       0       0
  1576 ;;      Totals:         1       0       0       0       0
  1577 ;;Total ram usage:        1 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_lcd_init
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _tmr0_init
  1589  039E                     _tmr0_init:	
  1590  039E                     l753:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  1593                           
  1594                           
  1595                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  1596  039E  30C0               	movlw	192
  1597  039F  00F2               	movwf	??_tmr0_init
  1598  03A0  0872               	movf	??_tmr0_init,w
  1599  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  1600  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  1601  03A3  0581               	andwf	1,f	;volatile
  1602  03A4                     l755:	
  1603                           
  1604                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  1605  03A4  1501               	bsf	1,2	;volatile
  1606  03A5                     l90:	
  1607  03A5  0008               	return
  1608  03A6                     __end_of_tmr0_init:	
  1609                           
  1610                           	psect	text7
  1611  0351                     __ptext7:	
  1612 ;; *************** function _lcd_clear *****************
  1613 ;; Defined at:
  1614 ;;		line 123 in file "lcd4bits.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  port            2    0[BANK0 ] PTR unsigned char 
  1617 ;;		 -> PORTA(1), PORTD(1), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       2       0       0       0
  1630 ;;      Locals:         0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         0       2       0       0       0
  1633 ;;Total ram usage:        2 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    3
  1636 ;; This function calls:
  1637 ;;		_DelayMs
  1638 ;;		_lcd_write
  1639 ;; This function is called by:
  1640 ;;		_update_board
  1641 ;;		_lcd_init
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _lcd_clear
  1647  0351                     _lcd_clear:	
  1648  0351                     l1171:	
  1649                           ;incstack = 0
  1650                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1651                           
  1652                           
  1653                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  1654  0351  01F4               	clrf	lcd_write@CmdChar
  1655  0352  0AF4               	incf	lcd_write@CmdChar,f
  1656  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1657  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0355  0820               	movf	lcd_clear@port,w
  1659  0356  00F5               	movwf	lcd_write@port
  1660  0357  0821               	movf	lcd_clear@port+1,w
  1661  0358  00F6               	movwf	lcd_write@port+1
  1662  0359  3000               	movlw	0
  1663  035A  120A  118A  22E5  120A  118A  	fcall	_lcd_write
  1664  035F                     l1173:	
  1665                           
  1666                           ;lcd4bits.c: 125:     DelayMs(2);
  1667  035F  3002               	movlw	2
  1668  0360  00F2               	movwf	DelayMs@millis
  1669  0361  3000               	movlw	0
  1670  0362  00F3               	movwf	DelayMs@millis+1
  1671  0363  120A  118A  2369  120A  118A  	fcall	_DelayMs
  1672  0368                     l110:	
  1673  0368  0008               	return
  1674  0369                     __end_of_lcd_clear:	
  1675                           
  1676                           	psect	text8
  1677  02E5                     __ptext8:	
  1678 ;; *************** function _lcd_write *****************
  1679 ;; Defined at:
  1680 ;;		line 110 in file "lcd4bits.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  mode            1    wreg     unsigned char 
  1683 ;;  CmdChar         1    4[COMMON] unsigned char 
  1684 ;;  port            2    5[COMMON] PTR unsigned char 
  1685 ;;		 -> PORTA(1), PORTD(1), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  mode            1    9[COMMON] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         3       0       0       0       0
  1698 ;;      Locals:         1       0       0       0       0
  1699 ;;      Temps:          2       0       0       0       0
  1700 ;;      Totals:         6       0       0       0       0
  1701 ;;Total ram usage:        6 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    2
  1704 ;; This function calls:
  1705 ;;		_Delay20us
  1706 ;; This function is called by:
  1707 ;;		_lcd_clear
  1708 ;;		_lcd_putch
  1709 ;;		_lcd_init
  1710 ;;		_lcd_puts
  1711 ;;		_lcd_goto
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _lcd_write
  1717  02E5                     _lcd_write:	
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1721                           ;lcd_write@mode stored from wreg
  1722  02E5  00F9               	movwf	lcd_write@mode
  1723  02E6                     l1159:	
  1724                           
  1725                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  1726  02E6  0874               	movf	lcd_write@CmdChar,w
  1727  02E7  00F7               	movwf	??_lcd_write
  1728  02E8  3004               	movlw	4
  1729  02E9                     u545:	
  1730  02E9  1003               	clrc
  1731  02EA  0CF7               	rrf	??_lcd_write,f
  1732  02EB  3EFF               	addlw	-1
  1733  02EC  1D03               	skipz
  1734  02ED  2AE9               	goto	u545
  1735  02EE  0877               	movf	??_lcd_write,w
  1736  02EF  3E20               	addlw	32
  1737  02F0  0479               	iorwf	lcd_write@mode,w
  1738  02F1  00F8               	movwf	??_lcd_write+1
  1739  02F2  0875               	movf	lcd_write@port,w
  1740  02F3  0084               	movwf	4
  1741  02F4  1783               	bsf	3,7
  1742  02F5  1C76               	btfss	lcd_write@port+1,0
  1743  02F6  1383               	bcf	3,7
  1744  02F7  0878               	movf	??_lcd_write+1,w
  1745  02F8  0080               	movwf	0
  1746  02F9                     l1161:	
  1747                           
  1748                           ;lcd4bits.c: 112:     Delay20us();
  1749  02F9  120A  118A  2392  120A  118A  	fcall	_Delay20us
  1750  02FE                     l1163:	
  1751                           
  1752                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  1753  02FE  0875               	movf	lcd_write@port,w
  1754  02FF  0084               	movwf	4
  1755  0300  1783               	bsf	3,7
  1756  0301  1C76               	btfss	lcd_write@port+1,0
  1757  0302  1383               	bcf	3,7
  1758  0303  0800               	movf	0,w
  1759  0304  39DF               	andlw	223
  1760  0305  00F7               	movwf	??_lcd_write
  1761  0306  0875               	movf	lcd_write@port,w
  1762  0307  0084               	movwf	4
  1763  0308  1783               	bsf	3,7
  1764  0309  1C76               	btfss	lcd_write@port+1,0
  1765  030A  1383               	bcf	3,7
  1766  030B  0877               	movf	??_lcd_write,w
  1767  030C  0080               	movwf	0
  1768  030D                     l1165:	
  1769                           
  1770                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  1771  030D  0874               	movf	lcd_write@CmdChar,w
  1772  030E  390F               	andlw	15
  1773  030F  3E20               	addlw	32
  1774  0310  0479               	iorwf	lcd_write@mode,w
  1775  0311  00F7               	movwf	??_lcd_write
  1776  0312  0875               	movf	lcd_write@port,w
  1777  0313  0084               	movwf	4
  1778  0314  1783               	bsf	3,7
  1779  0315  1C76               	btfss	lcd_write@port+1,0
  1780  0316  1383               	bcf	3,7
  1781  0317  0877               	movf	??_lcd_write,w
  1782  0318  0080               	movwf	0
  1783  0319                     l1167:	
  1784                           
  1785                           ;lcd4bits.c: 116:     Delay20us();
  1786  0319  120A  118A  2392  120A  118A  	fcall	_Delay20us
  1787                           
  1788                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  1789  031E  0875               	movf	lcd_write@port,w
  1790  031F  0084               	movwf	4
  1791  0320  1783               	bsf	3,7
  1792  0321  1C76               	btfss	lcd_write@port+1,0
  1793  0322  1383               	bcf	3,7
  1794  0323  0800               	movf	0,w
  1795  0324  39DF               	andlw	223
  1796  0325  00F7               	movwf	??_lcd_write
  1797  0326  0875               	movf	lcd_write@port,w
  1798  0327  0084               	movwf	4
  1799  0328  1783               	bsf	3,7
  1800  0329  1C76               	btfss	lcd_write@port+1,0
  1801  032A  1383               	bcf	3,7
  1802  032B  0877               	movf	??_lcd_write,w
  1803  032C  0080               	movwf	0
  1804  032D                     l107:	
  1805  032D  0008               	return
  1806  032E                     __end_of_lcd_write:	
  1807                           
  1808                           	psect	text9
  1809  0392                     __ptext9:	
  1810 ;; *************** function _Delay20us *****************
  1811 ;; Defined at:
  1812 ;;		line 99 in file "lcd4bits.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  next            1    3[COMMON] unsigned char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         1       0       0       0       0
  1828 ;;      Temps:          1       0       0       0       0
  1829 ;;      Totals:         2       0       0       0       0
  1830 ;;Total ram usage:        2 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_lcd_write
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _Delay20us
  1842  0392                     _Delay20us:	
  1843  0392                     l1149:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  1846                           
  1847                           
  1848                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  1849  0392  01F3               	clrf	Delay20us@next
  1850  0393                     l1155:	
  1851  0393  3001               	movlw	1
  1852  0394  00F2               	movwf	??_Delay20us
  1853  0395  0872               	movf	??_Delay20us,w
  1854  0396  07F3               	addwf	Delay20us@next,f
  1855  0397                     l1157:	
  1856  0397  3008               	movlw	8
  1857  0398  0273               	subwf	Delay20us@next,w
  1858  0399  1C03               	skipc
  1859  039A  2B9C               	goto	u531
  1860  039B  2B9D               	goto	u530
  1861  039C                     u531:	
  1862  039C  2B93               	goto	l1155
  1863  039D                     u530:	
  1864  039D                     l104:	
  1865  039D  0008               	return
  1866  039E                     __end_of_Delay20us:	
  1867                           
  1868                           	psect	text10
  1869  0369                     __ptext10:	
  1870 ;; *************** function _DelayMs *****************
  1871 ;; Defined at:
  1872 ;;		line 86 in file "lcd4bits.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  millis          2    2[COMMON] unsigned int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         2       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0
  1889 ;;      Totals:         2       0       0       0       0
  1890 ;;Total ram usage:        2 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;;		_update_board
  1898 ;;		_lcd_clear
  1899 ;;		_lcd_init
  1900 ;;		_lcd_goto
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _DelayMs
  1906  0369                     _DelayMs:	
  1907  0369                     l945:	
  1908                           ;incstack = 0
  1909                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  1910                           
  1911                           
  1912                           ;lcd4bits.c: 87:     while (millis != 0) {
  1913  0369  2B79               	goto	l953
  1914  036A                     l947:	
  1915                           
  1916                           ;lcd4bits.c: 88:         TMR0 = 100;
  1917  036A  3064               	movlw	100
  1918  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1919  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1920  036D  0081               	movwf	1	;volatile
  1921  036E                     l949:	
  1922                           
  1923                           ;lcd4bits.c: 89:         T0IF = 0;
  1924  036E  110B               	bcf	11,2	;volatile
  1925  036F                     l95:	
  1926                           ;lcd4bits.c: 90:         while(T0IF == 0);
  1927                           
  1928  036F  1D0B               	btfss	11,2	;volatile
  1929  0370  2B72               	goto	u281
  1930  0371  2B73               	goto	u280
  1931  0372                     u281:	
  1932  0372  2B6F               	goto	l95
  1933  0373                     u280:	
  1934  0373                     l951:	
  1935                           
  1936                           ;lcd4bits.c: 91:         millis--;
  1937  0373  3001               	movlw	1
  1938  0374  02F2               	subwf	DelayMs@millis,f
  1939  0375  3000               	movlw	0
  1940  0376  1C03               	skipc
  1941  0377  03F3               	decf	DelayMs@millis+1,f
  1942  0378  02F3               	subwf	DelayMs@millis+1,f
  1943  0379                     l953:	
  1944                           
  1945                           ;lcd4bits.c: 87:     while (millis != 0) {
  1946  0379  0872               	movf	DelayMs@millis,w
  1947  037A  0473               	iorwf	DelayMs@millis+1,w
  1948  037B  1D03               	btfss	3,2
  1949  037C  2B7E               	goto	u291
  1950  037D  2B7F               	goto	u290
  1951  037E                     u291:	
  1952  037E  2B6A               	goto	l947
  1953  037F                     u290:	
  1954  037F                     l99:	
  1955  037F  0008               	return
  1956  0380                     __end_of_DelayMs:	
  1957                           
  1958                           	psect	text11
  1959  032E                     __ptext11:	
  1960 ;; *************** function _interrupt_handler *****************
  1961 ;; Defined at:
  1962 ;;		line 85 in file "concentration.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0
  1978 ;;      Temps:          2       0       0       0       0
  1979 ;;      Totals:         2       0       0       0       0
  1980 ;;Total ram usage:        2 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		Interrupt level 1
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _interrupt_handler
  1991  032E                     _interrupt_handler:	
  1992  032E                     i1l1127:	
  1993                           
  1994                           ;concentration.c: 86:     if(ADIF) {
  1995  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1996  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0330  1F0C               	btfss	12,6	;volatile
  1998  0331  2B33               	goto	u50_21
  1999  0332  2B34               	goto	u50_20
  2000  0333                     u50_21:	
  2001  0333  2B4A               	goto	i1l81
  2002  0334                     u50_20:	
  2003  0334                     i1l1129:	
  2004                           
  2005                           ;concentration.c: 87:         if(CHS1 == 1) {
  2006  0334  1D9F               	btfss	31,3	;volatile
  2007  0335  2B37               	goto	u51_21
  2008  0336  2B38               	goto	u51_20
  2009  0337                     u51_21:	
  2010  0337  2B41               	goto	i1l1133
  2011  0338                     u51_20:	
  2012  0338                     i1l1131:	
  2013                           
  2014                           ;concentration.c: 88:             joystick_x_pos = (ADRESH<<8)+ADRESL;
  2015  0338  081E               	movf	30,w	;volatile
  2016  0339  00AE               	movwf	_joystick_x_pos+1
  2017  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2018  033B  1303               	bcf	3,6	;RP1=0, select bank1
  2019  033C  081E               	movf	30,w	;volatile
  2020  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2021  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2022  033F  00AD               	movwf	_joystick_x_pos
  2023                           
  2024                           ;concentration.c: 89:         } else {
  2025  0340  2B49               	goto	i1l1135
  2026  0341                     i1l1133:	
  2027                           
  2028                           ;concentration.c: 90:             joystick_y_pos = (ADRESH<<8)+ADRESL;
  2029  0341  081E               	movf	30,w	;volatile
  2030  0342  00AC               	movwf	_joystick_y_pos+1
  2031  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0345  081E               	movf	30,w	;volatile
  2034  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0348  00AB               	movwf	_joystick_y_pos
  2037  0349                     i1l1135:	
  2038                           
  2039                           ;concentration.c: 92:         ADIF = 0;
  2040  0349  130C               	bcf	12,6	;volatile
  2041  034A                     i1l81:	
  2042  034A  0871               	movf	??_interrupt_handler+1,w
  2043  034B  008A               	movwf	10
  2044  034C  0E70               	swapf	??_interrupt_handler^(0+4294967168),w
  2045  034D  0083               	movwf	3
  2046  034E  0EFE               	swapf	btemp,f
  2047  034F  0E7E               	swapf	btemp,w
  2048  0350  0009               	retfie
  2049  0351                     __end_of_interrupt_handler:	
  2050  007E                     btemp	set	126	;btemp
  2051  007E                     wtemp0	set	126
  2052                           
  2053                           	psect	intentry
  2054  0004                     __pintentry:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _interrupt_handler: [wreg]
  2057                           
  2058  0004                     interrupt_function:	
  2059  007E                     saved_w	set	btemp
  2060  0004  00FE               	movwf	btemp
  2061  0005  0E03               	swapf	3,w
  2062  0006  00F0               	movwf	??_interrupt_handler
  2063  0007  080A               	movf	10,w
  2064  0008  00F1               	movwf	??_interrupt_handler+1
  2065  0009  120A  118A  2B2E   	ljmp	_interrupt_handler


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTD(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _main->_lcd_putch
    _update_board->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_putch->_lcd_write
    ___awdiv->___awmod
    _lcd_init->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_putch
    _update_board->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_init->_lcd_clear

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15486
                            _DelayMs
                           _lcd_init
                          _lcd_putch
                       _update_board
 ---------------------------------------------------------------------------------
 (1) _update_board                                         0     0      0    7765
                            _DelayMs
                            ___awdiv
                            ___awmod
                          _lcd_clear
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            4     2      2    2600
                                             10 COMMON     1     1      0
                                              8 BANK0      3     1      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    4718
                                             10 COMMON     1     1      0
                                              2 BANK0      2     0      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    2342
                                              0 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            6     3      3    1638
                                              4 COMMON     6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (4) _Delay20us                                            2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DelayMs                                              2     0      2     403
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupt_handler                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_putch
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     _lcd_write (ARG)
       _Delay20us
   _update_board
     _DelayMs
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_putch
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       _lcd_write (ARG)
         _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 10:48:26 2020

              _update_board 0030                 __CFG_CP$OFF 0000                          l73 016A  
                        l90 03A5                          l95 036F                          _GO 00F9  
                        l99 037F                ___awdiv@sign 0025                         l110 0368  
                       l104 039D                         l107 032D                         l125 02E4  
                       l119 0391                         l364 01D3                         l377 0292  
                       l753 039E                         l755 03A4                         l951 0373  
                       l953 0379                         l945 0369                         l947 036A  
                       l971 016B                         l949 036E                         l981 017D  
                       l973 016E                         l991 0191                         l983 0182  
                       l975 0172                         l993 0198                         l985 0186  
                       l977 0177                         l995 019C                         l987 0188  
                       l979 0179                         _GIE 005F                         l997 01A0  
                       l989 018E                         l999 01B1                         u310 0172  
                       u311 0171                         u400 01CA                         u320 017D  
                       u401 01C9                         u321 017C                         u330 018E  
                       u410 023F                         u331 018D                         u411 023E  
                       u420 024A                         u421 0249                         u350 01A0  
                       u430 0255                         u351 019F                         u431 0254  
                       u280 0373                         u281 0372                         u345 0192  
                       u290 037F                         u530 039D                         u370 01B1  
                       u450 0267                __CFG_CPD$OFF 0000                         u291 037E  
                       u531 039C                         u371 01B0                         u451 0266  
                       u460 0271                         u365 01A1                         u461 0270  
                       u445 0259                         u390 01C5                         u391 01C4  
                       u375 01AD                         u480 0284                         u545 02E9  
                       u385 01B9                         u481 0283                         u465 026D  
                       u490 0289                         u491 0288                         u475 0278  
                       _SCS 0478                         fsr0 0004                         indf 0000  
              ___awmod@sign 0078                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
             lcd_clear@port 0020                        l1001 01B7                        l1011 01CF  
                      l1003 01B8                        l1005 01BF                        l1021 0244  
                      l1007 01C5                        l1031 0258                        l1023 0246  
                      l1015 023A                        l1009 01CA                        l1041 0277  
                      l1033 025F                        l1025 024A                        l1017 023B  
                      l1201 00B9                        l1043 027E                        l1035 0263  
                      l1027 024F                        l1019 023F                        l1211 0150  
                      l1203 00D3                        l1037 0267                        l1029 0255  
                      l1045 0284                        l1205 00DE                        l1221 01F5  
                      l1213 01D4                        l1047 0289                        l1039 0271  
                      l1207 00FA                        l1231 0204                        l1223 01F8  
                      l1215 01D7                        l1161 02F9                        l1049 028E  
                      l1209 0125                        l1241 0210                        l1233 0208  
                      l1225 01FA                        l1217 01DC                        l1155 0393  
                      l1163 02FE                        l1171 0351                        l1243 021C  
                      l1235 0209                        l1227 01FC                        l1219 01E7  
                      l1157 0397                        l1149 0392                        l1165 030D  
                      l1173 035F                        l1181 02A9                        l1245 0228  
                      l1237 020A                        l1229 0200                        l1167 0319  
                      l1159 02E6                        l1183 02B9                        l1175 0293  
                      l1191 0033                        l1247 0231                        l1239 020D  
                      l1185 02C9                        l1177 0298                        l1169 0383  
                      l1193 003C                        l1187 02D4                        l1179 02A0  
                      l1195 0047                        l1197 0063                        l1189 0030  
                      l1199 008E                        _ADIE 0466                        _ADIF 0066  
                      _CHS1 00FB                        _T0IF 005A                        _PEIE 005E  
                      i1l81 034A                        _TMR0 0001                        _WPUB 0095  
              __CFG_WRT$OFF 0000                        _main 01D4                        btemp 007E  
              lcd_init@port 0022                        start 000C               __CFG_IESO$OFF 0000  
           __end_of_DelayMs 0380               __CFG_MCLRE$ON 0000                       ?_main 0070  
           __end_of___awdiv 01D4               __CFG_WDTE$OFF 0000             __end_of___awmod 0293  
                     _ANSEL 0188             ___awdiv@divisor 0020             ___awdiv@counter 0024  
                     u50_20 0334                       u50_21 0333                       u51_20 0338  
                     u51_21 0337                       _PORTA 0005                       _PORTB 0006  
                     _PORTD 0008                       _TRISA 0085                       _TRISB 0086  
                     _TRISD 0088              __CFG_FCMEN$OFF 0000                       _nRBPU 040F  
            __CFG_BOREN$OFF 0000                       pclath 000A                       status 0003  
                     wtemp0 007E               DelayMs@millis 0072             __initialization 000F  
              __end_of_main 023A          __size_of_Delay20us 000C                      ??_main 007B  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E            ___awdiv@dividend 0022                      _ANSELH 0189  
                    i1l1131 0338                      i1l1133 0341                      i1l1135 0349  
                    i1l1127 032E                      i1l1129 0334                   ??_DelayMs 0074  
            __CFG_PWRTE$OFF 0000            __end_of_lcd_init 02E5                   ??___awdiv 0079  
                 ??___awmod 0076            ___awdiv@quotient 0026             ___awmod@divisor 0072  
             lcd_putch@port 0028             ___awmod@counter 0077                      saved_w 007E  
         __end_of_Delay20us 039E     __end_of__initialization 002C               lcd_write@mode 0079  
             lcd_write@port 0075              __pcstackCOMMON 0070                __pidataBANK0 03A6  
        __size_of_lcd_clear 0018          __size_of_lcd_putch 0012          __size_of_lcd_write 0049  
                __pbssBANK0 002B                  __pmaintext 01D4                  __pintentry 0004  
        __size_of_tmr0_init 0008                   ?_lcd_init 0022                     _DelayMs 0369  
         __end_of_lcd_clear 0369           __end_of_lcd_putch 0392                     ___awdiv 016B  
                   ___awmod 023A           __end_of_lcd_write 032E                     __ptext1 0030  
                   __ptext2 0380                     __ptext3 023A                     __ptext4 016B  
                   __ptext5 0293                     __ptext6 039E                     __ptext7 0351  
                   __ptext8 02E5                     __ptext9 0392                  _cursor_pos 007B  
          ___awmod@dividend 0074                  ??_lcd_init 007A        end_of_initialization 002C  
         __end_of_tmr0_init 03A6                  _scoreboard 002F              _joystick_x_pos 002D  
            _joystick_y_pos 002B                   _Delay20us 0392               ?_update_board 0070  
       start_initialization 000F                  ?_Delay20us 0070              ??_update_board 007B  
               __pdataBANK0 002F                 __pbssCOMMON 007B                   ___latbits 0002  
             __pcstackBANK0 0020                    ?_DelayMs 0072           __size_of_lcd_init 0052  
                 _gameboard 0031                    ?___awdiv 0020                    ?___awmod 0072  
                 _lcd_clear 0351                   _lcd_putch 0380                   _lcd_write 02E5  
         _interrupt_handler 032E          ?_interrupt_handler 0070         ??_interrupt_handler 0070  
         interrupt_function 0004                 ??_Delay20us 0072                   _tmr0_init 039E  
                ?_lcd_clear 0020   __end_of_interrupt_handler 0351                  ?_lcd_putch 0028  
                ?_lcd_write 0074        __end_of_update_board 016B            __size_of_DelayMs 0017  
                ?_tmr0_init 0070            __size_of___awdiv 0069            __size_of___awmod 0059  
                  __ptext10 0369                    __ptext11 032E           __CFG_BOR4V$BOR21V 0000  
                  _lcd_init 0293               __size_of_main 0066          lcd_putch@character 002A  
               ??_lcd_clear 007A  __size_of_interrupt_handler 0023                 ??_lcd_putch 007A  
               ??_lcd_write 0077                    intlevel1 0000               Delay20us@next 0073  
               ??_tmr0_init 0072       __size_of_update_board 013B                  _OPTION_REG 0081  
          lcd_write@CmdChar 0074  
