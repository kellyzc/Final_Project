

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 11:44:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.10
    55                           ; Generated 31/07/2019 GMT
    56                           ; 
    57                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322                           
   323                           	psect	idataCOMMON
   324  07FF                     __pidataCOMMON:	
   325                           
   326                           ;initializer for _my_turn
   327  07FF  3401               	retlw	1
   328                           
   329                           	psect	idataBANK0
   330  0AC7                     __pidataBANK0:	
   331                           
   332                           ;initializer for end_screen@F1342
   333  0AC7  3400               	retlw	0
   334  0AC8  3403               	retlw	3
   335  0AC9  3401               	retlw	1
   336  0ACA  3404               	retlw	4
   337  0ACB  3402               	retlw	2
   338  0ACC  3405               	retlw	5
   339                           
   340                           ;initializer for _scoreboard
   341  0ACD  3408               	retlw	8
   342  0ACE  3400               	retlw	0
   343                           
   344                           ;initializer for _gameboard
   345  0ACF  3405               	retlw	5
   346  0AD0  3400               	retlw	0
   347                           
   348                           	psect	strings
   349  0500                     __pstrings:	
   350  0500                     stringtab:	
   351  0500                     __stringtab:	
   352  0500                     stringcode:	
   353                           ;	String table - string pointers are 1 byte each
   354                           
   355  0500                     stringdir:	
   356  0500  3005               	movlw	high stringdir
   357  0501  008A               	movwf	10
   358  0502  0804               	movf	4,w
   359  0503  0A84               	incf	4,f
   360  0504  0782               	addwf	2,f
   361  0505                     __stringbase:	
   362  0505  3400               	retlw	0
   363  0506                     __end_of__stringtab:	
   364  0506                     make_custom_chars@PIC:	
   365  0506  3418               	retlw	24
   366  0507  3418               	retlw	24
   367  0508  3414               	retlw	20
   368  0509  3404               	retlw	4
   369  050A  3404               	retlw	4
   370  050B  3403               	retlw	3
   371  050C  3402               	retlw	2
   372  050D  3403               	retlw	3
   373  050E                     __end_ofmake_custom_chars@PIC:	
   374  050E                     make_custom_chars@RH:	
   375  050E  341C               	retlw	28
   376  050F  3414               	retlw	20
   377  0510  3418               	retlw	24
   378  0511  3414               	retlw	20
   379  0512  3400               	retlw	0
   380  0513  3405               	retlw	5
   381  0514  3407               	retlw	7
   382  0515  3405               	retlw	5
   383  0516                     __end_ofmake_custom_chars@RH:	
   384  0516                     make_custom_chars@skull:	
   385  0516  340E               	retlw	14
   386  0517  3415               	retlw	21
   387  0518  3415               	retlw	21
   388  0519  341F               	retlw	31
   389  051A  340A               	retlw	10
   390  051B  340E               	retlw	14
   391  051C  340E               	retlw	14
   392  051D  3400               	retlw	0
   393  051E                     __end_ofmake_custom_chars@skull:	
   394  051E                     make_custom_chars@club:	
   395  051E  3400               	retlw	0
   396  051F  340E               	retlw	14
   397  0520  340E               	retlw	14
   398  0521  341F               	retlw	31
   399  0522  341F               	retlw	31
   400  0523  341F               	retlw	31
   401  0524  3404               	retlw	4
   402  0525  340E               	retlw	14
   403  0526                     __end_ofmake_custom_chars@club:	
   404  0526                     make_custom_chars@spade:	
   405  0526  3400               	retlw	0
   406  0527  3404               	retlw	4
   407  0528  340E               	retlw	14
   408  0529  341F               	retlw	31
   409  052A  341F               	retlw	31
   410  052B  340E               	retlw	14
   411  052C  3404               	retlw	4
   412  052D  340E               	retlw	14
   413  052E                     __end_ofmake_custom_chars@spade:	
   414  052E                     make_custom_chars@heart:	
   415  052E  3400               	retlw	0
   416  052F  3400               	retlw	0
   417  0530  340A               	retlw	10
   418  0531  341F               	retlw	31
   419  0532  341F               	retlw	31
   420  0533  340E               	retlw	14
   421  0534  3404               	retlw	4
   422  0535  3400               	retlw	0
   423  0536                     __end_ofmake_custom_chars@heart:	
   424  0536                     make_custom_chars@diamond:	
   425  0536  3400               	retlw	0
   426  0537  3404               	retlw	4
   427  0538  340E               	retlw	14
   428  0539  341F               	retlw	31
   429  053A  340E               	retlw	14
   430  053B  3404               	retlw	4
   431  053C  3400               	retlw	0
   432  053D  3400               	retlw	0
   433  053E                     __end_ofmake_custom_chars@diamond:	
   434  053E                     make_custom_chars@smile:	
   435  053E  3400               	retlw	0
   436  053F  340A               	retlw	10
   437  0540  340A               	retlw	10
   438  0541  3400               	retlw	0
   439  0542  3415               	retlw	21
   440  0543  3411               	retlw	17
   441  0544  340E               	retlw	14
   442  0545  3400               	retlw	0
   443  0546                     __end_ofmake_custom_chars@smile:	
   444  001B                     _CCPR2	set	27
   445  0015                     _CCPR1	set	21
   446  000E                     _TMR1	set	14
   447  0001                     _TMR0	set	1
   448  001E                     _ADRESH	set	30
   449  001F                     _ADCON0	set	31
   450  0006                     _PORTB	set	6
   451  0011                     _TMR2	set	17
   452  0012                     _T2CON	set	18
   453  0007                     _PORTC	set	7
   454  0008                     _PORTD	set	8
   455  0005                     _PORTA	set	5
   456  005A                     _T0IF	set	90
   457  0066                     _ADIF	set	102
   458  005E                     _PEIE	set	94
   459  005F                     _GIE	set	95
   460  00E8                     _CCP2M0	set	232
   461  00E9                     _CCP2M1	set	233
   462  00EA                     _CCP2M2	set	234
   463  00EB                     _CCP2M3	set	235
   464  0080                     _TMR1ON	set	128
   465  0086                     _TMR1GE	set	134
   466  0085                     _T1CKPS1	set	133
   467  0084                     _T1CKPS0	set	132
   468  0081                     _TMR1CS	set	129
   469  00B8                     _CCP1M0	set	184
   470  00B9                     _CCP1M1	set	185
   471  00BA                     _CCP1M2	set	186
   472  00BB                     _CCP1M3	set	187
   473  0068                     _CCP2IF	set	104
   474  0062                     _CCP1IF	set	98
   475  0032                     _RB2	set	50
   476  00F9                     _GO	set	249
   477  0061                     _TMR2IF	set	97
   478  0035                     _RB5	set	53
   479  003F                     _RC7	set	63
   480  003E                     _RC6	set	62
   481  003D                     _RC5	set	61
   482  0081                     _OPTION_REG	set	129
   483  009E                     _ADRESL	set	158
   484  009F                     _ADCON1	set	159
   485  0086                     _TRISB	set	134
   486  0095                     _WPUB	set	149
   487  0092                     _PR2	set	146
   488  0087                     _TRISC	set	135
   489  0085                     _TRISA	set	133
   490  0088                     _TRISD	set	136
   491  0466                     _ADIE	set	1126
   492  040F                     _nRBPU	set	1039
   493  0468                     _CCP2IE	set	1128
   494  0461                     _TMR2IE	set	1121
   495  0478                     _SCS	set	1144
   496  0189                     _ANSELH	set	393
   497  0188                     _ANSEL	set	392
   498  0546                     STR_8:	
   499  0546  3450               	retlw	80	;'P'
   500  0547  3472               	retlw	114	;'r'
   501  0548  3465               	retlw	101	;'e'
   502  0549  3473               	retlw	115	;'s'
   503  054A  3473               	retlw	115	;'s'
   504  054B  3420               	retlw	32	;' '
   505  054C  3474               	retlw	116	;'t'
   506  054D  3468               	retlw	104	;'h'
   507  054E  3465               	retlw	101	;'e'
   508  054F  3420               	retlw	32	;' '
   509  0550  3462               	retlw	98	;'b'
   510  0551  3475               	retlw	117	;'u'
   511  0552  3474               	retlw	116	;'t'
   512  0553  3474               	retlw	116	;'t'
   513  0554  346F               	retlw	111	;'o'
   514  0555  346E               	retlw	110	;'n'
   515  0556  3400               	retlw	0
   516  0557                     STR_7:	
   517  0557  3420               	retlw	32	;' '
   518  0558  3443               	retlw	67	;'C'
   519  0559  346F               	retlw	111	;'o'
   520  055A  346E               	retlw	110	;'n'
   521  055B  3463               	retlw	99	;'c'
   522  055C  3465               	retlw	101	;'e'
   523  055D  346E               	retlw	110	;'n'
   524  055E  3474               	retlw	116	;'t'
   525  055F  3472               	retlw	114	;'r'
   526  0560  3461               	retlw	97	;'a'
   527  0561  3474               	retlw	116	;'t'
   528  0562  3469               	retlw	105	;'i'
   529  0563  346F               	retlw	111	;'o'
   530  0564  346E               	retlw	110	;'n'
   531  0565  3421               	retlw	33	;'!'
   532  0566  3400               	retlw	0
   533  0567                     STR_5:	
   534  0567  3420               	retlw	32	;' '
   535  0568  3420               	retlw	32	;' '
   536  0569  3420               	retlw	32	;' '
   537  056A  344E               	retlw	78	;'N'
   538  056B  344F               	retlw	79	;'O'
   539  056C  3420               	retlw	32	;' '
   540  056D  3457               	retlw	87	;'W'
   541  056E  3449               	retlw	73	;'I'
   542  056F  344E               	retlw	78	;'N'
   543  0570  344E               	retlw	78	;'N'
   544  0571  3445               	retlw	69	;'E'
   545  0572  3452               	retlw	82	;'R'
   546  0573  3421               	retlw	33	;'!'
   547  0574  3400               	retlw	0
   548  0575                     STR_1:	
   549  0575  3420               	retlw	32	;' '
   550  0576  3420               	retlw	32	;' '
   551  0577  3420               	retlw	32	;' '
   552  0578  3420               	retlw	32	;' '
   553  0579  3457               	retlw	87	;'W'
   554  057A  3449               	retlw	73	;'I'
   555  057B  344E               	retlw	78	;'N'
   556  057C  344E               	retlw	78	;'N'
   557  057D  3445               	retlw	69	;'E'
   558  057E  3452               	retlw	82	;'R'
   559  057F  3421               	retlw	33	;'!'
   560  0580  3421               	retlw	33	;'!'
   561  0581  3400               	retlw	0
   562  0582                     STR_2:	
   563  0582  3420               	retlw	32	;' '
   564  0583  3420               	retlw	32	;' '
   565  0584  3420               	retlw	32	;' '
   566  0585  3420               	retlw	32	;' '
   567  0586  3450               	retlw	80	;'P'
   568  0587  344C               	retlw	76	;'L'
   569  0588  3441               	retlw	65	;'A'
   570  0589  3459               	retlw	89	;'Y'
   571  058A  3445               	retlw	69	;'E'
   572  058B  3452               	retlw	82	;'R'
   573  058C  3420               	retlw	32	;' '
   574  058D  3431               	retlw	49	;'1'
   575  058E  3400               	retlw	0
   576  058F                     STR_4:	
   577  058F  3420               	retlw	32	;' '
   578  0590  3420               	retlw	32	;' '
   579  0591  3420               	retlw	32	;' '
   580  0592  3420               	retlw	32	;' '
   581  0593  3450               	retlw	80	;'P'
   582  0594  344C               	retlw	76	;'L'
   583  0595  3441               	retlw	65	;'A'
   584  0596  3459               	retlw	89	;'Y'
   585  0597  3445               	retlw	69	;'E'
   586  0598  3452               	retlw	82	;'R'
   587  0599  3420               	retlw	32	;' '
   588  059A  3432               	retlw	50	;'2'
   589  059B  3400               	retlw	0
   590  059C                     STR_9:	
   591  059C  3420               	retlw	32	;' '
   592  059D  3420               	retlw	32	;' '
   593  059E  3420               	retlw	32	;' '
   594  059F  3420               	retlw	32	;' '
   595  05A0  3474               	retlw	116	;'t'
   596  05A1  346F               	retlw	111	;'o'
   597  05A2  3420               	retlw	32	;' '
   598  05A3  3473               	retlw	115	;'s'
   599  05A4  3474               	retlw	116	;'t'
   600  05A5  3461               	retlw	97	;'a'
   601  05A6  3472               	retlw	114	;'r'
   602  05A7  3474               	retlw	116	;'t'
   603  05A8  3400               	retlw	0
   604  05A9                     STR_10:	
   605  05A9  3420               	retlw	32	;' '
   606  05AA  3420               	retlw	32	;' '
   607  05AB  3420               	retlw	32	;' '
   608  05AC  3420               	retlw	32	;' '
   609  05AD  3420               	retlw	32	;' '
   610  05AE  3453               	retlw	83	;'S'
   611  05AF  3463               	retlw	99	;'c'
   612  05B0  346F               	retlw	111	;'o'
   613  05B1  3472               	retlw	114	;'r'
   614  05B2  3465               	retlw	101	;'e'
   615  05B3  343A               	retlw	58	;':'
   616  05B4  3400               	retlw	0
   617  05B5                     STR_6:	
   618  05B5  3420               	retlw	32	;' '
   619  05B6  3420               	retlw	32	;' '
   620  05B7  3420               	retlw	32	;' '
   621  05B8  3420               	retlw	32	;' '
   622  05B9  3420               	retlw	32	;' '
   623  05BA  3420               	retlw	32	;' '
   624  05BB  3454               	retlw	84	;'T'
   625  05BC  3449               	retlw	73	;'I'
   626  05BD  3445               	retlw	69	;'E'
   627  05BE  3444               	retlw	68	;'D'
   628  05BF  3400               	retlw	0
   629  05C0                     STR_12:	
   630  05C0  3420               	retlw	32	;' '
   631  05C1  3420               	retlw	32	;' '
   632  05C2  3450               	retlw	80	;'P'
   633  05C3  3432               	retlw	50	;'2'
   634  05C4  343A               	retlw	58	;':'
   635  05C5  3420               	retlw	32	;' '
   636  05C6  3400               	retlw	0
   637  05C7                     STR_11:	
   638  05C7  3420               	retlw	32	;' '
   639  05C8  3450               	retlw	80	;'P'
   640  05C9  3431               	retlw	49	;'1'
   641  05CA  343A               	retlw	58	;':'
   642  05CB  3420               	retlw	32	;' '
   643  05CC  3400               	retlw	0
   644  0575                     
   645                           ; #config settings
   646  0000                     
   647                           	psect	cinit
   648  0011                     start_initialization:	
   649  0011                     __initialization:	
   650                           
   651                           ; Initialize objects allocated to BANK0
   652  0011  1383               	bcf	3,7	;select IRP bank0
   653  0012  3070               	movlw	low (__pdataBANK0+10)
   654  0013  00FD               	movwf	btemp+-1
   655  0014  300A               	movlw	high __pidataBANK0
   656  0015  00FE               	movwf	btemp
   657  0016  30C7               	movlw	low __pidataBANK0
   658  0017  00FF               	movwf	btemp+1
   659  0018  3066               	movlw	low __pdataBANK0
   660  0019  0084               	movwf	4
   661  001A  120A  158A  22F9  120A  118A  	fcall	init_ram0
   662                           
   663                           ; Initialize objects allocated to COMMON
   664  001F  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   665  0024  00FB               	movwf	__pdataCOMMON& (0+127)
   666                           
   667                           ; Clear objects allocated to BANK3
   668  0025  1783               	bsf	3,7	;select IRP bank2
   669  0026  3090               	movlw	low __pbssBANK3
   670  0027  0084               	movwf	4
   671  0028  30B0               	movlw	low (__pbssBANK3+32)
   672  0029  120A  158A  22B5  120A  118A  	fcall	clear_ram0
   673                           
   674                           ; Clear objects allocated to BANK1
   675  002E  1383               	bcf	3,7	;select IRP bank0
   676  002F  30A0               	movlw	low __pbssBANK1
   677  0030  0084               	movwf	4
   678  0031  30E0               	movlw	low (__pbssBANK1+64)
   679  0032  120A  158A  22B5  120A  118A  	fcall	clear_ram0
   680                           
   681                           ; Clear objects allocated to BANK0
   682  0037  3057               	movlw	low __pbssBANK0
   683  0038  0084               	movwf	4
   684  0039  3066               	movlw	low (__pbssBANK0+15)
   685  003A  120A  158A  22B5  120A  118A  	fcall	clear_ram0
   686                           
   687                           ; Clear objects allocated to COMMON
   688  003F  01F6               	clrf	__pbssCOMMON& (0+127)
   689  0040  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   690  0041  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   691  0042  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   692  0043  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   693  0044                     end_of_initialization:	
   694                           ;End of C runtime variable initialization code
   695                           
   696  0044                     __end_of__initialization:	
   697  0044  0183               	clrf	3
   698  0045  120A  158A  2C9F   	ljmp	_main	;jump to C main() function
   699                           
   700                           	psect	bssCOMMON
   701  0076                     __pbssCOMMON:	
   702  0076                     _tone_delay:	
   703  0076                     	ds	2
   704  0078                     _id_num:	
   705  0078                     	ds	1
   706  0079                     _received_char:	
   707  0079                     	ds	1
   708  007A                     _cursor_move_delay_count:	
   709  007A                     	ds	1
   710                           
   711                           	psect	dataCOMMON
   712  007B                     __pdataCOMMON:	
   713  007B                     _my_turn:	
   714  007B                     	ds	1
   715                           
   716                           	psect	bssBANK0
   717  0057                     __pbssBANK0:	
   718  0057                     _joystick_y_pos:	
   719  0057                     	ds	2
   720  0059                     _joystick_x_pos:	
   721  0059                     	ds	2
   722  005B                     _game_over:	
   723  005B                     	ds	1
   724  005C                     _current_player:	
   725  005C                     	ds	1
   726  005D                     _joystick_pressed:	
   727  005D                     	ds	1
   728  005E                     _selected_tile:	
   729  005E                     	ds	1
   730  005F                     _p2_score:	
   731  005F                     	ds	1
   732  0060                     _p1_score:	
   733  0060                     	ds	1
   734  0061                     _cursor_movable:	
   735  0061                     	ds	1
   736  0062                     _delay_loops:	
   737  0062                     	ds	1
   738  0063                     _cursor_solid:	
   739  0063                     	ds	1
   740  0064                     _current_char:	
   741  0064                     	ds	1
   742  0065                     _cursor_pos:	
   743  0065                     	ds	1
   744                           
   745                           	psect	dataBANK0
   746  0066                     __pdataBANK0:	
   747  0066                     end_screen@F1342:	
   748  0066                     	ds	6
   749  006C                     _scoreboard:	
   750  006C                     	ds	2
   751  006E                     _gameboard:	
   752  006E                     	ds	2
   753                           
   754                           	psect	bssBANK1
   755  00A0                     __pbssBANK1:	
   756  00A0                     _visible:	
   757  00A0                     	ds	32
   758  00C0                     _board:	
   759  00C0                     	ds	32
   760                           
   761                           	psect	bssBANK3
   762  0190                     __pbssBANK3:	
   763  0190                     randomize_gameboard@F1365:	
   764  0190                     	ds	32
   765                           
   766                           	psect	inittext
   767  0AF5                     init_fetch0:	
   768                           ;	Called with low address in FSR and high address in W
   769                           
   770  0AF5  087E               	movf	btemp,w
   771  0AF6  008A               	movwf	10
   772  0AF7  087F               	movf	btemp+1,w
   773  0AF8  0082               	movwf	2
   774  0AF9                     init_ram0:	
   775                           ;Called with:
   776                           ;	high address of idata address in btemp 
   777                           ;	low address of idata address in btemp+1 
   778                           ;	low address of data in FSR
   779                           ;	high address + 1 of data in btemp-1
   780                           
   781  0AF9  120A  158A  22F5  120A  158A  	fcall	init_fetch0
   782  0AFE  0080               	movwf	0
   783  0AFF  0A84               	incf	4,f
   784  0B00  0804               	movf	4,w
   785  0B01  067D               	xorwf	btemp+-1,w
   786  0B02  1903               	btfsc	3,2
   787  0B03  3400               	retlw	0
   788  0B04  0AFF               	incf	btemp+1,f
   789  0B05  1903               	btfsc	3,2
   790  0B06  0AFE               	incf	btemp,f
   791  0B07  2AF9               	goto	init_ram0
   792                           
   793                           	psect	clrtext
   794  0AB5                     clear_ram0:	
   795                           ;	Called with FSR containing the base address, and
   796                           ;	W with the last address+1
   797                           
   798  0AB5  0064               	clrwdt	;clear the watchdog before getting into this loop
   799  0AB6                     clrloop0:	
   800  0AB6  0180               	clrf	0	;clear RAM location pointed to by FSR
   801  0AB7  0A84               	incf	4,f	;increment pointer
   802  0AB8  0604               	xorwf	4,w	;XOR with final address
   803  0AB9  1903               	btfsc	3,2	;have we reached the end yet?
   804  0ABA  3400               	retlw	0	;all done for this memory range, return
   805  0ABB  0604               	xorwf	4,w	;XOR again to restore value
   806  0ABC  2AB6               	goto	clrloop0	;do the next byte
   807                           
   808                           	psect	cstackBANK1
   809  00E0                     __pcstackBANK1:	
   810  00E0                     ??_main:	
   811                           
   812                           ; 1 bytes @ 0x0
   813  00E0                     	ds	1
   814                           
   815                           	psect	cstackCOMMON
   816  0070                     __pcstackCOMMON:	
   817  0070                     ?_joystick_init:	
   818  0070                     ?_gameboard_init:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_startup:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_update_gameboard_from_input:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_game_end:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_display_scoreboard:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_display_gameboard:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_time_init:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_get_current_char:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_randomize_gameboard:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_toggle_cursor:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_main:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_turn_on_led:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_make_custom_chars:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_get_cursor_index:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_check_for_match:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_interrupt_handler:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ??_interrupt_handler:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_tmr0_init:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_Delay20us:	
   873                           ; 1 bytes @ 0x0
   874                           
   875                           
   876                           ; 1 bytes @ 0x0
   877  0070                     	ds	5
   878  0075                     interrupt_handler@current_analog:	
   879                           
   880                           ; 1 bytes @ 0x5
   881  0075                     	ds	1
   882                           
   883                           	psect	cstackBANK0
   884  0020                     __pcstackBANK0:	
   885  0020                     ??_joystick_init:	
   886  0020                     ?_play_tone:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0020                     ?_DelayMs:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0020                     ??_time_init:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0020                     ??_turn_on_led:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0020                     ??_get_cursor_index:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0020                     ??_tmr0_init:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0020                     ??_Delay20us:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0020                     ?___awmod:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0020                     get_cursor_index@cursor:	
   911                           ; 2 bytes @ 0x0
   912                           
   913  0020                     play_tone@tone_period:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0020                     DelayMs@millis:	
   917                           ; 2 bytes @ 0x0
   918                           
   919  0020                     ___awmod@divisor:	
   920                           ; 2 bytes @ 0x0
   921                           
   922                           
   923                           ; 2 bytes @ 0x0
   924  0020                     	ds	1
   925  0021                     ??_get_current_char:	
   926  0021                     Delay20us@next:	
   927                           ; 1 bytes @ 0x1
   928                           
   929                           
   930                           ; 1 bytes @ 0x1
   931  0021                     	ds	1
   932  0022                     ??_DelayMs:	
   933  0022                     ?_lcd_write:	
   934                           ; 1 bytes @ 0x2
   935                           
   936  0022                     turn_on_led@color:	
   937                           ; 1 bytes @ 0x2
   938                           
   939  0022                     play_tone@duration_8ms:	
   940                           ; 1 bytes @ 0x2
   941                           
   942  0022                     lcd_write@CmdChar:	
   943                           ; 1 bytes @ 0x2
   944                           
   945  0022                     ___awmod@dividend:	
   946                           ; 1 bytes @ 0x2
   947                           
   948                           
   949                           ; 2 bytes @ 0x2
   950  0022                     	ds	1
   951  0023                     ??_play_tone:	
   952  0023                     lcd_write@port:	
   953                           ; 1 bytes @ 0x3
   954                           
   955                           
   956                           ; 2 bytes @ 0x3
   957  0023                     	ds	1
   958  0024                     ??___awmod:	
   959                           
   960                           ; 1 bytes @ 0x4
   961  0024                     	ds	1
   962  0025                     ??_lcd_write:	
   963  0025                     ___awmod@counter:	
   964                           ; 1 bytes @ 0x5
   965                           
   966                           
   967                           ; 1 bytes @ 0x5
   968  0025                     	ds	1
   969  0026                     ___awmod@sign:	
   970                           
   971                           ; 1 bytes @ 0x6
   972  0026                     	ds	1
   973  0027                     ?___awdiv:	
   974  0027                     lcd_write@mode:	
   975                           ; 2 bytes @ 0x7
   976                           
   977  0027                     ___awdiv@divisor:	
   978                           ; 1 bytes @ 0x7
   979                           
   980                           
   981                           ; 2 bytes @ 0x7
   982  0027                     	ds	1
   983  0028                     ?_lcd_clear:	
   984  0028                     ?_lcd_puts:	
   985                           ; 1 bytes @ 0x8
   986                           
   987  0028                     ?_lcd_goto:	
   988                           ; 1 bytes @ 0x8
   989                           
   990  0028                     ?_lcd_set_custom_char:	
   991                           ; 1 bytes @ 0x8
   992                           
   993  0028                     lcd_set_custom_char@cg_address:	
   994                           ; 1 bytes @ 0x8
   995                           
   996  0028                     lcd_clear@port:	
   997                           ; 1 bytes @ 0x8
   998                           
   999  0028                     lcd_puts@port:	
  1000                           ; 2 bytes @ 0x8
  1001                           
  1002  0028                     lcd_goto@port:	
  1003                           ; 2 bytes @ 0x8
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x8
  1007  0028                     	ds	1
  1008  0029                     lcd_set_custom_char@port:	
  1009  0029                     ___awdiv@dividend:	
  1010                           ; 2 bytes @ 0x9
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x9
  1014  0029                     	ds	1
  1015  002A                     ?_lcd_init:	
  1016  002A                     ??_lcd_clear:	
  1017                           ; 1 bytes @ 0xA
  1018                           
  1019  002A                     ??_lcd_puts:	
  1020                           ; 1 bytes @ 0xA
  1021                           
  1022  002A                     ??_lcd_goto:	
  1023                           ; 1 bytes @ 0xA
  1024                           
  1025  002A                     lcd_init@port:	
  1026                           ; 1 bytes @ 0xA
  1027                           
  1028                           
  1029                           ; 2 bytes @ 0xA
  1030  002A                     	ds	1
  1031  002B                     ??_lcd_set_custom_char:	
  1032  002B                     ??___awdiv:	
  1033                           ; 1 bytes @ 0xB
  1034                           
  1035  002B                     lcd_puts@string:	
  1036                           ; 1 bytes @ 0xB
  1037                           
  1038  002B                     lcd_goto@position:	
  1039                           ; 1 bytes @ 0xB
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0xB
  1043  002B                     	ds	1
  1044  002C                     ??_lcd_init:	
  1045  002C                     ?_end_screen:	
  1046                           ; 1 bytes @ 0xC
  1047                           
  1048  002C                     end_screen@second_row:	
  1049                           ; 1 bytes @ 0xC
  1050                           
  1051  002C                     ___awdiv@counter:	
  1052                           ; 1 bytes @ 0xC
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0xC
  1056  002C                     	ds	1
  1057  002D                     ??_end_screen:	
  1058  002D                     lcd_set_custom_char@row:	
  1059                           ; 1 bytes @ 0xD
  1060                           
  1061  002D                     ___awdiv@sign:	
  1062                           ; 1 bytes @ 0xD
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0xD
  1066  002D                     	ds	1
  1067  002E                     lcd_set_custom_char@data:	
  1068  002E                     ___awdiv@quotient:	
  1069                           ; 1 bytes @ 0xE
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0xE
  1073  002E                     	ds	1
  1074  002F                     ??_make_custom_chars:	
  1075                           
  1076                           ; 1 bytes @ 0xF
  1077  002F                     	ds	1
  1078  0030                     ?_lcd_putch:	
  1079  0030                     ??_randomize_gameboard:	
  1080                           ; 1 bytes @ 0x10
  1081                           
  1082  0030                     lcd_putch@port:	
  1083                           ; 1 bytes @ 0x10
  1084                           
  1085  0030                     end_screen@colors:	
  1086                           ; 2 bytes @ 0x10
  1087                           
  1088                           
  1089                           ; 6 bytes @ 0x10
  1090  0030                     	ds	2
  1091  0032                     ??_lcd_putch:	
  1092                           
  1093                           ; 1 bytes @ 0x12
  1094  0032                     	ds	1
  1095  0033                     lcd_putch@character:	
  1096  0033                     randomize_gameboard@used:	
  1097                           ; 1 bytes @ 0x13
  1098                           
  1099                           
  1100                           ; 32 bytes @ 0x13
  1101  0033                     	ds	1
  1102  0034                     ??_display_scoreboard:	
  1103  0034                     ??_display_gameboard:	
  1104                           ; 1 bytes @ 0x14
  1105                           
  1106  0034                     ??_toggle_cursor:	
  1107                           ; 1 bytes @ 0x14
  1108                           
  1109  0034                     ?_update_cursor:	
  1110                           ; 1 bytes @ 0x14
  1111                           
  1112  0034                     update_cursor@direction:	
  1113                           ; 1 bytes @ 0x14
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x14
  1117  0034                     	ds	1
  1118  0035                     ??_update_cursor:	
  1119  0035                     display_gameboard@i:	
  1120                           ; 1 bytes @ 0x15
  1121                           
  1122                           
  1123                           ; 1 bytes @ 0x15
  1124  0035                     	ds	1
  1125  0036                     ??_startup:	
  1126  0036                     ??_check_for_match:	
  1127                           ; 1 bytes @ 0x16
  1128                           
  1129  0036                     end_screen@first_row:	
  1130                           ; 1 bytes @ 0x16
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x16
  1134  0036                     	ds	1
  1135  0037                     end_screen@i:	
  1136  0037                     update_cursor@move_delay_count:	
  1137                           ; 1 bytes @ 0x17
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x17
  1141  0037                     	ds	1
  1142  0038                     end_screen@color_index:	
  1143  0038                     check_for_match@player:	
  1144                           ; 1 bytes @ 0x18
  1145                           
  1146                           
  1147                           ; 1 bytes @ 0x18
  1148  0038                     	ds	1
  1149  0039                     ??_update_gameboard_from_input:	
  1150  0039                     ??_game_end:	
  1151                           ; 1 bytes @ 0x19
  1152                           
  1153                           
  1154                           ; 1 bytes @ 0x19
  1155  0039                     	ds	26
  1156  0053                     randomize_gameboard@current:	
  1157                           
  1158                           ; 1 bytes @ 0x33
  1159  0053                     	ds	1
  1160  0054                     randomize_gameboard@random:	
  1161                           
  1162                           ; 1 bytes @ 0x34
  1163  0054                     	ds	1
  1164  0055                     ??_gameboard_init:	
  1165                           
  1166                           ; 1 bytes @ 0x35
  1167  0055                     	ds	1
  1168  0056                     gameboard_init@i:	
  1169                           
  1170                           ; 1 bytes @ 0x36
  1171  0056                     	ds	1
  1172                           
  1173                           	psect	maintext
  1174  0C9F                     __pmaintext:	
  1175 ;;
  1176 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1177 ;;
  1178 ;; *************** function _main *****************
  1179 ;; Defined at:
  1180 ;;		line 104 in file "concentration.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : B00/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0
  1196 ;;      Temps:          0       0       1       0       0
  1197 ;;      Totals:         0       0       1       0       0
  1198 ;;Total ram usage:        1 bytes
  1199 ;; Hardware stack levels required when called:    7
  1200 ;; This function calls:
  1201 ;;		_game_end
  1202 ;;		_gameboard_init
  1203 ;;		_joystick_init
  1204 ;;		_lcd_init
  1205 ;;		_startup
  1206 ;;		_update_gameboard_from_input
  1207 ;; This function is called by:
  1208 ;;		Startup code after reset
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _main
  1214  0C9F                     _main:	
  1215  0C9F                     l3347:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1218                           
  1219                           
  1220                           ;concentration.c: 106:     SCS = 0;
  1221  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  1222  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  1223  0CA1  100F               	bcf	15,0	;volatile
  1224  0CA2                     l3349:	
  1225                           
  1226                           ;concentration.c: 108:     TRISD = 0;
  1227  0CA2  0188               	clrf	8	;volatile
  1228                           
  1229                           ;concentration.c: 109:     TRISA = 0;
  1230  0CA3  0185               	clrf	5	;volatile
  1231                           
  1232                           ;concentration.c: 110:     ANSEL = 0;
  1233  0CA4  1683               	bsf	3,5	;RP0=1, select bank3
  1234  0CA5  1703               	bsf	3,6	;RP1=1, select bank3
  1235  0CA6  0188               	clrf	8	;volatile
  1236  0CA7                     l3351:	
  1237                           
  1238                           ;concentration.c: 111:     lcd_init(gameboard);
  1239  0CA7  3005               	movlw	5
  1240  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0CAA  00AA               	movwf	lcd_init@port
  1243  0CAB  3000               	movlw	0
  1244  0CAC  00AB               	movwf	lcd_init@port+1
  1245  0CAD  120A  158A  258E  120A  158A  	fcall	_lcd_init
  1246  0CB2                     l3353:	
  1247                           
  1248                           ;concentration.c: 112:     lcd_init(scoreboard);
  1249  0CB2  3008               	movlw	8
  1250  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0CB5  00AA               	movwf	lcd_init@port
  1253  0CB6  3000               	movlw	0
  1254  0CB7  00AB               	movwf	lcd_init@port+1
  1255  0CB8  120A  158A  258E  120A  158A  	fcall	_lcd_init
  1256  0CBD                     l3355:	
  1257                           
  1258                           ;concentration.c: 114:     joystick_init();
  1259  0CBD  120A  158A  2395  120A  158A  	fcall	_joystick_init
  1260  0CC2                     l3357:	
  1261                           
  1262                           ;concentration.c: 116:     gameboard_init();
  1263  0CC2  120A  158A  269A  120A  158A  	fcall	_gameboard_init
  1264  0CC7                     l3359:	
  1265                           
  1266                           ;concentration.c: 118:     startup();
  1267  0CC7  120A  158A  2776  120A  158A  	fcall	_startup
  1268  0CCC                     l3361:	
  1269                           
  1270                           ;concentration.c: 119:     current_player = 0;
  1271  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0CCE  01DC               	clrf	_current_player
  1274  0CCF                     l3363:	
  1275                           
  1276                           ;concentration.c: 120:     TRISC &= 0x1F;
  1277  0CCF  301F               	movlw	31
  1278  0CD0  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0CD1  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0CD2  00E0               	movwf	??_main^(0+128)
  1281  0CD3  0860               	movf	??_main^(0+128),w
  1282  0CD4  0587               	andwf	7,f	;volatile
  1283  0CD5                     l3365:	
  1284                           
  1285                           ;concentration.c: 121:     PORTC = 0;
  1286  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0CD7  0187               	clrf	7	;volatile
  1289                           
  1290                           ;concentration.c: 123:     while(!game_over) {
  1291  0CD8  2CDE               	goto	l3369
  1292  0CD9                     l3367:	
  1293                           
  1294                           ;concentration.c: 124:         update_gameboard_from_input();
  1295  0CD9  120A  118A  221F  120A  158A  	fcall	_update_gameboard_from_input
  1296  0CDE                     l3369:	
  1297                           
  1298                           ;concentration.c: 123:     while(!game_over) {
  1299  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0CE0  085B               	movf	_game_over,w
  1302  0CE1  1903               	btfsc	3,2
  1303  0CE2  2CE4               	goto	u2471
  1304  0CE3  2CE5               	goto	u2470
  1305  0CE4                     u2471:	
  1306  0CE4  2CD9               	goto	l3367
  1307  0CE5                     u2470:	
  1308  0CE5                     l3371:	
  1309                           
  1310                           ;concentration.c: 126:     game_end();
  1311  0CE5  120A  158A  2415  120A  158A  	fcall	_game_end
  1312  0CEA                     l194:	
  1313  0CEA  120A  118A  280E   	ljmp	start
  1314  0CED                     __end_of_main:	
  1315                           
  1316                           	psect	text1
  1317  021F                     __ptext1:	
  1318 ;; *************** function _update_gameboard_from_input *****************
  1319 ;; Defined at:
  1320 ;;		line 375 in file "concentration.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0
  1336 ;;      Temps:          0       2       0       0       0
  1337 ;;      Totals:         0       2       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    6
  1341 ;; This function calls:
  1342 ;;		_DelayMs
  1343 ;;		_check_for_match
  1344 ;;		_display_gameboard
  1345 ;;		_get_cursor_index
  1346 ;;		_toggle_cursor
  1347 ;;		_update_cursor
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _update_gameboard_from_input
  1355  021F                     _update_gameboard_from_input:	
  1356  021F                     l3265:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1359                           
  1360                           
  1361                           ;concentration.c: 377:     if(GO == 0) {
  1362  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0221  189F               	btfsc	31,1	;volatile
  1365  0222  2A24               	goto	u2201
  1366  0223  2A25               	goto	u2200
  1367  0224                     u2201:	
  1368  0224  2A26               	goto	l298
  1369  0225                     u2200:	
  1370  0225                     l3267:	
  1371                           
  1372                           ;concentration.c: 378:         GO = 1;
  1373  0225  149F               	bsf	31,1	;volatile
  1374  0226                     l298:	
  1375                           ;concentration.c: 379:     }
  1376                           
  1377                           
  1378                           ;concentration.c: 380:     if((((RB5 == 0)&&(current_player == 0))||
  1379  0226  1A86               	btfsc	6,5	;volatile
  1380  0227  2A29               	goto	u2211
  1381  0228  2A2A               	goto	u2210
  1382  0229                     u2211:	
  1383  0229  2A2F               	goto	l303
  1384  022A                     u2210:	
  1385  022A                     l3269:	
  1386  022A  085C               	movf	_current_player,w
  1387  022B  1903               	btfsc	3,2
  1388  022C  2A2E               	goto	u2221
  1389  022D  2A2F               	goto	u2220
  1390  022E                     u2221:	
  1391  022E  2A38               	goto	l3273
  1392  022F                     u2220:	
  1393  022F                     l303:	
  1394  022F  1906               	btfsc	6,2	;volatile
  1395  0230  2A32               	goto	u2231
  1396  0231  2A33               	goto	u2230
  1397  0232                     u2231:	
  1398  0232  2A8E               	goto	l299
  1399  0233                     u2230:	
  1400  0233                     l3271:	
  1401  0233  035C               	decf	_current_player,w
  1402  0234  1D03               	btfss	3,2
  1403  0235  2A37               	goto	u2241
  1404  0236  2A38               	goto	u2240
  1405  0237                     u2241:	
  1406  0237  2A8E               	goto	l299
  1407  0238                     u2240:	
  1408  0238                     l3273:	
  1409  0238  035D               	decf	_joystick_pressed,w
  1410  0239  1D03               	btfss	3,2
  1411  023A  2A3C               	goto	u2251
  1412  023B  2A3D               	goto	u2250
  1413  023C                     u2251:	
  1414  023C  2A8E               	goto	l299
  1415  023D                     u2250:	
  1416  023D                     l3275:	
  1417                           
  1418                           ;concentration.c: 382:             &&(joystick_pressed == 1)) {;concentration.c: 383:   
      +                                DelayMs(6);
  1419  023D  3006               	movlw	6
  1420  023E  00A0               	movwf	DelayMs@millis
  1421  023F  3000               	movlw	0
  1422  0240  00A1               	movwf	DelayMs@millis+1
  1423  0241  120A  158A  231E  120A  118A  	fcall	_DelayMs
  1424  0246                     l3277:	
  1425                           
  1426                           ;concentration.c: 384:         joystick_pressed = 0;
  1427  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0248  01DD               	clrf	_joystick_pressed
  1430  0249                     l3279:	
  1431                           
  1432                           ;concentration.c: 385:         if(visible[get_cursor_index(cursor_pos)] == 0xFF) {
  1433  0249  0865               	movf	_cursor_pos,w
  1434  024A  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  1435  024F  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1436  0250  0084               	movwf	4
  1437  0251  1383               	bcf	3,7	;select IRP bank1
  1438  0252  0A00               	incf	0,w
  1439  0253  1D03               	btfss	3,2
  1440  0254  2A56               	goto	u2261
  1441  0255  2A57               	goto	u2260
  1442  0256                     u2261:	
  1443  0256  2AA2               	goto	l305
  1444  0257                     u2260:	
  1445  0257                     l3281:	
  1446                           
  1447                           ;concentration.c: 386:             visible[get_cursor_index(cursor_pos)] = board[get_cur
      +                          sor_index(cursor_pos)];
  1448  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0259  0865               	movf	_cursor_pos,w
  1451  025A  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  1452  025F  3EC0               	addlw	(low (_board| 0))& (0+255)
  1453  0260  0084               	movwf	4
  1454  0261  1383               	bcf	3,7	;select IRP bank1
  1455  0262  0800               	movf	0,w
  1456  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0265  00B9               	movwf	??_update_gameboard_from_input
  1459  0266  0865               	movf	_cursor_pos,w
  1460  0267  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  1461  026C  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1462  026D  0084               	movwf	4
  1463  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1464  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0270  0839               	movf	??_update_gameboard_from_input,w
  1466  0271  1383               	bcf	3,7	;select IRP bank1
  1467  0272  0080               	movwf	0
  1468                           
  1469                           ;concentration.c: 387:             current_char = board[get_cursor_index(cursor_pos)];
  1470  0273  0865               	movf	_cursor_pos,w
  1471  0274  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  1472  0279  3EC0               	addlw	(low (_board| 0))& (0+255)
  1473  027A  0084               	movwf	4
  1474  027B  1383               	bcf	3,7	;select IRP bank1
  1475  027C  0800               	movf	0,w
  1476  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1477  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1478  027F  00B9               	movwf	??_update_gameboard_from_input
  1479  0280  0839               	movf	??_update_gameboard_from_input,w
  1480  0281  00E4               	movwf	_current_char
  1481                           
  1482                           ;concentration.c: 388:             check_for_match(current_player);
  1483  0282  085C               	movf	_current_player,w
  1484  0283  120A  118A  237A  120A  118A  	fcall	_check_for_match
  1485                           
  1486                           ;concentration.c: 389:             display_gameboard();
  1487  0288  120A  158A  245A  120A  118A  	fcall	_display_gameboard
  1488  028D  2AA2               	goto	l305
  1489  028E                     l299:	
  1490  028E  1E86               	btfss	6,5	;volatile
  1491  028F  2A91               	goto	u2271
  1492  0290  2A92               	goto	u2270
  1493  0291                     u2271:	
  1494  0291  2A97               	goto	l310
  1495  0292                     u2270:	
  1496  0292                     l3283:	
  1497  0292  085C               	movf	_current_player,w
  1498  0293  1903               	btfsc	3,2
  1499  0294  2A96               	goto	u2281
  1500  0295  2A97               	goto	u2280
  1501  0296                     u2281:	
  1502  0296  2AA0               	goto	l308
  1503  0297                     u2280:	
  1504  0297                     l310:	
  1505  0297  1D06               	btfss	6,2	;volatile
  1506  0298  2A9A               	goto	u2291
  1507  0299  2A9B               	goto	u2290
  1508  029A                     u2291:	
  1509  029A  2AA2               	goto	l305
  1510  029B                     u2290:	
  1511  029B                     l3285:	
  1512  029B  035C               	decf	_current_player,w
  1513  029C  1D03               	btfss	3,2
  1514  029D  2A9F               	goto	u2301
  1515  029E  2AA0               	goto	u2300
  1516  029F                     u2301:	
  1517  029F  2AA2               	goto	l305
  1518  02A0                     u2300:	
  1519  02A0                     l308:	
  1520                           
  1521                           ;concentration.c: 392:             ((RB2 == 1)&&(current_player == 1)))) {;concentration
      +                          .c: 393:         joystick_pressed = 1;
  1522  02A0  01DD               	clrf	_joystick_pressed
  1523  02A1  0ADD               	incf	_joystick_pressed,f
  1524  02A2                     l305:	
  1525                           
  1526                           ;concentration.c: 396:     if(CCP1IF == 1) {
  1527  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1528  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1529  02A4  1D0C               	btfss	12,2	;volatile
  1530  02A5  2AA7               	goto	u2311
  1531  02A6  2AA8               	goto	u2310
  1532  02A7                     u2311:	
  1533  02A7  2AC8               	goto	l3297
  1534  02A8                     u2310:	
  1535  02A8                     l3287:	
  1536                           
  1537                           ;concentration.c: 397:         if(delay_loops == 0) {
  1538  02A8  0862               	movf	_delay_loops,w
  1539  02A9  1D03               	btfss	3,2
  1540  02AA  2AAC               	goto	u2321
  1541  02AB  2AAD               	goto	u2320
  1542  02AC                     u2321:	
  1543  02AC  2AB7               	goto	l3293
  1544  02AD                     u2320:	
  1545  02AD                     l3289:	
  1546                           
  1547                           ;concentration.c: 398:             delay_loops = 25;
  1548  02AD  3019               	movlw	25
  1549  02AE  00B9               	movwf	??_update_gameboard_from_input
  1550  02AF  0839               	movf	??_update_gameboard_from_input,w
  1551  02B0  00E2               	movwf	_delay_loops
  1552  02B1                     l3291:	
  1553                           
  1554                           ;concentration.c: 399:             toggle_cursor();
  1555  02B1  120A  158A  23E7  120A  118A  	fcall	_toggle_cursor
  1556                           
  1557                           ;concentration.c: 400:         } else {
  1558  02B6  2AB9               	goto	l313
  1559  02B7                     l3293:	
  1560                           
  1561                           ;concentration.c: 401:             delay_loops--;
  1562  02B7  3001               	movlw	1
  1563  02B8  02E2               	subwf	_delay_loops,f
  1564  02B9                     l313:	
  1565                           ;concentration.c: 402:         }
  1566                           
  1567                           
  1568                           ;concentration.c: 403:         CCPR1 = TMR1+50000;
  1569  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1570  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1571  02BB  080E               	movf	14,w	;volatile
  1572  02BC  3E50               	addlw	80
  1573  02BD  00B9               	movwf	??_update_gameboard_from_input
  1574  02BE  080F               	movf	15,w	;volatile
  1575  02BF  1803               	skipnc
  1576  02C0  3E01               	addlw	1
  1577  02C1  3EC3               	addlw	195
  1578  02C2  00BA               	movwf	??_update_gameboard_from_input+1
  1579  02C3  0839               	movf	??_update_gameboard_from_input,w
  1580  02C4  0095               	movwf	21	;volatile
  1581  02C5  083A               	movf	??_update_gameboard_from_input+1,w
  1582  02C6  0096               	movwf	22	;volatile
  1583  02C7                     l3295:	
  1584                           
  1585                           ;concentration.c: 404:         CCP1IF = 0;
  1586  02C7  110C               	bcf	12,2	;volatile
  1587  02C8                     l3297:	
  1588                           
  1589                           ;concentration.c: 407:     if(joystick_x_pos > 900) {
  1590  02C8  085A               	movf	_joystick_x_pos+1,w
  1591  02C9  3A80               	xorlw	128
  1592  02CA  00FF               	movwf	btemp+1
  1593  02CB  3083               	movlw	131
  1594  02CC  027F               	subwf	btemp+1,w
  1595  02CD  1D03               	skipz
  1596  02CE  2AD1               	goto	u2335
  1597  02CF  3085               	movlw	133
  1598  02D0  0259               	subwf	_joystick_x_pos,w
  1599  02D1                     u2335:	
  1600  02D1  1C03               	skipc
  1601  02D2  2AD4               	goto	u2331
  1602  02D3  2AD5               	goto	u2330
  1603  02D4                     u2331:	
  1604  02D4  2AE7               	goto	l3303
  1605  02D5                     u2330:	
  1606  02D5                     l3299:	
  1607                           
  1608                           ;concentration.c: 408:         if(cursor_movable) {
  1609  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1610  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1611  02D7  0861               	movf	_cursor_movable,w
  1612  02D8  1903               	btfsc	3,2
  1613  02D9  2ADB               	goto	u2341
  1614  02DA  2ADC               	goto	u2340
  1615  02DB                     u2341:	
  1616  02DB  2B79               	goto	l332
  1617  02DC                     u2340:	
  1618  02DC                     l3301:	
  1619                           
  1620                           ;concentration.c: 409:             update_cursor(30, 2);
  1621  02DC  3002               	movlw	2
  1622  02DD  00B9               	movwf	??_update_gameboard_from_input
  1623  02DE  0839               	movf	??_update_gameboard_from_input,w
  1624  02DF  00B4               	movwf	update_cursor@direction
  1625  02E0  301E               	movlw	30
  1626  02E1  120A  118A  272C  120A  118A  	fcall	_update_cursor
  1627  02E6  2B79               	goto	l332
  1628  02E7                     l3303:	
  1629  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1630  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1631  02E9  085A               	movf	_joystick_x_pos+1,w
  1632  02EA  3A80               	xorlw	128
  1633  02EB  00FF               	movwf	btemp+1
  1634  02EC  3080               	movlw	128
  1635  02ED  027F               	subwf	btemp+1,w
  1636  02EE  1D03               	skipz
  1637  02EF  2AF2               	goto	u2355
  1638  02F0  3064               	movlw	100
  1639  02F1  0259               	subwf	_joystick_x_pos,w
  1640  02F2                     u2355:	
  1641  02F2  1803               	skipnc
  1642  02F3  2AF5               	goto	u2351
  1643  02F4  2AF6               	goto	u2350
  1644  02F5                     u2351:	
  1645  02F5  2B08               	goto	l3309
  1646  02F6                     u2350:	
  1647  02F6                     l3305:	
  1648                           
  1649                           ;concentration.c: 412:         if(cursor_movable) {
  1650  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1651  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1652  02F8  0861               	movf	_cursor_movable,w
  1653  02F9  1903               	btfsc	3,2
  1654  02FA  2AFC               	goto	u2361
  1655  02FB  2AFD               	goto	u2360
  1656  02FC                     u2361:	
  1657  02FC  2B79               	goto	l332
  1658  02FD                     u2360:	
  1659  02FD                     l3307:	
  1660                           
  1661                           ;concentration.c: 413:             update_cursor(30, 3);
  1662  02FD  3003               	movlw	3
  1663  02FE  00B9               	movwf	??_update_gameboard_from_input
  1664  02FF  0839               	movf	??_update_gameboard_from_input,w
  1665  0300  00B4               	movwf	update_cursor@direction
  1666  0301  301E               	movlw	30
  1667  0302  120A  118A  272C  120A  118A  	fcall	_update_cursor
  1668  0307  2B79               	goto	l332
  1669  0308                     l3309:	
  1670  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1672  030A  085A               	movf	_joystick_x_pos+1,w
  1673  030B  3A80               	xorlw	128
  1674  030C  00FF               	movwf	btemp+1
  1675  030D  3082               	movlw	130
  1676  030E  027F               	subwf	btemp+1,w
  1677  030F  1D03               	skipz
  1678  0310  2B13               	goto	u2375
  1679  0311  30BD               	movlw	189
  1680  0312  0259               	subwf	_joystick_x_pos,w
  1681  0313                     u2375:	
  1682  0313  1C03               	skipc
  1683  0314  2B16               	goto	u2371
  1684  0315  2B17               	goto	u2370
  1685  0316                     u2371:	
  1686  0316  2B29               	goto	l3315
  1687  0317                     u2370:	
  1688  0317                     l3311:	
  1689                           
  1690                           ;concentration.c: 416:         if(cursor_movable) {
  1691  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0319  0861               	movf	_cursor_movable,w
  1694  031A  1903               	btfsc	3,2
  1695  031B  2B1D               	goto	u2381
  1696  031C  2B1E               	goto	u2380
  1697  031D                     u2381:	
  1698  031D  2B79               	goto	l332
  1699  031E                     u2380:	
  1700  031E                     l3313:	
  1701                           
  1702                           ;concentration.c: 417:             update_cursor(60, 2);
  1703  031E  3002               	movlw	2
  1704  031F  00B9               	movwf	??_update_gameboard_from_input
  1705  0320  0839               	movf	??_update_gameboard_from_input,w
  1706  0321  00B4               	movwf	update_cursor@direction
  1707  0322  303C               	movlw	60
  1708  0323  120A  118A  272C  120A  118A  	fcall	_update_cursor
  1709  0328  2B79               	goto	l332
  1710  0329                     l3315:	
  1711  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1712  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1713  032B  085A               	movf	_joystick_x_pos+1,w
  1714  032C  3A80               	xorlw	128
  1715  032D  00FF               	movwf	btemp+1
  1716  032E  3081               	movlw	129
  1717  032F  027F               	subwf	btemp+1,w
  1718  0330  1D03               	skipz
  1719  0331  2B34               	goto	u2395
  1720  0332  302C               	movlw	44
  1721  0333  0259               	subwf	_joystick_x_pos,w
  1722  0334                     u2395:	
  1723  0334  1803               	skipnc
  1724  0335  2B37               	goto	u2391
  1725  0336  2B38               	goto	u2390
  1726  0337                     u2391:	
  1727  0337  2B4A               	goto	l3321
  1728  0338                     u2390:	
  1729  0338                     l3317:	
  1730                           
  1731                           ;concentration.c: 420:         if(cursor_movable) {
  1732  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0339  1303               	bcf	3,6	;RP1=0, select bank0
  1734  033A  0861               	movf	_cursor_movable,w
  1735  033B  1903               	btfsc	3,2
  1736  033C  2B3E               	goto	u2401
  1737  033D  2B3F               	goto	u2400
  1738  033E                     u2401:	
  1739  033E  2B79               	goto	l332
  1740  033F                     u2400:	
  1741  033F                     l3319:	
  1742                           
  1743                           ;concentration.c: 421:             update_cursor(60, 3);
  1744  033F  3003               	movlw	3
  1745  0340  00B9               	movwf	??_update_gameboard_from_input
  1746  0341  0839               	movf	??_update_gameboard_from_input,w
  1747  0342  00B4               	movwf	update_cursor@direction
  1748  0343  303C               	movlw	60
  1749  0344  120A  118A  272C  120A  118A  	fcall	_update_cursor
  1750  0349  2B79               	goto	l332
  1751  034A                     l3321:	
  1752  034A  30FD               	movlw	253
  1753  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1754  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1755  034D  0657               	xorwf	_joystick_y_pos,w
  1756  034E  3003               	movlw	3
  1757  034F  1903               	skipnz
  1758  0350  0658               	xorwf	_joystick_y_pos+1,w
  1759  0351  1D03               	btfss	3,2
  1760  0352  2B54               	goto	u2411
  1761  0353  2B55               	goto	u2410
  1762  0354                     u2411:	
  1763  0354  2B63               	goto	l3327
  1764  0355                     u2410:	
  1765  0355                     l3323:	
  1766                           
  1767                           ;concentration.c: 424:         if(cursor_movable) {
  1768  0355  0861               	movf	_cursor_movable,w
  1769  0356  1903               	btfsc	3,2
  1770  0357  2B59               	goto	u2421
  1771  0358  2B5A               	goto	u2420
  1772  0359                     u2421:	
  1773  0359  2B79               	goto	l332
  1774  035A                     u2420:	
  1775  035A                     l3325:	
  1776                           
  1777                           ;concentration.c: 425:             update_cursor(100, 1);
  1778  035A  01B4               	clrf	update_cursor@direction
  1779  035B  0AB4               	incf	update_cursor@direction,f
  1780  035C  3064               	movlw	100
  1781  035D  120A  118A  272C  120A  118A  	fcall	_update_cursor
  1782  0362  2B79               	goto	l332
  1783  0363                     l3327:	
  1784  0363  0857               	movf	_joystick_y_pos,w
  1785  0364  0458               	iorwf	_joystick_y_pos+1,w
  1786  0365  1D03               	btfss	3,2
  1787  0366  2B68               	goto	u2431
  1788  0367  2B69               	goto	u2430
  1789  0368                     u2431:	
  1790  0368  2B77               	goto	l329
  1791  0369                     u2430:	
  1792  0369                     l3329:	
  1793                           
  1794                           ;concentration.c: 428:         if(cursor_movable) {
  1795  0369  0861               	movf	_cursor_movable,w
  1796  036A  1903               	btfsc	3,2
  1797  036B  2B6D               	goto	u2441
  1798  036C  2B6E               	goto	u2440
  1799  036D                     u2441:	
  1800  036D  2B79               	goto	l332
  1801  036E                     u2440:	
  1802  036E                     l3331:	
  1803                           
  1804                           ;concentration.c: 429:             update_cursor(100, 1);
  1805  036E  01B4               	clrf	update_cursor@direction
  1806  036F  0AB4               	incf	update_cursor@direction,f
  1807  0370  3064               	movlw	100
  1808  0371  120A  118A  272C  120A  118A  	fcall	_update_cursor
  1809  0376  2B79               	goto	l332
  1810  0377                     l329:	
  1811                           
  1812                           ;concentration.c: 432:         cursor_movable = 1;
  1813  0377  01E1               	clrf	_cursor_movable
  1814  0378  0AE1               	incf	_cursor_movable,f
  1815  0379                     l332:	
  1816  0379  0008               	return
  1817  037A                     __end_of_update_gameboard_from_input:	
  1818                           
  1819                           	psect	text2
  1820  072C                     __ptext2:	
  1821 ;; *************** function _update_cursor *****************
  1822 ;; Defined at:
  1823 ;;		line 436 in file "concentration.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  move_delay_c    1    wreg     unsigned char 
  1826 ;;  direction       1   20[BANK0 ] unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  move_delay_c    1   23[BANK0 ] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       1       0       0       0
  1839 ;;      Locals:         0       1       0       0       0
  1840 ;;      Temps:          0       2       0       0       0
  1841 ;;      Totals:         0       4       0       0       0
  1842 ;;Total ram usage:        4 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    4
  1845 ;; This function calls:
  1846 ;;		_get_current_char
  1847 ;;		_lcd_goto
  1848 ;;		_lcd_putch
  1849 ;; This function is called by:
  1850 ;;		_update_gameboard_from_input
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _update_cursor
  1856  072C                     _update_cursor:	
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1860                           ;update_cursor@move_delay_count stored from wreg
  1861  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1862  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1863  072E  00B7               	movwf	update_cursor@move_delay_count
  1864  072F                     l3105:	
  1865                           
  1866                           ;concentration.c: 437:     cursor_movable = 0;
  1867  072F  01E1               	clrf	_cursor_movable
  1868  0730                     l3107:	
  1869                           
  1870                           ;concentration.c: 438:     cursor_move_delay_count = move_delay_count;
  1871  0730  0837               	movf	update_cursor@move_delay_count,w
  1872  0731  00B5               	movwf	??_update_cursor
  1873  0732  0835               	movf	??_update_cursor,w
  1874  0733  00FA               	movwf	_cursor_move_delay_count
  1875                           
  1876                           ;concentration.c: 439:     switch(direction) {
  1877  0734  2F73               	goto	l3129
  1878  0735                     l3109:	
  1879                           
  1880                           ;concentration.c: 441:             cursor_pos ^= 0x40;
  1881  0735  3040               	movlw	64
  1882  0736  00B5               	movwf	??_update_cursor
  1883  0737  0835               	movf	??_update_cursor,w
  1884  0738  06E5               	xorwf	_cursor_pos,f
  1885                           
  1886                           ;concentration.c: 442:             break;
  1887  0739  2F86               	goto	l3131
  1888  073A                     l3111:	
  1889                           
  1890                           ;concentration.c: 446:                     cursor_pos = 0x0F;
  1891  073A  300F               	movlw	15
  1892  073B  00B5               	movwf	??_update_cursor
  1893  073C  0835               	movf	??_update_cursor,w
  1894  073D  00E5               	movwf	_cursor_pos
  1895                           
  1896                           ;concentration.c: 447:                     break;
  1897  073E  2F86               	goto	l3131
  1898  073F                     l3113:	
  1899                           
  1900                           ;concentration.c: 449:                     cursor_pos = 0x4F;
  1901  073F  304F               	movlw	79
  1902  0740  00B5               	movwf	??_update_cursor
  1903  0741  0835               	movf	??_update_cursor,w
  1904  0742  00E5               	movwf	_cursor_pos
  1905                           
  1906                           ;concentration.c: 450:                     break;
  1907  0743  2F86               	goto	l3131
  1908  0744                     l3115:	
  1909                           
  1910                           ;concentration.c: 452:                     cursor_pos--;
  1911  0744  3001               	movlw	1
  1912  0745  02E5               	subwf	_cursor_pos,f
  1913                           
  1914                           ;concentration.c: 453:             }
  1915  0746  2F86               	goto	l3131
  1916  0747                     l3117:	
  1917  0747  0865               	movf	_cursor_pos,w
  1918  0748  00B5               	movwf	??_update_cursor
  1919  0749  01B6               	clrf	??_update_cursor+1
  1920                           
  1921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 1, Range of values is 0 to 0
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            4     3 (average)
  1927                           ; direct_byte           11     8 (fixed)
  1928                           ; jumptable            260     6 (fixed)
  1929                           ;	Chosen strategy is simple_byte
  1930  074A  0836               	movf	??_update_cursor+1,w
  1931  074B  3A00               	xorlw	0	; case 0
  1932  074C  1903               	skipnz
  1933  074D  2F4F               	goto	l3493
  1934  074E  2F44               	goto	l3115
  1935  074F                     l3493:	
  1936                           
  1937                           ; Switch size 1, requested type "simple"
  1938                           ; Number of cases is 2, Range of values is 0 to 64
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte            7     4 (average)
  1942                           ; direct_byte          203     8 (fixed)
  1943                           ; jumptable            260     6 (fixed)
  1944                           ;	Chosen strategy is simple_byte
  1945  074F  0835               	movf	??_update_cursor,w
  1946  0750  3A00               	xorlw	0	; case 0
  1947  0751  1903               	skipnz
  1948  0752  2F3A               	goto	l3111
  1949  0753  3A40               	xorlw	64	; case 64
  1950  0754  1903               	skipnz
  1951  0755  2F3F               	goto	l3113
  1952  0756  2F44               	goto	l3115
  1953  0757                     l3119:	
  1954                           
  1955                           ;concentration.c: 458:                     cursor_pos = 0x00;
  1956  0757  01E5               	clrf	_cursor_pos
  1957                           
  1958                           ;concentration.c: 459:                     break;
  1959  0758  2F86               	goto	l3131
  1960  0759                     l3121:	
  1961                           
  1962                           ;concentration.c: 461:                     cursor_pos = 0x40;
  1963  0759  3040               	movlw	64
  1964  075A  00B5               	movwf	??_update_cursor
  1965  075B  0835               	movf	??_update_cursor,w
  1966  075C  00E5               	movwf	_cursor_pos
  1967                           
  1968                           ;concentration.c: 462:                     break;
  1969  075D  2F86               	goto	l3131
  1970  075E                     l3123:	
  1971                           
  1972                           ;concentration.c: 464:                     cursor_pos++;
  1973  075E  3001               	movlw	1
  1974  075F  00B5               	movwf	??_update_cursor
  1975  0760  0835               	movf	??_update_cursor,w
  1976  0761  07E5               	addwf	_cursor_pos,f
  1977                           
  1978                           ;concentration.c: 465:             }
  1979  0762  2F86               	goto	l3131
  1980  0763                     l3125:	
  1981  0763  0865               	movf	_cursor_pos,w
  1982  0764  00B5               	movwf	??_update_cursor
  1983  0765  01B6               	clrf	??_update_cursor+1
  1984                           
  1985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1986                           ; Switch size 1, requested type "simple"
  1987                           ; Number of cases is 1, Range of values is 0 to 0
  1988                           ; switch strategies available:
  1989                           ; Name         Instructions Cycles
  1990                           ; simple_byte            4     3 (average)
  1991                           ; direct_byte           11     8 (fixed)
  1992                           ; jumptable            260     6 (fixed)
  1993                           ;	Chosen strategy is simple_byte
  1994  0766  0836               	movf	??_update_cursor+1,w
  1995  0767  3A00               	xorlw	0	; case 0
  1996  0768  1903               	skipnz
  1997  0769  2F6B               	goto	l3495
  1998  076A  2F5E               	goto	l3123
  1999  076B                     l3495:	
  2000                           
  2001                           ; Switch size 1, requested type "simple"
  2002                           ; Number of cases is 2, Range of values is 15 to 79
  2003                           ; switch strategies available:
  2004                           ; Name         Instructions Cycles
  2005                           ; simple_byte            7     4 (average)
  2006                           ; direct_byte          206    11 (fixed)
  2007                           ; jumptable            263     9 (fixed)
  2008                           ;	Chosen strategy is simple_byte
  2009  076B  0835               	movf	??_update_cursor,w
  2010  076C  3A0F               	xorlw	15	; case 15
  2011  076D  1903               	skipnz
  2012  076E  2F57               	goto	l3119
  2013  076F  3A40               	xorlw	64	; case 79
  2014  0770  1903               	skipnz
  2015  0771  2F59               	goto	l3121
  2016  0772  2F5E               	goto	l3123
  2017  0773                     l3129:	
  2018  0773  0834               	movf	update_cursor@direction,w
  2019  0774  00B5               	movwf	??_update_cursor
  2020  0775  01B6               	clrf	??_update_cursor+1
  2021                           
  2022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2023                           ; Switch size 1, requested type "simple"
  2024                           ; Number of cases is 1, Range of values is 0 to 0
  2025                           ; switch strategies available:
  2026                           ; Name         Instructions Cycles
  2027                           ; simple_byte            4     3 (average)
  2028                           ; direct_byte           11     8 (fixed)
  2029                           ; jumptable            260     6 (fixed)
  2030                           ;	Chosen strategy is simple_byte
  2031  0776  0836               	movf	??_update_cursor+1,w
  2032  0777  3A00               	xorlw	0	; case 0
  2033  0778  1903               	skipnz
  2034  0779  2F7B               	goto	l3497
  2035  077A  2F86               	goto	l3131
  2036  077B                     l3497:	
  2037                           
  2038                           ; Switch size 1, requested type "simple"
  2039                           ; Number of cases is 3, Range of values is 1 to 3
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte           10     6 (average)
  2043                           ; direct_byte           20    11 (fixed)
  2044                           ; jumptable            263     9 (fixed)
  2045                           ;	Chosen strategy is simple_byte
  2046  077B  0835               	movf	??_update_cursor,w
  2047  077C  3A01               	xorlw	1	; case 1
  2048  077D  1903               	skipnz
  2049  077E  2F35               	goto	l3109
  2050  077F  3A03               	xorlw	3	; case 2
  2051  0780  1903               	skipnz
  2052  0781  2F47               	goto	l3117
  2053  0782  3A01               	xorlw	1	; case 3
  2054  0783  1903               	skipnz
  2055  0784  2F63               	goto	l3125
  2056  0785  2F86               	goto	l3131
  2057  0786                     l3131:	
  2058                           
  2059                           ;concentration.c: 468:     lcd_putch(current_char, gameboard);
  2060  0786  3005               	movlw	5
  2061  0787  00B0               	movwf	lcd_putch@port
  2062  0788  3000               	movlw	0
  2063  0789  00B1               	movwf	lcd_putch@port+1
  2064  078A  0864               	movf	_current_char,w
  2065  078B  120A  158A  22E3  120A  118A  	fcall	_lcd_putch
  2066                           
  2067                           ;concentration.c: 469:     lcd_goto(cursor_pos, gameboard);
  2068  0790  3005               	movlw	5
  2069  0791  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0792  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0793  00A8               	movwf	lcd_goto@port
  2072  0794  3000               	movlw	0
  2073  0795  00A9               	movwf	lcd_goto@port+1
  2074  0796  0865               	movf	_cursor_pos,w
  2075  0797  120A  158A  2351  120A  118A  	fcall	_lcd_goto
  2076                           
  2077                           ;concentration.c: 470:     get_current_char();
  2078  079C  120A  158A  22D1  120A  118A  	fcall	_get_current_char
  2079  07A1                     l3133:	
  2080                           
  2081                           ;concentration.c: 471:     if(cursor_solid == 1) {
  2082  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  2083  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  2084  07A3  0363               	decf	_cursor_solid,w
  2085  07A4  1D03               	btfss	3,2
  2086  07A5  2FA7               	goto	u2161
  2087  07A6  2FA8               	goto	u2160
  2088  07A7                     u2161:	
  2089  07A7  2FBE               	goto	l351
  2090  07A8                     u2160:	
  2091  07A8                     l3135:	
  2092                           
  2093                           ;concentration.c: 472:         lcd_putch(0x20, gameboard);
  2094  07A8  3005               	movlw	5
  2095  07A9  00B0               	movwf	lcd_putch@port
  2096  07AA  3000               	movlw	0
  2097  07AB  00B1               	movwf	lcd_putch@port+1
  2098  07AC  3020               	movlw	32
  2099  07AD  120A  158A  22E3  120A  118A  	fcall	_lcd_putch
  2100                           
  2101                           ;concentration.c: 473:         lcd_goto(cursor_pos, gameboard);
  2102  07B2  3005               	movlw	5
  2103  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2104  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  2105  07B5  00A8               	movwf	lcd_goto@port
  2106  07B6  3000               	movlw	0
  2107  07B7  00A9               	movwf	lcd_goto@port+1
  2108  07B8  0865               	movf	_cursor_pos,w
  2109  07B9  120A  158A  2351  120A  118A  	fcall	_lcd_goto
  2110  07BE                     l351:	
  2111  07BE  0008               	return
  2112  07BF                     __end_of_update_cursor:	
  2113                           
  2114                           	psect	text3
  2115  0BE7                     __ptext3:	
  2116 ;; *************** function _toggle_cursor *****************
  2117 ;; Defined at:
  2118 ;;		line 477 in file "concentration.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2132 ;;      Params:         0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0
  2135 ;;      Totals:         0       0       0       0       0
  2136 ;;Total ram usage:        0 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:    4
  2139 ;; This function calls:
  2140 ;;		_lcd_goto
  2141 ;;		_lcd_putch
  2142 ;; This function is called by:
  2143 ;;		_update_gameboard_from_input
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _toggle_cursor
  2149  0BE7                     _toggle_cursor:	
  2150  0BE7                     l3093:	
  2151                           ;incstack = 0
  2152                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2153                           
  2154                           
  2155                           ;concentration.c: 478:     if(cursor_solid == 0) {
  2156  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0BE9  0863               	movf	_cursor_solid,w
  2159  0BEA  1D03               	btfss	3,2
  2160  0BEB  2BED               	goto	u2151
  2161  0BEC  2BEE               	goto	u2150
  2162  0BED                     u2151:	
  2163  0BED  2BFD               	goto	l3099
  2164  0BEE                     u2150:	
  2165  0BEE                     l3095:	
  2166                           
  2167                           ;concentration.c: 479:         lcd_putch(0x20, gameboard);
  2168  0BEE  3005               	movlw	5
  2169  0BEF  00B0               	movwf	lcd_putch@port
  2170  0BF0  3000               	movlw	0
  2171  0BF1  00B1               	movwf	lcd_putch@port+1
  2172  0BF2  3020               	movlw	32
  2173  0BF3  120A  158A  22E3  120A  158A  	fcall	_lcd_putch
  2174  0BF8                     l3097:	
  2175                           
  2176                           ;concentration.c: 480:         cursor_solid = 1;
  2177  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0BFA  01E3               	clrf	_cursor_solid
  2180  0BFB  0AE3               	incf	_cursor_solid,f
  2181                           
  2182                           ;concentration.c: 481:     } else {
  2183  0BFC  2C0A               	goto	l3103
  2184  0BFD                     l3099:	
  2185                           
  2186                           ;concentration.c: 482:         lcd_putch(current_char, gameboard);
  2187  0BFD  3005               	movlw	5
  2188  0BFE  00B0               	movwf	lcd_putch@port
  2189  0BFF  3000               	movlw	0
  2190  0C00  00B1               	movwf	lcd_putch@port+1
  2191  0C01  0864               	movf	_current_char,w
  2192  0C02  120A  158A  22E3  120A  158A  	fcall	_lcd_putch
  2193  0C07                     l3101:	
  2194                           
  2195                           ;concentration.c: 483:         cursor_solid = 0;
  2196  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0C09  01E3               	clrf	_cursor_solid
  2199  0C0A                     l3103:	
  2200                           
  2201                           ;concentration.c: 485:     lcd_goto(cursor_pos, gameboard);
  2202  0C0A  3005               	movlw	5
  2203  0C0B  00A8               	movwf	lcd_goto@port
  2204  0C0C  3000               	movlw	0
  2205  0C0D  00A9               	movwf	lcd_goto@port+1
  2206  0C0E  0865               	movf	_cursor_pos,w
  2207  0C0F  120A  158A  2351  120A  158A  	fcall	_lcd_goto
  2208  0C14                     l356:	
  2209  0C14  0008               	return
  2210  0C15                     __end_of_toggle_cursor:	
  2211                           
  2212                           	psect	text4
  2213  037A                     __ptext4:	
  2214 ;; *************** function _check_for_match *****************
  2215 ;; Defined at:
  2216 ;;		line 331 in file "concentration.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  player          1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  player          1   24[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2230 ;;      Params:         0       0       0       0       0
  2231 ;;      Locals:         0       1       0       0       0
  2232 ;;      Temps:          0       2       0       0       0
  2233 ;;      Totals:         0       3       0       0       0
  2234 ;;Total ram usage:        3 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    5
  2237 ;; This function calls:
  2238 ;;		_DelayMs
  2239 ;;		_display_gameboard
  2240 ;;		_display_scoreboard
  2241 ;;		_get_cursor_index
  2242 ;;		_play_tone
  2243 ;;		_turn_on_led
  2244 ;; This function is called by:
  2245 ;;		_update_gameboard_from_input
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _check_for_match
  2251  037A                     _check_for_match:	
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2255                           ;check_for_match@player stored from wreg
  2256  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2257  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2258  037C  00B8               	movwf	check_for_match@player
  2259  037D                     l3035:	
  2260                           
  2261                           ;concentration.c: 332:     if(selected_tile == 0xFF) {
  2262  037D  0A5E               	incf	_selected_tile,w
  2263  037E  1D03               	btfss	3,2
  2264  037F  2B81               	goto	u2111
  2265  0380  2B82               	goto	u2110
  2266  0381                     u2111:	
  2267  0381  2B87               	goto	l3039
  2268  0382                     u2110:	
  2269  0382                     l3037:	
  2270                           
  2271                           ;concentration.c: 333:         selected_tile = cursor_pos;
  2272  0382  0865               	movf	_cursor_pos,w
  2273  0383  00B6               	movwf	??_check_for_match
  2274  0384  0836               	movf	??_check_for_match,w
  2275  0385  00DE               	movwf	_selected_tile
  2276                           
  2277                           ;concentration.c: 334:     } else {
  2278  0386  2C88               	goto	l295
  2279  0387                     l3039:	
  2280                           
  2281                           ;concentration.c: 335:         if(board[get_cursor_index(selected_tile)] == board[get_cu
      +                          rsor_index(cursor_pos)]) {
  2282  0387  0865               	movf	_cursor_pos,w
  2283  0388  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  2284  038D  3EC0               	addlw	(low (_board| 0))& (0+255)
  2285  038E  0084               	movwf	4
  2286  038F  1383               	bcf	3,7	;select IRP bank1
  2287  0390  0800               	movf	0,w
  2288  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0393  00B6               	movwf	??_check_for_match
  2291  0394  085E               	movf	_selected_tile,w
  2292  0395  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  2293  039A  3EC0               	addlw	(low (_board| 0))& (0+255)
  2294  039B  0084               	movwf	4
  2295  039C  1383               	bcf	3,7	;select IRP bank1
  2296  039D  0800               	movf	0,w
  2297  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2298  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2299  03A0  0636               	xorwf	??_check_for_match,w
  2300  03A1  1D03               	skipz
  2301  03A2  2BA4               	goto	u2121
  2302  03A3  2BA5               	goto	u2120
  2303  03A4                     u2121:	
  2304  03A4  2C13               	goto	l3067
  2305  03A5                     u2120:	
  2306  03A5                     l3041:	
  2307                           
  2308                           ;concentration.c: 336:             if(player == 0) {
  2309  03A5  0838               	movf	check_for_match@player,w
  2310  03A6  1D03               	btfss	3,2
  2311  03A7  2BA9               	goto	u2131
  2312  03A8  2BAA               	goto	u2130
  2313  03A9                     u2131:	
  2314  03A9  2BAF               	goto	l3045
  2315  03AA                     u2130:	
  2316  03AA                     l3043:	
  2317                           
  2318                           ;concentration.c: 337:                 p1_score++;
  2319  03AA  3001               	movlw	1
  2320  03AB  00B6               	movwf	??_check_for_match
  2321  03AC  0836               	movf	??_check_for_match,w
  2322  03AD  07E0               	addwf	_p1_score,f
  2323                           
  2324                           ;concentration.c: 338:             } else {
  2325  03AE  2BB3               	goto	l3047
  2326  03AF                     l3045:	
  2327                           
  2328                           ;concentration.c: 339:                 p2_score++;
  2329  03AF  3001               	movlw	1
  2330  03B0  00B6               	movwf	??_check_for_match
  2331  03B1  0836               	movf	??_check_for_match,w
  2332  03B2  07DF               	addwf	_p2_score,f
  2333  03B3                     l3047:	
  2334                           
  2335                           ;concentration.c: 341:             turn_on_led(1);
  2336  03B3  3001               	movlw	1
  2337  03B4  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  2338  03B9                     l3049:	
  2339                           
  2340                           ;concentration.c: 342:             play_tone(1689, 15);
  2341  03B9  3099               	movlw	153
  2342  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2343  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2344  03BC  00A0               	movwf	play_tone@tone_period
  2345  03BD  3006               	movlw	6
  2346  03BE  00A1               	movwf	play_tone@tone_period+1
  2347  03BF  300F               	movlw	15
  2348  03C0  00B6               	movwf	??_check_for_match
  2349  03C1  0836               	movf	??_check_for_match,w
  2350  03C2  00A2               	movwf	play_tone@duration_8ms
  2351  03C3  120A  158A  236F  120A  118A  	fcall	_play_tone
  2352  03C8                     l3051:	
  2353                           
  2354                           ;concentration.c: 343:             RC6 = 0;
  2355  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2356  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2357  03CA  1307               	bcf	7,6	;volatile
  2358  03CB                     l3053:	
  2359                           
  2360                           ;concentration.c: 344:             play_tone(1420, 5);
  2361  03CB  308C               	movlw	140
  2362  03CC  00A0               	movwf	play_tone@tone_period
  2363  03CD  3005               	movlw	5
  2364  03CE  00A1               	movwf	play_tone@tone_period+1
  2365  03CF  3005               	movlw	5
  2366  03D0  00B6               	movwf	??_check_for_match
  2367  03D1  0836               	movf	??_check_for_match,w
  2368  03D2  00A2               	movwf	play_tone@duration_8ms
  2369  03D3  120A  158A  236F  120A  118A  	fcall	_play_tone
  2370  03D8                     l3055:	
  2371                           
  2372                           ;concentration.c: 345:             turn_on_led(1);
  2373  03D8  3001               	movlw	1
  2374  03D9  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  2375  03DE                     l3057:	
  2376                           
  2377                           ;concentration.c: 346:             play_tone(1689, 15);
  2378  03DE  3099               	movlw	153
  2379  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2380  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2381  03E1  00A0               	movwf	play_tone@tone_period
  2382  03E2  3006               	movlw	6
  2383  03E3  00A1               	movwf	play_tone@tone_period+1
  2384  03E4  300F               	movlw	15
  2385  03E5  00B6               	movwf	??_check_for_match
  2386  03E6  0836               	movf	??_check_for_match,w
  2387  03E7  00A2               	movwf	play_tone@duration_8ms
  2388  03E8  120A  158A  236F  120A  118A  	fcall	_play_tone
  2389  03ED                     l3059:	
  2390                           
  2391                           ;concentration.c: 347:             RC6 = 0;
  2392  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2393  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2394  03EF  1307               	bcf	7,6	;volatile
  2395  03F0                     l3061:	
  2396                           
  2397                           ;concentration.c: 348:             play_tone(1420, 5);
  2398  03F0  308C               	movlw	140
  2399  03F1  00A0               	movwf	play_tone@tone_period
  2400  03F2  3005               	movlw	5
  2401  03F3  00A1               	movwf	play_tone@tone_period+1
  2402  03F4  3005               	movlw	5
  2403  03F5  00B6               	movwf	??_check_for_match
  2404  03F6  0836               	movf	??_check_for_match,w
  2405  03F7  00A2               	movwf	play_tone@duration_8ms
  2406  03F8  120A  158A  236F  120A  118A  	fcall	_play_tone
  2407                           
  2408                           ;concentration.c: 350:             if((p1_score+p2_score)==2) {
  2409  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2410  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2411  03FF  0860               	movf	_p1_score,w
  2412  0400  075F               	addwf	_p2_score,w
  2413  0401  00B6               	movwf	??_check_for_match
  2414  0402  01B7               	clrf	??_check_for_match+1
  2415  0403  0DB7               	rlf	??_check_for_match+1,f
  2416  0404  3002               	movlw	2
  2417  0405  0636               	xorwf	??_check_for_match,w
  2418  0406  0437               	iorwf	??_check_for_match+1,w
  2419  0407  1D03               	btfss	3,2
  2420  0408  2C0A               	goto	u2141
  2421  0409  2C0B               	goto	u2140
  2422  040A                     u2141:	
  2423  040A  2C0D               	goto	l3065
  2424  040B                     u2140:	
  2425  040B                     l3063:	
  2426                           
  2427                           ;concentration.c: 351:                 game_over = 1;
  2428  040B  01DB               	clrf	_game_over
  2429  040C  0ADB               	incf	_game_over,f
  2430  040D                     l3065:	
  2431                           
  2432                           ;concentration.c: 353:             display_scoreboard();
  2433  040D  120A  118A  25CD  120A  118A  	fcall	_display_scoreboard
  2434                           
  2435                           ;concentration.c: 355:         } else {
  2436  0412  2C73               	goto	l3085
  2437  0413                     l3067:	
  2438                           
  2439                           ;concentration.c: 356:             display_gameboard();
  2440  0413  120A  158A  245A  120A  118A  	fcall	_display_gameboard
  2441                           
  2442                           ;concentration.c: 357:             turn_on_led(0);
  2443  0418  3000               	movlw	0
  2444  0419  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  2445  041E                     l3069:	
  2446                           
  2447                           ;concentration.c: 358:             play_tone(36075, 30);
  2448  041E  30EB               	movlw	235
  2449  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0421  00A0               	movwf	play_tone@tone_period
  2452  0422  308C               	movlw	140
  2453  0423  00A1               	movwf	play_tone@tone_period+1
  2454  0424  301E               	movlw	30
  2455  0425  00B6               	movwf	??_check_for_match
  2456  0426  0836               	movf	??_check_for_match,w
  2457  0427  00A2               	movwf	play_tone@duration_8ms
  2458  0428  120A  158A  236F  120A  118A  	fcall	_play_tone
  2459  042D                     l3071:	
  2460                           
  2461                           ;concentration.c: 359:             RC5 = 0;
  2462  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2463  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2464  042F  1287               	bcf	7,5	;volatile
  2465  0430                     l3073:	
  2466                           
  2467                           ;concentration.c: 360:             DelayMs(100);
  2468  0430  3064               	movlw	100
  2469  0431  00A0               	movwf	DelayMs@millis
  2470  0432  3000               	movlw	0
  2471  0433  00A1               	movwf	DelayMs@millis+1
  2472  0434  120A  158A  231E  120A  118A  	fcall	_DelayMs
  2473                           
  2474                           ;concentration.c: 361:             turn_on_led(0);
  2475  0439  3000               	movlw	0
  2476  043A  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  2477  043F                     l3075:	
  2478                           
  2479                           ;concentration.c: 362:             play_tone(36075, 30);
  2480  043F  30EB               	movlw	235
  2481  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0442  00A0               	movwf	play_tone@tone_period
  2484  0443  308C               	movlw	140
  2485  0444  00A1               	movwf	play_tone@tone_period+1
  2486  0445  301E               	movlw	30
  2487  0446  00B6               	movwf	??_check_for_match
  2488  0447  0836               	movf	??_check_for_match,w
  2489  0448  00A2               	movwf	play_tone@duration_8ms
  2490  0449  120A  158A  236F  120A  118A  	fcall	_play_tone
  2491  044E                     l3077:	
  2492                           
  2493                           ;concentration.c: 363:             RC5 = 0;
  2494  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2495  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0450  1287               	bcf	7,5	;volatile
  2497  0451                     l3079:	
  2498                           
  2499                           ;concentration.c: 364:             visible[get_cursor_index(selected_tile)] = 0xFF;
  2500  0451  30FF               	movlw	255
  2501  0452  00B6               	movwf	??_check_for_match
  2502  0453  085E               	movf	_selected_tile,w
  2503  0454  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  2504  0459  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2505  045A  0084               	movwf	4
  2506  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2507  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2508  045D  0836               	movf	??_check_for_match,w
  2509  045E  1383               	bcf	3,7	;select IRP bank1
  2510  045F  0080               	movwf	0
  2511  0460                     l3081:	
  2512                           
  2513                           ;concentration.c: 365:             visible[get_cursor_index(cursor_pos)] = 0xFF;
  2514  0460  30FF               	movlw	255
  2515  0461  00B6               	movwf	??_check_for_match
  2516  0462  0865               	movf	_cursor_pos,w
  2517  0463  120A  118A  27F3  120A  118A  	fcall	_get_cursor_index
  2518  0468  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2519  0469  0084               	movwf	4
  2520  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2521  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2522  046C  0836               	movf	??_check_for_match,w
  2523  046D  1383               	bcf	3,7	;select IRP bank1
  2524  046E  0080               	movwf	0
  2525  046F                     l3083:	
  2526                           
  2527                           ;concentration.c: 366:             current_char = 0xFF;
  2528  046F  30FF               	movlw	255
  2529  0470  00B6               	movwf	??_check_for_match
  2530  0471  0836               	movf	??_check_for_match,w
  2531  0472  00E4               	movwf	_current_char
  2532  0473                     l3085:	
  2533                           
  2534                           ;concentration.c: 368:         selected_tile = 0xFF;
  2535  0473  30FF               	movlw	255
  2536  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0476  00B6               	movwf	??_check_for_match
  2539  0477  0836               	movf	??_check_for_match,w
  2540  0478  00DE               	movwf	_selected_tile
  2541  0479                     l3087:	
  2542                           
  2543                           ;concentration.c: 369:         current_player ^= 0x01;
  2544  0479  3001               	movlw	1
  2545  047A  00B6               	movwf	??_check_for_match
  2546  047B  0836               	movf	??_check_for_match,w
  2547  047C  06DC               	xorwf	_current_player,f
  2548  047D                     l3089:	
  2549                           
  2550                           ;concentration.c: 370:         joystick_pressed = 1;
  2551  047D  01DD               	clrf	_joystick_pressed
  2552  047E  0ADD               	incf	_joystick_pressed,f
  2553  047F                     l3091:	
  2554                           
  2555                           ;concentration.c: 371:         DelayMs(100);
  2556  047F  3064               	movlw	100
  2557  0480  00A0               	movwf	DelayMs@millis
  2558  0481  3000               	movlw	0
  2559  0482  00A1               	movwf	DelayMs@millis+1
  2560  0483  120A  158A  231E  120A  118A  	fcall	_DelayMs
  2561  0488                     l295:	
  2562  0488  0008               	return
  2563  0489                     __end_of_check_for_match:	
  2564                           
  2565                           	psect	text5
  2566  0F76                     __ptext5:	
  2567 ;; *************** function _startup *****************
  2568 ;; Defined at:
  2569 ;;		line 224 in file "concentration.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    5
  2590 ;; This function calls:
  2591 ;;		_DelayMs
  2592 ;;		_display_gameboard
  2593 ;;		_display_scoreboard
  2594 ;;		_lcd_clear
  2595 ;;		_lcd_goto
  2596 ;;		_lcd_puts
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _startup
  2604  0F76                     _startup:	
  2605  0F76                     l3235:	
  2606                           ;incstack = 0
  2607                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2608                           
  2609                           
  2610                           ;concentration.c: 225:     game_over = 0;
  2611  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0F78  01DB               	clrf	_game_over
  2614  0F79                     l3237:	
  2615                           
  2616                           ;concentration.c: 226:     lcd_clear(gameboard);
  2617  0F79  3005               	movlw	5
  2618  0F7A  00A8               	movwf	lcd_clear@port
  2619  0F7B  3000               	movlw	0
  2620  0F7C  00A9               	movwf	lcd_clear@port+1
  2621  0F7D  120A  158A  2337  120A  158A  	fcall	_lcd_clear
  2622  0F82                     l3239:	
  2623                           
  2624                           ;concentration.c: 227:     lcd_clear(scoreboard);
  2625  0F82  3008               	movlw	8
  2626  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0F85  00A8               	movwf	lcd_clear@port
  2629  0F86  3000               	movlw	0
  2630  0F87  00A9               	movwf	lcd_clear@port+1
  2631  0F88  120A  158A  2337  120A  158A  	fcall	_lcd_clear
  2632  0F8D                     l3241:	
  2633                           
  2634                           ;concentration.c: 228:     lcd_puts(" Concentration!", scoreboard);
  2635  0F8D  3008               	movlw	8
  2636  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0F90  00A8               	movwf	lcd_puts@port
  2639  0F91  3000               	movlw	0
  2640  0F92  00A9               	movwf	lcd_puts@port+1
  2641  0F93  3052               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2642  0F94  120A  158A  23BC  120A  158A  	fcall	_lcd_puts
  2643  0F99                     l3243:	
  2644                           
  2645                           ;concentration.c: 229:     lcd_puts("Press the button", gameboard);
  2646  0F99  3005               	movlw	5
  2647  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0F9C  00A8               	movwf	lcd_puts@port
  2650  0F9D  3000               	movlw	0
  2651  0F9E  00A9               	movwf	lcd_puts@port+1
  2652  0F9F  3041               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2653  0FA0  120A  158A  23BC  120A  158A  	fcall	_lcd_puts
  2654  0FA5                     l3245:	
  2655                           
  2656                           ;concentration.c: 230:     lcd_goto(0x40, gameboard);
  2657  0FA5  3005               	movlw	5
  2658  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0FA8  00A8               	movwf	lcd_goto@port
  2661  0FA9  3000               	movlw	0
  2662  0FAA  00A9               	movwf	lcd_goto@port+1
  2663  0FAB  3040               	movlw	64
  2664  0FAC  120A  158A  2351  120A  158A  	fcall	_lcd_goto
  2665  0FB1                     l3247:	
  2666                           
  2667                           ;concentration.c: 231:     lcd_puts("    to start", gameboard);
  2668  0FB1  3005               	movlw	5
  2669  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0FB4  00A8               	movwf	lcd_puts@port
  2672  0FB5  3000               	movlw	0
  2673  0FB6  00A9               	movwf	lcd_puts@port+1
  2674  0FB7  3097               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2675  0FB8  120A  158A  23BC  120A  158A  	fcall	_lcd_puts
  2676  0FBD                     l233:	
  2677                           ;concentration.c: 232:     while(RB5);
  2678                           
  2679  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0FBF  1A86               	btfsc	6,5	;volatile
  2682  0FC0  2FC2               	goto	u2181
  2683  0FC1  2FC3               	goto	u2180
  2684  0FC2                     u2181:	
  2685  0FC2  2FBD               	goto	l233
  2686  0FC3                     u2180:	
  2687  0FC3                     l3249:	
  2688                           
  2689                           ;concentration.c: 233:     DelayMs(8);
  2690  0FC3  3008               	movlw	8
  2691  0FC4  00A0               	movwf	DelayMs@millis
  2692  0FC5  3000               	movlw	0
  2693  0FC6  00A1               	movwf	DelayMs@millis+1
  2694  0FC7  120A  158A  231E  120A  158A  	fcall	_DelayMs
  2695  0FCC                     l236:	
  2696                           ;concentration.c: 234:     while(!RB5);
  2697                           
  2698  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0FCE  1E86               	btfss	6,5	;volatile
  2701  0FCF  2FD1               	goto	u2191
  2702  0FD0  2FD2               	goto	u2190
  2703  0FD1                     u2191:	
  2704  0FD1  2FCC               	goto	l236
  2705  0FD2                     u2190:	
  2706  0FD2                     l3251:	
  2707                           
  2708                           ;concentration.c: 235:     DelayMs(8);
  2709  0FD2  3008               	movlw	8
  2710  0FD3  00A0               	movwf	DelayMs@millis
  2711  0FD4  3000               	movlw	0
  2712  0FD5  00A1               	movwf	DelayMs@millis+1
  2713  0FD6  120A  158A  231E  120A  158A  	fcall	_DelayMs
  2714  0FDB                     l3253:	
  2715                           
  2716                           ;concentration.c: 236:     lcd_clear(gameboard);
  2717  0FDB  3005               	movlw	5
  2718  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0FDE  00A8               	movwf	lcd_clear@port
  2721  0FDF  3000               	movlw	0
  2722  0FE0  00A9               	movwf	lcd_clear@port+1
  2723  0FE1  120A  158A  2337  120A  158A  	fcall	_lcd_clear
  2724  0FE6                     l3255:	
  2725                           
  2726                           ;concentration.c: 237:     lcd_clear(scoreboard);
  2727  0FE6  3008               	movlw	8
  2728  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0FE9  00A8               	movwf	lcd_clear@port
  2731  0FEA  3000               	movlw	0
  2732  0FEB  00A9               	movwf	lcd_clear@port+1
  2733  0FEC  120A  158A  2337  120A  158A  	fcall	_lcd_clear
  2734  0FF1                     l3257:	
  2735                           
  2736                           ;concentration.c: 238:     p1_score = 0;
  2737  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0FF3  01E0               	clrf	_p1_score
  2740  0FF4                     l3259:	
  2741                           
  2742                           ;concentration.c: 239:     p2_score = 0;
  2743  0FF4  01DF               	clrf	_p2_score
  2744  0FF5                     l3261:	
  2745                           
  2746                           ;concentration.c: 240:     display_scoreboard();
  2747  0FF5  120A  118A  25CD  120A  158A  	fcall	_display_scoreboard
  2748  0FFA                     l3263:	
  2749                           
  2750                           ;concentration.c: 241:     display_gameboard();
  2751  0FFA  120A  158A  245A  120A  158A  	fcall	_display_gameboard
  2752  0FFF                     l239:	
  2753  0FFF  0008               	return
  2754  1000                     __end_of_startup:	
  2755                           
  2756                           	psect	text6
  2757  05CD                     __ptext6:	
  2758 ;; *************** function _display_scoreboard *****************
  2759 ;; Defined at:
  2760 ;;		line 244 in file "concentration.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0
  2776 ;;      Temps:          0       2       0       0       0
  2777 ;;      Totals:         0       2       0       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    4
  2781 ;; This function calls:
  2782 ;;		___awdiv
  2783 ;;		___awmod
  2784 ;;		_lcd_goto
  2785 ;;		_lcd_putch
  2786 ;;		_lcd_puts
  2787 ;; This function is called by:
  2788 ;;		_startup
  2789 ;;		_check_for_match
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _display_scoreboard
  2795  05CD                     _display_scoreboard:	
  2796  05CD                     l2883:	
  2797                           ;incstack = 0
  2798                           ; Regs used in _display_scoreboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2799                           
  2800                           
  2801                           ;concentration.c: 245:     lcd_puts("     Score:", scoreboard);
  2802  05CD  3008               	movlw	8
  2803  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2804  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2805  05D0  00A8               	movwf	lcd_puts@port
  2806  05D1  3000               	movlw	0
  2807  05D2  00A9               	movwf	lcd_puts@port+1
  2808  05D3  30A4               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2809  05D4  120A  158A  23BC  120A  118A  	fcall	_lcd_puts
  2810                           
  2811                           ;concentration.c: 246:     lcd_goto(0x40, scoreboard);
  2812  05D9  3008               	movlw	8
  2813  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2814  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2815  05DC  00A8               	movwf	lcd_goto@port
  2816  05DD  3000               	movlw	0
  2817  05DE  00A9               	movwf	lcd_goto@port+1
  2818  05DF  3040               	movlw	64
  2819  05E0  120A  158A  2351  120A  118A  	fcall	_lcd_goto
  2820                           
  2821                           ;concentration.c: 247:     lcd_puts(" P1: ", scoreboard);
  2822  05E5  3008               	movlw	8
  2823  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2824  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2825  05E8  00A8               	movwf	lcd_puts@port
  2826  05E9  3000               	movlw	0
  2827  05EA  00A9               	movwf	lcd_puts@port+1
  2828  05EB  30C2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2829  05EC  120A  158A  23BC  120A  118A  	fcall	_lcd_puts
  2830                           
  2831                           ;concentration.c: 248:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  2832  05F1  3008               	movlw	8
  2833  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2834  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2835  05F4  00B0               	movwf	lcd_putch@port
  2836  05F5  3000               	movlw	0
  2837  05F6  00B1               	movwf	lcd_putch@port+1
  2838  05F7  300A               	movlw	10
  2839  05F8  00A7               	movwf	___awdiv@divisor
  2840  05F9  3000               	movlw	0
  2841  05FA  00A8               	movwf	___awdiv@divisor+1
  2842  05FB  0860               	movf	_p1_score,w
  2843  05FC  00B4               	movwf	??_display_scoreboard
  2844  05FD  01B5               	clrf	??_display_scoreboard+1
  2845  05FE  0834               	movf	??_display_scoreboard,w
  2846  05FF  00A2               	movwf	___awmod@dividend
  2847  0600  0835               	movf	??_display_scoreboard+1,w
  2848  0601  00A3               	movwf	___awmod@dividend+1
  2849  0602  3064               	movlw	100
  2850  0603  00A0               	movwf	___awmod@divisor
  2851  0604  3000               	movlw	0
  2852  0605  00A1               	movwf	___awmod@divisor+1
  2853  0606  120A  158A  25E0  120A  118A  	fcall	___awmod
  2854  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2855  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2856  060D  0821               	movf	?___awmod+1,w
  2857  060E  00AA               	movwf	___awdiv@dividend+1
  2858  060F  0820               	movf	?___awmod,w
  2859  0610  00A9               	movwf	___awdiv@dividend
  2860  0611  120A  118A  2489  120A  118A  	fcall	___awdiv
  2861  0616  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0617  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0618  0827               	movf	?___awdiv,w
  2864  0619  3E30               	addlw	48
  2865  061A  120A  158A  22E3  120A  118A  	fcall	_lcd_putch
  2866                           
  2867                           ;concentration.c: 249:     lcd_putch((p1_score%10)+0x30, scoreboard);
  2868  061F  3008               	movlw	8
  2869  0620  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0621  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0622  00B0               	movwf	lcd_putch@port
  2872  0623  3000               	movlw	0
  2873  0624  00B1               	movwf	lcd_putch@port+1
  2874  0625  300A               	movlw	10
  2875  0626  00A0               	movwf	___awmod@divisor
  2876  0627  3000               	movlw	0
  2877  0628  00A1               	movwf	___awmod@divisor+1
  2878  0629  0860               	movf	_p1_score,w
  2879  062A  00B4               	movwf	??_display_scoreboard
  2880  062B  01B5               	clrf	??_display_scoreboard+1
  2881  062C  0834               	movf	??_display_scoreboard,w
  2882  062D  00A2               	movwf	___awmod@dividend
  2883  062E  0835               	movf	??_display_scoreboard+1,w
  2884  062F  00A3               	movwf	___awmod@dividend+1
  2885  0630  120A  158A  25E0  120A  118A  	fcall	___awmod
  2886  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0637  0820               	movf	?___awmod,w
  2889  0638  3E30               	addlw	48
  2890  0639  120A  158A  22E3  120A  118A  	fcall	_lcd_putch
  2891                           
  2892                           ;concentration.c: 250:     lcd_puts("  P2: ", scoreboard);
  2893  063E  3008               	movlw	8
  2894  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0641  00A8               	movwf	lcd_puts@port
  2897  0642  3000               	movlw	0
  2898  0643  00A9               	movwf	lcd_puts@port+1
  2899  0644  30BB               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2900  0645  120A  158A  23BC  120A  118A  	fcall	_lcd_puts
  2901                           
  2902                           ;concentration.c: 251:     lcd_putch(((p2_score%100)/10)+0x30, scoreboard);
  2903  064A  3008               	movlw	8
  2904  064B  1283               	bcf	3,5	;RP0=0, select bank0
  2905  064C  1303               	bcf	3,6	;RP1=0, select bank0
  2906  064D  00B0               	movwf	lcd_putch@port
  2907  064E  3000               	movlw	0
  2908  064F  00B1               	movwf	lcd_putch@port+1
  2909  0650  300A               	movlw	10
  2910  0651  00A7               	movwf	___awdiv@divisor
  2911  0652  3000               	movlw	0
  2912  0653  00A8               	movwf	___awdiv@divisor+1
  2913  0654  085F               	movf	_p2_score,w
  2914  0655  00B4               	movwf	??_display_scoreboard
  2915  0656  01B5               	clrf	??_display_scoreboard+1
  2916  0657  0834               	movf	??_display_scoreboard,w
  2917  0658  00A2               	movwf	___awmod@dividend
  2918  0659  0835               	movf	??_display_scoreboard+1,w
  2919  065A  00A3               	movwf	___awmod@dividend+1
  2920  065B  3064               	movlw	100
  2921  065C  00A0               	movwf	___awmod@divisor
  2922  065D  3000               	movlw	0
  2923  065E  00A1               	movwf	___awmod@divisor+1
  2924  065F  120A  158A  25E0  120A  118A  	fcall	___awmod
  2925  0664  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0665  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0666  0821               	movf	?___awmod+1,w
  2928  0667  00AA               	movwf	___awdiv@dividend+1
  2929  0668  0820               	movf	?___awmod,w
  2930  0669  00A9               	movwf	___awdiv@dividend
  2931  066A  120A  118A  2489  120A  118A  	fcall	___awdiv
  2932  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0671  0827               	movf	?___awdiv,w
  2935  0672  3E30               	addlw	48
  2936  0673  120A  158A  22E3  120A  118A  	fcall	_lcd_putch
  2937                           
  2938                           ;concentration.c: 252:     lcd_putch((p2_score%10)+0x30, scoreboard);
  2939  0678  3008               	movlw	8
  2940  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2941  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2942  067B  00B0               	movwf	lcd_putch@port
  2943  067C  3000               	movlw	0
  2944  067D  00B1               	movwf	lcd_putch@port+1
  2945  067E  300A               	movlw	10
  2946  067F  00A0               	movwf	___awmod@divisor
  2947  0680  3000               	movlw	0
  2948  0681  00A1               	movwf	___awmod@divisor+1
  2949  0682  085F               	movf	_p2_score,w
  2950  0683  00B4               	movwf	??_display_scoreboard
  2951  0684  01B5               	clrf	??_display_scoreboard+1
  2952  0685  0834               	movf	??_display_scoreboard,w
  2953  0686  00A2               	movwf	___awmod@dividend
  2954  0687  0835               	movf	??_display_scoreboard+1,w
  2955  0688  00A3               	movwf	___awmod@dividend+1
  2956  0689  120A  158A  25E0  120A  118A  	fcall	___awmod
  2957  068E  1283               	bcf	3,5	;RP0=0, select bank0
  2958  068F  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0690  0820               	movf	?___awmod,w
  2960  0691  3E30               	addlw	48
  2961  0692  120A  158A  22E3  120A  118A  	fcall	_lcd_putch
  2962  0697                     l242:	
  2963  0697  0008               	return
  2964  0698                     __end_of_display_scoreboard:	
  2965                           
  2966                           	psect	text7
  2967  0C5A                     __ptext7:	
  2968 ;; *************** function _display_gameboard *****************
  2969 ;; Defined at:
  2970 ;;		line 255 in file "concentration.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  i               1   21[BANK0 ] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       0       0       0       0
  2985 ;;      Locals:         0       1       0       0       0
  2986 ;;      Temps:          0       1       0       0       0
  2987 ;;      Totals:         0       2       0       0       0
  2988 ;;Total ram usage:        2 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    4
  2991 ;; This function calls:
  2992 ;;		_lcd_clear
  2993 ;;		_lcd_goto
  2994 ;;		_lcd_putch
  2995 ;; This function is called by:
  2996 ;;		_startup
  2997 ;;		_check_for_match
  2998 ;;		_update_gameboard_from_input
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _display_gameboard
  3004  0C5A                     _display_gameboard:	
  3005  0C5A                     l2885:	
  3006                           ;incstack = 0
  3007                           ; Regs used in _display_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3008                           
  3009                           
  3010                           ;concentration.c: 256:     lcd_clear(gameboard);
  3011  0C5A  3005               	movlw	5
  3012  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0C5D  00A8               	movwf	lcd_clear@port
  3015  0C5E  3000               	movlw	0
  3016  0C5F  00A9               	movwf	lcd_clear@port+1
  3017  0C60  120A  158A  2337  120A  158A  	fcall	_lcd_clear
  3018  0C65                     l2887:	
  3019                           
  3020                           ;concentration.c: 257:     char i;;concentration.c: 258:     for(i=0;i<32;i++) {
  3021  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0C67  01B5               	clrf	display_gameboard@i
  3024  0C68                     l2893:	
  3025                           
  3026                           ;concentration.c: 259:         if(i == 16) {
  3027  0C68  3010               	movlw	16
  3028  0C69  0635               	xorwf	display_gameboard@i,w
  3029  0C6A  1D03               	btfss	3,2
  3030  0C6B  2C6D               	goto	u1971
  3031  0C6C  2C6E               	goto	u1970
  3032  0C6D                     u1971:	
  3033  0C6D  2C78               	goto	l247
  3034  0C6E                     u1970:	
  3035  0C6E                     l2895:	
  3036                           
  3037                           ;concentration.c: 260:             lcd_goto(0x40, gameboard);
  3038  0C6E  3005               	movlw	5
  3039  0C6F  00A8               	movwf	lcd_goto@port
  3040  0C70  3000               	movlw	0
  3041  0C71  00A9               	movwf	lcd_goto@port+1
  3042  0C72  3040               	movlw	64
  3043  0C73  120A  158A  2351  120A  158A  	fcall	_lcd_goto
  3044  0C78                     l247:	
  3045                           ;concentration.c: 261:         }
  3046                           
  3047                           
  3048                           ;concentration.c: 262:         lcd_putch(visible[i], gameboard);
  3049  0C78  3005               	movlw	5
  3050  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0C7B  00B0               	movwf	lcd_putch@port
  3053  0C7C  3000               	movlw	0
  3054  0C7D  00B1               	movwf	lcd_putch@port+1
  3055  0C7E  0835               	movf	display_gameboard@i,w
  3056  0C7F  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3057  0C80  0084               	movwf	4
  3058  0C81  1383               	bcf	3,7	;select IRP bank1
  3059  0C82  0800               	movf	0,w
  3060  0C83  120A  158A  22E3  120A  158A  	fcall	_lcd_putch
  3061  0C88                     l2897:	
  3062                           
  3063                           ;concentration.c: 263:     }
  3064  0C88  3001               	movlw	1
  3065  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0C8B  00B4               	movwf	??_display_gameboard
  3068  0C8C  0834               	movf	??_display_gameboard,w
  3069  0C8D  07B5               	addwf	display_gameboard@i,f
  3070  0C8E                     l2899:	
  3071  0C8E  3020               	movlw	32
  3072  0C8F  0235               	subwf	display_gameboard@i,w
  3073  0C90  1C03               	skipc
  3074  0C91  2C93               	goto	u1981
  3075  0C92  2C94               	goto	u1980
  3076  0C93                     u1981:	
  3077  0C93  2C68               	goto	l2893
  3078  0C94                     u1980:	
  3079  0C94                     l2901:	
  3080                           
  3081                           ;concentration.c: 264:     lcd_goto(cursor_pos, gameboard);
  3082  0C94  3005               	movlw	5
  3083  0C95  00A8               	movwf	lcd_goto@port
  3084  0C96  3000               	movlw	0
  3085  0C97  00A9               	movwf	lcd_goto@port+1
  3086  0C98  0865               	movf	_cursor_pos,w
  3087  0C99  120A  158A  2351  120A  158A  	fcall	_lcd_goto
  3088  0C9E                     l248:	
  3089  0C9E  0008               	return
  3090  0C9F                     __end_of_display_gameboard:	
  3091                           
  3092                           	psect	text8
  3093  0AE3                     __ptext8:	
  3094 ;; *************** function _lcd_putch *****************
  3095 ;; Defined at:
  3096 ;;		line 136 in file "lcd4bits.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  character       1    wreg     unsigned char 
  3099 ;;  port            2   16[BANK0 ] PTR unsigned char 
  3100 ;;		 -> PORTD(1), PORTA(1), 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  character       1   19[BANK0 ] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       2       0       0       0
  3113 ;;      Locals:         0       1       0       0       0
  3114 ;;      Temps:          0       1       0       0       0
  3115 ;;      Totals:         0       4       0       0       0
  3116 ;;Total ram usage:        4 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    3
  3119 ;; This function calls:
  3120 ;;		_lcd_write
  3121 ;; This function is called by:
  3122 ;;		_display_scoreboard
  3123 ;;		_display_gameboard
  3124 ;;		_update_cursor
  3125 ;;		_toggle_cursor
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _lcd_putch
  3131  0AE3                     _lcd_putch:	
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3135                           ;lcd_putch@character stored from wreg
  3136  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0AE5  00B3               	movwf	lcd_putch@character
  3139  0AE6                     l2765:	
  3140                           
  3141                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  3142  0AE6  0833               	movf	lcd_putch@character,w
  3143  0AE7  00B2               	movwf	??_lcd_putch
  3144  0AE8  0832               	movf	??_lcd_putch,w
  3145  0AE9  00A2               	movwf	lcd_write@CmdChar
  3146  0AEA  0830               	movf	lcd_putch@port,w
  3147  0AEB  00A3               	movwf	lcd_write@port
  3148  0AEC  0831               	movf	lcd_putch@port+1,w
  3149  0AED  00A4               	movwf	lcd_write@port+1
  3150  0AEE  3010               	movlw	16
  3151  0AEF  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  3152  0AF4                     l432:	
  3153  0AF4  0008               	return
  3154  0AF5                     __end_of_lcd_putch:	
  3155                           
  3156                           	psect	text9
  3157  0D8E                     __ptext9:	
  3158 ;; *************** function _lcd_init *****************
  3159 ;; Defined at:
  3160 ;;		line 155 in file "lcd4bits.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  port            2   10[BANK0 ] PTR unsigned char 
  3163 ;;		 -> PORTD(1), PORTA(1), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         0       2       0       0       0
  3176 ;;      Locals:         0       0       0       0       0
  3177 ;;      Temps:          0       1       0       0       0
  3178 ;;      Totals:         0       3       0       0       0
  3179 ;;Total ram usage:        3 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    4
  3182 ;; This function calls:
  3183 ;;		_DelayMs
  3184 ;;		_lcd_clear
  3185 ;;		_lcd_write
  3186 ;;		_tmr0_init
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function _lcd_init
  3194  0D8E                     _lcd_init:	
  3195  0D8E                     l3153:	
  3196                           ;incstack = 0
  3197                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3198                           
  3199                           
  3200                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  3201  0D8E  120A  158A  22BD  120A  158A  	fcall	_tmr0_init
  3202  0D93                     l3155:	
  3203                           
  3204                           ;lcd4bits.c: 158:     *port = 0;
  3205  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0D95  082A               	movf	lcd_init@port,w
  3208  0D96  0084               	movwf	4
  3209  0D97  1783               	bsf	3,7
  3210  0D98  1C2B               	btfss	lcd_init@port+1,0
  3211  0D99  1383               	bcf	3,7
  3212  0D9A  0180               	clrf	0
  3213  0D9B                     l3157:	
  3214                           
  3215                           ;lcd4bits.c: 159:     DelayMs(15);
  3216  0D9B  300F               	movlw	15
  3217  0D9C  00A0               	movwf	DelayMs@millis
  3218  0D9D  3000               	movlw	0
  3219  0D9E  00A1               	movwf	DelayMs@millis+1
  3220  0D9F  120A  158A  231E  120A  158A  	fcall	_DelayMs
  3221  0DA4                     l3159:	
  3222                           
  3223                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  3224  0DA4  3028               	movlw	40
  3225  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0DA7  00AC               	movwf	??_lcd_init
  3228  0DA8  082C               	movf	??_lcd_init,w
  3229  0DA9  00A2               	movwf	lcd_write@CmdChar
  3230  0DAA  082A               	movf	lcd_init@port,w
  3231  0DAB  00A3               	movwf	lcd_write@port
  3232  0DAC  082B               	movf	lcd_init@port+1,w
  3233  0DAD  00A4               	movwf	lcd_write@port+1
  3234  0DAE  3000               	movlw	0
  3235  0DAF  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  3236  0DB4                     l3161:	
  3237                           
  3238                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  3239  0DB4  300C               	movlw	12
  3240  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0DB7  00AC               	movwf	??_lcd_init
  3243  0DB8  082C               	movf	??_lcd_init,w
  3244  0DB9  00A2               	movwf	lcd_write@CmdChar
  3245  0DBA  082A               	movf	lcd_init@port,w
  3246  0DBB  00A3               	movwf	lcd_write@port
  3247  0DBC  082B               	movf	lcd_init@port+1,w
  3248  0DBD  00A4               	movwf	lcd_write@port+1
  3249  0DBE  3000               	movlw	0
  3250  0DBF  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  3251  0DC4                     l3163:	
  3252                           
  3253                           ;lcd4bits.c: 162:     lcd_clear(port);
  3254  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0DC6  082A               	movf	lcd_init@port,w
  3257  0DC7  00A8               	movwf	lcd_clear@port
  3258  0DC8  082B               	movf	lcd_init@port+1,w
  3259  0DC9  00A9               	movwf	lcd_clear@port+1
  3260  0DCA  120A  158A  2337  120A  158A  	fcall	_lcd_clear
  3261  0DCF                     l3165:	
  3262                           
  3263                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  3264  0DCF  3006               	movlw	6
  3265  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0DD2  00AC               	movwf	??_lcd_init
  3268  0DD3  082C               	movf	??_lcd_init,w
  3269  0DD4  00A2               	movwf	lcd_write@CmdChar
  3270  0DD5  082A               	movf	lcd_init@port,w
  3271  0DD6  00A3               	movwf	lcd_write@port
  3272  0DD7  082B               	movf	lcd_init@port+1,w
  3273  0DD8  00A4               	movwf	lcd_write@port+1
  3274  0DD9  3000               	movlw	0
  3275  0DDA  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  3276  0DDF                     l438:	
  3277  0DDF  0008               	return
  3278  0DE0                     __end_of_lcd_init:	
  3279                           
  3280                           	psect	text10
  3281  0ABD                     __ptext10:	
  3282 ;; *************** function _tmr0_init *****************
  3283 ;; Defined at:
  3284 ;;		line 72 in file "lcd4bits.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       0       0       0       0
  3299 ;;      Locals:         0       0       0       0       0
  3300 ;;      Temps:          0       1       0       0       0
  3301 ;;      Totals:         0       1       0       0       0
  3302 ;;Total ram usage:        1 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_lcd_init
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _tmr0_init
  3314  0ABD                     _tmr0_init:	
  3315  0ABD                     l3149:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  3318                           
  3319                           
  3320                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  3321  0ABD  30C0               	movlw	192
  3322  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0AC0  00A0               	movwf	??_tmr0_init
  3325  0AC1  0820               	movf	??_tmr0_init,w
  3326  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0AC3  1303               	bcf	3,6	;RP1=0, select bank1
  3328  0AC4  0581               	andwf	1,f	;volatile
  3329  0AC5                     l3151:	
  3330                           
  3331                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  3332  0AC5  1501               	bsf	1,2	;volatile
  3333  0AC6                     l403:	
  3334  0AC6  0008               	return
  3335  0AC7                     __end_of_tmr0_init:	
  3336                           
  3337                           	psect	text11
  3338  0B95                     __ptext11:	
  3339 ;; *************** function _joystick_init *****************
  3340 ;; Defined at:
  3341 ;;		line 523 in file "concentration.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _joystick_init
  3371  0B95                     _joystick_init:	
  3372  0B95                     l3167:	
  3373                           ;incstack = 0
  3374                           ; Regs used in _joystick_init: [wreg+status,2]
  3375                           
  3376                           
  3377                           ;concentration.c: 524:     joystick_x_pos = 512;
  3378  0B95  3000               	movlw	0
  3379  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  3381  0B98  00D9               	movwf	_joystick_x_pos
  3382  0B99  3002               	movlw	2
  3383  0B9A  00DA               	movwf	_joystick_x_pos+1
  3384                           
  3385                           ;concentration.c: 525:     joystick_y_pos = 512;
  3386  0B9B  3000               	movlw	0
  3387  0B9C  00D7               	movwf	_joystick_y_pos
  3388  0B9D  3002               	movlw	2
  3389  0B9E  00D8               	movwf	_joystick_y_pos+1
  3390  0B9F                     l3169:	
  3391                           
  3392                           ;concentration.c: 526:     PORTB = 0;
  3393  0B9F  0186               	clrf	6	;volatile
  3394  0BA0                     l3171:	
  3395                           
  3396                           ;concentration.c: 527:     nRBPU = 0;
  3397  0BA0  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0BA1  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0BA2  1381               	bcf	1,7	;volatile
  3400  0BA3                     l3173:	
  3401                           
  3402                           ;concentration.c: 528:     WPUB = 0x24;
  3403  0BA3  3024               	movlw	36
  3404  0BA4  0095               	movwf	21	;volatile
  3405  0BA5                     l3175:	
  3406                           
  3407                           ;concentration.c: 529:     TRISB = 0x3F;
  3408  0BA5  303F               	movlw	63
  3409  0BA6  0086               	movwf	6	;volatile
  3410  0BA7                     l3177:	
  3411                           
  3412                           ;concentration.c: 530:     ANSELH = 0x1E;
  3413  0BA7  301E               	movlw	30
  3414  0BA8  1683               	bsf	3,5	;RP0=1, select bank3
  3415  0BA9  1703               	bsf	3,6	;RP1=1, select bank3
  3416  0BAA  0089               	movwf	9	;volatile
  3417  0BAB                     l3179:	
  3418                           
  3419                           ;concentration.c: 531:     GIE = 1;
  3420  0BAB  178B               	bsf	11,7	;volatile
  3421  0BAC                     l3181:	
  3422                           
  3423                           ;concentration.c: 532:     PEIE = 1;
  3424  0BAC  170B               	bsf	11,6	;volatile
  3425  0BAD                     l3183:	
  3426                           
  3427                           ;concentration.c: 533:     ADIF = 0;
  3428  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0BAF  130C               	bcf	12,6	;volatile
  3431  0BB0                     l3185:	
  3432                           
  3433                           ;concentration.c: 534:     ADIE = 1;
  3434  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
  3435  0BB1  1303               	bcf	3,6	;RP1=0, select bank1
  3436  0BB2  170C               	bsf	12,6	;volatile
  3437  0BB3                     l3187:	
  3438                           
  3439                           ;concentration.c: 535:     ADCON1 = 0x80;
  3440  0BB3  3080               	movlw	128
  3441  0BB4  009F               	movwf	31	;volatile
  3442  0BB5                     l3189:	
  3443                           
  3444                           ;concentration.c: 536:     ADCON0 = 0xA5;
  3445  0BB5  30A5               	movlw	165
  3446  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0BB8  009F               	movwf	31	;volatile
  3449  0BB9                     l3191:	
  3450                           
  3451                           ;concentration.c: 537:     joystick_pressed = 1;
  3452  0BB9  01DD               	clrf	_joystick_pressed
  3453  0BBA  0ADD               	incf	_joystick_pressed,f
  3454  0BBB                     l371:	
  3455  0BBB  0008               	return
  3456  0BBC                     __end_of_joystick_init:	
  3457                           
  3458                           	psect	text12
  3459  0E9A                     __ptext12:	
  3460 ;; *************** function _gameboard_init *****************
  3461 ;; Defined at:
  3462 ;;		line 286 in file "concentration.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  i               1   54[BANK0 ] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         0       1       0       0       0
  3478 ;;      Temps:          0       1       0       0       0
  3479 ;;      Totals:         0       2       0       0       0
  3480 ;;Total ram usage:        2 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    5
  3483 ;; This function calls:
  3484 ;;		_get_current_char
  3485 ;;		_lcd_clear
  3486 ;;		_lcd_goto
  3487 ;;		_make_custom_chars
  3488 ;;		_randomize_gameboard
  3489 ;;		_time_init
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _gameboard_init
  3497  0E9A                     _gameboard_init:	
  3498  0E9A                     l3193:	
  3499                           ;incstack = 0
  3500                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3501                           
  3502                           
  3503                           ;concentration.c: 287:     selected_tile = 0xFF;
  3504  0E9A  30FF               	movlw	255
  3505  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0E9D  00D5               	movwf	??_gameboard_init
  3508  0E9E  0855               	movf	??_gameboard_init,w
  3509  0E9F  00DE               	movwf	_selected_tile
  3510  0EA0                     l3195:	
  3511                           
  3512                           ;concentration.c: 288:     time_init();
  3513  0EA0  120A  158A  2308  120A  158A  	fcall	_time_init
  3514  0EA5                     l3197:	
  3515                           
  3516                           ;concentration.c: 289:     make_custom_chars();
  3517  0EA5  120A  158A  26FA  120A  158A  	fcall	_make_custom_chars
  3518  0EAA                     l3199:	
  3519                           
  3520                           ;concentration.c: 290:     char i;;concentration.c: 291:     for(i = 0; i < 32; i++) {
  3521  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0EAC  01D6               	clrf	gameboard_init@i
  3524  0EAD                     l3205:	
  3525                           
  3526                           ;concentration.c: 292:         visible[i] = 0xFF;
  3527  0EAD  30FF               	movlw	255
  3528  0EAE  00D5               	movwf	??_gameboard_init
  3529  0EAF  0856               	movf	gameboard_init@i,w
  3530  0EB0  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3531  0EB1  0084               	movwf	4
  3532  0EB2  0855               	movf	??_gameboard_init,w
  3533  0EB3  1383               	bcf	3,7	;select IRP bank1
  3534  0EB4  0080               	movwf	0
  3535  0EB5                     l3207:	
  3536                           
  3537                           ;concentration.c: 293:     }
  3538  0EB5  3001               	movlw	1
  3539  0EB6  00D5               	movwf	??_gameboard_init
  3540  0EB7  0855               	movf	??_gameboard_init,w
  3541  0EB8  07D6               	addwf	gameboard_init@i,f
  3542  0EB9                     l3209:	
  3543  0EB9  3020               	movlw	32
  3544  0EBA  0256               	subwf	gameboard_init@i,w
  3545  0EBB  1C03               	skipc
  3546  0EBC  2EBE               	goto	u2171
  3547  0EBD  2EBF               	goto	u2170
  3548  0EBE                     u2171:	
  3549  0EBE  2EAD               	goto	l3205
  3550  0EBF                     u2170:	
  3551  0EBF                     l3211:	
  3552                           
  3553                           ;concentration.c: 294:     lcd_clear(gameboard);
  3554  0EBF  3005               	movlw	5
  3555  0EC0  00A8               	movwf	lcd_clear@port
  3556  0EC1  3000               	movlw	0
  3557  0EC2  00A9               	movwf	lcd_clear@port+1
  3558  0EC3  120A  158A  2337  120A  158A  	fcall	_lcd_clear
  3559  0EC8                     l3213:	
  3560                           
  3561                           ;concentration.c: 295:     cursor_pos = 0x00;
  3562  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0ECA  01E5               	clrf	_cursor_pos
  3565  0ECB                     l3215:	
  3566                           
  3567                           ;concentration.c: 296:     cursor_solid = 0;
  3568  0ECB  01E3               	clrf	_cursor_solid
  3569                           
  3570                           ;concentration.c: 297:     get_current_char();
  3571  0ECC  120A  158A  22D1  120A  158A  	fcall	_get_current_char
  3572  0ED1                     l3217:	
  3573                           
  3574                           ;concentration.c: 298:     delay_loops = 0;
  3575  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0ED3  01E2               	clrf	_delay_loops
  3578  0ED4                     l3219:	
  3579                           
  3580                           ;concentration.c: 299:     cursor_movable = 1;
  3581  0ED4  01E1               	clrf	_cursor_movable
  3582  0ED5  0AE1               	incf	_cursor_movable,f
  3583  0ED6                     l3221:	
  3584                           
  3585                           ;concentration.c: 300:     lcd_goto(cursor_pos, gameboard);
  3586  0ED6  3005               	movlw	5
  3587  0ED7  00A8               	movwf	lcd_goto@port
  3588  0ED8  3000               	movlw	0
  3589  0ED9  00A9               	movwf	lcd_goto@port+1
  3590  0EDA  0865               	movf	_cursor_pos,w
  3591  0EDB  120A  158A  2351  120A  158A  	fcall	_lcd_goto
  3592  0EE0                     l3223:	
  3593                           
  3594                           ;concentration.c: 301:     cursor_move_delay_count = 255;
  3595  0EE0  30FF               	movlw	255
  3596  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0EE3  00D5               	movwf	??_gameboard_init
  3599  0EE4  0855               	movf	??_gameboard_init,w
  3600  0EE5  00FA               	movwf	_cursor_move_delay_count
  3601  0EE6                     l3225:	
  3602                           
  3603                           ;concentration.c: 302:     PR2 = 250;
  3604  0EE6  30FA               	movlw	250
  3605  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  3606  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  3607  0EE9  0092               	movwf	18	;volatile
  3608  0EEA                     l3227:	
  3609                           
  3610                           ;concentration.c: 303:     TMR2IF = 0;
  3611  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0EEC  108C               	bcf	12,1	;volatile
  3614  0EED                     l3229:	
  3615                           
  3616                           ;concentration.c: 304:     TMR2IE = 1;
  3617  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  3619  0EEF  148C               	bsf	12,1	;volatile
  3620  0EF0                     l3231:	
  3621                           
  3622                           ;concentration.c: 305:     T2CON = 0x56;
  3623  0EF0  3056               	movlw	86
  3624  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  3626  0EF3  0092               	movwf	18	;volatile
  3627  0EF4                     l3233:	
  3628                           
  3629                           ;concentration.c: 306:     randomize_gameboard();
  3630  0EF4  120A  158A  263B  120A  158A  	fcall	_randomize_gameboard
  3631  0EF9                     l272:	
  3632  0EF9  0008               	return
  3633  0EFA                     __end_of_gameboard_init:	
  3634                           
  3635                           	psect	text13
  3636  0B08                     __ptext13:	
  3637 ;; *************** function _time_init *****************
  3638 ;; Defined at:
  3639 ;;		line 505 in file "concentration.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0
  3655 ;;      Temps:          0       1       0       0       0
  3656 ;;      Totals:         0       1       0       0       0
  3657 ;;Total ram usage:        1 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    1
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_gameboard_init
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           
  3668                           ;psect for function _time_init
  3669  0B08                     _time_init:	
  3670  0B08                     l3013:	
  3671                           ;incstack = 0
  3672                           ; Regs used in _time_init: [wreg+status,2+status,0]
  3673                           
  3674                           
  3675                           ;concentration.c: 506:     CCP1M3 = 1;
  3676  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  3678  0B0A  1597               	bsf	23,3	;volatile
  3679                           
  3680                           ;concentration.c: 507:     CCP1M2 = 0;
  3681  0B0B  1117               	bcf	23,2	;volatile
  3682                           
  3683                           ;concentration.c: 508:     CCP1M1 = 1;
  3684  0B0C  1497               	bsf	23,1	;volatile
  3685                           
  3686                           ;concentration.c: 509:     CCP1M0 = 0;
  3687  0B0D  1017               	bcf	23,0	;volatile
  3688                           
  3689                           ;concentration.c: 510:     TMR1CS = 0;
  3690  0B0E  1090               	bcf	16,1	;volatile
  3691                           
  3692                           ;concentration.c: 511:     T1CKPS0 = 0;
  3693  0B0F  1210               	bcf	16,4	;volatile
  3694                           
  3695                           ;concentration.c: 512:     T1CKPS1 = 0;
  3696  0B10  1290               	bcf	16,5	;volatile
  3697                           
  3698                           ;concentration.c: 513:     TMR1GE = 0;
  3699  0B11  1310               	bcf	16,6	;volatile
  3700                           
  3701                           ;concentration.c: 514:     TMR1ON = 1;
  3702  0B12  1410               	bsf	16,0	;volatile
  3703                           
  3704                           ;concentration.c: 516:     CCP2M3 = 1;
  3705  0B13  159D               	bsf	29,3	;volatile
  3706                           
  3707                           ;concentration.c: 517:     CCP2M2 = 0;
  3708  0B14  111D               	bcf	29,2	;volatile
  3709                           
  3710                           ;concentration.c: 518:     CCP2M1 = 0;
  3711  0B15  109D               	bcf	29,1	;volatile
  3712                           
  3713                           ;concentration.c: 519:     CCP2M0 = 0;
  3714  0B16  101D               	bcf	29,0	;volatile
  3715  0B17                     l3015:	
  3716                           
  3717                           ;concentration.c: 520:     TRISC &= 0xFD;
  3718  0B17  30FD               	movlw	253
  3719  0B18  00A0               	movwf	??_time_init
  3720  0B19  0820               	movf	??_time_init,w
  3721  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  3722  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  3723  0B1C  0587               	andwf	7,f	;volatile
  3724  0B1D                     l368:	
  3725  0B1D  0008               	return
  3726  0B1E                     __end_of_time_init:	
  3727                           
  3728                           	psect	text14
  3729  0E3B                     __ptext14:	
  3730 ;; *************** function _randomize_gameboard *****************
  3731 ;; Defined at:
  3732 ;;		line 316 in file "concentration.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  used           32   19[BANK0 ] unsigned char [32]
  3737 ;;  random          1   52[BANK0 ] unsigned char 
  3738 ;;  current         1   51[BANK0 ] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         0       0       0       0       0
  3749 ;;      Locals:         0      34       0       0       0
  3750 ;;      Temps:          0       3       0       0       0
  3751 ;;      Totals:         0      37       0       0       0
  3752 ;;Total ram usage:       37 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    2
  3755 ;; This function calls:
  3756 ;;		_DelayMs
  3757 ;;		___awdiv
  3758 ;; This function is called by:
  3759 ;;		_gameboard_init
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function _randomize_gameboard
  3765  0E3B                     _randomize_gameboard:	
  3766  0E3B                     l3017:	
  3767                           ;incstack = 0
  3768                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3769                           
  3770                           
  3771                           ;concentration.c: 317:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      +                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  3772  0E3B  3033               	movlw	randomize_gameboard@used& (0+255)
  3773  0E3C  0084               	movwf	4
  3774  0E3D  3020               	movlw	32
  3775  0E3E  00FF               	movwf	btemp+1
  3776  0E3F                     u2070:	
  3777  0E3F  1383               	bcf	3,7	;select IRP bank0
  3778  0E40  0180               	clrf	0
  3779  0E41  0A84               	incf	4,f
  3780  0E42  0BFF               	decfsz	btemp+1,f
  3781  0E43  2E3F               	goto	u2070
  3782  0E44                     l3019:	
  3783                           
  3784                           ;concentration.c: 318:     char current = 0;
  3785  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0E46  01D3               	clrf	randomize_gameboard@current
  3788                           
  3789                           ;concentration.c: 319:     char random;;concentration.c: 320:     while(current != 32) {
  3790  0E47  2E93               	goto	l3033
  3791  0E48                     l3021:	
  3792                           
  3793                           ;concentration.c: 321:         DelayMs(TMR2>>(2+(TMR1%4)));
  3794  0E48  0811               	movf	17,w	;volatile
  3795  0E49  00B0               	movwf	??_randomize_gameboard
  3796  0E4A  080E               	movf	14,w	;volatile
  3797  0E4B  3903               	andlw	3
  3798  0E4C  3E02               	addlw	2
  3799  0E4D  3E01               	addlw	1
  3800  0E4E  2E51               	goto	u2084
  3801  0E4F                     u2085:	
  3802  0E4F  1003               	clrc
  3803  0E50  0CB0               	rrf	??_randomize_gameboard,f
  3804  0E51                     u2084:	
  3805  0E51  3EFF               	addlw	-1
  3806  0E52  1D03               	skipz
  3807  0E53  2E4F               	goto	u2085
  3808  0E54  0830               	movf	??_randomize_gameboard,w
  3809  0E55  00B1               	movwf	??_randomize_gameboard+1
  3810  0E56  01B2               	clrf	??_randomize_gameboard+2
  3811  0E57  0831               	movf	??_randomize_gameboard+1,w
  3812  0E58  00A0               	movwf	DelayMs@millis
  3813  0E59  0832               	movf	??_randomize_gameboard+2,w
  3814  0E5A  00A1               	movwf	DelayMs@millis+1
  3815  0E5B  120A  158A  231E  120A  158A  	fcall	_DelayMs
  3816  0E60                     l3023:	
  3817                           
  3818                           ;concentration.c: 322:         random = TMR1 % 32;
  3819  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0E62  080E               	movf	14,w	;volatile
  3822  0E63  391F               	andlw	31
  3823  0E64  00B0               	movwf	??_randomize_gameboard
  3824  0E65  0830               	movf	??_randomize_gameboard,w
  3825  0E66  00D4               	movwf	randomize_gameboard@random
  3826  0E67                     l3025:	
  3827                           
  3828                           ;concentration.c: 323:         if(used[random] == 0) {
  3829  0E67  0854               	movf	randomize_gameboard@random,w
  3830  0E68  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3831  0E69  0084               	movwf	4
  3832  0E6A  1383               	bcf	3,7	;select IRP bank0
  3833  0E6B  0800               	movf	0,w
  3834  0E6C  1D03               	btfss	3,2
  3835  0E6D  2E6F               	goto	u2091
  3836  0E6E  2E70               	goto	u2090
  3837  0E6F                     u2091:	
  3838  0E6F  2E93               	goto	l3033
  3839  0E70                     u2090:	
  3840  0E70                     l3027:	
  3841                           
  3842                           ;concentration.c: 324:             used[random] = 1;
  3843  0E70  0854               	movf	randomize_gameboard@random,w
  3844  0E71  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3845  0E72  0084               	movwf	4
  3846  0E73  0180               	clrf	0
  3847  0E74  0A80               	incf	0,f
  3848  0E75                     l3029:	
  3849                           
  3850                           ;concentration.c: 325:             board[random] = current/4;
  3851  0E75  3004               	movlw	4
  3852  0E76  00A7               	movwf	___awdiv@divisor
  3853  0E77  3000               	movlw	0
  3854  0E78  00A8               	movwf	___awdiv@divisor+1
  3855  0E79  0853               	movf	randomize_gameboard@current,w
  3856  0E7A  00B0               	movwf	??_randomize_gameboard
  3857  0E7B  01B1               	clrf	??_randomize_gameboard+1
  3858  0E7C  0830               	movf	??_randomize_gameboard,w
  3859  0E7D  00A9               	movwf	___awdiv@dividend
  3860  0E7E  0831               	movf	??_randomize_gameboard+1,w
  3861  0E7F  00AA               	movwf	___awdiv@dividend+1
  3862  0E80  120A  118A  2489  120A  158A  	fcall	___awdiv
  3863  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0E87  0827               	movf	?___awdiv,w
  3866  0E88  00B2               	movwf	??_randomize_gameboard+2
  3867  0E89  0854               	movf	randomize_gameboard@random,w
  3868  0E8A  3EC0               	addlw	(low (_board| 0))& (0+255)
  3869  0E8B  0084               	movwf	4
  3870  0E8C  0832               	movf	??_randomize_gameboard+2,w
  3871  0E8D  1383               	bcf	3,7	;select IRP bank1
  3872  0E8E  0080               	movwf	0
  3873  0E8F                     l3031:	
  3874                           
  3875                           ;concentration.c: 326:             current++;
  3876  0E8F  3001               	movlw	1
  3877  0E90  00B0               	movwf	??_randomize_gameboard
  3878  0E91  0830               	movf	??_randomize_gameboard,w
  3879  0E92  07D3               	addwf	randomize_gameboard@current,f
  3880  0E93                     l3033:	
  3881                           
  3882                           ;concentration.c: 320:     while(current != 32) {
  3883  0E93  3020               	movlw	32
  3884  0E94  0653               	xorwf	randomize_gameboard@current,w
  3885  0E95  1D03               	btfss	3,2
  3886  0E96  2E98               	goto	u2101
  3887  0E97  2E99               	goto	u2100
  3888  0E98                     u2101:	
  3889  0E98  2E48               	goto	l3021
  3890  0E99                     u2100:	
  3891  0E99                     l285:	
  3892  0E99  0008               	return
  3893  0E9A                     __end_of_randomize_gameboard:	
  3894                           
  3895                           	psect	text15
  3896  0489                     __ptext15:	
  3897 ;; *************** function ___awdiv *****************
  3898 ;; Defined at:
  3899 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  divisor         2    7[BANK0 ] int 
  3902 ;;  dividend        2    9[BANK0 ] int 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  quotient        2   14[BANK0 ] int 
  3905 ;;  sign            1   13[BANK0 ] unsigned char 
  3906 ;;  counter         1   12[BANK0 ] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  2    7[BANK0 ] int 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       4       0       0       0
  3917 ;;      Locals:         0       4       0       0       0
  3918 ;;      Temps:          0       1       0       0       0
  3919 ;;      Totals:         0       9       0       0       0
  3920 ;;Total ram usage:        9 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_display_scoreboard
  3927 ;;		_randomize_gameboard
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function ___awdiv
  3933  0489                     ___awdiv:	
  3934  0489                     l2777:	
  3935                           ;incstack = 0
  3936                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3937                           
  3938  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3939  048A  1303               	bcf	3,6	;RP1=0, select bank0
  3940  048B  01AD               	clrf	___awdiv@sign
  3941  048C                     l2779:	
  3942  048C  1FA8               	btfss	___awdiv@divisor+1,7
  3943  048D  2C8F               	goto	u1771
  3944  048E  2C90               	goto	u1770
  3945  048F                     u1771:	
  3946  048F  2C97               	goto	l2785
  3947  0490                     u1770:	
  3948  0490                     l2781:	
  3949  0490  09A7               	comf	___awdiv@divisor,f
  3950  0491  09A8               	comf	___awdiv@divisor+1,f
  3951  0492  0AA7               	incf	___awdiv@divisor,f
  3952  0493  1903               	skipnz
  3953  0494  0AA8               	incf	___awdiv@divisor+1,f
  3954  0495                     l2783:	
  3955  0495  01AD               	clrf	___awdiv@sign
  3956  0496  0AAD               	incf	___awdiv@sign,f
  3957  0497                     l2785:	
  3958  0497  1FAA               	btfss	___awdiv@dividend+1,7
  3959  0498  2C9A               	goto	u1781
  3960  0499  2C9B               	goto	u1780
  3961  049A                     u1781:	
  3962  049A  2CA4               	goto	l2791
  3963  049B                     u1780:	
  3964  049B                     l2787:	
  3965  049B  09A9               	comf	___awdiv@dividend,f
  3966  049C  09AA               	comf	___awdiv@dividend+1,f
  3967  049D  0AA9               	incf	___awdiv@dividend,f
  3968  049E  1903               	skipnz
  3969  049F  0AAA               	incf	___awdiv@dividend+1,f
  3970  04A0                     l2789:	
  3971  04A0  3001               	movlw	1
  3972  04A1  00AB               	movwf	??___awdiv
  3973  04A2  082B               	movf	??___awdiv,w
  3974  04A3  06AD               	xorwf	___awdiv@sign,f
  3975  04A4                     l2791:	
  3976  04A4  01AE               	clrf	___awdiv@quotient
  3977  04A5  01AF               	clrf	___awdiv@quotient+1
  3978  04A6                     l2793:	
  3979  04A6  0827               	movf	___awdiv@divisor,w
  3980  04A7  0428               	iorwf	___awdiv@divisor+1,w
  3981  04A8  1903               	btfsc	3,2
  3982  04A9  2CAB               	goto	u1791
  3983  04AA  2CAC               	goto	u1790
  3984  04AB                     u1791:	
  3985  04AB  2CE3               	goto	l2813
  3986  04AC                     u1790:	
  3987  04AC                     l2795:	
  3988  04AC  01AC               	clrf	___awdiv@counter
  3989  04AD  0AAC               	incf	___awdiv@counter,f
  3990  04AE  2CBA               	goto	l2801
  3991  04AF                     l2797:	
  3992  04AF  3001               	movlw	1
  3993  04B0                     u1805:	
  3994  04B0  1003               	clrc
  3995  04B1  0DA7               	rlf	___awdiv@divisor,f
  3996  04B2  0DA8               	rlf	___awdiv@divisor+1,f
  3997  04B3  3EFF               	addlw	-1
  3998  04B4  1D03               	skipz
  3999  04B5  2CB0               	goto	u1805
  4000  04B6                     l2799:	
  4001  04B6  3001               	movlw	1
  4002  04B7  00AB               	movwf	??___awdiv
  4003  04B8  082B               	movf	??___awdiv,w
  4004  04B9  07AC               	addwf	___awdiv@counter,f
  4005  04BA                     l2801:	
  4006  04BA  1FA8               	btfss	___awdiv@divisor+1,7
  4007  04BB  2CBD               	goto	u1811
  4008  04BC  2CBE               	goto	u1810
  4009  04BD                     u1811:	
  4010  04BD  2CAF               	goto	l2797
  4011  04BE                     u1810:	
  4012  04BE                     l2803:	
  4013  04BE  3001               	movlw	1
  4014  04BF                     u1825:	
  4015  04BF  1003               	clrc
  4016  04C0  0DAE               	rlf	___awdiv@quotient,f
  4017  04C1  0DAF               	rlf	___awdiv@quotient+1,f
  4018  04C2  3EFF               	addlw	-1
  4019  04C3  1D03               	skipz
  4020  04C4  2CBF               	goto	u1825
  4021  04C5  0828               	movf	___awdiv@divisor+1,w
  4022  04C6  022A               	subwf	___awdiv@dividend+1,w
  4023  04C7  1D03               	skipz
  4024  04C8  2CCB               	goto	u1835
  4025  04C9  0827               	movf	___awdiv@divisor,w
  4026  04CA  0229               	subwf	___awdiv@dividend,w
  4027  04CB                     u1835:	
  4028  04CB  1C03               	skipc
  4029  04CC  2CCE               	goto	u1831
  4030  04CD  2CCF               	goto	u1830
  4031  04CE                     u1831:	
  4032  04CE  2CD6               	goto	l2809
  4033  04CF                     u1830:	
  4034  04CF                     l2805:	
  4035  04CF  0827               	movf	___awdiv@divisor,w
  4036  04D0  02A9               	subwf	___awdiv@dividend,f
  4037  04D1  0828               	movf	___awdiv@divisor+1,w
  4038  04D2  1C03               	skipc
  4039  04D3  03AA               	decf	___awdiv@dividend+1,f
  4040  04D4  02AA               	subwf	___awdiv@dividend+1,f
  4041  04D5                     l2807:	
  4042  04D5  142E               	bsf	___awdiv@quotient,0
  4043  04D6                     l2809:	
  4044  04D6  3001               	movlw	1
  4045  04D7                     u1845:	
  4046  04D7  1003               	clrc
  4047  04D8  0CA8               	rrf	___awdiv@divisor+1,f
  4048  04D9  0CA7               	rrf	___awdiv@divisor,f
  4049  04DA  3EFF               	addlw	-1
  4050  04DB  1D03               	skipz
  4051  04DC  2CD7               	goto	u1845
  4052  04DD                     l2811:	
  4053  04DD  3001               	movlw	1
  4054  04DE  02AC               	subwf	___awdiv@counter,f
  4055  04DF  1D03               	btfss	3,2
  4056  04E0  2CE2               	goto	u1851
  4057  04E1  2CE3               	goto	u1850
  4058  04E2                     u1851:	
  4059  04E2  2CBE               	goto	l2803
  4060  04E3                     u1850:	
  4061  04E3                     l2813:	
  4062  04E3  082D               	movf	___awdiv@sign,w
  4063  04E4  1903               	btfsc	3,2
  4064  04E5  2CE7               	goto	u1861
  4065  04E6  2CE8               	goto	u1860
  4066  04E7                     u1861:	
  4067  04E7  2CED               	goto	l2817
  4068  04E8                     u1860:	
  4069  04E8                     l2815:	
  4070  04E8  09AE               	comf	___awdiv@quotient,f
  4071  04E9  09AF               	comf	___awdiv@quotient+1,f
  4072  04EA  0AAE               	incf	___awdiv@quotient,f
  4073  04EB  1903               	skipnz
  4074  04EC  0AAF               	incf	___awdiv@quotient+1,f
  4075  04ED                     l2817:	
  4076  04ED  082F               	movf	___awdiv@quotient+1,w
  4077  04EE  00A8               	movwf	?___awdiv+1
  4078  04EF  082E               	movf	___awdiv@quotient,w
  4079  04F0  00A7               	movwf	?___awdiv
  4080  04F1                     l682:	
  4081  04F1  0008               	return
  4082  04F2                     __end_of___awdiv:	
  4083                           
  4084                           	psect	text16
  4085  0EFA                     __ptext16:	
  4086 ;; *************** function _make_custom_chars *****************
  4087 ;; Defined at:
  4088 ;;		line 267 in file "concentration.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0
  4104 ;;      Temps:          0       1       0       0       0
  4105 ;;      Totals:         0       1       0       0       0
  4106 ;;Total ram usage:        1 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    4
  4109 ;; This function calls:
  4110 ;;		_lcd_set_custom_char
  4111 ;; This function is called by:
  4112 ;;		_gameboard_init
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _make_custom_chars
  4118  0EFA                     _make_custom_chars:	
  4119  0EFA                     l3011:	
  4120                           ;incstack = 0
  4121                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4122                           
  4123                           
  4124                           ;concentration.c: 268:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0
      +                          E, 0x00};;concentration.c: 269:     lcd_set_custom_char(smile, 0x00, gameboard);
  4125  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0EFC  01A8               	clrf	lcd_set_custom_char@cg_address
  4128  0EFD  3005               	movlw	5
  4129  0EFE  00A9               	movwf	lcd_set_custom_char@port
  4130  0EFF  3000               	movlw	0
  4131  0F00  00AA               	movwf	lcd_set_custom_char@port+1
  4132  0F01  3039               	movlw	(low ((make_custom_chars@smile-__stringbase)| (0+32768)))& (0+255)
  4133  0F02  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4134                           
  4135                           ;concentration.c: 270:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0
      +                          x00, 0x00};;concentration.c: 271:     lcd_set_custom_char(diamond, 0x01, gameboard);
  4136  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  4138  0F09  01A8               	clrf	lcd_set_custom_char@cg_address
  4139  0F0A  0AA8               	incf	lcd_set_custom_char@cg_address,f
  4140  0F0B  3005               	movlw	5
  4141  0F0C  00A9               	movwf	lcd_set_custom_char@port
  4142  0F0D  3000               	movlw	0
  4143  0F0E  00AA               	movwf	lcd_set_custom_char@port+1
  4144  0F0F  3031               	movlw	(low ((make_custom_chars@diamond-__stringbase)| (0+32768)))& (0+255)
  4145  0F10  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4146                           
  4147                           ;concentration.c: 272:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x00};;concentration.c: 273:     lcd_set_custom_char(heart, 0x02, gameboard);
  4148  0F15  3002               	movlw	2
  4149  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  4150  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  4151  0F18  00AF               	movwf	??_make_custom_chars
  4152  0F19  082F               	movf	??_make_custom_chars,w
  4153  0F1A  00A8               	movwf	lcd_set_custom_char@cg_address
  4154  0F1B  3005               	movlw	5
  4155  0F1C  00A9               	movwf	lcd_set_custom_char@port
  4156  0F1D  3000               	movlw	0
  4157  0F1E  00AA               	movwf	lcd_set_custom_char@port+1
  4158  0F1F  3029               	movlw	(low ((make_custom_chars@heart-__stringbase)| (0+32768)))& (0+255)
  4159  0F20  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4160                           
  4161                           ;concentration.c: 274:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x0E};;concentration.c: 275:     lcd_set_custom_char(spade, 0x03, gameboard);
  4162  0F25  3003               	movlw	3
  4163  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0F28  00AF               	movwf	??_make_custom_chars
  4166  0F29  082F               	movf	??_make_custom_chars,w
  4167  0F2A  00A8               	movwf	lcd_set_custom_char@cg_address
  4168  0F2B  3005               	movlw	5
  4169  0F2C  00A9               	movwf	lcd_set_custom_char@port
  4170  0F2D  3000               	movlw	0
  4171  0F2E  00AA               	movwf	lcd_set_custom_char@port+1
  4172  0F2F  3021               	movlw	(low ((make_custom_chars@spade-__stringbase)| (0+32768)))& (0+255)
  4173  0F30  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4174                           
  4175                           ;concentration.c: 276:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04
      +                          , 0x0E};;concentration.c: 277:     lcd_set_custom_char(club, 0x04, gameboard);
  4176  0F35  3004               	movlw	4
  4177  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0F38  00AF               	movwf	??_make_custom_chars
  4180  0F39  082F               	movf	??_make_custom_chars,w
  4181  0F3A  00A8               	movwf	lcd_set_custom_char@cg_address
  4182  0F3B  3005               	movlw	5
  4183  0F3C  00A9               	movwf	lcd_set_custom_char@port
  4184  0F3D  3000               	movlw	0
  4185  0F3E  00AA               	movwf	lcd_set_custom_char@port+1
  4186  0F3F  3019               	movlw	(low ((make_custom_chars@club-__stringbase)| (0+32768)))& (0+255)
  4187  0F40  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4188                           
  4189                           ;concentration.c: 278:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0
      +                          E, 0x00};;concentration.c: 279:     lcd_set_custom_char(skull, 0x05, gameboard);
  4190  0F45  3005               	movlw	5
  4191  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  4192  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  4193  0F48  00AF               	movwf	??_make_custom_chars
  4194  0F49  082F               	movf	??_make_custom_chars,w
  4195  0F4A  00A8               	movwf	lcd_set_custom_char@cg_address
  4196  0F4B  3005               	movlw	5
  4197  0F4C  00A9               	movwf	lcd_set_custom_char@port
  4198  0F4D  3000               	movlw	0
  4199  0F4E  00AA               	movwf	lcd_set_custom_char@port+1
  4200  0F4F  3011               	movlw	(low ((make_custom_chars@skull-__stringbase)| (0+32768)))& (0+255)
  4201  0F50  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4202                           
  4203                           ;concentration.c: 280:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 
      +                          0x05};;concentration.c: 281:     lcd_set_custom_char(RH, 0x06, gameboard);
  4204  0F55  3006               	movlw	6
  4205  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  4206  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  4207  0F58  00AF               	movwf	??_make_custom_chars
  4208  0F59  082F               	movf	??_make_custom_chars,w
  4209  0F5A  00A8               	movwf	lcd_set_custom_char@cg_address
  4210  0F5B  3005               	movlw	5
  4211  0F5C  00A9               	movwf	lcd_set_custom_char@port
  4212  0F5D  3000               	movlw	0
  4213  0F5E  00AA               	movwf	lcd_set_custom_char@port+1
  4214  0F5F  3009               	movlw	(low ((make_custom_chars@RH-__stringbase)| (0+32768)))& (0+255)
  4215  0F60  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4216                           
  4217                           ;concentration.c: 282:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02,
      +                           0x03};;concentration.c: 283:     lcd_set_custom_char(PIC, 0x07, gameboard);
  4218  0F65  3007               	movlw	7
  4219  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0F68  00AF               	movwf	??_make_custom_chars
  4222  0F69  082F               	movf	??_make_custom_chars,w
  4223  0F6A  00A8               	movwf	lcd_set_custom_char@cg_address
  4224  0F6B  3005               	movlw	5
  4225  0F6C  00A9               	movwf	lcd_set_custom_char@port
  4226  0F6D  3000               	movlw	0
  4227  0F6E  00AA               	movwf	lcd_set_custom_char@port+1
  4228  0F6F  3001               	movlw	(low ((make_custom_chars@PIC-__stringbase)| (0+32768)))& (0+255)
  4229  0F70  120A  158A  253C  120A  158A  	fcall	_lcd_set_custom_char
  4230  0F75                     l267:	
  4231  0F75  0008               	return
  4232  0F76                     __end_of_make_custom_chars:	
  4233                           
  4234                           	psect	text17
  4235  0D3C                     __ptext17:	
  4236 ;; *************** function _lcd_set_custom_char *****************
  4237 ;; Defined at:
  4238 ;;		line 166 in file "lcd4bits.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  data            1    wreg     PTR const unsigned char 
  4241 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4242 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4243 ;;  cg_address      1    8[BANK0 ] unsigned char 
  4244 ;;  port            2    9[BANK0 ] PTR unsigned char 
  4245 ;;		 -> PORTA(1), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  data            1   14[BANK0 ] PTR const unsigned char 
  4248 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4249 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4250 ;;  row             1   13[BANK0 ] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         0       3       0       0       0
  4261 ;;      Locals:         0       2       0       0       0
  4262 ;;      Temps:          0       2       0       0       0
  4263 ;;      Totals:         0       7       0       0       0
  4264 ;;Total ram usage:        7 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    3
  4267 ;; This function calls:
  4268 ;;		_lcd_write
  4269 ;; This function is called by:
  4270 ;;		_make_custom_chars
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _lcd_set_custom_char
  4276  0D3C                     _lcd_set_custom_char:	
  4277                           
  4278                           ;incstack = 0
  4279                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4280                           ;lcd_set_custom_char@data stored from wreg
  4281  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0D3E  00AE               	movwf	lcd_set_custom_char@data
  4284  0D3F                     l2903:	
  4285                           
  4286                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  4287  0D3F  01AD               	clrf	lcd_set_custom_char@row
  4288  0D40                     l2909:	
  4289                           
  4290                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  4291  0D40  0828               	movf	lcd_set_custom_char@cg_address,w
  4292  0D41  00AB               	movwf	??_lcd_set_custom_char
  4293  0D42  3002               	movlw	2
  4294  0D43                     u1995:	
  4295  0D43  1003               	clrc
  4296  0D44  0DAB               	rlf	??_lcd_set_custom_char,f
  4297  0D45  3EFF               	addlw	-1
  4298  0D46  1D03               	skipz
  4299  0D47  2D43               	goto	u1995
  4300  0D48  1003               	clrc
  4301  0D49  0D2B               	rlf	??_lcd_set_custom_char,w
  4302  0D4A  042D               	iorwf	lcd_set_custom_char@row,w
  4303  0D4B  3840               	iorlw	64
  4304  0D4C  00AC               	movwf	??_lcd_set_custom_char+1
  4305  0D4D  082C               	movf	??_lcd_set_custom_char+1,w
  4306  0D4E  00A2               	movwf	lcd_write@CmdChar
  4307  0D4F  0829               	movf	lcd_set_custom_char@port,w
  4308  0D50  00A3               	movwf	lcd_write@port
  4309  0D51  082A               	movf	lcd_set_custom_char@port+1,w
  4310  0D52  00A4               	movwf	lcd_write@port+1
  4311  0D53  3000               	movlw	0
  4312  0D54  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  4313                           
  4314                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  4315  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0D5B  082E               	movf	lcd_set_custom_char@data,w
  4318  0D5C  0084               	movwf	4
  4319  0D5D  120A  118A  2500  120A  158A  	fcall	stringdir
  4320  0D62  00AB               	movwf	??_lcd_set_custom_char
  4321  0D63  082B               	movf	??_lcd_set_custom_char,w
  4322  0D64  00A2               	movwf	lcd_write@CmdChar
  4323  0D65  0829               	movf	lcd_set_custom_char@port,w
  4324  0D66  00A3               	movwf	lcd_write@port
  4325  0D67  082A               	movf	lcd_set_custom_char@port+1,w
  4326  0D68  00A4               	movwf	lcd_write@port+1
  4327  0D69  3010               	movlw	16
  4328  0D6A  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  4329  0D6F                     l2911:	
  4330                           
  4331                           ;lcd4bits.c: 171:         *data++;
  4332  0D6F  3001               	movlw	1
  4333  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  4335  0D72  00AB               	movwf	??_lcd_set_custom_char
  4336  0D73  082B               	movf	??_lcd_set_custom_char,w
  4337  0D74  07AE               	addwf	lcd_set_custom_char@data,f
  4338  0D75                     l2913:	
  4339                           
  4340                           ;lcd4bits.c: 172:     }
  4341  0D75  3001               	movlw	1
  4342  0D76  00AB               	movwf	??_lcd_set_custom_char
  4343  0D77  082B               	movf	??_lcd_set_custom_char,w
  4344  0D78  07AD               	addwf	lcd_set_custom_char@row,f
  4345  0D79                     l2915:	
  4346  0D79  3008               	movlw	8
  4347  0D7A  022D               	subwf	lcd_set_custom_char@row,w
  4348  0D7B  1C03               	skipc
  4349  0D7C  2D7E               	goto	u2001
  4350  0D7D  2D7F               	goto	u2000
  4351  0D7E                     u2001:	
  4352  0D7E  2D40               	goto	l2909
  4353  0D7F                     u2000:	
  4354  0D7F                     l2917:	
  4355                           
  4356                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  4357  0D7F  3080               	movlw	128
  4358  0D80  00AB               	movwf	??_lcd_set_custom_char
  4359  0D81  082B               	movf	??_lcd_set_custom_char,w
  4360  0D82  00A2               	movwf	lcd_write@CmdChar
  4361  0D83  0829               	movf	lcd_set_custom_char@port,w
  4362  0D84  00A3               	movwf	lcd_write@port
  4363  0D85  082A               	movf	lcd_set_custom_char@port+1,w
  4364  0D86  00A4               	movwf	lcd_write@port+1
  4365  0D87  3000               	movlw	0
  4366  0D88  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  4367  0D8D                     l443:	
  4368  0D8D  0008               	return
  4369  0D8E                     __end_of_lcd_set_custom_char:	
  4370                           
  4371                           	psect	text18
  4372  0AD1                     __ptext18:	
  4373 ;; *************** function _get_current_char *****************
  4374 ;; Defined at:
  4375 ;;		line 488 in file "concentration.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4389 ;;      Params:         0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0
  4391 ;;      Temps:          0       1       0       0       0
  4392 ;;      Totals:         0       1       0       0       0
  4393 ;;Total ram usage:        1 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    2
  4396 ;; This function calls:
  4397 ;;		_get_cursor_index
  4398 ;; This function is called by:
  4399 ;;		_gameboard_init
  4400 ;;		_update_cursor
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function _get_current_char
  4406  0AD1                     _get_current_char:	
  4407  0AD1                     l2919:	
  4408                           ;incstack = 0
  4409                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4410                           
  4411                           
  4412                           ;concentration.c: 489:     current_char = visible[get_cursor_index(cursor_pos)];
  4413  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  4414  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  4415  0AD3  0865               	movf	_cursor_pos,w
  4416  0AD4  120A  118A  27F3  120A  158A  	fcall	_get_cursor_index
  4417  0AD9  3EA0               	addlw	(low (_visible| 0))& (0+255)
  4418  0ADA  0084               	movwf	4
  4419  0ADB  1383               	bcf	3,7	;select IRP bank1
  4420  0ADC  0800               	movf	0,w
  4421  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0ADF  00A1               	movwf	??_get_current_char
  4424  0AE0  0821               	movf	??_get_current_char,w
  4425  0AE1  00E4               	movwf	_current_char
  4426  0AE2                     l359:	
  4427  0AE2  0008               	return
  4428  0AE3                     __end_of_get_current_char:	
  4429                           
  4430                           	psect	text19
  4431  07F3                     __ptext19:	
  4432 ;; *************** function _get_cursor_index *****************
  4433 ;; Defined at:
  4434 ;;		line 309 in file "concentration.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  cursor          1    wreg     unsigned char 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  cursor          1    0[BANK0 ] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      unsigned char 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         0       0       0       0       0
  4449 ;;      Locals:         0       1       0       0       0
  4450 ;;      Temps:          0       0       0       0       0
  4451 ;;      Totals:         0       1       0       0       0
  4452 ;;Total ram usage:        1 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    1
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_check_for_match
  4459 ;;		_update_gameboard_from_input
  4460 ;;		_get_current_char
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _get_cursor_index
  4466  07F3                     _get_cursor_index:	
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  4470                           ;get_cursor_index@cursor stored from wreg
  4471  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  4472  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  4473  07F5  00A0               	movwf	get_cursor_index@cursor
  4474  07F6                     l2767:	
  4475                           
  4476                           ;concentration.c: 310:     if(cursor&0x40) {
  4477  07F6  1F20               	btfss	get_cursor_index@cursor,6
  4478  07F7  2FF9               	goto	u1761
  4479  07F8  2FFA               	goto	u1760
  4480  07F9                     u1761:	
  4481  07F9  2FFD               	goto	l2773
  4482  07FA                     u1760:	
  4483  07FA                     l2769:	
  4484                           
  4485                           ;concentration.c: 311:         return (cursor-0x30);
  4486  07FA  0820               	movf	get_cursor_index@cursor,w
  4487  07FB  3ED0               	addlw	208
  4488  07FC  2FFE               	goto	l276
  4489  07FD                     l2773:	
  4490                           
  4491                           ;concentration.c: 313:     return cursor;
  4492  07FD  0820               	movf	get_cursor_index@cursor,w
  4493  07FE                     l276:	
  4494  07FE  0008               	return
  4495  07FF                     __end_of_get_cursor_index:	
  4496                           
  4497                           	psect	text20
  4498  0C15                     __ptext20:	
  4499 ;; *************** function _game_end *****************
  4500 ;; Defined at:
  4501 ;;		line 212 in file "concentration.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4515 ;;      Params:         0       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0
  4517 ;;      Temps:          0       1       0       0       0
  4518 ;;      Totals:         0       1       0       0       0
  4519 ;;Total ram usage:        1 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    5
  4522 ;; This function calls:
  4523 ;;		_DelayMs
  4524 ;;		_end_screen
  4525 ;; This function is called by:
  4526 ;;		_main
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           
  4531                           ;psect for function _game_end
  4532  0C15                     _game_end:	
  4533  0C15                     l3333:	
  4534                           ;incstack = 0
  4535                           ; Regs used in _game_end: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4536                           
  4537                           
  4538                           ;concentration.c: 213:     DelayMs(1000);
  4539  0C15  30E8               	movlw	232
  4540  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0C18  00A0               	movwf	DelayMs@millis
  4543  0C19  3003               	movlw	3
  4544  0C1A  00A1               	movwf	DelayMs@millis+1
  4545  0C1B  120A  158A  231E  120A  158A  	fcall	_DelayMs
  4546  0C20                     l3335:	
  4547                           
  4548                           ;concentration.c: 214:     if(p1_score>p2_score) {
  4549  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  4550  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  4551  0C22  0860               	movf	_p1_score,w
  4552  0C23  025F               	subwf	_p2_score,w
  4553  0C24  1803               	skipnc
  4554  0C25  2C27               	goto	u2451
  4555  0C26  2C28               	goto	u2450
  4556  0C27                     u2451:	
  4557  0C27  2C33               	goto	l3339
  4558  0C28                     u2450:	
  4559  0C28                     l3337:	
  4560                           
  4561                           ;concentration.c: 215:         end_screen("    WINNER!!","    PLAYER 1");
  4562  0C28  307D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4563  0C29  00B9               	movwf	??_game_end
  4564  0C2A  0839               	movf	??_game_end,w
  4565  0C2B  00AC               	movwf	end_screen@second_row
  4566  0C2C  3070               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4567  0C2D  120A  118A  2048  120A  158A  	fcall	_end_screen
  4568                           
  4569                           ;concentration.c: 216:     } else if(p1_score<p2_score) {
  4570  0C32  2C4E               	goto	l3345
  4571  0C33                     l3339:	
  4572  0C33  085F               	movf	_p2_score,w
  4573  0C34  0260               	subwf	_p1_score,w
  4574  0C35  1803               	skipnc
  4575  0C36  2C38               	goto	u2461
  4576  0C37  2C39               	goto	u2460
  4577  0C38                     u2461:	
  4578  0C38  2C44               	goto	l3343
  4579  0C39                     u2460:	
  4580  0C39                     l3341:	
  4581                           
  4582                           ;concentration.c: 217:         end_screen("    WINNER!!","    PLAYER 2");
  4583  0C39  308A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4584  0C3A  00B9               	movwf	??_game_end
  4585  0C3B  0839               	movf	??_game_end,w
  4586  0C3C  00AC               	movwf	end_screen@second_row
  4587  0C3D  3070               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4588  0C3E  120A  118A  2048  120A  158A  	fcall	_end_screen
  4589                           
  4590                           ;concentration.c: 218:     } else {
  4591  0C43  2C4E               	goto	l3345
  4592  0C44                     l3343:	
  4593                           
  4594                           ;concentration.c: 219:         end_screen("   NO WINNER!","      TIED");
  4595  0C44  30B0               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4596  0C45  00B9               	movwf	??_game_end
  4597  0C46  0839               	movf	??_game_end,w
  4598  0C47  00AC               	movwf	end_screen@second_row
  4599  0C48  3062               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4600  0C49  120A  118A  2048  120A  158A  	fcall	_end_screen
  4601  0C4E                     l3345:	
  4602                           
  4603                           ;concentration.c: 221:     DelayMs(1000);
  4604  0C4E  30E8               	movlw	232
  4605  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  4606  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  4607  0C51  00A0               	movwf	DelayMs@millis
  4608  0C52  3003               	movlw	3
  4609  0C53  00A1               	movwf	DelayMs@millis+1
  4610  0C54  120A  158A  231E  120A  158A  	fcall	_DelayMs
  4611  0C59                     l230:	
  4612  0C59  0008               	return
  4613  0C5A                     __end_of_game_end:	
  4614                           
  4615                           	psect	text21
  4616  0048                     __ptext21:	
  4617 ;; *************** function _end_screen *****************
  4618 ;; Defined at:
  4619 ;;		line 156 in file "concentration.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  first_row       1    wreg     PTR const unsigned char 
  4622 ;;		 -> STR_5(14), STR_3(13), STR_1(13), 
  4623 ;;  second_row      1   12[BANK0 ] PTR unsigned char 
  4624 ;;		 -> STR_6(11), STR_4(13), STR_2(13), 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  first_row       1   22[BANK0 ] PTR const unsigned char 
  4627 ;;		 -> STR_5(14), STR_3(13), STR_1(13), 
  4628 ;;  colors          6   16[BANK0 ] unsigned char [6]
  4629 ;;  color_index     1   24[BANK0 ] unsigned char 
  4630 ;;  i               1   23[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       1       0       0       0
  4641 ;;      Locals:         0       9       0       0       0
  4642 ;;      Temps:          0       3       0       0       0
  4643 ;;      Totals:         0      13       0       0       0
  4644 ;;Total ram usage:       13 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    4
  4647 ;; This function calls:
  4648 ;;		_DelayMs
  4649 ;;		___awmod
  4650 ;;		_lcd_clear
  4651 ;;		_lcd_goto
  4652 ;;		_lcd_puts
  4653 ;;		_play_tone
  4654 ;;		_turn_on_led
  4655 ;; This function is called by:
  4656 ;;		_game_end
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _end_screen
  4662  0048                     _end_screen:	
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _end_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4666                           ;end_screen@first_row stored from wreg
  4667  0048  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0049  1303               	bcf	3,6	;RP1=0, select bank0
  4669  004A  00B6               	movwf	end_screen@first_row
  4670  004B                     l2921:	
  4671                           
  4672                           ;concentration.c: 157:     joystick_pressed = 1;
  4673  004B  01DD               	clrf	_joystick_pressed
  4674  004C  0ADD               	incf	_joystick_pressed,f
  4675  004D                     l2923:	
  4676                           
  4677                           ;concentration.c: 158:     char colors[] = {0,3,1,4,2,5};
  4678  004D  3030               	movlw	end_screen@colors& (0+255)
  4679  004E  0084               	movwf	4
  4680  004F  0866               	movf	end_screen@F1342,w
  4681  0050  1383               	bcf	3,7	;select IRP bank0
  4682  0051  0080               	movwf	0
  4683  0052  0A84               	incf	4,f
  4684  0053  0867               	movf	end_screen@F1342+1,w
  4685  0054  0080               	movwf	0
  4686  0055  0A84               	incf	4,f
  4687  0056  0868               	movf	end_screen@F1342+2,w
  4688  0057  0080               	movwf	0
  4689  0058  0A84               	incf	4,f
  4690  0059  0869               	movf	end_screen@F1342+3,w
  4691  005A  0080               	movwf	0
  4692  005B  0A84               	incf	4,f
  4693  005C  086A               	movf	end_screen@F1342+4,w
  4694  005D  0080               	movwf	0
  4695  005E  0A84               	incf	4,f
  4696  005F  086B               	movf	end_screen@F1342+5,w
  4697  0060  0080               	movwf	0
  4698  0061                     l2925:	
  4699                           
  4700                           ;concentration.c: 159:     char color_index = 0;
  4701  0061  01B8               	clrf	end_screen@color_index
  4702  0062                     l2927:	
  4703                           
  4704                           ;concentration.c: 160:     char i;;concentration.c: 161:     for(i=0;i<3;i++) {
  4705  0062  01B7               	clrf	end_screen@i
  4706  0063                     l2933:	
  4707                           
  4708                           ;concentration.c: 162:         turn_on_led(colors[color_index]);
  4709  0063  0838               	movf	end_screen@color_index,w
  4710  0064  3E30               	addlw	(low (end_screen@colors| 0))& (0+255)
  4711  0065  0084               	movwf	4
  4712  0066  1383               	bcf	3,7	;select IRP bank0
  4713  0067  0800               	movf	0,w
  4714  0068  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  4715  006D                     l2935:	
  4716                           
  4717                           ;concentration.c: 163:         color_index++;
  4718  006D  3001               	movlw	1
  4719  006E  1283               	bcf	3,5	;RP0=0, select bank0
  4720  006F  1303               	bcf	3,6	;RP1=0, select bank0
  4721  0070  00AD               	movwf	??_end_screen
  4722  0071  082D               	movf	??_end_screen,w
  4723  0072  07B8               	addwf	end_screen@color_index,f
  4724  0073                     l2937:	
  4725                           
  4726                           ;concentration.c: 164:         color_index %= 6;
  4727  0073  3006               	movlw	6
  4728  0074  00A0               	movwf	___awmod@divisor
  4729  0075  3000               	movlw	0
  4730  0076  00A1               	movwf	___awmod@divisor+1
  4731  0077  0838               	movf	end_screen@color_index,w
  4732  0078  00AD               	movwf	??_end_screen
  4733  0079  01AE               	clrf	??_end_screen+1
  4734  007A  082D               	movf	??_end_screen,w
  4735  007B  00A2               	movwf	___awmod@dividend
  4736  007C  082E               	movf	??_end_screen+1,w
  4737  007D  00A3               	movwf	___awmod@dividend+1
  4738  007E  120A  158A  25E0  120A  118A  	fcall	___awmod
  4739  0083  1283               	bcf	3,5	;RP0=0, select bank0
  4740  0084  1303               	bcf	3,6	;RP1=0, select bank0
  4741  0085  0820               	movf	?___awmod,w
  4742  0086  00AF               	movwf	??_end_screen+2
  4743  0087  082F               	movf	??_end_screen+2,w
  4744  0088  00B8               	movwf	end_screen@color_index
  4745  0089                     l2939:	
  4746                           
  4747                           ;concentration.c: 165:         play_tone(2009, 30);
  4748  0089  30D9               	movlw	217
  4749  008A  00A0               	movwf	play_tone@tone_period
  4750  008B  3007               	movlw	7
  4751  008C  00A1               	movwf	play_tone@tone_period+1
  4752  008D  301E               	movlw	30
  4753  008E  00AD               	movwf	??_end_screen
  4754  008F  082D               	movf	??_end_screen,w
  4755  0090  00A2               	movwf	play_tone@duration_8ms
  4756  0091  120A  158A  236F  120A  118A  	fcall	_play_tone
  4757  0096                     l2941:	
  4758                           
  4759                           ;concentration.c: 166:         turn_on_led(colors[color_index]);
  4760  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0098  0838               	movf	end_screen@color_index,w
  4763  0099  3E30               	addlw	(low (end_screen@colors| 0))& (0+255)
  4764  009A  0084               	movwf	4
  4765  009B  1383               	bcf	3,7	;select IRP bank0
  4766  009C  0800               	movf	0,w
  4767  009D  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  4768                           
  4769                           ;concentration.c: 167:         color_index++;
  4770  00A2  3001               	movlw	1
  4771  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  4772  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  4773  00A5  00AD               	movwf	??_end_screen
  4774  00A6  082D               	movf	??_end_screen,w
  4775  00A7  07B8               	addwf	end_screen@color_index,f
  4776  00A8                     l2943:	
  4777                           
  4778                           ;concentration.c: 168:         color_index %= 6;
  4779  00A8  3006               	movlw	6
  4780  00A9  00A0               	movwf	___awmod@divisor
  4781  00AA  3000               	movlw	0
  4782  00AB  00A1               	movwf	___awmod@divisor+1
  4783  00AC  0838               	movf	end_screen@color_index,w
  4784  00AD  00AD               	movwf	??_end_screen
  4785  00AE  01AE               	clrf	??_end_screen+1
  4786  00AF  082D               	movf	??_end_screen,w
  4787  00B0  00A2               	movwf	___awmod@dividend
  4788  00B1  082E               	movf	??_end_screen+1,w
  4789  00B2  00A3               	movwf	___awmod@dividend+1
  4790  00B3  120A  158A  25E0  120A  118A  	fcall	___awmod
  4791  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4792  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4793  00BA  0820               	movf	?___awmod,w
  4794  00BB  00AF               	movwf	??_end_screen+2
  4795  00BC  082F               	movf	??_end_screen+2,w
  4796  00BD  00B8               	movwf	end_screen@color_index
  4797  00BE                     l2945:	
  4798                           
  4799                           ;concentration.c: 169:         play_tone(1896, 30);
  4800  00BE  3068               	movlw	104
  4801  00BF  00A0               	movwf	play_tone@tone_period
  4802  00C0  3007               	movlw	7
  4803  00C1  00A1               	movwf	play_tone@tone_period+1
  4804  00C2  301E               	movlw	30
  4805  00C3  00AD               	movwf	??_end_screen
  4806  00C4  082D               	movf	??_end_screen,w
  4807  00C5  00A2               	movwf	play_tone@duration_8ms
  4808  00C6  120A  158A  236F  120A  118A  	fcall	_play_tone
  4809  00CB                     l2947:	
  4810                           
  4811                           ;concentration.c: 170:         turn_on_led(colors[color_index]);
  4812  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  4813  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  4814  00CD  0838               	movf	end_screen@color_index,w
  4815  00CE  3E30               	addlw	(low (end_screen@colors| 0))& (0+255)
  4816  00CF  0084               	movwf	4
  4817  00D0  1383               	bcf	3,7	;select IRP bank0
  4818  00D1  0800               	movf	0,w
  4819  00D2  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  4820  00D7                     l2949:	
  4821                           
  4822                           ;concentration.c: 171:         color_index++;
  4823  00D7  3001               	movlw	1
  4824  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  4825  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  4826  00DA  00AD               	movwf	??_end_screen
  4827  00DB  082D               	movf	??_end_screen,w
  4828  00DC  07B8               	addwf	end_screen@color_index,f
  4829  00DD                     l2951:	
  4830                           
  4831                           ;concentration.c: 172:         color_index %= 6;
  4832  00DD  3006               	movlw	6
  4833  00DE  00A0               	movwf	___awmod@divisor
  4834  00DF  3000               	movlw	0
  4835  00E0  00A1               	movwf	___awmod@divisor+1
  4836  00E1  0838               	movf	end_screen@color_index,w
  4837  00E2  00AD               	movwf	??_end_screen
  4838  00E3  01AE               	clrf	??_end_screen+1
  4839  00E4  082D               	movf	??_end_screen,w
  4840  00E5  00A2               	movwf	___awmod@dividend
  4841  00E6  082E               	movf	??_end_screen+1,w
  4842  00E7  00A3               	movwf	___awmod@dividend+1
  4843  00E8  120A  158A  25E0  120A  118A  	fcall	___awmod
  4844  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  4845  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  4846  00EF  0820               	movf	?___awmod,w
  4847  00F0  00AF               	movwf	??_end_screen+2
  4848  00F1  082F               	movf	??_end_screen+2,w
  4849  00F2  00B8               	movwf	end_screen@color_index
  4850  00F3                     l2953:	
  4851                           
  4852                           ;concentration.c: 173:         play_tone(1594, 30);
  4853  00F3  303A               	movlw	58
  4854  00F4  00A0               	movwf	play_tone@tone_period
  4855  00F5  3006               	movlw	6
  4856  00F6  00A1               	movwf	play_tone@tone_period+1
  4857  00F7  301E               	movlw	30
  4858  00F8  00AD               	movwf	??_end_screen
  4859  00F9  082D               	movf	??_end_screen,w
  4860  00FA  00A2               	movwf	play_tone@duration_8ms
  4861  00FB  120A  158A  236F  120A  118A  	fcall	_play_tone
  4862                           
  4863                           ;concentration.c: 174:         turn_on_led(colors[color_index]);
  4864  0100  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0101  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0102  0838               	movf	end_screen@color_index,w
  4867  0103  3E30               	addlw	(low (end_screen@colors| 0))& (0+255)
  4868  0104  0084               	movwf	4
  4869  0105  1383               	bcf	3,7	;select IRP bank0
  4870  0106  0800               	movf	0,w
  4871  0107  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  4872  010C                     l2955:	
  4873                           
  4874                           ;concentration.c: 175:         color_index++;
  4875  010C  3001               	movlw	1
  4876  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4877  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4878  010F  00AD               	movwf	??_end_screen
  4879  0110  082D               	movf	??_end_screen,w
  4880  0111  07B8               	addwf	end_screen@color_index,f
  4881  0112                     l2957:	
  4882                           
  4883                           ;concentration.c: 176:         color_index %= 6;
  4884  0112  3006               	movlw	6
  4885  0113  00A0               	movwf	___awmod@divisor
  4886  0114  3000               	movlw	0
  4887  0115  00A1               	movwf	___awmod@divisor+1
  4888  0116  0838               	movf	end_screen@color_index,w
  4889  0117  00AD               	movwf	??_end_screen
  4890  0118  01AE               	clrf	??_end_screen+1
  4891  0119  082D               	movf	??_end_screen,w
  4892  011A  00A2               	movwf	___awmod@dividend
  4893  011B  082E               	movf	??_end_screen+1,w
  4894  011C  00A3               	movwf	___awmod@dividend+1
  4895  011D  120A  158A  25E0  120A  118A  	fcall	___awmod
  4896  0122  1283               	bcf	3,5	;RP0=0, select bank0
  4897  0123  1303               	bcf	3,6	;RP1=0, select bank0
  4898  0124  0820               	movf	?___awmod,w
  4899  0125  00AF               	movwf	??_end_screen+2
  4900  0126  082F               	movf	??_end_screen+2,w
  4901  0127  00B8               	movwf	end_screen@color_index
  4902  0128                     l2959:	
  4903                           
  4904                           ;concentration.c: 177:         DelayMs(250);
  4905  0128  30FA               	movlw	250
  4906  0129  00A0               	movwf	DelayMs@millis
  4907  012A  3000               	movlw	0
  4908  012B  00A1               	movwf	DelayMs@millis+1
  4909  012C  120A  158A  231E  120A  118A  	fcall	_DelayMs
  4910  0131                     l2961:	
  4911                           
  4912                           ;concentration.c: 178:     }
  4913  0131  3001               	movlw	1
  4914  0132  1283               	bcf	3,5	;RP0=0, select bank0
  4915  0133  1303               	bcf	3,6	;RP1=0, select bank0
  4916  0134  00AD               	movwf	??_end_screen
  4917  0135  082D               	movf	??_end_screen,w
  4918  0136  07B7               	addwf	end_screen@i,f
  4919  0137                     l2963:	
  4920  0137  3003               	movlw	3
  4921  0138  0237               	subwf	end_screen@i,w
  4922  0139  1C03               	skipc
  4923  013A  293C               	goto	u2011
  4924  013B  293D               	goto	u2010
  4925  013C                     u2011:	
  4926  013C  2863               	goto	l2933
  4927  013D                     u2010:	
  4928  013D                     l2965:	
  4929                           
  4930                           ;concentration.c: 179:     turn_on_led(colors[color_index]);
  4931  013D  0838               	movf	end_screen@color_index,w
  4932  013E  3E30               	addlw	(low (end_screen@colors| 0))& (0+255)
  4933  013F  0084               	movwf	4
  4934  0140  1383               	bcf	3,7	;select IRP bank0
  4935  0141  0800               	movf	0,w
  4936  0142  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  4937  0147                     l2967:	
  4938                           
  4939                           ;concentration.c: 180:     color_index++;
  4940  0147  3001               	movlw	1
  4941  0148  1283               	bcf	3,5	;RP0=0, select bank0
  4942  0149  1303               	bcf	3,6	;RP1=0, select bank0
  4943  014A  00AD               	movwf	??_end_screen
  4944  014B  082D               	movf	??_end_screen,w
  4945  014C  07B8               	addwf	end_screen@color_index,f
  4946  014D                     l2969:	
  4947                           
  4948                           ;concentration.c: 181:     color_index %= 6;
  4949  014D  3006               	movlw	6
  4950  014E  00A0               	movwf	___awmod@divisor
  4951  014F  3000               	movlw	0
  4952  0150  00A1               	movwf	___awmod@divisor+1
  4953  0151  0838               	movf	end_screen@color_index,w
  4954  0152  00AD               	movwf	??_end_screen
  4955  0153  01AE               	clrf	??_end_screen+1
  4956  0154  082D               	movf	??_end_screen,w
  4957  0155  00A2               	movwf	___awmod@dividend
  4958  0156  082E               	movf	??_end_screen+1,w
  4959  0157  00A3               	movwf	___awmod@dividend+1
  4960  0158  120A  158A  25E0  120A  118A  	fcall	___awmod
  4961  015D  1283               	bcf	3,5	;RP0=0, select bank0
  4962  015E  1303               	bcf	3,6	;RP1=0, select bank0
  4963  015F  0820               	movf	?___awmod,w
  4964  0160  00AF               	movwf	??_end_screen+2
  4965  0161  082F               	movf	??_end_screen+2,w
  4966  0162  00B8               	movwf	end_screen@color_index
  4967  0163                     l2971:	
  4968                           
  4969                           ;concentration.c: 182:     play_tone(2389, 60);
  4970  0163  3055               	movlw	85
  4971  0164  00A0               	movwf	play_tone@tone_period
  4972  0165  3009               	movlw	9
  4973  0166  00A1               	movwf	play_tone@tone_period+1
  4974  0167  303C               	movlw	60
  4975  0168  00AD               	movwf	??_end_screen
  4976  0169  082D               	movf	??_end_screen,w
  4977  016A  00A2               	movwf	play_tone@duration_8ms
  4978  016B  120A  158A  236F  120A  118A  	fcall	_play_tone
  4979                           
  4980                           ;concentration.c: 183:     while(joystick_pressed==1) {
  4981  0170  2A17               	goto	l3009
  4982  0171                     l2973:	
  4983                           
  4984                           ;concentration.c: 184:         lcd_clear(gameboard);
  4985  0171  3005               	movlw	5
  4986  0172  00A8               	movwf	lcd_clear@port
  4987  0173  3000               	movlw	0
  4988  0174  00A9               	movwf	lcd_clear@port+1
  4989  0175  120A  158A  2337  120A  118A  	fcall	_lcd_clear
  4990                           
  4991                           ;concentration.c: 185:         lcd_puts(first_row,gameboard);
  4992  017A  3005               	movlw	5
  4993  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4994  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4995  017D  00A8               	movwf	lcd_puts@port
  4996  017E  3000               	movlw	0
  4997  017F  00A9               	movwf	lcd_puts@port+1
  4998  0180  0836               	movf	end_screen@first_row,w
  4999  0181  120A  158A  23BC  120A  118A  	fcall	_lcd_puts
  5000  0186                     l2975:	
  5001                           
  5002                           ;concentration.c: 186:         cursor_movable = 0;
  5003  0186  1283               	bcf	3,5	;RP0=0, select bank0
  5004  0187  1303               	bcf	3,6	;RP1=0, select bank0
  5005  0188  01E1               	clrf	_cursor_movable
  5006  0189                     l2977:	
  5007                           
  5008                           ;concentration.c: 187:         cursor_move_delay_count = 120;
  5009  0189  3078               	movlw	120
  5010  018A  00AD               	movwf	??_end_screen
  5011  018B  082D               	movf	??_end_screen,w
  5012  018C  00FA               	movwf	_cursor_move_delay_count
  5013                           
  5014                           ;concentration.c: 188:         while(cursor_movable == 0) {
  5015  018D  2993               	goto	l2981
  5016  018E                     l215:	
  5017                           
  5018                           ;concentration.c: 189:             if(RB5 == 0) {
  5019  018E  1A86               	btfsc	6,5	;volatile
  5020  018F  2991               	goto	u2021
  5021  0190  2992               	goto	u2020
  5022  0191                     u2021:	
  5023  0191  2993               	goto	l2981
  5024  0192                     u2020:	
  5025  0192                     l2979:	
  5026                           
  5027                           ;concentration.c: 190:                 joystick_pressed = 0;
  5028  0192  01DD               	clrf	_joystick_pressed
  5029  0193                     l2981:	
  5030                           
  5031                           ;concentration.c: 188:         while(cursor_movable == 0) {
  5032  0193  0861               	movf	_cursor_movable,w
  5033  0194  1903               	btfsc	3,2
  5034  0195  2997               	goto	u2031
  5035  0196  2998               	goto	u2030
  5036  0197                     u2031:	
  5037  0197  298E               	goto	l215
  5038  0198                     u2030:	
  5039  0198                     l2983:	
  5040                           
  5041                           ;concentration.c: 193:         turn_on_led(colors[color_index]);
  5042  0198  0838               	movf	end_screen@color_index,w
  5043  0199  3E30               	addlw	(low (end_screen@colors| 0))& (0+255)
  5044  019A  0084               	movwf	4
  5045  019B  1383               	bcf	3,7	;select IRP bank0
  5046  019C  0800               	movf	0,w
  5047  019D  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  5048  01A2                     l2985:	
  5049                           
  5050                           ;concentration.c: 194:         color_index++;
  5051  01A2  3001               	movlw	1
  5052  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  5053  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  5054  01A5  00AD               	movwf	??_end_screen
  5055  01A6  082D               	movf	??_end_screen,w
  5056  01A7  07B8               	addwf	end_screen@color_index,f
  5057  01A8                     l2987:	
  5058                           
  5059                           ;concentration.c: 195:         color_index %= 6;
  5060  01A8  3006               	movlw	6
  5061  01A9  00A0               	movwf	___awmod@divisor
  5062  01AA  3000               	movlw	0
  5063  01AB  00A1               	movwf	___awmod@divisor+1
  5064  01AC  0838               	movf	end_screen@color_index,w
  5065  01AD  00AD               	movwf	??_end_screen
  5066  01AE  01AE               	clrf	??_end_screen+1
  5067  01AF  082D               	movf	??_end_screen,w
  5068  01B0  00A2               	movwf	___awmod@dividend
  5069  01B1  082E               	movf	??_end_screen+1,w
  5070  01B2  00A3               	movwf	___awmod@dividend+1
  5071  01B3  120A  158A  25E0  120A  118A  	fcall	___awmod
  5072  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  5073  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  5074  01BA  0820               	movf	?___awmod,w
  5075  01BB  00AF               	movwf	??_end_screen+2
  5076  01BC  082F               	movf	??_end_screen+2,w
  5077  01BD  00B8               	movwf	end_screen@color_index
  5078  01BE                     l2989:	
  5079                           
  5080                           ;concentration.c: 196:         lcd_clear(gameboard);
  5081  01BE  3005               	movlw	5
  5082  01BF  00A8               	movwf	lcd_clear@port
  5083  01C0  3000               	movlw	0
  5084  01C1  00A9               	movwf	lcd_clear@port+1
  5085  01C2  120A  158A  2337  120A  118A  	fcall	_lcd_clear
  5086  01C7                     l2991:	
  5087                           
  5088                           ;concentration.c: 197:         lcd_goto(0x40,gameboard);
  5089  01C7  3005               	movlw	5
  5090  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  5091  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  5092  01CA  00A8               	movwf	lcd_goto@port
  5093  01CB  3000               	movlw	0
  5094  01CC  00A9               	movwf	lcd_goto@port+1
  5095  01CD  3040               	movlw	64
  5096  01CE  120A  158A  2351  120A  118A  	fcall	_lcd_goto
  5097  01D3                     l2993:	
  5098                           
  5099                           ;concentration.c: 198:         lcd_puts(second_row,gameboard);
  5100  01D3  3005               	movlw	5
  5101  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  5102  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  5103  01D6  00A8               	movwf	lcd_puts@port
  5104  01D7  3000               	movlw	0
  5105  01D8  00A9               	movwf	lcd_puts@port+1
  5106  01D9  082C               	movf	end_screen@second_row,w
  5107  01DA  120A  158A  23BC  120A  118A  	fcall	_lcd_puts
  5108  01DF                     l2995:	
  5109                           
  5110                           ;concentration.c: 199:         cursor_movable = 0;
  5111  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  5112  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  5113  01E1  01E1               	clrf	_cursor_movable
  5114  01E2                     l2997:	
  5115                           
  5116                           ;concentration.c: 200:         cursor_move_delay_count = 120;
  5117  01E2  3078               	movlw	120
  5118  01E3  00AD               	movwf	??_end_screen
  5119  01E4  082D               	movf	??_end_screen,w
  5120  01E5  00FA               	movwf	_cursor_move_delay_count
  5121                           
  5122                           ;concentration.c: 201:         while(cursor_movable == 0) {
  5123  01E6  29EC               	goto	l3001
  5124  01E7                     l219:	
  5125                           
  5126                           ;concentration.c: 202:             if(RB5 == 0) {
  5127  01E7  1A86               	btfsc	6,5	;volatile
  5128  01E8  29EA               	goto	u2041
  5129  01E9  29EB               	goto	u2040
  5130  01EA                     u2041:	
  5131  01EA  29EC               	goto	l3001
  5132  01EB                     u2040:	
  5133  01EB                     l2999:	
  5134                           
  5135                           ;concentration.c: 203:                 joystick_pressed = 0;
  5136  01EB  01DD               	clrf	_joystick_pressed
  5137  01EC                     l3001:	
  5138                           
  5139                           ;concentration.c: 201:         while(cursor_movable == 0) {
  5140  01EC  0861               	movf	_cursor_movable,w
  5141  01ED  1903               	btfsc	3,2
  5142  01EE  29F0               	goto	u2051
  5143  01EF  29F1               	goto	u2050
  5144  01F0                     u2051:	
  5145  01F0  29E7               	goto	l219
  5146  01F1                     u2050:	
  5147  01F1                     l3003:	
  5148                           
  5149                           ;concentration.c: 206:         turn_on_led(colors[color_index]);
  5150  01F1  0838               	movf	end_screen@color_index,w
  5151  01F2  3E30               	addlw	(low (end_screen@colors| 0))& (0+255)
  5152  01F3  0084               	movwf	4
  5153  01F4  1383               	bcf	3,7	;select IRP bank0
  5154  01F5  0800               	movf	0,w
  5155  01F6  120A  118A  27BF  120A  118A  	fcall	_turn_on_led
  5156  01FB                     l3005:	
  5157                           
  5158                           ;concentration.c: 207:         color_index++;
  5159  01FB  3001               	movlw	1
  5160  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  5161  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  5162  01FE  00AD               	movwf	??_end_screen
  5163  01FF  082D               	movf	??_end_screen,w
  5164  0200  07B8               	addwf	end_screen@color_index,f
  5165  0201                     l3007:	
  5166                           
  5167                           ;concentration.c: 208:         color_index %= 6;
  5168  0201  3006               	movlw	6
  5169  0202  00A0               	movwf	___awmod@divisor
  5170  0203  3000               	movlw	0
  5171  0204  00A1               	movwf	___awmod@divisor+1
  5172  0205  0838               	movf	end_screen@color_index,w
  5173  0206  00AD               	movwf	??_end_screen
  5174  0207  01AE               	clrf	??_end_screen+1
  5175  0208  082D               	movf	??_end_screen,w
  5176  0209  00A2               	movwf	___awmod@dividend
  5177  020A  082E               	movf	??_end_screen+1,w
  5178  020B  00A3               	movwf	___awmod@dividend+1
  5179  020C  120A  158A  25E0  120A  118A  	fcall	___awmod
  5180  0211  1283               	bcf	3,5	;RP0=0, select bank0
  5181  0212  1303               	bcf	3,6	;RP1=0, select bank0
  5182  0213  0820               	movf	?___awmod,w
  5183  0214  00AF               	movwf	??_end_screen+2
  5184  0215  082F               	movf	??_end_screen+2,w
  5185  0216  00B8               	movwf	end_screen@color_index
  5186  0217                     l3009:	
  5187                           
  5188                           ;concentration.c: 183:     while(joystick_pressed==1) {
  5189  0217  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0218  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0219  035D               	decf	_joystick_pressed,w
  5192  021A  1903               	btfsc	3,2
  5193  021B  2A1D               	goto	u2061
  5194  021C  2A1E               	goto	u2060
  5195  021D                     u2061:	
  5196  021D  2971               	goto	l2973
  5197  021E                     u2060:	
  5198  021E                     l223:	
  5199  021E  0008               	return
  5200  021F                     __end_of_end_screen:	
  5201                           
  5202                           	psect	text22
  5203  07BF                     __ptext22:	
  5204 ;; *************** function _turn_on_led *****************
  5205 ;; Defined at:
  5206 ;;		line 129 in file "concentration.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  color           1    wreg     unsigned char 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  color           1    2[BANK0 ] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5220 ;;      Params:         0       0       0       0       0
  5221 ;;      Locals:         0       1       0       0       0
  5222 ;;      Temps:          0       2       0       0       0
  5223 ;;      Totals:         0       3       0       0       0
  5224 ;;Total ram usage:        3 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    1
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_end_screen
  5231 ;;		_check_for_match
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _turn_on_led
  5237  07BF                     _turn_on_led:	
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _turn_on_led: [wreg-fsr0h+status,2+status,0]
  5241                           ;turn_on_led@color stored from wreg
  5242  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  5243  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  5244  07C1  00A2               	movwf	turn_on_led@color
  5245  07C2                     l2859:	
  5246                           
  5247                           ;concentration.c: 130:     PORTC &= 0x1F;
  5248  07C2  301F               	movlw	31
  5249  07C3  00A0               	movwf	??_turn_on_led
  5250  07C4  0820               	movf	??_turn_on_led,w
  5251  07C5  0587               	andwf	7,f	;volatile
  5252                           
  5253                           ;concentration.c: 131:     switch(color) {
  5254  07C6  2FD6               	goto	l2863
  5255  07C7                     l198:	
  5256                           ;concentration.c: 132:         case 0:
  5257                           
  5258                           
  5259                           ;concentration.c: 133:             RC5 = 1;
  5260  07C7  1687               	bsf	7,5	;volatile
  5261                           
  5262                           ;concentration.c: 134:             break;
  5263  07C8  2FF2               	goto	l205
  5264  07C9                     l200:	
  5265                           ;concentration.c: 135:         case 1:
  5266                           
  5267                           
  5268                           ;concentration.c: 136:             RC6 = 1;
  5269  07C9  1707               	bsf	7,6	;volatile
  5270                           
  5271                           ;concentration.c: 137:             break;
  5272  07CA  2FF2               	goto	l205
  5273  07CB                     l201:	
  5274                           ;concentration.c: 138:         case 2:
  5275                           
  5276                           
  5277                           ;concentration.c: 139:             RC7 = 1;
  5278  07CB  1787               	bsf	7,7	;volatile
  5279                           
  5280                           ;concentration.c: 140:             break;
  5281  07CC  2FF2               	goto	l205
  5282  07CD                     l202:	
  5283                           ;concentration.c: 141:         case 3:
  5284                           
  5285                           
  5286                           ;concentration.c: 142:             RC5 = 1;
  5287  07CD  1687               	bsf	7,5	;volatile
  5288                           
  5289                           ;concentration.c: 143:             RC6 = 1;
  5290  07CE  1707               	bsf	7,6	;volatile
  5291                           
  5292                           ;concentration.c: 144:             break;
  5293  07CF  2FF2               	goto	l205
  5294  07D0                     l203:	
  5295                           ;concentration.c: 145:         case 4:
  5296                           
  5297                           
  5298                           ;concentration.c: 146:             RC6 = 1;
  5299  07D0  1707               	bsf	7,6	;volatile
  5300                           
  5301                           ;concentration.c: 147:             RC7 = 1;
  5302  07D1  1787               	bsf	7,7	;volatile
  5303                           
  5304                           ;concentration.c: 148:             break;
  5305  07D2  2FF2               	goto	l205
  5306  07D3                     l204:	
  5307                           ;concentration.c: 149:         case 5:
  5308                           
  5309                           
  5310                           ;concentration.c: 150:             RC7 = 1;
  5311  07D3  1787               	bsf	7,7	;volatile
  5312                           
  5313                           ;concentration.c: 151:             RC5 = 1;
  5314  07D4  1687               	bsf	7,5	;volatile
  5315                           
  5316                           ;concentration.c: 152:             break;
  5317  07D5  2FF2               	goto	l205
  5318  07D6                     l2863:	
  5319  07D6  0822               	movf	turn_on_led@color,w
  5320  07D7  00A0               	movwf	??_turn_on_led
  5321  07D8  01A1               	clrf	??_turn_on_led+1
  5322                           
  5323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5324                           ; Switch size 1, requested type "simple"
  5325                           ; Number of cases is 1, Range of values is 0 to 0
  5326                           ; switch strategies available:
  5327                           ; Name         Instructions Cycles
  5328                           ; simple_byte            4     3 (average)
  5329                           ; direct_byte           11     8 (fixed)
  5330                           ; jumptable            260     6 (fixed)
  5331                           ;	Chosen strategy is simple_byte
  5332  07D9  0821               	movf	??_turn_on_led+1,w
  5333  07DA  3A00               	xorlw	0	; case 0
  5334  07DB  1903               	skipnz
  5335  07DC  2FDE               	goto	l3499
  5336  07DD  2FF2               	goto	l205
  5337  07DE                     l3499:	
  5338                           
  5339                           ; Switch size 1, requested type "simple"
  5340                           ; Number of cases is 6, Range of values is 0 to 5
  5341                           ; switch strategies available:
  5342                           ; Name         Instructions Cycles
  5343                           ; simple_byte           19    10 (average)
  5344                           ; direct_byte           26     8 (fixed)
  5345                           ; jumptable            260     6 (fixed)
  5346                           ;	Chosen strategy is simple_byte
  5347  07DE  0820               	movf	??_turn_on_led,w
  5348  07DF  3A00               	xorlw	0	; case 0
  5349  07E0  1903               	skipnz
  5350  07E1  2FC7               	goto	l198
  5351  07E2  3A01               	xorlw	1	; case 1
  5352  07E3  1903               	skipnz
  5353  07E4  2FC9               	goto	l200
  5354  07E5  3A03               	xorlw	3	; case 2
  5355  07E6  1903               	skipnz
  5356  07E7  2FCB               	goto	l201
  5357  07E8  3A01               	xorlw	1	; case 3
  5358  07E9  1903               	skipnz
  5359  07EA  2FCD               	goto	l202
  5360  07EB  3A07               	xorlw	7	; case 4
  5361  07EC  1903               	skipnz
  5362  07ED  2FD0               	goto	l203
  5363  07EE  3A01               	xorlw	1	; case 5
  5364  07EF  1903               	skipnz
  5365  07F0  2FD3               	goto	l204
  5366  07F1  2FF2               	goto	l205
  5367  07F2                     l205:	
  5368  07F2  0008               	return
  5369  07F3                     __end_of_turn_on_led:	
  5370                           
  5371                           	psect	text23
  5372  0B6F                     __ptext23:	
  5373 ;; *************** function _play_tone *****************
  5374 ;; Defined at:
  5375 ;;		line 492 in file "concentration.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  tone_period     2    0[BANK0 ] unsigned int 
  5378 ;;  duration_8ms    1    2[BANK0 ] unsigned char 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      void 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         0       3       0       0       0
  5391 ;;      Locals:         0       0       0       0       0
  5392 ;;      Temps:          0       2       0       0       0
  5393 ;;      Totals:         0       5       0       0       0
  5394 ;;Total ram usage:        5 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    1
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_end_screen
  5401 ;;		_check_for_match
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function _play_tone
  5407  0B6F                     _play_tone:	
  5408  0B6F                     l2869:	
  5409                           ;incstack = 0
  5410                           ; Regs used in _play_tone: [wreg+status,2+status,0]
  5411                           
  5412                           
  5413                           ;concentration.c: 493:     tone_delay = tone_period;
  5414  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5415  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5416  0B71  0821               	movf	play_tone@tone_period+1,w
  5417  0B72  00F7               	movwf	_tone_delay+1
  5418  0B73  0820               	movf	play_tone@tone_period,w
  5419  0B74  00F6               	movwf	_tone_delay
  5420  0B75                     l2871:	
  5421                           
  5422                           ;concentration.c: 494:     CCPR2 = TMR1+tone_period;
  5423  0B75  0820               	movf	play_tone@tone_period,w
  5424  0B76  070E               	addwf	14,w	;volatile
  5425  0B77  00A3               	movwf	??_play_tone
  5426  0B78  0821               	movf	play_tone@tone_period+1,w
  5427  0B79  1803               	skipnc
  5428  0B7A  0A21               	incf	play_tone@tone_period+1,w
  5429  0B7B  070F               	addwf	15,w	;volatile
  5430  0B7C  00A4               	movwf	??_play_tone+1
  5431  0B7D  0823               	movf	??_play_tone,w
  5432  0B7E  009B               	movwf	27	;volatile
  5433  0B7F  0824               	movf	??_play_tone+1,w
  5434  0B80  009C               	movwf	28	;volatile
  5435  0B81                     l2873:	
  5436                           
  5437                           ;concentration.c: 495:     CCP2IF = 0;
  5438  0B81  100D               	bcf	13,0	;volatile
  5439  0B82                     l2875:	
  5440                           
  5441                           ;concentration.c: 496:     CCP2IE = 1;
  5442  0B82  1683               	bsf	3,5	;RP0=1, select bank1
  5443  0B83  1303               	bcf	3,6	;RP1=0, select bank1
  5444  0B84  140D               	bsf	13,0	;volatile
  5445  0B85                     l2877:	
  5446                           
  5447                           ;concentration.c: 497:     cursor_move_delay_count = duration_8ms;
  5448  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5449  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5450  0B87  0822               	movf	play_tone@duration_8ms,w
  5451  0B88  00A3               	movwf	??_play_tone
  5452  0B89  0823               	movf	??_play_tone,w
  5453  0B8A  00FA               	movwf	_cursor_move_delay_count
  5454  0B8B                     l2879:	
  5455                           
  5456                           ;concentration.c: 498:     cursor_movable = 0;
  5457  0B8B  01E1               	clrf	_cursor_movable
  5458  0B8C                     l2881:	
  5459                           ;concentration.c: 499:     while(cursor_movable == 0);
  5460                           
  5461  0B8C  0861               	movf	_cursor_movable,w
  5462  0B8D  1903               	btfsc	3,2
  5463  0B8E  2B90               	goto	u1961
  5464  0B8F  2B91               	goto	u1960
  5465  0B90                     u1961:	
  5466  0B90  2B8C               	goto	l2881
  5467  0B91                     u1960:	
  5468  0B91                     l364:	
  5469                           
  5470                           ;concentration.c: 500:     CCP2IE = 0;
  5471  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  5472  0B92  1303               	bcf	3,6	;RP1=0, select bank1
  5473  0B93  100D               	bcf	13,0	;volatile
  5474  0B94                     l365:	
  5475  0B94  0008               	return
  5476  0B95                     __end_of_play_tone:	
  5477                           
  5478                           	psect	text24
  5479  0BBC                     __ptext24:	
  5480 ;; *************** function _lcd_puts *****************
  5481 ;; Defined at:
  5482 ;;		line 129 in file "lcd4bits.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  string          1    wreg     PTR const unsigned char 
  5485 ;;		 -> STR_12(7), STR_11(6), STR_10(12), STR_9(13), 
  5486 ;;		 -> STR_8(17), STR_7(16), STR_6(11), STR_5(14), 
  5487 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  5488 ;;  port            2    8[BANK0 ] PTR unsigned char 
  5489 ;;		 -> PORTD(1), PORTA(1), 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  string          1   11[BANK0 ] PTR const unsigned char 
  5492 ;;		 -> STR_12(7), STR_11(6), STR_10(12), STR_9(13), 
  5493 ;;		 -> STR_8(17), STR_7(16), STR_6(11), STR_5(14), 
  5494 ;;		 -> STR_4(13), STR_3(13), STR_2(13), STR_1(13), 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5504 ;;      Params:         0       2       0       0       0
  5505 ;;      Locals:         0       1       0       0       0
  5506 ;;      Temps:          0       1       0       0       0
  5507 ;;      Totals:         0       4       0       0       0
  5508 ;;Total ram usage:        4 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    3
  5511 ;; This function calls:
  5512 ;;		_lcd_write
  5513 ;; This function is called by:
  5514 ;;		_end_screen
  5515 ;;		_startup
  5516 ;;		_display_scoreboard
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function _lcd_puts
  5522  0BBC                     _lcd_puts:	
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5526                           ;lcd_puts@string stored from wreg
  5527  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  5528  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  5529  0BBE  00AB               	movwf	lcd_puts@string
  5530  0BBF                     l2753:	
  5531                           
  5532                           ;lcd4bits.c: 130:     while (*string != 0) {
  5533  0BBF  2BDA               	goto	l2759
  5534  0BC0                     l2755:	
  5535                           
  5536                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  5537  0BC0  082B               	movf	lcd_puts@string,w
  5538  0BC1  0084               	movwf	4
  5539  0BC2  120A  118A  2500  120A  158A  	fcall	stringdir
  5540  0BC7  00AA               	movwf	??_lcd_puts
  5541  0BC8  082A               	movf	??_lcd_puts,w
  5542  0BC9  00A2               	movwf	lcd_write@CmdChar
  5543  0BCA  0828               	movf	lcd_puts@port,w
  5544  0BCB  00A3               	movwf	lcd_write@port
  5545  0BCC  0829               	movf	lcd_puts@port+1,w
  5546  0BCD  00A4               	movwf	lcd_write@port+1
  5547  0BCE  3010               	movlw	16
  5548  0BCF  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  5549  0BD4                     l2757:	
  5550  0BD4  3001               	movlw	1
  5551  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  5553  0BD7  00AA               	movwf	??_lcd_puts
  5554  0BD8  082A               	movf	??_lcd_puts,w
  5555  0BD9  07AB               	addwf	lcd_puts@string,f
  5556  0BDA                     l2759:	
  5557                           
  5558                           ;lcd4bits.c: 130:     while (*string != 0) {
  5559  0BDA  082B               	movf	lcd_puts@string,w
  5560  0BDB  0084               	movwf	4
  5561  0BDC  120A  118A  2500  120A  158A  	fcall	stringdir
  5562  0BE1  3A00               	xorlw	0
  5563  0BE2  1D03               	skipz
  5564  0BE3  2BE5               	goto	u1751
  5565  0BE4  2BE6               	goto	u1750
  5566  0BE5                     u1751:	
  5567  0BE5  2BC0               	goto	l2755
  5568  0BE6                     u1750:	
  5569  0BE6                     l429:	
  5570  0BE6  0008               	return
  5571  0BE7                     __end_of_lcd_puts:	
  5572                           
  5573                           	psect	text25
  5574  0B51                     __ptext25:	
  5575 ;; *************** function _lcd_goto *****************
  5576 ;; Defined at:
  5577 ;;		line 146 in file "lcd4bits.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  position        1    wreg     unsigned char 
  5580 ;;  port            2    8[BANK0 ] PTR unsigned char 
  5581 ;;		 -> PORTD(1), PORTA(1), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  position        1   11[BANK0 ] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       2       0       0       0
  5594 ;;      Locals:         0       1       0       0       0
  5595 ;;      Temps:          0       1       0       0       0
  5596 ;;      Totals:         0       4       0       0       0
  5597 ;;Total ram usage:        4 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    3
  5600 ;; This function calls:
  5601 ;;		_DelayMs
  5602 ;;		_lcd_write
  5603 ;; This function is called by:
  5604 ;;		_end_screen
  5605 ;;		_startup
  5606 ;;		_display_scoreboard
  5607 ;;		_display_gameboard
  5608 ;;		_gameboard_init
  5609 ;;		_update_cursor
  5610 ;;		_toggle_cursor
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           
  5615                           ;psect for function _lcd_goto
  5616  0B51                     _lcd_goto:	
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5620                           ;lcd_goto@position stored from wreg
  5621  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0B53  00AB               	movwf	lcd_goto@position
  5624  0B54                     l2761:	
  5625                           
  5626                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  5627  0B54  082B               	movf	lcd_goto@position,w
  5628  0B55  3E80               	addlw	128
  5629  0B56  00AA               	movwf	??_lcd_goto
  5630  0B57  082A               	movf	??_lcd_goto,w
  5631  0B58  00A2               	movwf	lcd_write@CmdChar
  5632  0B59  0828               	movf	lcd_goto@port,w
  5633  0B5A  00A3               	movwf	lcd_write@port
  5634  0B5B  0829               	movf	lcd_goto@port+1,w
  5635  0B5C  00A4               	movwf	lcd_write@port+1
  5636  0B5D  3000               	movlw	0
  5637  0B5E  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  5638  0B63                     l2763:	
  5639                           
  5640                           ;lcd4bits.c: 149:     DelayMs(2);
  5641  0B63  3002               	movlw	2
  5642  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  5643  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  5644  0B66  00A0               	movwf	DelayMs@millis
  5645  0B67  3000               	movlw	0
  5646  0B68  00A1               	movwf	DelayMs@millis+1
  5647  0B69  120A  158A  231E  120A  158A  	fcall	_DelayMs
  5648  0B6E                     l435:	
  5649  0B6E  0008               	return
  5650  0B6F                     __end_of_lcd_goto:	
  5651                           
  5652                           	psect	text26
  5653  0B37                     __ptext26:	
  5654 ;; *************** function _lcd_clear *****************
  5655 ;; Defined at:
  5656 ;;		line 123 in file "lcd4bits.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  port            2    8[BANK0 ] PTR unsigned char 
  5659 ;;		 -> PORTD(1), PORTA(1), 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5671 ;;      Params:         0       2       0       0       0
  5672 ;;      Locals:         0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0
  5674 ;;      Totals:         0       2       0       0       0
  5675 ;;Total ram usage:        2 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    3
  5678 ;; This function calls:
  5679 ;;		_DelayMs
  5680 ;;		_lcd_write
  5681 ;; This function is called by:
  5682 ;;		_end_screen
  5683 ;;		_startup
  5684 ;;		_display_gameboard
  5685 ;;		_gameboard_init
  5686 ;;		_lcd_init
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function _lcd_clear
  5692  0B37                     _lcd_clear:	
  5693  0B37                     l2749:	
  5694                           ;incstack = 0
  5695                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5696                           
  5697                           
  5698                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  5699  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  5700  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  5701  0B39  01A2               	clrf	lcd_write@CmdChar
  5702  0B3A  0AA2               	incf	lcd_write@CmdChar,f
  5703  0B3B  0828               	movf	lcd_clear@port,w
  5704  0B3C  00A3               	movwf	lcd_write@port
  5705  0B3D  0829               	movf	lcd_clear@port+1,w
  5706  0B3E  00A4               	movwf	lcd_write@port+1
  5707  0B3F  3000               	movlw	0
  5708  0B40  120A  158A  24ED  120A  158A  	fcall	_lcd_write
  5709  0B45                     l2751:	
  5710                           
  5711                           ;lcd4bits.c: 125:     DelayMs(2);
  5712  0B45  3002               	movlw	2
  5713  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  5714  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  5715  0B48  00A0               	movwf	DelayMs@millis
  5716  0B49  3000               	movlw	0
  5717  0B4A  00A1               	movwf	DelayMs@millis+1
  5718  0B4B  120A  158A  231E  120A  158A  	fcall	_DelayMs
  5719  0B50                     l423:	
  5720  0B50  0008               	return
  5721  0B51                     __end_of_lcd_clear:	
  5722                           
  5723                           	psect	text27
  5724  0CED                     __ptext27:	
  5725 ;; *************** function _lcd_write *****************
  5726 ;; Defined at:
  5727 ;;		line 110 in file "lcd4bits.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  mode            1    wreg     unsigned char 
  5730 ;;  CmdChar         1    2[BANK0 ] unsigned char 
  5731 ;;  port            2    3[BANK0 ] PTR unsigned char 
  5732 ;;		 -> PORTD(1), PORTA(1), 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  mode            1    7[BANK0 ] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5744 ;;      Params:         0       3       0       0       0
  5745 ;;      Locals:         0       1       0       0       0
  5746 ;;      Temps:          0       2       0       0       0
  5747 ;;      Totals:         0       6       0       0       0
  5748 ;;Total ram usage:        6 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    2
  5751 ;; This function calls:
  5752 ;;		_Delay20us
  5753 ;; This function is called by:
  5754 ;;		_lcd_clear
  5755 ;;		_lcd_puts
  5756 ;;		_lcd_putch
  5757 ;;		_lcd_goto
  5758 ;;		_lcd_init
  5759 ;;		_lcd_set_custom_char
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function _lcd_write
  5765  0CED                     _lcd_write:	
  5766                           
  5767                           ;incstack = 0
  5768                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5769                           ;lcd_write@mode stored from wreg
  5770  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  5771  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  5772  0CEF  00A7               	movwf	lcd_write@mode
  5773  0CF0                     l2739:	
  5774                           
  5775                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  5776  0CF0  0822               	movf	lcd_write@CmdChar,w
  5777  0CF1  00A5               	movwf	??_lcd_write
  5778  0CF2  3004               	movlw	4
  5779  0CF3                     u1745:	
  5780  0CF3  1003               	clrc
  5781  0CF4  0CA5               	rrf	??_lcd_write,f
  5782  0CF5  3EFF               	addlw	-1
  5783  0CF6  1D03               	skipz
  5784  0CF7  2CF3               	goto	u1745
  5785  0CF8  0825               	movf	??_lcd_write,w
  5786  0CF9  3E20               	addlw	32
  5787  0CFA  0427               	iorwf	lcd_write@mode,w
  5788  0CFB  00A6               	movwf	??_lcd_write+1
  5789  0CFC  0823               	movf	lcd_write@port,w
  5790  0CFD  0084               	movwf	4
  5791  0CFE  1783               	bsf	3,7
  5792  0CFF  1C24               	btfss	lcd_write@port+1,0
  5793  0D00  1383               	bcf	3,7
  5794  0D01  0826               	movf	??_lcd_write+1,w
  5795  0D02  0080               	movwf	0
  5796  0D03                     l2741:	
  5797                           
  5798                           ;lcd4bits.c: 112:     Delay20us();
  5799  0D03  120A  118A  24F2  120A  158A  	fcall	_Delay20us
  5800  0D08                     l2743:	
  5801                           
  5802                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  5803  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  5804  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  5805  0D0A  0823               	movf	lcd_write@port,w
  5806  0D0B  0084               	movwf	4
  5807  0D0C  1783               	bsf	3,7
  5808  0D0D  1C24               	btfss	lcd_write@port+1,0
  5809  0D0E  1383               	bcf	3,7
  5810  0D0F  0800               	movf	0,w
  5811  0D10  39DF               	andlw	223
  5812  0D11  00A5               	movwf	??_lcd_write
  5813  0D12  0823               	movf	lcd_write@port,w
  5814  0D13  0084               	movwf	4
  5815  0D14  1783               	bsf	3,7
  5816  0D15  1C24               	btfss	lcd_write@port+1,0
  5817  0D16  1383               	bcf	3,7
  5818  0D17  0825               	movf	??_lcd_write,w
  5819  0D18  0080               	movwf	0
  5820  0D19                     l2745:	
  5821                           
  5822                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  5823  0D19  0822               	movf	lcd_write@CmdChar,w
  5824  0D1A  390F               	andlw	15
  5825  0D1B  3E20               	addlw	32
  5826  0D1C  0427               	iorwf	lcd_write@mode,w
  5827  0D1D  00A5               	movwf	??_lcd_write
  5828  0D1E  0823               	movf	lcd_write@port,w
  5829  0D1F  0084               	movwf	4
  5830  0D20  1783               	bsf	3,7
  5831  0D21  1C24               	btfss	lcd_write@port+1,0
  5832  0D22  1383               	bcf	3,7
  5833  0D23  0825               	movf	??_lcd_write,w
  5834  0D24  0080               	movwf	0
  5835  0D25                     l2747:	
  5836                           
  5837                           ;lcd4bits.c: 116:     Delay20us();
  5838  0D25  120A  118A  24F2  120A  158A  	fcall	_Delay20us
  5839                           
  5840                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  5841  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  5842  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  5843  0D2C  0823               	movf	lcd_write@port,w
  5844  0D2D  0084               	movwf	4
  5845  0D2E  1783               	bsf	3,7
  5846  0D2F  1C24               	btfss	lcd_write@port+1,0
  5847  0D30  1383               	bcf	3,7
  5848  0D31  0800               	movf	0,w
  5849  0D32  39DF               	andlw	223
  5850  0D33  00A5               	movwf	??_lcd_write
  5851  0D34  0823               	movf	lcd_write@port,w
  5852  0D35  0084               	movwf	4
  5853  0D36  1783               	bsf	3,7
  5854  0D37  1C24               	btfss	lcd_write@port+1,0
  5855  0D38  1383               	bcf	3,7
  5856  0D39  0825               	movf	??_lcd_write,w
  5857  0D3A  0080               	movwf	0
  5858  0D3B                     l420:	
  5859  0D3B  0008               	return
  5860  0D3C                     __end_of_lcd_write:	
  5861                           
  5862                           	psect	text28
  5863  04F2                     __ptext28:	
  5864 ;; *************** function _Delay20us *****************
  5865 ;; Defined at:
  5866 ;;		line 99 in file "lcd4bits.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  next            1    1[BANK0 ] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5880 ;;      Params:         0       0       0       0       0
  5881 ;;      Locals:         0       1       0       0       0
  5882 ;;      Temps:          0       1       0       0       0
  5883 ;;      Totals:         0       2       0       0       0
  5884 ;;Total ram usage:        2 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_lcd_write
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           
  5895                           ;psect for function _Delay20us
  5896  04F2                     _Delay20us:	
  5897  04F2                     l2719:	
  5898                           ;incstack = 0
  5899                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  5900                           
  5901                           
  5902                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  5903  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  5904  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  5905  04F4  01A1               	clrf	Delay20us@next
  5906  04F5                     l2725:	
  5907  04F5  3001               	movlw	1
  5908  04F6  00A0               	movwf	??_Delay20us
  5909  04F7  0820               	movf	??_Delay20us,w
  5910  04F8  07A1               	addwf	Delay20us@next,f
  5911  04F9                     l2727:	
  5912  04F9  3008               	movlw	8
  5913  04FA  0221               	subwf	Delay20us@next,w
  5914  04FB  1C03               	skipc
  5915  04FC  2CFE               	goto	u1711
  5916  04FD  2CFF               	goto	u1710
  5917  04FE                     u1711:	
  5918  04FE  2CF5               	goto	l2725
  5919  04FF                     u1710:	
  5920  04FF                     l417:	
  5921  04FF  0008               	return
  5922  0500                     __end_of_Delay20us:	
  5923                           
  5924                           	psect	text29
  5925  0B1E                     __ptext29:	
  5926 ;; *************** function _DelayMs *****************
  5927 ;; Defined at:
  5928 ;;		line 86 in file "lcd4bits.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  millis          2    0[BANK0 ] unsigned int 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       2       0       0       0
  5943 ;;      Locals:         0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0
  5945 ;;      Totals:         0       2       0       0       0
  5946 ;;Total ram usage:        2 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    1
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_end_screen
  5953 ;;		_game_end
  5954 ;;		_startup
  5955 ;;		_randomize_gameboard
  5956 ;;		_check_for_match
  5957 ;;		_update_gameboard_from_input
  5958 ;;		_lcd_clear
  5959 ;;		_lcd_goto
  5960 ;;		_lcd_init
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           
  5965                           ;psect for function _DelayMs
  5966  0B1E                     _DelayMs:	
  5967  0B1E                     l2729:	
  5968                           ;incstack = 0
  5969                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  5970                           
  5971                           
  5972                           ;lcd4bits.c: 87:     while (millis != 0) {
  5973  0B1E  2B2E               	goto	l2737
  5974  0B1F                     l2731:	
  5975                           
  5976                           ;lcd4bits.c: 88:         TMR0 = 100;
  5977  0B1F  3064               	movlw	100
  5978  0B20  0081               	movwf	1	;volatile
  5979  0B21                     l2733:	
  5980                           
  5981                           ;lcd4bits.c: 89:         T0IF = 0;
  5982  0B21  110B               	bcf	11,2	;volatile
  5983  0B22                     l408:	
  5984                           ;lcd4bits.c: 90:         while(T0IF == 0);
  5985                           
  5986  0B22  1D0B               	btfss	11,2	;volatile
  5987  0B23  2B25               	goto	u1721
  5988  0B24  2B26               	goto	u1720
  5989  0B25                     u1721:	
  5990  0B25  2B22               	goto	l408
  5991  0B26                     u1720:	
  5992  0B26                     l2735:	
  5993                           
  5994                           ;lcd4bits.c: 91:         millis--;
  5995  0B26  3001               	movlw	1
  5996  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  5997  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  5998  0B29  02A0               	subwf	DelayMs@millis,f
  5999  0B2A  3000               	movlw	0
  6000  0B2B  1C03               	skipc
  6001  0B2C  03A1               	decf	DelayMs@millis+1,f
  6002  0B2D  02A1               	subwf	DelayMs@millis+1,f
  6003  0B2E                     l2737:	
  6004                           
  6005                           ;lcd4bits.c: 87:     while (millis != 0) {
  6006  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  6007  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  6008  0B30  0820               	movf	DelayMs@millis,w
  6009  0B31  0421               	iorwf	DelayMs@millis+1,w
  6010  0B32  1D03               	btfss	3,2
  6011  0B33  2B35               	goto	u1731
  6012  0B34  2B36               	goto	u1730
  6013  0B35                     u1731:	
  6014  0B35  2B1F               	goto	l2731
  6015  0B36                     u1730:	
  6016  0B36                     l412:	
  6017  0B36  0008               	return
  6018  0B37                     __end_of_DelayMs:	
  6019                           
  6020                           	psect	text30
  6021  0DE0                     __ptext30:	
  6022 ;; *************** function ___awmod *****************
  6023 ;; Defined at:
  6024 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  divisor         2    0[BANK0 ] int 
  6027 ;;  dividend        2    2[BANK0 ] int 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;  sign            1    6[BANK0 ] unsigned char 
  6030 ;;  counter         1    5[BANK0 ] unsigned char 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  2    0[BANK0 ] int 
  6033 ;; Registers used:
  6034 ;;		wreg, status,2, status,0
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6040 ;;      Params:         0       4       0       0       0
  6041 ;;      Locals:         0       2       0       0       0
  6042 ;;      Temps:          0       1       0       0       0
  6043 ;;      Totals:         0       7       0       0       0
  6044 ;;Total ram usage:        7 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    1
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_end_screen
  6051 ;;		_display_scoreboard
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           
  6056                           ;psect for function ___awmod
  6057  0DE0                     ___awmod:	
  6058  0DE0                     l2821:	
  6059                           ;incstack = 0
  6060                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6061                           
  6062  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  6063  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  6064  0DE2  01A6               	clrf	___awmod@sign
  6065  0DE3                     l2823:	
  6066  0DE3  1FA3               	btfss	___awmod@dividend+1,7
  6067  0DE4  2DE6               	goto	u1871
  6068  0DE5  2DE7               	goto	u1870
  6069  0DE6                     u1871:	
  6070  0DE6  2DEE               	goto	l2829
  6071  0DE7                     u1870:	
  6072  0DE7                     l2825:	
  6073  0DE7  09A2               	comf	___awmod@dividend,f
  6074  0DE8  09A3               	comf	___awmod@dividend+1,f
  6075  0DE9  0AA2               	incf	___awmod@dividend,f
  6076  0DEA  1903               	skipnz
  6077  0DEB  0AA3               	incf	___awmod@dividend+1,f
  6078  0DEC                     l2827:	
  6079  0DEC  01A6               	clrf	___awmod@sign
  6080  0DED  0AA6               	incf	___awmod@sign,f
  6081  0DEE                     l2829:	
  6082  0DEE  1FA1               	btfss	___awmod@divisor+1,7
  6083  0DEF  2DF1               	goto	u1881
  6084  0DF0  2DF2               	goto	u1880
  6085  0DF1                     u1881:	
  6086  0DF1  2DF7               	goto	l2833
  6087  0DF2                     u1880:	
  6088  0DF2                     l2831:	
  6089  0DF2  09A0               	comf	___awmod@divisor,f
  6090  0DF3  09A1               	comf	___awmod@divisor+1,f
  6091  0DF4  0AA0               	incf	___awmod@divisor,f
  6092  0DF5  1903               	skipnz
  6093  0DF6  0AA1               	incf	___awmod@divisor+1,f
  6094  0DF7                     l2833:	
  6095  0DF7  0820               	movf	___awmod@divisor,w
  6096  0DF8  0421               	iorwf	___awmod@divisor+1,w
  6097  0DF9  1903               	btfsc	3,2
  6098  0DFA  2DFC               	goto	u1891
  6099  0DFB  2DFD               	goto	u1890
  6100  0DFC                     u1891:	
  6101  0DFC  2E2C               	goto	l2851
  6102  0DFD                     u1890:	
  6103  0DFD                     l2835:	
  6104  0DFD  01A5               	clrf	___awmod@counter
  6105  0DFE  0AA5               	incf	___awmod@counter,f
  6106  0DFF  2E0B               	goto	l2841
  6107  0E00                     l2837:	
  6108  0E00  3001               	movlw	1
  6109  0E01                     u1905:	
  6110  0E01  1003               	clrc
  6111  0E02  0DA0               	rlf	___awmod@divisor,f
  6112  0E03  0DA1               	rlf	___awmod@divisor+1,f
  6113  0E04  3EFF               	addlw	-1
  6114  0E05  1D03               	skipz
  6115  0E06  2E01               	goto	u1905
  6116  0E07                     l2839:	
  6117  0E07  3001               	movlw	1
  6118  0E08  00A4               	movwf	??___awmod
  6119  0E09  0824               	movf	??___awmod,w
  6120  0E0A  07A5               	addwf	___awmod@counter,f
  6121  0E0B                     l2841:	
  6122  0E0B  1FA1               	btfss	___awmod@divisor+1,7
  6123  0E0C  2E0E               	goto	u1911
  6124  0E0D  2E0F               	goto	u1910
  6125  0E0E                     u1911:	
  6126  0E0E  2E00               	goto	l2837
  6127  0E0F                     u1910:	
  6128  0E0F                     l2843:	
  6129  0E0F  0821               	movf	___awmod@divisor+1,w
  6130  0E10  0223               	subwf	___awmod@dividend+1,w
  6131  0E11  1D03               	skipz
  6132  0E12  2E15               	goto	u1925
  6133  0E13  0820               	movf	___awmod@divisor,w
  6134  0E14  0222               	subwf	___awmod@dividend,w
  6135  0E15                     u1925:	
  6136  0E15  1C03               	skipc
  6137  0E16  2E18               	goto	u1921
  6138  0E17  2E19               	goto	u1920
  6139  0E18                     u1921:	
  6140  0E18  2E1F               	goto	l2847
  6141  0E19                     u1920:	
  6142  0E19                     l2845:	
  6143  0E19  0820               	movf	___awmod@divisor,w
  6144  0E1A  02A2               	subwf	___awmod@dividend,f
  6145  0E1B  0821               	movf	___awmod@divisor+1,w
  6146  0E1C  1C03               	skipc
  6147  0E1D  03A3               	decf	___awmod@dividend+1,f
  6148  0E1E  02A3               	subwf	___awmod@dividend+1,f
  6149  0E1F                     l2847:	
  6150  0E1F  3001               	movlw	1
  6151  0E20                     u1935:	
  6152  0E20  1003               	clrc
  6153  0E21  0CA1               	rrf	___awmod@divisor+1,f
  6154  0E22  0CA0               	rrf	___awmod@divisor,f
  6155  0E23  3EFF               	addlw	-1
  6156  0E24  1D03               	skipz
  6157  0E25  2E20               	goto	u1935
  6158  0E26                     l2849:	
  6159  0E26  3001               	movlw	1
  6160  0E27  02A5               	subwf	___awmod@counter,f
  6161  0E28  1D03               	btfss	3,2
  6162  0E29  2E2B               	goto	u1941
  6163  0E2A  2E2C               	goto	u1940
  6164  0E2B                     u1941:	
  6165  0E2B  2E0F               	goto	l2843
  6166  0E2C                     u1940:	
  6167  0E2C                     l2851:	
  6168  0E2C  0826               	movf	___awmod@sign,w
  6169  0E2D  1903               	btfsc	3,2
  6170  0E2E  2E30               	goto	u1951
  6171  0E2F  2E31               	goto	u1950
  6172  0E30                     u1951:	
  6173  0E30  2E36               	goto	l2855
  6174  0E31                     u1950:	
  6175  0E31                     l2853:	
  6176  0E31  09A2               	comf	___awmod@dividend,f
  6177  0E32  09A3               	comf	___awmod@dividend+1,f
  6178  0E33  0AA2               	incf	___awmod@dividend,f
  6179  0E34  1903               	skipnz
  6180  0E35  0AA3               	incf	___awmod@dividend+1,f
  6181  0E36                     l2855:	
  6182  0E36  0823               	movf	___awmod@dividend+1,w
  6183  0E37  00A1               	movwf	?___awmod+1
  6184  0E38  0822               	movf	___awmod@dividend,w
  6185  0E39  00A0               	movwf	?___awmod
  6186  0E3A                     l695:	
  6187  0E3A  0008               	return
  6188  0E3B                     __end_of___awmod:	
  6189                           
  6190                           	psect	text31
  6191  0698                     __ptext31:	
  6192 ;; *************** function _interrupt_handler *****************
  6193 ;; Defined at:
  6194 ;;		line 540 in file "concentration.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;		None
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  current_anal    1    5[COMMON] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6208 ;;      Params:         0       0       0       0       0
  6209 ;;      Locals:         1       0       0       0       0
  6210 ;;      Temps:          5       0       0       0       0
  6211 ;;      Totals:         6       0       0       0       0
  6212 ;;Total ram usage:        6 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		Interrupt level 1
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           
  6222                           ;psect for function _interrupt_handler
  6223  0698                     _interrupt_handler:	
  6224  0698                     i1l2549:	
  6225                           
  6226                           ;concentration.c: 541:     if((CCP2IF==1) && (CCP2IE==1)) {
  6227  0698  1283               	bcf	3,5	;RP0=0, select bank0
  6228  0699  1303               	bcf	3,6	;RP1=0, select bank0
  6229  069A  1C0D               	btfss	13,0	;volatile
  6230  069B  2E9D               	goto	u163_21
  6231  069C  2E9E               	goto	u163_20
  6232  069D                     u163_21:	
  6233  069D  2EB4               	goto	i1l376
  6234  069E                     u163_20:	
  6235  069E                     i1l2551:	
  6236  069E  1683               	bsf	3,5	;RP0=1, select bank1
  6237  069F  1303               	bcf	3,6	;RP1=0, select bank1
  6238  06A0  1C0D               	btfss	13,0	;volatile
  6239  06A1  2EA3               	goto	u164_21
  6240  06A2  2EA4               	goto	u164_20
  6241  06A3                     u164_21:	
  6242  06A3  2EB4               	goto	i1l376
  6243  06A4                     u164_20:	
  6244  06A4                     i1l2553:	
  6245                           
  6246                           ;concentration.c: 542:         CCPR2 += tone_delay;
  6247  06A4  0876               	movf	_tone_delay,w	;volatile
  6248  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  6249  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  6250  06A7  079B               	addwf	27,f	;volatile
  6251  06A8  1803               	skipnc
  6252  06A9  0A9C               	incf	28,f	;volatile
  6253  06AA  0877               	movf	_tone_delay+1,w	;volatile
  6254  06AB  079C               	addwf	28,f	;volatile
  6255  06AC                     i1l2555:	
  6256                           
  6257                           ;concentration.c: 543:         if(CCP2M0 == 1) {
  6258  06AC  1C1D               	btfss	29,0	;volatile
  6259  06AD  2EAF               	goto	u165_21
  6260  06AE  2EB0               	goto	u165_20
  6261  06AF                     u165_21:	
  6262  06AF  2EB2               	goto	i1l377
  6263  06B0                     u165_20:	
  6264  06B0                     i1l2557:	
  6265                           
  6266                           ;concentration.c: 544:             CCP2M0 = 0;
  6267  06B0  101D               	bcf	29,0	;volatile
  6268                           
  6269                           ;concentration.c: 545:         } else {
  6270  06B1  2EB3               	goto	i1l378
  6271  06B2                     i1l377:	
  6272                           
  6273                           ;concentration.c: 546:             CCP2M0 = 1;
  6274  06B2  141D               	bsf	29,0	;volatile
  6275  06B3                     i1l378:	
  6276                           ;concentration.c: 547:         }
  6277                           
  6278                           
  6279                           ;concentration.c: 548:         CCP2IF = 0;
  6280  06B3  100D               	bcf	13,0	;volatile
  6281  06B4                     i1l376:	
  6282                           ;concentration.c: 549:     }
  6283                           
  6284                           
  6285                           ;concentration.c: 550:     if(ADIF) {
  6286  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  6287  06B5  1F0C               	btfss	12,6	;volatile
  6288  06B6  2EB8               	goto	u166_21
  6289  06B7  2EB9               	goto	u166_20
  6290  06B8                     u166_21:	
  6291  06B8  2F15               	goto	i1l379
  6292  06B9                     u166_20:	
  6293  06B9                     i1l2559:	
  6294                           
  6295                           ;concentration.c: 551:         char current_analog = ADCON0&0x3C;
  6296  06B9  081F               	movf	31,w	;volatile
  6297  06BA  393C               	andlw	60
  6298  06BB  00F0               	movwf	??_interrupt_handler
  6299  06BC  0870               	movf	??_interrupt_handler,w
  6300  06BD  00F5               	movwf	interrupt_handler@current_analog
  6301  06BE                     i1l2561:	
  6302                           
  6303                           ;concentration.c: 552:         ADCON0 &= 0xC3;
  6304  06BE  30C3               	movlw	195
  6305  06BF  00F0               	movwf	??_interrupt_handler
  6306  06C0  0870               	movf	??_interrupt_handler,w
  6307  06C1  059F               	andwf	31,f	;volatile
  6308  06C2                     i1l2563:	
  6309                           
  6310                           ;concentration.c: 553:         if(((current_analog) == 0x2C)||((current_analog) == 0x28)
      +                          ) {
  6311  06C2  302C               	movlw	44
  6312  06C3  0675               	xorwf	interrupt_handler@current_analog,w
  6313  06C4  1903               	btfsc	3,2
  6314  06C5  2EC7               	goto	u167_21
  6315  06C6  2EC8               	goto	u167_20
  6316  06C7                     u167_21:	
  6317  06C7  2ECE               	goto	i1l2567
  6318  06C8                     u167_20:	
  6319  06C8                     i1l2565:	
  6320  06C8  3028               	movlw	40
  6321  06C9  0675               	xorwf	interrupt_handler@current_analog,w
  6322  06CA  1D03               	btfss	3,2
  6323  06CB  2ECD               	goto	u168_21
  6324  06CC  2ECE               	goto	u168_20
  6325  06CD                     u168_21:	
  6326  06CD  2EF1               	goto	i1l2577
  6327  06CE                     u168_20:	
  6328  06CE                     i1l2567:	
  6329                           
  6330                           ;concentration.c: 554:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  6331  06CE  081E               	movf	30,w	;volatile
  6332  06CF  00DA               	movwf	_joystick_x_pos+1
  6333  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  6334  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  6335  06D2  081E               	movf	30,w	;volatile
  6336  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  6337  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  6338  06D5  00D9               	movwf	_joystick_x_pos
  6339                           
  6340                           ;concentration.c: 555:             switch(current_player) {
  6341  06D6  2EE1               	goto	i1l2575
  6342  06D7                     i1l2569:	
  6343                           
  6344                           ;concentration.c: 557:                     ADCON0 |= 0x24;
  6345  06D7  3024               	movlw	36
  6346  06D8  00F0               	movwf	??_interrupt_handler
  6347  06D9  0870               	movf	??_interrupt_handler,w
  6348  06DA  049F               	iorwf	31,f	;volatile
  6349                           
  6350                           ;concentration.c: 558:                     break;
  6351  06DB  2F14               	goto	i1l387
  6352  06DC                     i1l2571:	
  6353                           
  6354                           ;concentration.c: 560:                     ADCON0 |= 0x30;
  6355  06DC  3030               	movlw	48
  6356  06DD  00F0               	movwf	??_interrupt_handler
  6357  06DE  0870               	movf	??_interrupt_handler,w
  6358  06DF  049F               	iorwf	31,f	;volatile
  6359                           
  6360                           ;concentration.c: 561:                     break;
  6361  06E0  2F14               	goto	i1l387
  6362  06E1                     i1l2575:	
  6363  06E1  085C               	movf	_current_player,w
  6364  06E2  00F0               	movwf	??_interrupt_handler
  6365  06E3  01F1               	clrf	??_interrupt_handler+1
  6366                           
  6367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6368                           ; Switch size 1, requested type "simple"
  6369                           ; Number of cases is 1, Range of values is 0 to 0
  6370                           ; switch strategies available:
  6371                           ; Name         Instructions Cycles
  6372                           ; simple_byte            4     3 (average)
  6373                           ; direct_byte           11     8 (fixed)
  6374                           ; jumptable            260     6 (fixed)
  6375                           ;	Chosen strategy is simple_byte
  6376  06E4  0871               	movf	??_interrupt_handler+1,w
  6377  06E5  3A00               	xorlw	0	; case 0
  6378  06E6  1903               	skipnz
  6379  06E7  2EE9               	goto	i1l3501
  6380  06E8  2F14               	goto	i1l387
  6381  06E9                     i1l3501:	
  6382                           
  6383                           ; Switch size 1, requested type "simple"
  6384                           ; Number of cases is 2, Range of values is 0 to 1
  6385                           ; switch strategies available:
  6386                           ; Name         Instructions Cycles
  6387                           ; simple_byte            7     4 (average)
  6388                           ; direct_byte           14     8 (fixed)
  6389                           ; jumptable            260     6 (fixed)
  6390                           ;	Chosen strategy is simple_byte
  6391  06E9  0870               	movf	??_interrupt_handler,w
  6392  06EA  3A00               	xorlw	0	; case 0
  6393  06EB  1903               	skipnz
  6394  06EC  2ED7               	goto	i1l2569
  6395  06ED  3A01               	xorlw	1	; case 1
  6396  06EE  1903               	skipnz
  6397  06EF  2EDC               	goto	i1l2571
  6398  06F0  2F14               	goto	i1l387
  6399  06F1                     i1l2577:	
  6400                           
  6401                           ;concentration.c: 564:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  6402  06F1  081E               	movf	30,w	;volatile
  6403  06F2  00D8               	movwf	_joystick_y_pos+1
  6404  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  6405  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  6406  06F5  081E               	movf	30,w	;volatile
  6407  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  6408  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  6409  06F8  00D7               	movwf	_joystick_y_pos
  6410                           
  6411                           ;concentration.c: 565:             switch(current_player) {
  6412  06F9  2F04               	goto	i1l2585
  6413  06FA                     i1l2579:	
  6414                           
  6415                           ;concentration.c: 567:                     ADCON0 |= 0x2C;
  6416  06FA  302C               	movlw	44
  6417  06FB  00F0               	movwf	??_interrupt_handler
  6418  06FC  0870               	movf	??_interrupt_handler,w
  6419  06FD  049F               	iorwf	31,f	;volatile
  6420                           
  6421                           ;concentration.c: 568:                     break;
  6422  06FE  2F14               	goto	i1l387
  6423  06FF                     i1l2581:	
  6424                           
  6425                           ;concentration.c: 570:                     ADCON0 |= 0x28;
  6426  06FF  3028               	movlw	40
  6427  0700  00F0               	movwf	??_interrupt_handler
  6428  0701  0870               	movf	??_interrupt_handler,w
  6429  0702  049F               	iorwf	31,f	;volatile
  6430                           
  6431                           ;concentration.c: 571:                     break;
  6432  0703  2F14               	goto	i1l387
  6433  0704                     i1l2585:	
  6434  0704  085C               	movf	_current_player,w
  6435  0705  00F0               	movwf	??_interrupt_handler
  6436  0706  01F1               	clrf	??_interrupt_handler+1
  6437                           
  6438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6439                           ; Switch size 1, requested type "simple"
  6440                           ; Number of cases is 1, Range of values is 0 to 0
  6441                           ; switch strategies available:
  6442                           ; Name         Instructions Cycles
  6443                           ; simple_byte            4     3 (average)
  6444                           ; direct_byte           11     8 (fixed)
  6445                           ; jumptable            260     6 (fixed)
  6446                           ;	Chosen strategy is simple_byte
  6447  0707  0871               	movf	??_interrupt_handler+1,w
  6448  0708  3A00               	xorlw	0	; case 0
  6449  0709  1903               	skipnz
  6450  070A  2F0C               	goto	i1l3503
  6451  070B  2F14               	goto	i1l387
  6452  070C                     i1l3503:	
  6453                           
  6454                           ; Switch size 1, requested type "simple"
  6455                           ; Number of cases is 2, Range of values is 0 to 1
  6456                           ; switch strategies available:
  6457                           ; Name         Instructions Cycles
  6458                           ; simple_byte            7     4 (average)
  6459                           ; direct_byte           14     8 (fixed)
  6460                           ; jumptable            260     6 (fixed)
  6461                           ;	Chosen strategy is simple_byte
  6462  070C  0870               	movf	??_interrupt_handler,w
  6463  070D  3A00               	xorlw	0	; case 0
  6464  070E  1903               	skipnz
  6465  070F  2EFA               	goto	i1l2579
  6466  0710  3A01               	xorlw	1	; case 1
  6467  0711  1903               	skipnz
  6468  0712  2EFF               	goto	i1l2581
  6469  0713  2F14               	goto	i1l387
  6470  0714                     i1l387:	
  6471                           ;concentration.c: 573:         }
  6472                           
  6473                           
  6474                           ;concentration.c: 574:         ADIF = 0;
  6475  0714  130C               	bcf	12,6	;volatile
  6476  0715                     i1l379:	
  6477                           ;concentration.c: 575:     }
  6478                           
  6479                           
  6480                           ;concentration.c: 576:     if(TMR2IF) {
  6481  0715  1C8C               	btfss	12,1	;volatile
  6482  0716  2F18               	goto	u169_21
  6483  0717  2F19               	goto	u169_20
  6484  0718                     u169_21:	
  6485  0718  2F23               	goto	i1l394
  6486  0719                     u169_20:	
  6487  0719                     i1l2587:	
  6488                           
  6489                           ;concentration.c: 577:         cursor_move_delay_count--;
  6490  0719  3001               	movlw	1
  6491  071A  02FA               	subwf	_cursor_move_delay_count,f
  6492                           
  6493                           ;concentration.c: 578:         if(cursor_move_delay_count == 0) {
  6494  071B  087A               	movf	_cursor_move_delay_count,w
  6495  071C  1D03               	btfss	3,2
  6496  071D  2F1F               	goto	u170_21
  6497  071E  2F20               	goto	u170_20
  6498  071F                     u170_21:	
  6499  071F  2F22               	goto	i1l393
  6500  0720                     u170_20:	
  6501  0720                     i1l2589:	
  6502                           
  6503                           ;concentration.c: 579:             cursor_movable = 1;
  6504  0720  01E1               	clrf	_cursor_movable
  6505  0721  0AE1               	incf	_cursor_movable,f
  6506  0722                     i1l393:	
  6507                           ;concentration.c: 580:         }
  6508                           
  6509                           
  6510                           ;concentration.c: 581:         TMR2IF = 0;
  6511  0722  108C               	bcf	12,1	;volatile
  6512  0723                     i1l394:	
  6513  0723  0874               	movf	??_interrupt_handler+4,w
  6514  0724  008A               	movwf	10
  6515  0725  0873               	movf	??_interrupt_handler+3,w
  6516  0726  0084               	movwf	4
  6517  0727  0E72               	swapf	(??_interrupt_handler+2)^(0+4294967168),w
  6518  0728  0083               	movwf	3
  6519  0729  0EFE               	swapf	btemp,f
  6520  072A  0E7E               	swapf	btemp,w
  6521  072B  0009               	retfie
  6522  072C                     __end_of_interrupt_handler:	
  6523  007E                     btemp	set	126	;btemp
  6524  007E                     wtemp0	set	126
  6525                           
  6526                           	psect	intentry
  6527  0004                     __pintentry:	
  6528                           ;incstack = 0
  6529                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0]
  6530                           
  6531  0004                     interrupt_function:	
  6532  007E                     saved_w	set	btemp
  6533  0004  00FE               	movwf	btemp
  6534  0005  0E03               	swapf	3,w
  6535  0006  00F2               	movwf	??_interrupt_handler+2
  6536  0007  0804               	movf	4,w
  6537  0008  00F3               	movwf	??_interrupt_handler+3
  6538  0009  080A               	movf	10,w
  6539  000A  00F4               	movwf	??_interrupt_handler+4
  6540  000B  120A  118A  2E98   	ljmp	_interrupt_handler


Data Sizes:
    Strings     135
    Constant    64
    Data        11
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     55      80
    BANK1            80      1      65
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    lcd_set_custom_char@data	PTR const unsigned char  size(1) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_12(CODE[7]), STR_11(CODE[6]), STR_10(CODE[12]), STR_9(CODE[13]), 
		 -> STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[11]), STR_5(CODE[14]), 
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    end_screen@second_row	PTR unsigned char  size(1) Largest target is 13
		 -> STR_6(CODE[11]), STR_4(CODE[13]), STR_2(CODE[13]), 

    end_screen@first_row	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[14]), STR_3(CODE[13]), STR_1(CODE[13]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_gameboard_init
    _update_gameboard_from_input->_check_for_match
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_gameboard
    _check_for_match->_display_scoreboard
    _startup->_display_gameboard
    _startup->_display_scoreboard
    _display_scoreboard->_lcd_putch
    _display_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_init->_lcd_clear
    _gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    ___awdiv->___awmod
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _get_current_char->_get_cursor_index
    _game_end->_end_screen
    _end_screen->_lcd_goto
    _end_screen->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  136525
                                              0 BANK1      1     1      0
                           _game_end
                     _gameboard_init
                      _joystick_init
                           _lcd_init
                            _startup
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0   56340
                                             25 BANK0      2     2      0
                            _DelayMs
                    _check_for_match
                  _display_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    7909
                                             20 BANK0      4     3      1
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    7214
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      3     3      0   28533
                                             22 BANK0      3     3      0
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                   _get_cursor_index
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0   38064
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _display_scoreboard                                   2     2      0   13894
                                             20 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _display_gameboard                                    2     2      0   11477
                                             20 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    3050
                                             16 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    7760
                                             10 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       2     2      0   14989
                                             53 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    2337
                                             16 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     985
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    4163
                                             15 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  7     4      3    4163
                                              8 BANK0      7     4      3
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0      93
                                              1 BANK0      1     1      0
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (4) _get_cursor_index                                     1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _game_end                                             1     1      0   19372
                                             25 BANK0      1     1      0
                            _DelayMs
                         _end_screen
 ---------------------------------------------------------------------------------
 (2) _end_screen                                          13    12      1   18258
                                             12 BANK0     13    12      1
                            _DelayMs
                            ___awmod
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (3) _turn_on_led                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _play_tone                                            5     2      3    1893
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _lcd_puts                                             4     2      2    3282
                                              8 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    4164
                                              8 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            2     0      2    4133
                                              8 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    2178
                                              2 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2    1114
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    2413
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    6     6      0      45
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _game_end
     _DelayMs
     _end_screen
       _DelayMs
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
   _gameboard_init
     _get_current_char
       _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
     _time_init
   _joystick_init
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _startup
     _DelayMs
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _update_gameboard_from_input
     _DelayMs
     _check_for_match
       _DelayMs
       _display_gameboard
         _lcd_clear
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _display_scoreboard
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
       _play_tone
       _turn_on_led
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_current_char
         _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      1      41       7       81.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     37      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BD      12        0.0%
ABS                  0      0      BD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 11:44:32 2020

                    _joystick_pressed 005D                                     pc 0002  
 __end_of_update_gameboard_from_input 037A           _update_gameboard_from_input 021F  
                         __CFG_CP$OFF 0000                         _update_cursor 072C  
                                  _GO 00F9                          ___awdiv@sign 002D  
                                  fsr 0004                                   l200 07C9  
                                 l201 07CB                                   l202 07CD  
                                 l203 07D0                                   l204 07D3  
                                 l205 07F2                                   l230 0C59  
                                 l310 0297                                   l223 021E  
                                 l215 018E                                   l303 022F  
                                 l233 0FBD                                   l313 02B9  
                                 l305 02A2                                   l242 0697  
                                 l219 01E7                                   l403 0AC6  
                                 l412 0B36                                   l420 0D3B  
                                 l236 0FCC                                   l332 0379  
                                 l308 02A0                                   l423 0B50  
                                 l247 0C78                                   l239 0FFF  
                                 l351 07BE                                   l408 0B22  
                                 l272 0EF9                                   l432 0AF4  
                                 l248 0C9E                                   l417 04FF  
                                 l329 0377                                   l194 0CEA  
                                 l435 0B6E                                   l443 0D8D  
                                 l267 0F75                                   l371 0BBB  
                                 l364 0B91                                   l276 07FE  
                                 l356 0C14                                   l429 0BE6  
                                 l365 0B94                                   l285 0E99  
                                 l198 07C7                                   l438 0DDF  
                                 l359 0AE2                                   l295 0488  
                                 l368 0B1D                                   l298 0226  
                                 l299 028E                                   l682 04F1  
                                 l695 0E3A                                   _GIE 005F  
                                 _RB2 0032                                   _RB5 0035  
                                 _RC5 003D                                   _RC6 003E  
                                 _RC7 003F                                   _PR2 0092  
                        __CFG_CPD$OFF 0000                                   _SCS 0478  
                                 fsr0 0004                                   indf 0000  
                        ___awmod@sign 0026                          __CFG_FOSC$HS 0000  
                        __CFG_LVP$OFF 0000                        ?_toggle_cursor 0070  
                       lcd_clear@port 0028                                  l3001 01EC  
                                l3003 01F1                                  l3011 0EFA  
                                l3005 01FB                                  l3021 0E48  
                                l3013 0B08                                  l3101 0C07  
                                l3007 0201                                  l3031 0E8F  
                                l3023 0E60                                  l3015 0B17  
                                l3103 0C0A                                  l3111 073A  
                                l3009 0217                                  l3025 0E67  
                                l3033 0E93                                  l3017 0E3B  
                                l3041 03A5                                  l3121 0759  
                                l3113 073F                                  l3105 072F  
                                l3027 0E70                                  l3019 0E44  
                                l3211 0EBF                                  l3051 03C8  
                                l3043 03AA                                  l3035 037D  
                                l3123 075E                                  l3115 0744  
                                l3131 0786                                  l3107 0730  
                                l3029 0E75                                  l3221 0ED6  
                                l3213 0EC8                                  l3205 0EAD  
                                l3061 03F0                                  l3053 03CB  
                                l3045 03AF                                  l3037 0382  
                                l3133 07A1                                  l3125 0763  
                                l3117 0747                                  l3109 0735  
                                l3301 02DC                                  l3231 0EF0  
                                l3223 0EE0                                  l3215 0ECB  
                                l3207 0EB5                                  l3151 0AC5  
                                l3071 042D                                  l3063 040B  
                                l3055 03D8                                  l3047 03B3  
                                l3039 0387                                  l3135 07A8  
                                l3119 0757                                  l3311 0317  
                                l3303 02E7                                  l3233 0EF4  
                                l3225 0EE6                                  l3217 0ED1  
                                l3209 0EB9                                  l3161 0DB4  
                                l3153 0D8E                                  l3241 0F8D  
                                l3081 0460                                  l3073 0430  
                                l3065 040D                                  l3057 03DE  
                                l3049 03B9                                  l3129 0773  
                                l3321 034A                                  l3313 031E  
                                l3305 02F6                                  l3227 0EEA  
                                l3219 0ED4                                  l3171 0BA0  
                                l3163 0DC4                                  l3155 0D93  
                                l3251 0FD2                                  l3243 0F99  
                                l3235 0F76                                  l3091 047F  
                                l3083 046F                                  l3075 043F  
                                l3059 03ED                                  l3067 0413  
                                l3331 036E                                  l3323 0355  
                                l3315 0329                                  l3307 02FD  
                                l3341 0C39                                  l3333 0C15  
                                l3229 0EED                                  l3181 0BAC  
                                l3173 0BA3                                  l3149 0ABD  
                                l3165 0DCF                                  l3157 0D9B  
                                l3261 0FF5                                  l3253 0FDB  
                                l3245 0FA5                                  l3237 0F79  
                                l3077 044E                                  l3069 041E  
                                l3085 0473                                  l3093 0BE7  
                                l3325 035A                                  l3317 0338  
                                l3309 0308                                  l3343 0C44  
                                l3335 0C20                                  l3191 0BB9  
                                l3183 0BAD                                  l3175 0BA5  
                                l3167 0B95                                  l3159 0DA4  
                                l3263 0FFA                                  l3255 0FE6  
                                l3247 0FB1                                  l3239 0F82  
                                l3087 0479                                  l3079 0451  
                                l3095 0BEE                                  l3327 0363  
                                l3319 033F                                  l3271 0233  
                                l3351 0CA7                                  l3345 0C4E  
                                l3337 0C28                                  l2801 04BA  
                                l3193 0E9A                                  l3185 0BB0  
                                l3177 0BA7                                  l3169 0B9F  
                                l3257 0FF1                                  l3249 0FC3  
                                l3089 047D                                  l3097 0BF8  
                                l3329 0369                                  l3281 0257  
                                l3273 0238                                  l3265 021F  
                                l3361 0CCC                                  l3353 0CB2  
                                l2731 0B1F                                  l3339 0C33  
                                l2811 04DD                                  l2803 04BE  
                                l3195 0EA0                                  l3187 0BB3  
                                l3179 0BAB                                  l3259 0FF4  
                                l3099 0BFD                                  l3291 02B1  
                                l3283 0292                                  l3275 023D  
                                l3267 0225                                  l3371 0CE5  
                                l3363 0CCF                                  l3355 0CBD  
                                l3347 0C9F                                  l2821 0DE0  
                                l2733 0B21                                  l2725 04F5  
                                l2741 0D03                                  l2805 04CF  
                                l2813 04E3                                  l3197 0EA5  
                                l3189 0BB5                                  l2901 0C94  
                                l3293 02B7                                  l3285 029B  
                                l3277 0246                                  l3269 022A  
                                l3365 0CD5                                  l3357 0CC2  
                                l3349 0CA2                                  l2831 0DF2  
                                l2823 0DE3                                  l2735 0B26  
                                l2727 04F9                                  l2719 04F2  
                                l2743 0D08                                  l2751 0B45  
                                l2911 0D6F                                  l2903 0D3F  
                                l2815 04E8                                  l2807 04D5  
                                l3199 0EAA                                  l3295 02C7  
                                l3287 02A8                                  l3279 0249  
                                l3367 0CD9                                  l3359 0CC7  
                                l2841 0E0B                                  l2833 0DF7  
                                l2825 0DE7                                  l2737 0B2E  
                                l2729 0B1E                                  l2745 0D19  
                                l2761 0B54                                  l2753 0BBF  
                                l2921 004B                                  l2913 0D75  
                                l2817 04ED                                  l2809 04D6  
                                l3289 02AD                                  l3297 02C8  
                                l3369 0CDE                                  l2843 0E0F  
                                l2835 0DFD                                  l2851 0E2C  
                                l2827 0DEC                                  l2747 0D25  
                                l2739 0CF0                                  l2763 0B63  
                                l2755 0BC0                                  l2923 004D  
                                l2915 0D79                                  l3299 02D5  
                                l2853 0E31                                  l2845 0E19  
                                l2837 0E00                                  l2829 0DEE  
                                l2749 0B37                                  l2757 0BD4  
                                l2941 0096                                  l2933 0063  
                                l2925 0061                                  l2773 07FD  
                                l2917 0D7F                                  l2909 0D40  
                                l2781 0490                                  l2765 0AE6  
                                l3493 074F                                  l2855 0E36  
                                l2847 0E1F                                  l2839 0E07  
                                l2759 0BDA                                  l2871 0B75  
                                l2863 07D6                                  l2951 00DD  
                                l2943 00A8                                  l2935 006D  
                                l2927 0062                                  l2767 07F6  
                                l2919 0AD1                                  l2791 04A4  
                                l2783 0495                                  l3495 076B  
                                l2849 0E26                                  l2881 0B8C  
                                l2873 0B81                                  l2961 0131  
                                l2953 00F3                                  l2945 00BE  
                                l2937 0073                                  l2769 07FA  
                                l2793 04A6                                  l2785 0497  
                                l2777 0489                                  l3497 077B  
                                l2875 0B82                                  l3499 07DE  
                                l2859 07C2                                  l2971 0163  
                                l2963 0137                                  l2955 010C  
                                l2947 00CB                                  l2939 0089  
                                l2795 04AC                                  l2787 049B  
                                l2779 048C                                  l2883 05CD  
                                l2877 0B85                                  l2869 0B6F  
                                l2981 0193                                  l2973 0171  
                                l2965 013D                                  l2957 0112  
                                l2949 00D7                                  l2797 04AF  
                                l2789 04A0                                  l2893 0C68  
                                l2885 0C5A                                  l2879 0B8B  
                                l2991 01C7                                  l2983 0198  
                                l2975 0186                                  l2967 0147  
                                l2959 0128                                  l2799 04B6  
                                l2895 0C6E                                  l2887 0C65  
                                l2993 01D3                                  l2985 01A2  
                                l2977 0189                                  l2969 014D  
                                l2897 0C88                                  l2995 01DF  
                                l2987 01A8                                  l2979 0192  
                                l2899 0C8E                                  l2997 01E2  
                                l2989 01BE                                  l2999 01EB  
                                _ADIE 0466                                  _ADIF 0066  
                                STR_1 0575                                  STR_2 0582  
                                STR_3 0575                                  STR_4 058F  
                                STR_5 0567                                  STR_6 05B5  
                                STR_7 0557                                  STR_8 0546  
                                STR_9 059C                                  _T0IF 005A  
                                u2000 0D7F                                  u2001 0D7E  
                                u2010 013D                                  u2011 013C  
                                u2020 0192                                  u2100 0E99  
                                u2021 0191                                  u2101 0E98  
                                u2030 0198                                  u2110 0382  
                                u2031 0197                                  u2111 0381  
                                u2040 01EB                                  u2120 03A5  
                                u2200 0225                                  u2041 01EA  
                                u2121 03A4                                  u2201 0224  
                                u2050 01F1                                  u2130 03AA  
                                u2210 022A                                  u2051 01F0  
                                u2131 03A9                                  u2211 0229  
                                u2060 021E                                  u2140 040B  
                                u2300 02A0                                  u2220 022F  
                                u2061 021D                                  u2141 040A  
                                u2301 029F                                  u2221 022E  
                                u2070 0E3F                                  u2150 0BEE  
                                u2310 02A8                                  u2230 0233  
                                u2151 0BED                                  u2311 02A7  
                                u2231 0232                                  u2160 07A8  
                                u2400 033F                                  u2320 02AD  
                                u2240 0238                                  u2161 07A7  
                                u2401 033E                                  u2321 02AC  
                                u2241 0237                                  u2090 0E70  
                                u2170 0EBF                                  u2410 0355  
                                u2330 02D5                                  u2250 023D  
                                u2091 0E6F                                  u2171 0EBE  
                                u2411 0354                                  u2331 02D4  
                                u2251 023C                                  u2084 0E51  
                                u2180 0FC3                                  u2420 035A  
                                u2340 02DC                                  u2260 0257  
                                u2085 0E4F                                  u2181 0FC2  
                                u2421 0359                                  u2341 02DB  
                                u2261 0256                                  u1710 04FF  
                                u2190 0FD2                                  u2430 0369  
                                u2350 02F6                                  u2270 0292  
                                u1711 04FE                                  u2191 0FD1  
                                u2431 0368                                  u2351 02F5  
                                u2335 02D1                                  u2271 0291  
                                u1720 0B26                                  u2440 036E  
                                u2360 02FD                                  u2280 0297  
                                u1721 0B25                                  u2441 036D  
                                u2361 02FC                                  u2281 0296  
                                u1730 0B36                                  u2450 0C28  
                                u1810 04BE                                  u2370 0317  
                                u2290 029B                                  u1731 0B35  
                                u2451 0C27                                  u1811 04BD  
                                u2371 0316                                  u2355 02F2  
                                u2291 029A                                  u2460 0C39  
                                u2380 031E                                  u2461 0C38  
                                u1805 04B0                                  u2381 031D  
                                u1910 0E0F                                  u1750 0BE6  
                                u1830 04CF                                  u2390 0338  
                                u2470 0CE5                                  u1911 0E0E  
                                u1751 0BE5                                  u1831 04CE  
                                u2391 0337                                  u2375 0313  
                                u2471 0CE4                                  u1920 0E19  
                                u1760 07FA                                  u1921 0E18  
                                u1905 0E01                                  u1745 0CF3  
                                u1761 07F9                                  u1825 04BF  
                                u1850 04E3                                  u1770 0490  
                                u1851 04E2                                  u1835 04CB  
                                u1771 048F                                  u2395 0334  
                                u1940 0E2C                                  u1860 04E8  
                                u1780 049B                                  u1941 0E2B  
                                u1925 0E15                                  u1861 04E7  
                                u1845 04D7                                  u1781 049A  
                                u1950 0E31                                  u1870 0DE7  
                                u1790 04AC                                  u1951 0E30  
                                u1935 0E20                                  u1871 0DE6  
                                u1791 04AB                                  u1880 0DF2  
                                u1960 0B91                                  u1881 0DF1  
                                u1961 0B90                                  u1890 0DFD  
                                u1970 0C6E                                  u1891 0DFC  
                                u1971 0C6D                                  _PEIE 005E  
                                u1980 0C94                                  u1981 0C93  
                                u1995 0D43                                  _TMR0 0001  
                                _TMR1 000E                                  _TMR2 0011  
                                _WPUB 0095                 make_custom_chars@club 051E  
                        __CFG_WRT$OFF 0000                                  _main 0C9F  
                                btemp 007E                       _check_for_match 037A  
                        lcd_init@port 002A                                  start 000E  
                        lcd_goto@port 0028                         __CFG_IESO$OFF 0000  
                     __end_of_DelayMs 0B37                         __CFG_MCLRE$ON 0000  
                      ?_update_cursor 0034                                 ?_main 0070  
                     __end_of___awdiv 04F2                                 _CCPR1 0015  
                               STR_10 05A9                                 _CCPR2 001B  
                               STR_11 05C7                                 STR_12 05C0  
                       __CFG_WDTE$OFF 0000                       __end_of___awmod 0E3B  
                               _ANSEL 0188                       ___awdiv@divisor 0027  
                               _T2CON 0012                                 i1l376 06B4  
                               i1l393 0722                                 i1l377 06B2  
                               i1l394 0723                                 i1l378 06B3  
                               i1l387 0714                                 i1l379 0715  
                     ___awdiv@counter 002C          __size_of_randomize_gameboard 005F  
                               _PORTA 0005                                 _PORTB 0006  
                               _PORTC 0007                                 _PORTD 0008  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
              make_custom_chars@heart 052E                make_custom_chars@spade 0526  
                      __CFG_FCMEN$OFF 0000                make_custom_chars@smile 053E  
              make_custom_chars@skull 0516                           _turn_on_led 07BF  
                               _nRBPU 040F                                 _board 00C0  
                        lcd_puts@port 0028                        __CFG_BOREN$OFF 0000  
                               pclath 000A                                 status 0003  
                     __end_of_startup 1000                                 wtemp0 007E  
                       DelayMs@millis 0020                       __initialization 0011  
                        __end_of_main 0CED                    __size_of_Delay20us 000E  
                              ??_main 00E0                       ??_toggle_cursor 0034  
                              _ADCON0 001F                                _ADCON1 009F  
                              _CCP1M0 00B8                                _CCP1M1 00B9  
                              _CCP1M2 00BA                                _CCP1M3 00BB  
                              _CCP2M0 00E8                                _CCP2M1 00E9  
                              _CCP2M2 00EA                                _CCP2M3 00EB  
                              _CCP1IF 0062                                _CCP2IE 0468  
                              _CCP2IF 0068               __end_of_check_for_match 0489  
                              _ADRESH 001E                                _ADRESL 009E  
                    ___awdiv@dividend 0029           __end_ofmake_custom_chars@RH 0516  
                              _ANSELH 0189                update_cursor@direction 0034  
                              i1l3501 06E9                                i1l3503 070C  
                              i1l2551 069E                                i1l2561 06BE  
                              i1l2553 06A4               __size_of_gameboard_init 0060  
                              i1l2571 06DC                                i1l2563 06C2  
                              i1l2555 06AC                                i1l2581 06FF  
                              i1l2565 06C8                                i1l2557 06B0  
                              i1l2549 0698                                i1l2575 06E1  
                              i1l2567 06CE                                i1l2559 06B9  
                              i1l2585 0704                                i1l2569 06D7  
                              i1l2577 06F1                                i1l2587 0719  
                              i1l2579 06FA                                i1l2589 0720  
                              u170_20 0720                                u170_21 071F  
                              u163_20 069E                                u163_21 069D  
                              u164_20 06A4                                u164_21 06A3  
                              u165_20 06B0                                u165_21 06AF  
                              u166_20 06B9                                u166_21 06B8  
                              u167_20 06C8                                u167_21 06C7  
                           ??_DelayMs 0022                                u168_20 06CE  
                              u168_21 06CD                                u169_20 0719  
                              u169_21 0718                                _TMR1GE 0086  
                              _TMR1CS 0081                                _TMR2IE 0461  
                              _TMR2IF 0061                                _TMR1ON 0080  
          __end_of_display_scoreboard 0698                      __end_of_game_end 0C5A  
                 _lcd_set_custom_char 0D3C                        __CFG_PWRTE$OFF 0000  
                     ??_update_cursor 0035                      __end_of_lcd_init 0DE0  
                    __end_of_lcd_goto 0B6F                      __end_of_lcd_puts 0BE7  
                           ??___awdiv 002B                             ??___awmod 0024  
                              _id_num 0078                      ___awdiv@quotient 002E  
                     ___awmod@divisor 0020                         lcd_putch@port 0030  
                     ___awmod@counter 0025                  ?_lcd_set_custom_char 0028  
                        __pdataCOMMON 007B                                saved_w 007E  
           __size_of_get_current_char 0012                             ??_startup 0036  
                   __end_of_Delay20us 0500         update_cursor@move_delay_count 0037  
             __end_of__initialization 0044             __size_of_get_cursor_index 000C  
                       lcd_write@mode 0027                         lcd_write@port 0023  
                      __pcstackCOMMON 0070                          __pidataBANK0 0AC7  
               check_for_match@player 0038                 __end_of_joystick_init 0BBC  
               ??_lcd_set_custom_char 002B                    __size_of_lcd_clear 001A  
                  __size_of_lcd_putch 0012                    __size_of_lcd_write 004F  
                    ?_check_for_match 0070                            __pbssBANK0 0057  
                          __pbssBANK1 00A0                            __pbssBANK3 0190  
             _cursor_move_delay_count 007A                   _randomize_gameboard 0E3B  
                          __pmaintext 0C9F                            __pintentry 0004  
                  __size_of_tmr0_init 000A                    __size_of_play_tone 0026  
        __end_ofmake_custom_chars@PIC 050E                               _T1CKPS0 0084  
                             _T1CKPS1 0085                            _end_screen 0048  
                ?_randomize_gameboard 0070                    __size_of_time_init 0016  
                  display_gameboard@i 0035                          ?_turn_on_led 0070  
                           ?_game_end 0070                             ?_lcd_init 002A  
                           ?_lcd_goto 0028                             ?_lcd_puts 0028  
                          __stringtab 0500                        _gameboard_init 0E9A  
              lcd_set_custom_char@row 002D              make_custom_chars@diamond 0536  
                             _DelayMs 0B1E            randomize_gameboard@current 0053  
                   __end_of_lcd_clear 0B51             randomize_gameboard@random 0054  
                   __end_of_lcd_putch 0AF5                               ___awdiv 0489  
                             ___awmod 0DE0                     __end_of_lcd_write 0D3C  
      __end_ofmake_custom_chars@heart 0536        __end_ofmake_custom_chars@spade 052E  
      __end_ofmake_custom_chars@smile 0546        __end_ofmake_custom_chars@skull 051E  
                             __ptext1 021F                               __ptext2 072C  
                             __ptext3 0BE7                               __ptext4 037A  
                             __ptext5 0F76                               __ptext6 05CD  
                             __ptext7 0C5A                               __ptext8 0AE3  
                             __ptext9 0D8E                            _cursor_pos 0065  
               ??_randomize_gameboard 0030                      ___awmod@dividend 0022  
                    _get_current_char 0AD1                            ??_game_end 0039  
                             _my_turn 007B                __end_of_gameboard_init 0EFA  
              get_cursor_index@cursor 0020                               _visible 00A0  
                       _received_char 0079                               _startup 0F76  
                             clrloop0 0AB6                            ??_lcd_init 002C  
                          ??_lcd_goto 002A                            ??_lcd_puts 002A  
                end_of_initialization 0044                     __end_of_tmr0_init 0AC7  
                   __end_of_play_tone 0B95                        lcd_puts@string 002B  
                    _get_cursor_index 07F3                  play_tone@tone_period 0020  
                   __end_of_time_init 0B1E                            _scoreboard 006C  
                  _display_scoreboard 05CD                           ?_end_screen 002C  
       lcd_set_custom_char@cg_address 0028                        _joystick_x_pos 0059  
                      _joystick_y_pos 0057                   ?_display_scoreboard 0070  
                     ?_gameboard_init 0070                            _tone_delay 0076  
               __end_of_toggle_cursor 0C15                  end_screen@second_row 002C  
                           _Delay20us 04F2                  make_custom_chars@PIC 0506  
               play_tone@duration_8ms 0022                  ??_display_scoreboard 0034  
               __end_of_update_cursor 07BF                      turn_on_led@color 0022  
        ?_update_gameboard_from_input 0070                         __pidataCOMMON 07FF  
                 start_initialization 0011                  __size_of_turn_on_led 0034  
                          ?_Delay20us 0070                       gameboard_init@i 0056  
                 __size_of_end_screen 01D7                            init_fetch0 0AF5  
         __end_of_lcd_set_custom_char 0D8E                           __pdataBANK0 0066  
       ??_update_gameboard_from_input 0039                           __pbssCOMMON 0076  
                      _current_player 005C                             ___latbits 0002  
                       __pcstackBANK0 0020                         __pcstackBANK1 00E0  
                       _selected_tile 005E                     __size_of_game_end 0045  
                            ?_DelayMs 0020                __size_of_joystick_init 0027  
                   __size_of_lcd_init 0052                     __size_of_lcd_goto 001E  
                   __size_of_lcd_puts 002B                          _current_char 0064  
            __size_of_check_for_match 010F                           _delay_loops 0062  
            __end_of_get_current_char 0AE3                             _gameboard 006E  
                           _game_over 005B                              ?___awdiv 0027  
                            ?___awmod 0020                     _display_gameboard 0C5A  
                           _lcd_clear 0B37                          _cursor_solid 0063  
                           __pstrings 0500                             _lcd_putch 0AE3  
                  ?_display_gameboard 0070                             _lcd_write 0CED  
            __end_of_get_cursor_index 07FF                     _interrupt_handler 0698  
                  ?_interrupt_handler 0070                   ??_display_gameboard 0034  
       __end_ofmake_custom_chars@club 0526                              ?_startup 0070  
__size_of_update_gameboard_from_input 015B                   ??_interrupt_handler 0070  
                    end_screen@colors 0030                     interrupt_function 0004  
                      _cursor_movable 0061                           ??_Delay20us 0020  
                           clear_ram0 0AB5                             _tmr0_init 0ABD  
                           _play_tone 0B6F                   end_screen@first_row 0036  
           __end_of_display_gameboard 0C9F                             _time_init 0B08  
         __end_of_randomize_gameboard 0E9A                            ?_lcd_clear 0028  
           __end_of_interrupt_handler 072C                         _joystick_init 0B95  
                          ?_lcd_putch 0030               lcd_set_custom_char@data 002E  
                         __stringbase 0505                            ?_lcd_write 0022  
                        ??_end_screen 002D                      ??_gameboard_init 0055  
             lcd_set_custom_char@port 0029                   make_custom_chars@RH 050E  
                    __size_of_DelayMs 0019                            ?_tmr0_init 0070  
                          ?_play_tone 0020                    __end_of_end_screen 021F  
                            _p1_score 0060                              _p2_score 005F  
                          ?_time_init 0070                     _make_custom_chars 0EFA  
                    __size_of___awdiv 0069                     ??_check_for_match 0036  
                    __size_of___awmod 005B                        ?_joystick_init 0070  
                  ?_make_custom_chars 0070                    __end_of__stringtab 0506  
    __end_ofmake_custom_chars@diamond 053E                              _game_end 0C15  
                 ??_make_custom_chars 002F                       end_screen@F1342 0066  
                            __ptext10 0ABD                              __ptext11 0B95  
                            __ptext20 0C15                              __ptext12 0E9A  
                            __ptext21 0048                              __ptext13 0B08  
                            __ptext30 0DE0                              __ptext22 07BF  
                            __ptext14 0E3B                              __ptext31 0698  
                            __ptext23 0B6F                              __ptext15 0489  
                            __ptext24 0BBC                              __ptext16 0EFA  
                            __ptext25 0B51                              __ptext17 0D3C  
                            __ptext26 0B37                              __ptext18 0AD1  
                            __ptext27 0CED                              __ptext19 07F3  
                            __ptext28 04F2                              __ptext29 0B1E  
                   __CFG_BOR4V$BOR21V 0000                              _lcd_init 0D8E  
                            _lcd_goto 0B51                              _lcd_puts 0BBC  
                    __size_of_startup 008A                         __size_of_main 004E  
                  lcd_putch@character 0033             __end_of_make_custom_chars 0F76  
         __size_of_display_scoreboard 00CB            __size_of_display_gameboard 0045  
              __size_of_toggle_cursor 002E                           ??_lcd_clear 002A  
          __size_of_interrupt_handler 0094              randomize_gameboard@F1365 0190  
                         ??_lcd_putch 0032                           ??_lcd_write 0025  
               end_screen@color_index 0038                         ??_turn_on_led 0020  
                            init_ram0 0AF9                              intlevel1 0000  
              __size_of_update_cursor 0093                         Delay20us@next 0021  
                         ??_tmr0_init 0020                           ??_play_tone 0023  
                           stringcode 0500                     ?_get_current_char 0070  
                     ??_joystick_init 0020                           ??_time_init 0020  
                  ??_get_current_char 0021               randomize_gameboard@used 0033  
                          _OPTION_REG 0081                      lcd_goto@position 002B  
                   ?_get_cursor_index 0070          __size_of_lcd_set_custom_char 0052  
                            stringdir 0500                              stringtab 0500  
                  ??_get_cursor_index 0020                         _toggle_cursor 0BE7  
                 __end_of_turn_on_led 07F3       interrupt_handler@current_analog 0075  
                         end_screen@i 0037                      lcd_write@CmdChar 0022  
          __size_of_make_custom_chars 007C  
