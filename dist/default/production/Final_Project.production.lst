

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 24 04:59:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.10
    65                           ; Generated 31/07/2019 GMT
    66                           ; 
    67                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F887 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0086                     	;# 
   136  0087                     	;# 
   137  0088                     	;# 
   138  0089                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  0105                     	;# 
   162  0107                     	;# 
   163  0108                     	;# 
   164  0109                     	;# 
   165  010C                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  0185                     	;# 
   171  0187                     	;# 
   172  0188                     	;# 
   173  0189                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  008F                     	;# 
   221  0090                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  0105                     	;# 
   240  0107                     	;# 
   241  0108                     	;# 
   242  0109                     	;# 
   243  010C                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  0185                     	;# 
   249  0187                     	;# 
   250  0188                     	;# 
   251  0189                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  008F                     	;# 
   299  0090                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0093                     	;# 
   305  0094                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0097                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  0105                     	;# 
   318  0107                     	;# 
   319  0108                     	;# 
   320  0109                     	;# 
   321  010C                     	;# 
   322  010C                     	;# 
   323  010D                     	;# 
   324  010E                     	;# 
   325  010F                     	;# 
   326  0185                     	;# 
   327  0187                     	;# 
   328  0188                     	;# 
   329  0189                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332                           
   333                           	psect	idataCOMMON
   334  02FB                     __pidataCOMMON:	
   335                           
   336                           ;initializer for _my_turn
   337  02FB  3401               	retlw	1
   338                           
   339                           	psect	idataBANK0
   340  07FE                     __pidataBANK0:	
   341                           
   342                           ;initializer for _gameboard
   343  07FE  3405               	retlw	5
   344  07FF  3400               	retlw	0
   345                           
   346                           	psect	idataBANK1
   347  1261                     __pidataBANK1:	
   348                           
   349                           ;initializer for end_screen@F1400
   350  1261  3400               	retlw	0
   351  1262  3403               	retlw	3
   352  1263  3401               	retlw	1
   353  1264  3404               	retlw	4
   354  1265  3402               	retlw	2
   355  1266  3405               	retlw	5
   356                           
   357                           ;initializer for _scoreboard
   358  1267  3408               	retlw	8
   359  1268  3400               	retlw	0
   360                           
   361                           	psect	stringtext
   362  0300                     __pstringtext:	
   363  0300                     stringtab:	
   364  0300                     __stringtab:	
   365                           
   366                           ;	String table - string pointers are 2 bytes each
   367  0300  1BFF               	btfsc	btemp+1,7
   368  0301  2B0A               	ljmp	stringcode
   369  0302  1383               	bcf	3,7
   370  0303  187F               	btfsc	btemp+1,0
   371  0304  1783               	bsf	3,7
   372  0305  0800               	movf	0,w
   373  0306  0A84               	incf	4,f
   374  0307  1903               	skipnz
   375  0308  0AFF               	incf	btemp+1,f
   376  0309  0008               	return
   377  030A                     stringcode:	
   378  030A  087F               	movf	btemp+1,w
   379  030B  397F               	andlw	127
   380  030C  008A               	movwf	10
   381  030D  0804               	movf	4,w
   382  030E  0A84               	incf	4,f
   383  030F  1903               	skipnz
   384  0310  0AFF               	incf	btemp+1,f
   385  0311  0082               	movwf	2
   386  0312                     __stringbase:	
   387  0312                     __end_of__stringtab:	
   388  0312                     make_custom_chars@PIC:	
   389  0312  3418               	retlw	24
   390  0313  3418               	retlw	24
   391  0314  3414               	retlw	20
   392  0315  3404               	retlw	4
   393  0316  3404               	retlw	4
   394  0317  3403               	retlw	3
   395  0318  3402               	retlw	2
   396  0319  3403               	retlw	3
   397  031A                     __end_ofmake_custom_chars@PIC:	
   398  031A                     make_custom_chars@RH:	
   399  031A  341C               	retlw	28
   400  031B  3414               	retlw	20
   401  031C  3418               	retlw	24
   402  031D  3414               	retlw	20
   403  031E  3400               	retlw	0
   404  031F  3405               	retlw	5
   405  0320  3407               	retlw	7
   406  0321  3405               	retlw	5
   407  0322                     __end_ofmake_custom_chars@RH:	
   408  0322                     make_custom_chars@skull:	
   409  0322  340E               	retlw	14
   410  0323  3415               	retlw	21
   411  0324  3415               	retlw	21
   412  0325  341F               	retlw	31
   413  0326  340A               	retlw	10
   414  0327  340E               	retlw	14
   415  0328  340E               	retlw	14
   416  0329  3400               	retlw	0
   417  032A                     __end_ofmake_custom_chars@skull:	
   418  032A                     make_custom_chars@club:	
   419  032A  3400               	retlw	0
   420  032B  340E               	retlw	14
   421  032C  340E               	retlw	14
   422  032D  341F               	retlw	31
   423  032E  341F               	retlw	31
   424  032F  341F               	retlw	31
   425  0330  3404               	retlw	4
   426  0331  340E               	retlw	14
   427  0332                     __end_ofmake_custom_chars@club:	
   428  0332                     make_custom_chars@spade:	
   429  0332  3400               	retlw	0
   430  0333  3404               	retlw	4
   431  0334  340E               	retlw	14
   432  0335  341F               	retlw	31
   433  0336  341F               	retlw	31
   434  0337  340E               	retlw	14
   435  0338  3404               	retlw	4
   436  0339  340E               	retlw	14
   437  033A                     __end_ofmake_custom_chars@spade:	
   438  033A                     make_custom_chars@heart:	
   439  033A  3400               	retlw	0
   440  033B  3400               	retlw	0
   441  033C  340A               	retlw	10
   442  033D  341F               	retlw	31
   443  033E  341F               	retlw	31
   444  033F  340E               	retlw	14
   445  0340  3404               	retlw	4
   446  0341  3400               	retlw	0
   447  0342                     __end_ofmake_custom_chars@heart:	
   448  0342                     make_custom_chars@diamond:	
   449  0342  3400               	retlw	0
   450  0343  3404               	retlw	4
   451  0344  340E               	retlw	14
   452  0345  341F               	retlw	31
   453  0346  340E               	retlw	14
   454  0347  3404               	retlw	4
   455  0348  3400               	retlw	0
   456  0349  3400               	retlw	0
   457  034A                     __end_ofmake_custom_chars@diamond:	
   458  034A                     make_custom_chars@smile:	
   459  034A  3400               	retlw	0
   460  034B  340A               	retlw	10
   461  034C  340A               	retlw	10
   462  034D  3400               	retlw	0
   463  034E  3415               	retlw	21
   464  034F  3411               	retlw	17
   465  0350  340E               	retlw	14
   466  0351  3400               	retlw	0
   467  0352                     __end_ofmake_custom_chars@smile:	
   468  0015                     _CCPR1	set	21
   469  000E                     _TMR1	set	14
   470  001B                     _CCPR2	set	27
   471  001E                     _ADRESH	set	30
   472  001F                     _ADCON0	set	31
   473  0006                     _PORTB	set	6
   474  0012                     _T2CON	set	18
   475  0011                     _TMR2	set	17
   476  0007                     _PORTC	set	7
   477  0001                     _TMR0	set	1
   478  0008                     _PORTD	set	8
   479  0005                     _PORTA	set	5
   480  0066                     _ADIF	set	102
   481  005E                     _PEIE	set	94
   482  005F                     _GIE	set	95
   483  00E8                     _CCP2M0	set	232
   484  00E9                     _CCP2M1	set	233
   485  00EA                     _CCP2M2	set	234
   486  00EB                     _CCP2M3	set	235
   487  0080                     _TMR1ON	set	128
   488  0086                     _TMR1GE	set	134
   489  0085                     _T1CKPS1	set	133
   490  0084                     _T1CKPS0	set	132
   491  0081                     _TMR1CS	set	129
   492  00B8                     _CCP1M0	set	184
   493  00B9                     _CCP1M1	set	185
   494  00BA                     _CCP1M2	set	186
   495  00BB                     _CCP1M3	set	187
   496  0061                     _TMR2IF	set	97
   497  003F                     _RC7	set	63
   498  0062                     _CCP1IF	set	98
   499  0032                     _RB2	set	50
   500  003D                     _RC5	set	61
   501  003E                     _RC6	set	62
   502  0068                     _CCP2IF	set	104
   503  0035                     _RB5	set	53
   504  00F9                     _GO	set	249
   505  005A                     _T0IF	set	90
   506  009E                     _ADRESL	set	158
   507  009F                     _ADCON1	set	159
   508  0086                     _TRISB	set	134
   509  0095                     _WPUB	set	149
   510  0092                     _PR2	set	146
   511  0087                     _TRISC	set	135
   512  0085                     _TRISA	set	133
   513  0088                     _TRISD	set	136
   514  0081                     _OPTION_REG	set	129
   515  0466                     _ADIE	set	1126
   516  040F                     _nRBPU	set	1039
   517  0461                     _TMR2IE	set	1121
   518  0468                     _CCP2IE	set	1128
   519  0478                     _SCS	set	1144
   520  0189                     _ANSELH	set	393
   521  0188                     _ANSEL	set	392
   522  0352                     STR_7:	
   523  0352  344E               	retlw	78	;'N'
   524  0353  346F               	retlw	111	;'o'
   525  0354  3474               	retlw	116	;'t'
   526  0355  3420               	retlw	32	;' '
   527  0356  3476               	retlw	118	;'v'
   528  0357  3465               	retlw	101	;'e'
   529  0358  3472               	retlw	114	;'r'
   530  0359  3479               	retlw	121	;'y'
   531  035A  3420               	retlw	32	;' '
   532  035B  3467               	retlw	103	;'g'
   533  035C  346F               	retlw	111	;'o'
   534  035D  346F               	retlw	111	;'o'
   535  035E  3464               	retlw	100	;'d'
   536  035F  342E               	retlw	46	;'.'
   537  0360  342E               	retlw	46	;'.'
   538  0361  342E               	retlw	46	;'.'
   539  0362  3400               	retlw	0
   540  0363                     STR_22:	
   541  0363  3450               	retlw	80	;'P'
   542  0364  3472               	retlw	114	;'r'
   543  0365  3465               	retlw	101	;'e'
   544  0366  3473               	retlw	115	;'s'
   545  0367  3473               	retlw	115	;'s'
   546  0368  3420               	retlw	32	;' '
   547  0369  3474               	retlw	116	;'t'
   548  036A  3468               	retlw	104	;'h'
   549  036B  3465               	retlw	101	;'e'
   550  036C  3420               	retlw	32	;' '
   551  036D  3462               	retlw	98	;'b'
   552  036E  3475               	retlw	117	;'u'
   553  036F  3474               	retlw	116	;'t'
   554  0370  3474               	retlw	116	;'t'
   555  0371  346F               	retlw	111	;'o'
   556  0372  346E               	retlw	110	;'n'
   557  0373  3400               	retlw	0
   558  0374                     STR_13:	
   559  0374  3420               	retlw	32	;' '
   560  0375  3441               	retlw	65	;'A'
   561  0376  346C               	retlw	108	;'l'
   562  0377  346D               	retlw	109	;'m'
   563  0378  346F               	retlw	111	;'o'
   564  0379  3473               	retlw	115	;'s'
   565  037A  3474               	retlw	116	;'t'
   566  037B  3420               	retlw	32	;' '
   567  037C  3474               	retlw	116	;'t'
   568  037D  3468               	retlw	104	;'h'
   569  037E  3465               	retlw	101	;'e'
   570  037F  3472               	retlw	114	;'r'
   571  0380  3465               	retlw	101	;'e'
   572  0381  3421               	retlw	33	;'!'
   573  0382  3421               	retlw	33	;'!'
   574  0383  3400               	retlw	0
   575  0384                     STR_30:	
   576  0384  3420               	retlw	32	;' '
   577  0385  3443               	retlw	67	;'C'
   578  0386  346F               	retlw	111	;'o'
   579  0387  346E               	retlw	110	;'n'
   580  0388  3463               	retlw	99	;'c'
   581  0389  3465               	retlw	101	;'e'
   582  038A  346E               	retlw	110	;'n'
   583  038B  3474               	retlw	116	;'t'
   584  038C  3472               	retlw	114	;'r'
   585  038D  3461               	retlw	97	;'a'
   586  038E  3474               	retlw	116	;'t'
   587  038F  3469               	retlw	105	;'i'
   588  0390  346F               	retlw	111	;'o'
   589  0391  346E               	retlw	110	;'n'
   590  0392  3421               	retlw	33	;'!'
   591  0393  3400               	retlw	0
   592  0394                     STR_18:	
   593  0394  3420               	retlw	32	;' '
   594  0395  3453               	retlw	83	;'S'
   595  0396  3469               	retlw	105	;'i'
   596  0397  346D               	retlw	109	;'m'
   597  0398  346F               	retlw	111	;'o'
   598  0399  346E               	retlw	110	;'n'
   599  039A  3420               	retlw	32	;' '
   600  039B  3453               	retlw	83	;'S'
   601  039C  3461               	retlw	97	;'a'
   602  039D  3479               	retlw	121	;'y'
   603  039E  3473               	retlw	115	;'s'
   604  039F  342E               	retlw	46	;'.'
   605  03A0  342E               	retlw	46	;'.'
   606  03A1  342E               	retlw	46	;'.'
   607  03A2  342E               	retlw	46	;'.'
   608  03A3  3400               	retlw	0
   609  03A4                     STR_2:	
   610  03A4  3420               	retlw	32	;' '
   611  03A5  3420               	retlw	32	;' '
   612  03A6  3443               	retlw	67	;'C'
   613  03A7  346F               	retlw	111	;'o'
   614  03A8  346E               	retlw	110	;'n'
   615  03A9  3463               	retlw	99	;'c'
   616  03AA  3465               	retlw	101	;'e'
   617  03AB  346E               	retlw	110	;'n'
   618  03AC  3474               	retlw	116	;'t'
   619  03AD  3472               	retlw	114	;'r'
   620  03AE  3461               	retlw	97	;'a'
   621  03AF  3474               	retlw	116	;'t'
   622  03B0  3469               	retlw	105	;'i'
   623  03B1  346F               	retlw	111	;'o'
   624  03B2  346E               	retlw	110	;'n'
   625  03B3  3400               	retlw	0
   626  03B4                     STR_1:	
   627  03B4  3420               	retlw	32	;' '
   628  03B5  3447               	retlw	71	;'G'
   629  03B6  3461               	retlw	97	;'a'
   630  03B7  346D               	retlw	109	;'m'
   631  03B8  3465               	retlw	101	;'e'
   632  03B9  3420               	retlw	32	;' '
   633  03BA  3453               	retlw	83	;'S'
   634  03BB  3465               	retlw	101	;'e'
   635  03BC  346C               	retlw	108	;'l'
   636  03BD  3465               	retlw	101	;'e'
   637  03BE  3463               	retlw	99	;'c'
   638  03BF  3474               	retlw	116	;'t'
   639  03C0  3469               	retlw	105	;'i'
   640  03C1  346F               	retlw	111	;'o'
   641  03C2  346E               	retlw	110	;'n'
   642  03C3  3400               	retlw	0
   643  03C4                     STR_15:	
   644  03C4  3420               	retlw	32	;' '
   645  03C5  3420               	retlw	32	;' '
   646  03C6  3420               	retlw	32	;' '
   647  03C7  3459               	retlw	89	;'Y'
   648  03C8  346F               	retlw	111	;'o'
   649  03C9  3475               	retlw	117	;'u'
   650  03CA  3420               	retlw	32	;' '
   651  03CB  3477               	retlw	119	;'w'
   652  03CC  3469               	retlw	105	;'i'
   653  03CD  346E               	retlw	110	;'n'
   654  03CE  3421               	retlw	33	;'!'
   655  03CF  3421               	retlw	33	;'!'
   656  03D0  3421               	retlw	33	;'!'
   657  03D1  3400               	retlw	0
   658  03D2                     STR_28:	
   659  03D2  3420               	retlw	32	;' '
   660  03D3  3420               	retlw	32	;' '
   661  03D4  3420               	retlw	32	;' '
   662  03D5  344E               	retlw	78	;'N'
   663  03D6  344F               	retlw	79	;'O'
   664  03D7  3420               	retlw	32	;' '
   665  03D8  3457               	retlw	87	;'W'
   666  03D9  3449               	retlw	73	;'I'
   667  03DA  344E               	retlw	78	;'N'
   668  03DB  344E               	retlw	78	;'N'
   669  03DC  3445               	retlw	69	;'E'
   670  03DD  3452               	retlw	82	;'R'
   671  03DE  3421               	retlw	33	;'!'
   672  03DF  3400               	retlw	0
   673  03E0                     STR_11:	
   674  03E0  3420               	retlw	32	;' '
   675  03E1  3420               	retlw	32	;' '
   676  03E2  3420               	retlw	32	;' '
   677  03E3  3447               	retlw	71	;'G'
   678  03E4  3472               	retlw	114	;'r'
   679  03E5  3465               	retlw	101	;'e'
   680  03E6  3461               	retlw	97	;'a'
   681  03E7  3474               	retlw	116	;'t'
   682  03E8  3420               	retlw	32	;' '
   683  03E9  346A               	retlw	106	;'j'
   684  03EA  346F               	retlw	111	;'o'
   685  03EB  3462               	retlw	98	;'b'
   686  03EC  3421               	retlw	33	;'!'
   687  03ED  3400               	retlw	0
   688  03EE                     STR_5:	
   689  03EE  3420               	retlw	32	;' '
   690  03EF  3420               	retlw	32	;' '
   691  03F0  3420               	retlw	32	;' '
   692  03F1  3459               	retlw	89	;'Y'
   693  03F2  346F               	retlw	111	;'o'
   694  03F3  3475               	retlw	117	;'u'
   695  03F4  3420               	retlw	32	;' '
   696  03F5  3473               	retlw	115	;'s'
   697  03F6  3474               	retlw	116	;'t'
   698  03F7  3469               	retlw	105	;'i'
   699  03F8  346E               	retlw	110	;'n'
   700  03F9  346B               	retlw	107	;'k'
   701  03FA  3421               	retlw	33	;'!'
   702  03FB  3400               	retlw	0
   703  03FC                     STR_17:	
   704  03FC  3420               	retlw	32	;' '
   705  03FD  3420               	retlw	32	;' '
   706  03FE  3420               	retlw	32	;' '
   707  03FF  3479               	retlw	121	;'y'
   708  0400  346F               	retlw	111	;'o'
   709  0401  3475               	retlw	117	;'u'
   710  0402  3472               	retlw	114	;'r'
   711  0403  3420               	retlw	32	;' '
   712  0404  3474               	retlw	116	;'t'
   713  0405  3475               	retlw	117	;'u'
   714  0406  3472               	retlw	114	;'r'
   715  0407  346E               	retlw	110	;'n'
   716  0408  3421               	retlw	33	;'!'
   717  0409  3400               	retlw	0
   718  040A                     STR_4:	
   719  040A  3420               	retlw	32	;' '
   720  040B  3420               	retlw	32	;' '
   721  040C  3420               	retlw	32	;' '
   722  040D  3447               	retlw	71	;'G'
   723  040E  3461               	retlw	97	;'a'
   724  040F  346D               	retlw	109	;'m'
   725  0410  3465               	retlw	101	;'e'
   726  0411  3420               	retlw	32	;' '
   727  0412  344F               	retlw	79	;'O'
   728  0413  3476               	retlw	118	;'v'
   729  0414  3465               	retlw	101	;'e'
   730  0415  3472               	retlw	114	;'r'
   731  0416  3421               	retlw	33	;'!'
   732  0417  3400               	retlw	0
   733  0418                     STR_21:	
   734  0418  3420               	retlw	32	;' '
   735  0419  3420               	retlw	32	;' '
   736  041A  3420               	retlw	32	;' '
   737  041B  3453               	retlw	83	;'S'
   738  041C  3469               	retlw	105	;'i'
   739  041D  346D               	retlw	109	;'m'
   740  041E  346F               	retlw	111	;'o'
   741  041F  346E               	retlw	110	;'n'
   742  0420  3420               	retlw	32	;' '
   743  0421  3453               	retlw	83	;'S'
   744  0422  3461               	retlw	97	;'a'
   745  0423  3479               	retlw	121	;'y'
   746  0424  3473               	retlw	115	;'s'
   747  0425  3400               	retlw	0
   748  0426                     STR_24:	
   749  0426  3420               	retlw	32	;' '
   750  0427  3420               	retlw	32	;' '
   751  0428  3420               	retlw	32	;' '
   752  0429  3420               	retlw	32	;' '
   753  042A  3457               	retlw	87	;'W'
   754  042B  3449               	retlw	73	;'I'
   755  042C  344E               	retlw	78	;'N'
   756  042D  344E               	retlw	78	;'N'
   757  042E  3445               	retlw	69	;'E'
   758  042F  3452               	retlw	82	;'R'
   759  0430  3421               	retlw	33	;'!'
   760  0431  3421               	retlw	33	;'!'
   761  0432  3400               	retlw	0
   762  0433                     STR_9:	
   763  0433  3420               	retlw	32	;' '
   764  0434  3420               	retlw	32	;' '
   765  0435  3420               	retlw	32	;' '
   766  0436  3420               	retlw	32	;' '
   767  0437  344E               	retlw	78	;'N'
   768  0438  346F               	retlw	111	;'o'
   769  0439  3474               	retlw	116	;'t'
   770  043A  3420               	retlw	32	;' '
   771  043B  3462               	retlw	98	;'b'
   772  043C  3461               	retlw	97	;'a'
   773  043D  3464               	retlw	100	;'d'
   774  043E  342E               	retlw	46	;'.'
   775  043F  3400               	retlw	0
   776  0440                     STR_25:	
   777  0440  3420               	retlw	32	;' '
   778  0441  3420               	retlw	32	;' '
   779  0442  3420               	retlw	32	;' '
   780  0443  3420               	retlw	32	;' '
   781  0444  3450               	retlw	80	;'P'
   782  0445  344C               	retlw	76	;'L'
   783  0446  3441               	retlw	65	;'A'
   784  0447  3459               	retlw	89	;'Y'
   785  0448  3445               	retlw	69	;'E'
   786  0449  3452               	retlw	82	;'R'
   787  044A  3420               	retlw	32	;' '
   788  044B  3431               	retlw	49	;'1'
   789  044C  3400               	retlw	0
   790  044D                     STR_27:	
   791  044D  3420               	retlw	32	;' '
   792  044E  3420               	retlw	32	;' '
   793  044F  3420               	retlw	32	;' '
   794  0450  3420               	retlw	32	;' '
   795  0451  3450               	retlw	80	;'P'
   796  0452  344C               	retlw	76	;'L'
   797  0453  3441               	retlw	65	;'A'
   798  0454  3459               	retlw	89	;'Y'
   799  0455  3445               	retlw	69	;'E'
   800  0456  3452               	retlw	82	;'R'
   801  0457  3420               	retlw	32	;' '
   802  0458  3432               	retlw	50	;'2'
   803  0459  3400               	retlw	0
   804  045A                     STR_16:	
   805  045A  3420               	retlw	32	;' '
   806  045B  3420               	retlw	32	;' '
   807  045C  3420               	retlw	32	;' '
   808  045D  3420               	retlw	32	;' '
   809  045E  344E               	retlw	78	;'N'
   810  045F  346F               	retlw	111	;'o'
   811  0460  3477               	retlw	119	;'w'
   812  0461  3420               	retlw	32	;' '
   813  0462  3469               	retlw	105	;'i'
   814  0463  3474               	retlw	116	;'t'
   815  0464  3427               	retlw	39	;'''
   816  0465  3473               	retlw	115	;'s'
   817  0466  3400               	retlw	0
   818  0467                     STR_23:	
   819  0467  3420               	retlw	32	;' '
   820  0468  3420               	retlw	32	;' '
   821  0469  3420               	retlw	32	;' '
   822  046A  3420               	retlw	32	;' '
   823  046B  3474               	retlw	116	;'t'
   824  046C  346F               	retlw	111	;'o'
   825  046D  3420               	retlw	32	;' '
   826  046E  3473               	retlw	115	;'s'
   827  046F  3474               	retlw	116	;'t'
   828  0470  3461               	retlw	97	;'a'
   829  0471  3472               	retlw	114	;'r'
   830  0472  3474               	retlw	116	;'t'
   831  0473  3400               	retlw	0
   832  0474                     STR_19:	
   833  0474  3420               	retlw	32	;' '
   834  0475  3420               	retlw	32	;' '
   835  0476  3420               	retlw	32	;' '
   836  0477  3420               	retlw	32	;' '
   837  0478  3420               	retlw	32	;' '
   838  0479  3453               	retlw	83	;'S'
   839  047A  3463               	retlw	99	;'c'
   840  047B  346F               	retlw	111	;'o'
   841  047C  3472               	retlw	114	;'r'
   842  047D  3465               	retlw	101	;'e'
   843  047E  343A               	retlw	58	;':'
   844  047F  3400               	retlw	0
   845  0480                     STR_29:	
   846  0480  3420               	retlw	32	;' '
   847  0481  3420               	retlw	32	;' '
   848  0482  3420               	retlw	32	;' '
   849  0483  3420               	retlw	32	;' '
   850  0484  3420               	retlw	32	;' '
   851  0485  3420               	retlw	32	;' '
   852  0486  3454               	retlw	84	;'T'
   853  0487  3449               	retlw	73	;'I'
   854  0488  3445               	retlw	69	;'E'
   855  0489  3444               	retlw	68	;'D'
   856  048A  3400               	retlw	0
   857  048B                     STR_20:	
   858  048B  3420               	retlw	32	;' '
   859  048C  3420               	retlw	32	;' '
   860  048D  3452               	retlw	82	;'R'
   861  048E  346F               	retlw	111	;'o'
   862  048F  3475               	retlw	117	;'u'
   863  0490  346E               	retlw	110	;'n'
   864  0491  3464               	retlw	100	;'d'
   865  0492  3473               	retlw	115	;'s'
   866  0493  3400               	retlw	0
   867  0494                     STR_35:	
   868  0494  3420               	retlw	32	;' '
   869  0495  3420               	retlw	32	;' '
   870  0496  3450               	retlw	80	;'P'
   871  0497  3432               	retlw	50	;'2'
   872  0498  343A               	retlw	58	;':'
   873  0499  3420               	retlw	32	;' '
   874  049A  3400               	retlw	0
   875  049B                     STR_34:	
   876  049B  3420               	retlw	32	;' '
   877  049C  3450               	retlw	80	;'P'
   878  049D  3431               	retlw	49	;'1'
   879  049E  343A               	retlw	58	;':'
   880  049F  3420               	retlw	32	;' '
   881  04A0  3400               	retlw	0
   882  0426                     
   883                           ; #config settings
   884  0000                     
   885                           	psect	cinit
   886  0011                     start_initialization:	
   887  0011                     __initialization:	
   888                           
   889                           ; Initialize objects allocated to BANK1
   890  0011  1383               	bcf	3,7	;select IRP bank0
   891  0012  30E8               	movlw	low (__pdataBANK1+8)
   892  0013  00FD               	movwf	btemp+-1
   893  0014  3012               	movlw	high __pidataBANK1
   894  0015  00FE               	movwf	btemp
   895  0016  3061               	movlw	low __pidataBANK1
   896  0017  00FF               	movwf	btemp+1
   897  0018  30E0               	movlw	low __pdataBANK1
   898  0019  0084               	movwf	4
   899  001A  120A  118A  22EC  120A  118A  	fcall	init_ram0
   900                           
   901                           ; Initialize objects allocated to BANK0
   902  001F  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   903  0024  00ED               	movwf	__pdataBANK0& (0+127)
   904  0025  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   905  002A  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   906                           
   907                           ; Initialize objects allocated to COMMON
   908  002B  120A  118A  22FB  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   909  0030  00FB               	movwf	__pdataCOMMON& (0+127)
   910                           
   911                           ; Clear objects allocated to BANK3
   912  0031  1783               	bsf	3,7	;select IRP bank2
   913  0032  3090               	movlw	low __pbssBANK3
   914  0033  0084               	movwf	4
   915  0034  30B0               	movlw	low (__pbssBANK3+32)
   916  0035  160A  118A  2259  120A  118A  	fcall	clear_ram0
   917                           
   918                           ; Clear objects allocated to BANK1
   919  003A  1383               	bcf	3,7	;select IRP bank0
   920  003B  30A0               	movlw	low __pbssBANK1
   921  003C  0084               	movwf	4
   922  003D  30E0               	movlw	low (__pbssBANK1+64)
   923  003E  160A  118A  2259  120A  118A  	fcall	clear_ram0
   924                           
   925                           ; Clear objects allocated to BANK0
   926  0043  3059               	movlw	low __pbssBANK0
   927  0044  0084               	movwf	4
   928  0045  306D               	movlw	low (__pbssBANK0+20)
   929  0046  160A  118A  2259  120A  118A  	fcall	clear_ram0
   930                           
   931                           ; Clear objects allocated to COMMON
   932  004B  01F6               	clrf	__pbssCOMMON& (0+127)
   933  004C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   934  004D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   935  004E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   936  004F  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   937  0050                     end_of_initialization:	
   938                           ;End of C runtime variable initialization code
   939                           
   940  0050                     __end_of__initialization:	
   941  0050  0183               	clrf	3
   942  0051  120A  118A  2CA1   	ljmp	_main	;jump to C main() function
   943                           
   944                           	psect	bssCOMMON
   945  0076                     __pbssCOMMON:	
   946  0076                     _tone_delay:	
   947  0076                     	ds	2
   948  0078                     _id_num:	
   949  0078                     	ds	1
   950  0079                     _received_char:	
   951  0079                     	ds	1
   952  007A                     _event_delay_count:	
   953  007A                     	ds	1
   954                           
   955                           	psect	dataCOMMON
   956  007B                     __pdataCOMMON:	
   957  007B                     _my_turn:	
   958  007B                     	ds	1
   959                           
   960                           	psect	bssBANK0
   961  0059                     __pbssBANK0:	
   962  0059                     _simon_says_pattern:	
   963  0059                     	ds	5
   964  005E                     _joystick_y_pos:	
   965  005E                     	ds	2
   966  0060                     _joystick_x_pos:	
   967  0060                     	ds	2
   968  0062                     _game_over:	
   969  0062                     	ds	1
   970  0063                     _current_player:	
   971  0063                     	ds	1
   972  0064                     _joystick_pressed:	
   973  0064                     	ds	1
   974  0065                     _selected_tile:	
   975  0065                     	ds	1
   976  0066                     _p2_score:	
   977  0066                     	ds	1
   978  0067                     _p1_score:	
   979  0067                     	ds	1
   980  0068                     _event_enabled:	
   981  0068                     	ds	1
   982  0069                     _delay_loops:	
   983  0069                     	ds	1
   984  006A                     _cursor_solid:	
   985  006A                     	ds	1
   986  006B                     _current_char:	
   987  006B                     	ds	1
   988  006C                     _cursor_pos:	
   989  006C                     	ds	1
   990                           
   991                           	psect	dataBANK0
   992  006D                     __pdataBANK0:	
   993  006D                     _gameboard:	
   994  006D                     	ds	2
   995                           
   996                           	psect	bssBANK1
   997  00A0                     __pbssBANK1:	
   998  00A0                     _visible:	
   999  00A0                     	ds	32
  1000  00C0                     _board:	
  1001  00C0                     	ds	32
  1002                           
  1003                           	psect	dataBANK1
  1004  00E0                     __pdataBANK1:	
  1005  00E0                     end_screen@F1400:	
  1006  00E0                     	ds	6
  1007  00E6                     _scoreboard:	
  1008  00E6                     	ds	2
  1009                           
  1010                           	psect	bssBANK3
  1011  0190                     __pbssBANK3:	
  1012  0190                     randomize_gameboard@F1386:	
  1013  0190                     	ds	32
  1014                           
  1015                           	psect	inittext
  1016  02E8                     init_fetch0:	
  1017                           ;	Called with low address in FSR and high address in W
  1018                           
  1019  02E8  087E               	movf	btemp,w
  1020  02E9  008A               	movwf	10
  1021  02EA  087F               	movf	btemp+1,w
  1022  02EB  0082               	movwf	2
  1023  02EC                     init_ram0:	
  1024                           ;Called with:
  1025                           ;	high address of idata address in btemp 
  1026                           ;	low address of idata address in btemp+1 
  1027                           ;	low address of data in FSR
  1028                           ;	high address + 1 of data in btemp-1
  1029                           
  1030  02EC  120A  118A  22E8  120A  118A  	fcall	init_fetch0
  1031  02F1  0080               	movwf	0
  1032  02F2  0A84               	incf	4,f
  1033  02F3  0804               	movf	4,w
  1034  02F4  067D               	xorwf	btemp+-1,w
  1035  02F5  1903               	btfsc	3,2
  1036  02F6  3400               	retlw	0
  1037  02F7  0AFF               	incf	btemp+1,f
  1038  02F8  1903               	btfsc	3,2
  1039  02F9  0AFE               	incf	btemp,f
  1040  02FA  2AEC               	goto	init_ram0
  1041                           
  1042                           	psect	clrtext
  1043  1259                     clear_ram0:	
  1044                           ;	Called with FSR containing the base address, and
  1045                           ;	W with the last address+1
  1046                           
  1047  1259  0064               	clrwdt	;clear the watchdog before getting into this loop
  1048  125A                     clrloop0:	
  1049  125A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1050  125B  0A84               	incf	4,f	;increment pointer
  1051  125C  0604               	xorwf	4,w	;XOR with final address
  1052  125D  1903               	btfsc	3,2	;have we reached the end yet?
  1053  125E  3400               	retlw	0	;all done for this memory range, return
  1054  125F  0604               	xorwf	4,w	;XOR again to restore value
  1055  1260  2A5A               	goto	clrloop0	;do the next byte
  1056                           
  1057                           	psect	cstackBANK1
  1058  00E8                     __pcstackBANK1:	
  1059  00E8                     main@game_selection:	
  1060                           
  1061                           ; 1 bytes @ 0x0
  1062  00E8                     	ds	1
  1063  00E9                     main@selector_pos:	
  1064                           
  1065                           ; 1 bytes @ 0x1
  1066  00E9                     	ds	1
  1067                           
  1068                           	psect	cstackCOMMON
  1069  0070                     __pcstackCOMMON:	
  1070  0070                     ?_joystick_init:	
  1071  0070                     ?_time_init:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_concentration_gameboard_init:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_concentration_title_screen:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_concentration_game_loop:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_concentration_game_end:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_simon_says_title_screen:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_simon_says_game_loop:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_simon_says_game_end:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_display_simon_says_scoreboard:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_countdown:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_generate_pattern:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_play_pattern:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_simon_says_check_input:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_simon_says_get_input:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_turn_on_led:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_display_concentration_scoreboard:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_display_concentration_gameboard:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_get_cursor_index:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_randomize_gameboard:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_toggle_cursor:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_tmr0_init:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_Delay20us:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_main:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_make_custom_chars:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_check_for_match:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_interrupt_handler:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??_interrupt_handler:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0x0
  1154  0070                     	ds	5
  1155  0075                     interrupt_handler@current_analog:	
  1156                           
  1157                           ; 1 bytes @ 0x5
  1158  0075                     	ds	1
  1159                           
  1160                           	psect	cstackBANK0
  1161  0020                     __pcstackBANK0:	
  1162  0020                     ??_joystick_init:	
  1163  0020                     ??_time_init:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0020                     ??_turn_on_led:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0020                     ?_play_tone:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0020                     ??_get_cursor_index:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0020                     ??_tmr0_init:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0020                     ?_DelayMs:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0020                     ??_Delay20us:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0020                     ?___awmod:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0020                     get_cursor_index@cursor:	
  1188                           ; 2 bytes @ 0x0
  1189                           
  1190  0020                     DelayMs@millis:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0020                     play_tone@tone_period:	
  1194                           ; 2 bytes @ 0x0
  1195                           
  1196  0020                     ___awmod@divisor:	
  1197                           ; 2 bytes @ 0x0
  1198                           
  1199                           
  1200                           ; 2 bytes @ 0x0
  1201  0020                     	ds	1
  1202  0021                     Delay20us@next:	
  1203                           
  1204                           ; 1 bytes @ 0x1
  1205  0021                     	ds	1
  1206  0022                     ??_DelayMs:	
  1207  0022                     ?_lcd_write:	
  1208                           ; 1 bytes @ 0x2
  1209                           
  1210  0022                     lcd_write@CmdChar:	
  1211                           ; 1 bytes @ 0x2
  1212                           
  1213  0022                     play_tone@duration_8ms:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216  0022                     turn_on_led@color:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219  0022                     ___awmod@dividend:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x2
  1224  0022                     	ds	1
  1225  0023                     ??_simon_says_get_input:	
  1226  0023                     ??_play_tone:	
  1227                           ; 1 bytes @ 0x3
  1228                           
  1229  0023                     lcd_write@port:	
  1230                           ; 1 bytes @ 0x3
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0x3
  1234  0023                     	ds	1
  1235  0024                     ??___awmod:	
  1236                           
  1237                           ; 1 bytes @ 0x4
  1238  0024                     	ds	1
  1239  0025                     ??_lcd_write:	
  1240  0025                     simon_says_get_input@current_input:	
  1241                           ; 1 bytes @ 0x5
  1242                           
  1243  0025                     ___awmod@counter:	
  1244                           ; 1 bytes @ 0x5
  1245                           
  1246                           
  1247                           ; 1 bytes @ 0x5
  1248  0025                     	ds	1
  1249  0026                     ___awmod@sign:	
  1250                           
  1251                           ; 1 bytes @ 0x6
  1252  0026                     	ds	1
  1253  0027                     ?___awdiv:	
  1254  0027                     lcd_write@mode:	
  1255                           ; 2 bytes @ 0x7
  1256                           
  1257  0027                     ___awdiv@divisor:	
  1258                           ; 1 bytes @ 0x7
  1259                           
  1260                           
  1261                           ; 2 bytes @ 0x7
  1262  0027                     	ds	1
  1263  0028                     ?_lcd_clear:	
  1264  0028                     ?_lcd_puts:	
  1265                           ; 1 bytes @ 0x8
  1266                           
  1267  0028                     ?_lcd_goto:	
  1268                           ; 1 bytes @ 0x8
  1269                           
  1270  0028                     ?_lcd_set_custom_char:	
  1271                           ; 1 bytes @ 0x8
  1272                           
  1273  0028                     lcd_clear@port:	
  1274                           ; 1 bytes @ 0x8
  1275                           
  1276  0028                     lcd_puts@string:	
  1277                           ; 2 bytes @ 0x8
  1278                           
  1279  0028                     lcd_goto@port:	
  1280                           ; 2 bytes @ 0x8
  1281                           
  1282  0028                     lcd_set_custom_char@data:	
  1283                           ; 2 bytes @ 0x8
  1284                           
  1285                           
  1286                           ; 2 bytes @ 0x8
  1287  0028                     	ds	1
  1288  0029                     ___awdiv@dividend:	
  1289                           
  1290                           ; 2 bytes @ 0x9
  1291  0029                     	ds	1
  1292  002A                     ??_lcd_clear:	
  1293  002A                     ??_lcd_goto:	
  1294                           ; 1 bytes @ 0xA
  1295                           
  1296  002A                     ?_lcd_init:	
  1297                           ; 1 bytes @ 0xA
  1298                           
  1299  002A                     lcd_set_custom_char@cg_address:	
  1300                           ; 1 bytes @ 0xA
  1301                           
  1302  002A                     lcd_puts@port:	
  1303                           ; 1 bytes @ 0xA
  1304                           
  1305  002A                     lcd_init@port:	
  1306                           ; 2 bytes @ 0xA
  1307                           
  1308                           
  1309                           ; 2 bytes @ 0xA
  1310  002A                     	ds	1
  1311  002B                     ??___awdiv:	
  1312  002B                     lcd_goto@position:	
  1313                           ; 1 bytes @ 0xB
  1314                           
  1315  002B                     lcd_set_custom_char@port:	
  1316                           ; 1 bytes @ 0xB
  1317                           
  1318                           
  1319                           ; 2 bytes @ 0xB
  1320  002B                     	ds	1
  1321  002C                     ??_lcd_puts:	
  1322  002C                     ??_lcd_init:	
  1323                           ; 1 bytes @ 0xC
  1324                           
  1325  002C                     ___awdiv@counter:	
  1326                           ; 1 bytes @ 0xC
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0xC
  1330  002C                     	ds	1
  1331  002D                     ??_simon_says_title_screen:	
  1332  002D                     ?_end_screen:	
  1333                           ; 1 bytes @ 0xD
  1334                           
  1335  002D                     ??_lcd_set_custom_char:	
  1336                           ; 1 bytes @ 0xD
  1337                           
  1338  002D                     ___awdiv@sign:	
  1339                           ; 1 bytes @ 0xD
  1340                           
  1341  002D                     end_screen@first_row:	
  1342                           ; 1 bytes @ 0xD
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0xD
  1346  002D                     	ds	1
  1347  002E                     ___awdiv@quotient:	
  1348                           
  1349                           ; 2 bytes @ 0xE
  1350  002E                     	ds	1
  1351  002F                     lcd_set_custom_char@row:	
  1352  002F                     end_screen@second_row:	
  1353                           ; 1 bytes @ 0xF
  1354                           
  1355                           
  1356                           ; 2 bytes @ 0xF
  1357  002F                     	ds	1
  1358  0030                     ??_generate_pattern:	
  1359  0030                     ??_play_pattern:	
  1360                           ; 1 bytes @ 0x10
  1361                           
  1362  0030                     ??_simon_says_check_input:	
  1363                           ; 1 bytes @ 0x10
  1364                           
  1365  0030                     ??_randomize_gameboard:	
  1366                           ; 1 bytes @ 0x10
  1367                           
  1368  0030                     ?_lcd_putch:	
  1369                           ; 1 bytes @ 0x10
  1370                           
  1371  0030                     ??_make_custom_chars:	
  1372                           ; 1 bytes @ 0x10
  1373                           
  1374  0030                     lcd_putch@port:	
  1375                           ; 1 bytes @ 0x10
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x10
  1379  0030                     	ds	1
  1380  0031                     ??_end_screen:	
  1381                           
  1382                           ; 1 bytes @ 0x11
  1383  0031                     	ds	1
  1384  0032                     ??_lcd_putch:	
  1385                           
  1386                           ; 1 bytes @ 0x12
  1387  0032                     	ds	1
  1388  0033                     lcd_putch@character:	
  1389  0033                     generate_pattern@current_byte:	
  1390                           ; 1 bytes @ 0x13
  1391                           
  1392  0033                     randomize_gameboard@used:	
  1393                           ; 1 bytes @ 0x13
  1394                           
  1395                           
  1396                           ; 32 bytes @ 0x13
  1397  0033                     	ds	1
  1398  0034                     ??_display_simon_says_scoreboard:	
  1399  0034                     ??_countdown:	
  1400                           ; 1 bytes @ 0x14
  1401                           
  1402  0034                     ??_display_concentration_scoreboard:	
  1403                           ; 1 bytes @ 0x14
  1404                           
  1405  0034                     ??_display_concentration_gameboard:	
  1406                           ; 1 bytes @ 0x14
  1407                           
  1408  0034                     ??_toggle_cursor:	
  1409                           ; 1 bytes @ 0x14
  1410                           
  1411  0034                     ?_update_cursor:	
  1412                           ; 1 bytes @ 0x14
  1413                           
  1414  0034                     simon_says_check_input@current_option:	
  1415                           ; 1 bytes @ 0x14
  1416                           
  1417  0034                     play_pattern@current_option:	
  1418                           ; 1 bytes @ 0x14
  1419                           
  1420  0034                     update_cursor@direction:	
  1421                           ; 1 bytes @ 0x14
  1422                           
  1423  0034                     end_screen@colors:	
  1424                           ; 1 bytes @ 0x14
  1425                           
  1426                           
  1427                           ; 6 bytes @ 0x14
  1428  0034                     	ds	1
  1429  0035                     ??_update_cursor:	
  1430  0035                     simon_says_check_input@i:	
  1431                           ; 1 bytes @ 0x15
  1432                           
  1433  0035                     play_pattern@i:	
  1434                           ; 1 bytes @ 0x15
  1435                           
  1436  0035                     countdown@i:	
  1437                           ; 1 bytes @ 0x15
  1438                           
  1439  0035                     display_concentration_gameboard@i:	
  1440                           ; 1 bytes @ 0x15
  1441                           
  1442                           
  1443                           ; 1 bytes @ 0x15
  1444  0035                     	ds	1
  1445  0036                     ??_concentration_title_screen:	
  1446  0036                     ??_simon_says_game_loop:	
  1447                           ; 1 bytes @ 0x16
  1448                           
  1449  0036                     ??_check_for_match:	
  1450                           ; 1 bytes @ 0x16
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x16
  1454  0036                     	ds	1
  1455  0037                     update_cursor@move_delay_count:	
  1456                           
  1457                           ; 1 bytes @ 0x17
  1458  0037                     	ds	1
  1459  0038                     check_for_match@player:	
  1460                           
  1461                           ; 1 bytes @ 0x18
  1462  0038                     	ds	1
  1463  0039                     ??_concentration_game_loop:	
  1464                           
  1465                           ; 1 bytes @ 0x19
  1466  0039                     	ds	1
  1467  003A                     end_screen@i:	
  1468                           
  1469                           ; 1 bytes @ 0x1A
  1470  003A                     	ds	1
  1471  003B                     end_screen@color_index:	
  1472                           
  1473                           ; 1 bytes @ 0x1B
  1474  003B                     	ds	1
  1475  003C                     ??_concentration_game_end:	
  1476  003C                     ??_simon_says_game_end:	
  1477                           ; 1 bytes @ 0x1C
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x1C
  1481  003C                     	ds	23
  1482  0053                     randomize_gameboard@current:	
  1483                           
  1484                           ; 1 bytes @ 0x33
  1485  0053                     	ds	1
  1486  0054                     randomize_gameboard@random:	
  1487                           
  1488                           ; 1 bytes @ 0x34
  1489  0054                     	ds	1
  1490  0055                     ??_concentration_gameboard_init:	
  1491                           
  1492                           ; 1 bytes @ 0x35
  1493  0055                     	ds	1
  1494  0056                     concentration_gameboard_init@i:	
  1495                           
  1496                           ; 1 bytes @ 0x36
  1497  0056                     	ds	1
  1498  0057                     ??_main:	
  1499                           
  1500                           ; 1 bytes @ 0x37
  1501  0057                     	ds	2
  1502                           
  1503                           	psect	maintext
  1504  04A1                     __pmaintext:	
  1505 ;;
  1506 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1507 ;;
  1508 ;; *************** function _main *****************
  1509 ;; Defined at:
  1510 ;;		line 123 in file "games.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  selector_pos    1    1[BANK1 ] unsigned char 
  1515 ;;  game_selecti    1    0[BANK1 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : B00/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         0       0       2       0       0
  1527 ;;      Temps:          0       2       0       0       0
  1528 ;;      Totals:         0       2       2       0       0
  1529 ;;Total ram usage:        4 bytes
  1530 ;; Hardware stack levels required when called:    7
  1531 ;; This function calls:
  1532 ;;		_DelayMs
  1533 ;;		_concentration_game_end
  1534 ;;		_concentration_game_loop
  1535 ;;		_concentration_gameboard_init
  1536 ;;		_concentration_title_screen
  1537 ;;		_joystick_init
  1538 ;;		_lcd_clear
  1539 ;;		_lcd_goto
  1540 ;;		_lcd_init
  1541 ;;		_lcd_putch
  1542 ;;		_lcd_puts
  1543 ;;		_simon_says_game_end
  1544 ;;		_simon_says_game_loop
  1545 ;;		_simon_says_title_screen
  1546 ;;		_time_init
  1547 ;; This function is called by:
  1548 ;;		Startup code after reset
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           
  1553                           ;psect for function _main
  1554  04A1                     _main:	
  1555  04A1                     l4785:	
  1556                           ;incstack = 0
  1557                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1558                           
  1559                           
  1560                           ;games.c: 125:     SCS = 0;
  1561  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  1562  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  1563  04A3  100F               	bcf	15,0	;volatile
  1564  04A4                     l4787:	
  1565                           
  1566                           ;games.c: 127:     TRISD = 0;
  1567  04A4  0188               	clrf	8	;volatile
  1568                           
  1569                           ;games.c: 128:     TRISA = 0;
  1570  04A5  0185               	clrf	5	;volatile
  1571                           
  1572                           ;games.c: 129:     ANSEL = 0;
  1573  04A6  1683               	bsf	3,5	;RP0=1, select bank3
  1574  04A7  1703               	bsf	3,6	;RP1=1, select bank3
  1575  04A8  0188               	clrf	8	;volatile
  1576  04A9                     l4789:	
  1577                           
  1578                           ;games.c: 130:     lcd_init(gameboard);
  1579  04A9  3005               	movlw	5
  1580  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1581  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1582  04AC  00AA               	movwf	lcd_init@port
  1583  04AD  3000               	movlw	0
  1584  04AE  00AB               	movwf	lcd_init@port+1
  1585  04AF  160A  118A  2549  120A  118A  	fcall	_lcd_init
  1586  04B4                     l4791:	
  1587                           
  1588                           ;games.c: 131:     lcd_init(scoreboard);
  1589  04B4  3008               	movlw	8
  1590  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1591  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1592  04B7  00AA               	movwf	lcd_init@port
  1593  04B8  3000               	movlw	0
  1594  04B9  00AB               	movwf	lcd_init@port+1
  1595  04BA  160A  118A  2549  120A  118A  	fcall	_lcd_init
  1596  04BF                     l4793:	
  1597                           
  1598                           ;games.c: 133:     joystick_init();
  1599  04BF  160A  118A  2330  120A  118A  	fcall	_joystick_init
  1600  04C4                     l4795:	
  1601                           
  1602                           ;games.c: 135:     TRISC &= 0x1F;
  1603  04C4  301F               	movlw	31
  1604  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1605  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1606  04C7  00D7               	movwf	??_main
  1607  04C8  0857               	movf	??_main,w
  1608  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  1609  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  1610  04CB  0587               	andwf	7,f	;volatile
  1611  04CC                     l4797:	
  1612                           
  1613                           ;games.c: 136:     PORTC = 0;
  1614  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1615  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1616  04CE  0187               	clrf	7	;volatile
  1617  04CF                     l4799:	
  1618                           
  1619                           ;games.c: 138:     time_init();
  1620  04CF  160A  118A  2357  120A  118A  	fcall	_time_init
  1621  04D4                     l4801:	
  1622                           
  1623                           ;games.c: 140:     current_player = 0;
  1624  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1625  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1626  04D6  01E3               	clrf	_current_player
  1627  04D7                     l4803:	
  1628                           
  1629                           ;games.c: 142:     lcd_puts(" Game Selection", scoreboard);
  1630  04D7  30B4               	movlw	low (STR_1| (0+32768))
  1631  04D8  00A8               	movwf	lcd_puts@string
  1632  04D9  3083               	movlw	high (STR_1| (0+32768))
  1633  04DA  00A9               	movwf	lcd_puts@string+1
  1634  04DB  3008               	movlw	8
  1635  04DC  00AA               	movwf	lcd_puts@port
  1636  04DD  3000               	movlw	0
  1637  04DE  00AB               	movwf	lcd_puts@port+1
  1638  04DF  160A  118A  23AF  120A  118A  	fcall	_lcd_puts
  1639  04E4                     l4805:	
  1640                           
  1641                           ;games.c: 143:     lcd_puts("  Concentration", gameboard);
  1642  04E4  30A4               	movlw	low (STR_2| (0+32768))
  1643  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1644  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1645  04E7  00A8               	movwf	lcd_puts@string
  1646  04E8  3083               	movlw	high (STR_2| (0+32768))
  1647  04E9  00A9               	movwf	lcd_puts@string+1
  1648  04EA  3005               	movlw	5
  1649  04EB  00AA               	movwf	lcd_puts@port
  1650  04EC  3000               	movlw	0
  1651  04ED  00AB               	movwf	lcd_puts@port+1
  1652  04EE  160A  118A  23AF  120A  118A  	fcall	_lcd_puts
  1653  04F3                     l4807:	
  1654                           
  1655                           ;games.c: 144:     lcd_goto(0x40, gameboard);
  1656  04F3  3005               	movlw	5
  1657  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1658  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1659  04F6  00A8               	movwf	lcd_goto@port
  1660  04F7  3000               	movlw	0
  1661  04F8  00A9               	movwf	lcd_goto@port+1
  1662  04F9  3040               	movlw	64
  1663  04FA  160A  118A  22EC  120A  118A  	fcall	_lcd_goto
  1664  04FF                     l4809:	
  1665                           
  1666                           ;games.c: 145:     lcd_puts("  Simon Says", gameboard);
  1667  04FF  3019               	movlw	low ((STR_21+1)| (0+32768))
  1668  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1670  0502  00A8               	movwf	lcd_puts@string
  1671  0503  3084               	movlw	high ((STR_21+1)| (0+32768))
  1672  0504  00A9               	movwf	lcd_puts@string+1
  1673  0505  3005               	movlw	5
  1674  0506  00AA               	movwf	lcd_puts@port
  1675  0507  3000               	movlw	0
  1676  0508  00AB               	movwf	lcd_puts@port+1
  1677  0509  160A  118A  23AF  120A  118A  	fcall	_lcd_puts
  1678  050E                     l4811:	
  1679                           
  1680                           ;games.c: 146:     lcd_goto(0, gameboard);
  1681  050E  3005               	movlw	5
  1682  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0511  00A8               	movwf	lcd_goto@port
  1685  0512  3000               	movlw	0
  1686  0513  00A9               	movwf	lcd_goto@port+1
  1687  0514  3000               	movlw	0
  1688  0515  160A  118A  22EC  120A  118A  	fcall	_lcd_goto
  1689  051A                     l4813:	
  1690                           
  1691                           ;games.c: 147:     lcd_putch(0x7E, gameboard);
  1692  051A  3005               	movlw	5
  1693  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1694  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1695  051D  00B0               	movwf	lcd_putch@port
  1696  051E  3000               	movlw	0
  1697  051F  00B1               	movwf	lcd_putch@port+1
  1698  0520  307E               	movlw	126
  1699  0521  160A  118A  228D  120A  118A  	fcall	_lcd_putch
  1700  0526                     l4815:	
  1701                           
  1702                           ;games.c: 148:     char game_selection = 0xFF;
  1703  0526  30FF               	movlw	255
  1704  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0529  00D7               	movwf	??_main
  1707  052A  0857               	movf	??_main,w
  1708  052B  1683               	bsf	3,5	;RP0=1, select bank1
  1709  052C  1303               	bcf	3,6	;RP1=0, select bank1
  1710  052D  00E8               	movwf	main@game_selection^(0+128)
  1711  052E                     l4817:	
  1712                           
  1713                           ;games.c: 149:     char selector_pos = 0x00;
  1714  052E  01E9               	clrf	main@selector_pos^(0+128)
  1715  052F                     l4819:	
  1716                           
  1717                           ;games.c: 150:     GO = 1;
  1718  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0531  149F               	bsf	31,1	;volatile
  1721                           
  1722                           ;games.c: 151:     while(game_selection == 0xFF) {
  1723  0532  2DD5               	goto	l4851
  1724  0533                     l265:	
  1725                           
  1726                           ;games.c: 152:         if(GO == 0) {
  1727  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0535  189F               	btfsc	31,1	;volatile
  1730  0536  2D38               	goto	u3821
  1731  0537  2D39               	goto	u3820
  1732  0538                     u3821:	
  1733  0538  2D3A               	goto	l4823
  1734  0539                     u3820:	
  1735  0539                     l4821:	
  1736                           
  1737                           ;games.c: 153:             GO = 1;
  1738  0539  149F               	bsf	31,1	;volatile
  1739  053A                     l4823:	
  1740                           
  1741                           ;games.c: 155:         if(event_enabled) {
  1742  053A  0868               	movf	_event_enabled,w
  1743  053B  1903               	btfsc	3,2
  1744  053C  2D3E               	goto	u3831
  1745  053D  2D3F               	goto	u3830
  1746  053E                     u3831:	
  1747  053E  2DD5               	goto	l4851
  1748  053F                     u3830:	
  1749  053F                     l4825:	
  1750                           
  1751                           ;games.c: 156:             if(RB5 == 0) {
  1752  053F  1A86               	btfsc	6,5	;volatile
  1753  0540  2D42               	goto	u3841
  1754  0541  2D43               	goto	u3840
  1755  0542                     u3841:	
  1756  0542  2D5F               	goto	l4831
  1757  0543                     u3840:	
  1758  0543                     l4827:	
  1759                           
  1760                           ;games.c: 157:                 game_selection = selector_pos;
  1761  0543  1683               	bsf	3,5	;RP0=1, select bank1
  1762  0544  1303               	bcf	3,6	;RP1=0, select bank1
  1763  0545  0869               	movf	main@selector_pos^(0+128),w
  1764  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0548  00D7               	movwf	??_main
  1767  0549  0857               	movf	??_main,w
  1768  054A  1683               	bsf	3,5	;RP0=1, select bank1
  1769  054B  1303               	bcf	3,6	;RP1=0, select bank1
  1770  054C  00E8               	movwf	main@game_selection^(0+128)
  1771  054D                     l4829:	
  1772                           
  1773                           ;games.c: 158:                 DelayMs(8);
  1774  054D  3008               	movlw	8
  1775  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1776  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0550  00A0               	movwf	DelayMs@millis
  1778  0551  3000               	movlw	0
  1779  0552  00A1               	movwf	DelayMs@millis+1
  1780  0553  160A  118A  229F  120A  118A  	fcall	_DelayMs
  1781  0558                     l269:	
  1782                           ;games.c: 159:                 while(RB5 == 0);
  1783                           
  1784  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1786  055A  1E86               	btfss	6,5	;volatile
  1787  055B  2D5D               	goto	u3851
  1788  055C  2D5E               	goto	u3850
  1789  055D                     u3851:	
  1790  055D  2D58               	goto	l269
  1791  055E                     u3850:	
  1792  055E  2DDC               	goto	l4853
  1793  055F                     l4831:	
  1794                           
  1795                           ;games.c: 162:             if((joystick_y_pos < 100)||(joystick_y_pos > 900)) {
  1796  055F  085F               	movf	_joystick_y_pos+1,w
  1797  0560  3A80               	xorlw	128
  1798  0561  00FF               	movwf	btemp+1
  1799  0562  3080               	movlw	128
  1800  0563  027F               	subwf	btemp+1,w
  1801  0564  1D03               	skipz
  1802  0565  2D68               	goto	u3865
  1803  0566  3064               	movlw	100
  1804  0567  025E               	subwf	_joystick_y_pos,w
  1805  0568                     u3865:	
  1806  0568  1C03               	skipc
  1807  0569  2D6B               	goto	u3861
  1808  056A  2D6C               	goto	u3860
  1809  056B                     u3861:	
  1810  056B  2D7B               	goto	l4835
  1811  056C                     u3860:	
  1812  056C                     l4833:	
  1813  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1814  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1815  056E  085F               	movf	_joystick_y_pos+1,w
  1816  056F  3A80               	xorlw	128
  1817  0570  00FF               	movwf	btemp+1
  1818  0571  3083               	movlw	131
  1819  0572  027F               	subwf	btemp+1,w
  1820  0573  1D03               	skipz
  1821  0574  2D77               	goto	u3875
  1822  0575  3085               	movlw	133
  1823  0576  025E               	subwf	_joystick_y_pos,w
  1824  0577                     u3875:	
  1825  0577  1C03               	skipc
  1826  0578  2D7A               	goto	u3871
  1827  0579  2D7B               	goto	u3870
  1828  057A                     u3871:	
  1829  057A  2DD5               	goto	l4851
  1830  057B                     u3870:	
  1831  057B                     l4835:	
  1832                           
  1833                           ;games.c: 163:                 lcd_goto(selector_pos, gameboard);
  1834  057B  3005               	movlw	5
  1835  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1836  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1837  057E  00A8               	movwf	lcd_goto@port
  1838  057F  3000               	movlw	0
  1839  0580  00A9               	movwf	lcd_goto@port+1
  1840  0581  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0582  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0583  0869               	movf	main@selector_pos^(0+128),w
  1843  0584  160A  118A  22EC  120A  118A  	fcall	_lcd_goto
  1844                           
  1845                           ;games.c: 164:                 lcd_putch(0x20, gameboard);
  1846  0589  3005               	movlw	5
  1847  058A  1283               	bcf	3,5	;RP0=0, select bank0
  1848  058B  1303               	bcf	3,6	;RP1=0, select bank0
  1849  058C  00B0               	movwf	lcd_putch@port
  1850  058D  3000               	movlw	0
  1851  058E  00B1               	movwf	lcd_putch@port+1
  1852  058F  3020               	movlw	32
  1853  0590  160A  118A  228D  120A  118A  	fcall	_lcd_putch
  1854                           
  1855                           ;games.c: 165:                 switch(selector_pos) {
  1856  0595  2DA1               	goto	l4843
  1857  0596                     l4837:	
  1858                           
  1859                           ;games.c: 167:                         selector_pos = 0x40;
  1860  0596  3040               	movlw	64
  1861  0597  00D7               	movwf	??_main
  1862  0598  0857               	movf	??_main,w
  1863  0599  1683               	bsf	3,5	;RP0=1, select bank1
  1864  059A  1303               	bcf	3,6	;RP1=0, select bank1
  1865  059B  00E9               	movwf	main@selector_pos^(0+128)
  1866                           
  1867                           ;games.c: 168:                         break;
  1868  059C  2DB5               	goto	l4845
  1869  059D                     l4839:	
  1870                           
  1871                           ;games.c: 170:                         selector_pos = 0x00;
  1872  059D  1683               	bsf	3,5	;RP0=1, select bank1
  1873  059E  1303               	bcf	3,6	;RP1=0, select bank1
  1874  059F  01E9               	clrf	main@selector_pos^(0+128)
  1875                           
  1876                           ;games.c: 171:                         break;
  1877  05A0  2DB5               	goto	l4845
  1878  05A1                     l4843:	
  1879  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1880  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1881  05A3  0869               	movf	main@selector_pos^(0+128),w
  1882  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1883  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1884  05A6  00D7               	movwf	??_main
  1885  05A7  01D8               	clrf	??_main+1
  1886                           
  1887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 1, Range of values is 0 to 0
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte            4     3 (average)
  1893                           ; direct_byte           11     8 (fixed)
  1894                           ; jumptable            260     6 (fixed)
  1895                           ;	Chosen strategy is simple_byte
  1896  05A8  0858               	movf	??_main+1,w
  1897  05A9  3A00               	xorlw	0	; case 0
  1898  05AA  1903               	skipnz
  1899  05AB  2DAD               	goto	l5123
  1900  05AC  2DB5               	goto	l4845
  1901  05AD                     l5123:	
  1902                           
  1903                           ; Switch size 1, requested type "simple"
  1904                           ; Number of cases is 2, Range of values is 0 to 64
  1905                           ; switch strategies available:
  1906                           ; Name         Instructions Cycles
  1907                           ; simple_byte            7     4 (average)
  1908                           ; direct_byte          203     8 (fixed)
  1909                           ; jumptable            260     6 (fixed)
  1910                           ;	Chosen strategy is simple_byte
  1911  05AD  0857               	movf	??_main,w
  1912  05AE  3A00               	xorlw	0	; case 0
  1913  05AF  1903               	skipnz
  1914  05B0  2D96               	goto	l4837
  1915  05B1  3A40               	xorlw	64	; case 64
  1916  05B2  1903               	skipnz
  1917  05B3  2D9D               	goto	l4839
  1918  05B4  2DB5               	goto	l4845
  1919  05B5                     l4845:	
  1920                           
  1921                           ;games.c: 173:                 lcd_goto(selector_pos, gameboard);
  1922  05B5  3005               	movlw	5
  1923  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1924  05B7  00A8               	movwf	lcd_goto@port
  1925  05B8  3000               	movlw	0
  1926  05B9  00A9               	movwf	lcd_goto@port+1
  1927  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  1928  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  1929  05BC  0869               	movf	main@selector_pos^(0+128),w
  1930  05BD  160A  118A  22EC  120A  118A  	fcall	_lcd_goto
  1931                           
  1932                           ;games.c: 174:                 lcd_putch(0x7E, gameboard);
  1933  05C2  3005               	movlw	5
  1934  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1935  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1936  05C5  00B0               	movwf	lcd_putch@port
  1937  05C6  3000               	movlw	0
  1938  05C7  00B1               	movwf	lcd_putch@port+1
  1939  05C8  307E               	movlw	126
  1940  05C9  160A  118A  228D  120A  118A  	fcall	_lcd_putch
  1941  05CE                     l4847:	
  1942                           
  1943                           ;games.c: 175:                 event_enabled = 0;
  1944  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1945  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1946  05D0  01E8               	clrf	_event_enabled
  1947  05D1                     l4849:	
  1948                           
  1949                           ;games.c: 176:                 event_delay_count = 62;
  1950  05D1  303E               	movlw	62
  1951  05D2  00D7               	movwf	??_main
  1952  05D3  0857               	movf	??_main,w
  1953  05D4  00FA               	movwf	_event_delay_count
  1954  05D5                     l4851:	
  1955                           
  1956                           ;games.c: 151:     while(game_selection == 0xFF) {
  1957  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  1958  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  1959  05D7  0A68               	incf	main@game_selection^(0+128),w
  1960  05D8  1903               	btfsc	3,2
  1961  05D9  2DDB               	goto	u3881
  1962  05DA  2DDC               	goto	u3880
  1963  05DB                     u3881:	
  1964  05DB  2D33               	goto	l265
  1965  05DC                     u3880:	
  1966  05DC                     l4853:	
  1967                           
  1968                           ;games.c: 180:     game_over = 0;
  1969  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1970  05DD  01E2               	clrf	_game_over
  1971  05DE                     l4855:	
  1972                           
  1973                           ;games.c: 181:     lcd_clear(gameboard);
  1974  05DE  3005               	movlw	5
  1975  05DF  00A8               	movwf	lcd_clear@port
  1976  05E0  3000               	movlw	0
  1977  05E1  00A9               	movwf	lcd_clear@port+1
  1978  05E2  160A  118A  22B8  120A  118A  	fcall	_lcd_clear
  1979  05E7                     l4857:	
  1980                           
  1981                           ;games.c: 182:     lcd_clear(scoreboard);
  1982  05E7  3008               	movlw	8
  1983  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1984  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1985  05EA  00A8               	movwf	lcd_clear@port
  1986  05EB  3000               	movlw	0
  1987  05EC  00A9               	movwf	lcd_clear@port+1
  1988  05ED  160A  118A  22B8  120A  118A  	fcall	_lcd_clear
  1989  05F2                     l4859:	
  1990                           
  1991                           ;games.c: 183:     if(game_selection == 0x00) {
  1992  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  1993  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  1994  05F4  0868               	movf	main@game_selection^(0+128),w
  1995  05F5  1D03               	btfss	3,2
  1996  05F6  2DF8               	goto	u3891
  1997  05F7  2DF9               	goto	u3890
  1998  05F8                     u3891:	
  1999  05F8  2E16               	goto	l4869
  2000  05F9                     u3890:	
  2001  05F9                     l4861:	
  2002                           
  2003                           ;games.c: 184:         concentration_gameboard_init();
  2004  05F9  160A  118A  245F  120A  118A  	fcall	_concentration_gameboard_init
  2005                           
  2006                           ;games.c: 185:         concentration_title_screen();
  2007  05FE  160A  118A  2784  120A  118A  	fcall	_concentration_title_screen
  2008                           
  2009                           ;games.c: 186:         while(!game_over) {
  2010  0603  2E09               	goto	l4865
  2011  0604                     l4863:	
  2012                           
  2013                           ;games.c: 187:             concentration_game_loop();
  2014  0604  120A  118A  2630  120A  118A  	fcall	_concentration_game_loop
  2015  0609                     l4865:	
  2016                           
  2017                           ;games.c: 186:         while(!game_over) {
  2018  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2019  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2020  060B  0862               	movf	_game_over,w
  2021  060C  1903               	btfsc	3,2
  2022  060D  2E0F               	goto	u3901
  2023  060E  2E10               	goto	u3900
  2024  060F                     u3901:	
  2025  060F  2E04               	goto	l4863
  2026  0610                     u3900:	
  2027  0610                     l4867:	
  2028                           
  2029                           ;games.c: 189:         concentration_game_end();
  2030  0610  160A  118A  24AC  120A  118A  	fcall	_concentration_game_end
  2031                           
  2032                           ;games.c: 190:     } else {
  2033  0615  2E2D               	goto	l288
  2034  0616                     l4869:	
  2035                           
  2036                           ;games.c: 191:         simon_says_title_screen();
  2037  0616  160A  118A  2713  120A  118A  	fcall	_simon_says_title_screen
  2038                           
  2039                           ;games.c: 192:         while(!game_over) {
  2040  061B  2E21               	goto	l4873
  2041  061C                     l4871:	
  2042                           
  2043                           ;games.c: 193:             simon_says_game_loop();
  2044  061C  160A  118A  22D2  120A  118A  	fcall	_simon_says_game_loop
  2045  0621                     l4873:	
  2046                           
  2047                           ;games.c: 192:         while(!game_over) {
  2048  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0623  0862               	movf	_game_over,w
  2051  0624  1903               	btfsc	3,2
  2052  0625  2E27               	goto	u3911
  2053  0626  2E28               	goto	u3910
  2054  0627                     u3911:	
  2055  0627  2E1C               	goto	l4871
  2056  0628                     u3910:	
  2057  0628                     l4875:	
  2058                           
  2059                           ;games.c: 195:         simon_says_game_end();
  2060  0628  120A  118A  278B  120A  118A  	fcall	_simon_says_game_end
  2061  062D                     l288:	
  2062  062D  120A  118A  280E   	ljmp	start
  2063  0630                     __end_of_main:	
  2064                           
  2065                           	psect	text1
  2066  1357                     __ptext1:	
  2067 ;; *************** function _time_init *****************
  2068 ;; Defined at:
  2069 ;;		line 798 in file "games.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       1       0       0       0
  2086 ;;      Totals:         0       1       0       0       0
  2087 ;;Total ram usage:        1 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _time_init
  2099  1357                     _time_init:	
  2100  1357                     l4569:	
  2101                           ;incstack = 0
  2102                           ; Regs used in _time_init: [wreg+status,2+status,0]
  2103                           
  2104                           
  2105                           ;games.c: 799:     event_delay_count = 255;
  2106  1357  30FF               	movlw	255
  2107  1358  1283               	bcf	3,5	;RP0=0, select bank0
  2108  1359  1303               	bcf	3,6	;RP1=0, select bank0
  2109  135A  00A0               	movwf	??_time_init
  2110  135B  0820               	movf	??_time_init,w
  2111  135C  00FA               	movwf	_event_delay_count
  2112  135D                     l4571:	
  2113                           
  2114                           ;games.c: 800:     event_enabled = 1;
  2115  135D  01E8               	clrf	_event_enabled
  2116  135E  0AE8               	incf	_event_enabled,f
  2117                           
  2118                           ;games.c: 801:     PR2 = 250;
  2119  135F  30FA               	movlw	250
  2120  1360  1683               	bsf	3,5	;RP0=1, select bank1
  2121  1361  1303               	bcf	3,6	;RP1=0, select bank1
  2122  1362  0092               	movwf	18	;volatile
  2123  1363                     l4573:	
  2124                           
  2125                           ;games.c: 802:     TMR2IF = 0;
  2126  1363  1283               	bcf	3,5	;RP0=0, select bank0
  2127  1364  1303               	bcf	3,6	;RP1=0, select bank0
  2128  1365  108C               	bcf	12,1	;volatile
  2129  1366                     l4575:	
  2130                           
  2131                           ;games.c: 803:     TMR2IE = 1;
  2132  1366  1683               	bsf	3,5	;RP0=1, select bank1
  2133  1367  1303               	bcf	3,6	;RP1=0, select bank1
  2134  1368  148C               	bsf	12,1	;volatile
  2135                           
  2136                           ;games.c: 804:     T2CON = 0x56;
  2137  1369  3056               	movlw	86
  2138  136A  1283               	bcf	3,5	;RP0=0, select bank0
  2139  136B  1303               	bcf	3,6	;RP1=0, select bank0
  2140  136C  0092               	movwf	18	;volatile
  2141  136D                     l4577:	
  2142                           
  2143                           ;games.c: 806:     CCP1M3 = 1;
  2144  136D  1597               	bsf	23,3	;volatile
  2145  136E                     l4579:	
  2146                           
  2147                           ;games.c: 807:     CCP1M2 = 0;
  2148  136E  1117               	bcf	23,2	;volatile
  2149  136F                     l4581:	
  2150                           
  2151                           ;games.c: 808:     CCP1M1 = 1;
  2152  136F  1497               	bsf	23,1	;volatile
  2153  1370                     l4583:	
  2154                           
  2155                           ;games.c: 809:     CCP1M0 = 0;
  2156  1370  1017               	bcf	23,0	;volatile
  2157  1371                     l4585:	
  2158                           
  2159                           ;games.c: 810:     TMR1CS = 0;
  2160  1371  1090               	bcf	16,1	;volatile
  2161  1372                     l4587:	
  2162                           
  2163                           ;games.c: 811:     T1CKPS0 = 0;
  2164  1372  1210               	bcf	16,4	;volatile
  2165  1373                     l4589:	
  2166                           
  2167                           ;games.c: 812:     T1CKPS1 = 0;
  2168  1373  1290               	bcf	16,5	;volatile
  2169  1374                     l4591:	
  2170                           
  2171                           ;games.c: 813:     TMR1GE = 0;
  2172  1374  1310               	bcf	16,6	;volatile
  2173  1375                     l4593:	
  2174                           
  2175                           ;games.c: 814:     TMR1ON = 1;
  2176  1375  1410               	bsf	16,0	;volatile
  2177  1376                     l4595:	
  2178                           
  2179                           ;games.c: 816:     CCP2M3 = 1;
  2180  1376  159D               	bsf	29,3	;volatile
  2181  1377                     l4597:	
  2182                           
  2183                           ;games.c: 817:     CCP2M2 = 0;
  2184  1377  111D               	bcf	29,2	;volatile
  2185  1378                     l4599:	
  2186                           
  2187                           ;games.c: 818:     CCP2M1 = 0;
  2188  1378  109D               	bcf	29,1	;volatile
  2189  1379                     l4601:	
  2190                           
  2191                           ;games.c: 819:     CCP2M0 = 0;
  2192  1379  101D               	bcf	29,0	;volatile
  2193  137A                     l4603:	
  2194                           
  2195                           ;games.c: 820:     TRISC &= 0xFD;
  2196  137A  30FD               	movlw	253
  2197  137B  00A0               	movwf	??_time_init
  2198  137C  0820               	movf	??_time_init,w
  2199  137D  1683               	bsf	3,5	;RP0=1, select bank1
  2200  137E  1303               	bcf	3,6	;RP1=0, select bank1
  2201  137F  0587               	andwf	7,f	;volatile
  2202  1380                     l565:	
  2203  1380  0008               	return
  2204  1381                     __end_of_time_init:	
  2205                           
  2206                           	psect	text2
  2207  1713                     __ptext2:	
  2208 ;; *************** function _simon_says_title_screen *****************
  2209 ;; Defined at:
  2210 ;;		line 416 in file "games.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    4
  2231 ;; This function calls:
  2232 ;;		_DelayMs
  2233 ;;		_lcd_clear
  2234 ;;		_lcd_goto
  2235 ;;		_lcd_puts
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _simon_says_title_screen
  2243  1713                     _simon_says_title_screen:	
  2244  1713                     l4741:	
  2245                           ;incstack = 0
  2246                           ; Regs used in _simon_says_title_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2247                           
  2248                           
  2249                           ;games.c: 417:     lcd_puts("   Simon Says", scoreboard);
  2250  1713  3018               	movlw	low (STR_21| (0+32768))
  2251  1714  1283               	bcf	3,5	;RP0=0, select bank0
  2252  1715  1303               	bcf	3,6	;RP1=0, select bank0
  2253  1716  00A8               	movwf	lcd_puts@string
  2254  1717  3084               	movlw	high (STR_21| (0+32768))
  2255  1718  00A9               	movwf	lcd_puts@string+1
  2256  1719  3008               	movlw	8
  2257  171A  00AA               	movwf	lcd_puts@port
  2258  171B  3000               	movlw	0
  2259  171C  00AB               	movwf	lcd_puts@port+1
  2260  171D  160A  118A  23AF  160A  118A  	fcall	_lcd_puts
  2261                           
  2262                           ;games.c: 418:     lcd_puts("Press the button", gameboard);
  2263  1722  3063               	movlw	low (STR_22| (0+32768))
  2264  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2265  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2266  1725  00A8               	movwf	lcd_puts@string
  2267  1726  3083               	movlw	high (STR_22| (0+32768))
  2268  1727  00A9               	movwf	lcd_puts@string+1
  2269  1728  3005               	movlw	5
  2270  1729  00AA               	movwf	lcd_puts@port
  2271  172A  3000               	movlw	0
  2272  172B  00AB               	movwf	lcd_puts@port+1
  2273  172C  160A  118A  23AF  160A  118A  	fcall	_lcd_puts
  2274  1731                     l4743:	
  2275                           
  2276                           ;games.c: 419:     lcd_goto(0x40, gameboard);
  2277  1731  3005               	movlw	5
  2278  1732  1283               	bcf	3,5	;RP0=0, select bank0
  2279  1733  1303               	bcf	3,6	;RP1=0, select bank0
  2280  1734  00A8               	movwf	lcd_goto@port
  2281  1735  3000               	movlw	0
  2282  1736  00A9               	movwf	lcd_goto@port+1
  2283  1737  3040               	movlw	64
  2284  1738  160A  118A  22EC  160A  118A  	fcall	_lcd_goto
  2285  173D                     l4745:	
  2286                           
  2287                           ;games.c: 420:     lcd_puts("    to start", gameboard);
  2288  173D  3067               	movlw	low (STR_23| (0+32768))
  2289  173E  1283               	bcf	3,5	;RP0=0, select bank0
  2290  173F  1303               	bcf	3,6	;RP1=0, select bank0
  2291  1740  00A8               	movwf	lcd_puts@string
  2292  1741  3084               	movlw	high (STR_23| (0+32768))
  2293  1742  00A9               	movwf	lcd_puts@string+1
  2294  1743  3005               	movlw	5
  2295  1744  00AA               	movwf	lcd_puts@port
  2296  1745  3000               	movlw	0
  2297  1746  00AB               	movwf	lcd_puts@port+1
  2298  1747  160A  118A  23AF  160A  118A  	fcall	_lcd_puts
  2299  174C                     l383:	
  2300                           ;games.c: 421:     while(RB5 == 1);
  2301                           
  2302  174C  1283               	bcf	3,5	;RP0=0, select bank0
  2303  174D  1303               	bcf	3,6	;RP1=0, select bank0
  2304  174E  1A86               	btfsc	6,5	;volatile
  2305  174F  2F51               	goto	u3751
  2306  1750  2F52               	goto	u3750
  2307  1751                     u3751:	
  2308  1751  2F4C               	goto	l383
  2309  1752                     u3750:	
  2310  1752                     l4747:	
  2311                           
  2312                           ;games.c: 422:     DelayMs(8);
  2313  1752  3008               	movlw	8
  2314  1753  00A0               	movwf	DelayMs@millis
  2315  1754  3000               	movlw	0
  2316  1755  00A1               	movwf	DelayMs@millis+1
  2317  1756  160A  118A  229F  160A  118A  	fcall	_DelayMs
  2318  175B                     l386:	
  2319                           ;games.c: 423:     while(RB5 == 0);
  2320                           
  2321  175B  1283               	bcf	3,5	;RP0=0, select bank0
  2322  175C  1303               	bcf	3,6	;RP1=0, select bank0
  2323  175D  1E86               	btfss	6,5	;volatile
  2324  175E  2F60               	goto	u3761
  2325  175F  2F61               	goto	u3760
  2326  1760                     u3761:	
  2327  1760  2F5B               	goto	l386
  2328  1761                     u3760:	
  2329  1761                     l4749:	
  2330                           
  2331                           ;games.c: 424:     DelayMs(8);
  2332  1761  3008               	movlw	8
  2333  1762  00A0               	movwf	DelayMs@millis
  2334  1763  3000               	movlw	0
  2335  1764  00A1               	movwf	DelayMs@millis+1
  2336  1765  160A  118A  229F  160A  118A  	fcall	_DelayMs
  2337  176A                     l4751:	
  2338                           
  2339                           ;games.c: 425:     lcd_clear(scoreboard);
  2340  176A  3008               	movlw	8
  2341  176B  1283               	bcf	3,5	;RP0=0, select bank0
  2342  176C  1303               	bcf	3,6	;RP1=0, select bank0
  2343  176D  00A8               	movwf	lcd_clear@port
  2344  176E  3000               	movlw	0
  2345  176F  00A9               	movwf	lcd_clear@port+1
  2346  1770  160A  118A  22B8  160A  118A  	fcall	_lcd_clear
  2347  1775                     l4753:	
  2348                           
  2349                           ;games.c: 426:     lcd_clear(gameboard);
  2350  1775  3005               	movlw	5
  2351  1776  1283               	bcf	3,5	;RP0=0, select bank0
  2352  1777  1303               	bcf	3,6	;RP1=0, select bank0
  2353  1778  00A8               	movwf	lcd_clear@port
  2354  1779  3000               	movlw	0
  2355  177A  00A9               	movwf	lcd_clear@port+1
  2356  177B  160A  118A  22B8  160A  118A  	fcall	_lcd_clear
  2357  1780                     l4755:	
  2358                           
  2359                           ;games.c: 427:     p1_score = 0;
  2360  1780  1283               	bcf	3,5	;RP0=0, select bank0
  2361  1781  1303               	bcf	3,6	;RP1=0, select bank0
  2362  1782  01E7               	clrf	_p1_score
  2363  1783                     l389:	
  2364  1783  0008               	return
  2365  1784                     __end_of_simon_says_title_screen:	
  2366                           
  2367                           	psect	text3
  2368  12D2                     __ptext3:	
  2369 ;; *************** function _simon_says_game_loop *****************
  2370 ;; Defined at:
  2371 ;;		line 217 in file "games.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    5
  2392 ;; This function calls:
  2393 ;;		_countdown
  2394 ;;		_display_simon_says_scoreboard
  2395 ;;		_generate_pattern
  2396 ;;		_play_pattern
  2397 ;;		_simon_says_check_input
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _simon_says_game_loop
  2405  12D2                     _simon_says_game_loop:	
  2406  12D2                     l4757:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _simon_says_game_loop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2409                           
  2410                           
  2411                           ;games.c: 218:     display_simon_says_scoreboard();
  2412  12D2  120A  158A  204C  160A  118A  	fcall	_display_simon_says_scoreboard
  2413  12D7                     l4759:	
  2414                           
  2415                           ;games.c: 219:     countdown();
  2416  12D7  120A  158A  2005  160A  118A  	fcall	_countdown
  2417  12DC                     l4761:	
  2418                           
  2419                           ;games.c: 220:     generate_pattern();
  2420  12DC  120A  118A  223C  160A  118A  	fcall	_generate_pattern
  2421                           
  2422                           ;games.c: 221:     play_pattern();
  2423  12E1  120A  158A  26AB  160A  118A  	fcall	_play_pattern
  2424                           
  2425                           ;games.c: 222:     simon_says_check_input();
  2426  12E6  120A  158A  2477  160A  118A  	fcall	_simon_says_check_input
  2427  12EB                     l304:	
  2428  12EB  0008               	return
  2429  12EC                     __end_of_simon_says_game_loop:	
  2430                           
  2431                           	psect	text4
  2432  0C77                     __ptext4:	
  2433 ;; *************** function _simon_says_check_input *****************
  2434 ;; Defined at:
  2435 ;;		line 225 in file "games.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  i               1   21[BANK0 ] unsigned char 
  2440 ;;  current_opti    1   20[BANK0 ] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         0       2       0       0       0
  2452 ;;      Temps:          0       4       0       0       0
  2453 ;;      Totals:         0       6       0       0       0
  2454 ;;Total ram usage:        6 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    4
  2457 ;; This function calls:
  2458 ;;		___awdiv
  2459 ;;		_lcd_clear
  2460 ;;		_lcd_goto
  2461 ;;		_lcd_puts
  2462 ;;		_simon_says_get_input
  2463 ;; This function is called by:
  2464 ;;		_simon_says_game_loop
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _simon_says_check_input
  2470  0C77                     _simon_says_check_input:	
  2471  0C77                     l4355:	
  2472                           ;incstack = 0
  2473                           ; Regs used in _simon_says_check_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2474                           
  2475                           
  2476                           ;games.c: 226:     lcd_puts("    Now it's", gameboard);
  2477  0C77  305A               	movlw	low (STR_16| (0+32768))
  2478  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0C7A  00A8               	movwf	lcd_puts@string
  2481  0C7B  3084               	movlw	high (STR_16| (0+32768))
  2482  0C7C  00A9               	movwf	lcd_puts@string+1
  2483  0C7D  3005               	movlw	5
  2484  0C7E  00AA               	movwf	lcd_puts@port
  2485  0C7F  3000               	movlw	0
  2486  0C80  00AB               	movwf	lcd_puts@port+1
  2487  0C81  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  2488  0C86                     l4357:	
  2489                           
  2490                           ;games.c: 227:     lcd_goto(0x40, gameboard);
  2491  0C86  3005               	movlw	5
  2492  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0C89  00A8               	movwf	lcd_goto@port
  2495  0C8A  3000               	movlw	0
  2496  0C8B  00A9               	movwf	lcd_goto@port+1
  2497  0C8C  3040               	movlw	64
  2498  0C8D  160A  118A  22EC  120A  158A  	fcall	_lcd_goto
  2499  0C92                     l4359:	
  2500                           
  2501                           ;games.c: 228:     lcd_puts("   your turn!", gameboard);
  2502  0C92  30FC               	movlw	low (STR_17| (0+32768))
  2503  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0C95  00A8               	movwf	lcd_puts@string
  2506  0C96  3083               	movlw	high (STR_17| (0+32768))
  2507  0C97  00A9               	movwf	lcd_puts@string+1
  2508  0C98  3005               	movlw	5
  2509  0C99  00AA               	movwf	lcd_puts@port
  2510  0C9A  3000               	movlw	0
  2511  0C9B  00AB               	movwf	lcd_puts@port+1
  2512  0C9C  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  2513  0CA1                     l4361:	
  2514                           
  2515                           ;games.c: 229:     char i;;games.c: 230:     char current_option;;games.c: 231:     for(
      +                          i=0;i<(p1_score+1);i++) {
  2516  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0CA3  01B5               	clrf	simon_says_check_input@i
  2519  0CA4  2D59               	goto	l4381
  2520  0CA5                     l4363:	
  2521                           
  2522                           ;games.c: 234:                 current_option = (simon_says_pattern[i/4])&0x03;
  2523  0CA5  3004               	movlw	4
  2524  0CA6  00A7               	movwf	___awdiv@divisor
  2525  0CA7  3000               	movlw	0
  2526  0CA8  00A8               	movwf	___awdiv@divisor+1
  2527  0CA9  0835               	movf	simon_says_check_input@i,w
  2528  0CAA  00B0               	movwf	??_simon_says_check_input
  2529  0CAB  01B1               	clrf	??_simon_says_check_input+1
  2530  0CAC  0830               	movf	??_simon_says_check_input,w
  2531  0CAD  00A9               	movwf	___awdiv@dividend
  2532  0CAE  0831               	movf	??_simon_says_check_input+1,w
  2533  0CAF  00AA               	movwf	___awdiv@dividend+1
  2534  0CB0  160A  118A  26AA  120A  158A  	fcall	___awdiv
  2535  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0CB7  0827               	movf	?___awdiv,w
  2538  0CB8  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2539  0CB9  0084               	movwf	4
  2540  0CBA  1383               	bcf	3,7	;select IRP bank0
  2541  0CBB  0800               	movf	0,w
  2542  0CBC  3903               	andlw	3
  2543  0CBD  00B2               	movwf	??_simon_says_check_input+2
  2544  0CBE  0832               	movf	??_simon_says_check_input+2,w
  2545  0CBF  00B4               	movwf	simon_says_check_input@current_option
  2546                           
  2547                           ;games.c: 235:                 break;
  2548  0CC0  2D46               	goto	l4375
  2549  0CC1                     l4365:	
  2550                           
  2551                           ;games.c: 237:                 current_option = (((simon_says_pattern[i/4])&0x0C)>>2);
  2552  0CC1  3004               	movlw	4
  2553  0CC2  00A7               	movwf	___awdiv@divisor
  2554  0CC3  3000               	movlw	0
  2555  0CC4  00A8               	movwf	___awdiv@divisor+1
  2556  0CC5  0835               	movf	simon_says_check_input@i,w
  2557  0CC6  00B0               	movwf	??_simon_says_check_input
  2558  0CC7  01B1               	clrf	??_simon_says_check_input+1
  2559  0CC8  0830               	movf	??_simon_says_check_input,w
  2560  0CC9  00A9               	movwf	___awdiv@dividend
  2561  0CCA  0831               	movf	??_simon_says_check_input+1,w
  2562  0CCB  00AA               	movwf	___awdiv@dividend+1
  2563  0CCC  160A  118A  26AA  120A  158A  	fcall	___awdiv
  2564  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0CD3  0827               	movf	?___awdiv,w
  2567  0CD4  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2568  0CD5  0084               	movwf	4
  2569  0CD6  1383               	bcf	3,7	;select IRP bank0
  2570  0CD7  0800               	movf	0,w
  2571  0CD8  00B2               	movwf	??_simon_says_check_input+2
  2572  0CD9  3002               	movlw	2
  2573  0CDA                     u3285:	
  2574  0CDA  1003               	clrc
  2575  0CDB  0CB2               	rrf	??_simon_says_check_input+2,f
  2576  0CDC  3EFF               	addlw	-1
  2577  0CDD  1D03               	skipz
  2578  0CDE  2CDA               	goto	u3285
  2579  0CDF  0832               	movf	??_simon_says_check_input+2,w
  2580  0CE0  3903               	andlw	3
  2581  0CE1  00B3               	movwf	??_simon_says_check_input+3
  2582  0CE2  0833               	movf	??_simon_says_check_input+3,w
  2583  0CE3  00B4               	movwf	simon_says_check_input@current_option
  2584                           
  2585                           ;games.c: 238:                 break;
  2586  0CE4  2D46               	goto	l4375
  2587  0CE5                     l4367:	
  2588                           
  2589                           ;games.c: 240:                 current_option = (((simon_says_pattern[i/4])&0x30)>>4);
  2590  0CE5  3004               	movlw	4
  2591  0CE6  00A7               	movwf	___awdiv@divisor
  2592  0CE7  3000               	movlw	0
  2593  0CE8  00A8               	movwf	___awdiv@divisor+1
  2594  0CE9  0835               	movf	simon_says_check_input@i,w
  2595  0CEA  00B0               	movwf	??_simon_says_check_input
  2596  0CEB  01B1               	clrf	??_simon_says_check_input+1
  2597  0CEC  0830               	movf	??_simon_says_check_input,w
  2598  0CED  00A9               	movwf	___awdiv@dividend
  2599  0CEE  0831               	movf	??_simon_says_check_input+1,w
  2600  0CEF  00AA               	movwf	___awdiv@dividend+1
  2601  0CF0  160A  118A  26AA  120A  158A  	fcall	___awdiv
  2602  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0CF7  0827               	movf	?___awdiv,w
  2605  0CF8  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2606  0CF9  0084               	movwf	4
  2607  0CFA  1383               	bcf	3,7	;select IRP bank0
  2608  0CFB  0800               	movf	0,w
  2609  0CFC  00B2               	movwf	??_simon_says_check_input+2
  2610  0CFD  3004               	movlw	4
  2611  0CFE                     u3295:	
  2612  0CFE  1003               	clrc
  2613  0CFF  0CB2               	rrf	??_simon_says_check_input+2,f
  2614  0D00  3EFF               	addlw	-1
  2615  0D01  1D03               	skipz
  2616  0D02  2CFE               	goto	u3295
  2617  0D03  0832               	movf	??_simon_says_check_input+2,w
  2618  0D04  3903               	andlw	3
  2619  0D05  00B3               	movwf	??_simon_says_check_input+3
  2620  0D06  0833               	movf	??_simon_says_check_input+3,w
  2621  0D07  00B4               	movwf	simon_says_check_input@current_option
  2622                           
  2623                           ;games.c: 241:                 break;
  2624  0D08  2D46               	goto	l4375
  2625  0D09                     l4369:	
  2626                           
  2627                           ;games.c: 243:                 current_option = (((simon_says_pattern[i/4])&0xC0)>>6);
  2628  0D09  3004               	movlw	4
  2629  0D0A  00A7               	movwf	___awdiv@divisor
  2630  0D0B  3000               	movlw	0
  2631  0D0C  00A8               	movwf	___awdiv@divisor+1
  2632  0D0D  0835               	movf	simon_says_check_input@i,w
  2633  0D0E  00B0               	movwf	??_simon_says_check_input
  2634  0D0F  01B1               	clrf	??_simon_says_check_input+1
  2635  0D10  0830               	movf	??_simon_says_check_input,w
  2636  0D11  00A9               	movwf	___awdiv@dividend
  2637  0D12  0831               	movf	??_simon_says_check_input+1,w
  2638  0D13  00AA               	movwf	___awdiv@dividend+1
  2639  0D14  160A  118A  26AA  120A  158A  	fcall	___awdiv
  2640  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0D1B  0827               	movf	?___awdiv,w
  2643  0D1C  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  2644  0D1D  0084               	movwf	4
  2645  0D1E  1383               	bcf	3,7	;select IRP bank0
  2646  0D1F  0800               	movf	0,w
  2647  0D20  00B2               	movwf	??_simon_says_check_input+2
  2648  0D21  3006               	movlw	6
  2649  0D22                     u3305:	
  2650  0D22  1003               	clrc
  2651  0D23  0CB2               	rrf	??_simon_says_check_input+2,f
  2652  0D24  3EFF               	addlw	-1
  2653  0D25  1D03               	skipz
  2654  0D26  2D22               	goto	u3305
  2655  0D27  0832               	movf	??_simon_says_check_input+2,w
  2656  0D28  3903               	andlw	3
  2657  0D29  00B3               	movwf	??_simon_says_check_input+3
  2658  0D2A  0833               	movf	??_simon_says_check_input+3,w
  2659  0D2B  00B4               	movwf	simon_says_check_input@current_option
  2660                           
  2661                           ;games.c: 244:                 break;
  2662  0D2C  2D46               	goto	l4375
  2663  0D2D                     l4373:	
  2664  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0D2F  0835               	movf	simon_says_check_input@i,w
  2667  0D30  3903               	andlw	3
  2668  0D31  00B0               	movwf	??_simon_says_check_input
  2669  0D32  01B1               	clrf	??_simon_says_check_input+1
  2670                           
  2671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2672                           ; Switch size 1, requested type "simple"
  2673                           ; Number of cases is 1, Range of values is 0 to 0
  2674                           ; switch strategies available:
  2675                           ; Name         Instructions Cycles
  2676                           ; simple_byte            4     3 (average)
  2677                           ; direct_byte           11     8 (fixed)
  2678                           ; jumptable            260     6 (fixed)
  2679                           ;	Chosen strategy is simple_byte
  2680  0D33  0831               	movf	??_simon_says_check_input+1,w
  2681  0D34  3A00               	xorlw	0	; case 0
  2682  0D35  1903               	skipnz
  2683  0D36  2D38               	goto	l5125
  2684  0D37  2D46               	goto	l4375
  2685  0D38                     l5125:	
  2686                           
  2687                           ; Switch size 1, requested type "simple"
  2688                           ; Number of cases is 4, Range of values is 0 to 3
  2689                           ; switch strategies available:
  2690                           ; Name         Instructions Cycles
  2691                           ; simple_byte           13     7 (average)
  2692                           ; direct_byte           20     8 (fixed)
  2693                           ; jumptable            260     6 (fixed)
  2694                           ;	Chosen strategy is simple_byte
  2695  0D38  0830               	movf	??_simon_says_check_input,w
  2696  0D39  3A00               	xorlw	0	; case 0
  2697  0D3A  1903               	skipnz
  2698  0D3B  2CA5               	goto	l4363
  2699  0D3C  3A01               	xorlw	1	; case 1
  2700  0D3D  1903               	skipnz
  2701  0D3E  2CC1               	goto	l4365
  2702  0D3F  3A03               	xorlw	3	; case 2
  2703  0D40  1903               	skipnz
  2704  0D41  2CE5               	goto	l4367
  2705  0D42  3A01               	xorlw	1	; case 3
  2706  0D43  1903               	skipnz
  2707  0D44  2D09               	goto	l4369
  2708  0D45  2D46               	goto	l4375
  2709  0D46                     l4375:	
  2710                           
  2711                           ;games.c: 246:         if(current_option != simon_says_get_input()) {
  2712  0D46  120A  158A  258A  120A  158A  	fcall	_simon_says_get_input
  2713  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0D4D  0634               	xorwf	simon_says_check_input@current_option,w
  2716  0D4E  1903               	skipnz
  2717  0D4F  2D51               	goto	u3311
  2718  0D50  2D52               	goto	u3310
  2719  0D51                     u3311:	
  2720  0D51  2D55               	goto	l4379
  2721  0D52                     u3310:	
  2722  0D52                     l4377:	
  2723                           
  2724                           ;games.c: 247:             game_over = 1;
  2725  0D52  01E2               	clrf	_game_over
  2726  0D53  0AE2               	incf	_game_over,f
  2727                           
  2728                           ;games.c: 248:             break;
  2729  0D54  2D6B               	goto	l4383
  2730  0D55                     l4379:	
  2731                           
  2732                           ;games.c: 250:     }
  2733  0D55  3001               	movlw	1
  2734  0D56  00B0               	movwf	??_simon_says_check_input
  2735  0D57  0830               	movf	??_simon_says_check_input,w
  2736  0D58  07B5               	addwf	simon_says_check_input@i,f
  2737  0D59                     l4381:	
  2738  0D59  0867               	movf	_p1_score,w
  2739  0D5A  3E01               	addlw	1
  2740  0D5B  00B0               	movwf	??_simon_says_check_input
  2741  0D5C  3000               	movlw	0
  2742  0D5D  1803               	skipnc
  2743  0D5E  3001               	movlw	1
  2744  0D5F  00B1               	movwf	??_simon_says_check_input+1
  2745  0D60  0831               	movf	??_simon_says_check_input+1,w
  2746  0D61  3A80               	xorlw	128
  2747  0D62  3C80               	sublw	128
  2748  0D63  1D03               	skipz
  2749  0D64  2D67               	goto	u3325
  2750  0D65  0830               	movf	??_simon_says_check_input,w
  2751  0D66  0235               	subwf	simon_says_check_input@i,w
  2752  0D67                     u3325:	
  2753  0D67  1C03               	skipc
  2754  0D68  2D6A               	goto	u3321
  2755  0D69  2D6B               	goto	u3320
  2756  0D6A                     u3321:	
  2757  0D6A  2D2D               	goto	l4373
  2758  0D6B                     u3320:	
  2759  0D6B                     l4383:	
  2760                           
  2761                           ;games.c: 251:     lcd_clear(gameboard);
  2762  0D6B  3005               	movlw	5
  2763  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0D6E  00A8               	movwf	lcd_clear@port
  2766  0D6F  3000               	movlw	0
  2767  0D70  00A9               	movwf	lcd_clear@port+1
  2768  0D71  160A  118A  22B8  120A  158A  	fcall	_lcd_clear
  2769  0D76                     l4385:	
  2770                           
  2771                           ;games.c: 252:     if(game_over == 0) {
  2772  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0D78  0862               	movf	_game_over,w
  2775  0D79  1D03               	btfss	3,2
  2776  0D7A  2D7C               	goto	u3331
  2777  0D7B  2D7D               	goto	u3330
  2778  0D7C                     u3331:	
  2779  0D7C  2D81               	goto	l317
  2780  0D7D                     u3330:	
  2781  0D7D                     l4387:	
  2782                           
  2783                           ;games.c: 253:         p1_score++;
  2784  0D7D  3001               	movlw	1
  2785  0D7E  00B0               	movwf	??_simon_says_check_input
  2786  0D7F  0830               	movf	??_simon_says_check_input,w
  2787  0D80  07E7               	addwf	_p1_score,f
  2788  0D81                     l317:	
  2789                           ;games.c: 254:     }
  2790                           
  2791                           
  2792                           ;games.c: 255:     if(p1_score == 20) {
  2793  0D81  3014               	movlw	20
  2794  0D82  0667               	xorwf	_p1_score,w
  2795  0D83  1D03               	btfss	3,2
  2796  0D84  2D86               	goto	u3341
  2797  0D85  2D87               	goto	u3340
  2798  0D86                     u3341:	
  2799  0D86  2D89               	goto	l319
  2800  0D87                     u3340:	
  2801  0D87                     l4389:	
  2802                           
  2803                           ;games.c: 256:         game_over = 1;
  2804  0D87  01E2               	clrf	_game_over
  2805  0D88  0AE2               	incf	_game_over,f
  2806  0D89                     l319:	
  2807  0D89  0008               	return
  2808  0D8A                     __end_of_simon_says_check_input:	
  2809                           
  2810                           	psect	text5
  2811  0D8A                     __ptext5:	
  2812 ;; *************** function _simon_says_get_input *****************
  2813 ;; Defined at:
  2814 ;;		line 260 in file "games.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  current_inpu    1    5[BANK0 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       1       0       0       0
  2830 ;;      Temps:          0       2       0       0       0
  2831 ;;      Totals:         0       3       0       0       0
  2832 ;;Total ram usage:        3 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    2
  2835 ;; This function calls:
  2836 ;;		_DelayMs
  2837 ;;		_turn_on_led
  2838 ;; This function is called by:
  2839 ;;		_simon_says_check_input
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _simon_says_get_input
  2845  0D8A                     _simon_says_get_input:	
  2846  0D8A                     l322:	
  2847                           ;incstack = 0
  2848                           ; Regs used in _simon_says_get_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2849                           ;games.c: 261:     char current_input;;games.c: 262:     while(1) {
  2850                           
  2851                           
  2852                           ;games.c: 263:         if(GO == 0) {
  2853  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0D8C  189F               	btfsc	31,1	;volatile
  2856  0D8D  2D8F               	goto	u2931
  2857  0D8E  2D90               	goto	u2930
  2858  0D8F                     u2931:	
  2859  0D8F  2D91               	goto	l4011
  2860  0D90                     u2930:	
  2861  0D90                     l4009:	
  2862                           
  2863                           ;games.c: 264:             GO = 1;
  2864  0D90  149F               	bsf	31,1	;volatile
  2865  0D91                     l4011:	
  2866                           
  2867                           ;games.c: 266:         if(joystick_x_pos > 1000) {
  2868  0D91  0861               	movf	_joystick_x_pos+1,w
  2869  0D92  3A80               	xorlw	128
  2870  0D93  00FF               	movwf	btemp+1
  2871  0D94  3083               	movlw	131
  2872  0D95  027F               	subwf	btemp+1,w
  2873  0D96  1D03               	skipz
  2874  0D97  2D9A               	goto	u2945
  2875  0D98  30E9               	movlw	233
  2876  0D99  0260               	subwf	_joystick_x_pos,w
  2877  0D9A                     u2945:	
  2878  0D9A  1C03               	skipc
  2879  0D9B  2D9D               	goto	u2941
  2880  0D9C  2D9E               	goto	u2940
  2881  0D9D                     u2941:	
  2882  0D9D  2DC8               	goto	l4029
  2883  0D9E                     u2940:	
  2884  0D9E                     l4013:	
  2885                           
  2886                           ;games.c: 267:             if(CCP2IE == 0) {
  2887  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  2888  0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  2889  0DA0  180D               	btfsc	13,0	;volatile
  2890  0DA1  2DA3               	goto	u2951
  2891  0DA2  2DA4               	goto	u2950
  2892  0DA3                     u2951:	
  2893  0DA3  2DC0               	goto	l4025
  2894  0DA4                     u2950:	
  2895  0DA4                     l4015:	
  2896                           
  2897                           ;games.c: 268:                 tone_delay = 17026;
  2898  0DA4  3082               	movlw	130
  2899  0DA5  00F6               	movwf	_tone_delay
  2900  0DA6  3042               	movlw	66
  2901  0DA7  00F7               	movwf	_tone_delay+1
  2902  0DA8                     l4017:	
  2903                           
  2904                           ;games.c: 269:                 CCPR2 = TMR1+17026;
  2905  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0DAA  080E               	movf	14,w	;volatile
  2908  0DAB  3E82               	addlw	130
  2909  0DAC  00A3               	movwf	??_simon_says_get_input
  2910  0DAD  080F               	movf	15,w	;volatile
  2911  0DAE  1803               	skipnc
  2912  0DAF  3E01               	addlw	1
  2913  0DB0  3E42               	addlw	66
  2914  0DB1  00A4               	movwf	??_simon_says_get_input+1
  2915  0DB2  0823               	movf	??_simon_says_get_input,w
  2916  0DB3  009B               	movwf	27	;volatile
  2917  0DB4  0824               	movf	??_simon_says_get_input+1,w
  2918  0DB5  009C               	movwf	28	;volatile
  2919  0DB6                     l4019:	
  2920                           
  2921                           ;games.c: 270:                 CCP2IF = 0;
  2922  0DB6  100D               	bcf	13,0	;volatile
  2923  0DB7                     l4021:	
  2924                           
  2925                           ;games.c: 271:                 CCP2IE = 1;
  2926  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2928  0DB9  140D               	bsf	13,0	;volatile
  2929  0DBA                     l4023:	
  2930                           
  2931                           ;games.c: 272:                 turn_on_led(0);
  2932  0DBA  3000               	movlw	0
  2933  0DBB  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  2934  0DC0                     l4025:	
  2935                           
  2936                           ;games.c: 274:             if(RB5 == 0) {
  2937  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0DC2  1A86               	btfsc	6,5	;volatile
  2940  0DC3  2DC5               	goto	u2961
  2941  0DC4  2DC6               	goto	u2960
  2942  0DC5                     u2961:	
  2943  0DC5  2D8A               	goto	l322
  2944  0DC6                     u2960:	
  2945  0DC6                     l4027:	
  2946                           
  2947                           ;games.c: 275:                 current_input = 0;
  2948  0DC6  01A5               	clrf	simon_says_get_input@current_input
  2949                           
  2950                           ;games.c: 276:                 break;
  2951  0DC7  2E85               	goto	l327
  2952  0DC8                     l4029:	
  2953  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0DCA  0861               	movf	_joystick_x_pos+1,w
  2956  0DCB  3A80               	xorlw	128
  2957  0DCC  00FF               	movwf	btemp+1
  2958  0DCD  3080               	movlw	128
  2959  0DCE  027F               	subwf	btemp+1,w
  2960  0DCF  1D03               	skipz
  2961  0DD0  2DD3               	goto	u2975
  2962  0DD1  3014               	movlw	20
  2963  0DD2  0260               	subwf	_joystick_x_pos,w
  2964  0DD3                     u2975:	
  2965  0DD3  1803               	skipnc
  2966  0DD4  2DD6               	goto	u2971
  2967  0DD5  2DD7               	goto	u2970
  2968  0DD6                     u2971:	
  2969  0DD6  2E02               	goto	l4047
  2970  0DD7                     u2970:	
  2971  0DD7                     l4031:	
  2972                           
  2973                           ;games.c: 279:             if(CCP2IE == 0) {
  2974  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  2975  0DD8  1303               	bcf	3,6	;RP1=0, select bank1
  2976  0DD9  180D               	btfsc	13,0	;volatile
  2977  0DDA  2DDC               	goto	u2981
  2978  0DDB  2DDD               	goto	u2980
  2979  0DDC                     u2981:	
  2980  0DDC  2DF9               	goto	l4043
  2981  0DDD                     u2980:	
  2982  0DDD                     l4033:	
  2983                           
  2984                           ;games.c: 280:                 tone_delay = 8513;
  2985  0DDD  3041               	movlw	65
  2986  0DDE  00F6               	movwf	_tone_delay
  2987  0DDF  3021               	movlw	33
  2988  0DE0  00F7               	movwf	_tone_delay+1
  2989  0DE1                     l4035:	
  2990                           
  2991                           ;games.c: 281:                 CCPR2 = TMR1+8513;
  2992  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2994  0DE3  080E               	movf	14,w	;volatile
  2995  0DE4  3E41               	addlw	65
  2996  0DE5  00A3               	movwf	??_simon_says_get_input
  2997  0DE6  080F               	movf	15,w	;volatile
  2998  0DE7  1803               	skipnc
  2999  0DE8  3E01               	addlw	1
  3000  0DE9  3E21               	addlw	33
  3001  0DEA  00A4               	movwf	??_simon_says_get_input+1
  3002  0DEB  0823               	movf	??_simon_says_get_input,w
  3003  0DEC  009B               	movwf	27	;volatile
  3004  0DED  0824               	movf	??_simon_says_get_input+1,w
  3005  0DEE  009C               	movwf	28	;volatile
  3006  0DEF                     l4037:	
  3007                           
  3008                           ;games.c: 282:                 CCP2IF = 0;
  3009  0DEF  100D               	bcf	13,0	;volatile
  3010  0DF0                     l4039:	
  3011                           
  3012                           ;games.c: 283:                 CCP2IE = 1;
  3013  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  3014  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  3015  0DF2  140D               	bsf	13,0	;volatile
  3016  0DF3                     l4041:	
  3017                           
  3018                           ;games.c: 284:                 turn_on_led(1);
  3019  0DF3  3001               	movlw	1
  3020  0DF4  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  3021  0DF9                     l4043:	
  3022                           
  3023                           ;games.c: 286:             if(RB5 == 0) {
  3024  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0DFB  1A86               	btfsc	6,5	;volatile
  3027  0DFC  2DFE               	goto	u2991
  3028  0DFD  2DFF               	goto	u2990
  3029  0DFE                     u2991:	
  3030  0DFE  2D8A               	goto	l322
  3031  0DFF                     u2990:	
  3032  0DFF                     l4045:	
  3033                           
  3034                           ;games.c: 287:                 current_input = 1;
  3035  0DFF  01A5               	clrf	simon_says_get_input@current_input
  3036  0E00  0AA5               	incf	simon_says_get_input@current_input,f
  3037                           
  3038                           ;games.c: 288:                 break;
  3039  0E01  2E85               	goto	l327
  3040  0E02                     l4047:	
  3041  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0E04  085F               	movf	_joystick_y_pos+1,w
  3044  0E05  3A80               	xorlw	128
  3045  0E06  00FF               	movwf	btemp+1
  3046  0E07  3083               	movlw	131
  3047  0E08  027F               	subwf	btemp+1,w
  3048  0E09  1D03               	skipz
  3049  0E0A  2E0D               	goto	u3005
  3050  0E0B  30E9               	movlw	233
  3051  0E0C  025E               	subwf	_joystick_y_pos,w
  3052  0E0D                     u3005:	
  3053  0E0D  1C03               	skipc
  3054  0E0E  2E10               	goto	u3001
  3055  0E0F  2E11               	goto	u3000
  3056  0E10                     u3001:	
  3057  0E10  2E3E               	goto	l4065
  3058  0E11                     u3000:	
  3059  0E11                     l4049:	
  3060                           
  3061                           ;games.c: 291:             if(CCP2IE == 0) {
  3062  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3063  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  3064  0E13  180D               	btfsc	13,0	;volatile
  3065  0E14  2E16               	goto	u3011
  3066  0E15  2E17               	goto	u3010
  3067  0E16                     u3011:	
  3068  0E16  2E33               	goto	l4061
  3069  0E17                     u3010:	
  3070  0E17                     l4051:	
  3071                           
  3072                           ;games.c: 292:                 tone_delay = 4257;
  3073  0E17  30A1               	movlw	161
  3074  0E18  00F6               	movwf	_tone_delay
  3075  0E19  3010               	movlw	16
  3076  0E1A  00F7               	movwf	_tone_delay+1
  3077  0E1B                     l4053:	
  3078                           
  3079                           ;games.c: 293:                 CCPR2 = TMR1+4257;
  3080  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0E1D  080E               	movf	14,w	;volatile
  3083  0E1E  3EA1               	addlw	161
  3084  0E1F  00A3               	movwf	??_simon_says_get_input
  3085  0E20  080F               	movf	15,w	;volatile
  3086  0E21  1803               	skipnc
  3087  0E22  3E01               	addlw	1
  3088  0E23  3E10               	addlw	16
  3089  0E24  00A4               	movwf	??_simon_says_get_input+1
  3090  0E25  0823               	movf	??_simon_says_get_input,w
  3091  0E26  009B               	movwf	27	;volatile
  3092  0E27  0824               	movf	??_simon_says_get_input+1,w
  3093  0E28  009C               	movwf	28	;volatile
  3094  0E29                     l4055:	
  3095                           
  3096                           ;games.c: 294:                 CCP2IF = 0;
  3097  0E29  100D               	bcf	13,0	;volatile
  3098  0E2A                     l4057:	
  3099                           
  3100                           ;games.c: 295:                 CCP2IE = 1;
  3101  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  3102  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  3103  0E2C  140D               	bsf	13,0	;volatile
  3104  0E2D                     l4059:	
  3105                           
  3106                           ;games.c: 296:                 turn_on_led(2);
  3107  0E2D  3002               	movlw	2
  3108  0E2E  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  3109  0E33                     l4061:	
  3110                           
  3111                           ;games.c: 298:             if(RB5 == 0) {
  3112  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0E35  1A86               	btfsc	6,5	;volatile
  3115  0E36  2E38               	goto	u3021
  3116  0E37  2E39               	goto	u3020
  3117  0E38                     u3021:	
  3118  0E38  2D8A               	goto	l322
  3119  0E39                     u3020:	
  3120  0E39                     l4063:	
  3121                           
  3122                           ;games.c: 299:                 current_input = 2;
  3123  0E39  3002               	movlw	2
  3124  0E3A  00A3               	movwf	??_simon_says_get_input
  3125  0E3B  0823               	movf	??_simon_says_get_input,w
  3126  0E3C  00A5               	movwf	simon_says_get_input@current_input
  3127                           
  3128                           ;games.c: 300:                 break;
  3129  0E3D  2E85               	goto	l327
  3130  0E3E                     l4065:	
  3131  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0E40  085F               	movf	_joystick_y_pos+1,w
  3134  0E41  3A80               	xorlw	128
  3135  0E42  00FF               	movwf	btemp+1
  3136  0E43  3080               	movlw	128
  3137  0E44  027F               	subwf	btemp+1,w
  3138  0E45  1D03               	skipz
  3139  0E46  2E49               	goto	u3035
  3140  0E47  3014               	movlw	20
  3141  0E48  025E               	subwf	_joystick_y_pos,w
  3142  0E49                     u3035:	
  3143  0E49  1803               	skipnc
  3144  0E4A  2E4C               	goto	u3031
  3145  0E4B  2E4D               	goto	u3030
  3146  0E4C                     u3031:	
  3147  0E4C  2E7A               	goto	l337
  3148  0E4D                     u3030:	
  3149  0E4D                     l4067:	
  3150                           
  3151                           ;games.c: 303:             if(CCP2IE == 0) {
  3152  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  3154  0E4F  180D               	btfsc	13,0	;volatile
  3155  0E50  2E52               	goto	u3041
  3156  0E51  2E53               	goto	u3040
  3157  0E52                     u3041:	
  3158  0E52  2E6F               	goto	l4079
  3159  0E53                     u3040:	
  3160  0E53                     l4069:	
  3161                           
  3162                           ;games.c: 304:                 tone_delay = 2128;
  3163  0E53  3050               	movlw	80
  3164  0E54  00F6               	movwf	_tone_delay
  3165  0E55  3008               	movlw	8
  3166  0E56  00F7               	movwf	_tone_delay+1
  3167  0E57                     l4071:	
  3168                           
  3169                           ;games.c: 305:                 CCPR2 = TMR1+2128;
  3170  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  3171  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  3172  0E59  080E               	movf	14,w	;volatile
  3173  0E5A  3E50               	addlw	80
  3174  0E5B  00A3               	movwf	??_simon_says_get_input
  3175  0E5C  080F               	movf	15,w	;volatile
  3176  0E5D  1803               	skipnc
  3177  0E5E  3E01               	addlw	1
  3178  0E5F  3E08               	addlw	8
  3179  0E60  00A4               	movwf	??_simon_says_get_input+1
  3180  0E61  0823               	movf	??_simon_says_get_input,w
  3181  0E62  009B               	movwf	27	;volatile
  3182  0E63  0824               	movf	??_simon_says_get_input+1,w
  3183  0E64  009C               	movwf	28	;volatile
  3184  0E65                     l4073:	
  3185                           
  3186                           ;games.c: 306:                 CCP2IF = 0;
  3187  0E65  100D               	bcf	13,0	;volatile
  3188  0E66                     l4075:	
  3189                           
  3190                           ;games.c: 307:                 CCP2IE = 1;
  3191  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  3193  0E68  140D               	bsf	13,0	;volatile
  3194  0E69                     l4077:	
  3195                           
  3196                           ;games.c: 308:                 turn_on_led(5);
  3197  0E69  3005               	movlw	5
  3198  0E6A  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  3199  0E6F                     l4079:	
  3200                           
  3201                           ;games.c: 310:             if(RB5 == 0) {
  3202  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0E71  1A86               	btfsc	6,5	;volatile
  3205  0E72  2E74               	goto	u3051
  3206  0E73  2E75               	goto	u3050
  3207  0E74                     u3051:	
  3208  0E74  2E84               	goto	l328
  3209  0E75                     u3050:	
  3210  0E75                     l4081:	
  3211                           
  3212                           ;games.c: 311:                 current_input = 3;
  3213  0E75  3003               	movlw	3
  3214  0E76  00A3               	movwf	??_simon_says_get_input
  3215  0E77  0823               	movf	??_simon_says_get_input,w
  3216  0E78  00A5               	movwf	simon_says_get_input@current_input
  3217                           
  3218                           ;games.c: 312:                 break;
  3219  0E79  2E85               	goto	l327
  3220  0E7A                     l337:	
  3221                           
  3222                           ;games.c: 315:             CCP2IE = 0;
  3223  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  3225  0E7C  100D               	bcf	13,0	;volatile
  3226  0E7D                     l4083:	
  3227                           
  3228                           ;games.c: 316:             PORTC &= 0x1F;
  3229  0E7D  301F               	movlw	31
  3230  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0E80  00A3               	movwf	??_simon_says_get_input
  3233  0E81  0823               	movf	??_simon_says_get_input,w
  3234  0E82  0587               	andwf	7,f	;volatile
  3235  0E83  2D8A               	goto	l322
  3236  0E84                     l328:	
  3237  0E84  2D8A               	goto	l322
  3238  0E85                     l327:	
  3239                           
  3240                           ;games.c: 319:     CCP2IE = 0;
  3241  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3242  0E86  1303               	bcf	3,6	;RP1=0, select bank1
  3243  0E87  100D               	bcf	13,0	;volatile
  3244  0E88                     l4085:	
  3245                           
  3246                           ;games.c: 320:     PORTC &= 0x1F;
  3247  0E88  301F               	movlw	31
  3248  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0E8B  00A3               	movwf	??_simon_says_get_input
  3251  0E8C  0823               	movf	??_simon_says_get_input,w
  3252  0E8D  0587               	andwf	7,f	;volatile
  3253  0E8E                     l4087:	
  3254                           
  3255                           ;games.c: 321:     DelayMs(8);
  3256  0E8E  3008               	movlw	8
  3257  0E8F  00A0               	movwf	DelayMs@millis
  3258  0E90  3000               	movlw	0
  3259  0E91  00A1               	movwf	DelayMs@millis+1
  3260  0E92  160A  118A  229F  120A  158A  	fcall	_DelayMs
  3261  0E97                     l342:	
  3262                           ;games.c: 322:     while(RB5 == 0);
  3263                           
  3264  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0E99  1E86               	btfss	6,5	;volatile
  3267  0E9A  2E9C               	goto	u3061
  3268  0E9B  2E9D               	goto	u3060
  3269  0E9C                     u3061:	
  3270  0E9C  2E97               	goto	l342
  3271  0E9D                     u3060:	
  3272  0E9D                     l344:	
  3273                           
  3274                           ;games.c: 323:     GO = 1;
  3275  0E9D  149F               	bsf	31,1	;volatile
  3276  0E9E                     l4089:	
  3277                           
  3278                           ;games.c: 324:     DelayMs(500);
  3279  0E9E  30F4               	movlw	244
  3280  0E9F  00A0               	movwf	DelayMs@millis
  3281  0EA0  3001               	movlw	1
  3282  0EA1  00A1               	movwf	DelayMs@millis+1
  3283  0EA2  160A  118A  229F  120A  158A  	fcall	_DelayMs
  3284  0EA7                     l4091:	
  3285                           
  3286                           ;games.c: 325:     return current_input;
  3287  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0EA9  0825               	movf	simon_says_get_input@current_input,w
  3290  0EAA                     l345:	
  3291  0EAA  0008               	return
  3292  0EAB                     __end_of_simon_says_get_input:	
  3293                           
  3294                           	psect	text6
  3295  0EAB                     __ptext6:	
  3296 ;; *************** function _play_pattern *****************
  3297 ;; Defined at:
  3298 ;;		line 328 in file "games.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  i               1   21[BANK0 ] unsigned char 
  3303 ;;  current_opti    1   20[BANK0 ] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         0       0       0       0       0
  3314 ;;      Locals:         0       2       0       0       0
  3315 ;;      Temps:          0       4       0       0       0
  3316 ;;      Totals:         0       6       0       0       0
  3317 ;;Total ram usage:        6 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    4
  3320 ;; This function calls:
  3321 ;;		_DelayMs
  3322 ;;		___awdiv
  3323 ;;		_lcd_clear
  3324 ;;		_lcd_puts
  3325 ;;		_play_tone
  3326 ;;		_turn_on_led
  3327 ;; This function is called by:
  3328 ;;		_simon_says_game_loop
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function _play_pattern
  3334  0EAB                     _play_pattern:	
  3335  0EAB                     l4301:	
  3336                           ;incstack = 0
  3337                           ; Regs used in _play_pattern: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3338                           
  3339                           
  3340                           ;games.c: 329:     lcd_puts(" Simon Says....", gameboard);
  3341  0EAB  3094               	movlw	low (STR_18| (0+32768))
  3342  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0EAE  00A8               	movwf	lcd_puts@string
  3345  0EAF  3083               	movlw	high (STR_18| (0+32768))
  3346  0EB0  00A9               	movwf	lcd_puts@string+1
  3347  0EB1  3005               	movlw	5
  3348  0EB2  00AA               	movwf	lcd_puts@port
  3349  0EB3  3000               	movlw	0
  3350  0EB4  00AB               	movwf	lcd_puts@port+1
  3351  0EB5  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  3352  0EBA                     l4303:	
  3353                           
  3354                           ;games.c: 330:     char i;;games.c: 331:     char current_option;;games.c: 332:     for(
      +                          i=0;i<(p1_score+1);i++) {
  3355  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0EBC  01B5               	clrf	play_pattern@i
  3358  0EBD  2FE2               	goto	l4343
  3359  0EBE                     l4305:	
  3360                           
  3361                           ;games.c: 335:                 current_option = (simon_says_pattern[i/4])&0x03;
  3362  0EBE  3004               	movlw	4
  3363  0EBF  00A7               	movwf	___awdiv@divisor
  3364  0EC0  3000               	movlw	0
  3365  0EC1  00A8               	movwf	___awdiv@divisor+1
  3366  0EC2  0835               	movf	play_pattern@i,w
  3367  0EC3  00B0               	movwf	??_play_pattern
  3368  0EC4  01B1               	clrf	??_play_pattern+1
  3369  0EC5  0830               	movf	??_play_pattern,w
  3370  0EC6  00A9               	movwf	___awdiv@dividend
  3371  0EC7  0831               	movf	??_play_pattern+1,w
  3372  0EC8  00AA               	movwf	___awdiv@dividend+1
  3373  0EC9  160A  118A  26AA  120A  158A  	fcall	___awdiv
  3374  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0ED0  0827               	movf	?___awdiv,w
  3377  0ED1  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3378  0ED2  0084               	movwf	4
  3379  0ED3  1383               	bcf	3,7	;select IRP bank0
  3380  0ED4  0800               	movf	0,w
  3381  0ED5  3903               	andlw	3
  3382  0ED6  00B2               	movwf	??_play_pattern+2
  3383  0ED7  0832               	movf	??_play_pattern+2,w
  3384  0ED8  00B4               	movwf	play_pattern@current_option
  3385                           
  3386                           ;games.c: 336:                 break;
  3387  0ED9  2FB7               	goto	l4335
  3388  0EDA                     l4307:	
  3389                           
  3390                           ;games.c: 338:                 current_option = (((simon_says_pattern[i/4])&0x0C)>>2);
  3391  0EDA  3004               	movlw	4
  3392  0EDB  00A7               	movwf	___awdiv@divisor
  3393  0EDC  3000               	movlw	0
  3394  0EDD  00A8               	movwf	___awdiv@divisor+1
  3395  0EDE  0835               	movf	play_pattern@i,w
  3396  0EDF  00B0               	movwf	??_play_pattern
  3397  0EE0  01B1               	clrf	??_play_pattern+1
  3398  0EE1  0830               	movf	??_play_pattern,w
  3399  0EE2  00A9               	movwf	___awdiv@dividend
  3400  0EE3  0831               	movf	??_play_pattern+1,w
  3401  0EE4  00AA               	movwf	___awdiv@dividend+1
  3402  0EE5  160A  118A  26AA  120A  158A  	fcall	___awdiv
  3403  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0EEC  0827               	movf	?___awdiv,w
  3406  0EED  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3407  0EEE  0084               	movwf	4
  3408  0EEF  1383               	bcf	3,7	;select IRP bank0
  3409  0EF0  0800               	movf	0,w
  3410  0EF1  00B2               	movwf	??_play_pattern+2
  3411  0EF2  3002               	movlw	2
  3412  0EF3                     u3245:	
  3413  0EF3  1003               	clrc
  3414  0EF4  0CB2               	rrf	??_play_pattern+2,f
  3415  0EF5  3EFF               	addlw	-1
  3416  0EF6  1D03               	skipz
  3417  0EF7  2EF3               	goto	u3245
  3418  0EF8  0832               	movf	??_play_pattern+2,w
  3419  0EF9  3903               	andlw	3
  3420  0EFA  00B3               	movwf	??_play_pattern+3
  3421  0EFB  0833               	movf	??_play_pattern+3,w
  3422  0EFC  00B4               	movwf	play_pattern@current_option
  3423                           
  3424                           ;games.c: 339:                 break;
  3425  0EFD  2FB7               	goto	l4335
  3426  0EFE                     l4309:	
  3427                           
  3428                           ;games.c: 341:                 current_option = (((simon_says_pattern[i/4])&0x30)>>4);
  3429  0EFE  3004               	movlw	4
  3430  0EFF  00A7               	movwf	___awdiv@divisor
  3431  0F00  3000               	movlw	0
  3432  0F01  00A8               	movwf	___awdiv@divisor+1
  3433  0F02  0835               	movf	play_pattern@i,w
  3434  0F03  00B0               	movwf	??_play_pattern
  3435  0F04  01B1               	clrf	??_play_pattern+1
  3436  0F05  0830               	movf	??_play_pattern,w
  3437  0F06  00A9               	movwf	___awdiv@dividend
  3438  0F07  0831               	movf	??_play_pattern+1,w
  3439  0F08  00AA               	movwf	___awdiv@dividend+1
  3440  0F09  160A  118A  26AA  120A  158A  	fcall	___awdiv
  3441  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0F10  0827               	movf	?___awdiv,w
  3444  0F11  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3445  0F12  0084               	movwf	4
  3446  0F13  1383               	bcf	3,7	;select IRP bank0
  3447  0F14  0800               	movf	0,w
  3448  0F15  00B2               	movwf	??_play_pattern+2
  3449  0F16  3004               	movlw	4
  3450  0F17                     u3255:	
  3451  0F17  1003               	clrc
  3452  0F18  0CB2               	rrf	??_play_pattern+2,f
  3453  0F19  3EFF               	addlw	-1
  3454  0F1A  1D03               	skipz
  3455  0F1B  2F17               	goto	u3255
  3456  0F1C  0832               	movf	??_play_pattern+2,w
  3457  0F1D  3903               	andlw	3
  3458  0F1E  00B3               	movwf	??_play_pattern+3
  3459  0F1F  0833               	movf	??_play_pattern+3,w
  3460  0F20  00B4               	movwf	play_pattern@current_option
  3461                           
  3462                           ;games.c: 342:                 break;
  3463  0F21  2FB7               	goto	l4335
  3464  0F22                     l4311:	
  3465                           
  3466                           ;games.c: 344:                 current_option = (((simon_says_pattern[i/4])&0xC0)>>6);
  3467  0F22  3004               	movlw	4
  3468  0F23  00A7               	movwf	___awdiv@divisor
  3469  0F24  3000               	movlw	0
  3470  0F25  00A8               	movwf	___awdiv@divisor+1
  3471  0F26  0835               	movf	play_pattern@i,w
  3472  0F27  00B0               	movwf	??_play_pattern
  3473  0F28  01B1               	clrf	??_play_pattern+1
  3474  0F29  0830               	movf	??_play_pattern,w
  3475  0F2A  00A9               	movwf	___awdiv@dividend
  3476  0F2B  0831               	movf	??_play_pattern+1,w
  3477  0F2C  00AA               	movwf	___awdiv@dividend+1
  3478  0F2D  160A  118A  26AA  120A  158A  	fcall	___awdiv
  3479  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0F34  0827               	movf	?___awdiv,w
  3482  0F35  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3483  0F36  0084               	movwf	4
  3484  0F37  1383               	bcf	3,7	;select IRP bank0
  3485  0F38  0800               	movf	0,w
  3486  0F39  00B2               	movwf	??_play_pattern+2
  3487  0F3A  3006               	movlw	6
  3488  0F3B                     u3265:	
  3489  0F3B  1003               	clrc
  3490  0F3C  0CB2               	rrf	??_play_pattern+2,f
  3491  0F3D  3EFF               	addlw	-1
  3492  0F3E  1D03               	skipz
  3493  0F3F  2F3B               	goto	u3265
  3494  0F40  0832               	movf	??_play_pattern+2,w
  3495  0F41  3903               	andlw	3
  3496  0F42  00B3               	movwf	??_play_pattern+3
  3497  0F43  0833               	movf	??_play_pattern+3,w
  3498  0F44  00B4               	movwf	play_pattern@current_option
  3499                           
  3500                           ;games.c: 345:                 break;
  3501  0F45  2FB7               	goto	l4335
  3502  0F46                     l4315:	
  3503  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3505  0F48  0835               	movf	play_pattern@i,w
  3506  0F49  3903               	andlw	3
  3507  0F4A  00B0               	movwf	??_play_pattern
  3508  0F4B  01B1               	clrf	??_play_pattern+1
  3509                           
  3510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3511                           ; Switch size 1, requested type "simple"
  3512                           ; Number of cases is 1, Range of values is 0 to 0
  3513                           ; switch strategies available:
  3514                           ; Name         Instructions Cycles
  3515                           ; simple_byte            4     3 (average)
  3516                           ; direct_byte           11     8 (fixed)
  3517                           ; jumptable            260     6 (fixed)
  3518                           ;	Chosen strategy is simple_byte
  3519  0F4C  0831               	movf	??_play_pattern+1,w
  3520  0F4D  3A00               	xorlw	0	; case 0
  3521  0F4E  1903               	skipnz
  3522  0F4F  2F51               	goto	l5127
  3523  0F50  2FB7               	goto	l4335
  3524  0F51                     l5127:	
  3525                           
  3526                           ; Switch size 1, requested type "simple"
  3527                           ; Number of cases is 4, Range of values is 0 to 3
  3528                           ; switch strategies available:
  3529                           ; Name         Instructions Cycles
  3530                           ; simple_byte           13     7 (average)
  3531                           ; direct_byte           20     8 (fixed)
  3532                           ; jumptable            260     6 (fixed)
  3533                           ;	Chosen strategy is simple_byte
  3534  0F51  0830               	movf	??_play_pattern,w
  3535  0F52  3A00               	xorlw	0	; case 0
  3536  0F53  1903               	skipnz
  3537  0F54  2EBE               	goto	l4305
  3538  0F55  3A01               	xorlw	1	; case 1
  3539  0F56  1903               	skipnz
  3540  0F57  2EDA               	goto	l4307
  3541  0F58  3A03               	xorlw	3	; case 2
  3542  0F59  1903               	skipnz
  3543  0F5A  2EFE               	goto	l4309
  3544  0F5B  3A01               	xorlw	1	; case 3
  3545  0F5C  1903               	skipnz
  3546  0F5D  2F22               	goto	l4311
  3547  0F5E  2FB7               	goto	l4335
  3548  0F5F                     l4317:	
  3549                           
  3550                           ;games.c: 349:             turn_on_led(0);
  3551  0F5F  3000               	movlw	0
  3552  0F60  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  3553  0F65                     l4319:	
  3554                           
  3555                           ;games.c: 350:             play_tone(17026, 63);
  3556  0F65  3082               	movlw	130
  3557  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  3558  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0F68  00A0               	movwf	play_tone@tone_period
  3560  0F69  3042               	movlw	66
  3561  0F6A  00A1               	movwf	play_tone@tone_period+1
  3562  0F6B  303F               	movlw	63
  3563  0F6C  00B0               	movwf	??_play_pattern
  3564  0F6D  0830               	movf	??_play_pattern,w
  3565  0F6E  00A2               	movwf	play_tone@duration_8ms
  3566  0F6F  160A  118A  230A  120A  158A  	fcall	_play_tone
  3567                           
  3568                           ;games.c: 351:             break;
  3569  0F74  2FCD               	goto	l4337
  3570  0F75                     l4321:	
  3571                           
  3572                           ;games.c: 353:             turn_on_led(1);
  3573  0F75  3001               	movlw	1
  3574  0F76  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  3575  0F7B                     l4323:	
  3576                           
  3577                           ;games.c: 354:             play_tone(8513, 63);
  3578  0F7B  3041               	movlw	65
  3579  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3581  0F7E  00A0               	movwf	play_tone@tone_period
  3582  0F7F  3021               	movlw	33
  3583  0F80  00A1               	movwf	play_tone@tone_period+1
  3584  0F81  303F               	movlw	63
  3585  0F82  00B0               	movwf	??_play_pattern
  3586  0F83  0830               	movf	??_play_pattern,w
  3587  0F84  00A2               	movwf	play_tone@duration_8ms
  3588  0F85  160A  118A  230A  120A  158A  	fcall	_play_tone
  3589                           
  3590                           ;games.c: 355:             break;
  3591  0F8A  2FCD               	goto	l4337
  3592  0F8B                     l4325:	
  3593                           
  3594                           ;games.c: 357:             turn_on_led(2);
  3595  0F8B  3002               	movlw	2
  3596  0F8C  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  3597  0F91                     l4327:	
  3598                           
  3599                           ;games.c: 358:             play_tone(4257, 63);
  3600  0F91  30A1               	movlw	161
  3601  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0F94  00A0               	movwf	play_tone@tone_period
  3604  0F95  3010               	movlw	16
  3605  0F96  00A1               	movwf	play_tone@tone_period+1
  3606  0F97  303F               	movlw	63
  3607  0F98  00B0               	movwf	??_play_pattern
  3608  0F99  0830               	movf	??_play_pattern,w
  3609  0F9A  00A2               	movwf	play_tone@duration_8ms
  3610  0F9B  160A  118A  230A  120A  158A  	fcall	_play_tone
  3611                           
  3612                           ;games.c: 359:             break;
  3613  0FA0  2FCD               	goto	l4337
  3614  0FA1                     l4329:	
  3615                           
  3616                           ;games.c: 361:             turn_on_led(5);
  3617  0FA1  3005               	movlw	5
  3618  0FA2  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  3619  0FA7                     l4331:	
  3620                           
  3621                           ;games.c: 362:             play_tone(2128, 63);
  3622  0FA7  3050               	movlw	80
  3623  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0FAA  00A0               	movwf	play_tone@tone_period
  3626  0FAB  3008               	movlw	8
  3627  0FAC  00A1               	movwf	play_tone@tone_period+1
  3628  0FAD  303F               	movlw	63
  3629  0FAE  00B0               	movwf	??_play_pattern
  3630  0FAF  0830               	movf	??_play_pattern,w
  3631  0FB0  00A2               	movwf	play_tone@duration_8ms
  3632  0FB1  160A  118A  230A  120A  158A  	fcall	_play_tone
  3633                           
  3634                           ;games.c: 363:             break;
  3635  0FB6  2FCD               	goto	l4337
  3636  0FB7                     l4335:	
  3637  0FB7  0834               	movf	play_pattern@current_option,w
  3638  0FB8  00B0               	movwf	??_play_pattern
  3639  0FB9  01B1               	clrf	??_play_pattern+1
  3640                           
  3641                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3642                           ; Switch size 1, requested type "simple"
  3643                           ; Number of cases is 1, Range of values is 0 to 0
  3644                           ; switch strategies available:
  3645                           ; Name         Instructions Cycles
  3646                           ; simple_byte            4     3 (average)
  3647                           ; direct_byte           11     8 (fixed)
  3648                           ; jumptable            260     6 (fixed)
  3649                           ;	Chosen strategy is simple_byte
  3650  0FBA  0831               	movf	??_play_pattern+1,w
  3651  0FBB  3A00               	xorlw	0	; case 0
  3652  0FBC  1903               	skipnz
  3653  0FBD  2FBF               	goto	l5129
  3654  0FBE  2FCD               	goto	l4337
  3655  0FBF                     l5129:	
  3656                           
  3657                           ; Switch size 1, requested type "simple"
  3658                           ; Number of cases is 4, Range of values is 0 to 3
  3659                           ; switch strategies available:
  3660                           ; Name         Instructions Cycles
  3661                           ; simple_byte           13     7 (average)
  3662                           ; direct_byte           20     8 (fixed)
  3663                           ; jumptable            260     6 (fixed)
  3664                           ;	Chosen strategy is simple_byte
  3665  0FBF  0830               	movf	??_play_pattern,w
  3666  0FC0  3A00               	xorlw	0	; case 0
  3667  0FC1  1903               	skipnz
  3668  0FC2  2F5F               	goto	l4317
  3669  0FC3  3A01               	xorlw	1	; case 1
  3670  0FC4  1903               	skipnz
  3671  0FC5  2F75               	goto	l4321
  3672  0FC6  3A03               	xorlw	3	; case 2
  3673  0FC7  1903               	skipnz
  3674  0FC8  2F8B               	goto	l4325
  3675  0FC9  3A01               	xorlw	1	; case 3
  3676  0FCA  1903               	skipnz
  3677  0FCB  2FA1               	goto	l4329
  3678  0FCC  2FCD               	goto	l4337
  3679  0FCD                     l4337:	
  3680                           
  3681                           ;games.c: 365:         PORTC &= 0x1F;
  3682  0FCD  301F               	movlw	31
  3683  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  3685  0FD0  00B0               	movwf	??_play_pattern
  3686  0FD1  0830               	movf	??_play_pattern,w
  3687  0FD2  0587               	andwf	7,f	;volatile
  3688  0FD3                     l4339:	
  3689                           
  3690                           ;games.c: 366:         DelayMs(250);
  3691  0FD3  30FA               	movlw	250
  3692  0FD4  00A0               	movwf	DelayMs@millis
  3693  0FD5  3000               	movlw	0
  3694  0FD6  00A1               	movwf	DelayMs@millis+1
  3695  0FD7  160A  118A  229F  120A  158A  	fcall	_DelayMs
  3696  0FDC                     l4341:	
  3697                           
  3698                           ;games.c: 367:     }
  3699  0FDC  3001               	movlw	1
  3700  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0FDF  00B0               	movwf	??_play_pattern
  3703  0FE0  0830               	movf	??_play_pattern,w
  3704  0FE1  07B5               	addwf	play_pattern@i,f
  3705  0FE2                     l4343:	
  3706  0FE2  0867               	movf	_p1_score,w
  3707  0FE3  3E01               	addlw	1
  3708  0FE4  00B0               	movwf	??_play_pattern
  3709  0FE5  3000               	movlw	0
  3710  0FE6  1803               	skipnc
  3711  0FE7  3001               	movlw	1
  3712  0FE8  00B1               	movwf	??_play_pattern+1
  3713  0FE9  0831               	movf	??_play_pattern+1,w
  3714  0FEA  3A80               	xorlw	128
  3715  0FEB  3C80               	sublw	128
  3716  0FEC  1D03               	skipz
  3717  0FED  2FF0               	goto	u3275
  3718  0FEE  0830               	movf	??_play_pattern,w
  3719  0FEF  0235               	subwf	play_pattern@i,w
  3720  0FF0                     u3275:	
  3721  0FF0  1C03               	skipc
  3722  0FF1  2FF3               	goto	u3271
  3723  0FF2  2FF4               	goto	u3270
  3724  0FF3                     u3271:	
  3725  0FF3  2F46               	goto	l4315
  3726  0FF4                     u3270:	
  3727  0FF4                     l4345:	
  3728                           
  3729                           ;games.c: 368:     lcd_clear(gameboard);
  3730  0FF4  3005               	movlw	5
  3731  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0FF7  00A8               	movwf	lcd_clear@port
  3734  0FF8  3000               	movlw	0
  3735  0FF9  00A9               	movwf	lcd_clear@port+1
  3736  0FFA  160A  118A  22B8  120A  158A  	fcall	_lcd_clear
  3737  0FFF                     l363:	
  3738  0FFF  0008               	return
  3739  1000                     __end_of_play_pattern:	
  3740                           
  3741                           	psect	text7
  3742  023C                     __ptext7:	
  3743 ;; *************** function _generate_pattern *****************
  3744 ;; Defined at:
  3745 ;;		line 371 in file "games.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  current_byte    1   19[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       0       0       0       0
  3760 ;;      Locals:         0       1       0       0       0
  3761 ;;      Temps:          0       3       0       0       0
  3762 ;;      Totals:         0       4       0       0       0
  3763 ;;Total ram usage:        4 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    2
  3766 ;; This function calls:
  3767 ;;		_DelayMs
  3768 ;;		___awdiv
  3769 ;; This function is called by:
  3770 ;;		_simon_says_game_loop
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _generate_pattern
  3776  023C                     _generate_pattern:	
  3777  023C                     l4277:	
  3778                           ;incstack = 0
  3779                           ; Regs used in _generate_pattern: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3780                           
  3781                           
  3782                           ;games.c: 372:     char current_byte;;games.c: 373:     DelayMs(TMR2>>(2+(TMR1%4)));
  3783  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3784  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3785  023E  0811               	movf	17,w	;volatile
  3786  023F  00B0               	movwf	??_generate_pattern
  3787  0240  080E               	movf	14,w	;volatile
  3788  0241  3903               	andlw	3
  3789  0242  3E02               	addlw	2
  3790  0243  3E01               	addlw	1
  3791  0244  2A47               	goto	u3204
  3792  0245                     u3205:	
  3793  0245  1003               	clrc
  3794  0246  0CB0               	rrf	??_generate_pattern,f
  3795  0247                     u3204:	
  3796  0247  3EFF               	addlw	-1
  3797  0248  1D03               	skipz
  3798  0249  2A45               	goto	u3205
  3799  024A  0830               	movf	??_generate_pattern,w
  3800  024B  00B1               	movwf	??_generate_pattern+1
  3801  024C  01B2               	clrf	??_generate_pattern+2
  3802  024D  0831               	movf	??_generate_pattern+1,w
  3803  024E  00A0               	movwf	DelayMs@millis
  3804  024F  0832               	movf	??_generate_pattern+2,w
  3805  0250  00A1               	movwf	DelayMs@millis+1
  3806  0251  160A  118A  229F  120A  118A  	fcall	_DelayMs
  3807  0256                     l4279:	
  3808                           
  3809                           ;games.c: 374:     current_byte = simon_says_pattern[p1_score/4];
  3810  0256  3004               	movlw	4
  3811  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3812  0258  1303               	bcf	3,6	;RP1=0, select bank0
  3813  0259  00A7               	movwf	___awdiv@divisor
  3814  025A  3000               	movlw	0
  3815  025B  00A8               	movwf	___awdiv@divisor+1
  3816  025C  0867               	movf	_p1_score,w
  3817  025D  00B0               	movwf	??_generate_pattern
  3818  025E  01B1               	clrf	??_generate_pattern+1
  3819  025F  0830               	movf	??_generate_pattern,w
  3820  0260  00A9               	movwf	___awdiv@dividend
  3821  0261  0831               	movf	??_generate_pattern+1,w
  3822  0262  00AA               	movwf	___awdiv@dividend+1
  3823  0263  160A  118A  26AA  120A  118A  	fcall	___awdiv
  3824  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0269  1303               	bcf	3,6	;RP1=0, select bank0
  3826  026A  0827               	movf	?___awdiv,w
  3827  026B  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  3828  026C  0084               	movwf	4
  3829  026D  1383               	bcf	3,7	;select IRP bank0
  3830  026E  0800               	movf	0,w
  3831  026F  00B2               	movwf	??_generate_pattern+2
  3832  0270  0832               	movf	??_generate_pattern+2,w
  3833  0271  00B3               	movwf	generate_pattern@current_byte
  3834                           
  3835                           ;games.c: 375:     switch(p1_score%4) {
  3836  0272  2AB6               	goto	l4291
  3837  0273                     l4281:	
  3838                           
  3839                           ;games.c: 377:             current_byte &= 0xFC;
  3840  0273  30FC               	movlw	252
  3841  0274  00B0               	movwf	??_generate_pattern
  3842  0275  0830               	movf	??_generate_pattern,w
  3843  0276  05B3               	andwf	generate_pattern@current_byte,f
  3844                           
  3845                           ;games.c: 378:             current_byte |= TMR1%4;
  3846  0277  080E               	movf	14,w	;volatile
  3847  0278  3903               	andlw	3
  3848  0279  00B0               	movwf	??_generate_pattern
  3849  027A  0830               	movf	??_generate_pattern,w
  3850  027B  04B3               	iorwf	generate_pattern@current_byte,f
  3851                           
  3852                           ;games.c: 379:             break;
  3853  027C  2ACD               	goto	l4293
  3854  027D                     l4283:	
  3855                           
  3856                           ;games.c: 381:             current_byte &= 0xF3;
  3857  027D  30F3               	movlw	243
  3858  027E  00B0               	movwf	??_generate_pattern
  3859  027F  0830               	movf	??_generate_pattern,w
  3860  0280  05B3               	andwf	generate_pattern@current_byte,f
  3861                           
  3862                           ;games.c: 382:             current_byte |= ((TMR1%4)<<2);
  3863  0281  080E               	movf	14,w	;volatile
  3864  0282  3903               	andlw	3
  3865  0283  00B0               	movwf	??_generate_pattern
  3866  0284  3001               	movlw	1
  3867  0285                     u3215:	
  3868  0285  1003               	clrc
  3869  0286  0DB0               	rlf	??_generate_pattern,f
  3870  0287  3EFF               	addlw	-1
  3871  0288  1D03               	skipz
  3872  0289  2A85               	goto	u3215
  3873  028A  1003               	clrc
  3874  028B  0D30               	rlf	??_generate_pattern,w
  3875  028C  00B1               	movwf	??_generate_pattern+1
  3876  028D  0831               	movf	??_generate_pattern+1,w
  3877  028E  04B3               	iorwf	generate_pattern@current_byte,f
  3878                           
  3879                           ;games.c: 383:             break;
  3880  028F  2ACD               	goto	l4293
  3881  0290                     l4285:	
  3882                           
  3883                           ;games.c: 385:             current_byte &= 0xCF;
  3884  0290  30CF               	movlw	207
  3885  0291  00B0               	movwf	??_generate_pattern
  3886  0292  0830               	movf	??_generate_pattern,w
  3887  0293  05B3               	andwf	generate_pattern@current_byte,f
  3888                           
  3889                           ;games.c: 386:             current_byte |= ((TMR1%4)<<4);
  3890  0294  080E               	movf	14,w	;volatile
  3891  0295  3903               	andlw	3
  3892  0296  00B0               	movwf	??_generate_pattern
  3893  0297  3003               	movlw	3
  3894  0298                     u3225:	
  3895  0298  1003               	clrc
  3896  0299  0DB0               	rlf	??_generate_pattern,f
  3897  029A  3EFF               	addlw	-1
  3898  029B  1D03               	skipz
  3899  029C  2A98               	goto	u3225
  3900  029D  1003               	clrc
  3901  029E  0D30               	rlf	??_generate_pattern,w
  3902  029F  00B1               	movwf	??_generate_pattern+1
  3903  02A0  0831               	movf	??_generate_pattern+1,w
  3904  02A1  04B3               	iorwf	generate_pattern@current_byte,f
  3905                           
  3906                           ;games.c: 387:             break;
  3907  02A2  2ACD               	goto	l4293
  3908  02A3                     l4287:	
  3909                           
  3910                           ;games.c: 389:             current_byte &= 0x3F;
  3911  02A3  303F               	movlw	63
  3912  02A4  00B0               	movwf	??_generate_pattern
  3913  02A5  0830               	movf	??_generate_pattern,w
  3914  02A6  05B3               	andwf	generate_pattern@current_byte,f
  3915                           
  3916                           ;games.c: 390:             current_byte |= ((TMR1%4)<<6);
  3917  02A7  080E               	movf	14,w	;volatile
  3918  02A8  3903               	andlw	3
  3919  02A9  00B0               	movwf	??_generate_pattern
  3920  02AA  3005               	movlw	5
  3921  02AB                     u3235:	
  3922  02AB  1003               	clrc
  3923  02AC  0DB0               	rlf	??_generate_pattern,f
  3924  02AD  3EFF               	addlw	-1
  3925  02AE  1D03               	skipz
  3926  02AF  2AAB               	goto	u3235
  3927  02B0  1003               	clrc
  3928  02B1  0D30               	rlf	??_generate_pattern,w
  3929  02B2  00B1               	movwf	??_generate_pattern+1
  3930  02B3  0831               	movf	??_generate_pattern+1,w
  3931  02B4  04B3               	iorwf	generate_pattern@current_byte,f
  3932                           
  3933                           ;games.c: 391:             break;
  3934  02B5  2ACD               	goto	l4293
  3935  02B6                     l4291:	
  3936  02B6  0867               	movf	_p1_score,w
  3937  02B7  3903               	andlw	3
  3938  02B8  00B0               	movwf	??_generate_pattern
  3939  02B9  01B1               	clrf	??_generate_pattern+1
  3940                           
  3941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3942                           ; Switch size 1, requested type "simple"
  3943                           ; Number of cases is 1, Range of values is 0 to 0
  3944                           ; switch strategies available:
  3945                           ; Name         Instructions Cycles
  3946                           ; simple_byte            4     3 (average)
  3947                           ; direct_byte           11     8 (fixed)
  3948                           ; jumptable            260     6 (fixed)
  3949                           ;	Chosen strategy is simple_byte
  3950  02BA  0831               	movf	??_generate_pattern+1,w
  3951  02BB  3A00               	xorlw	0	; case 0
  3952  02BC  1903               	skipnz
  3953  02BD  2ABF               	goto	l5131
  3954  02BE  2ACD               	goto	l4293
  3955  02BF                     l5131:	
  3956                           
  3957                           ; Switch size 1, requested type "simple"
  3958                           ; Number of cases is 4, Range of values is 0 to 3
  3959                           ; switch strategies available:
  3960                           ; Name         Instructions Cycles
  3961                           ; simple_byte           13     7 (average)
  3962                           ; direct_byte           20     8 (fixed)
  3963                           ; jumptable            260     6 (fixed)
  3964                           ;	Chosen strategy is simple_byte
  3965  02BF  0830               	movf	??_generate_pattern,w
  3966  02C0  3A00               	xorlw	0	; case 0
  3967  02C1  1903               	skipnz
  3968  02C2  2A73               	goto	l4281
  3969  02C3  3A01               	xorlw	1	; case 1
  3970  02C4  1903               	skipnz
  3971  02C5  2A7D               	goto	l4283
  3972  02C6  3A03               	xorlw	3	; case 2
  3973  02C7  1903               	skipnz
  3974  02C8  2A90               	goto	l4285
  3975  02C9  3A01               	xorlw	1	; case 3
  3976  02CA  1903               	skipnz
  3977  02CB  2AA3               	goto	l4287
  3978  02CC  2ACD               	goto	l4293
  3979  02CD                     l4293:	
  3980                           
  3981                           ;games.c: 393:     simon_says_pattern[p1_score/4] = current_byte;
  3982  02CD  0833               	movf	generate_pattern@current_byte,w
  3983  02CE  00B0               	movwf	??_generate_pattern
  3984  02CF  3004               	movlw	4
  3985  02D0  00A7               	movwf	___awdiv@divisor
  3986  02D1  3000               	movlw	0
  3987  02D2  00A8               	movwf	___awdiv@divisor+1
  3988  02D3  0867               	movf	_p1_score,w
  3989  02D4  00B1               	movwf	??_generate_pattern+1
  3990  02D5  01B2               	clrf	??_generate_pattern+2
  3991  02D6  0831               	movf	??_generate_pattern+1,w
  3992  02D7  00A9               	movwf	___awdiv@dividend
  3993  02D8  0832               	movf	??_generate_pattern+2,w
  3994  02D9  00AA               	movwf	___awdiv@dividend+1
  3995  02DA  160A  118A  26AA  120A  118A  	fcall	___awdiv
  3996  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3997  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3998  02E1  0827               	movf	?___awdiv,w
  3999  02E2  3E59               	addlw	(low (_simon_says_pattern| 0))& (0+255)
  4000  02E3  0084               	movwf	4
  4001  02E4  0830               	movf	??_generate_pattern,w
  4002  02E5  1383               	bcf	3,7	;select IRP bank0
  4003  02E6  0080               	movwf	0
  4004  02E7                     l372:	
  4005  02E7  0008               	return
  4006  02E8                     __end_of_generate_pattern:	
  4007                           
  4008                           	psect	text8
  4009  084C                     __ptext8:	
  4010 ;; *************** function _display_simon_says_scoreboard *****************
  4011 ;; Defined at:
  4012 ;;		line 407 in file "games.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4026 ;;      Params:         0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0
  4028 ;;      Temps:          0       2       0       0       0
  4029 ;;      Totals:         0       2       0       0       0
  4030 ;;Total ram usage:        2 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		___awdiv
  4035 ;;		___awmod
  4036 ;;		_lcd_clear
  4037 ;;		_lcd_goto
  4038 ;;		_lcd_putch
  4039 ;;		_lcd_puts
  4040 ;; This function is called by:
  4041 ;;		_simon_says_game_loop
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _display_simon_says_scoreboard
  4047  084C                     _display_simon_says_scoreboard:	
  4048  084C                     l4249:	
  4049                           ;incstack = 0
  4050                           ; Regs used in _display_simon_says_scoreboard: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  4051                           
  4052                           
  4053                           ;games.c: 408:     lcd_clear(scoreboard);
  4054  084C  3008               	movlw	8
  4055  084D  1283               	bcf	3,5	;RP0=0, select bank0
  4056  084E  1303               	bcf	3,6	;RP1=0, select bank0
  4057  084F  00A8               	movwf	lcd_clear@port
  4058  0850  3000               	movlw	0
  4059  0851  00A9               	movwf	lcd_clear@port+1
  4060  0852  160A  118A  22B8  120A  158A  	fcall	_lcd_clear
  4061  0857                     l4251:	
  4062                           
  4063                           ;games.c: 409:     lcd_puts("     Score:", scoreboard);
  4064  0857  3074               	movlw	low (STR_19| (0+32768))
  4065  0858  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0859  1303               	bcf	3,6	;RP1=0, select bank0
  4067  085A  00A8               	movwf	lcd_puts@string
  4068  085B  3084               	movlw	high (STR_19| (0+32768))
  4069  085C  00A9               	movwf	lcd_puts@string+1
  4070  085D  3008               	movlw	8
  4071  085E  00AA               	movwf	lcd_puts@port
  4072  085F  3000               	movlw	0
  4073  0860  00AB               	movwf	lcd_puts@port+1
  4074  0861  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  4075  0866                     l4253:	
  4076                           
  4077                           ;games.c: 410:     lcd_goto(0x43, scoreboard);
  4078  0866  3008               	movlw	8
  4079  0867  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0868  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0869  00A8               	movwf	lcd_goto@port
  4082  086A  3000               	movlw	0
  4083  086B  00A9               	movwf	lcd_goto@port+1
  4084  086C  3043               	movlw	67
  4085  086D  160A  118A  22EC  120A  158A  	fcall	_lcd_goto
  4086  0872                     l4255:	
  4087                           
  4088                           ;games.c: 411:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  4089  0872  3008               	movlw	8
  4090  0873  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0874  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0875  00B0               	movwf	lcd_putch@port
  4093  0876  3000               	movlw	0
  4094  0877  00B1               	movwf	lcd_putch@port+1
  4095  0878  300A               	movlw	10
  4096  0879  00A7               	movwf	___awdiv@divisor
  4097  087A  3000               	movlw	0
  4098  087B  00A8               	movwf	___awdiv@divisor+1
  4099  087C  0867               	movf	_p1_score,w
  4100  087D  00B4               	movwf	??_display_simon_says_scoreboard
  4101  087E  01B5               	clrf	??_display_simon_says_scoreboard+1
  4102  087F  0834               	movf	??_display_simon_says_scoreboard,w
  4103  0880  00A2               	movwf	___awmod@dividend
  4104  0881  0835               	movf	??_display_simon_says_scoreboard+1,w
  4105  0882  00A3               	movwf	___awmod@dividend+1
  4106  0883  3064               	movlw	100
  4107  0884  00A0               	movwf	___awmod@divisor
  4108  0885  3000               	movlw	0
  4109  0886  00A1               	movwf	___awmod@divisor+1
  4110  0887  160A  118A  25F0  120A  158A  	fcall	___awmod
  4111  088C  1283               	bcf	3,5	;RP0=0, select bank0
  4112  088D  1303               	bcf	3,6	;RP1=0, select bank0
  4113  088E  0821               	movf	?___awmod+1,w
  4114  088F  00AA               	movwf	___awdiv@dividend+1
  4115  0890  0820               	movf	?___awmod,w
  4116  0891  00A9               	movwf	___awdiv@dividend
  4117  0892  160A  118A  26AA  120A  158A  	fcall	___awdiv
  4118  0897  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0898  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0899  0827               	movf	?___awdiv,w
  4121  089A  3E30               	addlw	48
  4122  089B  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  4123  08A0                     l4257:	
  4124                           
  4125                           ;games.c: 412:     lcd_putch((p1_score%10)+0x30, scoreboard);
  4126  08A0  3008               	movlw	8
  4127  08A1  1283               	bcf	3,5	;RP0=0, select bank0
  4128  08A2  1303               	bcf	3,6	;RP1=0, select bank0
  4129  08A3  00B0               	movwf	lcd_putch@port
  4130  08A4  3000               	movlw	0
  4131  08A5  00B1               	movwf	lcd_putch@port+1
  4132  08A6  300A               	movlw	10
  4133  08A7  00A0               	movwf	___awmod@divisor
  4134  08A8  3000               	movlw	0
  4135  08A9  00A1               	movwf	___awmod@divisor+1
  4136  08AA  0867               	movf	_p1_score,w
  4137  08AB  00B4               	movwf	??_display_simon_says_scoreboard
  4138  08AC  01B5               	clrf	??_display_simon_says_scoreboard+1
  4139  08AD  0834               	movf	??_display_simon_says_scoreboard,w
  4140  08AE  00A2               	movwf	___awmod@dividend
  4141  08AF  0835               	movf	??_display_simon_says_scoreboard+1,w
  4142  08B0  00A3               	movwf	___awmod@dividend+1
  4143  08B1  160A  118A  25F0  120A  158A  	fcall	___awmod
  4144  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  4145  08B7  1303               	bcf	3,6	;RP1=0, select bank0
  4146  08B8  0820               	movf	?___awmod,w
  4147  08B9  3E30               	addlw	48
  4148  08BA  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  4149                           
  4150                           ;games.c: 413:     lcd_puts("  Rounds", scoreboard);
  4151  08BF  308B               	movlw	low (STR_20| (0+32768))
  4152  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  4153  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  4154  08C2  00A8               	movwf	lcd_puts@string
  4155  08C3  3084               	movlw	high (STR_20| (0+32768))
  4156  08C4  00A9               	movwf	lcd_puts@string+1
  4157  08C5  3008               	movlw	8
  4158  08C6  00AA               	movwf	lcd_puts@port
  4159  08C7  3000               	movlw	0
  4160  08C8  00AB               	movwf	lcd_puts@port+1
  4161  08C9  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  4162  08CE                     l380:	
  4163  08CE  0008               	return
  4164  08CF                     __end_of_display_simon_says_scoreboard:	
  4165                           
  4166                           	psect	text9
  4167  0805                     __ptext9:	
  4168 ;; *************** function _countdown *****************
  4169 ;; Defined at:
  4170 ;;		line 396 in file "games.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  i               1   21[BANK0 ] char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       0       0       0       0
  4185 ;;      Locals:         0       1       0       0       0
  4186 ;;      Temps:          0       1       0       0       0
  4187 ;;      Totals:         0       2       0       0       0
  4188 ;;Total ram usage:        2 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    4
  4191 ;; This function calls:
  4192 ;;		_DelayMs
  4193 ;;		_lcd_clear
  4194 ;;		_lcd_goto
  4195 ;;		_lcd_putch
  4196 ;; This function is called by:
  4197 ;;		_simon_says_game_loop
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _countdown
  4203  0805                     _countdown:	
  4204  0805                     l4259:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _countdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4207                           
  4208                           
  4209                           ;games.c: 397:     lcd_clear(gameboard);
  4210  0805  3005               	movlw	5
  4211  0806  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0807  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0808  00A8               	movwf	lcd_clear@port
  4214  0809  3000               	movlw	0
  4215  080A  00A9               	movwf	lcd_clear@port+1
  4216  080B  160A  118A  22B8  120A  158A  	fcall	_lcd_clear
  4217  0810                     l4261:	
  4218                           
  4219                           ;games.c: 398:     signed char i;;games.c: 399:     for(i=3;i>=0;i--) {
  4220  0810  3003               	movlw	3
  4221  0811  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0812  1303               	bcf	3,6	;RP1=0, select bank0
  4223  0813  00B4               	movwf	??_countdown
  4224  0814  0834               	movf	??_countdown,w
  4225  0815  00B5               	movwf	countdown@i
  4226  0816                     l4267:	
  4227                           
  4228                           ;games.c: 400:         lcd_goto(0x07, gameboard);
  4229  0816  3005               	movlw	5
  4230  0817  00A8               	movwf	lcd_goto@port
  4231  0818  3000               	movlw	0
  4232  0819  00A9               	movwf	lcd_goto@port+1
  4233  081A  3007               	movlw	7
  4234  081B  160A  118A  22EC  120A  158A  	fcall	_lcd_goto
  4235                           
  4236                           ;games.c: 401:         lcd_putch(i+0x30, gameboard);
  4237  0820  3005               	movlw	5
  4238  0821  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0822  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0823  00B0               	movwf	lcd_putch@port
  4241  0824  3000               	movlw	0
  4242  0825  00B1               	movwf	lcd_putch@port+1
  4243  0826  0835               	movf	countdown@i,w
  4244  0827  3E30               	addlw	48
  4245  0828  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  4246  082D                     l4269:	
  4247                           
  4248                           ;games.c: 402:         DelayMs(1000);
  4249  082D  30E8               	movlw	232
  4250  082E  1283               	bcf	3,5	;RP0=0, select bank0
  4251  082F  1303               	bcf	3,6	;RP1=0, select bank0
  4252  0830  00A0               	movwf	DelayMs@millis
  4253  0831  3003               	movlw	3
  4254  0832  00A1               	movwf	DelayMs@millis+1
  4255  0833  160A  118A  229F  120A  158A  	fcall	_DelayMs
  4256  0838                     l4271:	
  4257                           
  4258                           ;games.c: 403:     }
  4259  0838  30FF               	movlw	255
  4260  0839  1283               	bcf	3,5	;RP0=0, select bank0
  4261  083A  1303               	bcf	3,6	;RP1=0, select bank0
  4262  083B  00B4               	movwf	??_countdown
  4263  083C  0834               	movf	??_countdown,w
  4264  083D  07B5               	addwf	countdown@i,f
  4265  083E                     l4273:	
  4266  083E  1FB5               	btfss	countdown@i,7
  4267  083F  2841               	goto	u3191
  4268  0840  2842               	goto	u3190
  4269  0841                     u3191:	
  4270  0841  2816               	goto	l4267
  4271  0842                     u3190:	
  4272  0842                     l4275:	
  4273                           
  4274                           ;games.c: 404:     lcd_clear(gameboard);
  4275  0842  3005               	movlw	5
  4276  0843  00A8               	movwf	lcd_clear@port
  4277  0844  3000               	movlw	0
  4278  0845  00A9               	movwf	lcd_clear@port+1
  4279  0846  160A  118A  22B8  120A  158A  	fcall	_lcd_clear
  4280  084B                     l377:	
  4281  084B  0008               	return
  4282  084C                     __end_of_countdown:	
  4283                           
  4284                           	psect	text10
  4285  078B                     __ptext10:	
  4286 ;; *************** function _simon_says_game_end *****************
  4287 ;; Defined at:
  4288 ;;		line 201 in file "games.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    5
  4309 ;; This function calls:
  4310 ;;		_end_screen
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _simon_says_game_end
  4318  078B                     _simon_says_game_end:	
  4319  078B                     l4763:	
  4320                           ;incstack = 0
  4321                           ; Regs used in _simon_says_game_end: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4322                           
  4323                           
  4324                           ;games.c: 202:     if(p1_score == 0) {
  4325  078B  1283               	bcf	3,5	;RP0=0, select bank0
  4326  078C  1303               	bcf	3,6	;RP1=0, select bank0
  4327  078D  0867               	movf	_p1_score,w
  4328  078E  1D03               	btfss	3,2
  4329  078F  2F91               	goto	u3771
  4330  0790  2F92               	goto	u3770
  4331  0791                     u3771:	
  4332  0791  2FA0               	goto	l4767
  4333  0792                     u3770:	
  4334  0792                     l4765:	
  4335                           
  4336                           ;games.c: 203:         end_screen("   Game Over!", "   You stink!");
  4337  0792  300A               	movlw	low (STR_4| (0+32768))
  4338  0793  00AD               	movwf	end_screen@first_row
  4339  0794  3084               	movlw	high (STR_4| (0+32768))
  4340  0795  00AE               	movwf	end_screen@first_row+1
  4341  0796  30EE               	movlw	low (STR_5| (0+32768))
  4342  0797  00AF               	movwf	end_screen@second_row
  4343  0798  3083               	movlw	high (STR_5| (0+32768))
  4344  0799  00B0               	movwf	end_screen@second_row+1
  4345  079A  120A  118A  2054  120A  118A  	fcall	_end_screen
  4346                           
  4347                           ;games.c: 204:     } else if(p1_score <= 5) {
  4348  079F  2FFD               	goto	l301
  4349  07A0                     l4767:	
  4350  07A0  3006               	movlw	6
  4351  07A1  0267               	subwf	_p1_score,w
  4352  07A2  1803               	skipnc
  4353  07A3  2FA5               	goto	u3781
  4354  07A4  2FA6               	goto	u3780
  4355  07A5                     u3781:	
  4356  07A5  2FB4               	goto	l4771
  4357  07A6                     u3780:	
  4358  07A6                     l4769:	
  4359                           
  4360                           ;games.c: 205:         end_screen("   Game Over!", "Not very good...");
  4361  07A6  300A               	movlw	low (STR_4| (0+32768))
  4362  07A7  00AD               	movwf	end_screen@first_row
  4363  07A8  3084               	movlw	high (STR_4| (0+32768))
  4364  07A9  00AE               	movwf	end_screen@first_row+1
  4365  07AA  3052               	movlw	low (STR_7| (0+32768))
  4366  07AB  00AF               	movwf	end_screen@second_row
  4367  07AC  3083               	movlw	high (STR_7| (0+32768))
  4368  07AD  00B0               	movwf	end_screen@second_row+1
  4369  07AE  120A  118A  2054  120A  118A  	fcall	_end_screen
  4370                           
  4371                           ;games.c: 206:     } else if(p1_score <= 10) {
  4372  07B3  2FFD               	goto	l301
  4373  07B4                     l4771:	
  4374  07B4  300B               	movlw	11
  4375  07B5  0267               	subwf	_p1_score,w
  4376  07B6  1803               	skipnc
  4377  07B7  2FB9               	goto	u3791
  4378  07B8  2FBA               	goto	u3790
  4379  07B9                     u3791:	
  4380  07B9  2FC8               	goto	l4775
  4381  07BA                     u3790:	
  4382  07BA                     l4773:	
  4383                           
  4384                           ;games.c: 207:         end_screen("   Game Over!", "    Not bad.");
  4385  07BA  300A               	movlw	low (STR_4| (0+32768))
  4386  07BB  00AD               	movwf	end_screen@first_row
  4387  07BC  3084               	movlw	high (STR_4| (0+32768))
  4388  07BD  00AE               	movwf	end_screen@first_row+1
  4389  07BE  3033               	movlw	low (STR_9| (0+32768))
  4390  07BF  00AF               	movwf	end_screen@second_row
  4391  07C0  3084               	movlw	high (STR_9| (0+32768))
  4392  07C1  00B0               	movwf	end_screen@second_row+1
  4393  07C2  120A  118A  2054  120A  118A  	fcall	_end_screen
  4394                           
  4395                           ;games.c: 208:     } else if(p1_score <= 15) {
  4396  07C7  2FFD               	goto	l301
  4397  07C8                     l4775:	
  4398  07C8  3010               	movlw	16
  4399  07C9  0267               	subwf	_p1_score,w
  4400  07CA  1803               	skipnc
  4401  07CB  2FCD               	goto	u3801
  4402  07CC  2FCE               	goto	u3800
  4403  07CD                     u3801:	
  4404  07CD  2FDC               	goto	l4779
  4405  07CE                     u3800:	
  4406  07CE                     l4777:	
  4407                           
  4408                           ;games.c: 209:         end_screen("   Game Over!", "   Great job!");
  4409  07CE  300A               	movlw	low (STR_4| (0+32768))
  4410  07CF  00AD               	movwf	end_screen@first_row
  4411  07D0  3084               	movlw	high (STR_4| (0+32768))
  4412  07D1  00AE               	movwf	end_screen@first_row+1
  4413  07D2  30E0               	movlw	low (STR_11| (0+32768))
  4414  07D3  00AF               	movwf	end_screen@second_row
  4415  07D4  3083               	movlw	high (STR_11| (0+32768))
  4416  07D5  00B0               	movwf	end_screen@second_row+1
  4417  07D6  120A  118A  2054  120A  118A  	fcall	_end_screen
  4418                           
  4419                           ;games.c: 210:     } else if(p1_score < 20) {
  4420  07DB  2FFD               	goto	l301
  4421  07DC                     l4779:	
  4422  07DC  3014               	movlw	20
  4423  07DD  0267               	subwf	_p1_score,w
  4424  07DE  1803               	skipnc
  4425  07DF  2FE1               	goto	u3811
  4426  07E0  2FE2               	goto	u3810
  4427  07E1                     u3811:	
  4428  07E1  2FF0               	goto	l4783
  4429  07E2                     u3810:	
  4430  07E2                     l4781:	
  4431                           
  4432                           ;games.c: 211:         end_screen("   Game Over!", " Almost there!!");
  4433  07E2  300A               	movlw	low (STR_4| (0+32768))
  4434  07E3  00AD               	movwf	end_screen@first_row
  4435  07E4  3084               	movlw	high (STR_4| (0+32768))
  4436  07E5  00AE               	movwf	end_screen@first_row+1
  4437  07E6  3074               	movlw	low (STR_13| (0+32768))
  4438  07E7  00AF               	movwf	end_screen@second_row
  4439  07E8  3083               	movlw	high (STR_13| (0+32768))
  4440  07E9  00B0               	movwf	end_screen@second_row+1
  4441  07EA  120A  118A  2054  120A  118A  	fcall	_end_screen
  4442                           
  4443                           ;games.c: 212:     } else {
  4444  07EF  2FFD               	goto	l301
  4445  07F0                     l4783:	
  4446                           
  4447                           ;games.c: 213:         end_screen("   Game Over!", "   You win!!!");
  4448  07F0  300A               	movlw	low (STR_4| (0+32768))
  4449  07F1  00AD               	movwf	end_screen@first_row
  4450  07F2  3084               	movlw	high (STR_4| (0+32768))
  4451  07F3  00AE               	movwf	end_screen@first_row+1
  4452  07F4  30C4               	movlw	low (STR_15| (0+32768))
  4453  07F5  00AF               	movwf	end_screen@second_row
  4454  07F6  3083               	movlw	high (STR_15| (0+32768))
  4455  07F7  00B0               	movwf	end_screen@second_row+1
  4456  07F8  120A  118A  2054  120A  118A  	fcall	_end_screen
  4457  07FD                     l301:	
  4458  07FD  0008               	return
  4459  07FE                     __end_of_simon_says_game_end:	
  4460                           
  4461                           	psect	text11
  4462  1549                     __ptext11:	
  4463 ;; *************** function _lcd_init *****************
  4464 ;; Defined at:
  4465 ;;		line 154 in file "lcd4bits.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  port            2   10[BANK0 ] PTR unsigned char 
  4468 ;;		 -> PORTD(1), PORTA(1), 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       2       0       0       0
  4481 ;;      Locals:         0       0       0       0       0
  4482 ;;      Temps:          0       1       0       0       0
  4483 ;;      Totals:         0       3       0       0       0
  4484 ;;Total ram usage:        3 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    4
  4487 ;; This function calls:
  4488 ;;		_DelayMs
  4489 ;;		_lcd_clear
  4490 ;;		_lcd_write
  4491 ;;		_tmr0_init
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _lcd_init
  4499  1549                     _lcd_init:	
  4500  1549                     l4529:	
  4501                           ;incstack = 0
  4502                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4503                           
  4504                           
  4505                           ;lcd4bits.c: 154: void lcd_init(char *port);lcd4bits.c: 155: {;lcd4bits.c: 156:     tmr0
      +                          _init();
  4506  1549  160A  118A  2269  160A  118A  	fcall	_tmr0_init
  4507  154E                     l4531:	
  4508                           
  4509                           ;lcd4bits.c: 157:     *port = 0;
  4510  154E  1283               	bcf	3,5	;RP0=0, select bank0
  4511  154F  1303               	bcf	3,6	;RP1=0, select bank0
  4512  1550  082A               	movf	lcd_init@port,w
  4513  1551  0084               	movwf	4
  4514  1552  1783               	bsf	3,7
  4515  1553  1C2B               	btfss	lcd_init@port+1,0
  4516  1554  1383               	bcf	3,7
  4517  1555  0180               	clrf	0
  4518  1556                     l4533:	
  4519                           
  4520                           ;lcd4bits.c: 158:     DelayMs(15);
  4521  1556  300F               	movlw	15
  4522  1557  00A0               	movwf	DelayMs@millis
  4523  1558  3000               	movlw	0
  4524  1559  00A1               	movwf	DelayMs@millis+1
  4525  155A  160A  118A  229F  160A  118A  	fcall	_DelayMs
  4526  155F                     l4535:	
  4527                           
  4528                           ;lcd4bits.c: 159:     lcd_write(0x00, 0x28, port);
  4529  155F  3028               	movlw	40
  4530  1560  1283               	bcf	3,5	;RP0=0, select bank0
  4531  1561  1303               	bcf	3,6	;RP1=0, select bank0
  4532  1562  00AC               	movwf	??_lcd_init
  4533  1563  082C               	movf	??_lcd_init,w
  4534  1564  00A2               	movwf	lcd_write@CmdChar
  4535  1565  082A               	movf	lcd_init@port,w
  4536  1566  00A3               	movwf	lcd_write@port
  4537  1567  082B               	movf	lcd_init@port+1,w
  4538  1568  00A4               	movwf	lcd_write@port+1
  4539  1569  3000               	movlw	0
  4540  156A  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  4541  156F                     l4537:	
  4542                           
  4543                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x0C, port);
  4544  156F  300C               	movlw	12
  4545  1570  1283               	bcf	3,5	;RP0=0, select bank0
  4546  1571  1303               	bcf	3,6	;RP1=0, select bank0
  4547  1572  00AC               	movwf	??_lcd_init
  4548  1573  082C               	movf	??_lcd_init,w
  4549  1574  00A2               	movwf	lcd_write@CmdChar
  4550  1575  082A               	movf	lcd_init@port,w
  4551  1576  00A3               	movwf	lcd_write@port
  4552  1577  082B               	movf	lcd_init@port+1,w
  4553  1578  00A4               	movwf	lcd_write@port+1
  4554  1579  3000               	movlw	0
  4555  157A  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  4556  157F                     l4539:	
  4557                           
  4558                           ;lcd4bits.c: 161:     lcd_clear(port);
  4559  157F  1283               	bcf	3,5	;RP0=0, select bank0
  4560  1580  1303               	bcf	3,6	;RP1=0, select bank0
  4561  1581  082A               	movf	lcd_init@port,w
  4562  1582  00A8               	movwf	lcd_clear@port
  4563  1583  082B               	movf	lcd_init@port+1,w
  4564  1584  00A9               	movwf	lcd_clear@port+1
  4565  1585  160A  118A  22B8  160A  118A  	fcall	_lcd_clear
  4566  158A                     l4541:	
  4567                           
  4568                           ;lcd4bits.c: 162:     lcd_write(0x00, 0x06, port);
  4569  158A  3006               	movlw	6
  4570  158B  1283               	bcf	3,5	;RP0=0, select bank0
  4571  158C  1303               	bcf	3,6	;RP1=0, select bank0
  4572  158D  00AC               	movwf	??_lcd_init
  4573  158E  082C               	movf	??_lcd_init,w
  4574  158F  00A2               	movwf	lcd_write@CmdChar
  4575  1590  082A               	movf	lcd_init@port,w
  4576  1591  00A3               	movwf	lcd_write@port
  4577  1592  082B               	movf	lcd_init@port+1,w
  4578  1593  00A4               	movwf	lcd_write@port+1
  4579  1594  3000               	movlw	0
  4580  1595  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  4581  159A                     l44:	
  4582  159A  0008               	return
  4583  159B                     __end_of_lcd_init:	
  4584                           
  4585                           	psect	text12
  4586  1269                     __ptext12:	
  4587 ;; *************** function _tmr0_init *****************
  4588 ;; Defined at:
  4589 ;;		line 72 in file "lcd4bits.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4603 ;;      Params:         0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0
  4605 ;;      Temps:          0       1       0       0       0
  4606 ;;      Totals:         0       1       0       0       0
  4607 ;;Total ram usage:        1 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_lcd_init
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _tmr0_init
  4619  1269                     _tmr0_init:	
  4620  1269                     l4149:	
  4621                           ;incstack = 0
  4622                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  4623                           
  4624                           
  4625                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  4626  1269  30C0               	movlw	192
  4627  126A  1283               	bcf	3,5	;RP0=0, select bank0
  4628  126B  1303               	bcf	3,6	;RP1=0, select bank0
  4629  126C  00A0               	movwf	??_tmr0_init
  4630  126D  0820               	movf	??_tmr0_init,w
  4631  126E  1683               	bsf	3,5	;RP0=1, select bank1
  4632  126F  1303               	bcf	3,6	;RP1=0, select bank1
  4633  1270  0581               	andwf	1,f	;volatile
  4634  1271                     l4151:	
  4635                           
  4636                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  4637  1271  1501               	bsf	1,2	;volatile
  4638  1272                     l9:	
  4639  1272  0008               	return
  4640  1273                     __end_of_tmr0_init:	
  4641                           
  4642                           	psect	text13
  4643  1330                     __ptext13:	
  4644 ;; *************** function _joystick_init *****************
  4645 ;; Defined at:
  4646 ;;		line 823 in file "games.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function _joystick_init
  4676  1330                     _joystick_init:	
  4677  1330                     l4543:	
  4678                           ;incstack = 0
  4679                           ; Regs used in _joystick_init: [wreg+status,2]
  4680                           
  4681                           
  4682                           ;games.c: 824:     joystick_x_pos = 512;
  4683  1330  3000               	movlw	0
  4684  1331  1283               	bcf	3,5	;RP0=0, select bank0
  4685  1332  1303               	bcf	3,6	;RP1=0, select bank0
  4686  1333  00E0               	movwf	_joystick_x_pos
  4687  1334  3002               	movlw	2
  4688  1335  00E1               	movwf	_joystick_x_pos+1
  4689                           
  4690                           ;games.c: 825:     joystick_y_pos = 512;
  4691  1336  3000               	movlw	0
  4692  1337  00DE               	movwf	_joystick_y_pos
  4693  1338  3002               	movlw	2
  4694  1339  00DF               	movwf	_joystick_y_pos+1
  4695  133A                     l4545:	
  4696                           
  4697                           ;games.c: 826:     PORTB = 0;
  4698  133A  0186               	clrf	6	;volatile
  4699  133B                     l4547:	
  4700                           
  4701                           ;games.c: 827:     nRBPU = 0;
  4702  133B  1683               	bsf	3,5	;RP0=1, select bank1
  4703  133C  1303               	bcf	3,6	;RP1=0, select bank1
  4704  133D  1381               	bcf	1,7	;volatile
  4705  133E                     l4549:	
  4706                           
  4707                           ;games.c: 828:     WPUB = 0x24;
  4708  133E  3024               	movlw	36
  4709  133F  0095               	movwf	21	;volatile
  4710  1340                     l4551:	
  4711                           
  4712                           ;games.c: 829:     TRISB = 0x3F;
  4713  1340  303F               	movlw	63
  4714  1341  0086               	movwf	6	;volatile
  4715  1342                     l4553:	
  4716                           
  4717                           ;games.c: 830:     ANSELH = 0x1E;
  4718  1342  301E               	movlw	30
  4719  1343  1683               	bsf	3,5	;RP0=1, select bank3
  4720  1344  1703               	bsf	3,6	;RP1=1, select bank3
  4721  1345  0089               	movwf	9	;volatile
  4722  1346                     l4555:	
  4723                           
  4724                           ;games.c: 831:     GIE = 1;
  4725  1346  178B               	bsf	11,7	;volatile
  4726  1347                     l4557:	
  4727                           
  4728                           ;games.c: 832:     PEIE = 1;
  4729  1347  170B               	bsf	11,6	;volatile
  4730  1348                     l4559:	
  4731                           
  4732                           ;games.c: 833:     ADIF = 0;
  4733  1348  1283               	bcf	3,5	;RP0=0, select bank0
  4734  1349  1303               	bcf	3,6	;RP1=0, select bank0
  4735  134A  130C               	bcf	12,6	;volatile
  4736  134B                     l4561:	
  4737                           
  4738                           ;games.c: 834:     ADIE = 1;
  4739  134B  1683               	bsf	3,5	;RP0=1, select bank1
  4740  134C  1303               	bcf	3,6	;RP1=0, select bank1
  4741  134D  170C               	bsf	12,6	;volatile
  4742  134E                     l4563:	
  4743                           
  4744                           ;games.c: 835:     ADCON1 = 0x80;
  4745  134E  3080               	movlw	128
  4746  134F  009F               	movwf	31	;volatile
  4747  1350                     l4565:	
  4748                           
  4749                           ;games.c: 836:     ADCON0 = 0xA5;
  4750  1350  30A5               	movlw	165
  4751  1351  1283               	bcf	3,5	;RP0=0, select bank0
  4752  1352  1303               	bcf	3,6	;RP1=0, select bank0
  4753  1353  009F               	movwf	31	;volatile
  4754  1354                     l4567:	
  4755                           
  4756                           ;games.c: 837:     joystick_pressed = 1;
  4757  1354  01E4               	clrf	_joystick_pressed
  4758  1355  0AE4               	incf	_joystick_pressed,f
  4759  1356                     l568:	
  4760  1356  0008               	return
  4761  1357                     __end_of_joystick_init:	
  4762                           
  4763                           	psect	text14
  4764  1784                     __ptext14:	
  4765 ;; *************** function _concentration_title_screen *****************
  4766 ;; Defined at:
  4767 ;;		line 444 in file "games.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4781 ;;      Params:         0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    5
  4788 ;; This function calls:
  4789 ;;		_DelayMs
  4790 ;;		_display_concentration_gameboard
  4791 ;;		_display_concentration_scoreboard
  4792 ;;		_lcd_clear
  4793 ;;		_lcd_goto
  4794 ;;		_lcd_puts
  4795 ;; This function is called by:
  4796 ;;		_main
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _concentration_title_screen
  4802  1784                     _concentration_title_screen:	
  4803  1784                     l4633:	
  4804                           ;incstack = 0
  4805                           ; Regs used in _concentration_title_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  4806                           
  4807                           
  4808                           ;games.c: 445:     lcd_puts(" Concentration!", scoreboard);
  4809  1784  3084               	movlw	low (STR_30| (0+32768))
  4810  1785  1283               	bcf	3,5	;RP0=0, select bank0
  4811  1786  1303               	bcf	3,6	;RP1=0, select bank0
  4812  1787  00A8               	movwf	lcd_puts@string
  4813  1788  3083               	movlw	high (STR_30| (0+32768))
  4814  1789  00A9               	movwf	lcd_puts@string+1
  4815  178A  3008               	movlw	8
  4816  178B  00AA               	movwf	lcd_puts@port
  4817  178C  3000               	movlw	0
  4818  178D  00AB               	movwf	lcd_puts@port+1
  4819  178E  160A  118A  23AF  160A  118A  	fcall	_lcd_puts
  4820                           
  4821                           ;games.c: 446:     lcd_puts("Press the button", gameboard);
  4822  1793  3063               	movlw	low (STR_22| (0+32768))
  4823  1794  1283               	bcf	3,5	;RP0=0, select bank0
  4824  1795  1303               	bcf	3,6	;RP1=0, select bank0
  4825  1796  00A8               	movwf	lcd_puts@string
  4826  1797  3083               	movlw	high (STR_22| (0+32768))
  4827  1798  00A9               	movwf	lcd_puts@string+1
  4828  1799  3005               	movlw	5
  4829  179A  00AA               	movwf	lcd_puts@port
  4830  179B  3000               	movlw	0
  4831  179C  00AB               	movwf	lcd_puts@port+1
  4832  179D  160A  118A  23AF  160A  118A  	fcall	_lcd_puts
  4833  17A2                     l4635:	
  4834                           
  4835                           ;games.c: 447:     lcd_goto(0x40, gameboard);
  4836  17A2  3005               	movlw	5
  4837  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  4838  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  4839  17A5  00A8               	movwf	lcd_goto@port
  4840  17A6  3000               	movlw	0
  4841  17A7  00A9               	movwf	lcd_goto@port+1
  4842  17A8  3040               	movlw	64
  4843  17A9  160A  118A  22EC  160A  118A  	fcall	_lcd_goto
  4844  17AE                     l4637:	
  4845                           
  4846                           ;games.c: 448:     lcd_puts("    to start", gameboard);
  4847  17AE  3067               	movlw	low (STR_23| (0+32768))
  4848  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  4849  17B0  1303               	bcf	3,6	;RP1=0, select bank0
  4850  17B1  00A8               	movwf	lcd_puts@string
  4851  17B2  3084               	movlw	high (STR_23| (0+32768))
  4852  17B3  00A9               	movwf	lcd_puts@string+1
  4853  17B4  3005               	movlw	5
  4854  17B5  00AA               	movwf	lcd_puts@port
  4855  17B6  3000               	movlw	0
  4856  17B7  00AB               	movwf	lcd_puts@port+1
  4857  17B8  160A  118A  23AF  160A  118A  	fcall	_lcd_puts
  4858  17BD                     l399:	
  4859                           ;games.c: 449:     while(RB5);
  4860                           
  4861  17BD  1283               	bcf	3,5	;RP0=0, select bank0
  4862  17BE  1303               	bcf	3,6	;RP1=0, select bank0
  4863  17BF  1A86               	btfsc	6,5	;volatile
  4864  17C0  2FC2               	goto	u3461
  4865  17C1  2FC3               	goto	u3460
  4866  17C2                     u3461:	
  4867  17C2  2FBD               	goto	l399
  4868  17C3                     u3460:	
  4869  17C3                     l4639:	
  4870                           
  4871                           ;games.c: 450:     DelayMs(8);
  4872  17C3  3008               	movlw	8
  4873  17C4  00A0               	movwf	DelayMs@millis
  4874  17C5  3000               	movlw	0
  4875  17C6  00A1               	movwf	DelayMs@millis+1
  4876  17C7  160A  118A  229F  160A  118A  	fcall	_DelayMs
  4877  17CC                     l402:	
  4878                           ;games.c: 451:     while(!RB5);
  4879                           
  4880  17CC  1283               	bcf	3,5	;RP0=0, select bank0
  4881  17CD  1303               	bcf	3,6	;RP1=0, select bank0
  4882  17CE  1E86               	btfss	6,5	;volatile
  4883  17CF  2FD1               	goto	u3471
  4884  17D0  2FD2               	goto	u3470
  4885  17D1                     u3471:	
  4886  17D1  2FCC               	goto	l402
  4887  17D2                     u3470:	
  4888  17D2                     l4641:	
  4889                           
  4890                           ;games.c: 452:     DelayMs(8);
  4891  17D2  3008               	movlw	8
  4892  17D3  00A0               	movwf	DelayMs@millis
  4893  17D4  3000               	movlw	0
  4894  17D5  00A1               	movwf	DelayMs@millis+1
  4895  17D6  160A  118A  229F  160A  118A  	fcall	_DelayMs
  4896  17DB                     l4643:	
  4897                           
  4898                           ;games.c: 453:     lcd_clear(gameboard);
  4899  17DB  3005               	movlw	5
  4900  17DC  1283               	bcf	3,5	;RP0=0, select bank0
  4901  17DD  1303               	bcf	3,6	;RP1=0, select bank0
  4902  17DE  00A8               	movwf	lcd_clear@port
  4903  17DF  3000               	movlw	0
  4904  17E0  00A9               	movwf	lcd_clear@port+1
  4905  17E1  160A  118A  22B8  160A  118A  	fcall	_lcd_clear
  4906  17E6                     l4645:	
  4907                           
  4908                           ;games.c: 454:     lcd_clear(scoreboard);
  4909  17E6  3008               	movlw	8
  4910  17E7  1283               	bcf	3,5	;RP0=0, select bank0
  4911  17E8  1303               	bcf	3,6	;RP1=0, select bank0
  4912  17E9  00A8               	movwf	lcd_clear@port
  4913  17EA  3000               	movlw	0
  4914  17EB  00A9               	movwf	lcd_clear@port+1
  4915  17EC  160A  118A  22B8  160A  118A  	fcall	_lcd_clear
  4916  17F1                     l4647:	
  4917                           
  4918                           ;games.c: 455:     p1_score = 0;
  4919  17F1  1283               	bcf	3,5	;RP0=0, select bank0
  4920  17F2  1303               	bcf	3,6	;RP1=0, select bank0
  4921  17F3  01E7               	clrf	_p1_score
  4922  17F4                     l4649:	
  4923                           
  4924                           ;games.c: 456:     p2_score = 0;
  4925  17F4  01E6               	clrf	_p2_score
  4926  17F5                     l4651:	
  4927                           
  4928                           ;games.c: 457:     display_concentration_scoreboard();
  4929  17F5  120A  158A  2294  160A  118A  	fcall	_display_concentration_scoreboard
  4930  17FA                     l4653:	
  4931                           
  4932                           ;games.c: 458:     display_concentration_gameboard();
  4933  17FA  160A  118A  241A  160A  118A  	fcall	_display_concentration_gameboard
  4934  17FF                     l405:	
  4935  17FF  0008               	return
  4936  1800                     __end_of_concentration_title_screen:	
  4937                           
  4938                           	psect	text15
  4939  145F                     __ptext15:	
  4940 ;; *************** function _concentration_gameboard_init *****************
  4941 ;; Defined at:
  4942 ;;		line 503 in file "games.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  i               1   54[BANK0 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4956 ;;      Params:         0       0       0       0       0
  4957 ;;      Locals:         0       1       0       0       0
  4958 ;;      Temps:          0       1       0       0       0
  4959 ;;      Totals:         0       2       0       0       0
  4960 ;;Total ram usage:        2 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    5
  4963 ;; This function calls:
  4964 ;;		_get_cursor_index
  4965 ;;		_lcd_clear
  4966 ;;		_lcd_goto
  4967 ;;		_make_custom_chars
  4968 ;;		_randomize_gameboard
  4969 ;; This function is called by:
  4970 ;;		_main
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           
  4975                           ;psect for function _concentration_gameboard_init
  4976  145F                     _concentration_gameboard_init:	
  4977  145F                     l4605:	
  4978                           ;incstack = 0
  4979                           ; Regs used in _concentration_gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
      +                          th+cstack]
  4980                           
  4981                           
  4982                           ;games.c: 504:     selected_tile = 0xFF;
  4983  145F  30FF               	movlw	255
  4984  1460  1283               	bcf	3,5	;RP0=0, select bank0
  4985  1461  1303               	bcf	3,6	;RP1=0, select bank0
  4986  1462  00D5               	movwf	??_concentration_gameboard_init
  4987  1463  0855               	movf	??_concentration_gameboard_init,w
  4988  1464  00E5               	movwf	_selected_tile
  4989  1465                     l4607:	
  4990                           
  4991                           ;games.c: 505:     make_custom_chars();
  4992  1465  120A  158A  2163  160A  118A  	fcall	_make_custom_chars
  4993  146A                     l4609:	
  4994                           
  4995                           ;games.c: 506:     char i;;games.c: 507:     for(i = 0; i < 32; i++) {
  4996  146A  1283               	bcf	3,5	;RP0=0, select bank0
  4997  146B  1303               	bcf	3,6	;RP1=0, select bank0
  4998  146C  01D6               	clrf	concentration_gameboard_init@i
  4999  146D                     l4615:	
  5000                           
  5001                           ;games.c: 508:         visible[i] = 0xFF;
  5002  146D  30FF               	movlw	255
  5003  146E  00D5               	movwf	??_concentration_gameboard_init
  5004  146F  0856               	movf	concentration_gameboard_init@i,w
  5005  1470  3EA0               	addlw	(low (_visible| 0))& (0+255)
  5006  1471  0084               	movwf	4
  5007  1472  0855               	movf	??_concentration_gameboard_init,w
  5008  1473  1383               	bcf	3,7	;select IRP bank1
  5009  1474  0080               	movwf	0
  5010  1475                     l4617:	
  5011                           
  5012                           ;games.c: 509:     }
  5013  1475  3001               	movlw	1
  5014  1476  00D5               	movwf	??_concentration_gameboard_init
  5015  1477  0855               	movf	??_concentration_gameboard_init,w
  5016  1478  07D6               	addwf	concentration_gameboard_init@i,f
  5017  1479                     l4619:	
  5018  1479  3020               	movlw	32
  5019  147A  0256               	subwf	concentration_gameboard_init@i,w
  5020  147B  1C03               	skipc
  5021  147C  2C7E               	goto	u3451
  5022  147D  2C7F               	goto	u3450
  5023  147E                     u3451:	
  5024  147E  2C6D               	goto	l4615
  5025  147F                     u3450:	
  5026  147F                     l4621:	
  5027                           
  5028                           ;games.c: 510:     lcd_clear(gameboard);
  5029  147F  3005               	movlw	5
  5030  1480  00A8               	movwf	lcd_clear@port
  5031  1481  3000               	movlw	0
  5032  1482  00A9               	movwf	lcd_clear@port+1
  5033  1483  160A  118A  22B8  160A  118A  	fcall	_lcd_clear
  5034  1488                     l4623:	
  5035                           
  5036                           ;games.c: 511:     cursor_pos = 0x00;
  5037  1488  1283               	bcf	3,5	;RP0=0, select bank0
  5038  1489  1303               	bcf	3,6	;RP1=0, select bank0
  5039  148A  01EC               	clrf	_cursor_pos
  5040  148B                     l4625:	
  5041                           
  5042                           ;games.c: 512:     cursor_solid = 0;
  5043  148B  01EA               	clrf	_cursor_solid
  5044                           
  5045                           ;games.c: 513:     current_char = visible[get_cursor_index(cursor_pos)];
  5046  148C  086C               	movf	_cursor_pos,w
  5047  148D  160A  118A  2273  160A  118A  	fcall	_get_cursor_index
  5048  1492  3EA0               	addlw	(low (_visible| 0))& (0+255)
  5049  1493  0084               	movwf	4
  5050  1494  1383               	bcf	3,7	;select IRP bank1
  5051  1495  0800               	movf	0,w
  5052  1496  1283               	bcf	3,5	;RP0=0, select bank0
  5053  1497  1303               	bcf	3,6	;RP1=0, select bank0
  5054  1498  00D5               	movwf	??_concentration_gameboard_init
  5055  1499  0855               	movf	??_concentration_gameboard_init,w
  5056  149A  00EB               	movwf	_current_char
  5057  149B                     l4627:	
  5058                           
  5059                           ;games.c: 514:     delay_loops = 0;
  5060  149B  01E9               	clrf	_delay_loops
  5061  149C                     l4629:	
  5062                           
  5063                           ;games.c: 515:     lcd_goto(cursor_pos, gameboard);
  5064  149C  3005               	movlw	5
  5065  149D  00A8               	movwf	lcd_goto@port
  5066  149E  3000               	movlw	0
  5067  149F  00A9               	movwf	lcd_goto@port+1
  5068  14A0  086C               	movf	_cursor_pos,w
  5069  14A1  160A  118A  22EC  160A  118A  	fcall	_lcd_goto
  5070  14A6                     l4631:	
  5071                           
  5072                           ;games.c: 516:     randomize_gameboard();
  5073  14A6  160A  118A  264B  160A  118A  	fcall	_randomize_gameboard
  5074  14AB                     l438:	
  5075  14AB  0008               	return
  5076  14AC                     __end_of_concentration_gameboard_init:	
  5077                           
  5078                           	psect	text16
  5079  164B                     __ptext16:	
  5080 ;; *************** function _randomize_gameboard *****************
  5081 ;; Defined at:
  5082 ;;		line 526 in file "games.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  used           32   19[BANK0 ] unsigned char [32]
  5087 ;;  random          1   52[BANK0 ] unsigned char 
  5088 ;;  current         1   51[BANK0 ] unsigned char 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         0       0       0       0       0
  5099 ;;      Locals:         0      34       0       0       0
  5100 ;;      Temps:          0       3       0       0       0
  5101 ;;      Totals:         0      37       0       0       0
  5102 ;;Total ram usage:       37 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    2
  5105 ;; This function calls:
  5106 ;;		_DelayMs
  5107 ;;		___awdiv
  5108 ;; This function is called by:
  5109 ;;		_concentration_gameboard_init
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           
  5114                           ;psect for function _randomize_gameboard
  5115  164B                     _randomize_gameboard:	
  5116  164B                     l4397:	
  5117                           ;incstack = 0
  5118                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5119                           
  5120                           
  5121                           ;games.c: 527:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
      +                          , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  5122  164B  3033               	movlw	randomize_gameboard@used& (0+255)
  5123  164C  0084               	movwf	4
  5124  164D  3020               	movlw	32
  5125  164E  00FF               	movwf	btemp+1
  5126  164F                     u3350:	
  5127  164F  1383               	bcf	3,7	;select IRP bank0
  5128  1650  0180               	clrf	0
  5129  1651  0A84               	incf	4,f
  5130  1652  0BFF               	decfsz	btemp+1,f
  5131  1653  2E4F               	goto	u3350
  5132  1654                     l4399:	
  5133                           
  5134                           ;games.c: 528:     char current = 0;
  5135  1654  1283               	bcf	3,5	;RP0=0, select bank0
  5136  1655  1303               	bcf	3,6	;RP1=0, select bank0
  5137  1656  01D3               	clrf	randomize_gameboard@current
  5138                           
  5139                           ;games.c: 529:     char random;;games.c: 530:     while(current != 32) {
  5140  1657  2EA3               	goto	l4413
  5141  1658                     l4401:	
  5142                           
  5143                           ;games.c: 531:         DelayMs(TMR2>>(2+(TMR1%4)));
  5144  1658  0811               	movf	17,w	;volatile
  5145  1659  00B0               	movwf	??_randomize_gameboard
  5146  165A  080E               	movf	14,w	;volatile
  5147  165B  3903               	andlw	3
  5148  165C  3E02               	addlw	2
  5149  165D  3E01               	addlw	1
  5150  165E  2E61               	goto	u3364
  5151  165F                     u3365:	
  5152  165F  1003               	clrc
  5153  1660  0CB0               	rrf	??_randomize_gameboard,f
  5154  1661                     u3364:	
  5155  1661  3EFF               	addlw	-1
  5156  1662  1D03               	skipz
  5157  1663  2E5F               	goto	u3365
  5158  1664  0830               	movf	??_randomize_gameboard,w
  5159  1665  00B1               	movwf	??_randomize_gameboard+1
  5160  1666  01B2               	clrf	??_randomize_gameboard+2
  5161  1667  0831               	movf	??_randomize_gameboard+1,w
  5162  1668  00A0               	movwf	DelayMs@millis
  5163  1669  0832               	movf	??_randomize_gameboard+2,w
  5164  166A  00A1               	movwf	DelayMs@millis+1
  5165  166B  160A  118A  229F  160A  118A  	fcall	_DelayMs
  5166  1670                     l4403:	
  5167                           
  5168                           ;games.c: 532:         random = TMR1 % 32;
  5169  1670  1283               	bcf	3,5	;RP0=0, select bank0
  5170  1671  1303               	bcf	3,6	;RP1=0, select bank0
  5171  1672  080E               	movf	14,w	;volatile
  5172  1673  391F               	andlw	31
  5173  1674  00B0               	movwf	??_randomize_gameboard
  5174  1675  0830               	movf	??_randomize_gameboard,w
  5175  1676  00D4               	movwf	randomize_gameboard@random
  5176  1677                     l4405:	
  5177                           
  5178                           ;games.c: 533:         if(used[random] == 0) {
  5179  1677  0854               	movf	randomize_gameboard@random,w
  5180  1678  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  5181  1679  0084               	movwf	4
  5182  167A  1383               	bcf	3,7	;select IRP bank0
  5183  167B  0800               	movf	0,w
  5184  167C  1D03               	btfss	3,2
  5185  167D  2E7F               	goto	u3371
  5186  167E  2E80               	goto	u3370
  5187  167F                     u3371:	
  5188  167F  2EA3               	goto	l4413
  5189  1680                     u3370:	
  5190  1680                     l4407:	
  5191                           
  5192                           ;games.c: 534:             used[random] = 1;
  5193  1680  0854               	movf	randomize_gameboard@random,w
  5194  1681  3E33               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  5195  1682  0084               	movwf	4
  5196  1683  0180               	clrf	0
  5197  1684  0A80               	incf	0,f
  5198  1685                     l4409:	
  5199                           
  5200                           ;games.c: 535:             board[random] = current/4;
  5201  1685  3004               	movlw	4
  5202  1686  00A7               	movwf	___awdiv@divisor
  5203  1687  3000               	movlw	0
  5204  1688  00A8               	movwf	___awdiv@divisor+1
  5205  1689  0853               	movf	randomize_gameboard@current,w
  5206  168A  00B0               	movwf	??_randomize_gameboard
  5207  168B  01B1               	clrf	??_randomize_gameboard+1
  5208  168C  0830               	movf	??_randomize_gameboard,w
  5209  168D  00A9               	movwf	___awdiv@dividend
  5210  168E  0831               	movf	??_randomize_gameboard+1,w
  5211  168F  00AA               	movwf	___awdiv@dividend+1
  5212  1690  160A  118A  26AA  160A  118A  	fcall	___awdiv
  5213  1695  1283               	bcf	3,5	;RP0=0, select bank0
  5214  1696  1303               	bcf	3,6	;RP1=0, select bank0
  5215  1697  0827               	movf	?___awdiv,w
  5216  1698  00B2               	movwf	??_randomize_gameboard+2
  5217  1699  0854               	movf	randomize_gameboard@random,w
  5218  169A  3EC0               	addlw	(low (_board| 0))& (0+255)
  5219  169B  0084               	movwf	4
  5220  169C  0832               	movf	??_randomize_gameboard+2,w
  5221  169D  1383               	bcf	3,7	;select IRP bank1
  5222  169E  0080               	movwf	0
  5223  169F                     l4411:	
  5224                           
  5225                           ;games.c: 536:             current++;
  5226  169F  3001               	movlw	1
  5227  16A0  00B0               	movwf	??_randomize_gameboard
  5228  16A1  0830               	movf	??_randomize_gameboard,w
  5229  16A2  07D3               	addwf	randomize_gameboard@current,f
  5230  16A3                     l4413:	
  5231                           
  5232                           ;games.c: 530:     while(current != 32) {
  5233  16A3  3020               	movlw	32
  5234  16A4  0653               	xorwf	randomize_gameboard@current,w
  5235  16A5  1D03               	btfss	3,2
  5236  16A6  2EA8               	goto	u3381
  5237  16A7  2EA9               	goto	u3380
  5238  16A8                     u3381:	
  5239  16A8  2E58               	goto	l4401
  5240  16A9                     u3380:	
  5241  16A9                     l451:	
  5242  16A9  0008               	return
  5243  16AA                     __end_of_randomize_gameboard:	
  5244                           
  5245                           	psect	text17
  5246  0963                     __ptext17:	
  5247 ;; *************** function _make_custom_chars *****************
  5248 ;; Defined at:
  5249 ;;		line 484 in file "games.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5263 ;;      Params:         0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0
  5265 ;;      Temps:          0       1       0       0       0
  5266 ;;      Totals:         0       1       0       0       0
  5267 ;;Total ram usage:        1 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    4
  5270 ;; This function calls:
  5271 ;;		_lcd_set_custom_char
  5272 ;; This function is called by:
  5273 ;;		_concentration_gameboard_init
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function _make_custom_chars
  5279  0963                     _make_custom_chars:	
  5280  0963                     l4395:	
  5281                           ;incstack = 0
  5282                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5283                           
  5284                           
  5285                           ;games.c: 485:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0E, 0x00}
      +                          ;;games.c: 486:     lcd_set_custom_char(smile, 0x00, gameboard);
  5286  0963  304A               	movlw	low (make_custom_chars@smile| (0+32768))
  5287  0964  1283               	bcf	3,5	;RP0=0, select bank0
  5288  0965  1303               	bcf	3,6	;RP1=0, select bank0
  5289  0966  00A8               	movwf	lcd_set_custom_char@data
  5290  0967  3083               	movlw	high (make_custom_chars@smile| (0+32768))
  5291  0968  00A9               	movwf	lcd_set_custom_char@data+1
  5292  0969  01AA               	clrf	lcd_set_custom_char@cg_address
  5293  096A  3005               	movlw	5
  5294  096B  00AB               	movwf	lcd_set_custom_char@port
  5295  096C  3000               	movlw	0
  5296  096D  00AC               	movwf	lcd_set_custom_char@port+1
  5297  096E  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5298                           
  5299                           ;games.c: 487:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0x00, 0x0
      +                          0};;games.c: 488:     lcd_set_custom_char(diamond, 0x01, gameboard);
  5300  0973  3042               	movlw	low (make_custom_chars@diamond| (0+32768))
  5301  0974  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0975  1303               	bcf	3,6	;RP1=0, select bank0
  5303  0976  00A8               	movwf	lcd_set_custom_char@data
  5304  0977  3083               	movlw	high (make_custom_chars@diamond| (0+32768))
  5305  0978  00A9               	movwf	lcd_set_custom_char@data+1
  5306  0979  01AA               	clrf	lcd_set_custom_char@cg_address
  5307  097A  0AAA               	incf	lcd_set_custom_char@cg_address,f
  5308  097B  3005               	movlw	5
  5309  097C  00AB               	movwf	lcd_set_custom_char@port
  5310  097D  3000               	movlw	0
  5311  097E  00AC               	movwf	lcd_set_custom_char@port+1
  5312  097F  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5313                           
  5314                           ;games.c: 489:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x04, 0x00}
      +                          ;;games.c: 490:     lcd_set_custom_char(heart, 0x02, gameboard);
  5315  0984  303A               	movlw	low (make_custom_chars@heart| (0+32768))
  5316  0985  1283               	bcf	3,5	;RP0=0, select bank0
  5317  0986  1303               	bcf	3,6	;RP1=0, select bank0
  5318  0987  00A8               	movwf	lcd_set_custom_char@data
  5319  0988  3083               	movlw	high (make_custom_chars@heart| (0+32768))
  5320  0989  00A9               	movwf	lcd_set_custom_char@data+1
  5321  098A  3002               	movlw	2
  5322  098B  00B0               	movwf	??_make_custom_chars
  5323  098C  0830               	movf	??_make_custom_chars,w
  5324  098D  00AA               	movwf	lcd_set_custom_char@cg_address
  5325  098E  3005               	movlw	5
  5326  098F  00AB               	movwf	lcd_set_custom_char@port
  5327  0990  3000               	movlw	0
  5328  0991  00AC               	movwf	lcd_set_custom_char@port+1
  5329  0992  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5330                           
  5331                           ;games.c: 491:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x04, 0x0E}
      +                          ;;games.c: 492:     lcd_set_custom_char(spade, 0x03, gameboard);
  5332  0997  3032               	movlw	low (make_custom_chars@spade| (0+32768))
  5333  0998  1283               	bcf	3,5	;RP0=0, select bank0
  5334  0999  1303               	bcf	3,6	;RP1=0, select bank0
  5335  099A  00A8               	movwf	lcd_set_custom_char@data
  5336  099B  3083               	movlw	high (make_custom_chars@spade| (0+32768))
  5337  099C  00A9               	movwf	lcd_set_custom_char@data+1
  5338  099D  3003               	movlw	3
  5339  099E  00B0               	movwf	??_make_custom_chars
  5340  099F  0830               	movf	??_make_custom_chars,w
  5341  09A0  00AA               	movwf	lcd_set_custom_char@cg_address
  5342  09A1  3005               	movlw	5
  5343  09A2  00AB               	movwf	lcd_set_custom_char@port
  5344  09A3  3000               	movlw	0
  5345  09A4  00AC               	movwf	lcd_set_custom_char@port+1
  5346  09A5  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5347                           
  5348                           ;games.c: 493:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04, 0x0E};
      +                          ;games.c: 494:     lcd_set_custom_char(club, 0x04, gameboard);
  5349  09AA  302A               	movlw	low (make_custom_chars@club| (0+32768))
  5350  09AB  1283               	bcf	3,5	;RP0=0, select bank0
  5351  09AC  1303               	bcf	3,6	;RP1=0, select bank0
  5352  09AD  00A8               	movwf	lcd_set_custom_char@data
  5353  09AE  3083               	movlw	high (make_custom_chars@club| (0+32768))
  5354  09AF  00A9               	movwf	lcd_set_custom_char@data+1
  5355  09B0  3004               	movlw	4
  5356  09B1  00B0               	movwf	??_make_custom_chars
  5357  09B2  0830               	movf	??_make_custom_chars,w
  5358  09B3  00AA               	movwf	lcd_set_custom_char@cg_address
  5359  09B4  3005               	movlw	5
  5360  09B5  00AB               	movwf	lcd_set_custom_char@port
  5361  09B6  3000               	movlw	0
  5362  09B7  00AC               	movwf	lcd_set_custom_char@port+1
  5363  09B8  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5364                           
  5365                           ;games.c: 495:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0E, 0x00}
      +                          ;;games.c: 496:     lcd_set_custom_char(skull, 0x05, gameboard);
  5366  09BD  3022               	movlw	low (make_custom_chars@skull| (0+32768))
  5367  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  5368  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  5369  09C0  00A8               	movwf	lcd_set_custom_char@data
  5370  09C1  3083               	movlw	high (make_custom_chars@skull| (0+32768))
  5371  09C2  00A9               	movwf	lcd_set_custom_char@data+1
  5372  09C3  3005               	movlw	5
  5373  09C4  00B0               	movwf	??_make_custom_chars
  5374  09C5  0830               	movf	??_make_custom_chars,w
  5375  09C6  00AA               	movwf	lcd_set_custom_char@cg_address
  5376  09C7  3005               	movlw	5
  5377  09C8  00AB               	movwf	lcd_set_custom_char@port
  5378  09C9  3000               	movlw	0
  5379  09CA  00AC               	movwf	lcd_set_custom_char@port+1
  5380  09CB  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5381                           
  5382                           ;games.c: 497:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 0x05};;g
      +                          ames.c: 498:     lcd_set_custom_char(RH, 0x06, gameboard);
  5383  09D0  301A               	movlw	low (make_custom_chars@RH| (0+32768))
  5384  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  5385  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  5386  09D3  00A8               	movwf	lcd_set_custom_char@data
  5387  09D4  3083               	movlw	high (make_custom_chars@RH| (0+32768))
  5388  09D5  00A9               	movwf	lcd_set_custom_char@data+1
  5389  09D6  3006               	movlw	6
  5390  09D7  00B0               	movwf	??_make_custom_chars
  5391  09D8  0830               	movf	??_make_custom_chars,w
  5392  09D9  00AA               	movwf	lcd_set_custom_char@cg_address
  5393  09DA  3005               	movlw	5
  5394  09DB  00AB               	movwf	lcd_set_custom_char@port
  5395  09DC  3000               	movlw	0
  5396  09DD  00AC               	movwf	lcd_set_custom_char@port+1
  5397  09DE  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5398                           
  5399                           ;games.c: 499:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02, 0x03};;
      +                          games.c: 500:     lcd_set_custom_char(PIC, 0x07, gameboard);
  5400  09E3  3012               	movlw	low (make_custom_chars@PIC| (0+32768))
  5401  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  5402  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  5403  09E6  00A8               	movwf	lcd_set_custom_char@data
  5404  09E7  3083               	movlw	high (make_custom_chars@PIC| (0+32768))
  5405  09E8  00A9               	movwf	lcd_set_custom_char@data+1
  5406  09E9  3007               	movlw	7
  5407  09EA  00B0               	movwf	??_make_custom_chars
  5408  09EB  0830               	movf	??_make_custom_chars,w
  5409  09EC  00AA               	movwf	lcd_set_custom_char@cg_address
  5410  09ED  3005               	movlw	5
  5411  09EE  00AB               	movwf	lcd_set_custom_char@port
  5412  09EF  3000               	movlw	0
  5413  09F0  00AC               	movwf	lcd_set_custom_char@port+1
  5414  09F1  160A  118A  259B  120A  158A  	fcall	_lcd_set_custom_char
  5415  09F6                     l433:	
  5416  09F6  0008               	return
  5417  09F7                     __end_of_make_custom_chars:	
  5418                           
  5419                           	psect	text18
  5420  159B                     __ptext18:	
  5421 ;; *************** function _lcd_set_custom_char *****************
  5422 ;; Defined at:
  5423 ;;		line 165 in file "lcd4bits.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  data            2    8[BANK0 ] PTR const unsigned char 
  5426 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  5427 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  5428 ;;  cg_address      1   10[BANK0 ] unsigned char 
  5429 ;;  port            2   11[BANK0 ] PTR unsigned char 
  5430 ;;		 -> PORTA(1), 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  row             1   15[BANK0 ] unsigned char 
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      void 
  5435 ;; Registers used:
  5436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5442 ;;      Params:         0       5       0       0       0
  5443 ;;      Locals:         0       1       0       0       0
  5444 ;;      Temps:          0       2       0       0       0
  5445 ;;      Totals:         0       8       0       0       0
  5446 ;;Total ram usage:        8 bytes
  5447 ;; Hardware stack levels used:    1
  5448 ;; Hardware stack levels required when called:    3
  5449 ;; This function calls:
  5450 ;;		_lcd_write
  5451 ;; This function is called by:
  5452 ;;		_make_custom_chars
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _lcd_set_custom_char
  5458  159B                     _lcd_set_custom_char:	
  5459  159B                     l3991:	
  5460                           ;incstack = 0
  5461                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5462                           
  5463                           
  5464                           ;lcd4bits.c: 166:     char row;;lcd4bits.c: 167:     for(row = 0; row<8; row++) {
  5465  159B  1283               	bcf	3,5	;RP0=0, select bank0
  5466  159C  1303               	bcf	3,6	;RP1=0, select bank0
  5467  159D  01AF               	clrf	lcd_set_custom_char@row
  5468  159E                     l3997:	
  5469                           
  5470                           ;lcd4bits.c: 168:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  5471  159E  082A               	movf	lcd_set_custom_char@cg_address,w
  5472  159F  00AD               	movwf	??_lcd_set_custom_char
  5473  15A0  3002               	movlw	2
  5474  15A1                     u2915:	
  5475  15A1  1003               	clrc
  5476  15A2  0DAD               	rlf	??_lcd_set_custom_char,f
  5477  15A3  3EFF               	addlw	-1
  5478  15A4  1D03               	skipz
  5479  15A5  2DA1               	goto	u2915
  5480  15A6  1003               	clrc
  5481  15A7  0D2D               	rlf	??_lcd_set_custom_char,w
  5482  15A8  042F               	iorwf	lcd_set_custom_char@row,w
  5483  15A9  3840               	iorlw	64
  5484  15AA  00AE               	movwf	??_lcd_set_custom_char+1
  5485  15AB  082E               	movf	??_lcd_set_custom_char+1,w
  5486  15AC  00A2               	movwf	lcd_write@CmdChar
  5487  15AD  082B               	movf	lcd_set_custom_char@port,w
  5488  15AE  00A3               	movwf	lcd_write@port
  5489  15AF  082C               	movf	lcd_set_custom_char@port+1,w
  5490  15B0  00A4               	movwf	lcd_write@port+1
  5491  15B1  3000               	movlw	0
  5492  15B2  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  5493  15B7                     l3999:	
  5494                           
  5495                           ;lcd4bits.c: 169:         lcd_write(0x10, *data, port);
  5496  15B7  1283               	bcf	3,5	;RP0=0, select bank0
  5497  15B8  1303               	bcf	3,6	;RP1=0, select bank0
  5498  15B9  0829               	movf	lcd_set_custom_char@data+1,w
  5499  15BA  00FF               	movwf	btemp+1
  5500  15BB  0828               	movf	lcd_set_custom_char@data,w
  5501  15BC  0084               	movwf	4
  5502  15BD  120A  118A  2300  160A  118A  	fcall	stringtab
  5503  15C2  00AD               	movwf	??_lcd_set_custom_char
  5504  15C3  082D               	movf	??_lcd_set_custom_char,w
  5505  15C4  00A2               	movwf	lcd_write@CmdChar
  5506  15C5  082B               	movf	lcd_set_custom_char@port,w
  5507  15C6  00A3               	movwf	lcd_write@port
  5508  15C7  082C               	movf	lcd_set_custom_char@port+1,w
  5509  15C8  00A4               	movwf	lcd_write@port+1
  5510  15C9  3010               	movlw	16
  5511  15CA  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  5512  15CF                     l4001:	
  5513                           
  5514                           ;lcd4bits.c: 170:         *data++;
  5515  15CF  3001               	movlw	1
  5516  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  5517  15D1  1303               	bcf	3,6	;RP1=0, select bank0
  5518  15D2  07A8               	addwf	lcd_set_custom_char@data,f
  5519  15D3  1803               	skipnc
  5520  15D4  0AA9               	incf	lcd_set_custom_char@data+1,f
  5521  15D5  3000               	movlw	0
  5522  15D6  07A9               	addwf	lcd_set_custom_char@data+1,f
  5523  15D7                     l4003:	
  5524                           
  5525                           ;lcd4bits.c: 171:     }
  5526  15D7  3001               	movlw	1
  5527  15D8  00AD               	movwf	??_lcd_set_custom_char
  5528  15D9  082D               	movf	??_lcd_set_custom_char,w
  5529  15DA  07AF               	addwf	lcd_set_custom_char@row,f
  5530  15DB                     l4005:	
  5531  15DB  3008               	movlw	8
  5532  15DC  022F               	subwf	lcd_set_custom_char@row,w
  5533  15DD  1C03               	skipc
  5534  15DE  2DE0               	goto	u2921
  5535  15DF  2DE1               	goto	u2920
  5536  15E0                     u2921:	
  5537  15E0  2D9E               	goto	l3997
  5538  15E1                     u2920:	
  5539  15E1                     l4007:	
  5540                           
  5541                           ;lcd4bits.c: 172:     lcd_write(0x00, 0x80, port);
  5542  15E1  3080               	movlw	128
  5543  15E2  00AD               	movwf	??_lcd_set_custom_char
  5544  15E3  082D               	movf	??_lcd_set_custom_char,w
  5545  15E4  00A2               	movwf	lcd_write@CmdChar
  5546  15E5  082B               	movf	lcd_set_custom_char@port,w
  5547  15E6  00A3               	movwf	lcd_write@port
  5548  15E7  082C               	movf	lcd_set_custom_char@port+1,w
  5549  15E8  00A4               	movwf	lcd_write@port+1
  5550  15E9  3000               	movlw	0
  5551  15EA  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  5552  15EF                     l49:	
  5553  15EF  0008               	return
  5554  15F0                     __end_of_lcd_set_custom_char:	
  5555                           
  5556                           	psect	text19
  5557  0630                     __ptext19:	
  5558 ;; *************** function _concentration_game_loop *****************
  5559 ;; Defined at:
  5560 ;;		line 584 in file "games.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5574 ;;      Params:         0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0
  5576 ;;      Temps:          0       2       0       0       0
  5577 ;;      Totals:         0       2       0       0       0
  5578 ;;Total ram usage:        2 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    6
  5581 ;; This function calls:
  5582 ;;		_DelayMs
  5583 ;;		_check_for_match
  5584 ;;		_display_concentration_gameboard
  5585 ;;		_get_cursor_index
  5586 ;;		_toggle_cursor
  5587 ;;		_update_cursor
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           
  5594                           ;psect for function _concentration_game_loop
  5595  0630                     _concentration_game_loop:	
  5596  0630                     l4655:	
  5597                           ;incstack = 0
  5598                           ; Regs used in _concentration_game_loop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  5599                           
  5600                           
  5601                           ;games.c: 586:     if(GO == 0) {
  5602  0630  1283               	bcf	3,5	;RP0=0, select bank0
  5603  0631  1303               	bcf	3,6	;RP1=0, select bank0
  5604  0632  189F               	btfsc	31,1	;volatile
  5605  0633  2E35               	goto	u3481
  5606  0634  2E36               	goto	u3480
  5607  0635                     u3481:	
  5608  0635  2E37               	goto	l464
  5609  0636                     u3480:	
  5610  0636                     l4657:	
  5611                           
  5612                           ;games.c: 587:         GO = 1;
  5613  0636  149F               	bsf	31,1	;volatile
  5614  0637                     l464:	
  5615                           ;games.c: 588:     }
  5616                           
  5617                           
  5618                           ;games.c: 589:     if((((RB5 == 0)&&(current_player == 0))||
  5619  0637  1A86               	btfsc	6,5	;volatile
  5620  0638  2E3A               	goto	u3491
  5621  0639  2E3B               	goto	u3490
  5622  063A                     u3491:	
  5623  063A  2E40               	goto	l469
  5624  063B                     u3490:	
  5625  063B                     l4659:	
  5626  063B  0863               	movf	_current_player,w
  5627  063C  1903               	btfsc	3,2
  5628  063D  2E3F               	goto	u3501
  5629  063E  2E40               	goto	u3500
  5630  063F                     u3501:	
  5631  063F  2E49               	goto	l4663
  5632  0640                     u3500:	
  5633  0640                     l469:	
  5634  0640  1906               	btfsc	6,2	;volatile
  5635  0641  2E43               	goto	u3511
  5636  0642  2E44               	goto	u3510
  5637  0643                     u3511:	
  5638  0643  2E9F               	goto	l465
  5639  0644                     u3510:	
  5640  0644                     l4661:	
  5641  0644  0363               	decf	_current_player,w
  5642  0645  1D03               	btfss	3,2
  5643  0646  2E48               	goto	u3521
  5644  0647  2E49               	goto	u3520
  5645  0648                     u3521:	
  5646  0648  2E9F               	goto	l465
  5647  0649                     u3520:	
  5648  0649                     l4663:	
  5649  0649  0364               	decf	_joystick_pressed,w
  5650  064A  1D03               	btfss	3,2
  5651  064B  2E4D               	goto	u3531
  5652  064C  2E4E               	goto	u3530
  5653  064D                     u3531:	
  5654  064D  2E9F               	goto	l465
  5655  064E                     u3530:	
  5656  064E                     l4665:	
  5657                           
  5658                           ;games.c: 591:             &&(joystick_pressed == 1)) {;games.c: 592:         DelayMs(6)
      +                          ;
  5659  064E  3006               	movlw	6
  5660  064F  00A0               	movwf	DelayMs@millis
  5661  0650  3000               	movlw	0
  5662  0651  00A1               	movwf	DelayMs@millis+1
  5663  0652  160A  118A  229F  120A  118A  	fcall	_DelayMs
  5664  0657                     l4667:	
  5665                           
  5666                           ;games.c: 593:         joystick_pressed = 0;
  5667  0657  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0658  1303               	bcf	3,6	;RP1=0, select bank0
  5669  0659  01E4               	clrf	_joystick_pressed
  5670  065A                     l4669:	
  5671                           
  5672                           ;games.c: 594:         if(visible[get_cursor_index(cursor_pos)] == 0xFF) {
  5673  065A  086C               	movf	_cursor_pos,w
  5674  065B  160A  118A  2273  120A  118A  	fcall	_get_cursor_index
  5675  0660  3EA0               	addlw	(low (_visible| 0))& (0+255)
  5676  0661  0084               	movwf	4
  5677  0662  1383               	bcf	3,7	;select IRP bank1
  5678  0663  0A00               	incf	0,w
  5679  0664  1D03               	btfss	3,2
  5680  0665  2E67               	goto	u3541
  5681  0666  2E68               	goto	u3540
  5682  0667                     u3541:	
  5683  0667  2EB3               	goto	l471
  5684  0668                     u3540:	
  5685  0668                     l4671:	
  5686                           
  5687                           ;games.c: 595:             visible[get_cursor_index(cursor_pos)] = board[get_cursor_inde
      +                          x(cursor_pos)];
  5688  0668  1283               	bcf	3,5	;RP0=0, select bank0
  5689  0669  1303               	bcf	3,6	;RP1=0, select bank0
  5690  066A  086C               	movf	_cursor_pos,w
  5691  066B  160A  118A  2273  120A  118A  	fcall	_get_cursor_index
  5692  0670  3EC0               	addlw	(low (_board| 0))& (0+255)
  5693  0671  0084               	movwf	4
  5694  0672  1383               	bcf	3,7	;select IRP bank1
  5695  0673  0800               	movf	0,w
  5696  0674  1283               	bcf	3,5	;RP0=0, select bank0
  5697  0675  1303               	bcf	3,6	;RP1=0, select bank0
  5698  0676  00B9               	movwf	??_concentration_game_loop
  5699  0677  086C               	movf	_cursor_pos,w
  5700  0678  160A  118A  2273  120A  118A  	fcall	_get_cursor_index
  5701  067D  3EA0               	addlw	(low (_visible| 0))& (0+255)
  5702  067E  0084               	movwf	4
  5703  067F  1283               	bcf	3,5	;RP0=0, select bank0
  5704  0680  1303               	bcf	3,6	;RP1=0, select bank0
  5705  0681  0839               	movf	??_concentration_game_loop,w
  5706  0682  1383               	bcf	3,7	;select IRP bank1
  5707  0683  0080               	movwf	0
  5708                           
  5709                           ;games.c: 596:             current_char = board[get_cursor_index(cursor_pos)];
  5710  0684  086C               	movf	_cursor_pos,w
  5711  0685  160A  118A  2273  120A  118A  	fcall	_get_cursor_index
  5712  068A  3EC0               	addlw	(low (_board| 0))& (0+255)
  5713  068B  0084               	movwf	4
  5714  068C  1383               	bcf	3,7	;select IRP bank1
  5715  068D  0800               	movf	0,w
  5716  068E  1283               	bcf	3,5	;RP0=0, select bank0
  5717  068F  1303               	bcf	3,6	;RP1=0, select bank0
  5718  0690  00B9               	movwf	??_concentration_game_loop
  5719  0691  0839               	movf	??_concentration_game_loop,w
  5720  0692  00EB               	movwf	_current_char
  5721  0693                     l4673:	
  5722                           
  5723                           ;games.c: 597:             check_for_match(current_player);
  5724  0693  0863               	movf	_current_player,w
  5725  0694  120A  158A  2368  120A  118A  	fcall	_check_for_match
  5726  0699                     l4675:	
  5727                           
  5728                           ;games.c: 598:             display_concentration_gameboard();
  5729  0699  160A  118A  241A  120A  118A  	fcall	_display_concentration_gameboard
  5730  069E  2EB3               	goto	l471
  5731  069F                     l465:	
  5732  069F  1E86               	btfss	6,5	;volatile
  5733  06A0  2EA2               	goto	u3551
  5734  06A1  2EA3               	goto	u3550
  5735  06A2                     u3551:	
  5736  06A2  2EA8               	goto	l476
  5737  06A3                     u3550:	
  5738  06A3                     l4677:	
  5739  06A3  0863               	movf	_current_player,w
  5740  06A4  1903               	btfsc	3,2
  5741  06A5  2EA7               	goto	u3561
  5742  06A6  2EA8               	goto	u3560
  5743  06A7                     u3561:	
  5744  06A7  2EB1               	goto	l474
  5745  06A8                     u3560:	
  5746  06A8                     l476:	
  5747  06A8  1D06               	btfss	6,2	;volatile
  5748  06A9  2EAB               	goto	u3571
  5749  06AA  2EAC               	goto	u3570
  5750  06AB                     u3571:	
  5751  06AB  2EB3               	goto	l471
  5752  06AC                     u3570:	
  5753  06AC                     l4679:	
  5754  06AC  0363               	decf	_current_player,w
  5755  06AD  1D03               	btfss	3,2
  5756  06AE  2EB0               	goto	u3581
  5757  06AF  2EB1               	goto	u3580
  5758  06B0                     u3581:	
  5759  06B0  2EB3               	goto	l471
  5760  06B1                     u3580:	
  5761  06B1                     l474:	
  5762                           
  5763                           ;games.c: 601:             ((RB2 == 1)&&(current_player == 1)))) {;games.c: 602:        
      +                           joystick_pressed = 1;
  5764  06B1  01E4               	clrf	_joystick_pressed
  5765  06B2  0AE4               	incf	_joystick_pressed,f
  5766  06B3                     l471:	
  5767                           
  5768                           ;games.c: 605:     if(CCP1IF == 1) {
  5769  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  5770  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  5771  06B5  1D0C               	btfss	12,2	;volatile
  5772  06B6  2EB8               	goto	u3591
  5773  06B7  2EB9               	goto	u3590
  5774  06B8                     u3591:	
  5775  06B8  2ED9               	goto	l4691
  5776  06B9                     u3590:	
  5777  06B9                     l4681:	
  5778                           
  5779                           ;games.c: 606:         if(delay_loops == 0) {
  5780  06B9  0869               	movf	_delay_loops,w
  5781  06BA  1D03               	btfss	3,2
  5782  06BB  2EBD               	goto	u3601
  5783  06BC  2EBE               	goto	u3600
  5784  06BD                     u3601:	
  5785  06BD  2EC8               	goto	l4687
  5786  06BE                     u3600:	
  5787  06BE                     l4683:	
  5788                           
  5789                           ;games.c: 607:             delay_loops = 25;
  5790  06BE  3019               	movlw	25
  5791  06BF  00B9               	movwf	??_concentration_game_loop
  5792  06C0  0839               	movf	??_concentration_game_loop,w
  5793  06C1  00E9               	movwf	_delay_loops
  5794  06C2                     l4685:	
  5795                           
  5796                           ;games.c: 608:             toggle_cursor();
  5797  06C2  160A  118A  2381  120A  118A  	fcall	_toggle_cursor
  5798                           
  5799                           ;games.c: 609:         } else {
  5800  06C7  2ECA               	goto	l479
  5801  06C8                     l4687:	
  5802                           
  5803                           ;games.c: 610:             delay_loops--;
  5804  06C8  3001               	movlw	1
  5805  06C9  02E9               	subwf	_delay_loops,f
  5806  06CA                     l479:	
  5807                           ;games.c: 611:         }
  5808                           
  5809                           
  5810                           ;games.c: 612:         CCPR1 = TMR1+50000;
  5811  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  5812  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  5813  06CC  080E               	movf	14,w	;volatile
  5814  06CD  3E50               	addlw	80
  5815  06CE  00B9               	movwf	??_concentration_game_loop
  5816  06CF  080F               	movf	15,w	;volatile
  5817  06D0  1803               	skipnc
  5818  06D1  3E01               	addlw	1
  5819  06D2  3EC3               	addlw	195
  5820  06D3  00BA               	movwf	??_concentration_game_loop+1
  5821  06D4  0839               	movf	??_concentration_game_loop,w
  5822  06D5  0095               	movwf	21	;volatile
  5823  06D6  083A               	movf	??_concentration_game_loop+1,w
  5824  06D7  0096               	movwf	22	;volatile
  5825  06D8                     l4689:	
  5826                           
  5827                           ;games.c: 613:         CCP1IF = 0;
  5828  06D8  110C               	bcf	12,2	;volatile
  5829  06D9                     l4691:	
  5830                           
  5831                           ;games.c: 616:     if(joystick_x_pos > 900) {
  5832  06D9  0861               	movf	_joystick_x_pos+1,w
  5833  06DA  3A80               	xorlw	128
  5834  06DB  00FF               	movwf	btemp+1
  5835  06DC  3083               	movlw	131
  5836  06DD  027F               	subwf	btemp+1,w
  5837  06DE  1D03               	skipz
  5838  06DF  2EE2               	goto	u3615
  5839  06E0  3085               	movlw	133
  5840  06E1  0260               	subwf	_joystick_x_pos,w
  5841  06E2                     u3615:	
  5842  06E2  1C03               	skipc
  5843  06E3  2EE5               	goto	u3611
  5844  06E4  2EE6               	goto	u3610
  5845  06E5                     u3611:	
  5846  06E5  2EF8               	goto	l4697
  5847  06E6                     u3610:	
  5848  06E6                     l4693:	
  5849                           
  5850                           ;games.c: 617:         if(event_enabled) {
  5851  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  5852  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  5853  06E8  0868               	movf	_event_enabled,w
  5854  06E9  1903               	btfsc	3,2
  5855  06EA  2EEC               	goto	u3621
  5856  06EB  2EED               	goto	u3620
  5857  06EC                     u3621:	
  5858  06EC  2F8A               	goto	l498
  5859  06ED                     u3620:	
  5860  06ED                     l4695:	
  5861                           
  5862                           ;games.c: 618:             update_cursor(30, 2);
  5863  06ED  3002               	movlw	2
  5864  06EE  00B9               	movwf	??_concentration_game_loop
  5865  06EF  0839               	movf	??_concentration_game_loop,w
  5866  06F0  00B4               	movwf	update_cursor@direction
  5867  06F1  301E               	movlw	30
  5868  06F2  120A  158A  21F7  120A  118A  	fcall	_update_cursor
  5869  06F7  2F8A               	goto	l498
  5870  06F8                     l4697:	
  5871  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  5872  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  5873  06FA  0861               	movf	_joystick_x_pos+1,w
  5874  06FB  3A80               	xorlw	128
  5875  06FC  00FF               	movwf	btemp+1
  5876  06FD  3080               	movlw	128
  5877  06FE  027F               	subwf	btemp+1,w
  5878  06FF  1D03               	skipz
  5879  0700  2F03               	goto	u3635
  5880  0701  3064               	movlw	100
  5881  0702  0260               	subwf	_joystick_x_pos,w
  5882  0703                     u3635:	
  5883  0703  1803               	skipnc
  5884  0704  2F06               	goto	u3631
  5885  0705  2F07               	goto	u3630
  5886  0706                     u3631:	
  5887  0706  2F19               	goto	l4703
  5888  0707                     u3630:	
  5889  0707                     l4699:	
  5890                           
  5891                           ;games.c: 621:         if(event_enabled) {
  5892  0707  1283               	bcf	3,5	;RP0=0, select bank0
  5893  0708  1303               	bcf	3,6	;RP1=0, select bank0
  5894  0709  0868               	movf	_event_enabled,w
  5895  070A  1903               	btfsc	3,2
  5896  070B  2F0D               	goto	u3641
  5897  070C  2F0E               	goto	u3640
  5898  070D                     u3641:	
  5899  070D  2F8A               	goto	l498
  5900  070E                     u3640:	
  5901  070E                     l4701:	
  5902                           
  5903                           ;games.c: 622:             update_cursor(30, 3);
  5904  070E  3003               	movlw	3
  5905  070F  00B9               	movwf	??_concentration_game_loop
  5906  0710  0839               	movf	??_concentration_game_loop,w
  5907  0711  00B4               	movwf	update_cursor@direction
  5908  0712  301E               	movlw	30
  5909  0713  120A  158A  21F7  120A  118A  	fcall	_update_cursor
  5910  0718  2F8A               	goto	l498
  5911  0719                     l4703:	
  5912  0719  1283               	bcf	3,5	;RP0=0, select bank0
  5913  071A  1303               	bcf	3,6	;RP1=0, select bank0
  5914  071B  0861               	movf	_joystick_x_pos+1,w
  5915  071C  3A80               	xorlw	128
  5916  071D  00FF               	movwf	btemp+1
  5917  071E  3083               	movlw	131
  5918  071F  027F               	subwf	btemp+1,w
  5919  0720  1D03               	skipz
  5920  0721  2F24               	goto	u3655
  5921  0722  3021               	movlw	33
  5922  0723  0260               	subwf	_joystick_x_pos,w
  5923  0724                     u3655:	
  5924  0724  1C03               	skipc
  5925  0725  2F27               	goto	u3651
  5926  0726  2F28               	goto	u3650
  5927  0727                     u3651:	
  5928  0727  2F3A               	goto	l4709
  5929  0728                     u3650:	
  5930  0728                     l4705:	
  5931                           
  5932                           ;games.c: 625:         if(event_enabled) {
  5933  0728  1283               	bcf	3,5	;RP0=0, select bank0
  5934  0729  1303               	bcf	3,6	;RP1=0, select bank0
  5935  072A  0868               	movf	_event_enabled,w
  5936  072B  1903               	btfsc	3,2
  5937  072C  2F2E               	goto	u3661
  5938  072D  2F2F               	goto	u3660
  5939  072E                     u3661:	
  5940  072E  2F8A               	goto	l498
  5941  072F                     u3660:	
  5942  072F                     l4707:	
  5943                           
  5944                           ;games.c: 626:             update_cursor(60, 2);
  5945  072F  3002               	movlw	2
  5946  0730  00B9               	movwf	??_concentration_game_loop
  5947  0731  0839               	movf	??_concentration_game_loop,w
  5948  0732  00B4               	movwf	update_cursor@direction
  5949  0733  303C               	movlw	60
  5950  0734  120A  158A  21F7  120A  118A  	fcall	_update_cursor
  5951  0739  2F8A               	goto	l498
  5952  073A                     l4709:	
  5953  073A  1283               	bcf	3,5	;RP0=0, select bank0
  5954  073B  1303               	bcf	3,6	;RP1=0, select bank0
  5955  073C  0861               	movf	_joystick_x_pos+1,w
  5956  073D  3A80               	xorlw	128
  5957  073E  00FF               	movwf	btemp+1
  5958  073F  3080               	movlw	128
  5959  0740  027F               	subwf	btemp+1,w
  5960  0741  1D03               	skipz
  5961  0742  2F45               	goto	u3675
  5962  0743  30C8               	movlw	200
  5963  0744  0260               	subwf	_joystick_x_pos,w
  5964  0745                     u3675:	
  5965  0745  1803               	skipnc
  5966  0746  2F48               	goto	u3671
  5967  0747  2F49               	goto	u3670
  5968  0748                     u3671:	
  5969  0748  2F5B               	goto	l4715
  5970  0749                     u3670:	
  5971  0749                     l4711:	
  5972                           
  5973                           ;games.c: 629:         if(event_enabled) {
  5974  0749  1283               	bcf	3,5	;RP0=0, select bank0
  5975  074A  1303               	bcf	3,6	;RP1=0, select bank0
  5976  074B  0868               	movf	_event_enabled,w
  5977  074C  1903               	btfsc	3,2
  5978  074D  2F4F               	goto	u3681
  5979  074E  2F50               	goto	u3680
  5980  074F                     u3681:	
  5981  074F  2F8A               	goto	l498
  5982  0750                     u3680:	
  5983  0750                     l4713:	
  5984                           
  5985                           ;games.c: 630:             update_cursor(60, 3);
  5986  0750  3003               	movlw	3
  5987  0751  00B9               	movwf	??_concentration_game_loop
  5988  0752  0839               	movf	??_concentration_game_loop,w
  5989  0753  00B4               	movwf	update_cursor@direction
  5990  0754  303C               	movlw	60
  5991  0755  120A  158A  21F7  120A  118A  	fcall	_update_cursor
  5992  075A  2F8A               	goto	l498
  5993  075B                     l4715:	
  5994  075B  30FD               	movlw	253
  5995  075C  1283               	bcf	3,5	;RP0=0, select bank0
  5996  075D  1303               	bcf	3,6	;RP1=0, select bank0
  5997  075E  065E               	xorwf	_joystick_y_pos,w
  5998  075F  3003               	movlw	3
  5999  0760  1903               	skipnz
  6000  0761  065F               	xorwf	_joystick_y_pos+1,w
  6001  0762  1D03               	btfss	3,2
  6002  0763  2F65               	goto	u3691
  6003  0764  2F66               	goto	u3690
  6004  0765                     u3691:	
  6005  0765  2F74               	goto	l4721
  6006  0766                     u3690:	
  6007  0766                     l4717:	
  6008                           
  6009                           ;games.c: 633:         if(event_enabled) {
  6010  0766  0868               	movf	_event_enabled,w
  6011  0767  1903               	btfsc	3,2
  6012  0768  2F6A               	goto	u3701
  6013  0769  2F6B               	goto	u3700
  6014  076A                     u3701:	
  6015  076A  2F8A               	goto	l498
  6016  076B                     u3700:	
  6017  076B                     l4719:	
  6018                           
  6019                           ;games.c: 634:             update_cursor(100, 1);
  6020  076B  01B4               	clrf	update_cursor@direction
  6021  076C  0AB4               	incf	update_cursor@direction,f
  6022  076D  3064               	movlw	100
  6023  076E  120A  158A  21F7  120A  118A  	fcall	_update_cursor
  6024  0773  2F8A               	goto	l498
  6025  0774                     l4721:	
  6026  0774  085E               	movf	_joystick_y_pos,w
  6027  0775  045F               	iorwf	_joystick_y_pos+1,w
  6028  0776  1D03               	btfss	3,2
  6029  0777  2F79               	goto	u3711
  6030  0778  2F7A               	goto	u3710
  6031  0779                     u3711:	
  6032  0779  2F88               	goto	l495
  6033  077A                     u3710:	
  6034  077A                     l4723:	
  6035                           
  6036                           ;games.c: 637:         if(event_enabled) {
  6037  077A  0868               	movf	_event_enabled,w
  6038  077B  1903               	btfsc	3,2
  6039  077C  2F7E               	goto	u3721
  6040  077D  2F7F               	goto	u3720
  6041  077E                     u3721:	
  6042  077E  2F8A               	goto	l498
  6043  077F                     u3720:	
  6044  077F                     l4725:	
  6045                           
  6046                           ;games.c: 638:             update_cursor(100, 1);
  6047  077F  01B4               	clrf	update_cursor@direction
  6048  0780  0AB4               	incf	update_cursor@direction,f
  6049  0781  3064               	movlw	100
  6050  0782  120A  158A  21F7  120A  118A  	fcall	_update_cursor
  6051  0787  2F8A               	goto	l498
  6052  0788                     l495:	
  6053                           
  6054                           ;games.c: 641:         event_enabled = 1;
  6055  0788  01E8               	clrf	_event_enabled
  6056  0789  0AE8               	incf	_event_enabled,f
  6057  078A                     l498:	
  6058  078A  0008               	return
  6059  078B                     __end_of_concentration_game_loop:	
  6060                           
  6061                           	psect	text20
  6062  09F7                     __ptext20:	
  6063 ;; *************** function _update_cursor *****************
  6064 ;; Defined at:
  6065 ;;		line 645 in file "games.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  move_delay_c    1    wreg     unsigned char 
  6068 ;;  direction       1   20[BANK0 ] unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  move_delay_c    1   23[BANK0 ] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6080 ;;      Params:         0       1       0       0       0
  6081 ;;      Locals:         0       1       0       0       0
  6082 ;;      Temps:          0       2       0       0       0
  6083 ;;      Totals:         0       4       0       0       0
  6084 ;;Total ram usage:        4 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    4
  6087 ;; This function calls:
  6088 ;;		_get_cursor_index
  6089 ;;		_lcd_goto
  6090 ;;		_lcd_putch
  6091 ;; This function is called by:
  6092 ;;		_concentration_game_loop
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function _update_cursor
  6098  09F7                     _update_cursor:	
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6102                           ;update_cursor@move_delay_count stored from wreg
  6103  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  6104  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  6105  09F9  00B7               	movwf	update_cursor@move_delay_count
  6106  09FA                     l4485:	
  6107                           
  6108                           ;games.c: 646:     event_enabled = 0;
  6109  09FA  01E8               	clrf	_event_enabled
  6110  09FB                     l4487:	
  6111                           
  6112                           ;games.c: 647:     event_delay_count = move_delay_count;
  6113  09FB  0837               	movf	update_cursor@move_delay_count,w
  6114  09FC  00B5               	movwf	??_update_cursor
  6115  09FD  0835               	movf	??_update_cursor,w
  6116  09FE  00FA               	movwf	_event_delay_count
  6117                           
  6118                           ;games.c: 648:     switch(direction) {
  6119  09FF  2A3E               	goto	l4509
  6120  0A00                     l4489:	
  6121                           
  6122                           ;games.c: 650:             cursor_pos ^= 0x40;
  6123  0A00  3040               	movlw	64
  6124  0A01  00B5               	movwf	??_update_cursor
  6125  0A02  0835               	movf	??_update_cursor,w
  6126  0A03  06EC               	xorwf	_cursor_pos,f
  6127                           
  6128                           ;games.c: 651:             break;
  6129  0A04  2A51               	goto	l4511
  6130  0A05                     l4491:	
  6131                           
  6132                           ;games.c: 655:                     cursor_pos = 0x0F;
  6133  0A05  300F               	movlw	15
  6134  0A06  00B5               	movwf	??_update_cursor
  6135  0A07  0835               	movf	??_update_cursor,w
  6136  0A08  00EC               	movwf	_cursor_pos
  6137                           
  6138                           ;games.c: 656:                     break;
  6139  0A09  2A51               	goto	l4511
  6140  0A0A                     l4493:	
  6141                           
  6142                           ;games.c: 658:                     cursor_pos = 0x4F;
  6143  0A0A  304F               	movlw	79
  6144  0A0B  00B5               	movwf	??_update_cursor
  6145  0A0C  0835               	movf	??_update_cursor,w
  6146  0A0D  00EC               	movwf	_cursor_pos
  6147                           
  6148                           ;games.c: 659:                     break;
  6149  0A0E  2A51               	goto	l4511
  6150  0A0F                     l4495:	
  6151                           
  6152                           ;games.c: 661:                     cursor_pos--;
  6153  0A0F  3001               	movlw	1
  6154  0A10  02EC               	subwf	_cursor_pos,f
  6155                           
  6156                           ;games.c: 662:             }
  6157  0A11  2A51               	goto	l4511
  6158  0A12                     l4497:	
  6159  0A12  086C               	movf	_cursor_pos,w
  6160  0A13  00B5               	movwf	??_update_cursor
  6161  0A14  01B6               	clrf	??_update_cursor+1
  6162                           
  6163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6164                           ; Switch size 1, requested type "simple"
  6165                           ; Number of cases is 1, Range of values is 0 to 0
  6166                           ; switch strategies available:
  6167                           ; Name         Instructions Cycles
  6168                           ; simple_byte            4     3 (average)
  6169                           ; direct_byte           11     8 (fixed)
  6170                           ; jumptable            260     6 (fixed)
  6171                           ;	Chosen strategy is simple_byte
  6172  0A15  0836               	movf	??_update_cursor+1,w
  6173  0A16  3A00               	xorlw	0	; case 0
  6174  0A17  1903               	skipnz
  6175  0A18  2A1A               	goto	l5133
  6176  0A19  2A0F               	goto	l4495
  6177  0A1A                     l5133:	
  6178                           
  6179                           ; Switch size 1, requested type "simple"
  6180                           ; Number of cases is 2, Range of values is 0 to 64
  6181                           ; switch strategies available:
  6182                           ; Name         Instructions Cycles
  6183                           ; simple_byte            7     4 (average)
  6184                           ; direct_byte          203     8 (fixed)
  6185                           ; jumptable            260     6 (fixed)
  6186                           ;	Chosen strategy is simple_byte
  6187  0A1A  0835               	movf	??_update_cursor,w
  6188  0A1B  3A00               	xorlw	0	; case 0
  6189  0A1C  1903               	skipnz
  6190  0A1D  2A05               	goto	l4491
  6191  0A1E  3A40               	xorlw	64	; case 64
  6192  0A1F  1903               	skipnz
  6193  0A20  2A0A               	goto	l4493
  6194  0A21  2A0F               	goto	l4495
  6195  0A22                     l4499:	
  6196                           
  6197                           ;games.c: 667:                     cursor_pos = 0x00;
  6198  0A22  01EC               	clrf	_cursor_pos
  6199                           
  6200                           ;games.c: 668:                     break;
  6201  0A23  2A51               	goto	l4511
  6202  0A24                     l4501:	
  6203                           
  6204                           ;games.c: 670:                     cursor_pos = 0x40;
  6205  0A24  3040               	movlw	64
  6206  0A25  00B5               	movwf	??_update_cursor
  6207  0A26  0835               	movf	??_update_cursor,w
  6208  0A27  00EC               	movwf	_cursor_pos
  6209                           
  6210                           ;games.c: 671:                     break;
  6211  0A28  2A51               	goto	l4511
  6212  0A29                     l4503:	
  6213                           
  6214                           ;games.c: 673:                     cursor_pos++;
  6215  0A29  3001               	movlw	1
  6216  0A2A  00B5               	movwf	??_update_cursor
  6217  0A2B  0835               	movf	??_update_cursor,w
  6218  0A2C  07EC               	addwf	_cursor_pos,f
  6219                           
  6220                           ;games.c: 674:             }
  6221  0A2D  2A51               	goto	l4511
  6222  0A2E                     l4505:	
  6223  0A2E  086C               	movf	_cursor_pos,w
  6224  0A2F  00B5               	movwf	??_update_cursor
  6225  0A30  01B6               	clrf	??_update_cursor+1
  6226                           
  6227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6228                           ; Switch size 1, requested type "simple"
  6229                           ; Number of cases is 1, Range of values is 0 to 0
  6230                           ; switch strategies available:
  6231                           ; Name         Instructions Cycles
  6232                           ; simple_byte            4     3 (average)
  6233                           ; direct_byte           11     8 (fixed)
  6234                           ; jumptable            260     6 (fixed)
  6235                           ;	Chosen strategy is simple_byte
  6236  0A31  0836               	movf	??_update_cursor+1,w
  6237  0A32  3A00               	xorlw	0	; case 0
  6238  0A33  1903               	skipnz
  6239  0A34  2A36               	goto	l5135
  6240  0A35  2A29               	goto	l4503
  6241  0A36                     l5135:	
  6242                           
  6243                           ; Switch size 1, requested type "simple"
  6244                           ; Number of cases is 2, Range of values is 15 to 79
  6245                           ; switch strategies available:
  6246                           ; Name         Instructions Cycles
  6247                           ; simple_byte            7     4 (average)
  6248                           ; direct_byte          206    11 (fixed)
  6249                           ; jumptable            263     9 (fixed)
  6250                           ;	Chosen strategy is simple_byte
  6251  0A36  0835               	movf	??_update_cursor,w
  6252  0A37  3A0F               	xorlw	15	; case 15
  6253  0A38  1903               	skipnz
  6254  0A39  2A22               	goto	l4499
  6255  0A3A  3A40               	xorlw	64	; case 79
  6256  0A3B  1903               	skipnz
  6257  0A3C  2A24               	goto	l4501
  6258  0A3D  2A29               	goto	l4503
  6259  0A3E                     l4509:	
  6260  0A3E  0834               	movf	update_cursor@direction,w
  6261  0A3F  00B5               	movwf	??_update_cursor
  6262  0A40  01B6               	clrf	??_update_cursor+1
  6263                           
  6264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6265                           ; Switch size 1, requested type "simple"
  6266                           ; Number of cases is 1, Range of values is 0 to 0
  6267                           ; switch strategies available:
  6268                           ; Name         Instructions Cycles
  6269                           ; simple_byte            4     3 (average)
  6270                           ; direct_byte           11     8 (fixed)
  6271                           ; jumptable            260     6 (fixed)
  6272                           ;	Chosen strategy is simple_byte
  6273  0A41  0836               	movf	??_update_cursor+1,w
  6274  0A42  3A00               	xorlw	0	; case 0
  6275  0A43  1903               	skipnz
  6276  0A44  2A46               	goto	l5137
  6277  0A45  2A51               	goto	l4511
  6278  0A46                     l5137:	
  6279                           
  6280                           ; Switch size 1, requested type "simple"
  6281                           ; Number of cases is 3, Range of values is 1 to 3
  6282                           ; switch strategies available:
  6283                           ; Name         Instructions Cycles
  6284                           ; simple_byte           10     6 (average)
  6285                           ; direct_byte           20    11 (fixed)
  6286                           ; jumptable            263     9 (fixed)
  6287                           ;	Chosen strategy is simple_byte
  6288  0A46  0835               	movf	??_update_cursor,w
  6289  0A47  3A01               	xorlw	1	; case 1
  6290  0A48  1903               	skipnz
  6291  0A49  2A00               	goto	l4489
  6292  0A4A  3A03               	xorlw	3	; case 2
  6293  0A4B  1903               	skipnz
  6294  0A4C  2A12               	goto	l4497
  6295  0A4D  3A01               	xorlw	1	; case 3
  6296  0A4E  1903               	skipnz
  6297  0A4F  2A2E               	goto	l4505
  6298  0A50  2A51               	goto	l4511
  6299  0A51                     l4511:	
  6300                           
  6301                           ;games.c: 677:     lcd_putch(current_char, gameboard);
  6302  0A51  3005               	movlw	5
  6303  0A52  00B0               	movwf	lcd_putch@port
  6304  0A53  3000               	movlw	0
  6305  0A54  00B1               	movwf	lcd_putch@port+1
  6306  0A55  086B               	movf	_current_char,w
  6307  0A56  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  6308                           
  6309                           ;games.c: 678:     lcd_goto(cursor_pos, gameboard);
  6310  0A5B  3005               	movlw	5
  6311  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  6312  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  6313  0A5E  00A8               	movwf	lcd_goto@port
  6314  0A5F  3000               	movlw	0
  6315  0A60  00A9               	movwf	lcd_goto@port+1
  6316  0A61  086C               	movf	_cursor_pos,w
  6317  0A62  160A  118A  22EC  120A  158A  	fcall	_lcd_goto
  6318                           
  6319                           ;games.c: 679:     current_char = visible[get_cursor_index(cursor_pos)];
  6320  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  6321  0A68  1303               	bcf	3,6	;RP1=0, select bank0
  6322  0A69  086C               	movf	_cursor_pos,w
  6323  0A6A  160A  118A  2273  120A  158A  	fcall	_get_cursor_index
  6324  0A6F  3EA0               	addlw	(low (_visible| 0))& (0+255)
  6325  0A70  0084               	movwf	4
  6326  0A71  1383               	bcf	3,7	;select IRP bank1
  6327  0A72  0800               	movf	0,w
  6328  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  6330  0A75  00B5               	movwf	??_update_cursor
  6331  0A76  0835               	movf	??_update_cursor,w
  6332  0A77  00EB               	movwf	_current_char
  6333  0A78                     l4513:	
  6334                           
  6335                           ;games.c: 680:     if(cursor_solid == 1) {
  6336  0A78  036A               	decf	_cursor_solid,w
  6337  0A79  1D03               	btfss	3,2
  6338  0A7A  2A7C               	goto	u3441
  6339  0A7B  2A7D               	goto	u3440
  6340  0A7C                     u3441:	
  6341  0A7C  2A93               	goto	l517
  6342  0A7D                     u3440:	
  6343  0A7D                     l4515:	
  6344                           
  6345                           ;games.c: 681:         lcd_putch(0x20, gameboard);
  6346  0A7D  3005               	movlw	5
  6347  0A7E  00B0               	movwf	lcd_putch@port
  6348  0A7F  3000               	movlw	0
  6349  0A80  00B1               	movwf	lcd_putch@port+1
  6350  0A81  3020               	movlw	32
  6351  0A82  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  6352                           
  6353                           ;games.c: 682:         lcd_goto(cursor_pos, gameboard);
  6354  0A87  3005               	movlw	5
  6355  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  6356  0A89  1303               	bcf	3,6	;RP1=0, select bank0
  6357  0A8A  00A8               	movwf	lcd_goto@port
  6358  0A8B  3000               	movlw	0
  6359  0A8C  00A9               	movwf	lcd_goto@port+1
  6360  0A8D  086C               	movf	_cursor_pos,w
  6361  0A8E  160A  118A  22EC  120A  158A  	fcall	_lcd_goto
  6362  0A93                     l517:	
  6363  0A93  0008               	return
  6364  0A94                     __end_of_update_cursor:	
  6365                           
  6366                           	psect	text21
  6367  1381                     __ptext21:	
  6368 ;; *************** function _toggle_cursor *****************
  6369 ;; Defined at:
  6370 ;;		line 686 in file "games.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;		None
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      void 
  6377 ;; Registers used:
  6378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6384 ;;      Params:         0       0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0
  6386 ;;      Temps:          0       0       0       0       0
  6387 ;;      Totals:         0       0       0       0       0
  6388 ;;Total ram usage:        0 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    4
  6391 ;; This function calls:
  6392 ;;		_lcd_goto
  6393 ;;		_lcd_putch
  6394 ;; This function is called by:
  6395 ;;		_concentration_game_loop
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _toggle_cursor
  6401  1381                     _toggle_cursor:	
  6402  1381                     l4473:	
  6403                           ;incstack = 0
  6404                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6405                           
  6406                           
  6407                           ;games.c: 687:     if(cursor_solid == 0) {
  6408  1381  1283               	bcf	3,5	;RP0=0, select bank0
  6409  1382  1303               	bcf	3,6	;RP1=0, select bank0
  6410  1383  086A               	movf	_cursor_solid,w
  6411  1384  1D03               	btfss	3,2
  6412  1385  2B87               	goto	u3431
  6413  1386  2B88               	goto	u3430
  6414  1387                     u3431:	
  6415  1387  2B97               	goto	l4479
  6416  1388                     u3430:	
  6417  1388                     l4475:	
  6418                           
  6419                           ;games.c: 688:         lcd_putch(0x20, gameboard);
  6420  1388  3005               	movlw	5
  6421  1389  00B0               	movwf	lcd_putch@port
  6422  138A  3000               	movlw	0
  6423  138B  00B1               	movwf	lcd_putch@port+1
  6424  138C  3020               	movlw	32
  6425  138D  160A  118A  228D  160A  118A  	fcall	_lcd_putch
  6426  1392                     l4477:	
  6427                           
  6428                           ;games.c: 689:         cursor_solid = 1;
  6429  1392  1283               	bcf	3,5	;RP0=0, select bank0
  6430  1393  1303               	bcf	3,6	;RP1=0, select bank0
  6431  1394  01EA               	clrf	_cursor_solid
  6432  1395  0AEA               	incf	_cursor_solid,f
  6433                           
  6434                           ;games.c: 690:     } else {
  6435  1396  2BA4               	goto	l4483
  6436  1397                     l4479:	
  6437                           
  6438                           ;games.c: 691:         lcd_putch(current_char, gameboard);
  6439  1397  3005               	movlw	5
  6440  1398  00B0               	movwf	lcd_putch@port
  6441  1399  3000               	movlw	0
  6442  139A  00B1               	movwf	lcd_putch@port+1
  6443  139B  086B               	movf	_current_char,w
  6444  139C  160A  118A  228D  160A  118A  	fcall	_lcd_putch
  6445  13A1                     l4481:	
  6446                           
  6447                           ;games.c: 692:         cursor_solid = 0;
  6448  13A1  1283               	bcf	3,5	;RP0=0, select bank0
  6449  13A2  1303               	bcf	3,6	;RP1=0, select bank0
  6450  13A3  01EA               	clrf	_cursor_solid
  6451  13A4                     l4483:	
  6452                           
  6453                           ;games.c: 694:     lcd_goto(cursor_pos, gameboard);
  6454  13A4  3005               	movlw	5
  6455  13A5  00A8               	movwf	lcd_goto@port
  6456  13A6  3000               	movlw	0
  6457  13A7  00A9               	movwf	lcd_goto@port+1
  6458  13A8  086C               	movf	_cursor_pos,w
  6459  13A9  160A  118A  22EC  160A  118A  	fcall	_lcd_goto
  6460  13AE                     l522:	
  6461  13AE  0008               	return
  6462  13AF                     __end_of_toggle_cursor:	
  6463                           
  6464                           	psect	text22
  6465  0B68                     __ptext22:	
  6466 ;; *************** function _check_for_match *****************
  6467 ;; Defined at:
  6468 ;;		line 541 in file "games.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  player          1    wreg     unsigned char 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  player          1   24[BANK0 ] unsigned char 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1    wreg      void 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6482 ;;      Params:         0       0       0       0       0
  6483 ;;      Locals:         0       1       0       0       0
  6484 ;;      Temps:          0       2       0       0       0
  6485 ;;      Totals:         0       3       0       0       0
  6486 ;;Total ram usage:        3 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    5
  6489 ;; This function calls:
  6490 ;;		_DelayMs
  6491 ;;		_display_concentration_gameboard
  6492 ;;		_display_concentration_scoreboard
  6493 ;;		_get_cursor_index
  6494 ;;		_play_tone
  6495 ;;		_turn_on_led
  6496 ;; This function is called by:
  6497 ;;		_concentration_game_loop
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function _check_for_match
  6503  0B68                     _check_for_match:	
  6504                           
  6505                           ;incstack = 0
  6506                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6507                           ;check_for_match@player stored from wreg
  6508  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  6509  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  6510  0B6A  00B8               	movwf	check_for_match@player
  6511  0B6B                     l4415:	
  6512                           
  6513                           ;games.c: 542:     if(selected_tile == 0xFF) {
  6514  0B6B  0A65               	incf	_selected_tile,w
  6515  0B6C  1D03               	btfss	3,2
  6516  0B6D  2B6F               	goto	u3391
  6517  0B6E  2B70               	goto	u3390
  6518  0B6F                     u3391:	
  6519  0B6F  2B75               	goto	l4419
  6520  0B70                     u3390:	
  6521  0B70                     l4417:	
  6522                           
  6523                           ;games.c: 543:         selected_tile = cursor_pos;
  6524  0B70  086C               	movf	_cursor_pos,w
  6525  0B71  00B6               	movwf	??_check_for_match
  6526  0B72  0836               	movf	??_check_for_match,w
  6527  0B73  00E5               	movwf	_selected_tile
  6528                           
  6529                           ;games.c: 544:     } else {
  6530  0B74  2C76               	goto	l461
  6531  0B75                     l4419:	
  6532                           
  6533                           ;games.c: 545:         if(board[get_cursor_index(selected_tile)] == board[get_cursor_ind
      +                          ex(cursor_pos)]) {
  6534  0B75  086C               	movf	_cursor_pos,w
  6535  0B76  160A  118A  2273  120A  158A  	fcall	_get_cursor_index
  6536  0B7B  3EC0               	addlw	(low (_board| 0))& (0+255)
  6537  0B7C  0084               	movwf	4
  6538  0B7D  1383               	bcf	3,7	;select IRP bank1
  6539  0B7E  0800               	movf	0,w
  6540  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  6541  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  6542  0B81  00B6               	movwf	??_check_for_match
  6543  0B82  0865               	movf	_selected_tile,w
  6544  0B83  160A  118A  2273  120A  158A  	fcall	_get_cursor_index
  6545  0B88  3EC0               	addlw	(low (_board| 0))& (0+255)
  6546  0B89  0084               	movwf	4
  6547  0B8A  1383               	bcf	3,7	;select IRP bank1
  6548  0B8B  0800               	movf	0,w
  6549  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  6550  0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  6551  0B8E  0636               	xorwf	??_check_for_match,w
  6552  0B8F  1D03               	skipz
  6553  0B90  2B92               	goto	u3401
  6554  0B91  2B93               	goto	u3400
  6555  0B92                     u3401:	
  6556  0B92  2C01               	goto	l4447
  6557  0B93                     u3400:	
  6558  0B93                     l4421:	
  6559                           
  6560                           ;games.c: 546:             if(player == 0) {
  6561  0B93  0838               	movf	check_for_match@player,w
  6562  0B94  1D03               	btfss	3,2
  6563  0B95  2B97               	goto	u3411
  6564  0B96  2B98               	goto	u3410
  6565  0B97                     u3411:	
  6566  0B97  2B9D               	goto	l4425
  6567  0B98                     u3410:	
  6568  0B98                     l4423:	
  6569                           
  6570                           ;games.c: 547:                 p1_score++;
  6571  0B98  3001               	movlw	1
  6572  0B99  00B6               	movwf	??_check_for_match
  6573  0B9A  0836               	movf	??_check_for_match,w
  6574  0B9B  07E7               	addwf	_p1_score,f
  6575                           
  6576                           ;games.c: 548:             } else {
  6577  0B9C  2BA1               	goto	l4427
  6578  0B9D                     l4425:	
  6579                           
  6580                           ;games.c: 549:                 p2_score++;
  6581  0B9D  3001               	movlw	1
  6582  0B9E  00B6               	movwf	??_check_for_match
  6583  0B9F  0836               	movf	??_check_for_match,w
  6584  0BA0  07E6               	addwf	_p2_score,f
  6585  0BA1                     l4427:	
  6586                           
  6587                           ;games.c: 551:             turn_on_led(1);
  6588  0BA1  3001               	movlw	1
  6589  0BA2  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  6590  0BA7                     l4429:	
  6591                           
  6592                           ;games.c: 552:             play_tone(1689, 15);
  6593  0BA7  3099               	movlw	153
  6594  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  6595  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  6596  0BAA  00A0               	movwf	play_tone@tone_period
  6597  0BAB  3006               	movlw	6
  6598  0BAC  00A1               	movwf	play_tone@tone_period+1
  6599  0BAD  300F               	movlw	15
  6600  0BAE  00B6               	movwf	??_check_for_match
  6601  0BAF  0836               	movf	??_check_for_match,w
  6602  0BB0  00A2               	movwf	play_tone@duration_8ms
  6603  0BB1  160A  118A  230A  120A  158A  	fcall	_play_tone
  6604  0BB6                     l4431:	
  6605                           
  6606                           ;games.c: 553:             RC6 = 0;
  6607  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  6608  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  6609  0BB8  1307               	bcf	7,6	;volatile
  6610  0BB9                     l4433:	
  6611                           
  6612                           ;games.c: 554:             play_tone(1420, 5);
  6613  0BB9  308C               	movlw	140
  6614  0BBA  00A0               	movwf	play_tone@tone_period
  6615  0BBB  3005               	movlw	5
  6616  0BBC  00A1               	movwf	play_tone@tone_period+1
  6617  0BBD  3005               	movlw	5
  6618  0BBE  00B6               	movwf	??_check_for_match
  6619  0BBF  0836               	movf	??_check_for_match,w
  6620  0BC0  00A2               	movwf	play_tone@duration_8ms
  6621  0BC1  160A  118A  230A  120A  158A  	fcall	_play_tone
  6622  0BC6                     l4435:	
  6623                           
  6624                           ;games.c: 555:             turn_on_led(1);
  6625  0BC6  3001               	movlw	1
  6626  0BC7  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  6627  0BCC                     l4437:	
  6628                           
  6629                           ;games.c: 556:             play_tone(1689, 15);
  6630  0BCC  3099               	movlw	153
  6631  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  6632  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  6633  0BCF  00A0               	movwf	play_tone@tone_period
  6634  0BD0  3006               	movlw	6
  6635  0BD1  00A1               	movwf	play_tone@tone_period+1
  6636  0BD2  300F               	movlw	15
  6637  0BD3  00B6               	movwf	??_check_for_match
  6638  0BD4  0836               	movf	??_check_for_match,w
  6639  0BD5  00A2               	movwf	play_tone@duration_8ms
  6640  0BD6  160A  118A  230A  120A  158A  	fcall	_play_tone
  6641  0BDB                     l4439:	
  6642                           
  6643                           ;games.c: 557:             RC6 = 0;
  6644  0BDB  1283               	bcf	3,5	;RP0=0, select bank0
  6645  0BDC  1303               	bcf	3,6	;RP1=0, select bank0
  6646  0BDD  1307               	bcf	7,6	;volatile
  6647  0BDE                     l4441:	
  6648                           
  6649                           ;games.c: 558:             play_tone(1420, 5);
  6650  0BDE  308C               	movlw	140
  6651  0BDF  00A0               	movwf	play_tone@tone_period
  6652  0BE0  3005               	movlw	5
  6653  0BE1  00A1               	movwf	play_tone@tone_period+1
  6654  0BE2  3005               	movlw	5
  6655  0BE3  00B6               	movwf	??_check_for_match
  6656  0BE4  0836               	movf	??_check_for_match,w
  6657  0BE5  00A2               	movwf	play_tone@duration_8ms
  6658  0BE6  160A  118A  230A  120A  158A  	fcall	_play_tone
  6659                           
  6660                           ;games.c: 559:             if((p1_score+p2_score)==16) {
  6661  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  6662  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  6663  0BED  0867               	movf	_p1_score,w
  6664  0BEE  0766               	addwf	_p2_score,w
  6665  0BEF  00B6               	movwf	??_check_for_match
  6666  0BF0  01B7               	clrf	??_check_for_match+1
  6667  0BF1  0DB7               	rlf	??_check_for_match+1,f
  6668  0BF2  3010               	movlw	16
  6669  0BF3  0636               	xorwf	??_check_for_match,w
  6670  0BF4  0437               	iorwf	??_check_for_match+1,w
  6671  0BF5  1D03               	btfss	3,2
  6672  0BF6  2BF8               	goto	u3421
  6673  0BF7  2BF9               	goto	u3420
  6674  0BF8                     u3421:	
  6675  0BF8  2BFB               	goto	l4445
  6676  0BF9                     u3420:	
  6677  0BF9                     l4443:	
  6678                           
  6679                           ;games.c: 560:                 game_over = 1;
  6680  0BF9  01E2               	clrf	_game_over
  6681  0BFA  0AE2               	incf	_game_over,f
  6682  0BFB                     l4445:	
  6683                           
  6684                           ;games.c: 562:             display_concentration_scoreboard();
  6685  0BFB  120A  158A  2294  120A  158A  	fcall	_display_concentration_scoreboard
  6686                           
  6687                           ;games.c: 564:         } else {
  6688  0C00  2C65               	goto	l4467
  6689  0C01                     l4447:	
  6690                           
  6691                           ;games.c: 565:             display_concentration_gameboard();
  6692  0C01  160A  118A  241A  120A  158A  	fcall	_display_concentration_gameboard
  6693                           
  6694                           ;games.c: 566:             turn_on_led(0);
  6695  0C06  3000               	movlw	0
  6696  0C07  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  6697  0C0C                     l4449:	
  6698                           
  6699                           ;games.c: 567:             play_tone(36075, 30);
  6700  0C0C  30EB               	movlw	235
  6701  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  6702  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  6703  0C0F  00A0               	movwf	play_tone@tone_period
  6704  0C10  308C               	movlw	140
  6705  0C11  00A1               	movwf	play_tone@tone_period+1
  6706  0C12  301E               	movlw	30
  6707  0C13  00B6               	movwf	??_check_for_match
  6708  0C14  0836               	movf	??_check_for_match,w
  6709  0C15  00A2               	movwf	play_tone@duration_8ms
  6710  0C16  160A  118A  230A  120A  158A  	fcall	_play_tone
  6711  0C1B                     l4451:	
  6712                           
  6713                           ;games.c: 568:             RC5 = 0;
  6714  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  6715  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  6716  0C1D  1287               	bcf	7,5	;volatile
  6717  0C1E                     l4453:	
  6718                           
  6719                           ;games.c: 569:             DelayMs(100);
  6720  0C1E  3064               	movlw	100
  6721  0C1F  00A0               	movwf	DelayMs@millis
  6722  0C20  3000               	movlw	0
  6723  0C21  00A1               	movwf	DelayMs@millis+1
  6724  0C22  160A  118A  229F  120A  158A  	fcall	_DelayMs
  6725                           
  6726                           ;games.c: 570:             turn_on_led(0);
  6727  0C27  3000               	movlw	0
  6728  0C28  160A  118A  23DF  120A  158A  	fcall	_turn_on_led
  6729  0C2D                     l4455:	
  6730                           
  6731                           ;games.c: 571:             play_tone(36075, 30);
  6732  0C2D  30EB               	movlw	235
  6733  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  6735  0C30  00A0               	movwf	play_tone@tone_period
  6736  0C31  308C               	movlw	140
  6737  0C32  00A1               	movwf	play_tone@tone_period+1
  6738  0C33  301E               	movlw	30
  6739  0C34  00B6               	movwf	??_check_for_match
  6740  0C35  0836               	movf	??_check_for_match,w
  6741  0C36  00A2               	movwf	play_tone@duration_8ms
  6742  0C37  160A  118A  230A  120A  158A  	fcall	_play_tone
  6743  0C3C                     l4457:	
  6744                           
  6745                           ;games.c: 572:             RC5 = 0;
  6746  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  6748  0C3E  1287               	bcf	7,5	;volatile
  6749  0C3F                     l4459:	
  6750                           
  6751                           ;games.c: 573:             visible[get_cursor_index(selected_tile)] = 0xFF;
  6752  0C3F  30FF               	movlw	255
  6753  0C40  00B6               	movwf	??_check_for_match
  6754  0C41  0865               	movf	_selected_tile,w
  6755  0C42  160A  118A  2273  120A  158A  	fcall	_get_cursor_index
  6756  0C47  3EA0               	addlw	(low (_visible| 0))& (0+255)
  6757  0C48  0084               	movwf	4
  6758  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  6759  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  6760  0C4B  0836               	movf	??_check_for_match,w
  6761  0C4C  1383               	bcf	3,7	;select IRP bank1
  6762  0C4D  0080               	movwf	0
  6763  0C4E                     l4461:	
  6764                           
  6765                           ;games.c: 574:             visible[get_cursor_index(cursor_pos)] = 0xFF;
  6766  0C4E  30FF               	movlw	255
  6767  0C4F  00B6               	movwf	??_check_for_match
  6768  0C50  086C               	movf	_cursor_pos,w
  6769  0C51  160A  118A  2273  120A  158A  	fcall	_get_cursor_index
  6770  0C56  3EA0               	addlw	(low (_visible| 0))& (0+255)
  6771  0C57  0084               	movwf	4
  6772  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  6773  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  6774  0C5A  0836               	movf	??_check_for_match,w
  6775  0C5B  1383               	bcf	3,7	;select IRP bank1
  6776  0C5C  0080               	movwf	0
  6777  0C5D                     l4463:	
  6778                           
  6779                           ;games.c: 575:             current_char = 0xFF;
  6780  0C5D  30FF               	movlw	255
  6781  0C5E  00B6               	movwf	??_check_for_match
  6782  0C5F  0836               	movf	??_check_for_match,w
  6783  0C60  00EB               	movwf	_current_char
  6784  0C61                     l4465:	
  6785                           
  6786                           ;games.c: 576:             current_player ^= 0x01;
  6787  0C61  3001               	movlw	1
  6788  0C62  00B6               	movwf	??_check_for_match
  6789  0C63  0836               	movf	??_check_for_match,w
  6790  0C64  06E3               	xorwf	_current_player,f
  6791  0C65                     l4467:	
  6792                           
  6793                           ;games.c: 578:         selected_tile = 0xFF;
  6794  0C65  30FF               	movlw	255
  6795  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  6796  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  6797  0C68  00B6               	movwf	??_check_for_match
  6798  0C69  0836               	movf	??_check_for_match,w
  6799  0C6A  00E5               	movwf	_selected_tile
  6800  0C6B                     l4469:	
  6801                           
  6802                           ;games.c: 579:         joystick_pressed = 1;
  6803  0C6B  01E4               	clrf	_joystick_pressed
  6804  0C6C  0AE4               	incf	_joystick_pressed,f
  6805  0C6D                     l4471:	
  6806                           
  6807                           ;games.c: 580:         DelayMs(100);
  6808  0C6D  3064               	movlw	100
  6809  0C6E  00A0               	movwf	DelayMs@millis
  6810  0C6F  3000               	movlw	0
  6811  0C70  00A1               	movwf	DelayMs@millis+1
  6812  0C71  160A  118A  229F  120A  158A  	fcall	_DelayMs
  6813  0C76                     l461:	
  6814  0C76  0008               	return
  6815  0C77                     __end_of_check_for_match:	
  6816                           
  6817                           	psect	text23
  6818  1273                     __ptext23:	
  6819 ;; *************** function _get_cursor_index *****************
  6820 ;; Defined at:
  6821 ;;		line 519 in file "games.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  cursor          1    wreg     unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  cursor          1    0[BANK0 ] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      unsigned char 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6835 ;;      Params:         0       0       0       0       0
  6836 ;;      Locals:         0       1       0       0       0
  6837 ;;      Temps:          0       0       0       0       0
  6838 ;;      Totals:         0       1       0       0       0
  6839 ;;Total ram usage:        1 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; Hardware stack levels required when called:    1
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_concentration_gameboard_init
  6846 ;;		_check_for_match
  6847 ;;		_concentration_game_loop
  6848 ;;		_update_cursor
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           
  6853                           ;psect for function _get_cursor_index
  6854  1273                     _get_cursor_index:	
  6855                           
  6856                           ;incstack = 0
  6857                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  6858                           ;get_cursor_index@cursor stored from wreg
  6859  1273  1283               	bcf	3,5	;RP0=0, select bank0
  6860  1274  1303               	bcf	3,6	;RP1=0, select bank0
  6861  1275  00A0               	movwf	get_cursor_index@cursor
  6862  1276                     l4139:	
  6863                           
  6864                           ;games.c: 520:     if(cursor&0x40) {
  6865  1276  1F20               	btfss	get_cursor_index@cursor,6
  6866  1277  2A79               	goto	u3101
  6867  1278  2A7A               	goto	u3100
  6868  1279                     u3101:	
  6869  1279  2A7D               	goto	l4145
  6870  127A                     u3100:	
  6871  127A                     l4141:	
  6872                           
  6873                           ;games.c: 521:         return (cursor-0x30);
  6874  127A  0820               	movf	get_cursor_index@cursor,w
  6875  127B  3ED0               	addlw	208
  6876  127C  2A7E               	goto	l442
  6877  127D                     l4145:	
  6878                           
  6879                           ;games.c: 523:     return cursor;
  6880  127D  0820               	movf	get_cursor_index@cursor,w
  6881  127E                     l442:	
  6882  127E  0008               	return
  6883  127F                     __end_of_get_cursor_index:	
  6884                           
  6885                           	psect	text24
  6886  0A94                     __ptext24:	
  6887 ;; *************** function _display_concentration_scoreboard *****************
  6888 ;; Defined at:
  6889 ;;		line 461 in file "games.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;		None
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6903 ;;      Params:         0       0       0       0       0
  6904 ;;      Locals:         0       0       0       0       0
  6905 ;;      Temps:          0       2       0       0       0
  6906 ;;      Totals:         0       2       0       0       0
  6907 ;;Total ram usage:        2 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:    4
  6910 ;; This function calls:
  6911 ;;		___awdiv
  6912 ;;		___awmod
  6913 ;;		_lcd_goto
  6914 ;;		_lcd_putch
  6915 ;;		_lcd_puts
  6916 ;; This function is called by:
  6917 ;;		_concentration_title_screen
  6918 ;;		_check_for_match
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           
  6923                           ;psect for function _display_concentration_scoreboard
  6924  0A94                     _display_concentration_scoreboard:	
  6925  0A94                     l4109:	
  6926                           ;incstack = 0
  6927                           ; Regs used in _display_concentration_scoreboard: [wreg-fsr0h+status,2+status,0+btemp+1+
      +                          pclath+cstack]
  6928                           
  6929                           
  6930                           ;games.c: 462:     lcd_puts("     Score:", scoreboard);
  6931  0A94  3074               	movlw	low (STR_19| (0+32768))
  6932  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  6933  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  6934  0A97  00A8               	movwf	lcd_puts@string
  6935  0A98  3084               	movlw	high (STR_19| (0+32768))
  6936  0A99  00A9               	movwf	lcd_puts@string+1
  6937  0A9A  3008               	movlw	8
  6938  0A9B  00AA               	movwf	lcd_puts@port
  6939  0A9C  3000               	movlw	0
  6940  0A9D  00AB               	movwf	lcd_puts@port+1
  6941  0A9E  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  6942  0AA3                     l4111:	
  6943                           
  6944                           ;games.c: 463:     lcd_goto(0x40, scoreboard);
  6945  0AA3  3008               	movlw	8
  6946  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6947  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6948  0AA6  00A8               	movwf	lcd_goto@port
  6949  0AA7  3000               	movlw	0
  6950  0AA8  00A9               	movwf	lcd_goto@port+1
  6951  0AA9  3040               	movlw	64
  6952  0AAA  160A  118A  22EC  120A  158A  	fcall	_lcd_goto
  6953  0AAF                     l4113:	
  6954                           
  6955                           ;games.c: 464:     lcd_puts(" P1: ", scoreboard);
  6956  0AAF  309B               	movlw	low (STR_34| (0+32768))
  6957  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  6958  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  6959  0AB2  00A8               	movwf	lcd_puts@string
  6960  0AB3  3084               	movlw	high (STR_34| (0+32768))
  6961  0AB4  00A9               	movwf	lcd_puts@string+1
  6962  0AB5  3008               	movlw	8
  6963  0AB6  00AA               	movwf	lcd_puts@port
  6964  0AB7  3000               	movlw	0
  6965  0AB8  00AB               	movwf	lcd_puts@port+1
  6966  0AB9  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  6967                           
  6968                           ;games.c: 465:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  6969  0ABE  3008               	movlw	8
  6970  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  6971  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  6972  0AC1  00B0               	movwf	lcd_putch@port
  6973  0AC2  3000               	movlw	0
  6974  0AC3  00B1               	movwf	lcd_putch@port+1
  6975  0AC4  300A               	movlw	10
  6976  0AC5  00A7               	movwf	___awdiv@divisor
  6977  0AC6  3000               	movlw	0
  6978  0AC7  00A8               	movwf	___awdiv@divisor+1
  6979  0AC8  0867               	movf	_p1_score,w
  6980  0AC9  00B4               	movwf	??_display_concentration_scoreboard
  6981  0ACA  01B5               	clrf	??_display_concentration_scoreboard+1
  6982  0ACB  0834               	movf	??_display_concentration_scoreboard,w
  6983  0ACC  00A2               	movwf	___awmod@dividend
  6984  0ACD  0835               	movf	??_display_concentration_scoreboard+1,w
  6985  0ACE  00A3               	movwf	___awmod@dividend+1
  6986  0ACF  3064               	movlw	100
  6987  0AD0  00A0               	movwf	___awmod@divisor
  6988  0AD1  3000               	movlw	0
  6989  0AD2  00A1               	movwf	___awmod@divisor+1
  6990  0AD3  160A  118A  25F0  120A  158A  	fcall	___awmod
  6991  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  6992  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  6993  0ADA  0821               	movf	?___awmod+1,w
  6994  0ADB  00AA               	movwf	___awdiv@dividend+1
  6995  0ADC  0820               	movf	?___awmod,w
  6996  0ADD  00A9               	movwf	___awdiv@dividend
  6997  0ADE  160A  118A  26AA  120A  158A  	fcall	___awdiv
  6998  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  6999  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  7000  0AE5  0827               	movf	?___awdiv,w
  7001  0AE6  3E30               	addlw	48
  7002  0AE7  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  7003                           
  7004                           ;games.c: 466:     lcd_putch((p1_score%10)+0x30, scoreboard);
  7005  0AEC  3008               	movlw	8
  7006  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  7007  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  7008  0AEF  00B0               	movwf	lcd_putch@port
  7009  0AF0  3000               	movlw	0
  7010  0AF1  00B1               	movwf	lcd_putch@port+1
  7011  0AF2  300A               	movlw	10
  7012  0AF3  00A0               	movwf	___awmod@divisor
  7013  0AF4  3000               	movlw	0
  7014  0AF5  00A1               	movwf	___awmod@divisor+1
  7015  0AF6  0867               	movf	_p1_score,w
  7016  0AF7  00B4               	movwf	??_display_concentration_scoreboard
  7017  0AF8  01B5               	clrf	??_display_concentration_scoreboard+1
  7018  0AF9  0834               	movf	??_display_concentration_scoreboard,w
  7019  0AFA  00A2               	movwf	___awmod@dividend
  7020  0AFB  0835               	movf	??_display_concentration_scoreboard+1,w
  7021  0AFC  00A3               	movwf	___awmod@dividend+1
  7022  0AFD  160A  118A  25F0  120A  158A  	fcall	___awmod
  7023  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  7024  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  7025  0B04  0820               	movf	?___awmod,w
  7026  0B05  3E30               	addlw	48
  7027  0B06  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  7028  0B0B                     l4115:	
  7029                           
  7030                           ;games.c: 467:     lcd_puts("  P2: ", scoreboard);
  7031  0B0B  3094               	movlw	low (STR_35| (0+32768))
  7032  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  7033  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  7034  0B0E  00A8               	movwf	lcd_puts@string
  7035  0B0F  3084               	movlw	high (STR_35| (0+32768))
  7036  0B10  00A9               	movwf	lcd_puts@string+1
  7037  0B11  3008               	movlw	8
  7038  0B12  00AA               	movwf	lcd_puts@port
  7039  0B13  3000               	movlw	0
  7040  0B14  00AB               	movwf	lcd_puts@port+1
  7041  0B15  160A  118A  23AF  120A  158A  	fcall	_lcd_puts
  7042  0B1A                     l4117:	
  7043                           
  7044                           ;games.c: 468:     lcd_putch(((p2_score%100)/10)+0x30, scoreboard);
  7045  0B1A  3008               	movlw	8
  7046  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7047  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  7048  0B1D  00B0               	movwf	lcd_putch@port
  7049  0B1E  3000               	movlw	0
  7050  0B1F  00B1               	movwf	lcd_putch@port+1
  7051  0B20  300A               	movlw	10
  7052  0B21  00A7               	movwf	___awdiv@divisor
  7053  0B22  3000               	movlw	0
  7054  0B23  00A8               	movwf	___awdiv@divisor+1
  7055  0B24  0866               	movf	_p2_score,w
  7056  0B25  00B4               	movwf	??_display_concentration_scoreboard
  7057  0B26  01B5               	clrf	??_display_concentration_scoreboard+1
  7058  0B27  0834               	movf	??_display_concentration_scoreboard,w
  7059  0B28  00A2               	movwf	___awmod@dividend
  7060  0B29  0835               	movf	??_display_concentration_scoreboard+1,w
  7061  0B2A  00A3               	movwf	___awmod@dividend+1
  7062  0B2B  3064               	movlw	100
  7063  0B2C  00A0               	movwf	___awmod@divisor
  7064  0B2D  3000               	movlw	0
  7065  0B2E  00A1               	movwf	___awmod@divisor+1
  7066  0B2F  160A  118A  25F0  120A  158A  	fcall	___awmod
  7067  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7068  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7069  0B36  0821               	movf	?___awmod+1,w
  7070  0B37  00AA               	movwf	___awdiv@dividend+1
  7071  0B38  0820               	movf	?___awmod,w
  7072  0B39  00A9               	movwf	___awdiv@dividend
  7073  0B3A  160A  118A  26AA  120A  158A  	fcall	___awdiv
  7074  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  7075  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  7076  0B41  0827               	movf	?___awdiv,w
  7077  0B42  3E30               	addlw	48
  7078  0B43  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  7079  0B48                     l4119:	
  7080                           
  7081                           ;games.c: 469:     lcd_putch((p2_score%10)+0x30, scoreboard);
  7082  0B48  3008               	movlw	8
  7083  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  7084  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  7085  0B4B  00B0               	movwf	lcd_putch@port
  7086  0B4C  3000               	movlw	0
  7087  0B4D  00B1               	movwf	lcd_putch@port+1
  7088  0B4E  300A               	movlw	10
  7089  0B4F  00A0               	movwf	___awmod@divisor
  7090  0B50  3000               	movlw	0
  7091  0B51  00A1               	movwf	___awmod@divisor+1
  7092  0B52  0866               	movf	_p2_score,w
  7093  0B53  00B4               	movwf	??_display_concentration_scoreboard
  7094  0B54  01B5               	clrf	??_display_concentration_scoreboard+1
  7095  0B55  0834               	movf	??_display_concentration_scoreboard,w
  7096  0B56  00A2               	movwf	___awmod@dividend
  7097  0B57  0835               	movf	??_display_concentration_scoreboard+1,w
  7098  0B58  00A3               	movwf	___awmod@dividend+1
  7099  0B59  160A  118A  25F0  120A  158A  	fcall	___awmod
  7100  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  7101  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  7102  0B60  0820               	movf	?___awmod,w
  7103  0B61  3E30               	addlw	48
  7104  0B62  160A  118A  228D  120A  158A  	fcall	_lcd_putch
  7105  0B67                     l408:	
  7106  0B67  0008               	return
  7107  0B68                     __end_of_display_concentration_scoreboard:	
  7108                           
  7109                           	psect	text25
  7110  16AA                     __ptext25:	
  7111 ;; *************** function ___awdiv *****************
  7112 ;; Defined at:
  7113 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  divisor         2    7[BANK0 ] int 
  7116 ;;  dividend        2    9[BANK0 ] int 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  quotient        2   14[BANK0 ] int 
  7119 ;;  sign            1   13[BANK0 ] unsigned char 
  7120 ;;  counter         1   12[BANK0 ] unsigned char 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  2    7[BANK0 ] int 
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7130 ;;      Params:         0       4       0       0       0
  7131 ;;      Locals:         0       4       0       0       0
  7132 ;;      Temps:          0       1       0       0       0
  7133 ;;      Totals:         0       9       0       0       0
  7134 ;;Total ram usage:        9 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_simon_says_check_input
  7141 ;;		_play_pattern
  7142 ;;		_generate_pattern
  7143 ;;		_display_simon_says_scoreboard
  7144 ;;		_display_concentration_scoreboard
  7145 ;;		_randomize_gameboard
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           
  7150                           ;psect for function ___awdiv
  7151  16AA                     ___awdiv:	
  7152  16AA                     l3909:	
  7153                           ;incstack = 0
  7154                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7155                           
  7156  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  7157  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  7158  16AC  01AD               	clrf	___awdiv@sign
  7159  16AD                     l3911:	
  7160  16AD  1FA8               	btfss	___awdiv@divisor+1,7
  7161  16AE  2EB0               	goto	u2721
  7162  16AF  2EB1               	goto	u2720
  7163  16B0                     u2721:	
  7164  16B0  2EB8               	goto	l3917
  7165  16B1                     u2720:	
  7166  16B1                     l3913:	
  7167  16B1  09A7               	comf	___awdiv@divisor,f
  7168  16B2  09A8               	comf	___awdiv@divisor+1,f
  7169  16B3  0AA7               	incf	___awdiv@divisor,f
  7170  16B4  1903               	skipnz
  7171  16B5  0AA8               	incf	___awdiv@divisor+1,f
  7172  16B6                     l3915:	
  7173  16B6  01AD               	clrf	___awdiv@sign
  7174  16B7  0AAD               	incf	___awdiv@sign,f
  7175  16B8                     l3917:	
  7176  16B8  1FAA               	btfss	___awdiv@dividend+1,7
  7177  16B9  2EBB               	goto	u2731
  7178  16BA  2EBC               	goto	u2730
  7179  16BB                     u2731:	
  7180  16BB  2EC5               	goto	l3923
  7181  16BC                     u2730:	
  7182  16BC                     l3919:	
  7183  16BC  09A9               	comf	___awdiv@dividend,f
  7184  16BD  09AA               	comf	___awdiv@dividend+1,f
  7185  16BE  0AA9               	incf	___awdiv@dividend,f
  7186  16BF  1903               	skipnz
  7187  16C0  0AAA               	incf	___awdiv@dividend+1,f
  7188  16C1                     l3921:	
  7189  16C1  3001               	movlw	1
  7190  16C2  00AB               	movwf	??___awdiv
  7191  16C3  082B               	movf	??___awdiv,w
  7192  16C4  06AD               	xorwf	___awdiv@sign,f
  7193  16C5                     l3923:	
  7194  16C5  01AE               	clrf	___awdiv@quotient
  7195  16C6  01AF               	clrf	___awdiv@quotient+1
  7196  16C7                     l3925:	
  7197  16C7  0827               	movf	___awdiv@divisor,w
  7198  16C8  0428               	iorwf	___awdiv@divisor+1,w
  7199  16C9  1903               	btfsc	3,2
  7200  16CA  2ECC               	goto	u2741
  7201  16CB  2ECD               	goto	u2740
  7202  16CC                     u2741:	
  7203  16CC  2F04               	goto	l3945
  7204  16CD                     u2740:	
  7205  16CD                     l3927:	
  7206  16CD  01AC               	clrf	___awdiv@counter
  7207  16CE  0AAC               	incf	___awdiv@counter,f
  7208  16CF  2EDB               	goto	l3933
  7209  16D0                     l3929:	
  7210  16D0  3001               	movlw	1
  7211  16D1                     u2755:	
  7212  16D1  1003               	clrc
  7213  16D2  0DA7               	rlf	___awdiv@divisor,f
  7214  16D3  0DA8               	rlf	___awdiv@divisor+1,f
  7215  16D4  3EFF               	addlw	-1
  7216  16D5  1D03               	skipz
  7217  16D6  2ED1               	goto	u2755
  7218  16D7                     l3931:	
  7219  16D7  3001               	movlw	1
  7220  16D8  00AB               	movwf	??___awdiv
  7221  16D9  082B               	movf	??___awdiv,w
  7222  16DA  07AC               	addwf	___awdiv@counter,f
  7223  16DB                     l3933:	
  7224  16DB  1FA8               	btfss	___awdiv@divisor+1,7
  7225  16DC  2EDE               	goto	u2761
  7226  16DD  2EDF               	goto	u2760
  7227  16DE                     u2761:	
  7228  16DE  2ED0               	goto	l3929
  7229  16DF                     u2760:	
  7230  16DF                     l3935:	
  7231  16DF  3001               	movlw	1
  7232  16E0                     u2775:	
  7233  16E0  1003               	clrc
  7234  16E1  0DAE               	rlf	___awdiv@quotient,f
  7235  16E2  0DAF               	rlf	___awdiv@quotient+1,f
  7236  16E3  3EFF               	addlw	-1
  7237  16E4  1D03               	skipz
  7238  16E5  2EE0               	goto	u2775
  7239  16E6  0828               	movf	___awdiv@divisor+1,w
  7240  16E7  022A               	subwf	___awdiv@dividend+1,w
  7241  16E8  1D03               	skipz
  7242  16E9  2EEC               	goto	u2785
  7243  16EA  0827               	movf	___awdiv@divisor,w
  7244  16EB  0229               	subwf	___awdiv@dividend,w
  7245  16EC                     u2785:	
  7246  16EC  1C03               	skipc
  7247  16ED  2EEF               	goto	u2781
  7248  16EE  2EF0               	goto	u2780
  7249  16EF                     u2781:	
  7250  16EF  2EF7               	goto	l3941
  7251  16F0                     u2780:	
  7252  16F0                     l3937:	
  7253  16F0  0827               	movf	___awdiv@divisor,w
  7254  16F1  02A9               	subwf	___awdiv@dividend,f
  7255  16F2  0828               	movf	___awdiv@divisor+1,w
  7256  16F3  1C03               	skipc
  7257  16F4  03AA               	decf	___awdiv@dividend+1,f
  7258  16F5  02AA               	subwf	___awdiv@dividend+1,f
  7259  16F6                     l3939:	
  7260  16F6  142E               	bsf	___awdiv@quotient,0
  7261  16F7                     l3941:	
  7262  16F7  3001               	movlw	1
  7263  16F8                     u2795:	
  7264  16F8  1003               	clrc
  7265  16F9  0CA8               	rrf	___awdiv@divisor+1,f
  7266  16FA  0CA7               	rrf	___awdiv@divisor,f
  7267  16FB  3EFF               	addlw	-1
  7268  16FC  1D03               	skipz
  7269  16FD  2EF8               	goto	u2795
  7270  16FE                     l3943:	
  7271  16FE  3001               	movlw	1
  7272  16FF  02AC               	subwf	___awdiv@counter,f
  7273  1700  1D03               	btfss	3,2
  7274  1701  2F03               	goto	u2801
  7275  1702  2F04               	goto	u2800
  7276  1703                     u2801:	
  7277  1703  2EDF               	goto	l3935
  7278  1704                     u2800:	
  7279  1704                     l3945:	
  7280  1704  082D               	movf	___awdiv@sign,w
  7281  1705  1903               	btfsc	3,2
  7282  1706  2F08               	goto	u2811
  7283  1707  2F09               	goto	u2810
  7284  1708                     u2811:	
  7285  1708  2F0E               	goto	l3949
  7286  1709                     u2810:	
  7287  1709                     l3947:	
  7288  1709  09AE               	comf	___awdiv@quotient,f
  7289  170A  09AF               	comf	___awdiv@quotient+1,f
  7290  170B  0AAE               	incf	___awdiv@quotient,f
  7291  170C  1903               	skipnz
  7292  170D  0AAF               	incf	___awdiv@quotient+1,f
  7293  170E                     l3949:	
  7294  170E  082F               	movf	___awdiv@quotient+1,w
  7295  170F  00A8               	movwf	?___awdiv+1
  7296  1710  082E               	movf	___awdiv@quotient,w
  7297  1711  00A7               	movwf	?___awdiv
  7298  1712                     l830:	
  7299  1712  0008               	return
  7300  1713                     __end_of___awdiv:	
  7301                           
  7302                           	psect	text26
  7303  141A                     __ptext26:	
  7304 ;; *************** function _display_concentration_gameboard *****************
  7305 ;; Defined at:
  7306 ;;		line 472 in file "games.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;		None
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  i               1   21[BANK0 ] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7320 ;;      Params:         0       0       0       0       0
  7321 ;;      Locals:         0       1       0       0       0
  7322 ;;      Temps:          0       1       0       0       0
  7323 ;;      Totals:         0       2       0       0       0
  7324 ;;Total ram usage:        2 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    4
  7327 ;; This function calls:
  7328 ;;		_lcd_clear
  7329 ;;		_lcd_goto
  7330 ;;		_lcd_putch
  7331 ;; This function is called by:
  7332 ;;		_concentration_title_screen
  7333 ;;		_check_for_match
  7334 ;;		_concentration_game_loop
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           
  7339                           ;psect for function _display_concentration_gameboard
  7340  141A                     _display_concentration_gameboard:	
  7341  141A                     l4121:	
  7342                           ;incstack = 0
  7343                           ; Regs used in _display_concentration_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  7344                           
  7345                           
  7346                           ;games.c: 473:     lcd_clear(gameboard);
  7347  141A  3005               	movlw	5
  7348  141B  1283               	bcf	3,5	;RP0=0, select bank0
  7349  141C  1303               	bcf	3,6	;RP1=0, select bank0
  7350  141D  00A8               	movwf	lcd_clear@port
  7351  141E  3000               	movlw	0
  7352  141F  00A9               	movwf	lcd_clear@port+1
  7353  1420  160A  118A  22B8  160A  118A  	fcall	_lcd_clear
  7354  1425                     l4123:	
  7355                           
  7356                           ;games.c: 474:     char i;;games.c: 475:     for(i=0;i<32;i++) {
  7357  1425  1283               	bcf	3,5	;RP0=0, select bank0
  7358  1426  1303               	bcf	3,6	;RP1=0, select bank0
  7359  1427  01B5               	clrf	display_concentration_gameboard@i
  7360  1428                     l4129:	
  7361                           
  7362                           ;games.c: 476:         if(i == 16) {
  7363  1428  3010               	movlw	16
  7364  1429  0635               	xorwf	display_concentration_gameboard@i,w
  7365  142A  1D03               	btfss	3,2
  7366  142B  2C2D               	goto	u3081
  7367  142C  2C2E               	goto	u3080
  7368  142D                     u3081:	
  7369  142D  2C38               	goto	l413
  7370  142E                     u3080:	
  7371  142E                     l4131:	
  7372                           
  7373                           ;games.c: 477:             lcd_goto(0x40, gameboard);
  7374  142E  3005               	movlw	5
  7375  142F  00A8               	movwf	lcd_goto@port
  7376  1430  3000               	movlw	0
  7377  1431  00A9               	movwf	lcd_goto@port+1
  7378  1432  3040               	movlw	64
  7379  1433  160A  118A  22EC  160A  118A  	fcall	_lcd_goto
  7380  1438                     l413:	
  7381                           ;games.c: 478:         }
  7382                           
  7383                           
  7384                           ;games.c: 479:         lcd_putch(visible[i], gameboard);
  7385  1438  3005               	movlw	5
  7386  1439  1283               	bcf	3,5	;RP0=0, select bank0
  7387  143A  1303               	bcf	3,6	;RP1=0, select bank0
  7388  143B  00B0               	movwf	lcd_putch@port
  7389  143C  3000               	movlw	0
  7390  143D  00B1               	movwf	lcd_putch@port+1
  7391  143E  0835               	movf	display_concentration_gameboard@i,w
  7392  143F  3EA0               	addlw	(low (_visible| 0))& (0+255)
  7393  1440  0084               	movwf	4
  7394  1441  1383               	bcf	3,7	;select IRP bank1
  7395  1442  0800               	movf	0,w
  7396  1443  160A  118A  228D  160A  118A  	fcall	_lcd_putch
  7397  1448                     l4133:	
  7398                           
  7399                           ;games.c: 480:     }
  7400  1448  3001               	movlw	1
  7401  1449  1283               	bcf	3,5	;RP0=0, select bank0
  7402  144A  1303               	bcf	3,6	;RP1=0, select bank0
  7403  144B  00B4               	movwf	??_display_concentration_gameboard
  7404  144C  0834               	movf	??_display_concentration_gameboard,w
  7405  144D  07B5               	addwf	display_concentration_gameboard@i,f
  7406  144E                     l4135:	
  7407  144E  3020               	movlw	32
  7408  144F  0235               	subwf	display_concentration_gameboard@i,w
  7409  1450  1C03               	skipc
  7410  1451  2C53               	goto	u3091
  7411  1452  2C54               	goto	u3090
  7412  1453                     u3091:	
  7413  1453  2C28               	goto	l4129
  7414  1454                     u3090:	
  7415  1454                     l4137:	
  7416                           
  7417                           ;games.c: 481:     lcd_goto(cursor_pos, gameboard);
  7418  1454  3005               	movlw	5
  7419  1455  00A8               	movwf	lcd_goto@port
  7420  1456  3000               	movlw	0
  7421  1457  00A9               	movwf	lcd_goto@port+1
  7422  1458  086C               	movf	_cursor_pos,w
  7423  1459  160A  118A  22EC  160A  118A  	fcall	_lcd_goto
  7424  145E                     l414:	
  7425  145E  0008               	return
  7426  145F                     __end_of_display_concentration_gameboard:	
  7427                           
  7428                           	psect	text27
  7429  128D                     __ptext27:	
  7430 ;; *************** function _lcd_putch *****************
  7431 ;; Defined at:
  7432 ;;		line 135 in file "lcd4bits.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  character       1    wreg     unsigned char 
  7435 ;;  port            2   16[BANK0 ] PTR unsigned char 
  7436 ;;		 -> PORTD(1), PORTA(1), 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  character       1   19[BANK0 ] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7448 ;;      Params:         0       2       0       0       0
  7449 ;;      Locals:         0       1       0       0       0
  7450 ;;      Temps:          0       1       0       0       0
  7451 ;;      Totals:         0       4       0       0       0
  7452 ;;Total ram usage:        4 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    3
  7455 ;; This function calls:
  7456 ;;		_lcd_write
  7457 ;; This function is called by:
  7458 ;;		_main
  7459 ;;		_countdown
  7460 ;;		_display_simon_says_scoreboard
  7461 ;;		_display_concentration_scoreboard
  7462 ;;		_display_concentration_gameboard
  7463 ;;		_update_cursor
  7464 ;;		_toggle_cursor
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           
  7469                           ;psect for function _lcd_putch
  7470  128D                     _lcd_putch:	
  7471                           
  7472                           ;incstack = 0
  7473                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7474                           ;lcd_putch@character stored from wreg
  7475  128D  1283               	bcf	3,5	;RP0=0, select bank0
  7476  128E  1303               	bcf	3,6	;RP1=0, select bank0
  7477  128F  00B3               	movwf	lcd_putch@character
  7478  1290                     l3893:	
  7479                           
  7480                           ;lcd4bits.c: 136:     lcd_write(0x10, character, port);
  7481  1290  0833               	movf	lcd_putch@character,w
  7482  1291  00B2               	movwf	??_lcd_putch
  7483  1292  0832               	movf	??_lcd_putch,w
  7484  1293  00A2               	movwf	lcd_write@CmdChar
  7485  1294  0830               	movf	lcd_putch@port,w
  7486  1295  00A3               	movwf	lcd_write@port
  7487  1296  0831               	movf	lcd_putch@port+1,w
  7488  1297  00A4               	movwf	lcd_write@port+1
  7489  1298  3010               	movlw	16
  7490  1299  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  7491  129E                     l38:	
  7492  129E  0008               	return
  7493  129F                     __end_of_lcd_putch:	
  7494                           
  7495                           	psect	text28
  7496  14AC                     __ptext28:	
  7497 ;; *************** function _concentration_game_end *****************
  7498 ;; Defined at:
  7499 ;;		line 432 in file "games.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      void 
  7506 ;; Registers used:
  7507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7513 ;;      Params:         0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0
  7516 ;;      Totals:         0       0       0       0       0
  7517 ;;Total ram usage:        0 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:    5
  7520 ;; This function calls:
  7521 ;;		_DelayMs
  7522 ;;		_end_screen
  7523 ;; This function is called by:
  7524 ;;		_main
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           
  7529                           ;psect for function _concentration_game_end
  7530  14AC                     _concentration_game_end:	
  7531  14AC                     l4727:	
  7532                           ;incstack = 0
  7533                           ; Regs used in _concentration_game_end: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  7534                           
  7535                           
  7536                           ;games.c: 433:     DelayMs(1000);
  7537  14AC  30E8               	movlw	232
  7538  14AD  1283               	bcf	3,5	;RP0=0, select bank0
  7539  14AE  1303               	bcf	3,6	;RP1=0, select bank0
  7540  14AF  00A0               	movwf	DelayMs@millis
  7541  14B0  3003               	movlw	3
  7542  14B1  00A1               	movwf	DelayMs@millis+1
  7543  14B2  160A  118A  229F  160A  118A  	fcall	_DelayMs
  7544  14B7                     l4729:	
  7545                           
  7546                           ;games.c: 434:     if(p1_score>p2_score) {
  7547  14B7  1283               	bcf	3,5	;RP0=0, select bank0
  7548  14B8  1303               	bcf	3,6	;RP1=0, select bank0
  7549  14B9  0867               	movf	_p1_score,w
  7550  14BA  0266               	subwf	_p2_score,w
  7551  14BB  1803               	skipnc
  7552  14BC  2CBE               	goto	u3731
  7553  14BD  2CBF               	goto	u3730
  7554  14BE                     u3731:	
  7555  14BE  2CCD               	goto	l4733
  7556  14BF                     u3730:	
  7557  14BF                     l4731:	
  7558                           
  7559                           ;games.c: 435:         end_screen("    WINNER!!","    PLAYER 1");
  7560  14BF  3026               	movlw	low (STR_24| (0+32768))
  7561  14C0  00AD               	movwf	end_screen@first_row
  7562  14C1  3084               	movlw	high (STR_24| (0+32768))
  7563  14C2  00AE               	movwf	end_screen@first_row+1
  7564  14C3  3040               	movlw	low (STR_25| (0+32768))
  7565  14C4  00AF               	movwf	end_screen@second_row
  7566  14C5  3084               	movlw	high (STR_25| (0+32768))
  7567  14C6  00B0               	movwf	end_screen@second_row+1
  7568  14C7  120A  118A  2054  160A  118A  	fcall	_end_screen
  7569                           
  7570                           ;games.c: 436:     } else if(p1_score<p2_score) {
  7571  14CC  2CEE               	goto	l4739
  7572  14CD                     l4733:	
  7573  14CD  0866               	movf	_p2_score,w
  7574  14CE  0267               	subwf	_p1_score,w
  7575  14CF  1803               	skipnc
  7576  14D0  2CD2               	goto	u3741
  7577  14D1  2CD3               	goto	u3740
  7578  14D2                     u3741:	
  7579  14D2  2CE1               	goto	l4737
  7580  14D3                     u3740:	
  7581  14D3                     l4735:	
  7582                           
  7583                           ;games.c: 437:         end_screen("    WINNER!!","    PLAYER 2");
  7584  14D3  3026               	movlw	low (STR_24| (0+32768))
  7585  14D4  00AD               	movwf	end_screen@first_row
  7586  14D5  3084               	movlw	high (STR_24| (0+32768))
  7587  14D6  00AE               	movwf	end_screen@first_row+1
  7588  14D7  304D               	movlw	low (STR_27| (0+32768))
  7589  14D8  00AF               	movwf	end_screen@second_row
  7590  14D9  3084               	movlw	high (STR_27| (0+32768))
  7591  14DA  00B0               	movwf	end_screen@second_row+1
  7592  14DB  120A  118A  2054  160A  118A  	fcall	_end_screen
  7593                           
  7594                           ;games.c: 438:     } else {
  7595  14E0  2CEE               	goto	l4739
  7596  14E1                     l4737:	
  7597                           
  7598                           ;games.c: 439:         end_screen("   NO WINNER!","      TIED");
  7599  14E1  30D2               	movlw	low (STR_28| (0+32768))
  7600  14E2  00AD               	movwf	end_screen@first_row
  7601  14E3  3083               	movlw	high (STR_28| (0+32768))
  7602  14E4  00AE               	movwf	end_screen@first_row+1
  7603  14E5  3080               	movlw	low (STR_29| (0+32768))
  7604  14E6  00AF               	movwf	end_screen@second_row
  7605  14E7  3084               	movlw	high (STR_29| (0+32768))
  7606  14E8  00B0               	movwf	end_screen@second_row+1
  7607  14E9  120A  118A  2054  160A  118A  	fcall	_end_screen
  7608  14EE                     l4739:	
  7609                           
  7610                           ;games.c: 441:     DelayMs(1000);
  7611  14EE  30E8               	movlw	232
  7612  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  7613  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  7614  14F1  00A0               	movwf	DelayMs@millis
  7615  14F2  3003               	movlw	3
  7616  14F3  00A1               	movwf	DelayMs@millis+1
  7617  14F4  160A  118A  229F  160A  118A  	fcall	_DelayMs
  7618  14F9                     l396:	
  7619  14F9  0008               	return
  7620  14FA                     __end_of_concentration_game_end:	
  7621                           
  7622                           	psect	text29
  7623  0054                     __ptext29:	
  7624 ;; *************** function _end_screen *****************
  7625 ;; Defined at:
  7626 ;;		line 699 in file "games.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  first_row       2   13[BANK0 ] PTR const unsigned char 
  7629 ;;		 -> STR_28(14), STR_26(13), STR_24(13), STR_14(14), 
  7630 ;;		 -> STR_12(14), STR_10(14), STR_8(14), STR_6(14), 
  7631 ;;		 -> STR_4(14), 
  7632 ;;  second_row      2   15[BANK0 ] PTR unsigned char 
  7633 ;;		 -> STR_29(11), STR_27(13), STR_25(13), STR_15(14), 
  7634 ;;		 -> STR_13(16), STR_11(14), STR_9(13), STR_7(17), 
  7635 ;;		 -> STR_5(14), 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  colors          6   20[BANK0 ] unsigned char [6]
  7638 ;;  color_index     1   27[BANK0 ] unsigned char 
  7639 ;;  i               1   26[BANK0 ] unsigned char 
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7649 ;;      Params:         0       4       0       0       0
  7650 ;;      Locals:         0       8       0       0       0
  7651 ;;      Temps:          0       3       0       0       0
  7652 ;;      Totals:         0      15       0       0       0
  7653 ;;Total ram usage:       15 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    4
  7656 ;; This function calls:
  7657 ;;		_DelayMs
  7658 ;;		___awmod
  7659 ;;		_lcd_clear
  7660 ;;		_lcd_goto
  7661 ;;		_lcd_puts
  7662 ;;		_play_tone
  7663 ;;		_turn_on_led
  7664 ;; This function is called by:
  7665 ;;		_simon_says_game_end
  7666 ;;		_concentration_game_end
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function _end_screen
  7672  0054                     _end_screen:	
  7673  0054                     l4153:	
  7674                           ;incstack = 0
  7675                           ; Regs used in _end_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7676                           
  7677                           
  7678                           ;games.c: 700:     joystick_pressed = 1;
  7679  0054  1283               	bcf	3,5	;RP0=0, select bank0
  7680  0055  1303               	bcf	3,6	;RP1=0, select bank0
  7681  0056  01E4               	clrf	_joystick_pressed
  7682  0057  0AE4               	incf	_joystick_pressed,f
  7683  0058                     l4155:	
  7684                           
  7685                           ;games.c: 701:     char colors[] = {0,3,1,4,2,5};
  7686  0058  3034               	movlw	end_screen@colors& (0+255)
  7687  0059  0084               	movwf	4
  7688  005A  1683               	bsf	3,5	;RP0=1, select bank1
  7689  005B  1303               	bcf	3,6	;RP1=0, select bank1
  7690  005C  0860               	movf	end_screen@F1400^(0+128),w
  7691  005D  1383               	bcf	3,7	;select IRP bank0
  7692  005E  0080               	movwf	0
  7693  005F  0A84               	incf	4,f
  7694  0060  0861               	movf	(end_screen@F1400^(0+128)+1),w
  7695  0061  0080               	movwf	0
  7696  0062  0A84               	incf	4,f
  7697  0063  0862               	movf	(end_screen@F1400^(0+128)+2),w
  7698  0064  0080               	movwf	0
  7699  0065  0A84               	incf	4,f
  7700  0066  0863               	movf	(end_screen@F1400^(0+128)+3),w
  7701  0067  0080               	movwf	0
  7702  0068  0A84               	incf	4,f
  7703  0069  0864               	movf	(end_screen@F1400^(0+128)+4),w
  7704  006A  0080               	movwf	0
  7705  006B  0A84               	incf	4,f
  7706  006C  0865               	movf	(end_screen@F1400^(0+128)+5),w
  7707  006D  0080               	movwf	0
  7708  006E                     l4157:	
  7709                           
  7710                           ;games.c: 702:     char color_index = 0;
  7711  006E  1283               	bcf	3,5	;RP0=0, select bank0
  7712  006F  1303               	bcf	3,6	;RP1=0, select bank0
  7713  0070  01BB               	clrf	end_screen@color_index
  7714  0071                     l4159:	
  7715                           
  7716                           ;games.c: 703:     char i;;games.c: 704:     for(i=0;i<3;i++) {
  7717  0071  01BA               	clrf	end_screen@i
  7718  0072                     l4165:	
  7719                           
  7720                           ;games.c: 705:         turn_on_led(colors[color_index]);
  7721  0072  083B               	movf	end_screen@color_index,w
  7722  0073  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7723  0074  0084               	movwf	4
  7724  0075  1383               	bcf	3,7	;select IRP bank0
  7725  0076  0800               	movf	0,w
  7726  0077  160A  118A  23DF  120A  118A  	fcall	_turn_on_led
  7727  007C                     l4167:	
  7728                           
  7729                           ;games.c: 706:         color_index++;
  7730  007C  3001               	movlw	1
  7731  007D  1283               	bcf	3,5	;RP0=0, select bank0
  7732  007E  1303               	bcf	3,6	;RP1=0, select bank0
  7733  007F  00B1               	movwf	??_end_screen
  7734  0080  0831               	movf	??_end_screen,w
  7735  0081  07BB               	addwf	end_screen@color_index,f
  7736  0082                     l4169:	
  7737                           
  7738                           ;games.c: 707:         color_index %= 6;
  7739  0082  3006               	movlw	6
  7740  0083  00A0               	movwf	___awmod@divisor
  7741  0084  3000               	movlw	0
  7742  0085  00A1               	movwf	___awmod@divisor+1
  7743  0086  083B               	movf	end_screen@color_index,w
  7744  0087  00B1               	movwf	??_end_screen
  7745  0088  01B2               	clrf	??_end_screen+1
  7746  0089  0831               	movf	??_end_screen,w
  7747  008A  00A2               	movwf	___awmod@dividend
  7748  008B  0832               	movf	??_end_screen+1,w
  7749  008C  00A3               	movwf	___awmod@dividend+1
  7750  008D  160A  118A  25F0  120A  118A  	fcall	___awmod
  7751  0092  1283               	bcf	3,5	;RP0=0, select bank0
  7752  0093  1303               	bcf	3,6	;RP1=0, select bank0
  7753  0094  0820               	movf	?___awmod,w
  7754  0095  00B3               	movwf	??_end_screen+2
  7755  0096  0833               	movf	??_end_screen+2,w
  7756  0097  00BB               	movwf	end_screen@color_index
  7757  0098                     l4171:	
  7758                           
  7759                           ;games.c: 708:         play_tone(2009, 30);
  7760  0098  30D9               	movlw	217
  7761  0099  00A0               	movwf	play_tone@tone_period
  7762  009A  3007               	movlw	7
  7763  009B  00A1               	movwf	play_tone@tone_period+1
  7764  009C  301E               	movlw	30
  7765  009D  00B1               	movwf	??_end_screen
  7766  009E  0831               	movf	??_end_screen,w
  7767  009F  00A2               	movwf	play_tone@duration_8ms
  7768  00A0  160A  118A  230A  120A  118A  	fcall	_play_tone
  7769  00A5                     l4173:	
  7770                           
  7771                           ;games.c: 709:         turn_on_led(colors[color_index]);
  7772  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  7773  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  7774  00A7  083B               	movf	end_screen@color_index,w
  7775  00A8  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7776  00A9  0084               	movwf	4
  7777  00AA  1383               	bcf	3,7	;select IRP bank0
  7778  00AB  0800               	movf	0,w
  7779  00AC  160A  118A  23DF  120A  118A  	fcall	_turn_on_led
  7780                           
  7781                           ;games.c: 710:         color_index++;
  7782  00B1  3001               	movlw	1
  7783  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  7784  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  7785  00B4  00B1               	movwf	??_end_screen
  7786  00B5  0831               	movf	??_end_screen,w
  7787  00B6  07BB               	addwf	end_screen@color_index,f
  7788  00B7                     l4175:	
  7789                           
  7790                           ;games.c: 711:         color_index %= 6;
  7791  00B7  3006               	movlw	6
  7792  00B8  00A0               	movwf	___awmod@divisor
  7793  00B9  3000               	movlw	0
  7794  00BA  00A1               	movwf	___awmod@divisor+1
  7795  00BB  083B               	movf	end_screen@color_index,w
  7796  00BC  00B1               	movwf	??_end_screen
  7797  00BD  01B2               	clrf	??_end_screen+1
  7798  00BE  0831               	movf	??_end_screen,w
  7799  00BF  00A2               	movwf	___awmod@dividend
  7800  00C0  0832               	movf	??_end_screen+1,w
  7801  00C1  00A3               	movwf	___awmod@dividend+1
  7802  00C2  160A  118A  25F0  120A  118A  	fcall	___awmod
  7803  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  7804  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  7805  00C9  0820               	movf	?___awmod,w
  7806  00CA  00B3               	movwf	??_end_screen+2
  7807  00CB  0833               	movf	??_end_screen+2,w
  7808  00CC  00BB               	movwf	end_screen@color_index
  7809  00CD                     l4177:	
  7810                           
  7811                           ;games.c: 712:         play_tone(1896, 30);
  7812  00CD  3068               	movlw	104
  7813  00CE  00A0               	movwf	play_tone@tone_period
  7814  00CF  3007               	movlw	7
  7815  00D0  00A1               	movwf	play_tone@tone_period+1
  7816  00D1  301E               	movlw	30
  7817  00D2  00B1               	movwf	??_end_screen
  7818  00D3  0831               	movf	??_end_screen,w
  7819  00D4  00A2               	movwf	play_tone@duration_8ms
  7820  00D5  160A  118A  230A  120A  118A  	fcall	_play_tone
  7821  00DA                     l4179:	
  7822                           
  7823                           ;games.c: 713:         turn_on_led(colors[color_index]);
  7824  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  7825  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  7826  00DC  083B               	movf	end_screen@color_index,w
  7827  00DD  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7828  00DE  0084               	movwf	4
  7829  00DF  1383               	bcf	3,7	;select IRP bank0
  7830  00E0  0800               	movf	0,w
  7831  00E1  160A  118A  23DF  120A  118A  	fcall	_turn_on_led
  7832  00E6                     l4181:	
  7833                           
  7834                           ;games.c: 714:         color_index++;
  7835  00E6  3001               	movlw	1
  7836  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  7837  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  7838  00E9  00B1               	movwf	??_end_screen
  7839  00EA  0831               	movf	??_end_screen,w
  7840  00EB  07BB               	addwf	end_screen@color_index,f
  7841  00EC                     l4183:	
  7842                           
  7843                           ;games.c: 715:         color_index %= 6;
  7844  00EC  3006               	movlw	6
  7845  00ED  00A0               	movwf	___awmod@divisor
  7846  00EE  3000               	movlw	0
  7847  00EF  00A1               	movwf	___awmod@divisor+1
  7848  00F0  083B               	movf	end_screen@color_index,w
  7849  00F1  00B1               	movwf	??_end_screen
  7850  00F2  01B2               	clrf	??_end_screen+1
  7851  00F3  0831               	movf	??_end_screen,w
  7852  00F4  00A2               	movwf	___awmod@dividend
  7853  00F5  0832               	movf	??_end_screen+1,w
  7854  00F6  00A3               	movwf	___awmod@dividend+1
  7855  00F7  160A  118A  25F0  120A  118A  	fcall	___awmod
  7856  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  7857  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  7858  00FE  0820               	movf	?___awmod,w
  7859  00FF  00B3               	movwf	??_end_screen+2
  7860  0100  0833               	movf	??_end_screen+2,w
  7861  0101  00BB               	movwf	end_screen@color_index
  7862  0102                     l4185:	
  7863                           
  7864                           ;games.c: 716:         play_tone(1594, 30);
  7865  0102  303A               	movlw	58
  7866  0103  00A0               	movwf	play_tone@tone_period
  7867  0104  3006               	movlw	6
  7868  0105  00A1               	movwf	play_tone@tone_period+1
  7869  0106  301E               	movlw	30
  7870  0107  00B1               	movwf	??_end_screen
  7871  0108  0831               	movf	??_end_screen,w
  7872  0109  00A2               	movwf	play_tone@duration_8ms
  7873  010A  160A  118A  230A  120A  118A  	fcall	_play_tone
  7874                           
  7875                           ;games.c: 717:         turn_on_led(colors[color_index]);
  7876  010F  1283               	bcf	3,5	;RP0=0, select bank0
  7877  0110  1303               	bcf	3,6	;RP1=0, select bank0
  7878  0111  083B               	movf	end_screen@color_index,w
  7879  0112  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7880  0113  0084               	movwf	4
  7881  0114  1383               	bcf	3,7	;select IRP bank0
  7882  0115  0800               	movf	0,w
  7883  0116  160A  118A  23DF  120A  118A  	fcall	_turn_on_led
  7884  011B                     l4187:	
  7885                           
  7886                           ;games.c: 718:         color_index++;
  7887  011B  3001               	movlw	1
  7888  011C  1283               	bcf	3,5	;RP0=0, select bank0
  7889  011D  1303               	bcf	3,6	;RP1=0, select bank0
  7890  011E  00B1               	movwf	??_end_screen
  7891  011F  0831               	movf	??_end_screen,w
  7892  0120  07BB               	addwf	end_screen@color_index,f
  7893  0121                     l4189:	
  7894                           
  7895                           ;games.c: 719:         color_index %= 6;
  7896  0121  3006               	movlw	6
  7897  0122  00A0               	movwf	___awmod@divisor
  7898  0123  3000               	movlw	0
  7899  0124  00A1               	movwf	___awmod@divisor+1
  7900  0125  083B               	movf	end_screen@color_index,w
  7901  0126  00B1               	movwf	??_end_screen
  7902  0127  01B2               	clrf	??_end_screen+1
  7903  0128  0831               	movf	??_end_screen,w
  7904  0129  00A2               	movwf	___awmod@dividend
  7905  012A  0832               	movf	??_end_screen+1,w
  7906  012B  00A3               	movwf	___awmod@dividend+1
  7907  012C  160A  118A  25F0  120A  118A  	fcall	___awmod
  7908  0131  1283               	bcf	3,5	;RP0=0, select bank0
  7909  0132  1303               	bcf	3,6	;RP1=0, select bank0
  7910  0133  0820               	movf	?___awmod,w
  7911  0134  00B3               	movwf	??_end_screen+2
  7912  0135  0833               	movf	??_end_screen+2,w
  7913  0136  00BB               	movwf	end_screen@color_index
  7914  0137                     l4191:	
  7915                           
  7916                           ;games.c: 720:         DelayMs(250);
  7917  0137  30FA               	movlw	250
  7918  0138  00A0               	movwf	DelayMs@millis
  7919  0139  3000               	movlw	0
  7920  013A  00A1               	movwf	DelayMs@millis+1
  7921  013B  160A  118A  229F  120A  118A  	fcall	_DelayMs
  7922  0140                     l4193:	
  7923                           
  7924                           ;games.c: 721:     }
  7925  0140  3001               	movlw	1
  7926  0141  1283               	bcf	3,5	;RP0=0, select bank0
  7927  0142  1303               	bcf	3,6	;RP1=0, select bank0
  7928  0143  00B1               	movwf	??_end_screen
  7929  0144  0831               	movf	??_end_screen,w
  7930  0145  07BA               	addwf	end_screen@i,f
  7931  0146                     l4195:	
  7932  0146  3003               	movlw	3
  7933  0147  023A               	subwf	end_screen@i,w
  7934  0148  1C03               	skipc
  7935  0149  294B               	goto	u3111
  7936  014A  294C               	goto	u3110
  7937  014B                     u3111:	
  7938  014B  2872               	goto	l4165
  7939  014C                     u3110:	
  7940  014C                     l4197:	
  7941                           
  7942                           ;games.c: 722:     turn_on_led(colors[color_index]);
  7943  014C  083B               	movf	end_screen@color_index,w
  7944  014D  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  7945  014E  0084               	movwf	4
  7946  014F  1383               	bcf	3,7	;select IRP bank0
  7947  0150  0800               	movf	0,w
  7948  0151  160A  118A  23DF  120A  118A  	fcall	_turn_on_led
  7949  0156                     l4199:	
  7950                           
  7951                           ;games.c: 723:     color_index++;
  7952  0156  3001               	movlw	1
  7953  0157  1283               	bcf	3,5	;RP0=0, select bank0
  7954  0158  1303               	bcf	3,6	;RP1=0, select bank0
  7955  0159  00B1               	movwf	??_end_screen
  7956  015A  0831               	movf	??_end_screen,w
  7957  015B  07BB               	addwf	end_screen@color_index,f
  7958  015C                     l4201:	
  7959                           
  7960                           ;games.c: 724:     color_index %= 6;
  7961  015C  3006               	movlw	6
  7962  015D  00A0               	movwf	___awmod@divisor
  7963  015E  3000               	movlw	0
  7964  015F  00A1               	movwf	___awmod@divisor+1
  7965  0160  083B               	movf	end_screen@color_index,w
  7966  0161  00B1               	movwf	??_end_screen
  7967  0162  01B2               	clrf	??_end_screen+1
  7968  0163  0831               	movf	??_end_screen,w
  7969  0164  00A2               	movwf	___awmod@dividend
  7970  0165  0832               	movf	??_end_screen+1,w
  7971  0166  00A3               	movwf	___awmod@dividend+1
  7972  0167  160A  118A  25F0  120A  118A  	fcall	___awmod
  7973  016C  1283               	bcf	3,5	;RP0=0, select bank0
  7974  016D  1303               	bcf	3,6	;RP1=0, select bank0
  7975  016E  0820               	movf	?___awmod,w
  7976  016F  00B3               	movwf	??_end_screen+2
  7977  0170  0833               	movf	??_end_screen+2,w
  7978  0171  00BB               	movwf	end_screen@color_index
  7979  0172                     l4203:	
  7980                           
  7981                           ;games.c: 725:     play_tone(2389, 60);
  7982  0172  3055               	movlw	85
  7983  0173  00A0               	movwf	play_tone@tone_period
  7984  0174  3009               	movlw	9
  7985  0175  00A1               	movwf	play_tone@tone_period+1
  7986  0176  303C               	movlw	60
  7987  0177  00B1               	movwf	??_end_screen
  7988  0178  0831               	movf	??_end_screen,w
  7989  0179  00A2               	movwf	play_tone@duration_8ms
  7990  017A  160A  118A  230A  120A  118A  	fcall	_play_tone
  7991                           
  7992                           ;games.c: 726:     while(joystick_pressed==1) {
  7993  017F  2A34               	goto	l4247
  7994  0180                     l4205:	
  7995                           
  7996                           ;games.c: 727:         lcd_clear(gameboard);
  7997  0180  3005               	movlw	5
  7998  0181  00A8               	movwf	lcd_clear@port
  7999  0182  3000               	movlw	0
  8000  0183  00A9               	movwf	lcd_clear@port+1
  8001  0184  160A  118A  22B8  120A  118A  	fcall	_lcd_clear
  8002  0189                     l4207:	
  8003                           
  8004                           ;games.c: 728:         lcd_puts(first_row,gameboard);
  8005  0189  1283               	bcf	3,5	;RP0=0, select bank0
  8006  018A  1303               	bcf	3,6	;RP1=0, select bank0
  8007  018B  082D               	movf	end_screen@first_row,w
  8008  018C  00A8               	movwf	lcd_puts@string
  8009  018D  082E               	movf	end_screen@first_row+1,w
  8010  018E  00A9               	movwf	lcd_puts@string+1
  8011  018F  3005               	movlw	5
  8012  0190  00AA               	movwf	lcd_puts@port
  8013  0191  3000               	movlw	0
  8014  0192  00AB               	movwf	lcd_puts@port+1
  8015  0193  160A  118A  23AF  120A  118A  	fcall	_lcd_puts
  8016  0198                     l4209:	
  8017                           
  8018                           ;games.c: 729:         event_enabled = 0;
  8019  0198  1283               	bcf	3,5	;RP0=0, select bank0
  8020  0199  1303               	bcf	3,6	;RP1=0, select bank0
  8021  019A  01E8               	clrf	_event_enabled
  8022  019B                     l4211:	
  8023                           
  8024                           ;games.c: 730:         event_delay_count = 120;
  8025  019B  3078               	movlw	120
  8026  019C  00B1               	movwf	??_end_screen
  8027  019D  0831               	movf	??_end_screen,w
  8028  019E  00FA               	movwf	_event_delay_count
  8029                           
  8030                           ;games.c: 731:         while(event_enabled == 0) {
  8031  019F  29A9               	goto	l4217
  8032  01A0                     l532:	
  8033                           
  8034                           ;games.c: 732:             if((RB5 == 0)||(RB2 == 0)) {
  8035  01A0  1E86               	btfss	6,5	;volatile
  8036  01A1  29A3               	goto	u3121
  8037  01A2  29A4               	goto	u3120
  8038  01A3                     u3121:	
  8039  01A3  29A8               	goto	l4215
  8040  01A4                     u3120:	
  8041  01A4                     l4213:	
  8042  01A4  1906               	btfsc	6,2	;volatile
  8043  01A5  29A7               	goto	u3131
  8044  01A6  29A8               	goto	u3130
  8045  01A7                     u3131:	
  8046  01A7  29A9               	goto	l4217
  8047  01A8                     u3130:	
  8048  01A8                     l4215:	
  8049                           
  8050                           ;games.c: 733:                 joystick_pressed = 0;
  8051  01A8  01E4               	clrf	_joystick_pressed
  8052  01A9                     l4217:	
  8053                           
  8054                           ;games.c: 731:         while(event_enabled == 0) {
  8055  01A9  0868               	movf	_event_enabled,w
  8056  01AA  1903               	btfsc	3,2
  8057  01AB  29AD               	goto	u3141
  8058  01AC  29AE               	goto	u3140
  8059  01AD                     u3141:	
  8060  01AD  29A0               	goto	l532
  8061  01AE                     u3140:	
  8062  01AE                     l4219:	
  8063                           
  8064                           ;games.c: 736:         turn_on_led(colors[color_index]);
  8065  01AE  083B               	movf	end_screen@color_index,w
  8066  01AF  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  8067  01B0  0084               	movwf	4
  8068  01B1  1383               	bcf	3,7	;select IRP bank0
  8069  01B2  0800               	movf	0,w
  8070  01B3  160A  118A  23DF  120A  118A  	fcall	_turn_on_led
  8071  01B8                     l4221:	
  8072                           
  8073                           ;games.c: 737:         color_index++;
  8074  01B8  3001               	movlw	1
  8075  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  8076  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  8077  01BB  00B1               	movwf	??_end_screen
  8078  01BC  0831               	movf	??_end_screen,w
  8079  01BD  07BB               	addwf	end_screen@color_index,f
  8080  01BE                     l4223:	
  8081                           
  8082                           ;games.c: 738:         color_index %= 6;
  8083  01BE  3006               	movlw	6
  8084  01BF  00A0               	movwf	___awmod@divisor
  8085  01C0  3000               	movlw	0
  8086  01C1  00A1               	movwf	___awmod@divisor+1
  8087  01C2  083B               	movf	end_screen@color_index,w
  8088  01C3  00B1               	movwf	??_end_screen
  8089  01C4  01B2               	clrf	??_end_screen+1
  8090  01C5  0831               	movf	??_end_screen,w
  8091  01C6  00A2               	movwf	___awmod@dividend
  8092  01C7  0832               	movf	??_end_screen+1,w
  8093  01C8  00A3               	movwf	___awmod@dividend+1
  8094  01C9  160A  118A  25F0  120A  118A  	fcall	___awmod
  8095  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  8096  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  8097  01D0  0820               	movf	?___awmod,w
  8098  01D1  00B3               	movwf	??_end_screen+2
  8099  01D2  0833               	movf	??_end_screen+2,w
  8100  01D3  00BB               	movwf	end_screen@color_index
  8101  01D4                     l4225:	
  8102                           
  8103                           ;games.c: 739:         lcd_clear(gameboard);
  8104  01D4  3005               	movlw	5
  8105  01D5  00A8               	movwf	lcd_clear@port
  8106  01D6  3000               	movlw	0
  8107  01D7  00A9               	movwf	lcd_clear@port+1
  8108  01D8  160A  118A  22B8  120A  118A  	fcall	_lcd_clear
  8109  01DD                     l4227:	
  8110                           
  8111                           ;games.c: 740:         lcd_goto(0x40,gameboard);
  8112  01DD  3005               	movlw	5
  8113  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  8114  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  8115  01E0  00A8               	movwf	lcd_goto@port
  8116  01E1  3000               	movlw	0
  8117  01E2  00A9               	movwf	lcd_goto@port+1
  8118  01E3  3040               	movlw	64
  8119  01E4  160A  118A  22EC  120A  118A  	fcall	_lcd_goto
  8120  01E9                     l4229:	
  8121                           
  8122                           ;games.c: 741:         lcd_puts(second_row,gameboard);
  8123  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  8124  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  8125  01EB  082F               	movf	end_screen@second_row,w
  8126  01EC  00A8               	movwf	lcd_puts@string
  8127  01ED  0830               	movf	end_screen@second_row+1,w
  8128  01EE  00A9               	movwf	lcd_puts@string+1
  8129  01EF  3005               	movlw	5
  8130  01F0  00AA               	movwf	lcd_puts@port
  8131  01F1  3000               	movlw	0
  8132  01F2  00AB               	movwf	lcd_puts@port+1
  8133  01F3  160A  118A  23AF  120A  118A  	fcall	_lcd_puts
  8134  01F8                     l4231:	
  8135                           
  8136                           ;games.c: 742:         event_enabled = 0;
  8137  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  8138  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  8139  01FA  01E8               	clrf	_event_enabled
  8140  01FB                     l4233:	
  8141                           
  8142                           ;games.c: 743:         event_delay_count = 120;
  8143  01FB  3078               	movlw	120
  8144  01FC  00B1               	movwf	??_end_screen
  8145  01FD  0831               	movf	??_end_screen,w
  8146  01FE  00FA               	movwf	_event_delay_count
  8147                           
  8148                           ;games.c: 744:         while(event_enabled == 0) {
  8149  01FF  2A09               	goto	l4239
  8150  0200                     l538:	
  8151                           
  8152                           ;games.c: 745:             if((RB5 == 0)||(RB2 == 0)) {
  8153  0200  1E86               	btfss	6,5	;volatile
  8154  0201  2A03               	goto	u3151
  8155  0202  2A04               	goto	u3150
  8156  0203                     u3151:	
  8157  0203  2A08               	goto	l4237
  8158  0204                     u3150:	
  8159  0204                     l4235:	
  8160  0204  1906               	btfsc	6,2	;volatile
  8161  0205  2A07               	goto	u3161
  8162  0206  2A08               	goto	u3160
  8163  0207                     u3161:	
  8164  0207  2A09               	goto	l4239
  8165  0208                     u3160:	
  8166  0208                     l4237:	
  8167                           
  8168                           ;games.c: 746:                 joystick_pressed = 0;
  8169  0208  01E4               	clrf	_joystick_pressed
  8170  0209                     l4239:	
  8171                           
  8172                           ;games.c: 744:         while(event_enabled == 0) {
  8173  0209  0868               	movf	_event_enabled,w
  8174  020A  1903               	btfsc	3,2
  8175  020B  2A0D               	goto	u3171
  8176  020C  2A0E               	goto	u3170
  8177  020D                     u3171:	
  8178  020D  2A00               	goto	l538
  8179  020E                     u3170:	
  8180  020E                     l4241:	
  8181                           
  8182                           ;games.c: 749:         turn_on_led(colors[color_index]);
  8183  020E  083B               	movf	end_screen@color_index,w
  8184  020F  3E34               	addlw	(low (end_screen@colors| 0))& (0+255)
  8185  0210  0084               	movwf	4
  8186  0211  1383               	bcf	3,7	;select IRP bank0
  8187  0212  0800               	movf	0,w
  8188  0213  160A  118A  23DF  120A  118A  	fcall	_turn_on_led
  8189  0218                     l4243:	
  8190                           
  8191                           ;games.c: 750:         color_index++;
  8192  0218  3001               	movlw	1
  8193  0219  1283               	bcf	3,5	;RP0=0, select bank0
  8194  021A  1303               	bcf	3,6	;RP1=0, select bank0
  8195  021B  00B1               	movwf	??_end_screen
  8196  021C  0831               	movf	??_end_screen,w
  8197  021D  07BB               	addwf	end_screen@color_index,f
  8198  021E                     l4245:	
  8199                           
  8200                           ;games.c: 751:         color_index %= 6;
  8201  021E  3006               	movlw	6
  8202  021F  00A0               	movwf	___awmod@divisor
  8203  0220  3000               	movlw	0
  8204  0221  00A1               	movwf	___awmod@divisor+1
  8205  0222  083B               	movf	end_screen@color_index,w
  8206  0223  00B1               	movwf	??_end_screen
  8207  0224  01B2               	clrf	??_end_screen+1
  8208  0225  0831               	movf	??_end_screen,w
  8209  0226  00A2               	movwf	___awmod@dividend
  8210  0227  0832               	movf	??_end_screen+1,w
  8211  0228  00A3               	movwf	___awmod@dividend+1
  8212  0229  160A  118A  25F0  120A  118A  	fcall	___awmod
  8213  022E  1283               	bcf	3,5	;RP0=0, select bank0
  8214  022F  1303               	bcf	3,6	;RP1=0, select bank0
  8215  0230  0820               	movf	?___awmod,w
  8216  0231  00B3               	movwf	??_end_screen+2
  8217  0232  0833               	movf	??_end_screen+2,w
  8218  0233  00BB               	movwf	end_screen@color_index
  8219  0234                     l4247:	
  8220                           
  8221                           ;games.c: 726:     while(joystick_pressed==1) {
  8222  0234  1283               	bcf	3,5	;RP0=0, select bank0
  8223  0235  1303               	bcf	3,6	;RP1=0, select bank0
  8224  0236  0364               	decf	_joystick_pressed,w
  8225  0237  1903               	btfsc	3,2
  8226  0238  2A3A               	goto	u3181
  8227  0239  2A3B               	goto	u3180
  8228  023A                     u3181:	
  8229  023A  2980               	goto	l4205
  8230  023B                     u3180:	
  8231  023B                     l544:	
  8232  023B  0008               	return
  8233  023C                     __end_of_end_screen:	
  8234                           
  8235                           	psect	text30
  8236  13DF                     __ptext30:	
  8237 ;; *************** function _turn_on_led *****************
  8238 ;; Defined at:
  8239 ;;		line 766 in file "games.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  color           1    wreg     unsigned char 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  color           1    2[BANK0 ] unsigned char 
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8253 ;;      Params:         0       0       0       0       0
  8254 ;;      Locals:         0       1       0       0       0
  8255 ;;      Temps:          0       2       0       0       0
  8256 ;;      Totals:         0       3       0       0       0
  8257 ;;Total ram usage:        3 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    1
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		_simon_says_get_input
  8264 ;;		_play_pattern
  8265 ;;		_check_for_match
  8266 ;;		_end_screen
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           
  8271                           ;psect for function _turn_on_led
  8272  13DF                     _turn_on_led:	
  8273                           
  8274                           ;incstack = 0
  8275                           ; Regs used in _turn_on_led: [wreg-fsr0h+status,2+status,0]
  8276                           ;turn_on_led@color stored from wreg
  8277  13DF  1283               	bcf	3,5	;RP0=0, select bank0
  8278  13E0  1303               	bcf	3,6	;RP1=0, select bank0
  8279  13E1  00A2               	movwf	turn_on_led@color
  8280  13E2                     l3899:	
  8281                           
  8282                           ;games.c: 767:     PORTC &= 0x1F;
  8283  13E2  301F               	movlw	31
  8284  13E3  00A0               	movwf	??_turn_on_led
  8285  13E4  0820               	movf	??_turn_on_led,w
  8286  13E5  0587               	andwf	7,f	;volatile
  8287                           
  8288                           ;games.c: 768:     switch(color) {
  8289  13E6  2BFA               	goto	l3903
  8290  13E7                     l554:	
  8291                           ;games.c: 769:         case 0:
  8292                           
  8293                           
  8294                           ;games.c: 770:             RC5 = 1;
  8295  13E7  1687               	bsf	7,5	;volatile
  8296                           
  8297                           ;games.c: 771:             break;
  8298  13E8  2C19               	goto	l562
  8299  13E9                     l556:	
  8300                           ;games.c: 772:         case 1:
  8301                           
  8302                           
  8303                           ;games.c: 773:             RC6 = 1;
  8304  13E9  1707               	bsf	7,6	;volatile
  8305                           
  8306                           ;games.c: 774:             break;
  8307  13EA  2C19               	goto	l562
  8308  13EB                     l557:	
  8309                           ;games.c: 775:         case 2:
  8310                           
  8311                           
  8312                           ;games.c: 776:             RC7 = 1;
  8313  13EB  1787               	bsf	7,7	;volatile
  8314                           
  8315                           ;games.c: 777:             break;
  8316  13EC  2C19               	goto	l562
  8317  13ED                     l558:	
  8318                           ;games.c: 778:         case 3:
  8319                           
  8320                           
  8321                           ;games.c: 779:             RC5 = 1;
  8322  13ED  1687               	bsf	7,5	;volatile
  8323                           
  8324                           ;games.c: 780:             RC6 = 1;
  8325  13EE  1707               	bsf	7,6	;volatile
  8326                           
  8327                           ;games.c: 781:             break;
  8328  13EF  2C19               	goto	l562
  8329  13F0                     l559:	
  8330                           ;games.c: 782:         case 4:
  8331                           
  8332                           
  8333                           ;games.c: 783:             RC6 = 1;
  8334  13F0  1707               	bsf	7,6	;volatile
  8335                           
  8336                           ;games.c: 784:             RC7 = 1;
  8337  13F1  1787               	bsf	7,7	;volatile
  8338                           
  8339                           ;games.c: 785:             break;
  8340  13F2  2C19               	goto	l562
  8341  13F3                     l560:	
  8342                           ;games.c: 786:         case 5:
  8343                           
  8344                           
  8345                           ;games.c: 787:             RC7 = 1;
  8346  13F3  1787               	bsf	7,7	;volatile
  8347                           
  8348                           ;games.c: 788:             RC5 = 1;
  8349  13F4  1687               	bsf	7,5	;volatile
  8350                           
  8351                           ;games.c: 789:             break;
  8352  13F5  2C19               	goto	l562
  8353  13F6                     l561:	
  8354                           ;games.c: 790:         case 6:
  8355                           
  8356                           
  8357                           ;games.c: 791:             RC5 = 1;
  8358  13F6  1687               	bsf	7,5	;volatile
  8359                           
  8360                           ;games.c: 792:             RC6 = 1;
  8361  13F7  1707               	bsf	7,6	;volatile
  8362                           
  8363                           ;games.c: 793:             RC7 = 1;
  8364  13F8  1787               	bsf	7,7	;volatile
  8365                           
  8366                           ;games.c: 794:             break;
  8367  13F9  2C19               	goto	l562
  8368  13FA                     l3903:	
  8369  13FA  0822               	movf	turn_on_led@color,w
  8370  13FB  00A0               	movwf	??_turn_on_led
  8371  13FC  01A1               	clrf	??_turn_on_led+1
  8372                           
  8373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8374                           ; Switch size 1, requested type "simple"
  8375                           ; Number of cases is 1, Range of values is 0 to 0
  8376                           ; switch strategies available:
  8377                           ; Name         Instructions Cycles
  8378                           ; simple_byte            4     3 (average)
  8379                           ; direct_byte           11     8 (fixed)
  8380                           ; jumptable            260     6 (fixed)
  8381                           ;	Chosen strategy is simple_byte
  8382  13FD  0821               	movf	??_turn_on_led+1,w
  8383  13FE  3A00               	xorlw	0	; case 0
  8384  13FF  1903               	skipnz
  8385  1400  2C02               	goto	l5139
  8386  1401  2C19               	goto	l562
  8387  1402                     l5139:	
  8388                           
  8389                           ; Switch size 1, requested type "simple"
  8390                           ; Number of cases is 7, Range of values is 0 to 6
  8391                           ; switch strategies available:
  8392                           ; Name         Instructions Cycles
  8393                           ; simple_byte           22    12 (average)
  8394                           ; direct_byte           29     8 (fixed)
  8395                           ; jumptable            260     6 (fixed)
  8396                           ;	Chosen strategy is simple_byte
  8397  1402  0820               	movf	??_turn_on_led,w
  8398  1403  3A00               	xorlw	0	; case 0
  8399  1404  1903               	skipnz
  8400  1405  2BE7               	goto	l554
  8401  1406  3A01               	xorlw	1	; case 1
  8402  1407  1903               	skipnz
  8403  1408  2BE9               	goto	l556
  8404  1409  3A03               	xorlw	3	; case 2
  8405  140A  1903               	skipnz
  8406  140B  2BEB               	goto	l557
  8407  140C  3A01               	xorlw	1	; case 3
  8408  140D  1903               	skipnz
  8409  140E  2BED               	goto	l558
  8410  140F  3A07               	xorlw	7	; case 4
  8411  1410  1903               	skipnz
  8412  1411  2BF0               	goto	l559
  8413  1412  3A01               	xorlw	1	; case 5
  8414  1413  1903               	skipnz
  8415  1414  2BF3               	goto	l560
  8416  1415  3A03               	xorlw	3	; case 6
  8417  1416  1903               	skipnz
  8418  1417  2BF6               	goto	l561
  8419  1418  2C19               	goto	l562
  8420  1419                     l562:	
  8421  1419  0008               	return
  8422  141A                     __end_of_turn_on_led:	
  8423                           
  8424                           	psect	text31
  8425  130A                     __ptext31:	
  8426 ;; *************** function _play_tone *****************
  8427 ;; Defined at:
  8428 ;;		line 755 in file "games.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  tone_period     2    0[BANK0 ] unsigned int 
  8431 ;;  duration_8ms    1    2[BANK0 ] unsigned char 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      void 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8443 ;;      Params:         0       3       0       0       0
  8444 ;;      Locals:         0       0       0       0       0
  8445 ;;      Temps:          0       2       0       0       0
  8446 ;;      Totals:         0       5       0       0       0
  8447 ;;Total ram usage:        5 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    1
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_play_pattern
  8454 ;;		_check_for_match
  8455 ;;		_end_screen
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           
  8460                           ;psect for function _play_tone
  8461  130A                     _play_tone:	
  8462  130A                     l4095:	
  8463                           ;incstack = 0
  8464                           ; Regs used in _play_tone: [wreg+status,2+status,0]
  8465                           
  8466                           
  8467                           ;games.c: 756:     tone_delay = tone_period;
  8468  130A  1283               	bcf	3,5	;RP0=0, select bank0
  8469  130B  1303               	bcf	3,6	;RP1=0, select bank0
  8470  130C  0821               	movf	play_tone@tone_period+1,w
  8471  130D  00F7               	movwf	_tone_delay+1
  8472  130E  0820               	movf	play_tone@tone_period,w
  8473  130F  00F6               	movwf	_tone_delay
  8474  1310                     l4097:	
  8475                           
  8476                           ;games.c: 757:     CCPR2 = TMR1+tone_period;
  8477  1310  0820               	movf	play_tone@tone_period,w
  8478  1311  070E               	addwf	14,w	;volatile
  8479  1312  00A3               	movwf	??_play_tone
  8480  1313  0821               	movf	play_tone@tone_period+1,w
  8481  1314  1803               	skipnc
  8482  1315  0A21               	incf	play_tone@tone_period+1,w
  8483  1316  070F               	addwf	15,w	;volatile
  8484  1317  00A4               	movwf	??_play_tone+1
  8485  1318  0823               	movf	??_play_tone,w
  8486  1319  009B               	movwf	27	;volatile
  8487  131A  0824               	movf	??_play_tone+1,w
  8488  131B  009C               	movwf	28	;volatile
  8489  131C                     l4099:	
  8490                           
  8491                           ;games.c: 758:     CCP2IF = 0;
  8492  131C  100D               	bcf	13,0	;volatile
  8493  131D                     l4101:	
  8494                           
  8495                           ;games.c: 759:     CCP2IE = 1;
  8496  131D  1683               	bsf	3,5	;RP0=1, select bank1
  8497  131E  1303               	bcf	3,6	;RP1=0, select bank1
  8498  131F  140D               	bsf	13,0	;volatile
  8499  1320                     l4103:	
  8500                           
  8501                           ;games.c: 760:     event_delay_count = duration_8ms;
  8502  1320  1283               	bcf	3,5	;RP0=0, select bank0
  8503  1321  1303               	bcf	3,6	;RP1=0, select bank0
  8504  1322  0822               	movf	play_tone@duration_8ms,w
  8505  1323  00A3               	movwf	??_play_tone
  8506  1324  0823               	movf	??_play_tone,w
  8507  1325  00FA               	movwf	_event_delay_count
  8508  1326                     l4105:	
  8509                           
  8510                           ;games.c: 761:     event_enabled = 0;
  8511  1326  01E8               	clrf	_event_enabled
  8512  1327                     l4107:	
  8513                           ;games.c: 762:     while(event_enabled == 0);
  8514                           
  8515  1327  0868               	movf	_event_enabled,w
  8516  1328  1903               	btfsc	3,2
  8517  1329  2B2B               	goto	u3071
  8518  132A  2B2C               	goto	u3070
  8519  132B                     u3071:	
  8520  132B  2B27               	goto	l4107
  8521  132C                     u3070:	
  8522  132C                     l549:	
  8523                           
  8524                           ;games.c: 763:     CCP2IE = 0;
  8525  132C  1683               	bsf	3,5	;RP0=1, select bank1
  8526  132D  1303               	bcf	3,6	;RP1=0, select bank1
  8527  132E  100D               	bcf	13,0	;volatile
  8528  132F                     l550:	
  8529  132F  0008               	return
  8530  1330                     __end_of_play_tone:	
  8531                           
  8532                           	psect	text32
  8533  13AF                     __ptext32:	
  8534 ;; *************** function _lcd_puts *****************
  8535 ;; Defined at:
  8536 ;;		line 128 in file "lcd4bits.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  string          2    8[BANK0 ] PTR const unsigned char 
  8539 ;;		 -> STR_35(7), STR_34(6), STR_33(12), STR_32(13), 
  8540 ;;		 -> STR_31(17), STR_30(16), STR_29(11), STR_28(14), 
  8541 ;;		 -> STR_27(13), STR_26(13), STR_25(13), STR_24(13), 
  8542 ;;		 -> STR_23(13), STR_22(17), STR_21(14), STR_20(9), 
  8543 ;;		 -> STR_19(12), STR_18(16), STR_17(14), STR_16(13), 
  8544 ;;		 -> STR_15(14), STR_14(14), STR_13(16), STR_12(14), 
  8545 ;;		 -> STR_11(14), STR_10(14), STR_9(13), STR_8(14), 
  8546 ;;		 -> STR_7(17), STR_6(14), STR_5(14), STR_4(14), 
  8547 ;;		 -> STR_3(13), STR_2(16), STR_1(16), 
  8548 ;;  port            2   10[BANK0 ] PTR unsigned char 
  8549 ;;		 -> PORTD(1), PORTA(1), 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8561 ;;      Params:         0       4       0       0       0
  8562 ;;      Locals:         0       0       0       0       0
  8563 ;;      Temps:          0       1       0       0       0
  8564 ;;      Totals:         0       5       0       0       0
  8565 ;;Total ram usage:        5 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    3
  8568 ;; This function calls:
  8569 ;;		_lcd_write
  8570 ;; This function is called by:
  8571 ;;		_main
  8572 ;;		_simon_says_check_input
  8573 ;;		_play_pattern
  8574 ;;		_display_simon_says_scoreboard
  8575 ;;		_simon_says_title_screen
  8576 ;;		_concentration_title_screen
  8577 ;;		_display_concentration_scoreboard
  8578 ;;		_end_screen
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function _lcd_puts
  8584  13AF                     _lcd_puts:	
  8585  13AF                     l3885:	
  8586                           ;incstack = 0
  8587                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8588                           
  8589                           
  8590                           ;lcd4bits.c: 129:     while (*string != 0) {
  8591  13AF  2BCE               	goto	l3891
  8592  13B0                     l3887:	
  8593                           
  8594                           ;lcd4bits.c: 130:         lcd_write(0x10, *string++, port);
  8595  13B0  0829               	movf	lcd_puts@string+1,w
  8596  13B1  00FF               	movwf	btemp+1
  8597  13B2  0828               	movf	lcd_puts@string,w
  8598  13B3  0084               	movwf	4
  8599  13B4  120A  118A  2300  160A  118A  	fcall	stringtab
  8600  13B9  00AC               	movwf	??_lcd_puts
  8601  13BA  082C               	movf	??_lcd_puts,w
  8602  13BB  00A2               	movwf	lcd_write@CmdChar
  8603  13BC  082A               	movf	lcd_puts@port,w
  8604  13BD  00A3               	movwf	lcd_write@port
  8605  13BE  082B               	movf	lcd_puts@port+1,w
  8606  13BF  00A4               	movwf	lcd_write@port+1
  8607  13C0  3010               	movlw	16
  8608  13C1  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  8609  13C6                     l3889:	
  8610  13C6  3001               	movlw	1
  8611  13C7  1283               	bcf	3,5	;RP0=0, select bank0
  8612  13C8  1303               	bcf	3,6	;RP1=0, select bank0
  8613  13C9  07A8               	addwf	lcd_puts@string,f
  8614  13CA  1803               	skipnc
  8615  13CB  0AA9               	incf	lcd_puts@string+1,f
  8616  13CC  3000               	movlw	0
  8617  13CD  07A9               	addwf	lcd_puts@string+1,f
  8618  13CE                     l3891:	
  8619                           
  8620                           ;lcd4bits.c: 129:     while (*string != 0) {
  8621  13CE  1283               	bcf	3,5	;RP0=0, select bank0
  8622  13CF  1303               	bcf	3,6	;RP1=0, select bank0
  8623  13D0  0829               	movf	lcd_puts@string+1,w
  8624  13D1  00FF               	movwf	btemp+1
  8625  13D2  0828               	movf	lcd_puts@string,w
  8626  13D3  0084               	movwf	4
  8627  13D4  120A  118A  2300  160A  118A  	fcall	stringtab
  8628  13D9  3A00               	xorlw	0
  8629  13DA  1D03               	skipz
  8630  13DB  2BDD               	goto	u2711
  8631  13DC  2BDE               	goto	u2710
  8632  13DD                     u2711:	
  8633  13DD  2BB0               	goto	l3887
  8634  13DE                     u2710:	
  8635  13DE                     l35:	
  8636  13DE  0008               	return
  8637  13DF                     __end_of_lcd_puts:	
  8638                           
  8639                           	psect	text33
  8640  12EC                     __ptext33:	
  8641 ;; *************** function _lcd_goto *****************
  8642 ;; Defined at:
  8643 ;;		line 145 in file "lcd4bits.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  position        1    wreg     unsigned char 
  8646 ;;  port            2    8[BANK0 ] PTR unsigned char 
  8647 ;;		 -> PORTD(1), PORTA(1), 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  position        1   11[BANK0 ] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8659 ;;      Params:         0       2       0       0       0
  8660 ;;      Locals:         0       1       0       0       0
  8661 ;;      Temps:          0       1       0       0       0
  8662 ;;      Totals:         0       4       0       0       0
  8663 ;;Total ram usage:        4 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    3
  8666 ;; This function calls:
  8667 ;;		_DelayMs
  8668 ;;		_lcd_write
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;;		_simon_says_check_input
  8672 ;;		_countdown
  8673 ;;		_display_simon_says_scoreboard
  8674 ;;		_simon_says_title_screen
  8675 ;;		_concentration_title_screen
  8676 ;;		_display_concentration_scoreboard
  8677 ;;		_display_concentration_gameboard
  8678 ;;		_concentration_gameboard_init
  8679 ;;		_update_cursor
  8680 ;;		_toggle_cursor
  8681 ;;		_end_screen
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           
  8686                           ;psect for function _lcd_goto
  8687  12EC                     _lcd_goto:	
  8688                           
  8689                           ;incstack = 0
  8690                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8691                           ;lcd_goto@position stored from wreg
  8692  12EC  1283               	bcf	3,5	;RP0=0, select bank0
  8693  12ED  1303               	bcf	3,6	;RP1=0, select bank0
  8694  12EE  00AB               	movwf	lcd_goto@position
  8695  12EF                     l3895:	
  8696                           
  8697                           ;lcd4bits.c: 146:     lcd_write(0x00, 0x80 + position, port);
  8698  12EF  082B               	movf	lcd_goto@position,w
  8699  12F0  3E80               	addlw	128
  8700  12F1  00AA               	movwf	??_lcd_goto
  8701  12F2  082A               	movf	??_lcd_goto,w
  8702  12F3  00A2               	movwf	lcd_write@CmdChar
  8703  12F4  0828               	movf	lcd_goto@port,w
  8704  12F5  00A3               	movwf	lcd_write@port
  8705  12F6  0829               	movf	lcd_goto@port+1,w
  8706  12F7  00A4               	movwf	lcd_write@port+1
  8707  12F8  3000               	movlw	0
  8708  12F9  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  8709  12FE                     l3897:	
  8710                           
  8711                           ;lcd4bits.c: 148:     DelayMs(2);
  8712  12FE  3002               	movlw	2
  8713  12FF  1283               	bcf	3,5	;RP0=0, select bank0
  8714  1300  1303               	bcf	3,6	;RP1=0, select bank0
  8715  1301  00A0               	movwf	DelayMs@millis
  8716  1302  3000               	movlw	0
  8717  1303  00A1               	movwf	DelayMs@millis+1
  8718  1304  160A  118A  229F  160A  118A  	fcall	_DelayMs
  8719  1309                     l41:	
  8720  1309  0008               	return
  8721  130A                     __end_of_lcd_goto:	
  8722                           
  8723                           	psect	text34
  8724  12B8                     __ptext34:	
  8725 ;; *************** function _lcd_clear *****************
  8726 ;; Defined at:
  8727 ;;		line 122 in file "lcd4bits.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  port            2    8[BANK0 ] PTR unsigned char 
  8730 ;;		 -> PORTD(1), PORTA(1), 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      void 
  8735 ;; Registers used:
  8736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8742 ;;      Params:         0       2       0       0       0
  8743 ;;      Locals:         0       0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0
  8745 ;;      Totals:         0       2       0       0       0
  8746 ;;Total ram usage:        2 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    3
  8749 ;; This function calls:
  8750 ;;		_DelayMs
  8751 ;;		_lcd_write
  8752 ;; This function is called by:
  8753 ;;		_lcd_init
  8754 ;;		_main
  8755 ;;		_simon_says_check_input
  8756 ;;		_play_pattern
  8757 ;;		_countdown
  8758 ;;		_display_simon_says_scoreboard
  8759 ;;		_simon_says_title_screen
  8760 ;;		_concentration_title_screen
  8761 ;;		_display_concentration_gameboard
  8762 ;;		_concentration_gameboard_init
  8763 ;;		_end_screen
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           
  8768                           ;psect for function _lcd_clear
  8769  12B8                     _lcd_clear:	
  8770  12B8                     l3881:	
  8771                           ;incstack = 0
  8772                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8773                           
  8774                           
  8775                           ;lcd4bits.c: 123:     lcd_write(0x00, 0x01, port);
  8776  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  8777  12B9  1303               	bcf	3,6	;RP1=0, select bank0
  8778  12BA  01A2               	clrf	lcd_write@CmdChar
  8779  12BB  0AA2               	incf	lcd_write@CmdChar,f
  8780  12BC  0828               	movf	lcd_clear@port,w
  8781  12BD  00A3               	movwf	lcd_write@port
  8782  12BE  0829               	movf	lcd_clear@port+1,w
  8783  12BF  00A4               	movwf	lcd_write@port+1
  8784  12C0  3000               	movlw	0
  8785  12C1  160A  118A  24FA  160A  118A  	fcall	_lcd_write
  8786  12C6                     l3883:	
  8787                           
  8788                           ;lcd4bits.c: 124:     DelayMs(2);
  8789  12C6  3002               	movlw	2
  8790  12C7  1283               	bcf	3,5	;RP0=0, select bank0
  8791  12C8  1303               	bcf	3,6	;RP1=0, select bank0
  8792  12C9  00A0               	movwf	DelayMs@millis
  8793  12CA  3000               	movlw	0
  8794  12CB  00A1               	movwf	DelayMs@millis+1
  8795  12CC  160A  118A  229F  160A  118A  	fcall	_DelayMs
  8796  12D1                     l29:	
  8797  12D1  0008               	return
  8798  12D2                     __end_of_lcd_clear:	
  8799                           
  8800                           	psect	text35
  8801  14FA                     __ptext35:	
  8802 ;; *************** function _lcd_write *****************
  8803 ;; Defined at:
  8804 ;;		line 110 in file "lcd4bits.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  mode            1    wreg     unsigned char 
  8807 ;;  CmdChar         1    2[BANK0 ] unsigned char 
  8808 ;;  port            2    3[BANK0 ] PTR unsigned char 
  8809 ;;		 -> PORTD(1), PORTA(1), 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;  mode            1    7[BANK0 ] unsigned char 
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  1    wreg      void 
  8814 ;; Registers used:
  8815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8821 ;;      Params:         0       3       0       0       0
  8822 ;;      Locals:         0       1       0       0       0
  8823 ;;      Temps:          0       2       0       0       0
  8824 ;;      Totals:         0       6       0       0       0
  8825 ;;Total ram usage:        6 bytes
  8826 ;; Hardware stack levels used:    1
  8827 ;; Hardware stack levels required when called:    2
  8828 ;; This function calls:
  8829 ;;		_Delay20us
  8830 ;; This function is called by:
  8831 ;;		_lcd_clear
  8832 ;;		_lcd_puts
  8833 ;;		_lcd_putch
  8834 ;;		_lcd_goto
  8835 ;;		_lcd_init
  8836 ;;		_lcd_set_custom_char
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           
  8841                           ;psect for function _lcd_write
  8842  14FA                     _lcd_write:	
  8843                           
  8844                           ;incstack = 0
  8845                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8846                           ;lcd_write@mode stored from wreg
  8847  14FA  1283               	bcf	3,5	;RP0=0, select bank0
  8848  14FB  1303               	bcf	3,6	;RP1=0, select bank0
  8849  14FC  00A7               	movwf	lcd_write@mode
  8850  14FD                     l3871:	
  8851                           
  8852                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  8853  14FD  0822               	movf	lcd_write@CmdChar,w
  8854  14FE  00A5               	movwf	??_lcd_write
  8855  14FF  3004               	movlw	4
  8856  1500                     u2705:	
  8857  1500  1003               	clrc
  8858  1501  0CA5               	rrf	??_lcd_write,f
  8859  1502  3EFF               	addlw	-1
  8860  1503  1D03               	skipz
  8861  1504  2D00               	goto	u2705
  8862  1505  0825               	movf	??_lcd_write,w
  8863  1506  3E20               	addlw	32
  8864  1507  0427               	iorwf	lcd_write@mode,w
  8865  1508  00A6               	movwf	??_lcd_write+1
  8866  1509  0823               	movf	lcd_write@port,w
  8867  150A  0084               	movwf	4
  8868  150B  1783               	bsf	3,7
  8869  150C  1C24               	btfss	lcd_write@port+1,0
  8870  150D  1383               	bcf	3,7
  8871  150E  0826               	movf	??_lcd_write+1,w
  8872  150F  0080               	movwf	0
  8873  1510                     l3873:	
  8874                           
  8875                           ;lcd4bits.c: 112:     Delay20us();
  8876  1510  160A  118A  227F  160A  118A  	fcall	_Delay20us
  8877  1515                     l3875:	
  8878                           
  8879                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  8880  1515  1283               	bcf	3,5	;RP0=0, select bank0
  8881  1516  1303               	bcf	3,6	;RP1=0, select bank0
  8882  1517  0823               	movf	lcd_write@port,w
  8883  1518  0084               	movwf	4
  8884  1519  1783               	bsf	3,7
  8885  151A  1C24               	btfss	lcd_write@port+1,0
  8886  151B  1383               	bcf	3,7
  8887  151C  0800               	movf	0,w
  8888  151D  39DF               	andlw	223
  8889  151E  00A5               	movwf	??_lcd_write
  8890  151F  0823               	movf	lcd_write@port,w
  8891  1520  0084               	movwf	4
  8892  1521  1783               	bsf	3,7
  8893  1522  1C24               	btfss	lcd_write@port+1,0
  8894  1523  1383               	bcf	3,7
  8895  1524  0825               	movf	??_lcd_write,w
  8896  1525  0080               	movwf	0
  8897  1526                     l3877:	
  8898                           
  8899                           ;lcd4bits.c: 114:     *port = (mode|((CmdChar&0x0F)+0x20));
  8900  1526  0822               	movf	lcd_write@CmdChar,w
  8901  1527  390F               	andlw	15
  8902  1528  3E20               	addlw	32
  8903  1529  0427               	iorwf	lcd_write@mode,w
  8904  152A  00A5               	movwf	??_lcd_write
  8905  152B  0823               	movf	lcd_write@port,w
  8906  152C  0084               	movwf	4
  8907  152D  1783               	bsf	3,7
  8908  152E  1C24               	btfss	lcd_write@port+1,0
  8909  152F  1383               	bcf	3,7
  8910  1530  0825               	movf	??_lcd_write,w
  8911  1531  0080               	movwf	0
  8912  1532                     l3879:	
  8913                           
  8914                           ;lcd4bits.c: 115:     Delay20us();
  8915  1532  160A  118A  227F  160A  118A  	fcall	_Delay20us
  8916                           
  8917                           ;lcd4bits.c: 116:     *port = (*port)&(~0x20);
  8918  1537  1283               	bcf	3,5	;RP0=0, select bank0
  8919  1538  1303               	bcf	3,6	;RP1=0, select bank0
  8920  1539  0823               	movf	lcd_write@port,w
  8921  153A  0084               	movwf	4
  8922  153B  1783               	bsf	3,7
  8923  153C  1C24               	btfss	lcd_write@port+1,0
  8924  153D  1383               	bcf	3,7
  8925  153E  0800               	movf	0,w
  8926  153F  39DF               	andlw	223
  8927  1540  00A5               	movwf	??_lcd_write
  8928  1541  0823               	movf	lcd_write@port,w
  8929  1542  0084               	movwf	4
  8930  1543  1783               	bsf	3,7
  8931  1544  1C24               	btfss	lcd_write@port+1,0
  8932  1545  1383               	bcf	3,7
  8933  1546  0825               	movf	??_lcd_write,w
  8934  1547  0080               	movwf	0
  8935  1548                     l26:	
  8936  1548  0008               	return
  8937  1549                     __end_of_lcd_write:	
  8938                           
  8939                           	psect	text36
  8940  127F                     __ptext36:	
  8941 ;; *************** function _Delay20us *****************
  8942 ;; Defined at:
  8943 ;;		line 99 in file "lcd4bits.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;		None
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  next            1    1[BANK0 ] unsigned char 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		wreg, status,2, status,0
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8957 ;;      Params:         0       0       0       0       0
  8958 ;;      Locals:         0       1       0       0       0
  8959 ;;      Temps:          0       1       0       0       0
  8960 ;;      Totals:         0       2       0       0       0
  8961 ;;Total ram usage:        2 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; Hardware stack levels required when called:    1
  8964 ;; This function calls:
  8965 ;;		Nothing
  8966 ;; This function is called by:
  8967 ;;		_lcd_write
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           
  8972                           ;psect for function _Delay20us
  8973  127F                     _Delay20us:	
  8974  127F                     l3851:	
  8975                           ;incstack = 0
  8976                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  8977                           
  8978                           
  8979                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  8980  127F  1283               	bcf	3,5	;RP0=0, select bank0
  8981  1280  1303               	bcf	3,6	;RP1=0, select bank0
  8982  1281  01A1               	clrf	Delay20us@next
  8983  1282                     l3857:	
  8984  1282  3001               	movlw	1
  8985  1283  00A0               	movwf	??_Delay20us
  8986  1284  0820               	movf	??_Delay20us,w
  8987  1285  07A1               	addwf	Delay20us@next,f
  8988  1286                     l3859:	
  8989  1286  3008               	movlw	8
  8990  1287  0221               	subwf	Delay20us@next,w
  8991  1288  1C03               	skipc
  8992  1289  2A8B               	goto	u2671
  8993  128A  2A8C               	goto	u2670
  8994  128B                     u2671:	
  8995  128B  2A82               	goto	l3857
  8996  128C                     u2670:	
  8997  128C                     l23:	
  8998  128C  0008               	return
  8999  128D                     __end_of_Delay20us:	
  9000                           
  9001                           	psect	text37
  9002  129F                     __ptext37:	
  9003 ;; *************** function _DelayMs *****************
  9004 ;; Defined at:
  9005 ;;		line 86 in file "lcd4bits.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  millis          2    0[BANK0 ] unsigned int 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9019 ;;      Params:         0       2       0       0       0
  9020 ;;      Locals:         0       0       0       0       0
  9021 ;;      Temps:          0       0       0       0       0
  9022 ;;      Totals:         0       2       0       0       0
  9023 ;;Total ram usage:        2 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:    1
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_lcd_clear
  9030 ;;		_lcd_goto
  9031 ;;		_lcd_init
  9032 ;;		_main
  9033 ;;		_simon_says_get_input
  9034 ;;		_play_pattern
  9035 ;;		_generate_pattern
  9036 ;;		_countdown
  9037 ;;		_simon_says_title_screen
  9038 ;;		_concentration_game_end
  9039 ;;		_concentration_title_screen
  9040 ;;		_randomize_gameboard
  9041 ;;		_check_for_match
  9042 ;;		_concentration_game_loop
  9043 ;;		_end_screen
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           
  9048                           ;psect for function _DelayMs
  9049  129F                     _DelayMs:	
  9050  129F                     l3861:	
  9051                           ;incstack = 0
  9052                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  9053                           
  9054                           
  9055                           ;lcd4bits.c: 87:     while (millis != 0) {
  9056  129F  2AAF               	goto	l3869
  9057  12A0                     l3863:	
  9058                           
  9059                           ;lcd4bits.c: 88:         TMR0 = 100;
  9060  12A0  3064               	movlw	100
  9061  12A1  0081               	movwf	1	;volatile
  9062  12A2                     l3865:	
  9063                           
  9064                           ;lcd4bits.c: 89:         T0IF = 0;
  9065  12A2  110B               	bcf	11,2	;volatile
  9066  12A3                     l14:	
  9067                           ;lcd4bits.c: 90:         while(T0IF == 0);
  9068                           
  9069  12A3  1D0B               	btfss	11,2	;volatile
  9070  12A4  2AA6               	goto	u2681
  9071  12A5  2AA7               	goto	u2680
  9072  12A6                     u2681:	
  9073  12A6  2AA3               	goto	l14
  9074  12A7                     u2680:	
  9075  12A7                     l3867:	
  9076                           
  9077                           ;lcd4bits.c: 91:         millis--;
  9078  12A7  3001               	movlw	1
  9079  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  9080  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  9081  12AA  02A0               	subwf	DelayMs@millis,f
  9082  12AB  3000               	movlw	0
  9083  12AC  1C03               	skipc
  9084  12AD  03A1               	decf	DelayMs@millis+1,f
  9085  12AE  02A1               	subwf	DelayMs@millis+1,f
  9086  12AF                     l3869:	
  9087                           
  9088                           ;lcd4bits.c: 87:     while (millis != 0) {
  9089  12AF  1283               	bcf	3,5	;RP0=0, select bank0
  9090  12B0  1303               	bcf	3,6	;RP1=0, select bank0
  9091  12B1  0820               	movf	DelayMs@millis,w
  9092  12B2  0421               	iorwf	DelayMs@millis+1,w
  9093  12B3  1D03               	btfss	3,2
  9094  12B4  2AB6               	goto	u2691
  9095  12B5  2AB7               	goto	u2690
  9096  12B6                     u2691:	
  9097  12B6  2AA0               	goto	l3863
  9098  12B7                     u2690:	
  9099  12B7                     l18:	
  9100  12B7  0008               	return
  9101  12B8                     __end_of_DelayMs:	
  9102                           
  9103                           	psect	text38
  9104  15F0                     __ptext38:	
  9105 ;; *************** function ___awmod *****************
  9106 ;; Defined at:
  9107 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  divisor         2    0[BANK0 ] int 
  9110 ;;  dividend        2    2[BANK0 ] int 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  sign            1    6[BANK0 ] unsigned char 
  9113 ;;  counter         1    5[BANK0 ] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  2    0[BANK0 ] int 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9123 ;;      Params:         0       4       0       0       0
  9124 ;;      Locals:         0       2       0       0       0
  9125 ;;      Temps:          0       1       0       0       0
  9126 ;;      Totals:         0       7       0       0       0
  9127 ;;Total ram usage:        7 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    1
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_display_simon_says_scoreboard
  9134 ;;		_display_concentration_scoreboard
  9135 ;;		_end_screen
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           
  9140                           ;psect for function ___awmod
  9141  15F0                     ___awmod:	
  9142  15F0                     l3953:	
  9143                           ;incstack = 0
  9144                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9145                           
  9146  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  9147  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  9148  15F2  01A6               	clrf	___awmod@sign
  9149  15F3                     l3955:	
  9150  15F3  1FA3               	btfss	___awmod@dividend+1,7
  9151  15F4  2DF6               	goto	u2821
  9152  15F5  2DF7               	goto	u2820
  9153  15F6                     u2821:	
  9154  15F6  2DFE               	goto	l3961
  9155  15F7                     u2820:	
  9156  15F7                     l3957:	
  9157  15F7  09A2               	comf	___awmod@dividend,f
  9158  15F8  09A3               	comf	___awmod@dividend+1,f
  9159  15F9  0AA2               	incf	___awmod@dividend,f
  9160  15FA  1903               	skipnz
  9161  15FB  0AA3               	incf	___awmod@dividend+1,f
  9162  15FC                     l3959:	
  9163  15FC  01A6               	clrf	___awmod@sign
  9164  15FD  0AA6               	incf	___awmod@sign,f
  9165  15FE                     l3961:	
  9166  15FE  1FA1               	btfss	___awmod@divisor+1,7
  9167  15FF  2E01               	goto	u2831
  9168  1600  2E02               	goto	u2830
  9169  1601                     u2831:	
  9170  1601  2E07               	goto	l3965
  9171  1602                     u2830:	
  9172  1602                     l3963:	
  9173  1602  09A0               	comf	___awmod@divisor,f
  9174  1603  09A1               	comf	___awmod@divisor+1,f
  9175  1604  0AA0               	incf	___awmod@divisor,f
  9176  1605  1903               	skipnz
  9177  1606  0AA1               	incf	___awmod@divisor+1,f
  9178  1607                     l3965:	
  9179  1607  0820               	movf	___awmod@divisor,w
  9180  1608  0421               	iorwf	___awmod@divisor+1,w
  9181  1609  1903               	btfsc	3,2
  9182  160A  2E0C               	goto	u2841
  9183  160B  2E0D               	goto	u2840
  9184  160C                     u2841:	
  9185  160C  2E3C               	goto	l3983
  9186  160D                     u2840:	
  9187  160D                     l3967:	
  9188  160D  01A5               	clrf	___awmod@counter
  9189  160E  0AA5               	incf	___awmod@counter,f
  9190  160F  2E1B               	goto	l3973
  9191  1610                     l3969:	
  9192  1610  3001               	movlw	1
  9193  1611                     u2855:	
  9194  1611  1003               	clrc
  9195  1612  0DA0               	rlf	___awmod@divisor,f
  9196  1613  0DA1               	rlf	___awmod@divisor+1,f
  9197  1614  3EFF               	addlw	-1
  9198  1615  1D03               	skipz
  9199  1616  2E11               	goto	u2855
  9200  1617                     l3971:	
  9201  1617  3001               	movlw	1
  9202  1618  00A4               	movwf	??___awmod
  9203  1619  0824               	movf	??___awmod,w
  9204  161A  07A5               	addwf	___awmod@counter,f
  9205  161B                     l3973:	
  9206  161B  1FA1               	btfss	___awmod@divisor+1,7
  9207  161C  2E1E               	goto	u2861
  9208  161D  2E1F               	goto	u2860
  9209  161E                     u2861:	
  9210  161E  2E10               	goto	l3969
  9211  161F                     u2860:	
  9212  161F                     l3975:	
  9213  161F  0821               	movf	___awmod@divisor+1,w
  9214  1620  0223               	subwf	___awmod@dividend+1,w
  9215  1621  1D03               	skipz
  9216  1622  2E25               	goto	u2875
  9217  1623  0820               	movf	___awmod@divisor,w
  9218  1624  0222               	subwf	___awmod@dividend,w
  9219  1625                     u2875:	
  9220  1625  1C03               	skipc
  9221  1626  2E28               	goto	u2871
  9222  1627  2E29               	goto	u2870
  9223  1628                     u2871:	
  9224  1628  2E2F               	goto	l3979
  9225  1629                     u2870:	
  9226  1629                     l3977:	
  9227  1629  0820               	movf	___awmod@divisor,w
  9228  162A  02A2               	subwf	___awmod@dividend,f
  9229  162B  0821               	movf	___awmod@divisor+1,w
  9230  162C  1C03               	skipc
  9231  162D  03A3               	decf	___awmod@dividend+1,f
  9232  162E  02A3               	subwf	___awmod@dividend+1,f
  9233  162F                     l3979:	
  9234  162F  3001               	movlw	1
  9235  1630                     u2885:	
  9236  1630  1003               	clrc
  9237  1631  0CA1               	rrf	___awmod@divisor+1,f
  9238  1632  0CA0               	rrf	___awmod@divisor,f
  9239  1633  3EFF               	addlw	-1
  9240  1634  1D03               	skipz
  9241  1635  2E30               	goto	u2885
  9242  1636                     l3981:	
  9243  1636  3001               	movlw	1
  9244  1637  02A5               	subwf	___awmod@counter,f
  9245  1638  1D03               	btfss	3,2
  9246  1639  2E3B               	goto	u2891
  9247  163A  2E3C               	goto	u2890
  9248  163B                     u2891:	
  9249  163B  2E1F               	goto	l3975
  9250  163C                     u2890:	
  9251  163C                     l3983:	
  9252  163C  0826               	movf	___awmod@sign,w
  9253  163D  1903               	btfsc	3,2
  9254  163E  2E40               	goto	u2901
  9255  163F  2E41               	goto	u2900
  9256  1640                     u2901:	
  9257  1640  2E46               	goto	l3987
  9258  1641                     u2900:	
  9259  1641                     l3985:	
  9260  1641  09A2               	comf	___awmod@dividend,f
  9261  1642  09A3               	comf	___awmod@dividend+1,f
  9262  1643  0AA2               	incf	___awmod@dividend,f
  9263  1644  1903               	skipnz
  9264  1645  0AA3               	incf	___awmod@dividend+1,f
  9265  1646                     l3987:	
  9266  1646  0823               	movf	___awmod@dividend+1,w
  9267  1647  00A1               	movwf	?___awmod+1
  9268  1648  0822               	movf	___awmod@dividend,w
  9269  1649  00A0               	movwf	?___awmod
  9270  164A                     l843:	
  9271  164A  0008               	return
  9272  164B                     __end_of___awmod:	
  9273                           
  9274                           	psect	text39
  9275  08CF                     __ptext39:	
  9276 ;; *************** function _interrupt_handler *****************
  9277 ;; Defined at:
  9278 ;;		line 840 in file "games.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;		None
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  current_anal    1    5[COMMON] unsigned char 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9292 ;;      Params:         0       0       0       0       0
  9293 ;;      Locals:         1       0       0       0       0
  9294 ;;      Temps:          5       0       0       0       0
  9295 ;;      Totals:         6       0       0       0       0
  9296 ;;Total ram usage:        6 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		Interrupt level 1
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           
  9306                           ;psect for function _interrupt_handler
  9307  08CF                     _interrupt_handler:	
  9308  08CF                     i1l3561:	
  9309                           
  9310                           ;games.c: 841:     if((CCP2IF==1) && (CCP2IE==1)) {
  9311  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  9312  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  9313  08D1  1C0D               	btfss	13,0	;volatile
  9314  08D2  28D4               	goto	u259_21
  9315  08D3  28D5               	goto	u259_20
  9316  08D4                     u259_21:	
  9317  08D4  28EB               	goto	i1l573
  9318  08D5                     u259_20:	
  9319  08D5                     i1l3563:	
  9320  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  9321  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  9322  08D7  1C0D               	btfss	13,0	;volatile
  9323  08D8  28DA               	goto	u260_21
  9324  08D9  28DB               	goto	u260_20
  9325  08DA                     u260_21:	
  9326  08DA  28EB               	goto	i1l573
  9327  08DB                     u260_20:	
  9328  08DB                     i1l3565:	
  9329                           
  9330                           ;games.c: 842:         CCPR2 += tone_delay;
  9331  08DB  0876               	movf	_tone_delay,w	;volatile
  9332  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  9333  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  9334  08DE  079B               	addwf	27,f	;volatile
  9335  08DF  1803               	skipnc
  9336  08E0  0A9C               	incf	28,f	;volatile
  9337  08E1  0877               	movf	_tone_delay+1,w	;volatile
  9338  08E2  079C               	addwf	28,f	;volatile
  9339  08E3                     i1l3567:	
  9340                           
  9341                           ;games.c: 843:         if(CCP2M0 == 1) {
  9342  08E3  1C1D               	btfss	29,0	;volatile
  9343  08E4  28E6               	goto	u261_21
  9344  08E5  28E7               	goto	u261_20
  9345  08E6                     u261_21:	
  9346  08E6  28E9               	goto	i1l574
  9347  08E7                     u261_20:	
  9348  08E7                     i1l3569:	
  9349                           
  9350                           ;games.c: 844:             CCP2M0 = 0;
  9351  08E7  101D               	bcf	29,0	;volatile
  9352                           
  9353                           ;games.c: 845:         } else {
  9354  08E8  28EA               	goto	i1l575
  9355  08E9                     i1l574:	
  9356                           
  9357                           ;games.c: 846:             CCP2M0 = 1;
  9358  08E9  141D               	bsf	29,0	;volatile
  9359  08EA                     i1l575:	
  9360                           ;games.c: 847:         }
  9361                           
  9362                           
  9363                           ;games.c: 848:         CCP2IF = 0;
  9364  08EA  100D               	bcf	13,0	;volatile
  9365  08EB                     i1l573:	
  9366                           ;games.c: 849:     }
  9367                           
  9368                           
  9369                           ;games.c: 850:     if(ADIF) {
  9370  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  9371  08EC  1F0C               	btfss	12,6	;volatile
  9372  08ED  28EF               	goto	u262_21
  9373  08EE  28F0               	goto	u262_20
  9374  08EF                     u262_21:	
  9375  08EF  294C               	goto	i1l576
  9376  08F0                     u262_20:	
  9377  08F0                     i1l3571:	
  9378                           
  9379                           ;games.c: 851:         char current_analog = ADCON0&0x3C;
  9380  08F0  081F               	movf	31,w	;volatile
  9381  08F1  393C               	andlw	60
  9382  08F2  00F0               	movwf	??_interrupt_handler
  9383  08F3  0870               	movf	??_interrupt_handler,w
  9384  08F4  00F5               	movwf	interrupt_handler@current_analog
  9385  08F5                     i1l3573:	
  9386                           
  9387                           ;games.c: 852:         ADCON0 &= 0xC3;
  9388  08F5  30C3               	movlw	195
  9389  08F6  00F0               	movwf	??_interrupt_handler
  9390  08F7  0870               	movf	??_interrupt_handler,w
  9391  08F8  059F               	andwf	31,f	;volatile
  9392  08F9                     i1l3575:	
  9393                           
  9394                           ;games.c: 853:         if(((current_analog) == 0x2C)||((current_analog) == 0x28)) {
  9395  08F9  302C               	movlw	44
  9396  08FA  0675               	xorwf	interrupt_handler@current_analog,w
  9397  08FB  1903               	btfsc	3,2
  9398  08FC  28FE               	goto	u263_21
  9399  08FD  28FF               	goto	u263_20
  9400  08FE                     u263_21:	
  9401  08FE  2905               	goto	i1l3579
  9402  08FF                     u263_20:	
  9403  08FF                     i1l3577:	
  9404  08FF  3028               	movlw	40
  9405  0900  0675               	xorwf	interrupt_handler@current_analog,w
  9406  0901  1D03               	btfss	3,2
  9407  0902  2904               	goto	u264_21
  9408  0903  2905               	goto	u264_20
  9409  0904                     u264_21:	
  9410  0904  2928               	goto	i1l3589
  9411  0905                     u264_20:	
  9412  0905                     i1l3579:	
  9413                           
  9414                           ;games.c: 854:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  9415  0905  081E               	movf	30,w	;volatile
  9416  0906  00E1               	movwf	_joystick_x_pos+1
  9417  0907  1683               	bsf	3,5	;RP0=1, select bank1
  9418  0908  1303               	bcf	3,6	;RP1=0, select bank1
  9419  0909  081E               	movf	30,w	;volatile
  9420  090A  1283               	bcf	3,5	;RP0=0, select bank0
  9421  090B  1303               	bcf	3,6	;RP1=0, select bank0
  9422  090C  00E0               	movwf	_joystick_x_pos
  9423                           
  9424                           ;games.c: 855:             switch(current_player) {
  9425  090D  2918               	goto	i1l3587
  9426  090E                     i1l3581:	
  9427                           
  9428                           ;games.c: 857:                     ADCON0 |= 0x24;
  9429  090E  3024               	movlw	36
  9430  090F  00F0               	movwf	??_interrupt_handler
  9431  0910  0870               	movf	??_interrupt_handler,w
  9432  0911  049F               	iorwf	31,f	;volatile
  9433                           
  9434                           ;games.c: 858:                     break;
  9435  0912  294B               	goto	i1l584
  9436  0913                     i1l3583:	
  9437                           
  9438                           ;games.c: 860:                     ADCON0 |= 0x30;
  9439  0913  3030               	movlw	48
  9440  0914  00F0               	movwf	??_interrupt_handler
  9441  0915  0870               	movf	??_interrupt_handler,w
  9442  0916  049F               	iorwf	31,f	;volatile
  9443                           
  9444                           ;games.c: 861:                     break;
  9445  0917  294B               	goto	i1l584
  9446  0918                     i1l3587:	
  9447  0918  0863               	movf	_current_player,w
  9448  0919  00F0               	movwf	??_interrupt_handler
  9449  091A  01F1               	clrf	??_interrupt_handler+1
  9450                           
  9451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9452                           ; Switch size 1, requested type "simple"
  9453                           ; Number of cases is 1, Range of values is 0 to 0
  9454                           ; switch strategies available:
  9455                           ; Name         Instructions Cycles
  9456                           ; simple_byte            4     3 (average)
  9457                           ; direct_byte           11     8 (fixed)
  9458                           ; jumptable            260     6 (fixed)
  9459                           ;	Chosen strategy is simple_byte
  9460  091B  0871               	movf	??_interrupt_handler+1,w
  9461  091C  3A00               	xorlw	0	; case 0
  9462  091D  1903               	skipnz
  9463  091E  2920               	goto	i1l5141
  9464  091F  294B               	goto	i1l584
  9465  0920                     i1l5141:	
  9466                           
  9467                           ; Switch size 1, requested type "simple"
  9468                           ; Number of cases is 2, Range of values is 0 to 1
  9469                           ; switch strategies available:
  9470                           ; Name         Instructions Cycles
  9471                           ; simple_byte            7     4 (average)
  9472                           ; direct_byte           14     8 (fixed)
  9473                           ; jumptable            260     6 (fixed)
  9474                           ;	Chosen strategy is simple_byte
  9475  0920  0870               	movf	??_interrupt_handler,w
  9476  0921  3A00               	xorlw	0	; case 0
  9477  0922  1903               	skipnz
  9478  0923  290E               	goto	i1l3581
  9479  0924  3A01               	xorlw	1	; case 1
  9480  0925  1903               	skipnz
  9481  0926  2913               	goto	i1l3583
  9482  0927  294B               	goto	i1l584
  9483  0928                     i1l3589:	
  9484                           
  9485                           ;games.c: 864:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  9486  0928  081E               	movf	30,w	;volatile
  9487  0929  00DF               	movwf	_joystick_y_pos+1
  9488  092A  1683               	bsf	3,5	;RP0=1, select bank1
  9489  092B  1303               	bcf	3,6	;RP1=0, select bank1
  9490  092C  081E               	movf	30,w	;volatile
  9491  092D  1283               	bcf	3,5	;RP0=0, select bank0
  9492  092E  1303               	bcf	3,6	;RP1=0, select bank0
  9493  092F  00DE               	movwf	_joystick_y_pos
  9494                           
  9495                           ;games.c: 865:             switch(current_player) {
  9496  0930  293B               	goto	i1l3597
  9497  0931                     i1l3591:	
  9498                           
  9499                           ;games.c: 867:                     ADCON0 |= 0x2C;
  9500  0931  302C               	movlw	44
  9501  0932  00F0               	movwf	??_interrupt_handler
  9502  0933  0870               	movf	??_interrupt_handler,w
  9503  0934  049F               	iorwf	31,f	;volatile
  9504                           
  9505                           ;games.c: 868:                     break;
  9506  0935  294B               	goto	i1l584
  9507  0936                     i1l3593:	
  9508                           
  9509                           ;games.c: 870:                     ADCON0 |= 0x28;
  9510  0936  3028               	movlw	40
  9511  0937  00F0               	movwf	??_interrupt_handler
  9512  0938  0870               	movf	??_interrupt_handler,w
  9513  0939  049F               	iorwf	31,f	;volatile
  9514                           
  9515                           ;games.c: 871:                     break;
  9516  093A  294B               	goto	i1l584
  9517  093B                     i1l3597:	
  9518  093B  0863               	movf	_current_player,w
  9519  093C  00F0               	movwf	??_interrupt_handler
  9520  093D  01F1               	clrf	??_interrupt_handler+1
  9521                           
  9522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9523                           ; Switch size 1, requested type "simple"
  9524                           ; Number of cases is 1, Range of values is 0 to 0
  9525                           ; switch strategies available:
  9526                           ; Name         Instructions Cycles
  9527                           ; simple_byte            4     3 (average)
  9528                           ; direct_byte           11     8 (fixed)
  9529                           ; jumptable            260     6 (fixed)
  9530                           ;	Chosen strategy is simple_byte
  9531  093E  0871               	movf	??_interrupt_handler+1,w
  9532  093F  3A00               	xorlw	0	; case 0
  9533  0940  1903               	skipnz
  9534  0941  2943               	goto	i1l5143
  9535  0942  294B               	goto	i1l584
  9536  0943                     i1l5143:	
  9537                           
  9538                           ; Switch size 1, requested type "simple"
  9539                           ; Number of cases is 2, Range of values is 0 to 1
  9540                           ; switch strategies available:
  9541                           ; Name         Instructions Cycles
  9542                           ; simple_byte            7     4 (average)
  9543                           ; direct_byte           14     8 (fixed)
  9544                           ; jumptable            260     6 (fixed)
  9545                           ;	Chosen strategy is simple_byte
  9546  0943  0870               	movf	??_interrupt_handler,w
  9547  0944  3A00               	xorlw	0	; case 0
  9548  0945  1903               	skipnz
  9549  0946  2931               	goto	i1l3591
  9550  0947  3A01               	xorlw	1	; case 1
  9551  0948  1903               	skipnz
  9552  0949  2936               	goto	i1l3593
  9553  094A  294B               	goto	i1l584
  9554  094B                     i1l584:	
  9555                           ;games.c: 873:         }
  9556                           
  9557                           
  9558                           ;games.c: 874:         ADIF = 0;
  9559  094B  130C               	bcf	12,6	;volatile
  9560  094C                     i1l576:	
  9561                           ;games.c: 875:     }
  9562                           
  9563                           
  9564                           ;games.c: 876:     if(TMR2IF) {
  9565  094C  1C8C               	btfss	12,1	;volatile
  9566  094D  294F               	goto	u265_21
  9567  094E  2950               	goto	u265_20
  9568  094F                     u265_21:	
  9569  094F  295A               	goto	i1l591
  9570  0950                     u265_20:	
  9571  0950                     i1l3599:	
  9572                           
  9573                           ;games.c: 877:         event_delay_count--;
  9574  0950  3001               	movlw	1
  9575  0951  02FA               	subwf	_event_delay_count,f
  9576                           
  9577                           ;games.c: 878:         if(event_delay_count == 0) {
  9578  0952  087A               	movf	_event_delay_count,w
  9579  0953  1D03               	btfss	3,2
  9580  0954  2956               	goto	u266_21
  9581  0955  2957               	goto	u266_20
  9582  0956                     u266_21:	
  9583  0956  2959               	goto	i1l590
  9584  0957                     u266_20:	
  9585  0957                     i1l3601:	
  9586                           
  9587                           ;games.c: 879:             event_enabled = 1;
  9588  0957  01E8               	clrf	_event_enabled
  9589  0958  0AE8               	incf	_event_enabled,f
  9590  0959                     i1l590:	
  9591                           ;games.c: 880:         }
  9592                           
  9593                           
  9594                           ;games.c: 881:         TMR2IF = 0;
  9595  0959  108C               	bcf	12,1	;volatile
  9596  095A                     i1l591:	
  9597  095A  0874               	movf	??_interrupt_handler+4,w
  9598  095B  008A               	movwf	10
  9599  095C  0873               	movf	??_interrupt_handler+3,w
  9600  095D  0084               	movwf	4
  9601  095E  0E72               	swapf	(??_interrupt_handler+2)^(0+4294967168),w
  9602  095F  0083               	movwf	3
  9603  0960  0EFE               	swapf	btemp,f
  9604  0961  0E7E               	swapf	btemp,w
  9605  0962  0009               	retfie
  9606  0963                     __end_of_interrupt_handler:	
  9607  007E                     btemp	set	126	;btemp
  9608  007E                     wtemp0	set	126
  9609                           
  9610                           	psect	intentry
  9611  0004                     __pintentry:	
  9612                           ;incstack = 0
  9613                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0]
  9614                           
  9615  0004                     interrupt_function:	
  9616  007E                     saved_w	set	btemp
  9617  0004  00FE               	movwf	btemp
  9618  0005  0E03               	swapf	3,w
  9619  0006  00F2               	movwf	??_interrupt_handler+2
  9620  0007  0804               	movf	4,w
  9621  0008  00F3               	movwf	??_interrupt_handler+3
  9622  0009  080A               	movf	10,w
  9623  000A  00F4               	movwf	??_interrupt_handler+4
  9624  000B  120A  158A  28CF   	ljmp	_interrupt_handler


Data Sizes:
    Strings     335
    Constant    64
    Data        11
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     57      79
    BANK1            80      2      74
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    end_screen@second_row	PTR unsigned char  size(2) Largest target is 17
		 -> STR_29(CODE[11]), STR_27(CODE[13]), STR_25(CODE[13]), STR_15(CODE[14]), 
		 -> STR_13(CODE[16]), STR_11(CODE[14]), STR_9(CODE[13]), STR_7(CODE[17]), 
		 -> STR_5(CODE[14]), 

    end_screen@first_row	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_28(CODE[14]), STR_26(CODE[13]), STR_24(CODE[13]), STR_14(CODE[14]), 
		 -> STR_12(CODE[14]), STR_10(CODE[14]), STR_8(CODE[14]), STR_6(CODE[14]), 
		 -> STR_4(CODE[14]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_set_custom_char@data	PTR const unsigned char  size(2) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_35(CODE[7]), STR_34(CODE[6]), STR_33(CODE[12]), STR_32(CODE[13]), 
		 -> STR_31(CODE[17]), STR_30(CODE[16]), STR_29(CODE[11]), STR_28(CODE[14]), 
		 -> STR_27(CODE[13]), STR_26(CODE[13]), STR_25(CODE[13]), STR_24(CODE[13]), 
		 -> STR_23(CODE[13]), STR_22(CODE[17]), STR_21(CODE[14]), STR_20(CODE[9]), 
		 -> STR_19(CODE[12]), STR_18(CODE[16]), STR_17(CODE[14]), STR_16(CODE[13]), 
		 -> STR_15(CODE[14]), STR_14(CODE[14]), STR_13(CODE[16]), STR_12(CODE[14]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_9(CODE[13]), STR_8(CODE[14]), 
		 -> STR_7(CODE[17]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[16]), STR_1(CODE[16]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_concentration_gameboard_init
    _simon_says_title_screen->_lcd_puts
    _simon_says_game_loop->_countdown
    _simon_says_game_loop->_display_simon_says_scoreboard
    _simon_says_game_loop->_play_pattern
    _simon_says_game_loop->_simon_says_check_input
    _simon_says_check_input->___awdiv
    _simon_says_get_input->_turn_on_led
    _play_pattern->___awdiv
    _generate_pattern->___awdiv
    _display_simon_says_scoreboard->_lcd_putch
    _countdown->_lcd_putch
    _simon_says_game_end->_end_screen
    _lcd_init->_lcd_clear
    _concentration_title_screen->_display_concentration_gameboard
    _concentration_title_screen->_display_concentration_scoreboard
    _concentration_gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _concentration_game_loop->_check_for_match
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_concentration_gameboard
    _check_for_match->_display_concentration_scoreboard
    _display_concentration_scoreboard->_lcd_putch
    ___awdiv->___awmod
    _display_concentration_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _concentration_game_end->_end_screen
    _end_screen->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  344820
                                             55 BANK0      2     2      0
                                              0 BANK1      2     2      0
                            _DelayMs
             _concentration_game_end
            _concentration_game_loop
       _concentration_gameboard_init
         _concentration_title_screen
                      _joystick_init
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                          _lcd_putch
                           _lcd_puts
                _simon_says_game_end
               _simon_says_game_loop
            _simon_says_title_screen
                          _time_init
 ---------------------------------------------------------------------------------
 (1) _time_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _simon_says_title_screen                              0     0      0   18615
                            _DelayMs
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _simon_says_game_loop                                 0     0      0   88320
                          _countdown
      _display_simon_says_scoreboard
                   _generate_pattern
                       _play_pattern
             _simon_says_check_input
 ---------------------------------------------------------------------------------
 (2) _simon_says_check_input                               6     6      0   21889
                                             16 BANK0      6     6      0
                            ___awdiv
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
               _simon_says_get_input
 ---------------------------------------------------------------------------------
 (3) _simon_says_get_input                                 3     3      0    1908
                                              3 BANK0      3     3      0
                            _DelayMs
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (2) _play_pattern                                         6     6      0   18855
                                             16 BANK0      6     6      0
                            _DelayMs
                            ___awdiv
                          _lcd_clear
                           _lcd_puts
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (2) _generate_pattern                                     4     4      0    4857
                                             16 BANK0      4     4      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _display_simon_says_scoreboard                        2     2      0   26109
                                             20 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _countdown                                            2     2      0   16610
                                             20 BANK0      2     2      0
                            _DelayMs
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _simon_says_game_end                                  0     0      0   26502
                         _end_screen
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    9830
                                             10 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _concentration_title_screen                           0     0      0   54048
                            _DelayMs
    _display_concentration_gameboard
   _display_concentration_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _concentration_gameboard_init                         2     2      0   20911
                                             53 BANK0      2     2      0
                   _get_cursor_index
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    5037
                                             16 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    4595
                                             16 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  8     3      5    4595
                                              8 BANK0      8     3      5
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _concentration_game_loop                              2     2      0   75852
                                             25 BANK0      2     2      0
                            _DelayMs
                    _check_for_match
    _display_concentration_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    9889
                                             20 BANK0      4     3      1
                   _get_cursor_index
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    9194
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      3     3      0   40035
                                             22 BANK0      3     3      0
                            _DelayMs
    _display_concentration_gameboard
   _display_concentration_scoreboard
                   _get_cursor_index
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (2) _get_cursor_index                                     1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _display_concentration_scoreboard                     2     2      0   20626
                                             20 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2965
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _display_concentration_gameboard                      2     2      0   14807
                                             20 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    3590
                                             16 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _concentration_game_end                               0     0      0   28336
                            _DelayMs
                         _end_screen
 ---------------------------------------------------------------------------------
 (2) _end_screen                                          15    11      4   26502
                                             13 BANK0     15    11      4
                            _DelayMs
                            ___awmod
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                          _play_tone
                        _turn_on_led
 ---------------------------------------------------------------------------------
 (4) _turn_on_led                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _play_tone                                            5     2      3    2613
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             5     1      4    5694
                                              8 BANK0      5     1      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             4     2      2    5604
                                              8 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     0      2    5483
                                              8 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            6     3      3    2178
                                              2 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (4) _Delay20us                                            2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _DelayMs                                              2     0      2    1834
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2773
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    6     6      0      45
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _concentration_game_end
     _DelayMs
     _end_screen
       _DelayMs
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
   _concentration_game_loop
     _DelayMs
     _check_for_match
       _DelayMs
       _display_concentration_gameboard
         _lcd_clear
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _display_concentration_scoreboard
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
       _play_tone
       _turn_on_led
     _display_concentration_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
   _concentration_gameboard_init
     _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
   _concentration_title_screen
     _DelayMs
     _display_concentration_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_concentration_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _joystick_init
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_goto
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_putch
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     _lcd_write (ARG)
       _Delay20us
   _lcd_puts
     _lcd_write
       _Delay20us
   _simon_says_game_end
     _end_screen
       _DelayMs
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
   _simon_says_game_loop
     _countdown
       _DelayMs
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_simon_says_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _generate_pattern
       _DelayMs
       ___awdiv
         ___awmod (ARG)
     _play_pattern
       _DelayMs
       ___awdiv
         ___awmod (ARG)
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _play_tone
       _turn_on_led
     _simon_says_check_input
       ___awdiv
         ___awmod (ARG)
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
       _simon_says_get_input
         _DelayMs
         _turn_on_led
   _simon_says_title_screen
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _time_init

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      2      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C5      12        0.0%
ABS                  0      0      C5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 24 04:59:10 2020

                         _joystick_pressed 0064                                          l9 1272  
             generate_pattern@current_byte 0033                                          pc 0002  
                      _simon_says_game_end 078B                                __CFG_CP$OFF 0000  
                            _update_cursor 09F7                                         l14 12A3  
                                       l23 128C                                         l41 1309  
                                       l18 12B7                                         l26 1548  
                                       l35 13DE                                         l44 159A  
                                       l29 12D1                                         l38 129E  
                                       l49 15EF                                         _GO 00F9  
                             ___awdiv@sign 002D                                         fsr 0004  
                     _simon_says_game_loop 12D2                                        l301 07FD  
                                      l304 12EB                                        l402 17CC  
                                      l322 0D8A                                        l413 1438  
                                      l405 17FF                                        l317 0D81  
                                      l414 145E                                        l342 0E97  
                                      l327 0E85                                        l319 0D89  
                                      l408 0B67                                        l344 0E9D  
                                      l328 0E84                                        l433 09F6  
                                      l345 0EAA                                        l337 0E7A  
                                      l265 0533                                        l442 127E  
                                      l522 13AE                                        l451 16A9  
                                      l363 0FFF                                        l532 01A0  
                                      l380 08CE                                        l372 02E7  
                                      l461 0C76                                        l517 0A93  
                                      l269 0558                                        l550 132F  
                                      l438 14AB                                        l471 06B3  
                                      l383 174C                                        l560 13F3  
                                      l544 023B                                        l464 0637  
                                      l288 062D                                        l561 13F6  
                                      l465 069F                                        l377 084B  
                                      l562 1419                                        l554 13E7  
                                      l538 0200                                        l474 06B1  
                                      l386 175B                                        l556 13E9  
                                      l396 14F9                                        l476 06A8  
                                      l549 132C                                        l557 13EB  
                                      l469 0640                                        l389 1783  
                                      l565 1380                                        l558 13ED  
                                      l830 1712                                        l559 13F0  
                                      l495 0788                                        l479 06CA  
                                      l399 17BD                                        l568 1356  
                                      l498 078A                                        l843 164A  
                                      _GIE 005F                                        _RB2 0032  
                                      _RB5 0035                                        _RC5 003D  
                                      _RC6 003E                                        _RC7 003F  
                                      _PR2 0092                               __CFG_CPD$OFF 0000  
                                      _SCS 0478                                        fsr0 0004  
                                      indf 0000                               ___awmod@sign 0026  
          __end_of_simon_says_title_screen 1784                               __CFG_FOSC$HS 0000  
                   _simon_says_check_input 0C77               ??_concentration_title_screen 0036  
                     _simon_says_get_input 0D8A                               __CFG_LVP$OFF 0000  
                           ?_toggle_cursor 0070                       ?_simon_says_game_end 0070  
                            lcd_clear@port 0028                                       l4001 15CF  
                                     l4003 15D7                                       l4011 0D91  
                                     l4101 131D                                       l4005 15DB  
                                     l4021 0DB7                                       l4013 0D9E  
                                     l4103 1320                                       l4111 0AA3  
                                     l4007 15E1                                       l4031 0DD7  
                                     l4023 0DBA                                       l4015 0DA4  
                                     l4105 1326                                       l4201 015C  
                                     l4121 141A                                       l4113 0AAF  
                                     l4041 0DF3                                       l4033 0DDD  
                                     l4017 0DA8                                       l4025 0DC0  
                                     l4009 0D90                                       l4107 1327  
                                     l4211 019B                                       l4203 0172  
                                     l4131 142E                                       l4123 1425  
                                     l4115 0B0B                                       l4051 0E17  
                                     l4035 0DE1                                       l4043 0DF9  
                                     l4027 0DC6                                       l4019 0DB6  
                                     l4221 01B8                                       l4213 01A4  
                                     l4205 0180                                       l4133 1448  
                                     l4117 0B1A                                       l4109 0A94  
                                     l4141 127A                                       l4301 0EAB  
                                     l4053 0E1B                                       l4061 0E33  
                                     l4045 0DFF                                       l4037 0DEF  
                                     l4029 0DC8                                       l4231 01F8  
                                     l4223 01BE                                       l4215 01A8  
                                     l4207 0189                                       l4135 144E  
                                     l4119 0B48                                       l4151 1271  
                                     l4311 0F22                                       l4303 0EBA  
                                     l4071 0E57                                       l4063 0E39  
                                     l4055 0E29                                       l4039 0DF0  
                                     l4047 0E02                                       l4241 020E  
                                     l4233 01FB                                       l4225 01D4  
                                     l4217 01A9                                       l4209 0198  
                                     l4153 0054                                       l4137 1454  
                                     l4129 1428                                       l4145 127D  
                                     l4401 1658                                       l4321 0F75  
                                     l4305 0EBE                                       l4081 0E75  
                                     l4073 0E65                                       l4057 0E2A  
                                     l4049 0E11                                       l4065 0E3E  
                                     l4243 0218                                       l4235 0204  
                                     l4227 01DD                                       l4219 01AE  
                                     l4171 0098                                       l4155 0058  
                                     l4139 1276                                       l4411 169F  
                                     l4403 1670                                       l4251 0857  
                                     l5131 02BF                                       l4331 0FA7  
                                     l4323 0F7B                                       l4315 0F46  
                                     l4307 0EDA                                       l4091 0EA7  
                                     l4083 0E7D                                       l4075 0E66  
                                     l4067 0E4D                                       l4059 0E2D  
                                     l5123 05AD                                       l4245 021E  
                                     l4237 0208                                       l4229 01E9  
                                     l4181 00E6                                       l4173 00A5  
                                     l4165 0072                                       l4157 006E  
                                     l4421 0B93                                       l4501 0A24  
                                     l5133 0A1A                                       l4405 1677  
                                     l4413 16A3                                       l4149 1269  
                                     l4261 0810                                       l4253 0866  
                                     l4341 0FDC                                       l4325 0F8B  
                                     l4317 0F5F                                       l4309 0EFE  
                                     l4085 0E88                                       l4077 0E69  
                                     l4069 0E53                                       l5125 0D38  
                                     l4095 130A                                       l4239 0209  
                                     l4247 0234                                       l4191 0137  
                                     l4183 00EC                                       l4175 00B7  
                                     l4167 007C                                       l4159 0071  
                                     l4431 0BB6                                       l4423 0B98  
                                     l4415 0B6B                                       l5135 0A36  
                                     l4503 0A29                                       l4511 0A51  
                                     l4407 1680                                       l4271 0838  
                                     l4255 0872                                       l4327 0F91  
                                     l4319 0F65                                       l5127 0F51  
                                     l4335 0FB7                                       l4343 0FE2  
                                     l4087 0E8E                                       l4079 0E6F  
                                     l4097 1310                                       l4193 0140  
                                     l4185 0102                                       l4177 00CD  
                                     l4169 0082                                       l4441 0BDE  
                                     l4433 0BB9                                       l4425 0B9D  
                                     l4417 0B70                                       l4513 0A78  
                                     l5137 0A46                                       l4505 0A2E  
                                     l4409 1685                                       l4273 083E  
                                     l4257 08A0                                       l4249 084C  
                                     l4281 0273                                       l4345 0FF4  
                                     l5129 0FBF                                       l4329 0FA1  
                                     l4337 0FCD                                       l4089 0E9E  
                                     l4361 0CA1                                       l4601 1379  
                                     l4099 131C                                       l5139 1402  
                                     l4195 0146                                       l4187 011B  
                                     l4179 00DA                                       l4451 0C1B  
                                     l4443 0BF9                                       l4435 0BC6  
                                     l4427 0BA1                                       l4419 0B75  
                                     l4515 0A7D                                       l4531 154E  
                                     l4275 0842                                       l4267 0816  
                                     l4259 0805                                       l4283 027D  
                                     l4291 02B6                                       l4339 0FD3  
                                     l4363 0CA5                                       l4355 0C77  
                                     l4603 137A                                       l4197 014C  
                                     l4189 0121                                       l4461 0C4E  
                                     l4453 0C1E                                       l4445 0BFB  
                                     l4437 0BCC                                       l4429 0BA7  
                                     l4509 0A3E                                       l4701 070E  
                                     l4621 147F                                       l4605 145F  
                                     l4541 158A                                       l4533 1556  
                                     l4269 082D                                       l4285 0290  
                                     l4293 02CD                                       l4277 023C  
                                     l4373 0D2D                                       l4365 0CC1  
                                     l4381 0D59                                       l4357 0C86  
                                     l3903 13FA                                       l4199 0156  
                                     l3911 16AD                                       l4471 0C6D  
                                     l4463 0C5D                                       l4455 0C2D  
                                     l4439 0BDB                                       l4447 0C01  
                                     l4711 0749                                       l4703 0719  
                                     l4631 14A6                                       l4623 1488  
                                     l4615 146D                                       l4607 1465  
                                     l4551 1340                                       l4543 1330  
                                     l4535 155F                                       l4287 02A3  
                                     l4279 0256                                       l4383 0D6B  
                                     l4367 0CE5                                       l4375 0D46  
                                     l4359 0C92                                       l3921 16C1  
                                     l3913 16B1                                       l4465 0C61  
                                     l4457 0C3C                                       l4449 0C0C  
                                     l4481 13A1                                       l4473 1381  
                                     l4721 0774                                       l4713 0750  
                                     l4705 0728                                       l4625 148B  
                                     l4617 1475                                       l4609 146A  
                                     l4641 17D2                                       l4633 1784  
                                     l4561 134B                                       l4553 1342  
                                     l4545 133A                                       l4537 156F  
                                     l4529 1549                                       l4385 0D76  
                                     l4377 0D52                                       l4369 0D09  
                                     l4801 04D4                                       l3851 127F  
                                     l4731 14BF                                       l3931 16D7  
                                     l3923 16C5                                       l3915 16B6  
                                     l4459 0C3F                                       l4467 0C65  
                                     l4483 13A4                                       l4475 1388  
                                     l4491 0A05                                       l4723 077A  
                                     l4715 075B                                       l4707 072F  
                                     l4395 0963                                       l4627 149B  
                                     l4619 1479                                       l4651 17F5  
                                     l4643 17DB                                       l4635 17A2  
                                     l4563 134E                                       l4555 1346  
                                     l4547 133B                                       l4539 157F  
                                     l4387 0D7D                                       l4379 0D55  
                                     l4571 135D                                       l4811 050E  
                                     l4803 04D7                                       l3861 129F  
                                     l4733 14CD                                       l3941 16F7  
                                     l3933 16DB                                       l3925 16C7  
                                     l3917 16B8                                       l3909 16AA  
                                     l4469 0C6B                                       l4477 1392  
                                     l4493 0A0A                                       l4485 09FA  
                                     l4725 077F                                       l4717 0766  
                                     l4709 073A                                       l4661 0644  
                                     l4397 164B                                       l4629 149C  
                                     l4653 17FA                                       l4645 17E6  
                                     l4637 17AE                                       l4565 1350  
                                     l4557 1347                                       l4549 133E  
                                     l4389 0D87                                       l4741 1713  
                                     l4581 136F                                       l4573 1363  
                                     l4821 0539                                       l4813 051A  
                                     l4805 04E4                                       l3863 12A0  
                                     l3871 14FD                                       l4735 14D3  
                                     l4727 14AC                                       l3943 16FE  
                                     l3935 16DF                                       l3927 16CD  
                                     l3919 16BC                                       l4479 1397  
                                     l4495 0A0F                                       l4487 09FB  
                                     l4719 076B                                       l4671 0668  
                                     l4663 0649                                       l4655 0630  
                                     l4399 1654                                       l4647 17F1  
                                     l4639 17C3                                       l4567 1354  
                                     l4559 1348                                       l4751 176A  
                                     l4743 1731                                       l4591 1374  
                                     l4583 1370                                       l4575 1366  
                                     l4831 055F                                       l4823 053A  
                                     l4815 0526                                       l4807 04F3  
                                     l3961 15FE                                       l3953 15F0  
                                     l3865 12A2                                       l3857 1282  
                                     l3873 1510                                       l3881 12B8  
                                     l4737 14E1                                       l4729 14B7  
                                     l3937 16F0                                       l3929 16D0  
                                     l3945 1704                                       l4497 0A12  
                                     l4489 0A00                                       l4681 06B9  
                                     l4673 0693                                       l4665 064E  
                                     l4657 0636                                       l4649 17F4  
                                     l4761 12DC                                       l4753 1775  
                                     l4745 173D                                       l4593 1375  
                                     l4585 1371                                       l4577 136D  
                                     l4569 1357                                       l4833 056C  
                                     l4825 053F                                       l4817 052E  
                                     l4809 04FF                                       l3971 1617  
                                     l3963 1602                                       l3955 15F3  
                                     l3867 12A7                                       l3859 1286  
                                     l3875 1515                                       l3883 12C6  
                                     l3891 13CE                                       l4739 14EE  
                                     l3947 1709                                       l3939 16F6  
                                     l4499 0A22                                       l4683 06BE  
                                     l4691 06D9                                       l4675 0699  
                                     l4667 0657                                       l4659 063B  
                                     l4771 07B4                                       l4763 078B  
                                     l4755 1780                                       l4747 1752  
                                     l4595 1376                                       l4587 1372  
                                     l4579 136E                                       l4843 05A1  
                                     l4835 057B                                       l4827 0543  
                                     l4851 05D5                                       l4819 052F  
                                     l3981 1636                                       l3973 161B  
                                     l3965 1607                                       l3957 15F7  
                                     l3869 12AF                                       l3877 1526  
                                     l3885 13AF                                       l3893 1290  
                                     l3949 170E                                       l4693 06E6  
                                     l4685 06C2                                       l4677 06A3  
                                     l4669 065A                                       l4781 07E2  
                                     l4773 07BA                                       l4765 0792  
                                     l4757 12D2                                       l4749 1761  
                                     l4597 1377                                       l4589 1373  
                                     l4861 05F9                                       l4845 05B5  
                                     l4837 0596                                       l4853 05DC  
                                     l4829 054D                                       l3975 161F  
                                     l3967 160D                                       l3983 163C  
                                     l3959 15FC                                       l3879 1532  
                                     l3895 12EF                                       l3887 13B0  
                                     l4695 06ED                                       l4687 06C8  
                                     l4679 06AC                                       l3991 159B  
                                     l4783 07F0                                       l4775 07C8  
                                     l4767 07A0                                       l4759 12D7  
                                     l4599 1378                                       l4871 061C  
                                     l4863 0604                                       l4855 05DE  
                                     l4847 05CE                                       l4839 059D  
                                     l4791 04B4                                       _ADIE 0466  
                                     _ADIF 0066                                       l3985 1641  
                                     l3977 1629                                       l3969 1610  
                                     l3897 12FE                                       l3889 13C6  
                                     l4697 06F8                                       l4689 06D8  
                                     l4777 07CE                                       l4769 07A6  
                                     l4873 0621                                       l4865 0609  
                                     l4857 05E7                                       l4849 05D1  
                                     l4793 04BF                                       l4785 04A1  
                                     l3987 1646                                       l3979 162F  
                                     l3899 13E2                                       l4699 0707  
                                     l4779 07DC                                       l4875 0628  
                                     l4867 0610                                       l4859 05F2  
                                     l4795 04C4                                       l4787 04A4  
                                     l3997 159E                                       l4869 0616  
                                     l4797 04CC                                       l4789 04A9  
                                     l3999 15B7                                       l4799 04CF  
                                     STR_1 03B4                                       STR_2 03A4  
                                     STR_3 0419                                       STR_4 040A  
                                     STR_5 03EE                                       STR_6 040A  
                                     STR_7 0352                                       STR_8 040A  
                                     STR_9 0433                                       _T0IF 005A  
                                     u3000 0E11                                       u3001 0E10  
                                     u3010 0E17                                       u3011 0E16  
                                     u3100 127A                                       u3020 0E39  
                                     u3101 1279                                       u3021 0E38  
                                     u3005 0E0D                                       u3110 014C  
                                     u3030 0E4D                                       u3111 014B  
                                     u3031 0E4C                                       u3120 01A4  
                                     u3040 0E53                                       u3121 01A3  
                                     u3041 0E52                                       u3130 01A8  
                                     u3050 0E75                                       u3131 01A7  
                                     u3051 0E74                                       u3035 0E49  
                                     u3140 01AE                                       u3204 0247  
                                     u3060 0E9D                                       u3141 01AD  
                                     u3205 0245                                       u3061 0E9C  
                                     u3070 132C                                       u3150 0204  
                                     u3310 0D52                                       u3071 132B  
                                     u3151 0203                                       u3215 0285  
                                     u3311 0D51                                       u3160 0208  
                                     u3080 142E                                       u3400 0B93  
                                     u3320 0D6B                                       u3161 0207  
                                     u3081 142D                                       u3401 0B92  
                                     u3225 0298                                       u3321 0D6A  
                                     u3305 0D22                                       u3170 020E  
                                     u3090 1454                                       u3410 0B98  
                                     u3330 0D7D                                       u3171 020D  
                                     u3091 1453                                       u3411 0B97  
                                     u3235 02AB                                       u3331 0D7C  
                                     u3180 023B                                       u3420 0BF9  
                                     u3500 0640                                       u3340 0D87  
                                     u3181 023A                                       u3421 0BF8  
                                     u3501 063F                                       u3245 0EF3  
                                     u3341 0D86                                       u3325 0D67  
                                     u2710 13DE                                       u3430 1388  
                                     u3510 0644                                       u3350 164F  
                                     u3190 0842                                       u3270 0FF4  
                                     u2711 13DD                                       u3431 1387  
                                     u3511 0643                                       u3191 0841  
                                     u3271 0FF3                                       u3255 0F17  
                                     u2800 1704                                       u2720 16B1  
                                     u3440 0A7D                                       u3600 06BE  
                                     u3520 0649                                       u2705 1500  
                                     u2801 1703                                       u2721 16B0  
                                     u3441 0A7C                                       u3601 06BD  
                                     u3521 0648                                       u3265 0F3B  
                                     u2810 1709                                       u2730 16BC  
                                     u3610 06E6                                       u3530 064E  
                                     u3370 1680                                       u3450 147F  
                                     u2811 1708                                       u2731 16BB  
                                     u3611 06E5                                       u3531 064D  
                                     u3371 167F                                       u3451 147E  
                                     u3275 0FF0                                       u2900 1641  
                                     u2820 15F7                                       u2740 16CD  
                                     u3700 076B                                       u3620 06ED  
                                     u3540 0668                                       u3380 16A9  
                                     u3364 1661                                       u3460 17C3  
                                     u2901 1640                                       u2821 15F6  
                                     u2741 16CC                                       u3701 076A  
                                     u3621 06EC                                       u3541 0667  
                                     u3381 16A8                                       u3365 165F  
                                     u3461 17C2                                       u3285 0CDA  
                                     u2830 1602                                       u2670 128C  
                                     u3390 0B70                                       u3710 077A  
                                     u3630 0707                                       u3550 06A3  
                                     u3470 17D2                                       u2831 1601  
                                     u2671 128B                                       u3391 0B6F  
                                     u3711 0779                                       u3631 0706  
                                     u3615 06E2                                       u3551 06A2  
                                     u3471 17D1                                       u3295 0CFE  
                                     u2840 160D                                       u2680 12A7  
                                     u2760 16DF                                       u3720 077F  
                                     u3640 070E                                       u3560 06A8  
                                     u3480 0636                                       u2920 15E1  
                                     u3800 07CE                                       u2841 160C  
                                     u2681 12A6                                       u2761 16DE  
                                     u3721 077E                                       u3641 070D  
                                     u3561 06A7                                       u3481 0635  
                                     u2921 15E0                                       u3801 07CD  
                                     u2690 12B7                                       u3730 14BF  
                                     u3650 0728                                       u3570 06AC  
                                     u3490 063B                                       u3810 07E2  
                                     u2930 0D90                                       u2691 12B6  
                                     u3731 14BE                                       u2755 16D1  
                                     u3651 0727                                       u3635 0703  
                                     u3571 06AB                                       u3491 063A  
                                     u2915 15A1                                       u3811 07E1  
                                     u2931 0D8F                                       _PEIE 005E  
                                     u2860 161F                                       u3740 14D3  
                                     u2780 16F0                                       u3660 072F  
                                     u3580 06B1                                       u2940 0D9E  
                                     u3900 0610                                       u3820 0539  
                                     u2861 161E                                       u3741 14D2  
                                     u2781 16EF                                       u3661 072E  
                                     u3581 06B0                                       u2941 0D9D  
                                     u3901 060F                                       u3821 0538  
                                     u2870 1629                                       u3670 0749  
                                     u3590 06B9                                       u2950 0DA4  
                                     u3750 1752                                       u3910 0628  
                                     u3830 053F                                       u2871 1628  
                                     u2855 1611                                       u2775 16E0  
                                     u3671 0748                                       u3655 0724  
                                     u3591 06B8                                       u2951 0DA3  
                                     u3751 1751                                       u3911 0627  
                                     u3831 053E                                       u3680 0750  
                                     u2960 0DC6                                       u3760 1761  
                                     u3840 0543                                       u2785 16EC  
                                     u3681 074F                                       u2961 0DC5  
                                     u2945 0D9A                                       u3761 1760  
                                     u3841 0542                                       u2890 163C  
                                     u3690 0766                                       u3770 0792  
                                     u2970 0DD7                                       u3850 055E  
                                     u2891 163B                                       u2875 1625  
                                     u2795 16F8                                       u3691 0765  
                                     u3675 0745                                       u3771 0791  
                                     u2971 0DD6                                       u3851 055D  
                                     u3780 07A6                                       u2980 0DDD  
                                     u3860 056C                                       u2885 1630  
                                     u3781 07A5                                       u2981 0DDC  
                                     u3861 056B                                       u3790 07BA  
                                     u2990 0DFF                                       u3870 057B  
                                     u3791 07B9                                       u2991 0DFE  
                                     u2975 0DD3                                       u3871 057A  
                                     u3880 05DC                                       u3881 05DB  
                                     u3865 0568                                       u3890 05F9  
                                     u3891 05F8                                       u3875 0577  
                                     _TMR0 0001                                       _TMR1 000E  
                                     _TMR2 0011                                       _WPUB 0095  
                    make_custom_chars@club 032A                               __CFG_WRT$OFF 0000  
                                     _main 04A1                                       btemp 007E  
                          _check_for_match 0B68                               lcd_init@port 002A  
                                     start 000E                               lcd_goto@port 0028  
                            __CFG_IESO$OFF 0000                            __end_of_DelayMs 12B8  
                 ??_concentration_game_end 003C                              __CFG_MCLRE$ON 0000  
                           ?_update_cursor 0034        __size_of_concentration_title_screen 007C  
                    ?_simon_says_game_loop 0070                                      ?_main 0070  
                          __end_of___awdiv 1713                                      _CCPR1 0015  
                                    STR_10 040A                                      _CCPR2 001B  
                                    STR_11 03E0                                      STR_12 040A  
                                    STR_20 048B                                      STR_21 0418  
                                    STR_13 0374                                      STR_14 040A  
                                    STR_30 0384                                      STR_22 0363  
                                    STR_31 0363                                      STR_23 0467  
                                    STR_15 03C4                                      STR_32 0467  
                                    STR_16 045A                                      STR_24 0426  
                                    STR_33 0474                                      STR_25 0440  
                                    STR_17 03FC                              __CFG_WDTE$OFF 0000  
                                    STR_26 0426                                      STR_34 049B  
                                    STR_18 0394                                      STR_35 0494  
                                    STR_19 0474                                      STR_27 044D  
                                    STR_28 03D2                            __end_of___awmod 164B  
                                    STR_29 0480                                      _ANSEL 0188  
                          ___awdiv@divisor 0027                                      _T2CON 0012  
                                    i1l573 08EB                                      i1l590 0959  
                                    i1l574 08E9                                      i1l591 095A  
                                    i1l575 08EA                                      i1l584 094B  
                                    i1l576 094C                            ___awdiv@counter 002C  
             __size_of_randomize_gameboard 005F                                      _PORTA 0005  
                                    _PORTB 0006                                      _PORTC 0007  
                                    _PORTD 0008                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
                                    _TRISD 0088                     make_custom_chars@heart 033A  
                    ?_simon_says_get_input 0070                     make_custom_chars@spade 0332  
                           __CFG_FCMEN$OFF 0000                     make_custom_chars@smile 034A  
                   make_custom_chars@skull 0322                                _turn_on_led 13DF  
                                    _nRBPU 040F                      ??_simon_says_game_end 003C  
                                    _board 00C0                   ?_concentration_game_loop 0070  
                             lcd_puts@port 002A                             __CFG_BOREN$OFF 0000  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                              DelayMs@millis 0020  
                          __initialization 0011                               __end_of_main 0630  
                       __size_of_Delay20us 000E                           _generate_pattern 023C  
                                   ??_main 0057           display_concentration_gameboard@i 0035  
                          ??_toggle_cursor 0034                                     _ADCON0 001F  
                                   _ADCON1 009F                                     _CCP1M0 00B8  
                                   _CCP1M1 00B9                                     _CCP1M2 00BA  
                                   _CCP1M3 00BB                                     _CCP2M0 00E8  
                                   _CCP2M1 00E9                                     _CCP2M2 00EA  
                                   _CCP2M3 00EB                                     _CCP1IF 0062  
                                   _CCP2IE 0468                                     _CCP2IF 0068  
                  __end_of_check_for_match 0C77                                     _ADRESH 001E  
                                   _ADRESL 009E                           ___awdiv@dividend 0029  
              __end_ofmake_custom_chars@RH 0322                                     _ANSELH 0189  
                   update_cursor@direction 0034                                     i1l3601 0957  
                                   i1l5141 0920                                     i1l5143 0943  
                                   i1l3561 08CF                                     i1l3571 08F0  
                                   i1l3563 08D5                                     i1l3581 090E  
                                   i1l3573 08F5                                     i1l3565 08DB  
                                   i1l3591 0931                                     i1l3583 0913  
                                   i1l3575 08F9                                     i1l3567 08E3  
                                   i1l3593 0936                                     i1l3577 08FF  
                                   i1l3569 08E7                                     i1l3587 0918  
                                   i1l3579 0905                                     i1l3597 093B  
                                   i1l3589 0928                                     i1l3599 0950  
                                   u260_20 08DB                                     u260_21 08DA  
                                   u261_20 08E7                                     u261_21 08E6  
                                   u262_20 08F0                                     u262_21 08EF  
                                   u263_20 08FF                                     u263_21 08FE  
                                ??_DelayMs 0022                                     u264_20 0905  
                                   u264_21 0904                                     u265_20 0950  
                                   u265_21 094F                                     u266_20 0957  
                                   u266_21 0956                                     u259_20 08D5  
                                   u259_21 08D4                                     _TMR1GE 0086  
                                   _TMR1CS 0081                                     _TMR2IE 0461  
                                   _TMR2IF 0061                                     _TMR1ON 0080  
                      _lcd_set_custom_char 159B                             __CFG_PWRTE$OFF 0000  
                          ??_update_cursor 0035            __size_of_concentration_game_end 004E  
                         __end_of_lcd_init 159B                           __end_of_lcd_goto 130A  
                         __end_of_lcd_puts 13DF   __end_of_display_concentration_scoreboard 0B68  
__size_of_display_concentration_scoreboard 00D4         ??_display_concentration_scoreboard 0034  
        ?_display_concentration_scoreboard 0070           _display_concentration_scoreboard 0A94  
                                ??___awdiv 002B                                  ??___awmod 0024  
                                   _id_num 0078                     ??_simon_says_game_loop 0036  
                         ___awdiv@quotient 002E                            ___awmod@divisor 0020  
                            lcd_putch@port 0030                            ___awmod@counter 0025  
                     ?_lcd_set_custom_char 0028                     ??_simon_says_get_input 0023  
       __end_of_concentration_title_screen 1800                 _concentration_title_screen 1784  
                             __pdataCOMMON 007B                                     saved_w 007E  
                        __end_of_Delay20us 128D              update_cursor@move_delay_count 0037  
                            _event_enabled 0068                    __end_of__initialization 0050  
                __size_of_get_cursor_index 000C                              lcd_write@mode 0027  
                            lcd_write@port 0023       __end_of_concentration_gameboard_init 14AC  
    __size_of_concentration_gameboard_init 004D               _concentration_gameboard_init 145F  
                           __pcstackCOMMON 0070                               __pidataBANK0 07FE  
                             __pidataBANK1 1261                      check_for_match@player 0038  
                    __end_of_joystick_init 1357                    ?_simon_says_check_input 0070  
                    ??_lcd_set_custom_char 002D                     _concentration_game_end 14AC  
                       __size_of_lcd_clear 001A                         __size_of_lcd_putch 0012  
                       __size_of_lcd_write 004F                           ?_check_for_match 0070  
                               __pbssBANK0 0059                                 __pbssBANK1 00A0  
                               __pbssBANK3 0190                         __size_of_countdown 0047  
                 ?_simon_says_title_screen 0070                        _randomize_gameboard 164B  
                               __pmaintext 04A1              ?_concentration_gameboard_init 0070  
                               __pintentry 0004                         __size_of_tmr0_init 000A  
                       __size_of_play_tone 0026             __end_of_simon_says_check_input 0D8A  
                            ?_play_pattern 0070               __end_ofmake_custom_chars@PIC 031A  
                                  _T1CKPS0 0084                                    _T1CKPS1 0085  
                               _end_screen 0054                       ?_randomize_gameboard 0070  
                       __size_of_time_init 002A                               ?_turn_on_led 0070  
                                ?_lcd_init 002A                                  ?_lcd_goto 0028  
                                ?_lcd_puts 0028                                 __stringtab 0300  
                   lcd_set_custom_char@row 002F                   make_custom_chars@diamond 0342  
     simon_says_check_input@current_option 0034                   __end_of_generate_pattern 02E8  
                                  _DelayMs 129F                 randomize_gameboard@current 0053  
                        __end_of_lcd_clear 12D2                  randomize_gameboard@random 0054  
         __size_of_concentration_game_loop 015B                          __end_of_lcd_putch 129F  
                                  ___awdiv 16AA                                    ___awmod 15F0  
                        __end_of_lcd_write 1549                             ??_play_pattern 0030  
           __end_ofmake_custom_chars@heart 0342             __end_ofmake_custom_chars@spade 033A  
           __end_ofmake_custom_chars@smile 0352             __end_ofmake_custom_chars@skull 032A  
                                  __ptext1 1357                                    __ptext2 1713  
                                  __ptext3 12D2                          __end_of_countdown 084C  
                                  __ptext4 0C77                                    __ptext5 0D8A  
                                  __ptext6 0EAB                                    __ptext7 023C  
                                  __ptext8 084C                                    __ptext9 0805  
                               _cursor_pos 006C                      ??_randomize_gameboard 0030  
              __end_of_simon_says_game_end 07FE                           ___awmod@dividend 0022  
                                  _my_turn 007B                     get_cursor_index@cursor 0020  
                                  _visible 00A0                              _received_char 0079  
                                  clrloop0 125A                                 ??_lcd_init 002C  
                               ??_lcd_goto 002A                                 ??_lcd_puts 002C  
                     end_of_initialization 0050                          __end_of_tmr0_init 1273  
                        __end_of_play_tone 1330                             lcd_puts@string 0028  
                         _get_cursor_index 1273                       play_tone@tone_period 0020  
                        __end_of_time_init 1381                                 _scoreboard 00E6  
                             __pstringtext 0300             ??_concentration_gameboard_init 0055  
            concentration_gameboard_init@i 0056                                ?_end_screen 002D  
              ?_concentration_title_screen 0070              lcd_set_custom_char@cg_address 002A  
                           _joystick_x_pos 0060                             _joystick_y_pos 005E  
                               _tone_delay 0076                      __end_of_toggle_cursor 13AF  
    __end_of_display_simon_says_scoreboard 08CF     __size_of_display_simon_says_scoreboard 0083  
            _display_simon_says_scoreboard 084C                       end_screen@second_row 002F  
                       _simon_says_pattern 0059                                  _Delay20us 127F  
                     make_custom_chars@PIC 0312                      play_tone@duration_8ms 0022  
                            play_pattern@i 0035                      __end_of_update_cursor 0A94  
                         turn_on_led@color 0022                              __pidataCOMMON 02FB  
            __size_of_simon_says_game_loop 001A                    ?_concentration_game_end 0070  
                      start_initialization 0011              __size_of_simon_says_get_input 0121  
                     __size_of_turn_on_led 003B                                 countdown@i 0035  
                     __end_of_play_pattern 1000                                 ?_Delay20us 0070  
                      __size_of_end_screen 01E8                    _concentration_game_loop 0630  
                               init_fetch0 02E8                __end_of_lcd_set_custom_char 15F0  
                              __pdataBANK0 006D                                __pdataBANK1 00E0  
           __end_of_concentration_game_end 14FA           __size_of_simon_says_title_screen 0071  
                              __pbssCOMMON 0076                             _current_player 0063  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00E8                              _selected_tile 0065  
                        ?_generate_pattern 0070                                   ?_DelayMs 0020  
                   __size_of_joystick_init 0027                          __size_of_lcd_init 0052  
                        __size_of_lcd_goto 001E                          __size_of_lcd_puts 0030  
                             _current_char 006B             ?_display_simon_says_scoreboard 0070  
                       ??_generate_pattern 0030                   __size_of_check_for_match 010F  
                              _delay_loops 0069                                  _gameboard 006D  
                                _game_over 0062                                   ?___awdiv 0027  
                                 ?___awmod 0020                                  _lcd_clear 12B8  
                             _cursor_solid 006A                                  _lcd_putch 128D  
                                _lcd_write 14FA                    simon_says_check_input@i 0035  
                 __end_of_get_cursor_index 127F                          _interrupt_handler 08CF  
                         main@selector_pos 00E9                         ?_interrupt_handler 0070  
                                _countdown 0805              __end_ofmake_custom_chars@club 0332  
                      ??_interrupt_handler 0070                           end_screen@colors 0034  
                        interrupt_function 0004                                ??_Delay20us 0020  
                ??_concentration_game_loop 0039                                  clear_ram0 1259  
                                _tmr0_init 1269                                  _play_tone 130A  
                      end_screen@first_row 002D                                  _time_init 1357  
              __end_of_randomize_gameboard 16AA    __end_of_display_concentration_gameboard 145F  
 __size_of_display_concentration_gameboard 0045          ??_display_concentration_gameboard 0034  
         ?_display_concentration_gameboard 0070            _display_concentration_gameboard 141A  
                               ?_lcd_clear 0028                  __end_of_interrupt_handler 0963  
                            _joystick_init 1330                                 ?_lcd_putch 0030  
                  lcd_set_custom_char@data 0028                                __stringbase 0312  
                               ?_lcd_write 0022                               ??_end_screen 0031  
                  lcd_set_custom_char@port 002B                        make_custom_chars@RH 031A  
                               ?_countdown 0070                      __size_of_play_pattern 0155  
             __size_of_simon_says_game_end 0073                           __size_of_DelayMs 0019  
                               ?_tmr0_init 0070                                 ?_play_tone 0020  
                       __end_of_end_screen 023C                   ??_simon_says_check_input 0030  
                                 _p1_score 0067                                   _p2_score 0066  
                               ?_time_init 0070                    _simon_says_title_screen 1713  
                        _make_custom_chars 0963                           __size_of___awdiv 0069  
                        ??_check_for_match 0036                           __size_of___awmod 005B  
                           ?_joystick_init 0070                               _play_pattern 0EAB  
                       ?_make_custom_chars 0070                         __end_of__stringtab 0312  
          __end_of_concentration_game_loop 078B           __end_ofmake_custom_chars@diamond 034A  
                      ??_make_custom_chars 0030                            end_screen@F1400 00E0  
                       main@game_selection 00E8                                   __ptext10 078B  
                                 __ptext11 1549                                   __ptext20 09F7  
                                 __ptext12 1269                                   __ptext21 1381  
                                 __ptext13 1330                                   __ptext30 13DF  
                                 __ptext22 0B68                                   __ptext14 1784  
                                 __ptext31 130A                                   __ptext23 1273  
                                 __ptext15 145F                                   __ptext32 13AF  
                                 __ptext24 0A94                                   __ptext16 164B  
                                 __ptext33 12EC                                   __ptext25 16AA  
                                 __ptext17 0963                                   __ptext34 12B8  
                                 __ptext26 141A                                   __ptext18 159B  
                                 __ptext35 14FA                                   __ptext27 128D  
                                 __ptext19 0630                                   __ptext36 127F  
                                 __ptext28 14AC                                   __ptext37 129F  
                                 __ptext29 0054                                   __ptext38 15F0  
                                 __ptext39 08CF                          __CFG_BOR4V$BOR21V 0000  
                                 _lcd_init 1549                                   _lcd_goto 12EC  
                                 _lcd_puts 13AF               __end_of_simon_says_game_loop 12EC  
                            __size_of_main 018F                         lcd_putch@character 0033  
             __end_of_simon_says_get_input 0EAB                  __end_of_make_custom_chars 09F7  
                   __size_of_toggle_cursor 002E                                ??_lcd_clear 002A  
               __size_of_interrupt_handler 0094                   randomize_gameboard@F1386 0190  
                              ??_lcd_putch 0032                                ??_lcd_write 0025  
                    end_screen@color_index 003B                              ??_turn_on_led 0020  
                              ??_countdown 0034                                   init_ram0 02EC  
                                 intlevel1 0000                     __size_of_update_cursor 009D  
                            Delay20us@next 0021                                ??_tmr0_init 0020  
                              ??_play_tone 0023                                  stringcode 030A  
                ??_simon_says_title_screen 002D            __size_of_simon_says_check_input 0113  
                          ??_joystick_init 0020                                ??_time_init 0020  
                        _event_delay_count 007A                  __size_of_generate_pattern 00AC  
          ??_display_simon_says_scoreboard 0034                    randomize_gameboard@used 0033  
                               _OPTION_REG 0081                           lcd_goto@position 002B  
                        ?_get_cursor_index 0070               __size_of_lcd_set_custom_char 0055  
        simon_says_get_input@current_input 0025                                   stringtab 0300  
                       ??_get_cursor_index 0020                              _toggle_cursor 1381  
                      __end_of_turn_on_led 141A            interrupt_handler@current_analog 0075  
                              end_screen@i 003A                           lcd_write@CmdChar 0022  
               play_pattern@current_option 0034                 __size_of_make_custom_chars 0094  
