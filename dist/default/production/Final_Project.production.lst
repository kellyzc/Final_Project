

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 17:03:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.10
    47                           ; Generated 31/07/2019 GMT
    48                           ; 
    49                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314                           
   315                           	psect	idataBANK0
   316  0ECB                     __pidataBANK0:	
   317                           
   318                           ;initializer for _scoreboard
   319  0ECB  3408               	retlw	8
   320  0ECC  3400               	retlw	0
   321                           
   322                           ;initializer for _gameboard
   323  0ECD  3405               	retlw	5
   324  0ECE  3400               	retlw	0
   325                           
   326                           ;initializer for _my_turn
   327  0ECF  3401               	retlw	1
   328                           
   329                           	psect	strings
   330  0300                     __pstrings:	
   331  0300                     stringtab:	
   332  0300                     __stringtab:	
   333  0300                     stringcode:	
   334                           ;	String table - string pointers are 1 byte each
   335                           
   336  0300                     stringdir:	
   337  0300  3003               	movlw	high stringdir
   338  0301  008A               	movwf	10
   339  0302  0804               	movf	4,w
   340  0303  0A84               	incf	4,f
   341  0304  0782               	addwf	2,f
   342  0305                     __stringbase:	
   343  0305  3400               	retlw	0
   344  0306                     __end_of__stringtab:	
   345  0306                     make_custom_chars@PIC:	
   346  0306  3418               	retlw	24
   347  0307  3418               	retlw	24
   348  0308  3414               	retlw	20
   349  0309  3404               	retlw	4
   350  030A  3404               	retlw	4
   351  030B  3403               	retlw	3
   352  030C  3402               	retlw	2
   353  030D  3403               	retlw	3
   354  030E                     __end_ofmake_custom_chars@PIC:	
   355  030E                     make_custom_chars@RH:	
   356  030E  341C               	retlw	28
   357  030F  3414               	retlw	20
   358  0310  3418               	retlw	24
   359  0311  3414               	retlw	20
   360  0312  3400               	retlw	0
   361  0313  3405               	retlw	5
   362  0314  3407               	retlw	7
   363  0315  3405               	retlw	5
   364  0316                     __end_ofmake_custom_chars@RH:	
   365  0316                     make_custom_chars@skull:	
   366  0316  340E               	retlw	14
   367  0317  3415               	retlw	21
   368  0318  3415               	retlw	21
   369  0319  341F               	retlw	31
   370  031A  340A               	retlw	10
   371  031B  340E               	retlw	14
   372  031C  340E               	retlw	14
   373  031D  3400               	retlw	0
   374  031E                     __end_ofmake_custom_chars@skull:	
   375  031E                     make_custom_chars@club:	
   376  031E  3400               	retlw	0
   377  031F  340E               	retlw	14
   378  0320  340E               	retlw	14
   379  0321  341F               	retlw	31
   380  0322  341F               	retlw	31
   381  0323  341F               	retlw	31
   382  0324  3404               	retlw	4
   383  0325  340E               	retlw	14
   384  0326                     __end_ofmake_custom_chars@club:	
   385  0326                     make_custom_chars@spade:	
   386  0326  3400               	retlw	0
   387  0327  3404               	retlw	4
   388  0328  340E               	retlw	14
   389  0329  341F               	retlw	31
   390  032A  341F               	retlw	31
   391  032B  340E               	retlw	14
   392  032C  3404               	retlw	4
   393  032D  340E               	retlw	14
   394  032E                     __end_ofmake_custom_chars@spade:	
   395  032E                     make_custom_chars@heart:	
   396  032E  3400               	retlw	0
   397  032F  3400               	retlw	0
   398  0330  340A               	retlw	10
   399  0331  341F               	retlw	31
   400  0332  341F               	retlw	31
   401  0333  340E               	retlw	14
   402  0334  3404               	retlw	4
   403  0335  3400               	retlw	0
   404  0336                     __end_ofmake_custom_chars@heart:	
   405  0336                     make_custom_chars@diamond:	
   406  0336  3400               	retlw	0
   407  0337  3404               	retlw	4
   408  0338  340E               	retlw	14
   409  0339  341F               	retlw	31
   410  033A  340E               	retlw	14
   411  033B  3404               	retlw	4
   412  033C  3400               	retlw	0
   413  033D  3400               	retlw	0
   414  033E                     __end_ofmake_custom_chars@diamond:	
   415  033E                     make_custom_chars@smile:	
   416  033E  3400               	retlw	0
   417  033F  340A               	retlw	10
   418  0340  340A               	retlw	10
   419  0341  3400               	retlw	0
   420  0342  3415               	retlw	21
   421  0343  3411               	retlw	17
   422  0344  340E               	retlw	14
   423  0345  3400               	retlw	0
   424  0346                     __end_ofmake_custom_chars@smile:	
   425  0015                     _CCPR1	set	21
   426  000E                     _TMR1	set	14
   427  0001                     _TMR0	set	1
   428  001E                     _ADRESH	set	30
   429  001F                     _ADCON0	set	31
   430  0006                     _PORTB	set	6
   431  0011                     _TMR2	set	17
   432  0012                     _T2CON	set	18
   433  0008                     _PORTD	set	8
   434  0005                     _PORTA	set	5
   435  005A                     _T0IF	set	90
   436  00FB                     _CHS1	set	251
   437  0066                     _ADIF	set	102
   438  005E                     _PEIE	set	94
   439  005F                     _GIE	set	95
   440  0080                     _TMR1ON	set	128
   441  0086                     _TMR1GE	set	134
   442  0085                     _T1CKPS1	set	133
   443  0084                     _T1CKPS0	set	132
   444  0081                     _TMR1CS	set	129
   445  00B8                     _CCP1M0	set	184
   446  00B9                     _CCP1M1	set	185
   447  00BA                     _CCP1M2	set	186
   448  00BB                     _CCP1M3	set	187
   449  0062                     _CCP1IF	set	98
   450  00F9                     _GO	set	249
   451  0061                     _TMR2IF	set	97
   452  0035                     _RB5	set	53
   453  0081                     _OPTION_REG	set	129
   454  009E                     _ADRESL	set	158
   455  009F                     _ADCON1	set	159
   456  0086                     _TRISB	set	134
   457  0095                     _WPUB	set	149
   458  0092                     _PR2	set	146
   459  0085                     _TRISA	set	133
   460  0088                     _TRISD	set	136
   461  0466                     _ADIE	set	1126
   462  040F                     _nRBPU	set	1039
   463  0461                     _TMR2IE	set	1121
   464  0478                     _SCS	set	1144
   465  0189                     _ANSELH	set	393
   466  0188                     _ANSEL	set	392
   467  0346                     STR_2:	
   468  0346  3450               	retlw	80	;'P'
   469  0347  3472               	retlw	114	;'r'
   470  0348  3465               	retlw	101	;'e'
   471  0349  3473               	retlw	115	;'s'
   472  034A  3473               	retlw	115	;'s'
   473  034B  3420               	retlw	32	;' '
   474  034C  3474               	retlw	116	;'t'
   475  034D  3468               	retlw	104	;'h'
   476  034E  3465               	retlw	101	;'e'
   477  034F  3420               	retlw	32	;' '
   478  0350  3462               	retlw	98	;'b'
   479  0351  3475               	retlw	117	;'u'
   480  0352  3474               	retlw	116	;'t'
   481  0353  3474               	retlw	116	;'t'
   482  0354  346F               	retlw	111	;'o'
   483  0355  346E               	retlw	110	;'n'
   484  0356  3400               	retlw	0
   485  0357                     STR_1:	
   486  0357  3420               	retlw	32	;' '
   487  0358  3443               	retlw	67	;'C'
   488  0359  346F               	retlw	111	;'o'
   489  035A  346E               	retlw	110	;'n'
   490  035B  3463               	retlw	99	;'c'
   491  035C  3465               	retlw	101	;'e'
   492  035D  346E               	retlw	110	;'n'
   493  035E  3474               	retlw	116	;'t'
   494  035F  3472               	retlw	114	;'r'
   495  0360  3461               	retlw	97	;'a'
   496  0361  3474               	retlw	116	;'t'
   497  0362  3469               	retlw	105	;'i'
   498  0363  346F               	retlw	111	;'o'
   499  0364  346E               	retlw	110	;'n'
   500  0365  3421               	retlw	33	;'!'
   501  0366  3400               	retlw	0
   502  0367                     STR_3:	
   503  0367  3420               	retlw	32	;' '
   504  0368  3420               	retlw	32	;' '
   505  0369  3420               	retlw	32	;' '
   506  036A  3420               	retlw	32	;' '
   507  036B  3474               	retlw	116	;'t'
   508  036C  346F               	retlw	111	;'o'
   509  036D  3420               	retlw	32	;' '
   510  036E  3473               	retlw	115	;'s'
   511  036F  3474               	retlw	116	;'t'
   512  0370  3461               	retlw	97	;'a'
   513  0371  3472               	retlw	114	;'r'
   514  0372  3474               	retlw	116	;'t'
   515  0373  3400               	retlw	0
   516  0374                     STR_4:	
   517  0374  3420               	retlw	32	;' '
   518  0375  3420               	retlw	32	;' '
   519  0376  3420               	retlw	32	;' '
   520  0377  3420               	retlw	32	;' '
   521  0378  3420               	retlw	32	;' '
   522  0379  3453               	retlw	83	;'S'
   523  037A  3463               	retlw	99	;'c'
   524  037B  346F               	retlw	111	;'o'
   525  037C  3472               	retlw	114	;'r'
   526  037D  3465               	retlw	101	;'e'
   527  037E  343A               	retlw	58	;':'
   528  037F  3400               	retlw	0
   529  0380                     STR_6:	
   530  0380  3420               	retlw	32	;' '
   531  0381  3420               	retlw	32	;' '
   532  0382  3450               	retlw	80	;'P'
   533  0383  3432               	retlw	50	;'2'
   534  0384  343A               	retlw	58	;':'
   535  0385  3420               	retlw	32	;' '
   536  0386  3400               	retlw	0
   537  0387                     STR_5:	
   538  0387  3420               	retlw	32	;' '
   539  0388  3450               	retlw	80	;'P'
   540  0389  3431               	retlw	49	;'1'
   541  038A  343A               	retlw	58	;':'
   542  038B  3420               	retlw	32	;' '
   543  038C  3400               	retlw	0
   544                           
   545                           ; #config settings
   546  0000                     
   547                           	psect	cinit
   548  000F                     start_initialization:	
   549  000F                     __initialization:	
   550                           
   551                           ; Initialize objects allocated to BANK0
   552  000F  120A  158A  26CB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   553  0014  00DD               	movwf	__pdataBANK0& (0+127)
   554  0015  120A  158A  26CC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   555  001A  00DE               	movwf	(__pdataBANK0+1)& (0+127)
   556  001B  120A  158A  26CD  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   557  0020  00DF               	movwf	(__pdataBANK0+2)& (0+127)
   558  0021  120A  158A  26CE  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   559  0026  00E0               	movwf	(__pdataBANK0+3)& (0+127)
   560  0027  120A  158A  26CF  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   561  002C  00E1               	movwf	(__pdataBANK0+4)& (0+127)
   562                           
   563                           ; Clear objects allocated to BANK3
   564  002D  1783               	bsf	3,7	;select IRP bank2
   565  002E  3090               	movlw	low __pbssBANK3
   566  002F  0084               	movwf	4
   567  0030  30B0               	movlw	low (__pbssBANK3+32)
   568  0031  120A  158A  26D8  120A  118A  	fcall	clear_ram0
   569                           
   570                           ; Clear objects allocated to BANK1
   571  0036  1383               	bcf	3,7	;select IRP bank0
   572  0037  30A0               	movlw	low __pbssBANK1
   573  0038  0084               	movwf	4
   574  0039  30E0               	movlw	low (__pbssBANK1+64)
   575  003A  120A  158A  26D8  120A  118A  	fcall	clear_ram0
   576                           
   577                           ; Clear objects allocated to BANK0
   578  003F  304F               	movlw	low __pbssBANK0
   579  0040  0084               	movwf	4
   580  0041  305D               	movlw	low (__pbssBANK0+14)
   581  0042  120A  158A  26D8  120A  118A  	fcall	clear_ram0
   582                           
   583                           ; Clear objects allocated to COMMON
   584  0047  01FA               	clrf	__pbssCOMMON& (0+127)
   585  0048  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   586  0049                     end_of_initialization:	
   587                           ;End of C runtime variable initialization code
   588                           
   589  0049                     __end_of__initialization:	
   590  0049  0183               	clrf	3
   591  004A  120A  118A  2FBD   	ljmp	_main	;jump to C main() function
   592                           
   593                           	psect	bssCOMMON
   594  007A                     __pbssCOMMON:	
   595  007A                     _selected_tile:	
   596  007A                     	ds	1
   597  007B                     _p1_score:	
   598  007B                     	ds	1
   599                           
   600                           	psect	bssBANK0
   601  004F                     __pbssBANK0:	
   602  004F                     _joystick_y_pos:	
   603  004F                     	ds	2
   604  0051                     _joystick_x_pos:	
   605  0051                     	ds	2
   606  0053                     _id_num:	
   607  0053                     	ds	1
   608  0054                     _joystick_pressed:	
   609  0054                     	ds	1
   610  0055                     _p2_score:	
   611  0055                     	ds	1
   612  0056                     _received_char:	
   613  0056                     	ds	1
   614  0057                     _cursor_movable:	
   615  0057                     	ds	1
   616  0058                     _cursor_move_delay_count:	
   617  0058                     	ds	1
   618  0059                     _delay_loops:	
   619  0059                     	ds	1
   620  005A                     _cursor_solid:	
   621  005A                     	ds	1
   622  005B                     _current_char:	
   623  005B                     	ds	1
   624  005C                     _cursor_pos:	
   625  005C                     	ds	1
   626                           
   627                           	psect	dataBANK0
   628  005D                     __pdataBANK0:	
   629  005D                     _scoreboard:	
   630  005D                     	ds	2
   631  005F                     _gameboard:	
   632  005F                     	ds	2
   633  0061                     _my_turn:	
   634  0061                     	ds	1
   635                           
   636                           	psect	bssBANK1
   637  00A0                     __pbssBANK1:	
   638  00A0                     _visible:	
   639  00A0                     	ds	32
   640  00C0                     _board:	
   641  00C0                     	ds	32
   642                           
   643                           	psect	bssBANK3
   644  0190                     __pbssBANK3:	
   645  0190                     randomize_gameboard@F1346:	
   646  0190                     	ds	32
   647                           
   648                           	psect	clrtext
   649  0ED8                     clear_ram0:	
   650                           ;	Called with FSR containing the base address, and
   651                           ;	W with the last address+1
   652                           
   653  0ED8  0064               	clrwdt	;clear the watchdog before getting into this loop
   654  0ED9                     clrloop0:	
   655  0ED9  0180               	clrf	0	;clear RAM location pointed to by FSR
   656  0EDA  0A84               	incf	4,f	;increment pointer
   657  0EDB  0604               	xorwf	4,w	;XOR with final address
   658  0EDC  1903               	btfsc	3,2	;have we reached the end yet?
   659  0EDD  3400               	retlw	0	;all done for this memory range, return
   660  0EDE  0604               	xorwf	4,w	;XOR again to restore value
   661  0EDF  2ED9               	goto	clrloop0	;do the next byte
   662                           
   663                           	psect	cstackCOMMON
   664  0070                     __pcstackCOMMON:	
   665  0070                     ?_joystick_init:	
   666  0070                     ?_gameboard_init:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_startup:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_update_gameboard_from_input:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_display_scoreboard:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_display_gameboard:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_time_init:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_get_current_char:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_randomize_gameboard:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_toggle_cursor:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_main:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_make_custom_chars:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_get_cursor_index:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_check_for_match:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_interrupt_handler:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ??_interrupt_handler:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_tmr0_init:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_Delay20us:	
   715                           ; 1 bytes @ 0x0
   716                           
   717                           
   718                           ; 1 bytes @ 0x0
   719  0070                     	ds	2
   720  0072                     ??_joystick_init:	
   721  0072                     ?_DelayMs:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_time_init:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_get_cursor_index:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ??_tmr0_init:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ??_Delay20us:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ?___awmod:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     get_cursor_index@cursor:	
   740                           ; 2 bytes @ 0x2
   741                           
   742  0072                     DelayMs@millis:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ___awmod@divisor:	
   746                           ; 2 bytes @ 0x2
   747                           
   748                           
   749                           ; 2 bytes @ 0x2
   750  0072                     	ds	1
   751  0073                     ??_get_current_char:	
   752  0073                     Delay20us@next:	
   753                           ; 1 bytes @ 0x3
   754                           
   755                           
   756                           ; 1 bytes @ 0x3
   757  0073                     	ds	1
   758  0074                     ??_DelayMs:	
   759  0074                     ?_lcd_write:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     lcd_write@CmdChar:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0074                     ___awmod@dividend:	
   766                           ; 1 bytes @ 0x4
   767                           
   768                           
   769                           ; 2 bytes @ 0x4
   770  0074                     	ds	1
   771  0075                     lcd_write@port:	
   772                           
   773                           ; 2 bytes @ 0x5
   774  0075                     	ds	1
   775  0076                     ??___awmod:	
   776                           
   777                           ; 1 bytes @ 0x6
   778  0076                     	ds	1
   779  0077                     ??_lcd_write:	
   780  0077                     ___awmod@counter:	
   781                           ; 1 bytes @ 0x7
   782                           
   783                           
   784                           ; 1 bytes @ 0x7
   785  0077                     	ds	1
   786  0078                     ___awmod@sign:	
   787                           
   788                           ; 1 bytes @ 0x8
   789  0078                     	ds	1
   790  0079                     ??___awdiv:	
   791  0079                     lcd_write@mode:	
   792                           ; 1 bytes @ 0x9
   793                           
   794                           
   795                           ; 1 bytes @ 0x9
   796  0079                     	ds	1
   797  007A                     ??_startup:	
   798  007A                     ??_lcd_clear:	
   799                           ; 1 bytes @ 0xA
   800                           
   801  007A                     ??_toggle_cursor:	
   802                           ; 1 bytes @ 0xA
   803                           
   804  007A                     ??_main:	
   805                           ; 1 bytes @ 0xA
   806                           
   807                           
   808                           	psect	cstackBANK0
   809  0020                     __pcstackBANK0:	
   810                           ; 1 bytes @ 0xA
   811                           
   812  0020                     ?_lcd_clear:	
   813  0020                     ?_lcd_puts:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0020                     ?_lcd_goto:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0020                     ?_lcd_set_custom_char:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0020                     ?___awdiv:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0020                     lcd_set_custom_char@cg_address:	
   826                           ; 2 bytes @ 0x0
   827                           
   828  0020                     lcd_clear@port:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0020                     lcd_puts@port:	
   832                           ; 2 bytes @ 0x0
   833                           
   834  0020                     lcd_goto@port:	
   835                           ; 2 bytes @ 0x0
   836                           
   837  0020                     ___awdiv@divisor:	
   838                           ; 2 bytes @ 0x0
   839                           
   840                           
   841                           ; 2 bytes @ 0x0
   842  0020                     	ds	1
   843  0021                     lcd_set_custom_char@port:	
   844                           
   845                           ; 2 bytes @ 0x1
   846  0021                     	ds	1
   847  0022                     ?_lcd_init:	
   848  0022                     ??_lcd_puts:	
   849                           ; 1 bytes @ 0x2
   850                           
   851  0022                     ??_lcd_goto:	
   852                           ; 1 bytes @ 0x2
   853                           
   854  0022                     lcd_init@port:	
   855                           ; 1 bytes @ 0x2
   856                           
   857  0022                     ___awdiv@dividend:	
   858                           ; 2 bytes @ 0x2
   859                           
   860                           
   861                           ; 2 bytes @ 0x2
   862  0022                     	ds	1
   863  0023                     ??_lcd_set_custom_char:	
   864  0023                     lcd_puts@string:	
   865                           ; 1 bytes @ 0x3
   866                           
   867  0023                     lcd_goto@position:	
   868                           ; 1 bytes @ 0x3
   869                           
   870                           
   871                           ; 1 bytes @ 0x3
   872  0023                     	ds	1
   873  0024                     ??_lcd_init:	
   874  0024                     ___awdiv@counter:	
   875                           ; 1 bytes @ 0x4
   876                           
   877                           
   878                           ; 1 bytes @ 0x4
   879  0024                     	ds	1
   880  0025                     lcd_set_custom_char@row:	
   881  0025                     ___awdiv@sign:	
   882                           ; 1 bytes @ 0x5
   883                           
   884                           
   885                           ; 1 bytes @ 0x5
   886  0025                     	ds	1
   887  0026                     lcd_set_custom_char@data:	
   888  0026                     ___awdiv@quotient:	
   889                           ; 1 bytes @ 0x6
   890                           
   891                           
   892                           ; 2 bytes @ 0x6
   893  0026                     	ds	1
   894  0027                     ??_make_custom_chars:	
   895                           
   896                           ; 1 bytes @ 0x7
   897  0027                     	ds	1
   898  0028                     ?_lcd_putch:	
   899  0028                     ??_randomize_gameboard:	
   900                           ; 1 bytes @ 0x8
   901                           
   902  0028                     lcd_putch@port:	
   903                           ; 1 bytes @ 0x8
   904                           
   905                           
   906                           ; 2 bytes @ 0x8
   907  0028                     	ds	2
   908  002A                     ??_lcd_putch:	
   909                           
   910                           ; 1 bytes @ 0xA
   911  002A                     	ds	1
   912  002B                     lcd_putch@character:	
   913  002B                     randomize_gameboard@used:	
   914                           ; 1 bytes @ 0xB
   915                           
   916                           
   917                           ; 32 bytes @ 0xB
   918  002B                     	ds	1
   919  002C                     ??_display_scoreboard:	
   920  002C                     ??_display_gameboard:	
   921                           ; 1 bytes @ 0xC
   922                           
   923  002C                     ?_update_cursor:	
   924                           ; 1 bytes @ 0xC
   925                           
   926  002C                     update_cursor@direction:	
   927                           ; 1 bytes @ 0xC
   928                           
   929                           
   930                           ; 1 bytes @ 0xC
   931  002C                     	ds	1
   932  002D                     ??_update_cursor:	
   933  002D                     display_gameboard@i:	
   934                           ; 1 bytes @ 0xD
   935                           
   936                           
   937                           ; 1 bytes @ 0xD
   938  002D                     	ds	1
   939  002E                     ??_check_for_match:	
   940                           
   941                           ; 1 bytes @ 0xE
   942  002E                     	ds	1
   943  002F                     check_for_match@player:	
   944  002F                     update_cursor@move_delay_count:	
   945                           ; 1 bytes @ 0xF
   946                           
   947                           
   948                           ; 1 bytes @ 0xF
   949  002F                     	ds	1
   950  0030                     ??_update_gameboard_from_input:	
   951                           
   952                           ; 1 bytes @ 0x10
   953  0030                     	ds	27
   954  004B                     randomize_gameboard@current:	
   955                           
   956                           ; 1 bytes @ 0x2B
   957  004B                     	ds	1
   958  004C                     randomize_gameboard@random:	
   959                           
   960                           ; 1 bytes @ 0x2C
   961  004C                     	ds	1
   962  004D                     ??_gameboard_init:	
   963                           
   964                           ; 1 bytes @ 0x2D
   965  004D                     	ds	1
   966  004E                     gameboard_init@i:	
   967                           
   968                           ; 1 bytes @ 0x2E
   969  004E                     	ds	1
   970                           
   971                           	psect	maintext
   972  07BD                     __pmaintext:	
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 78 in file "concentration.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : B00/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels required when called:    7
   998 ;; This function calls:
   999 ;;		_gameboard_init
  1000 ;;		_joystick_init
  1001 ;;		_lcd_init
  1002 ;;		_startup
  1003 ;;		_update_gameboard_from_input
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _main
  1011  07BD                     _main:	
  1012  07BD                     l2351:	
  1013                           ;incstack = 0
  1014                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1015                           
  1016                           
  1017                           ;concentration.c: 80:     SCS = 0;
  1018  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  1019  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  1020  07BF  100F               	bcf	15,0	;volatile
  1021  07C0                     l2353:	
  1022                           
  1023                           ;concentration.c: 82:     TRISD = 0;
  1024  07C0  0188               	clrf	8	;volatile
  1025                           
  1026                           ;concentration.c: 83:     TRISA = 0;
  1027  07C1  0185               	clrf	5	;volatile
  1028                           
  1029                           ;concentration.c: 84:     ANSEL = 0;
  1030  07C2  1683               	bsf	3,5	;RP0=1, select bank3
  1031  07C3  1703               	bsf	3,6	;RP1=1, select bank3
  1032  07C4  0188               	clrf	8	;volatile
  1033  07C5                     l2355:	
  1034                           
  1035                           ;concentration.c: 85:     lcd_init(gameboard);
  1036  07C5  3005               	movlw	5
  1037  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1038  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1039  07C8  00A2               	movwf	lcd_init@port
  1040  07C9  3000               	movlw	0
  1041  07CA  00A3               	movwf	lcd_init@port+1
  1042  07CB  120A  118A  268B  120A  118A  	fcall	_lcd_init
  1043  07D0                     l2357:	
  1044                           
  1045                           ;concentration.c: 86:     lcd_init(scoreboard);
  1046  07D0  3008               	movlw	8
  1047  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1048  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1049  07D3  00A2               	movwf	lcd_init@port
  1050  07D4  3000               	movlw	0
  1051  07D5  00A3               	movwf	lcd_init@port+1
  1052  07D6  120A  118A  268B  120A  118A  	fcall	_lcd_init
  1053  07DB                     l2359:	
  1054                           
  1055                           ;concentration.c: 88:     joystick_init();
  1056  07DB  120A  158A  274D  120A  118A  	fcall	_joystick_init
  1057  07E0                     l2361:	
  1058                           
  1059                           ;concentration.c: 89:     gameboard_init();
  1060  07E0  120A  118A  2573  120A  118A  	fcall	_gameboard_init
  1061  07E5                     l2363:	
  1062                           
  1063                           ;concentration.c: 90:     startup();
  1064  07E5  120A  118A  238D  120A  118A  	fcall	_startup
  1065  07EA                     l2365:	
  1066                           
  1067                           ;concentration.c: 93:         update_gameboard_from_input();
  1068  07EA  120A  118A  204D  120A  118A  	fcall	_update_gameboard_from_input
  1069  07EF  2FEA               	goto	l2365
  1070  07F0  120A  118A  280C   	ljmp	start
  1071  07F3                     __end_of_main:	
  1072                           
  1073                           	psect	text1
  1074  004D                     __ptext1:	
  1075 ;; *************** function _update_gameboard_from_input *****************
  1076 ;; Defined at:
  1077 ;;		line 225 in file "concentration.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          0       2       0       0       0
  1094 ;;      Totals:         0       2       0       0       0
  1095 ;;Total ram usage:        2 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    6
  1098 ;; This function calls:
  1099 ;;		_DelayMs
  1100 ;;		_check_for_match
  1101 ;;		_display_gameboard
  1102 ;;		_get_cursor_index
  1103 ;;		_toggle_cursor
  1104 ;;		_update_cursor
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _update_gameboard_from_input
  1112  004D                     _update_gameboard_from_input:	
  1113  004D                     l2289:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1116                           
  1117                           
  1118                           ;concentration.c: 227:     if(GO == 0) {
  1119  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1120  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1121  004F  189F               	btfsc	31,1	;volatile
  1122  0050  2852               	goto	u1441
  1123  0051  2853               	goto	u1440
  1124  0052                     u1441:	
  1125  0052  2854               	goto	l227
  1126  0053                     u1440:	
  1127  0053                     l2291:	
  1128                           
  1129                           ;concentration.c: 228:         GO = 1;
  1130  0053  149F               	bsf	31,1	;volatile
  1131  0054                     l227:	
  1132                           ;concentration.c: 229:     }
  1133                           
  1134                           
  1135                           ;concentration.c: 230:     if((RB5 == 0)&&(joystick_pressed == 1)) {
  1136  0054  1A86               	btfsc	6,5	;volatile
  1137  0055  2857               	goto	u1451
  1138  0056  2858               	goto	u1450
  1139  0057                     u1451:	
  1140  0057  28AE               	goto	l228
  1141  0058                     u1450:	
  1142  0058                     l2293:	
  1143  0058  0354               	decf	_joystick_pressed,w
  1144  0059  1D03               	btfss	3,2
  1145  005A  285C               	goto	u1461
  1146  005B  285D               	goto	u1460
  1147  005C                     u1461:	
  1148  005C  28AE               	goto	l228
  1149  005D                     u1460:	
  1150  005D                     l2295:	
  1151                           
  1152                           ;concentration.c: 231:         DelayMs(6);
  1153  005D  3006               	movlw	6
  1154  005E  00F2               	movwf	DelayMs@millis
  1155  005F  3000               	movlw	0
  1156  0060  00F3               	movwf	DelayMs@millis+1
  1157  0061  120A  158A  271A  120A  118A  	fcall	_DelayMs
  1158  0066                     l2297:	
  1159                           
  1160                           ;concentration.c: 232:         joystick_pressed = 0;
  1161  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0068  01D4               	clrf	_joystick_pressed
  1164  0069                     l2299:	
  1165                           
  1166                           ;concentration.c: 233:         if(visible[get_cursor_index(cursor_pos)] == 0xFF) {
  1167  0069  085C               	movf	_cursor_pos,w
  1168  006A  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  1169  006F  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1170  0070  0084               	movwf	4
  1171  0071  1383               	bcf	3,7	;select IRP bank1
  1172  0072  0A00               	incf	0,w
  1173  0073  1D03               	btfss	3,2
  1174  0074  2876               	goto	u1471
  1175  0075  2877               	goto	u1470
  1176  0076                     u1471:	
  1177  0076  28B4               	goto	l230
  1178  0077                     u1470:	
  1179  0077                     l2301:	
  1180                           
  1181                           ;concentration.c: 234:             visible[get_cursor_index(cursor_pos)] = board[get_cur
      +                          sor_index(cursor_pos)];
  1182  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0079  085C               	movf	_cursor_pos,w
  1185  007A  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  1186  007F  3EC0               	addlw	(low (_board| 0))& (0+255)
  1187  0080  0084               	movwf	4
  1188  0081  1383               	bcf	3,7	;select IRP bank1
  1189  0082  0800               	movf	0,w
  1190  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0085  00B0               	movwf	??_update_gameboard_from_input
  1193  0086  085C               	movf	_cursor_pos,w
  1194  0087  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  1195  008C  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1196  008D  0084               	movwf	4
  1197  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1198  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0090  0830               	movf	??_update_gameboard_from_input,w
  1200  0091  1383               	bcf	3,7	;select IRP bank1
  1201  0092  0080               	movwf	0
  1202                           
  1203                           ;concentration.c: 235:             current_char = board[get_cursor_index(cursor_pos)];
  1204  0093  085C               	movf	_cursor_pos,w
  1205  0094  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  1206  0099  3EC0               	addlw	(low (_board| 0))& (0+255)
  1207  009A  0084               	movwf	4
  1208  009B  1383               	bcf	3,7	;select IRP bank1
  1209  009C  0800               	movf	0,w
  1210  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1211  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1212  009F  00B0               	movwf	??_update_gameboard_from_input
  1213  00A0  0830               	movf	??_update_gameboard_from_input,w
  1214  00A1  00DB               	movwf	_current_char
  1215                           
  1216                           ;concentration.c: 237:             check_for_match(0);
  1217  00A2  3000               	movlw	0
  1218  00A3  120A  118A  2492  120A  118A  	fcall	_check_for_match
  1219                           
  1220                           ;concentration.c: 239:             display_gameboard();
  1221  00A8  120A  118A  2778  120A  118A  	fcall	_display_gameboard
  1222  00AD  28B4               	goto	l230
  1223  00AE                     l228:	
  1224  00AE  1E86               	btfss	6,5	;volatile
  1225  00AF  28B1               	goto	u1481
  1226  00B0  28B2               	goto	u1480
  1227  00B1                     u1481:	
  1228  00B1  28B4               	goto	l230
  1229  00B2                     u1480:	
  1230  00B2                     l2303:	
  1231                           
  1232                           ;concentration.c: 242:         joystick_pressed = 1;
  1233  00B2  01D4               	clrf	_joystick_pressed
  1234  00B3  0AD4               	incf	_joystick_pressed,f
  1235  00B4                     l230:	
  1236                           
  1237                           ;concentration.c: 245:     if(CCP1IF == 1) {
  1238  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1239  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1240  00B6  1D0C               	btfss	12,2	;volatile
  1241  00B7  28B9               	goto	u1491
  1242  00B8  28BA               	goto	u1490
  1243  00B9                     u1491:	
  1244  00B9  28DA               	goto	l2315
  1245  00BA                     u1490:	
  1246  00BA                     l2305:	
  1247                           
  1248                           ;concentration.c: 246:         if(delay_loops == 0) {
  1249  00BA  0859               	movf	_delay_loops,w
  1250  00BB  1D03               	btfss	3,2
  1251  00BC  28BE               	goto	u1501
  1252  00BD  28BF               	goto	u1500
  1253  00BE                     u1501:	
  1254  00BE  28C9               	goto	l2311
  1255  00BF                     u1500:	
  1256  00BF                     l2307:	
  1257                           
  1258                           ;concentration.c: 247:             delay_loops = 25;
  1259  00BF  3019               	movlw	25
  1260  00C0  00B0               	movwf	??_update_gameboard_from_input
  1261  00C1  0830               	movf	??_update_gameboard_from_input,w
  1262  00C2  00D9               	movwf	_delay_loops
  1263  00C3                     l2309:	
  1264                           
  1265                           ;concentration.c: 248:             toggle_cursor();
  1266  00C3  120A  158A  279F  120A  118A  	fcall	_toggle_cursor
  1267                           
  1268                           ;concentration.c: 249:         } else {
  1269  00C8  28CB               	goto	l234
  1270  00C9                     l2311:	
  1271                           
  1272                           ;concentration.c: 250:             delay_loops--;
  1273  00C9  3001               	movlw	1
  1274  00CA  02D9               	subwf	_delay_loops,f
  1275  00CB                     l234:	
  1276                           ;concentration.c: 251:         }
  1277                           
  1278                           
  1279                           ;concentration.c: 252:         CCPR1 = TMR1+50000;
  1280  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1281  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1282  00CD  080E               	movf	14,w	;volatile
  1283  00CE  3E50               	addlw	80
  1284  00CF  00B0               	movwf	??_update_gameboard_from_input
  1285  00D0  080F               	movf	15,w	;volatile
  1286  00D1  1803               	skipnc
  1287  00D2  3E01               	addlw	1
  1288  00D3  3EC3               	addlw	195
  1289  00D4  00B1               	movwf	??_update_gameboard_from_input+1
  1290  00D5  0830               	movf	??_update_gameboard_from_input,w
  1291  00D6  0095               	movwf	21	;volatile
  1292  00D7  0831               	movf	??_update_gameboard_from_input+1,w
  1293  00D8  0096               	movwf	22	;volatile
  1294  00D9                     l2313:	
  1295                           
  1296                           ;concentration.c: 253:         CCP1IF = 0;
  1297  00D9  110C               	bcf	12,2	;volatile
  1298  00DA                     l2315:	
  1299                           
  1300                           ;concentration.c: 256:     if(joystick_x_pos > 900) {
  1301  00DA  0852               	movf	_joystick_x_pos+1,w
  1302  00DB  3A80               	xorlw	128
  1303  00DC  00FF               	movwf	btemp+1
  1304  00DD  3083               	movlw	131
  1305  00DE  027F               	subwf	btemp+1,w
  1306  00DF  1D03               	skipz
  1307  00E0  28E3               	goto	u1515
  1308  00E1  3085               	movlw	133
  1309  00E2  0251               	subwf	_joystick_x_pos,w
  1310  00E3                     u1515:	
  1311  00E3  1C03               	skipc
  1312  00E4  28E6               	goto	u1511
  1313  00E5  28E7               	goto	u1510
  1314  00E6                     u1511:	
  1315  00E6  28F9               	goto	l2321
  1316  00E7                     u1510:	
  1317  00E7                     l2317:	
  1318                           
  1319                           ;concentration.c: 257:         if(cursor_movable) {
  1320  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1321  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1322  00E9  0857               	movf	_cursor_movable,w
  1323  00EA  1903               	btfsc	3,2
  1324  00EB  28ED               	goto	u1521
  1325  00EC  28EE               	goto	u1520
  1326  00ED                     u1521:	
  1327  00ED  298B               	goto	l253
  1328  00EE                     u1520:	
  1329  00EE                     l2319:	
  1330                           
  1331                           ;concentration.c: 258:             update_cursor(30, 2);
  1332  00EE  3002               	movlw	2
  1333  00EF  00B0               	movwf	??_update_gameboard_from_input
  1334  00F0  0830               	movf	??_update_gameboard_from_input,w
  1335  00F1  00AC               	movwf	update_cursor@direction
  1336  00F2  301E               	movlw	30
  1337  00F3  120A  118A  2253  120A  118A  	fcall	_update_cursor
  1338  00F8  298B               	goto	l253
  1339  00F9                     l2321:	
  1340  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1341  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1342  00FB  0852               	movf	_joystick_x_pos+1,w
  1343  00FC  3A80               	xorlw	128
  1344  00FD  00FF               	movwf	btemp+1
  1345  00FE  3080               	movlw	128
  1346  00FF  027F               	subwf	btemp+1,w
  1347  0100  1D03               	skipz
  1348  0101  2904               	goto	u1535
  1349  0102  3064               	movlw	100
  1350  0103  0251               	subwf	_joystick_x_pos,w
  1351  0104                     u1535:	
  1352  0104  1803               	skipnc
  1353  0105  2907               	goto	u1531
  1354  0106  2908               	goto	u1530
  1355  0107                     u1531:	
  1356  0107  291A               	goto	l2327
  1357  0108                     u1530:	
  1358  0108                     l2323:	
  1359                           
  1360                           ;concentration.c: 261:         if(cursor_movable) {
  1361  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1363  010A  0857               	movf	_cursor_movable,w
  1364  010B  1903               	btfsc	3,2
  1365  010C  290E               	goto	u1541
  1366  010D  290F               	goto	u1540
  1367  010E                     u1541:	
  1368  010E  298B               	goto	l253
  1369  010F                     u1540:	
  1370  010F                     l2325:	
  1371                           
  1372                           ;concentration.c: 262:             update_cursor(30, 3);
  1373  010F  3003               	movlw	3
  1374  0110  00B0               	movwf	??_update_gameboard_from_input
  1375  0111  0830               	movf	??_update_gameboard_from_input,w
  1376  0112  00AC               	movwf	update_cursor@direction
  1377  0113  301E               	movlw	30
  1378  0114  120A  118A  2253  120A  118A  	fcall	_update_cursor
  1379  0119  298B               	goto	l253
  1380  011A                     l2327:	
  1381  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1382  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1383  011C  0852               	movf	_joystick_x_pos+1,w
  1384  011D  3A80               	xorlw	128
  1385  011E  00FF               	movwf	btemp+1
  1386  011F  3083               	movlw	131
  1387  0120  027F               	subwf	btemp+1,w
  1388  0121  1D03               	skipz
  1389  0122  2925               	goto	u1555
  1390  0123  3021               	movlw	33
  1391  0124  0251               	subwf	_joystick_x_pos,w
  1392  0125                     u1555:	
  1393  0125  1C03               	skipc
  1394  0126  2928               	goto	u1551
  1395  0127  2929               	goto	u1550
  1396  0128                     u1551:	
  1397  0128  293B               	goto	l2333
  1398  0129                     u1550:	
  1399  0129                     l2329:	
  1400                           
  1401                           ;concentration.c: 265:         if(cursor_movable) {
  1402  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1403  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1404  012B  0857               	movf	_cursor_movable,w
  1405  012C  1903               	btfsc	3,2
  1406  012D  292F               	goto	u1561
  1407  012E  2930               	goto	u1560
  1408  012F                     u1561:	
  1409  012F  298B               	goto	l253
  1410  0130                     u1560:	
  1411  0130                     l2331:	
  1412                           
  1413                           ;concentration.c: 266:             update_cursor(60, 2);
  1414  0130  3002               	movlw	2
  1415  0131  00B0               	movwf	??_update_gameboard_from_input
  1416  0132  0830               	movf	??_update_gameboard_from_input,w
  1417  0133  00AC               	movwf	update_cursor@direction
  1418  0134  303C               	movlw	60
  1419  0135  120A  118A  2253  120A  118A  	fcall	_update_cursor
  1420  013A  298B               	goto	l253
  1421  013B                     l2333:	
  1422  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1423  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1424  013D  0852               	movf	_joystick_x_pos+1,w
  1425  013E  3A80               	xorlw	128
  1426  013F  00FF               	movwf	btemp+1
  1427  0140  3080               	movlw	128
  1428  0141  027F               	subwf	btemp+1,w
  1429  0142  1D03               	skipz
  1430  0143  2946               	goto	u1575
  1431  0144  30C8               	movlw	200
  1432  0145  0251               	subwf	_joystick_x_pos,w
  1433  0146                     u1575:	
  1434  0146  1803               	skipnc
  1435  0147  2949               	goto	u1571
  1436  0148  294A               	goto	u1570
  1437  0149                     u1571:	
  1438  0149  295C               	goto	l2339
  1439  014A                     u1570:	
  1440  014A                     l2335:	
  1441                           
  1442                           ;concentration.c: 269:         if(cursor_movable) {
  1443  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1444  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1445  014C  0857               	movf	_cursor_movable,w
  1446  014D  1903               	btfsc	3,2
  1447  014E  2950               	goto	u1581
  1448  014F  2951               	goto	u1580
  1449  0150                     u1581:	
  1450  0150  298B               	goto	l253
  1451  0151                     u1580:	
  1452  0151                     l2337:	
  1453                           
  1454                           ;concentration.c: 270:             update_cursor(60, 3);
  1455  0151  3003               	movlw	3
  1456  0152  00B0               	movwf	??_update_gameboard_from_input
  1457  0153  0830               	movf	??_update_gameboard_from_input,w
  1458  0154  00AC               	movwf	update_cursor@direction
  1459  0155  303C               	movlw	60
  1460  0156  120A  118A  2253  120A  118A  	fcall	_update_cursor
  1461  015B  298B               	goto	l253
  1462  015C                     l2339:	
  1463  015C  30FD               	movlw	253
  1464  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1465  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1466  015F  064F               	xorwf	_joystick_y_pos,w
  1467  0160  3003               	movlw	3
  1468  0161  1903               	skipnz
  1469  0162  0650               	xorwf	_joystick_y_pos+1,w
  1470  0163  1D03               	btfss	3,2
  1471  0164  2966               	goto	u1591
  1472  0165  2967               	goto	u1590
  1473  0166                     u1591:	
  1474  0166  2975               	goto	l2345
  1475  0167                     u1590:	
  1476  0167                     l2341:	
  1477                           
  1478                           ;concentration.c: 273:         if(cursor_movable) {
  1479  0167  0857               	movf	_cursor_movable,w
  1480  0168  1903               	btfsc	3,2
  1481  0169  296B               	goto	u1601
  1482  016A  296C               	goto	u1600
  1483  016B                     u1601:	
  1484  016B  298B               	goto	l253
  1485  016C                     u1600:	
  1486  016C                     l2343:	
  1487                           
  1488                           ;concentration.c: 274:             update_cursor(62, 1);
  1489  016C  01AC               	clrf	update_cursor@direction
  1490  016D  0AAC               	incf	update_cursor@direction,f
  1491  016E  303E               	movlw	62
  1492  016F  120A  118A  2253  120A  118A  	fcall	_update_cursor
  1493  0174  298B               	goto	l253
  1494  0175                     l2345:	
  1495  0175  084F               	movf	_joystick_y_pos,w
  1496  0176  0450               	iorwf	_joystick_y_pos+1,w
  1497  0177  1D03               	btfss	3,2
  1498  0178  297A               	goto	u1611
  1499  0179  297B               	goto	u1610
  1500  017A                     u1611:	
  1501  017A  2989               	goto	l250
  1502  017B                     u1610:	
  1503  017B                     l2347:	
  1504                           
  1505                           ;concentration.c: 277:         if(cursor_movable) {
  1506  017B  0857               	movf	_cursor_movable,w
  1507  017C  1903               	btfsc	3,2
  1508  017D  297F               	goto	u1621
  1509  017E  2980               	goto	u1620
  1510  017F                     u1621:	
  1511  017F  298B               	goto	l253
  1512  0180                     u1620:	
  1513  0180                     l2349:	
  1514                           
  1515                           ;concentration.c: 278:             update_cursor(62, 1);
  1516  0180  01AC               	clrf	update_cursor@direction
  1517  0181  0AAC               	incf	update_cursor@direction,f
  1518  0182  303E               	movlw	62
  1519  0183  120A  118A  2253  120A  118A  	fcall	_update_cursor
  1520  0188  298B               	goto	l253
  1521  0189                     l250:	
  1522                           
  1523                           ;concentration.c: 281:         cursor_movable = 1;
  1524  0189  01D7               	clrf	_cursor_movable
  1525  018A  0AD7               	incf	_cursor_movable,f
  1526  018B                     l253:	
  1527  018B  0008               	return
  1528  018C                     __end_of_update_gameboard_from_input:	
  1529                           
  1530                           	psect	text2
  1531  0253                     __ptext2:	
  1532 ;; *************** function _update_cursor *****************
  1533 ;; Defined at:
  1534 ;;		line 285 in file "concentration.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  move_delay_c    1    wreg     unsigned char 
  1537 ;;  direction       1   12[BANK0 ] unsigned char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  move_delay_c    1   15[BANK0 ] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       1       0       0       0
  1550 ;;      Locals:         0       1       0       0       0
  1551 ;;      Temps:          0       2       0       0       0
  1552 ;;      Totals:         0       4       0       0       0
  1553 ;;Total ram usage:        4 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    4
  1556 ;; This function calls:
  1557 ;;		_get_current_char
  1558 ;;		_lcd_goto
  1559 ;;		_lcd_putch
  1560 ;; This function is called by:
  1561 ;;		_update_gameboard_from_input
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _update_cursor
  1567  0253                     _update_cursor:	
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1571                           ;update_cursor@move_delay_count stored from wreg
  1572  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0255  00AF               	movwf	update_cursor@move_delay_count
  1575  0256                     l2171:	
  1576                           
  1577                           ;concentration.c: 286:     cursor_movable = 0;
  1578  0256  01D7               	clrf	_cursor_movable
  1579  0257                     l2173:	
  1580                           
  1581                           ;concentration.c: 287:     cursor_move_delay_count = move_delay_count;
  1582  0257  082F               	movf	update_cursor@move_delay_count,w
  1583  0258  00AD               	movwf	??_update_cursor
  1584  0259  082D               	movf	??_update_cursor,w
  1585  025A  00D8               	movwf	_cursor_move_delay_count
  1586                           
  1587                           ;concentration.c: 288:     switch(direction) {
  1588  025B  2A9A               	goto	l2195
  1589  025C                     l2175:	
  1590                           
  1591                           ;concentration.c: 290:             cursor_pos ^= 0x40;
  1592  025C  3040               	movlw	64
  1593  025D  00AD               	movwf	??_update_cursor
  1594  025E  082D               	movf	??_update_cursor,w
  1595  025F  06DC               	xorwf	_cursor_pos,f
  1596                           
  1597                           ;concentration.c: 291:             break;
  1598  0260  2AAD               	goto	l2197
  1599  0261                     l2177:	
  1600                           
  1601                           ;concentration.c: 295:                     cursor_pos = 0x0F;
  1602  0261  300F               	movlw	15
  1603  0262  00AD               	movwf	??_update_cursor
  1604  0263  082D               	movf	??_update_cursor,w
  1605  0264  00DC               	movwf	_cursor_pos
  1606                           
  1607                           ;concentration.c: 296:                     break;
  1608  0265  2AAD               	goto	l2197
  1609  0266                     l2179:	
  1610                           
  1611                           ;concentration.c: 298:                     cursor_pos = 0x4F;
  1612  0266  304F               	movlw	79
  1613  0267  00AD               	movwf	??_update_cursor
  1614  0268  082D               	movf	??_update_cursor,w
  1615  0269  00DC               	movwf	_cursor_pos
  1616                           
  1617                           ;concentration.c: 299:                     break;
  1618  026A  2AAD               	goto	l2197
  1619  026B                     l2181:	
  1620                           
  1621                           ;concentration.c: 301:                     cursor_pos--;
  1622  026B  3001               	movlw	1
  1623  026C  02DC               	subwf	_cursor_pos,f
  1624                           
  1625                           ;concentration.c: 302:             }
  1626  026D  2AAD               	goto	l2197
  1627  026E                     l2183:	
  1628  026E  085C               	movf	_cursor_pos,w
  1629  026F  00AD               	movwf	??_update_cursor
  1630  0270  01AE               	clrf	??_update_cursor+1
  1631                           
  1632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 1, Range of values is 0 to 0
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte            4     3 (average)
  1638                           ; direct_byte           11     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641  0271  082E               	movf	??_update_cursor+1,w
  1642  0272  3A00               	xorlw	0	; case 0
  1643  0273  1903               	skipnz
  1644  0274  2A76               	goto	l2427
  1645  0275  2A6B               	goto	l2181
  1646  0276                     l2427:	
  1647                           
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 2, Range of values is 0 to 64
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte            7     4 (average)
  1653                           ; direct_byte          203     8 (fixed)
  1654                           ; jumptable            260     6 (fixed)
  1655                           ;	Chosen strategy is simple_byte
  1656  0276  082D               	movf	??_update_cursor,w
  1657  0277  3A00               	xorlw	0	; case 0
  1658  0278  1903               	skipnz
  1659  0279  2A61               	goto	l2177
  1660  027A  3A40               	xorlw	64	; case 64
  1661  027B  1903               	skipnz
  1662  027C  2A66               	goto	l2179
  1663  027D  2A6B               	goto	l2181
  1664  027E                     l2185:	
  1665                           
  1666                           ;concentration.c: 307:                     cursor_pos = 0x00;
  1667  027E  01DC               	clrf	_cursor_pos
  1668                           
  1669                           ;concentration.c: 308:                     break;
  1670  027F  2AAD               	goto	l2197
  1671  0280                     l2187:	
  1672                           
  1673                           ;concentration.c: 310:                     cursor_pos = 0x40;
  1674  0280  3040               	movlw	64
  1675  0281  00AD               	movwf	??_update_cursor
  1676  0282  082D               	movf	??_update_cursor,w
  1677  0283  00DC               	movwf	_cursor_pos
  1678                           
  1679                           ;concentration.c: 311:                     break;
  1680  0284  2AAD               	goto	l2197
  1681  0285                     l2189:	
  1682                           
  1683                           ;concentration.c: 313:                     cursor_pos++;
  1684  0285  3001               	movlw	1
  1685  0286  00AD               	movwf	??_update_cursor
  1686  0287  082D               	movf	??_update_cursor,w
  1687  0288  07DC               	addwf	_cursor_pos,f
  1688                           
  1689                           ;concentration.c: 314:             }
  1690  0289  2AAD               	goto	l2197
  1691  028A                     l2191:	
  1692  028A  085C               	movf	_cursor_pos,w
  1693  028B  00AD               	movwf	??_update_cursor
  1694  028C  01AE               	clrf	??_update_cursor+1
  1695                           
  1696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1697                           ; Switch size 1, requested type "simple"
  1698                           ; Number of cases is 1, Range of values is 0 to 0
  1699                           ; switch strategies available:
  1700                           ; Name         Instructions Cycles
  1701                           ; simple_byte            4     3 (average)
  1702                           ; direct_byte           11     8 (fixed)
  1703                           ; jumptable            260     6 (fixed)
  1704                           ;	Chosen strategy is simple_byte
  1705  028D  082E               	movf	??_update_cursor+1,w
  1706  028E  3A00               	xorlw	0	; case 0
  1707  028F  1903               	skipnz
  1708  0290  2A92               	goto	l2429
  1709  0291  2A85               	goto	l2189
  1710  0292                     l2429:	
  1711                           
  1712                           ; Switch size 1, requested type "simple"
  1713                           ; Number of cases is 2, Range of values is 15 to 79
  1714                           ; switch strategies available:
  1715                           ; Name         Instructions Cycles
  1716                           ; simple_byte            7     4 (average)
  1717                           ; direct_byte          206    11 (fixed)
  1718                           ; jumptable            263     9 (fixed)
  1719                           ;	Chosen strategy is simple_byte
  1720  0292  082D               	movf	??_update_cursor,w
  1721  0293  3A0F               	xorlw	15	; case 15
  1722  0294  1903               	skipnz
  1723  0295  2A7E               	goto	l2185
  1724  0296  3A40               	xorlw	64	; case 79
  1725  0297  1903               	skipnz
  1726  0298  2A80               	goto	l2187
  1727  0299  2A85               	goto	l2189
  1728  029A                     l2195:	
  1729  029A  082C               	movf	update_cursor@direction,w
  1730  029B  00AD               	movwf	??_update_cursor
  1731  029C  01AE               	clrf	??_update_cursor+1
  1732                           
  1733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1734                           ; Switch size 1, requested type "simple"
  1735                           ; Number of cases is 1, Range of values is 0 to 0
  1736                           ; switch strategies available:
  1737                           ; Name         Instructions Cycles
  1738                           ; simple_byte            4     3 (average)
  1739                           ; direct_byte           11     8 (fixed)
  1740                           ; jumptable            260     6 (fixed)
  1741                           ;	Chosen strategy is simple_byte
  1742  029D  082E               	movf	??_update_cursor+1,w
  1743  029E  3A00               	xorlw	0	; case 0
  1744  029F  1903               	skipnz
  1745  02A0  2AA2               	goto	l2431
  1746  02A1  2AAD               	goto	l2197
  1747  02A2                     l2431:	
  1748                           
  1749                           ; Switch size 1, requested type "simple"
  1750                           ; Number of cases is 3, Range of values is 1 to 3
  1751                           ; switch strategies available:
  1752                           ; Name         Instructions Cycles
  1753                           ; simple_byte           10     6 (average)
  1754                           ; direct_byte           20    11 (fixed)
  1755                           ; jumptable            263     9 (fixed)
  1756                           ;	Chosen strategy is simple_byte
  1757  02A2  082D               	movf	??_update_cursor,w
  1758  02A3  3A01               	xorlw	1	; case 1
  1759  02A4  1903               	skipnz
  1760  02A5  2A5C               	goto	l2175
  1761  02A6  3A03               	xorlw	3	; case 2
  1762  02A7  1903               	skipnz
  1763  02A8  2A6E               	goto	l2183
  1764  02A9  3A01               	xorlw	1	; case 3
  1765  02AA  1903               	skipnz
  1766  02AB  2A8A               	goto	l2191
  1767  02AC  2AAD               	goto	l2197
  1768  02AD                     l2197:	
  1769                           
  1770                           ;concentration.c: 317:     lcd_putch(current_char, gameboard);
  1771  02AD  3005               	movlw	5
  1772  02AE  00A8               	movwf	lcd_putch@port
  1773  02AF  3000               	movlw	0
  1774  02B0  00A9               	movwf	lcd_putch@port+1
  1775  02B1  085B               	movf	_current_char,w
  1776  02B2  120A  158A  2708  120A  118A  	fcall	_lcd_putch
  1777                           
  1778                           ;concentration.c: 318:     lcd_goto(cursor_pos, gameboard);
  1779  02B7  3005               	movlw	5
  1780  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1781  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1782  02BA  00A0               	movwf	lcd_goto@port
  1783  02BB  3000               	movlw	0
  1784  02BC  00A1               	movwf	lcd_goto@port+1
  1785  02BD  085C               	movf	_cursor_pos,w
  1786  02BE  120A  158A  2731  120A  118A  	fcall	_lcd_goto
  1787                           
  1788                           ;concentration.c: 319:     get_current_char();
  1789  02C3  120A  158A  26F6  120A  118A  	fcall	_get_current_char
  1790  02C8                     l2199:	
  1791                           
  1792                           ;concentration.c: 320:     if(cursor_solid == 1) {
  1793  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1794  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1795  02CA  035A               	decf	_cursor_solid,w
  1796  02CB  1D03               	btfss	3,2
  1797  02CC  2ACE               	goto	u1401
  1798  02CD  2ACF               	goto	u1400
  1799  02CE                     u1401:	
  1800  02CE  2AE5               	goto	l272
  1801  02CF                     u1400:	
  1802  02CF                     l2201:	
  1803                           
  1804                           ;concentration.c: 321:         lcd_putch(0x20, gameboard);
  1805  02CF  3005               	movlw	5
  1806  02D0  00A8               	movwf	lcd_putch@port
  1807  02D1  3000               	movlw	0
  1808  02D2  00A9               	movwf	lcd_putch@port+1
  1809  02D3  3020               	movlw	32
  1810  02D4  120A  158A  2708  120A  118A  	fcall	_lcd_putch
  1811                           
  1812                           ;concentration.c: 322:         lcd_goto(cursor_pos, gameboard);
  1813  02D9  3005               	movlw	5
  1814  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1815  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1816  02DC  00A0               	movwf	lcd_goto@port
  1817  02DD  3000               	movlw	0
  1818  02DE  00A1               	movwf	lcd_goto@port+1
  1819  02DF  085C               	movf	_cursor_pos,w
  1820  02E0  120A  158A  2731  120A  118A  	fcall	_lcd_goto
  1821  02E5                     l272:	
  1822  02E5  0008               	return
  1823  02E6                     __end_of_update_cursor:	
  1824                           
  1825                           	psect	text3
  1826  0F9F                     __ptext3:	
  1827 ;; *************** function _toggle_cursor *****************
  1828 ;; Defined at:
  1829 ;;		line 326 in file "concentration.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    4
  1850 ;; This function calls:
  1851 ;;		_lcd_goto
  1852 ;;		_lcd_putch
  1853 ;; This function is called by:
  1854 ;;		_update_gameboard_from_input
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _toggle_cursor
  1860  0F9F                     _toggle_cursor:	
  1861  0F9F                     l2159:	
  1862                           ;incstack = 0
  1863                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1864                           
  1865                           
  1866                           ;concentration.c: 327:     if(cursor_solid == 0) {
  1867  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0FA1  085A               	movf	_cursor_solid,w
  1870  0FA2  1D03               	btfss	3,2
  1871  0FA3  2FA5               	goto	u1391
  1872  0FA4  2FA6               	goto	u1390
  1873  0FA5                     u1391:	
  1874  0FA5  2FB5               	goto	l2165
  1875  0FA6                     u1390:	
  1876  0FA6                     l2161:	
  1877                           
  1878                           ;concentration.c: 328:         lcd_putch(0x20, gameboard);
  1879  0FA6  3005               	movlw	5
  1880  0FA7  00A8               	movwf	lcd_putch@port
  1881  0FA8  3000               	movlw	0
  1882  0FA9  00A9               	movwf	lcd_putch@port+1
  1883  0FAA  3020               	movlw	32
  1884  0FAB  120A  158A  2708  120A  158A  	fcall	_lcd_putch
  1885  0FB0                     l2163:	
  1886                           
  1887                           ;concentration.c: 329:         cursor_solid = 1;
  1888  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0FB2  01DA               	clrf	_cursor_solid
  1891  0FB3  0ADA               	incf	_cursor_solid,f
  1892                           
  1893                           ;concentration.c: 330:     } else {
  1894  0FB4  2FC2               	goto	l2169
  1895  0FB5                     l2165:	
  1896                           
  1897                           ;concentration.c: 331:         lcd_putch(current_char, gameboard);
  1898  0FB5  3005               	movlw	5
  1899  0FB6  00A8               	movwf	lcd_putch@port
  1900  0FB7  3000               	movlw	0
  1901  0FB8  00A9               	movwf	lcd_putch@port+1
  1902  0FB9  085B               	movf	_current_char,w
  1903  0FBA  120A  158A  2708  120A  158A  	fcall	_lcd_putch
  1904  0FBF                     l2167:	
  1905                           
  1906                           ;concentration.c: 332:         cursor_solid = 0;
  1907  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0FC1  01DA               	clrf	_cursor_solid
  1910  0FC2                     l2169:	
  1911                           
  1912                           ;concentration.c: 334:     lcd_goto(cursor_pos, gameboard);
  1913  0FC2  3005               	movlw	5
  1914  0FC3  00A0               	movwf	lcd_goto@port
  1915  0FC4  3000               	movlw	0
  1916  0FC5  00A1               	movwf	lcd_goto@port+1
  1917  0FC6  085C               	movf	_cursor_pos,w
  1918  0FC7  120A  158A  2731  120A  158A  	fcall	_lcd_goto
  1919  0FCC                     l277:	
  1920  0FCC  0008               	return
  1921  0FCD                     __end_of_toggle_cursor:	
  1922                           
  1923                           	psect	text4
  1924  0492                     __ptext4:	
  1925 ;; *************** function _check_for_match *****************
  1926 ;; Defined at:
  1927 ;;		line 203 in file "concentration.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  player          1    wreg     unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  player          1   15[BANK0 ] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       0       0       0       0
  1942 ;;      Locals:         0       1       0       0       0
  1943 ;;      Temps:          0       1       0       0       0
  1944 ;;      Totals:         0       2       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    5
  1948 ;; This function calls:
  1949 ;;		_DelayMs
  1950 ;;		_display_gameboard
  1951 ;;		_display_scoreboard
  1952 ;;		_get_cursor_index
  1953 ;; This function is called by:
  1954 ;;		_update_gameboard_from_input
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _check_for_match
  1960  0492                     _check_for_match:	
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1964                           ;check_for_match@player stored from wreg
  1965  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0494  00AF               	movwf	check_for_match@player
  1968  0495                     l2133:	
  1969                           
  1970                           ;concentration.c: 204:     if(selected_tile == 0xFF) {
  1971  0495  0A7A               	incf	_selected_tile,w
  1972  0496  1D03               	btfss	3,2
  1973  0497  2C99               	goto	u1361
  1974  0498  2C9A               	goto	u1360
  1975  0499                     u1361:	
  1976  0499  2C9F               	goto	l2137
  1977  049A                     u1360:	
  1978  049A                     l2135:	
  1979                           
  1980                           ;concentration.c: 205:         selected_tile = cursor_pos;
  1981  049A  085C               	movf	_cursor_pos,w
  1982  049B  00AE               	movwf	??_check_for_match
  1983  049C  082E               	movf	??_check_for_match,w
  1984  049D  00FA               	movwf	_selected_tile
  1985                           
  1986                           ;concentration.c: 206:     } else {
  1987  049E  2D09               	goto	l224
  1988  049F                     l2137:	
  1989                           
  1990                           ;concentration.c: 207:         if(board[get_cursor_index(selected_tile)] == board[get_cu
      +                          rsor_index(cursor_pos)]) {
  1991  049F  085C               	movf	_cursor_pos,w
  1992  04A0  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  1993  04A5  3EC0               	addlw	(low (_board| 0))& (0+255)
  1994  04A6  0084               	movwf	4
  1995  04A7  1383               	bcf	3,7	;select IRP bank1
  1996  04A8  0800               	movf	0,w
  1997  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1998  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1999  04AB  00AE               	movwf	??_check_for_match
  2000  04AC  087A               	movf	_selected_tile,w
  2001  04AD  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  2002  04B2  3EC0               	addlw	(low (_board| 0))& (0+255)
  2003  04B3  0084               	movwf	4
  2004  04B4  1383               	bcf	3,7	;select IRP bank1
  2005  04B5  0800               	movf	0,w
  2006  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2007  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2008  04B8  062E               	xorwf	??_check_for_match,w
  2009  04B9  1D03               	skipz
  2010  04BA  2CBC               	goto	u1371
  2011  04BB  2CBD               	goto	u1370
  2012  04BC                     u1371:	
  2013  04BC  2CD1               	goto	l2147
  2014  04BD                     u1370:	
  2015  04BD                     l2139:	
  2016                           
  2017                           ;concentration.c: 208:             if(player == 0) {
  2018  04BD  082F               	movf	check_for_match@player,w
  2019  04BE  1D03               	btfss	3,2
  2020  04BF  2CC1               	goto	u1381
  2021  04C0  2CC2               	goto	u1380
  2022  04C1                     u1381:	
  2023  04C1  2CC7               	goto	l2143
  2024  04C2                     u1380:	
  2025  04C2                     l2141:	
  2026                           
  2027                           ;concentration.c: 209:                 p1_score++;
  2028  04C2  3001               	movlw	1
  2029  04C3  00AE               	movwf	??_check_for_match
  2030  04C4  082E               	movf	??_check_for_match,w
  2031  04C5  07FB               	addwf	_p1_score,f
  2032                           
  2033                           ;concentration.c: 210:             } else {
  2034  04C6  2CCB               	goto	l2145
  2035  04C7                     l2143:	
  2036                           
  2037                           ;concentration.c: 211:                 p2_score++;
  2038  04C7  3001               	movlw	1
  2039  04C8  00AE               	movwf	??_check_for_match
  2040  04C9  082E               	movf	??_check_for_match,w
  2041  04CA  07D5               	addwf	_p2_score,f
  2042  04CB                     l2145:	
  2043                           
  2044                           ;concentration.c: 213:             display_scoreboard();
  2045  04CB  120A  118A  218C  120A  118A  	fcall	_display_scoreboard
  2046                           
  2047                           ;concentration.c: 214:         } else {
  2048  04D0  2D03               	goto	l2157
  2049  04D1                     l2147:	
  2050                           
  2051                           ;concentration.c: 215:             display_gameboard();
  2052  04D1  120A  118A  2778  120A  118A  	fcall	_display_gameboard
  2053  04D6                     l2149:	
  2054                           
  2055                           ;concentration.c: 216:             DelayMs(1000);
  2056  04D6  30E8               	movlw	232
  2057  04D7  00F2               	movwf	DelayMs@millis
  2058  04D8  3003               	movlw	3
  2059  04D9  00F3               	movwf	DelayMs@millis+1
  2060  04DA  120A  158A  271A  120A  118A  	fcall	_DelayMs
  2061  04DF                     l2151:	
  2062                           
  2063                           ;concentration.c: 217:             visible[get_cursor_index(selected_tile)] = 0xFF;
  2064  04DF  30FF               	movlw	255
  2065  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2066  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2067  04E2  00AE               	movwf	??_check_for_match
  2068  04E3  087A               	movf	_selected_tile,w
  2069  04E4  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  2070  04E9  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2071  04EA  0084               	movwf	4
  2072  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2073  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2074  04ED  082E               	movf	??_check_for_match,w
  2075  04EE  1383               	bcf	3,7	;select IRP bank1
  2076  04EF  0080               	movwf	0
  2077  04F0                     l2153:	
  2078                           
  2079                           ;concentration.c: 218:             visible[get_cursor_index(cursor_pos)] = 0xFF;
  2080  04F0  30FF               	movlw	255
  2081  04F1  00AE               	movwf	??_check_for_match
  2082  04F2  085C               	movf	_cursor_pos,w
  2083  04F3  120A  158A  26E0  120A  118A  	fcall	_get_cursor_index
  2084  04F8  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2085  04F9  0084               	movwf	4
  2086  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2087  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2088  04FC  082E               	movf	??_check_for_match,w
  2089  04FD  1383               	bcf	3,7	;select IRP bank1
  2090  04FE  0080               	movwf	0
  2091  04FF                     l2155:	
  2092                           
  2093                           ;concentration.c: 219:             current_char = 0xFF;
  2094  04FF  30FF               	movlw	255
  2095  0500  00AE               	movwf	??_check_for_match
  2096  0501  082E               	movf	??_check_for_match,w
  2097  0502  00DB               	movwf	_current_char
  2098  0503                     l2157:	
  2099                           
  2100                           ;concentration.c: 221:         selected_tile = 0xFF;
  2101  0503  30FF               	movlw	255
  2102  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0506  00AE               	movwf	??_check_for_match
  2105  0507  082E               	movf	??_check_for_match,w
  2106  0508  00FA               	movwf	_selected_tile
  2107  0509                     l224:	
  2108  0509  0008               	return
  2109  050A                     __end_of_check_for_match:	
  2110                           
  2111                           	psect	text5
  2112  038D                     __ptext5:	
  2113 ;; *************** function _startup *****************
  2114 ;; Defined at:
  2115 ;;		line 97 in file "concentration.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0
  2132 ;;      Totals:         0       0       0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    5
  2136 ;; This function calls:
  2137 ;;		_DelayMs
  2138 ;;		_display_gameboard
  2139 ;;		_display_scoreboard
  2140 ;;		_lcd_clear
  2141 ;;		_lcd_goto
  2142 ;;		_lcd_puts
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _startup
  2150  038D                     _startup:	
  2151  038D                     l2271:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2154                           
  2155                           
  2156                           ;concentration.c: 98:     lcd_clear(gameboard);
  2157  038D  3005               	movlw	5
  2158  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2159  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0390  00A0               	movwf	lcd_clear@port
  2161  0391  3000               	movlw	0
  2162  0392  00A1               	movwf	lcd_clear@port+1
  2163  0393  120A  118A  22E6  120A  118A  	fcall	_lcd_clear
  2164                           
  2165                           ;concentration.c: 99:     lcd_clear(scoreboard);
  2166  0398  3008               	movlw	8
  2167  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2168  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2169  039B  00A0               	movwf	lcd_clear@port
  2170  039C  3000               	movlw	0
  2171  039D  00A1               	movwf	lcd_clear@port+1
  2172  039E  120A  118A  22E6  120A  118A  	fcall	_lcd_clear
  2173                           
  2174                           ;concentration.c: 100:     lcd_puts(" Concentration!", scoreboard);
  2175  03A3  3008               	movlw	8
  2176  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2177  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2178  03A6  00A0               	movwf	lcd_puts@port
  2179  03A7  3000               	movlw	0
  2180  03A8  00A1               	movwf	lcd_puts@port+1
  2181  03A9  3052               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2182  03AA  120A  158A  2774  120A  118A  	fcall	_lcd_puts
  2183                           
  2184                           ;concentration.c: 101:     lcd_puts("Press the button", gameboard);
  2185  03AF  3005               	movlw	5
  2186  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2187  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2188  03B2  00A0               	movwf	lcd_puts@port
  2189  03B3  3000               	movlw	0
  2190  03B4  00A1               	movwf	lcd_puts@port+1
  2191  03B5  3041               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2192  03B6  120A  158A  2774  120A  118A  	fcall	_lcd_puts
  2193                           
  2194                           ;concentration.c: 102:     lcd_goto(0x40, gameboard);
  2195  03BB  3005               	movlw	5
  2196  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2197  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2198  03BE  00A0               	movwf	lcd_goto@port
  2199  03BF  3000               	movlw	0
  2200  03C0  00A1               	movwf	lcd_goto@port+1
  2201  03C1  3040               	movlw	64
  2202  03C2  120A  158A  2731  120A  118A  	fcall	_lcd_goto
  2203                           
  2204                           ;concentration.c: 103:     lcd_puts("    to start", gameboard);
  2205  03C7  3005               	movlw	5
  2206  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2207  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2208  03CA  00A0               	movwf	lcd_puts@port
  2209  03CB  3000               	movlw	0
  2210  03CC  00A1               	movwf	lcd_puts@port+1
  2211  03CD  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2212  03CE  120A  158A  2774  120A  118A  	fcall	_lcd_puts
  2213  03D3                     l163:	
  2214                           ;concentration.c: 104:     while(RB5);
  2215                           
  2216  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2217  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2218  03D5  1A86               	btfsc	6,5	;volatile
  2219  03D6  2BD8               	goto	u1421
  2220  03D7  2BD9               	goto	u1420
  2221  03D8                     u1421:	
  2222  03D8  2BD3               	goto	l163
  2223  03D9                     u1420:	
  2224  03D9                     l2273:	
  2225                           
  2226                           ;concentration.c: 105:     DelayMs(8);
  2227  03D9  3008               	movlw	8
  2228  03DA  00F2               	movwf	DelayMs@millis
  2229  03DB  3000               	movlw	0
  2230  03DC  00F3               	movwf	DelayMs@millis+1
  2231  03DD  120A  158A  271A  120A  118A  	fcall	_DelayMs
  2232  03E2                     l166:	
  2233                           ;concentration.c: 106:     while(!RB5);
  2234                           
  2235  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2236  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2237  03E4  1E86               	btfss	6,5	;volatile
  2238  03E5  2BE7               	goto	u1431
  2239  03E6  2BE8               	goto	u1430
  2240  03E7                     u1431:	
  2241  03E7  2BE2               	goto	l166
  2242  03E8                     u1430:	
  2243  03E8                     l2275:	
  2244                           
  2245                           ;concentration.c: 107:     DelayMs(8);
  2246  03E8  3008               	movlw	8
  2247  03E9  00F2               	movwf	DelayMs@millis
  2248  03EA  3000               	movlw	0
  2249  03EB  00F3               	movwf	DelayMs@millis+1
  2250  03EC  120A  158A  271A  120A  118A  	fcall	_DelayMs
  2251  03F1                     l2277:	
  2252                           
  2253                           ;concentration.c: 108:     lcd_clear(gameboard);
  2254  03F1  3005               	movlw	5
  2255  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2256  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2257  03F4  00A0               	movwf	lcd_clear@port
  2258  03F5  3000               	movlw	0
  2259  03F6  00A1               	movwf	lcd_clear@port+1
  2260  03F7  120A  118A  22E6  120A  118A  	fcall	_lcd_clear
  2261  03FC                     l2279:	
  2262                           
  2263                           ;concentration.c: 109:     lcd_clear(scoreboard);
  2264  03FC  3008               	movlw	8
  2265  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2266  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2267  03FF  00A0               	movwf	lcd_clear@port
  2268  0400  3000               	movlw	0
  2269  0401  00A1               	movwf	lcd_clear@port+1
  2270  0402  120A  118A  22E6  120A  118A  	fcall	_lcd_clear
  2271  0407                     l2281:	
  2272                           
  2273                           ;concentration.c: 110:     p1_score = 0;
  2274  0407  01FB               	clrf	_p1_score
  2275  0408                     l2283:	
  2276                           
  2277                           ;concentration.c: 111:     p2_score = 0;
  2278  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2280  040A  01D5               	clrf	_p2_score
  2281  040B                     l2285:	
  2282                           
  2283                           ;concentration.c: 112:     display_scoreboard();
  2284  040B  120A  118A  218C  120A  118A  	fcall	_display_scoreboard
  2285  0410                     l2287:	
  2286                           
  2287                           ;concentration.c: 113:     display_gameboard();
  2288  0410  120A  118A  2778  120A  118A  	fcall	_display_gameboard
  2289  0415                     l169:	
  2290  0415  0008               	return
  2291  0416                     __end_of_startup:	
  2292                           
  2293                           	psect	text6
  2294  018C                     __ptext6:	
  2295 ;; *************** function _display_scoreboard *****************
  2296 ;; Defined at:
  2297 ;;		line 116 in file "concentration.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0
  2313 ;;      Temps:          0       2       0       0       0
  2314 ;;      Totals:         0       2       0       0       0
  2315 ;;Total ram usage:        2 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    4
  2318 ;; This function calls:
  2319 ;;		___awdiv
  2320 ;;		___awmod
  2321 ;;		_lcd_goto
  2322 ;;		_lcd_putch
  2323 ;;		_lcd_puts
  2324 ;; This function is called by:
  2325 ;;		_startup
  2326 ;;		_check_for_match
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _display_scoreboard
  2332  018C                     _display_scoreboard:	
  2333  018C                     l2095:	
  2334                           ;incstack = 0
  2335                           ; Regs used in _display_scoreboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2336                           
  2337                           
  2338                           ;concentration.c: 117:     lcd_puts("     Score:", scoreboard);
  2339  018C  3008               	movlw	8
  2340  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2341  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2342  018F  00A0               	movwf	lcd_puts@port
  2343  0190  3000               	movlw	0
  2344  0191  00A1               	movwf	lcd_puts@port+1
  2345  0192  306F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2346  0193  120A  158A  2774  120A  118A  	fcall	_lcd_puts
  2347                           
  2348                           ;concentration.c: 118:     lcd_goto(0x40, scoreboard);
  2349  0198  3008               	movlw	8
  2350  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2351  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2352  019B  00A0               	movwf	lcd_goto@port
  2353  019C  3000               	movlw	0
  2354  019D  00A1               	movwf	lcd_goto@port+1
  2355  019E  3040               	movlw	64
  2356  019F  120A  158A  2731  120A  118A  	fcall	_lcd_goto
  2357                           
  2358                           ;concentration.c: 119:     lcd_puts(" P1: ", scoreboard);
  2359  01A4  3008               	movlw	8
  2360  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2361  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2362  01A7  00A0               	movwf	lcd_puts@port
  2363  01A8  3000               	movlw	0
  2364  01A9  00A1               	movwf	lcd_puts@port+1
  2365  01AA  3082               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2366  01AB  120A  158A  2774  120A  118A  	fcall	_lcd_puts
  2367                           
  2368                           ;concentration.c: 120:     lcd_putch(((p1_score%100)/10)+0x30, scoreboard);
  2369  01B0  3008               	movlw	8
  2370  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2371  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2372  01B3  00A8               	movwf	lcd_putch@port
  2373  01B4  3000               	movlw	0
  2374  01B5  00A9               	movwf	lcd_putch@port+1
  2375  01B6  300A               	movlw	10
  2376  01B7  00A0               	movwf	___awdiv@divisor
  2377  01B8  3000               	movlw	0
  2378  01B9  00A1               	movwf	___awdiv@divisor+1
  2379  01BA  087B               	movf	_p1_score,w
  2380  01BB  00AC               	movwf	??_display_scoreboard
  2381  01BC  01AD               	clrf	??_display_scoreboard+1
  2382  01BD  082C               	movf	??_display_scoreboard,w
  2383  01BE  00F4               	movwf	___awmod@dividend
  2384  01BF  082D               	movf	??_display_scoreboard+1,w
  2385  01C0  00F5               	movwf	___awmod@dividend+1
  2386  01C1  3064               	movlw	100
  2387  01C2  00F2               	movwf	___awmod@divisor
  2388  01C3  3000               	movlw	0
  2389  01C4  00F3               	movwf	___awmod@divisor+1
  2390  01C5  120A  118A  2632  120A  118A  	fcall	___awmod
  2391  01CA  0873               	movf	?___awmod+1,w
  2392  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2393  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2394  01CD  00A3               	movwf	___awdiv@dividend+1
  2395  01CE  0872               	movf	?___awmod,w
  2396  01CF  00A2               	movwf	___awdiv@dividend
  2397  01D0  120A  118A  250A  120A  118A  	fcall	___awdiv
  2398  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2399  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2400  01D7  0820               	movf	?___awdiv,w
  2401  01D8  3E30               	addlw	48
  2402  01D9  120A  158A  2708  120A  118A  	fcall	_lcd_putch
  2403                           
  2404                           ;concentration.c: 121:     lcd_putch((p1_score%10)+0x30, scoreboard);
  2405  01DE  3008               	movlw	8
  2406  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2407  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2408  01E1  00A8               	movwf	lcd_putch@port
  2409  01E2  3000               	movlw	0
  2410  01E3  00A9               	movwf	lcd_putch@port+1
  2411  01E4  300A               	movlw	10
  2412  01E5  00F2               	movwf	___awmod@divisor
  2413  01E6  3000               	movlw	0
  2414  01E7  00F3               	movwf	___awmod@divisor+1
  2415  01E8  087B               	movf	_p1_score,w
  2416  01E9  00AC               	movwf	??_display_scoreboard
  2417  01EA  01AD               	clrf	??_display_scoreboard+1
  2418  01EB  082C               	movf	??_display_scoreboard,w
  2419  01EC  00F4               	movwf	___awmod@dividend
  2420  01ED  082D               	movf	??_display_scoreboard+1,w
  2421  01EE  00F5               	movwf	___awmod@dividend+1
  2422  01EF  120A  118A  2632  120A  118A  	fcall	___awmod
  2423  01F4  0872               	movf	?___awmod,w
  2424  01F5  3E30               	addlw	48
  2425  01F6  120A  158A  2708  120A  118A  	fcall	_lcd_putch
  2426                           
  2427                           ;concentration.c: 122:     lcd_puts("  P2: ", scoreboard);
  2428  01FB  3008               	movlw	8
  2429  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2430  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2431  01FE  00A0               	movwf	lcd_puts@port
  2432  01FF  3000               	movlw	0
  2433  0200  00A1               	movwf	lcd_puts@port+1
  2434  0201  307B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2435  0202  120A  158A  2774  120A  118A  	fcall	_lcd_puts
  2436                           
  2437                           ;concentration.c: 123:     lcd_putch(((p2_score%100)/10)+0x30, scoreboard);
  2438  0207  3008               	movlw	8
  2439  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2441  020A  00A8               	movwf	lcd_putch@port
  2442  020B  3000               	movlw	0
  2443  020C  00A9               	movwf	lcd_putch@port+1
  2444  020D  300A               	movlw	10
  2445  020E  00A0               	movwf	___awdiv@divisor
  2446  020F  3000               	movlw	0
  2447  0210  00A1               	movwf	___awdiv@divisor+1
  2448  0211  0855               	movf	_p2_score,w
  2449  0212  00AC               	movwf	??_display_scoreboard
  2450  0213  01AD               	clrf	??_display_scoreboard+1
  2451  0214  082C               	movf	??_display_scoreboard,w
  2452  0215  00F4               	movwf	___awmod@dividend
  2453  0216  082D               	movf	??_display_scoreboard+1,w
  2454  0217  00F5               	movwf	___awmod@dividend+1
  2455  0218  3064               	movlw	100
  2456  0219  00F2               	movwf	___awmod@divisor
  2457  021A  3000               	movlw	0
  2458  021B  00F3               	movwf	___awmod@divisor+1
  2459  021C  120A  118A  2632  120A  118A  	fcall	___awmod
  2460  0221  0873               	movf	?___awmod+1,w
  2461  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0224  00A3               	movwf	___awdiv@dividend+1
  2464  0225  0872               	movf	?___awmod,w
  2465  0226  00A2               	movwf	___awdiv@dividend
  2466  0227  120A  118A  250A  120A  118A  	fcall	___awdiv
  2467  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2468  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2469  022E  0820               	movf	?___awdiv,w
  2470  022F  3E30               	addlw	48
  2471  0230  120A  158A  2708  120A  118A  	fcall	_lcd_putch
  2472                           
  2473                           ;concentration.c: 124:     lcd_putch((p2_score%10)+0x30, scoreboard);
  2474  0235  3008               	movlw	8
  2475  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0238  00A8               	movwf	lcd_putch@port
  2478  0239  3000               	movlw	0
  2479  023A  00A9               	movwf	lcd_putch@port+1
  2480  023B  300A               	movlw	10
  2481  023C  00F2               	movwf	___awmod@divisor
  2482  023D  3000               	movlw	0
  2483  023E  00F3               	movwf	___awmod@divisor+1
  2484  023F  0855               	movf	_p2_score,w
  2485  0240  00AC               	movwf	??_display_scoreboard
  2486  0241  01AD               	clrf	??_display_scoreboard+1
  2487  0242  082C               	movf	??_display_scoreboard,w
  2488  0243  00F4               	movwf	___awmod@dividend
  2489  0244  082D               	movf	??_display_scoreboard+1,w
  2490  0245  00F5               	movwf	___awmod@dividend+1
  2491  0246  120A  118A  2632  120A  118A  	fcall	___awmod
  2492  024B  0872               	movf	?___awmod,w
  2493  024C  3E30               	addlw	48
  2494  024D  120A  158A  2708  120A  118A  	fcall	_lcd_putch
  2495  0252                     l172:	
  2496  0252  0008               	return
  2497  0253                     __end_of_display_scoreboard:	
  2498                           
  2499                           	psect	text7
  2500  0F74                     __ptext7:	
  2501 ;; *************** function _lcd_puts *****************
  2502 ;; Defined at:
  2503 ;;		line 129 in file "lcd4bits.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  string          1    wreg     PTR const unsigned char 
  2506 ;;		 -> STR_6(7), STR_5(6), STR_4(12), STR_3(13), 
  2507 ;;		 -> STR_2(17), STR_1(16), 
  2508 ;;  port            2    0[BANK0 ] PTR unsigned char 
  2509 ;;		 -> PORTD(1), PORTA(1), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  string          1    3[BANK0 ] PTR const unsigned char 
  2512 ;;		 -> STR_6(7), STR_5(6), STR_4(12), STR_3(13), 
  2513 ;;		 -> STR_2(17), STR_1(16), 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       2       0       0       0
  2524 ;;      Locals:         0       1       0       0       0
  2525 ;;      Temps:          0       1       0       0       0
  2526 ;;      Totals:         0       4       0       0       0
  2527 ;;Total ram usage:        4 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    3
  2530 ;; This function calls:
  2531 ;;		_lcd_write
  2532 ;; This function is called by:
  2533 ;;		_startup
  2534 ;;		_display_scoreboard
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _lcd_puts
  2540  0F74                     _lcd_puts:	
  2541                           
  2542                           ;incstack = 0
  2543                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2544                           ;lcd_puts@string stored from wreg
  2545  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0F76  00A3               	movwf	lcd_puts@string
  2548  0F77                     l2081:	
  2549                           
  2550                           ;lcd4bits.c: 130:     while (*string != 0) {
  2551  0F77  2F92               	goto	l2087
  2552  0F78                     l2083:	
  2553                           
  2554                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  2555  0F78  0823               	movf	lcd_puts@string,w
  2556  0F79  0084               	movwf	4
  2557  0F7A  120A  118A  2300  120A  158A  	fcall	stringdir
  2558  0F7F  00A2               	movwf	??_lcd_puts
  2559  0F80  0822               	movf	??_lcd_puts,w
  2560  0F81  00F4               	movwf	lcd_write@CmdChar
  2561  0F82  0820               	movf	lcd_puts@port,w
  2562  0F83  00F5               	movwf	lcd_write@port
  2563  0F84  0821               	movf	lcd_puts@port+1,w
  2564  0F85  00F6               	movwf	lcd_write@port+1
  2565  0F86  3010               	movlw	16
  2566  0F87  120A  118A  272F  120A  158A  	fcall	_lcd_write
  2567  0F8C                     l2085:	
  2568  0F8C  3001               	movlw	1
  2569  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0F8F  00A2               	movwf	??_lcd_puts
  2572  0F90  0822               	movf	??_lcd_puts,w
  2573  0F91  07A3               	addwf	lcd_puts@string,f
  2574  0F92                     l2087:	
  2575                           
  2576                           ;lcd4bits.c: 130:     while (*string != 0) {
  2577  0F92  0823               	movf	lcd_puts@string,w
  2578  0F93  0084               	movwf	4
  2579  0F94  120A  118A  2300  120A  158A  	fcall	stringdir
  2580  0F99  3A00               	xorlw	0
  2581  0F9A  1D03               	skipz
  2582  0F9B  2F9D               	goto	u1311
  2583  0F9C  2F9E               	goto	u1310
  2584  0F9D                     u1311:	
  2585  0F9D  2F78               	goto	l2083
  2586  0F9E                     u1310:	
  2587  0F9E                     l331:	
  2588  0F9E  0008               	return
  2589  0F9F                     __end_of_lcd_puts:	
  2590                           
  2591                           	psect	text8
  2592  0632                     __ptext8:	
  2593 ;; *************** function ___awmod *****************
  2594 ;; Defined at:
  2595 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  divisor         2    2[COMMON] int 
  2598 ;;  dividend        2    4[COMMON] int 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  sign            1    8[COMMON] unsigned char 
  2601 ;;  counter         1    7[COMMON] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2    2[COMMON] int 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         4       0       0       0       0
  2612 ;;      Locals:         2       0       0       0       0
  2613 ;;      Temps:          1       0       0       0       0
  2614 ;;      Totals:         7       0       0       0       0
  2615 ;;Total ram usage:        7 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    1
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_display_scoreboard
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function ___awmod
  2627  0632                     ___awmod:	
  2628  0632                     l1619:	
  2629                           ;incstack = 0
  2630                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2631                           
  2632  0632  01F8               	clrf	___awmod@sign
  2633  0633                     l1621:	
  2634  0633  1FF5               	btfss	___awmod@dividend+1,7
  2635  0634  2E36               	goto	u811
  2636  0635  2E37               	goto	u810
  2637  0636                     u811:	
  2638  0636  2E3E               	goto	l1627
  2639  0637                     u810:	
  2640  0637                     l1623:	
  2641  0637  09F4               	comf	___awmod@dividend,f
  2642  0638  09F5               	comf	___awmod@dividend+1,f
  2643  0639  0AF4               	incf	___awmod@dividend,f
  2644  063A  1903               	skipnz
  2645  063B  0AF5               	incf	___awmod@dividend+1,f
  2646  063C                     l1625:	
  2647  063C  01F8               	clrf	___awmod@sign
  2648  063D  0AF8               	incf	___awmod@sign,f
  2649  063E                     l1627:	
  2650  063E  1FF3               	btfss	___awmod@divisor+1,7
  2651  063F  2E41               	goto	u821
  2652  0640  2E42               	goto	u820
  2653  0641                     u821:	
  2654  0641  2E47               	goto	l1631
  2655  0642                     u820:	
  2656  0642                     l1629:	
  2657  0642  09F2               	comf	___awmod@divisor,f
  2658  0643  09F3               	comf	___awmod@divisor+1,f
  2659  0644  0AF2               	incf	___awmod@divisor,f
  2660  0645  1903               	skipnz
  2661  0646  0AF3               	incf	___awmod@divisor+1,f
  2662  0647                     l1631:	
  2663  0647  0872               	movf	___awmod@divisor,w
  2664  0648  0473               	iorwf	___awmod@divisor+1,w
  2665  0649  1903               	btfsc	3,2
  2666  064A  2E4C               	goto	u831
  2667  064B  2E4D               	goto	u830
  2668  064C                     u831:	
  2669  064C  2E7C               	goto	l1649
  2670  064D                     u830:	
  2671  064D                     l1633:	
  2672  064D  01F7               	clrf	___awmod@counter
  2673  064E  0AF7               	incf	___awmod@counter,f
  2674  064F  2E5B               	goto	l1639
  2675  0650                     l1635:	
  2676  0650  3001               	movlw	1
  2677  0651                     u845:	
  2678  0651  1003               	clrc
  2679  0652  0DF2               	rlf	___awmod@divisor,f
  2680  0653  0DF3               	rlf	___awmod@divisor+1,f
  2681  0654  3EFF               	addlw	-1
  2682  0655  1D03               	skipz
  2683  0656  2E51               	goto	u845
  2684  0657                     l1637:	
  2685  0657  3001               	movlw	1
  2686  0658  00F6               	movwf	??___awmod
  2687  0659  0876               	movf	??___awmod,w
  2688  065A  07F7               	addwf	___awmod@counter,f
  2689  065B                     l1639:	
  2690  065B  1FF3               	btfss	___awmod@divisor+1,7
  2691  065C  2E5E               	goto	u851
  2692  065D  2E5F               	goto	u850
  2693  065E                     u851:	
  2694  065E  2E50               	goto	l1635
  2695  065F                     u850:	
  2696  065F                     l1641:	
  2697  065F  0873               	movf	___awmod@divisor+1,w
  2698  0660  0275               	subwf	___awmod@dividend+1,w
  2699  0661  1D03               	skipz
  2700  0662  2E65               	goto	u865
  2701  0663  0872               	movf	___awmod@divisor,w
  2702  0664  0274               	subwf	___awmod@dividend,w
  2703  0665                     u865:	
  2704  0665  1C03               	skipc
  2705  0666  2E68               	goto	u861
  2706  0667  2E69               	goto	u860
  2707  0668                     u861:	
  2708  0668  2E6F               	goto	l1645
  2709  0669                     u860:	
  2710  0669                     l1643:	
  2711  0669  0872               	movf	___awmod@divisor,w
  2712  066A  02F4               	subwf	___awmod@dividend,f
  2713  066B  0873               	movf	___awmod@divisor+1,w
  2714  066C  1C03               	skipc
  2715  066D  03F5               	decf	___awmod@dividend+1,f
  2716  066E  02F5               	subwf	___awmod@dividend+1,f
  2717  066F                     l1645:	
  2718  066F  3001               	movlw	1
  2719  0670                     u875:	
  2720  0670  1003               	clrc
  2721  0671  0CF3               	rrf	___awmod@divisor+1,f
  2722  0672  0CF2               	rrf	___awmod@divisor,f
  2723  0673  3EFF               	addlw	-1
  2724  0674  1D03               	skipz
  2725  0675  2E70               	goto	u875
  2726  0676                     l1647:	
  2727  0676  3001               	movlw	1
  2728  0677  02F7               	subwf	___awmod@counter,f
  2729  0678  1D03               	btfss	3,2
  2730  0679  2E7B               	goto	u881
  2731  067A  2E7C               	goto	u880
  2732  067B                     u881:	
  2733  067B  2E5F               	goto	l1641
  2734  067C                     u880:	
  2735  067C                     l1649:	
  2736  067C  0878               	movf	___awmod@sign,w
  2737  067D  1903               	btfsc	3,2
  2738  067E  2E80               	goto	u891
  2739  067F  2E81               	goto	u890
  2740  0680                     u891:	
  2741  0680  2E86               	goto	l1653
  2742  0681                     u890:	
  2743  0681                     l1651:	
  2744  0681  09F4               	comf	___awmod@dividend,f
  2745  0682  09F5               	comf	___awmod@dividend+1,f
  2746  0683  0AF4               	incf	___awmod@dividend,f
  2747  0684  1903               	skipnz
  2748  0685  0AF5               	incf	___awmod@dividend+1,f
  2749  0686                     l1653:	
  2750  0686  0875               	movf	___awmod@dividend+1,w
  2751  0687  00F3               	movwf	?___awmod+1
  2752  0688  0874               	movf	___awmod@dividend,w
  2753  0689  00F2               	movwf	?___awmod
  2754  068A                     l597:	
  2755  068A  0008               	return
  2756  068B                     __end_of___awmod:	
  2757                           
  2758                           	psect	text9
  2759  0778                     __ptext9:	
  2760 ;; *************** function _display_gameboard *****************
  2761 ;; Defined at:
  2762 ;;		line 127 in file "concentration.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  i               1   13[BANK0 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         0       1       0       0       0
  2778 ;;      Temps:          0       1       0       0       0
  2779 ;;      Totals:         0       2       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    4
  2783 ;; This function calls:
  2784 ;;		_lcd_clear
  2785 ;;		_lcd_goto
  2786 ;;		_lcd_putch
  2787 ;; This function is called by:
  2788 ;;		_startup
  2789 ;;		_check_for_match
  2790 ;;		_update_gameboard_from_input
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           
  2795                           ;psect for function _display_gameboard
  2796  0778                     _display_gameboard:	
  2797  0778                     l2097:	
  2798                           ;incstack = 0
  2799                           ; Regs used in _display_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2800                           
  2801                           
  2802                           ;concentration.c: 128:     lcd_clear(gameboard);
  2803  0778  3005               	movlw	5
  2804  0779  1283               	bcf	3,5	;RP0=0, select bank0
  2805  077A  1303               	bcf	3,6	;RP1=0, select bank0
  2806  077B  00A0               	movwf	lcd_clear@port
  2807  077C  3000               	movlw	0
  2808  077D  00A1               	movwf	lcd_clear@port+1
  2809  077E  120A  118A  22E6  120A  118A  	fcall	_lcd_clear
  2810  0783                     l2099:	
  2811                           
  2812                           ;concentration.c: 129:     char i;;concentration.c: 130:     for(i=0;i<32;i++) {
  2813  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0785  01AD               	clrf	display_gameboard@i
  2816  0786                     l2105:	
  2817                           
  2818                           ;concentration.c: 131:         if(i == 16) {
  2819  0786  3010               	movlw	16
  2820  0787  062D               	xorwf	display_gameboard@i,w
  2821  0788  1D03               	btfss	3,2
  2822  0789  2F8B               	goto	u1321
  2823  078A  2F8C               	goto	u1320
  2824  078B                     u1321:	
  2825  078B  2F96               	goto	l177
  2826  078C                     u1320:	
  2827  078C                     l2107:	
  2828                           
  2829                           ;concentration.c: 132:             lcd_goto(0x40, gameboard);
  2830  078C  3005               	movlw	5
  2831  078D  00A0               	movwf	lcd_goto@port
  2832  078E  3000               	movlw	0
  2833  078F  00A1               	movwf	lcd_goto@port+1
  2834  0790  3040               	movlw	64
  2835  0791  120A  158A  2731  120A  118A  	fcall	_lcd_goto
  2836  0796                     l177:	
  2837                           ;concentration.c: 133:         }
  2838                           
  2839                           
  2840                           ;concentration.c: 134:         lcd_putch(visible[i], gameboard);
  2841  0796  3005               	movlw	5
  2842  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0799  00A8               	movwf	lcd_putch@port
  2845  079A  3000               	movlw	0
  2846  079B  00A9               	movwf	lcd_putch@port+1
  2847  079C  082D               	movf	display_gameboard@i,w
  2848  079D  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2849  079E  0084               	movwf	4
  2850  079F  1383               	bcf	3,7	;select IRP bank1
  2851  07A0  0800               	movf	0,w
  2852  07A1  120A  158A  2708  120A  118A  	fcall	_lcd_putch
  2853  07A6                     l2109:	
  2854                           
  2855                           ;concentration.c: 135:     }
  2856  07A6  3001               	movlw	1
  2857  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  2858  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2859  07A9  00AC               	movwf	??_display_gameboard
  2860  07AA  082C               	movf	??_display_gameboard,w
  2861  07AB  07AD               	addwf	display_gameboard@i,f
  2862  07AC                     l2111:	
  2863  07AC  3020               	movlw	32
  2864  07AD  022D               	subwf	display_gameboard@i,w
  2865  07AE  1C03               	skipc
  2866  07AF  2FB1               	goto	u1331
  2867  07B0  2FB2               	goto	u1330
  2868  07B1                     u1331:	
  2869  07B1  2F86               	goto	l2105
  2870  07B2                     u1330:	
  2871  07B2                     l2113:	
  2872                           
  2873                           ;concentration.c: 136:     lcd_goto(cursor_pos, gameboard);
  2874  07B2  3005               	movlw	5
  2875  07B3  00A0               	movwf	lcd_goto@port
  2876  07B4  3000               	movlw	0
  2877  07B5  00A1               	movwf	lcd_goto@port+1
  2878  07B6  085C               	movf	_cursor_pos,w
  2879  07B7  120A  158A  2731  120A  118A  	fcall	_lcd_goto
  2880  07BC                     l178:	
  2881  07BC  0008               	return
  2882  07BD                     __end_of_display_gameboard:	
  2883                           
  2884                           	psect	text10
  2885  0F08                     __ptext10:	
  2886 ;; *************** function _lcd_putch *****************
  2887 ;; Defined at:
  2888 ;;		line 136 in file "lcd4bits.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  character       1    wreg     unsigned char 
  2891 ;;  port            2    8[BANK0 ] PTR unsigned char 
  2892 ;;		 -> PORTD(1), PORTA(1), 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  character       1   11[BANK0 ] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         0       2       0       0       0
  2905 ;;      Locals:         0       1       0       0       0
  2906 ;;      Temps:          0       1       0       0       0
  2907 ;;      Totals:         0       4       0       0       0
  2908 ;;Total ram usage:        4 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    3
  2911 ;; This function calls:
  2912 ;;		_lcd_write
  2913 ;; This function is called by:
  2914 ;;		_display_scoreboard
  2915 ;;		_display_gameboard
  2916 ;;		_update_cursor
  2917 ;;		_toggle_cursor
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function _lcd_putch
  2923  0F08                     _lcd_putch:	
  2924                           
  2925                           ;incstack = 0
  2926                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2927                           ;lcd_putch@character stored from wreg
  2928  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0F0A  00AB               	movwf	lcd_putch@character
  2931  0F0B                     l2093:	
  2932                           
  2933                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  2934  0F0B  082B               	movf	lcd_putch@character,w
  2935  0F0C  00AA               	movwf	??_lcd_putch
  2936  0F0D  082A               	movf	??_lcd_putch,w
  2937  0F0E  00F4               	movwf	lcd_write@CmdChar
  2938  0F0F  0828               	movf	lcd_putch@port,w
  2939  0F10  00F5               	movwf	lcd_write@port
  2940  0F11  0829               	movf	lcd_putch@port+1,w
  2941  0F12  00F6               	movwf	lcd_write@port+1
  2942  0F13  3010               	movlw	16
  2943  0F14  120A  118A  272F  120A  158A  	fcall	_lcd_write
  2944  0F19                     l334:	
  2945  0F19  0008               	return
  2946  0F1A                     __end_of_lcd_putch:	
  2947                           
  2948                           	psect	text11
  2949  068B                     __ptext11:	
  2950 ;; *************** function _lcd_init *****************
  2951 ;; Defined at:
  2952 ;;		line 155 in file "lcd4bits.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  port            2    2[BANK0 ] PTR unsigned char 
  2955 ;;		 -> PORTD(1), PORTA(1), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       2       0       0       0
  2968 ;;      Locals:         0       0       0       0       0
  2969 ;;      Temps:          0       1       0       0       0
  2970 ;;      Totals:         0       3       0       0       0
  2971 ;;Total ram usage:        3 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    4
  2974 ;; This function calls:
  2975 ;;		_DelayMs
  2976 ;;		_lcd_clear
  2977 ;;		_lcd_write
  2978 ;;		_tmr0_init
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _lcd_init
  2986  068B                     _lcd_init:	
  2987  068B                     l2215:	
  2988                           ;incstack = 0
  2989                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2990                           
  2991                           
  2992                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  2993  068B  120A  158A  26D0  120A  118A  	fcall	_tmr0_init
  2994  0690                     l2217:	
  2995                           
  2996                           ;lcd4bits.c: 158:     *port = 0;
  2997  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0692  0822               	movf	lcd_init@port,w
  3000  0693  0084               	movwf	4
  3001  0694  1783               	bsf	3,7
  3002  0695  1C23               	btfss	lcd_init@port+1,0
  3003  0696  1383               	bcf	3,7
  3004  0697  0180               	clrf	0
  3005  0698                     l2219:	
  3006                           
  3007                           ;lcd4bits.c: 159:     DelayMs(15);
  3008  0698  300F               	movlw	15
  3009  0699  00F2               	movwf	DelayMs@millis
  3010  069A  3000               	movlw	0
  3011  069B  00F3               	movwf	DelayMs@millis+1
  3012  069C  120A  158A  271A  120A  118A  	fcall	_DelayMs
  3013  06A1                     l2221:	
  3014                           
  3015                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  3016  06A1  3028               	movlw	40
  3017  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3018  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3019  06A4  00A4               	movwf	??_lcd_init
  3020  06A5  0824               	movf	??_lcd_init,w
  3021  06A6  00F4               	movwf	lcd_write@CmdChar
  3022  06A7  0822               	movf	lcd_init@port,w
  3023  06A8  00F5               	movwf	lcd_write@port
  3024  06A9  0823               	movf	lcd_init@port+1,w
  3025  06AA  00F6               	movwf	lcd_write@port+1
  3026  06AB  3000               	movlw	0
  3027  06AC  120A  118A  272F  120A  118A  	fcall	_lcd_write
  3028  06B1                     l2223:	
  3029                           
  3030                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  3031  06B1  300C               	movlw	12
  3032  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3033  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3034  06B4  00A4               	movwf	??_lcd_init
  3035  06B5  0824               	movf	??_lcd_init,w
  3036  06B6  00F4               	movwf	lcd_write@CmdChar
  3037  06B7  0822               	movf	lcd_init@port,w
  3038  06B8  00F5               	movwf	lcd_write@port
  3039  06B9  0823               	movf	lcd_init@port+1,w
  3040  06BA  00F6               	movwf	lcd_write@port+1
  3041  06BB  3000               	movlw	0
  3042  06BC  120A  118A  272F  120A  118A  	fcall	_lcd_write
  3043  06C1                     l2225:	
  3044                           
  3045                           ;lcd4bits.c: 162:     lcd_clear(port);
  3046  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3047  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3048  06C3  0822               	movf	lcd_init@port,w
  3049  06C4  00A0               	movwf	lcd_clear@port
  3050  06C5  0823               	movf	lcd_init@port+1,w
  3051  06C6  00A1               	movwf	lcd_clear@port+1
  3052  06C7  120A  118A  22E6  120A  118A  	fcall	_lcd_clear
  3053  06CC                     l2227:	
  3054                           
  3055                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  3056  06CC  3006               	movlw	6
  3057  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3058  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  3059  06CF  00A4               	movwf	??_lcd_init
  3060  06D0  0824               	movf	??_lcd_init,w
  3061  06D1  00F4               	movwf	lcd_write@CmdChar
  3062  06D2  0822               	movf	lcd_init@port,w
  3063  06D3  00F5               	movwf	lcd_write@port
  3064  06D4  0823               	movf	lcd_init@port+1,w
  3065  06D5  00F6               	movwf	lcd_write@port+1
  3066  06D6  3000               	movlw	0
  3067  06D7  120A  118A  272F  120A  118A  	fcall	_lcd_write
  3068  06DC                     l340:	
  3069  06DC  0008               	return
  3070  06DD                     __end_of_lcd_init:	
  3071                           
  3072                           	psect	text12
  3073  0ED0                     __ptext12:	
  3074 ;; *************** function _tmr0_init *****************
  3075 ;; Defined at:
  3076 ;;		line 72 in file "lcd4bits.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0
  3092 ;;      Temps:          1       0       0       0       0
  3093 ;;      Totals:         1       0       0       0       0
  3094 ;;Total ram usage:        1 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_lcd_init
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _tmr0_init
  3106  0ED0                     _tmr0_init:	
  3107  0ED0                     l1225:	
  3108                           ;incstack = 0
  3109                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  3110                           
  3111                           
  3112                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  3113  0ED0  30C0               	movlw	192
  3114  0ED1  00F2               	movwf	??_tmr0_init
  3115  0ED2  0872               	movf	??_tmr0_init,w
  3116  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  3117  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  3118  0ED5  0581               	andwf	1,f	;volatile
  3119  0ED6                     l1227:	
  3120                           
  3121                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  3122  0ED6  1501               	bsf	1,2	;volatile
  3123  0ED7                     l305:	
  3124  0ED7  0008               	return
  3125  0ED8                     __end_of_tmr0_init:	
  3126                           
  3127                           	psect	text13
  3128  0F4D                     __ptext13:	
  3129 ;; *************** function _joystick_init *****************
  3130 ;; Defined at:
  3131 ;;		line 355 in file "concentration.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _joystick_init
  3161  0F4D                     _joystick_init:	
  3162  0F4D                     l1813:	
  3163                           ;incstack = 0
  3164                           ; Regs used in _joystick_init: [wreg+status,2]
  3165                           
  3166                           
  3167                           ;concentration.c: 356:     joystick_x_pos = 512;
  3168  0F4D  3000               	movlw	0
  3169  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0F50  00D1               	movwf	_joystick_x_pos
  3172  0F51  3002               	movlw	2
  3173  0F52  00D2               	movwf	_joystick_x_pos+1
  3174                           
  3175                           ;concentration.c: 357:     joystick_y_pos = 512;
  3176  0F53  3000               	movlw	0
  3177  0F54  00CF               	movwf	_joystick_y_pos
  3178  0F55  3002               	movlw	2
  3179  0F56  00D0               	movwf	_joystick_y_pos+1
  3180  0F57                     l1815:	
  3181                           
  3182                           ;concentration.c: 358:     PORTB = 0;
  3183  0F57  0186               	clrf	6	;volatile
  3184  0F58                     l1817:	
  3185                           
  3186                           ;concentration.c: 359:     nRBPU = 0;
  3187  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  3189  0F5A  1381               	bcf	1,7	;volatile
  3190  0F5B                     l1819:	
  3191                           
  3192                           ;concentration.c: 360:     WPUB = 0x20;
  3193  0F5B  3020               	movlw	32
  3194  0F5C  0095               	movwf	21	;volatile
  3195  0F5D                     l1821:	
  3196                           
  3197                           ;concentration.c: 361:     TRISB = 0x38;
  3198  0F5D  3038               	movlw	56
  3199  0F5E  0086               	movwf	6	;volatile
  3200  0F5F                     l1823:	
  3201                           
  3202                           ;concentration.c: 362:     ANSELH = 0x0A;
  3203  0F5F  300A               	movlw	10
  3204  0F60  1683               	bsf	3,5	;RP0=1, select bank3
  3205  0F61  1703               	bsf	3,6	;RP1=1, select bank3
  3206  0F62  0089               	movwf	9	;volatile
  3207  0F63                     l1825:	
  3208                           
  3209                           ;concentration.c: 363:     GIE = 1;
  3210  0F63  178B               	bsf	11,7	;volatile
  3211  0F64                     l1827:	
  3212                           
  3213                           ;concentration.c: 364:     PEIE = 1;
  3214  0F64  170B               	bsf	11,6	;volatile
  3215  0F65                     l1829:	
  3216                           
  3217                           ;concentration.c: 365:     ADIF = 0;
  3218  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0F67  130C               	bcf	12,6	;volatile
  3221  0F68                     l1831:	
  3222                           
  3223                           ;concentration.c: 366:     ADIE = 1;
  3224  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  3226  0F6A  170C               	bsf	12,6	;volatile
  3227  0F6B                     l1833:	
  3228                           
  3229                           ;concentration.c: 367:     ADCON1 = 0x80;
  3230  0F6B  3080               	movlw	128
  3231  0F6C  009F               	movwf	31	;volatile
  3232  0F6D                     l1835:	
  3233                           
  3234                           ;concentration.c: 368:     ADCON0 = 0xA5;
  3235  0F6D  30A5               	movlw	165
  3236  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0F70  009F               	movwf	31	;volatile
  3239  0F71                     l1837:	
  3240                           
  3241                           ;concentration.c: 369:     joystick_pressed = 1;
  3242  0F71  01D4               	clrf	_joystick_pressed
  3243  0F72  0AD4               	incf	_joystick_pressed,f
  3244  0F73                     l286:	
  3245  0F73  0008               	return
  3246  0F74                     __end_of_joystick_init:	
  3247                           
  3248                           	psect	text14
  3249  0573                     __ptext14:	
  3250 ;; *************** function _gameboard_init *****************
  3251 ;; Defined at:
  3252 ;;		line 158 in file "concentration.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  i               1   46[BANK0 ] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       0       0       0       0
  3267 ;;      Locals:         0       1       0       0       0
  3268 ;;      Temps:          0       1       0       0       0
  3269 ;;      Totals:         0       2       0       0       0
  3270 ;;Total ram usage:        2 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    5
  3273 ;; This function calls:
  3274 ;;		_get_current_char
  3275 ;;		_lcd_clear
  3276 ;;		_lcd_goto
  3277 ;;		_make_custom_chars
  3278 ;;		_randomize_gameboard
  3279 ;;		_time_init
  3280 ;; This function is called by:
  3281 ;;		_main
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _gameboard_init
  3287  0573                     _gameboard_init:	
  3288  0573                     l2229:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3291                           
  3292                           
  3293                           ;concentration.c: 159:     selected_tile = 0xFF;
  3294  0573  30FF               	movlw	255
  3295  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0576  00CD               	movwf	??_gameboard_init
  3298  0577  084D               	movf	??_gameboard_init,w
  3299  0578  00FA               	movwf	_selected_tile
  3300  0579                     l2231:	
  3301                           
  3302                           ;concentration.c: 160:     time_init();
  3303  0579  120A  118A  27F3  120A  118A  	fcall	_time_init
  3304  057E                     l2233:	
  3305                           
  3306                           ;concentration.c: 161:     make_custom_chars();
  3307  057E  120A  118A  2416  120A  118A  	fcall	_make_custom_chars
  3308  0583                     l2235:	
  3309                           
  3310                           ;concentration.c: 162:     char i;;concentration.c: 163:     for(i = 0; i < 32; i++) {
  3311  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0584  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0585  01CE               	clrf	gameboard_init@i
  3314  0586                     l2241:	
  3315                           
  3316                           ;concentration.c: 164:         visible[i] = 0xFF;
  3317  0586  30FF               	movlw	255
  3318  0587  00CD               	movwf	??_gameboard_init
  3319  0588  084E               	movf	gameboard_init@i,w
  3320  0589  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3321  058A  0084               	movwf	4
  3322  058B  084D               	movf	??_gameboard_init,w
  3323  058C  1383               	bcf	3,7	;select IRP bank1
  3324  058D  0080               	movwf	0
  3325  058E                     l2243:	
  3326                           
  3327                           ;concentration.c: 165:     }
  3328  058E  3001               	movlw	1
  3329  058F  00CD               	movwf	??_gameboard_init
  3330  0590  084D               	movf	??_gameboard_init,w
  3331  0591  07CE               	addwf	gameboard_init@i,f
  3332  0592                     l2245:	
  3333  0592  3020               	movlw	32
  3334  0593  024E               	subwf	gameboard_init@i,w
  3335  0594  1C03               	skipc
  3336  0595  2D97               	goto	u1411
  3337  0596  2D98               	goto	u1410
  3338  0597                     u1411:	
  3339  0597  2D86               	goto	l2241
  3340  0598                     u1410:	
  3341  0598                     l2247:	
  3342                           
  3343                           ;concentration.c: 166:     lcd_clear(gameboard);
  3344  0598  3005               	movlw	5
  3345  0599  00A0               	movwf	lcd_clear@port
  3346  059A  3000               	movlw	0
  3347  059B  00A1               	movwf	lcd_clear@port+1
  3348  059C  120A  118A  22E6  120A  118A  	fcall	_lcd_clear
  3349  05A1                     l2249:	
  3350                           
  3351                           ;concentration.c: 167:     cursor_pos = 0x00;
  3352  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3353  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3354  05A3  01DC               	clrf	_cursor_pos
  3355  05A4                     l2251:	
  3356                           
  3357                           ;concentration.c: 168:     cursor_solid = 0;
  3358  05A4  01DA               	clrf	_cursor_solid
  3359                           
  3360                           ;concentration.c: 169:     get_current_char();
  3361  05A5  120A  158A  26F6  120A  118A  	fcall	_get_current_char
  3362  05AA                     l2253:	
  3363                           
  3364                           ;concentration.c: 170:     delay_loops = 0;
  3365  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3366  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3367  05AC  01D9               	clrf	_delay_loops
  3368  05AD                     l2255:	
  3369                           
  3370                           ;concentration.c: 171:     cursor_movable = 1;
  3371  05AD  01D7               	clrf	_cursor_movable
  3372  05AE  0AD7               	incf	_cursor_movable,f
  3373  05AF                     l2257:	
  3374                           
  3375                           ;concentration.c: 172:     lcd_goto(cursor_pos, gameboard);
  3376  05AF  3005               	movlw	5
  3377  05B0  00A0               	movwf	lcd_goto@port
  3378  05B1  3000               	movlw	0
  3379  05B2  00A1               	movwf	lcd_goto@port+1
  3380  05B3  085C               	movf	_cursor_pos,w
  3381  05B4  120A  158A  2731  120A  118A  	fcall	_lcd_goto
  3382  05B9                     l2259:	
  3383                           
  3384                           ;concentration.c: 173:     cursor_move_delay_count = 255;
  3385  05B9  30FF               	movlw	255
  3386  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3387  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3388  05BC  00CD               	movwf	??_gameboard_init
  3389  05BD  084D               	movf	??_gameboard_init,w
  3390  05BE  00D8               	movwf	_cursor_move_delay_count
  3391  05BF                     l2261:	
  3392                           
  3393                           ;concentration.c: 174:     PR2 = 250;
  3394  05BF  30FA               	movlw	250
  3395  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3396  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3397  05C2  0092               	movwf	18	;volatile
  3398  05C3                     l2263:	
  3399                           
  3400                           ;concentration.c: 175:     TMR2IF = 0;
  3401  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3402  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3403  05C5  108C               	bcf	12,1	;volatile
  3404  05C6                     l2265:	
  3405                           
  3406                           ;concentration.c: 176:     TMR2IE = 1;
  3407  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  3408  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  3409  05C8  148C               	bsf	12,1	;volatile
  3410  05C9                     l2267:	
  3411                           
  3412                           ;concentration.c: 177:     T2CON = 0x56;
  3413  05C9  3056               	movlw	86
  3414  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3415  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3416  05CC  0092               	movwf	18	;volatile
  3417  05CD                     l2269:	
  3418                           
  3419                           ;concentration.c: 178:     randomize_gameboard();
  3420  05CD  120A  118A  25D3  120A  118A  	fcall	_randomize_gameboard
  3421  05D2                     l202:	
  3422  05D2  0008               	return
  3423  05D3                     __end_of_gameboard_init:	
  3424                           
  3425                           	psect	text15
  3426  07F3                     __ptext15:	
  3427 ;; *************** function _time_init *****************
  3428 ;; Defined at:
  3429 ;;		line 343 in file "concentration.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		None
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0
  3446 ;;      Totals:         0       0       0       0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_gameboard_init
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           
  3458                           ;psect for function _time_init
  3459  07F3                     _time_init:	
  3460  07F3                     l1697:	
  3461                           ;incstack = 0
  3462                           ; Regs used in _time_init: []
  3463                           
  3464                           
  3465                           ;concentration.c: 344:     CCP1M3 = 1;
  3466  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  3467  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  3468  07F5  1597               	bsf	23,3	;volatile
  3469                           
  3470                           ;concentration.c: 345:     CCP1M2 = 0;
  3471  07F6  1117               	bcf	23,2	;volatile
  3472                           
  3473                           ;concentration.c: 346:     CCP1M1 = 1;
  3474  07F7  1497               	bsf	23,1	;volatile
  3475                           
  3476                           ;concentration.c: 347:     CCP1M0 = 0;
  3477  07F8  1017               	bcf	23,0	;volatile
  3478                           
  3479                           ;concentration.c: 348:     TMR1CS = 0;
  3480  07F9  1090               	bcf	16,1	;volatile
  3481                           
  3482                           ;concentration.c: 349:     T1CKPS0 = 0;
  3483  07FA  1210               	bcf	16,4	;volatile
  3484                           
  3485                           ;concentration.c: 350:     T1CKPS1 = 0;
  3486  07FB  1290               	bcf	16,5	;volatile
  3487                           
  3488                           ;concentration.c: 351:     TMR1GE = 0;
  3489  07FC  1310               	bcf	16,6	;volatile
  3490                           
  3491                           ;concentration.c: 352:     TMR1ON = 1;
  3492  07FD  1410               	bsf	16,0	;volatile
  3493  07FE                     l283:	
  3494  07FE  0008               	return
  3495  07FF                     __end_of_time_init:	
  3496                           
  3497                           	psect	text16
  3498  05D3                     __ptext16:	
  3499 ;; *************** function _randomize_gameboard *****************
  3500 ;; Defined at:
  3501 ;;		line 188 in file "concentration.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  used           32   11[BANK0 ] unsigned char [32]
  3506 ;;  random          1   44[BANK0 ] unsigned char 
  3507 ;;  current         1   43[BANK0 ] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3517 ;;      Params:         0       0       0       0       0
  3518 ;;      Locals:         0      34       0       0       0
  3519 ;;      Temps:          0       3       0       0       0
  3520 ;;      Totals:         0      37       0       0       0
  3521 ;;Total ram usage:       37 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    2
  3524 ;; This function calls:
  3525 ;;		_DelayMs
  3526 ;;		___awdiv
  3527 ;; This function is called by:
  3528 ;;		_gameboard_init
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _randomize_gameboard
  3534  05D3                     _randomize_gameboard:	
  3535  05D3                     l1699:	
  3536                           ;incstack = 0
  3537                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3538                           
  3539                           
  3540                           ;concentration.c: 189:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      +                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  3541  05D3  302B               	movlw	randomize_gameboard@used& (0+255)
  3542  05D4  0084               	movwf	4
  3543  05D5  3020               	movlw	32
  3544  05D6  00FF               	movwf	btemp+1
  3545  05D7                     u940:	
  3546  05D7  1383               	bcf	3,7	;select IRP bank0
  3547  05D8  0180               	clrf	0
  3548  05D9  0A84               	incf	4,f
  3549  05DA  0BFF               	decfsz	btemp+1,f
  3550  05DB  2DD7               	goto	u940
  3551  05DC                     l1701:	
  3552                           
  3553                           ;concentration.c: 190:     char current = 0;
  3554  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3555  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3556  05DE  01CB               	clrf	randomize_gameboard@current
  3557                           
  3558                           ;concentration.c: 191:     char random;;concentration.c: 192:     while(current != 32) {
  3559  05DF  2E2B               	goto	l1715
  3560  05E0                     l1703:	
  3561                           
  3562                           ;concentration.c: 193:         DelayMs(TMR2>>(2+(TMR1%4)));
  3563  05E0  0811               	movf	17,w	;volatile
  3564  05E1  00A8               	movwf	??_randomize_gameboard
  3565  05E2  080E               	movf	14,w	;volatile
  3566  05E3  3903               	andlw	3
  3567  05E4  3E02               	addlw	2
  3568  05E5  3E01               	addlw	1
  3569  05E6  2DE9               	goto	u954
  3570  05E7                     u955:	
  3571  05E7  1003               	clrc
  3572  05E8  0CA8               	rrf	??_randomize_gameboard,f
  3573  05E9                     u954:	
  3574  05E9  3EFF               	addlw	-1
  3575  05EA  1D03               	skipz
  3576  05EB  2DE7               	goto	u955
  3577  05EC  0828               	movf	??_randomize_gameboard,w
  3578  05ED  00A9               	movwf	??_randomize_gameboard+1
  3579  05EE  01AA               	clrf	??_randomize_gameboard+2
  3580  05EF  0829               	movf	??_randomize_gameboard+1,w
  3581  05F0  00F2               	movwf	DelayMs@millis
  3582  05F1  082A               	movf	??_randomize_gameboard+2,w
  3583  05F2  00F3               	movwf	DelayMs@millis+1
  3584  05F3  120A  158A  271A  120A  118A  	fcall	_DelayMs
  3585  05F8                     l1705:	
  3586                           
  3587                           ;concentration.c: 194:         random = TMR1 % 32;
  3588  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3589  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3590  05FA  080E               	movf	14,w	;volatile
  3591  05FB  391F               	andlw	31
  3592  05FC  00A8               	movwf	??_randomize_gameboard
  3593  05FD  0828               	movf	??_randomize_gameboard,w
  3594  05FE  00CC               	movwf	randomize_gameboard@random
  3595  05FF                     l1707:	
  3596                           
  3597                           ;concentration.c: 195:         if(used[random] == 0) {
  3598  05FF  084C               	movf	randomize_gameboard@random,w
  3599  0600  3E2B               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3600  0601  0084               	movwf	4
  3601  0602  1383               	bcf	3,7	;select IRP bank0
  3602  0603  0800               	movf	0,w
  3603  0604  1D03               	btfss	3,2
  3604  0605  2E07               	goto	u961
  3605  0606  2E08               	goto	u960
  3606  0607                     u961:	
  3607  0607  2E2B               	goto	l1715
  3608  0608                     u960:	
  3609  0608                     l1709:	
  3610                           
  3611                           ;concentration.c: 196:             used[random] = 1;
  3612  0608  084C               	movf	randomize_gameboard@random,w
  3613  0609  3E2B               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3614  060A  0084               	movwf	4
  3615  060B  0180               	clrf	0
  3616  060C  0A80               	incf	0,f
  3617  060D                     l1711:	
  3618                           
  3619                           ;concentration.c: 197:             board[random] = current/4;
  3620  060D  3004               	movlw	4
  3621  060E  00A0               	movwf	___awdiv@divisor
  3622  060F  3000               	movlw	0
  3623  0610  00A1               	movwf	___awdiv@divisor+1
  3624  0611  084B               	movf	randomize_gameboard@current,w
  3625  0612  00A8               	movwf	??_randomize_gameboard
  3626  0613  01A9               	clrf	??_randomize_gameboard+1
  3627  0614  0828               	movf	??_randomize_gameboard,w
  3628  0615  00A2               	movwf	___awdiv@dividend
  3629  0616  0829               	movf	??_randomize_gameboard+1,w
  3630  0617  00A3               	movwf	___awdiv@dividend+1
  3631  0618  120A  118A  250A  120A  118A  	fcall	___awdiv
  3632  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3633  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3634  061F  0820               	movf	?___awdiv,w
  3635  0620  00AA               	movwf	??_randomize_gameboard+2
  3636  0621  084C               	movf	randomize_gameboard@random,w
  3637  0622  3EC0               	addlw	(low (_board| 0))& (0+255)
  3638  0623  0084               	movwf	4
  3639  0624  082A               	movf	??_randomize_gameboard+2,w
  3640  0625  1383               	bcf	3,7	;select IRP bank1
  3641  0626  0080               	movwf	0
  3642  0627                     l1713:	
  3643                           
  3644                           ;concentration.c: 198:             current++;
  3645  0627  3001               	movlw	1
  3646  0628  00A8               	movwf	??_randomize_gameboard
  3647  0629  0828               	movf	??_randomize_gameboard,w
  3648  062A  07CB               	addwf	randomize_gameboard@current,f
  3649  062B                     l1715:	
  3650                           
  3651                           ;concentration.c: 192:     while(current != 32) {
  3652  062B  3020               	movlw	32
  3653  062C  064B               	xorwf	randomize_gameboard@current,w
  3654  062D  1D03               	btfss	3,2
  3655  062E  2E30               	goto	u971
  3656  062F  2E31               	goto	u970
  3657  0630                     u971:	
  3658  0630  2DE0               	goto	l1703
  3659  0631                     u970:	
  3660  0631                     l215:	
  3661  0631  0008               	return
  3662  0632                     __end_of_randomize_gameboard:	
  3663                           
  3664                           	psect	text17
  3665  050A                     __ptext17:	
  3666 ;; *************** function ___awdiv *****************
  3667 ;; Defined at:
  3668 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  divisor         2    0[BANK0 ] int 
  3671 ;;  dividend        2    2[BANK0 ] int 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  quotient        2    6[BANK0 ] int 
  3674 ;;  sign            1    5[BANK0 ] unsigned char 
  3675 ;;  counter         1    4[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2    0[BANK0 ] int 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       4       0       0       0
  3686 ;;      Locals:         0       4       0       0       0
  3687 ;;      Temps:          1       0       0       0       0
  3688 ;;      Totals:         1       8       0       0       0
  3689 ;;Total ram usage:        9 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_display_scoreboard
  3696 ;;		_randomize_gameboard
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function ___awdiv
  3702  050A                     ___awdiv:	
  3703  050A                     l1575:	
  3704                           ;incstack = 0
  3705                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3706                           
  3707  050A  1283               	bcf	3,5	;RP0=0, select bank0
  3708  050B  1303               	bcf	3,6	;RP1=0, select bank0
  3709  050C  01A5               	clrf	___awdiv@sign
  3710  050D                     l1577:	
  3711  050D  1FA1               	btfss	___awdiv@divisor+1,7
  3712  050E  2D10               	goto	u711
  3713  050F  2D11               	goto	u710
  3714  0510                     u711:	
  3715  0510  2D18               	goto	l1583
  3716  0511                     u710:	
  3717  0511                     l1579:	
  3718  0511  09A0               	comf	___awdiv@divisor,f
  3719  0512  09A1               	comf	___awdiv@divisor+1,f
  3720  0513  0AA0               	incf	___awdiv@divisor,f
  3721  0514  1903               	skipnz
  3722  0515  0AA1               	incf	___awdiv@divisor+1,f
  3723  0516                     l1581:	
  3724  0516  01A5               	clrf	___awdiv@sign
  3725  0517  0AA5               	incf	___awdiv@sign,f
  3726  0518                     l1583:	
  3727  0518  1FA3               	btfss	___awdiv@dividend+1,7
  3728  0519  2D1B               	goto	u721
  3729  051A  2D1C               	goto	u720
  3730  051B                     u721:	
  3731  051B  2D25               	goto	l1589
  3732  051C                     u720:	
  3733  051C                     l1585:	
  3734  051C  09A2               	comf	___awdiv@dividend,f
  3735  051D  09A3               	comf	___awdiv@dividend+1,f
  3736  051E  0AA2               	incf	___awdiv@dividend,f
  3737  051F  1903               	skipnz
  3738  0520  0AA3               	incf	___awdiv@dividend+1,f
  3739  0521                     l1587:	
  3740  0521  3001               	movlw	1
  3741  0522  00F9               	movwf	??___awdiv
  3742  0523  0879               	movf	??___awdiv,w
  3743  0524  06A5               	xorwf	___awdiv@sign,f
  3744  0525                     l1589:	
  3745  0525  01A6               	clrf	___awdiv@quotient
  3746  0526  01A7               	clrf	___awdiv@quotient+1
  3747  0527                     l1591:	
  3748  0527  0820               	movf	___awdiv@divisor,w
  3749  0528  0421               	iorwf	___awdiv@divisor+1,w
  3750  0529  1903               	btfsc	3,2
  3751  052A  2D2C               	goto	u731
  3752  052B  2D2D               	goto	u730
  3753  052C                     u731:	
  3754  052C  2D64               	goto	l1611
  3755  052D                     u730:	
  3756  052D                     l1593:	
  3757  052D  01A4               	clrf	___awdiv@counter
  3758  052E  0AA4               	incf	___awdiv@counter,f
  3759  052F  2D3B               	goto	l1599
  3760  0530                     l1595:	
  3761  0530  3001               	movlw	1
  3762  0531                     u745:	
  3763  0531  1003               	clrc
  3764  0532  0DA0               	rlf	___awdiv@divisor,f
  3765  0533  0DA1               	rlf	___awdiv@divisor+1,f
  3766  0534  3EFF               	addlw	-1
  3767  0535  1D03               	skipz
  3768  0536  2D31               	goto	u745
  3769  0537                     l1597:	
  3770  0537  3001               	movlw	1
  3771  0538  00F9               	movwf	??___awdiv
  3772  0539  0879               	movf	??___awdiv,w
  3773  053A  07A4               	addwf	___awdiv@counter,f
  3774  053B                     l1599:	
  3775  053B  1FA1               	btfss	___awdiv@divisor+1,7
  3776  053C  2D3E               	goto	u751
  3777  053D  2D3F               	goto	u750
  3778  053E                     u751:	
  3779  053E  2D30               	goto	l1595
  3780  053F                     u750:	
  3781  053F                     l1601:	
  3782  053F  3001               	movlw	1
  3783  0540                     u765:	
  3784  0540  1003               	clrc
  3785  0541  0DA6               	rlf	___awdiv@quotient,f
  3786  0542  0DA7               	rlf	___awdiv@quotient+1,f
  3787  0543  3EFF               	addlw	-1
  3788  0544  1D03               	skipz
  3789  0545  2D40               	goto	u765
  3790  0546  0821               	movf	___awdiv@divisor+1,w
  3791  0547  0223               	subwf	___awdiv@dividend+1,w
  3792  0548  1D03               	skipz
  3793  0549  2D4C               	goto	u775
  3794  054A  0820               	movf	___awdiv@divisor,w
  3795  054B  0222               	subwf	___awdiv@dividend,w
  3796  054C                     u775:	
  3797  054C  1C03               	skipc
  3798  054D  2D4F               	goto	u771
  3799  054E  2D50               	goto	u770
  3800  054F                     u771:	
  3801  054F  2D57               	goto	l1607
  3802  0550                     u770:	
  3803  0550                     l1603:	
  3804  0550  0820               	movf	___awdiv@divisor,w
  3805  0551  02A2               	subwf	___awdiv@dividend,f
  3806  0552  0821               	movf	___awdiv@divisor+1,w
  3807  0553  1C03               	skipc
  3808  0554  03A3               	decf	___awdiv@dividend+1,f
  3809  0555  02A3               	subwf	___awdiv@dividend+1,f
  3810  0556                     l1605:	
  3811  0556  1426               	bsf	___awdiv@quotient,0
  3812  0557                     l1607:	
  3813  0557  3001               	movlw	1
  3814  0558                     u785:	
  3815  0558  1003               	clrc
  3816  0559  0CA1               	rrf	___awdiv@divisor+1,f
  3817  055A  0CA0               	rrf	___awdiv@divisor,f
  3818  055B  3EFF               	addlw	-1
  3819  055C  1D03               	skipz
  3820  055D  2D58               	goto	u785
  3821  055E                     l1609:	
  3822  055E  3001               	movlw	1
  3823  055F  02A4               	subwf	___awdiv@counter,f
  3824  0560  1D03               	btfss	3,2
  3825  0561  2D63               	goto	u791
  3826  0562  2D64               	goto	u790
  3827  0563                     u791:	
  3828  0563  2D3F               	goto	l1601
  3829  0564                     u790:	
  3830  0564                     l1611:	
  3831  0564  0825               	movf	___awdiv@sign,w
  3832  0565  1903               	btfsc	3,2
  3833  0566  2D68               	goto	u801
  3834  0567  2D69               	goto	u800
  3835  0568                     u801:	
  3836  0568  2D6E               	goto	l1615
  3837  0569                     u800:	
  3838  0569                     l1613:	
  3839  0569  09A6               	comf	___awdiv@quotient,f
  3840  056A  09A7               	comf	___awdiv@quotient+1,f
  3841  056B  0AA6               	incf	___awdiv@quotient,f
  3842  056C  1903               	skipnz
  3843  056D  0AA7               	incf	___awdiv@quotient+1,f
  3844  056E                     l1615:	
  3845  056E  0827               	movf	___awdiv@quotient+1,w
  3846  056F  00A1               	movwf	?___awdiv+1
  3847  0570  0826               	movf	___awdiv@quotient,w
  3848  0571  00A0               	movwf	?___awdiv
  3849  0572                     l584:	
  3850  0572  0008               	return
  3851  0573                     __end_of___awdiv:	
  3852                           
  3853                           	psect	text18
  3854  0416                     __ptext18:	
  3855 ;; *************** function _make_custom_chars *****************
  3856 ;; Defined at:
  3857 ;;		line 139 in file "concentration.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0
  3873 ;;      Temps:          0       1       0       0       0
  3874 ;;      Totals:         0       1       0       0       0
  3875 ;;Total ram usage:        1 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    4
  3878 ;; This function calls:
  3879 ;;		_lcd_set_custom_char
  3880 ;; This function is called by:
  3881 ;;		_gameboard_init
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _make_custom_chars
  3887  0416                     _make_custom_chars:	
  3888  0416                     l2131:	
  3889                           ;incstack = 0
  3890                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3891                           
  3892                           
  3893                           ;concentration.c: 140:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0
      +                          E, 0x00};;concentration.c: 141:     lcd_set_custom_char(smile, 0x00, gameboard);
  3894  0416  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0417  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0418  01A0               	clrf	lcd_set_custom_char@cg_address
  3897  0419  3005               	movlw	5
  3898  041A  00A1               	movwf	lcd_set_custom_char@port
  3899  041B  3000               	movlw	0
  3900  041C  00A2               	movwf	lcd_set_custom_char@port+1
  3901  041D  3039               	movlw	(low ((make_custom_chars@smile-__stringbase)| (0+32768)))& (0+255)
  3902  041E  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3903                           
  3904                           ;concentration.c: 142:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0
      +                          x00, 0x00};;concentration.c: 143:     lcd_set_custom_char(diamond, 0x01, gameboard);
  3905  0423  1283               	bcf	3,5	;RP0=0, select bank0
  3906  0424  1303               	bcf	3,6	;RP1=0, select bank0
  3907  0425  01A0               	clrf	lcd_set_custom_char@cg_address
  3908  0426  0AA0               	incf	lcd_set_custom_char@cg_address,f
  3909  0427  3005               	movlw	5
  3910  0428  00A1               	movwf	lcd_set_custom_char@port
  3911  0429  3000               	movlw	0
  3912  042A  00A2               	movwf	lcd_set_custom_char@port+1
  3913  042B  3031               	movlw	(low ((make_custom_chars@diamond-__stringbase)| (0+32768)))& (0+255)
  3914  042C  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3915                           
  3916                           ;concentration.c: 144:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x00};;concentration.c: 145:     lcd_set_custom_char(heart, 0x02, gameboard);
  3917  0431  3002               	movlw	2
  3918  0432  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0433  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0434  00A7               	movwf	??_make_custom_chars
  3921  0435  0827               	movf	??_make_custom_chars,w
  3922  0436  00A0               	movwf	lcd_set_custom_char@cg_address
  3923  0437  3005               	movlw	5
  3924  0438  00A1               	movwf	lcd_set_custom_char@port
  3925  0439  3000               	movlw	0
  3926  043A  00A2               	movwf	lcd_set_custom_char@port+1
  3927  043B  3029               	movlw	(low ((make_custom_chars@heart-__stringbase)| (0+32768)))& (0+255)
  3928  043C  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3929                           
  3930                           ;concentration.c: 146:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x0E};;concentration.c: 147:     lcd_set_custom_char(spade, 0x03, gameboard);
  3931  0441  3003               	movlw	3
  3932  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0443  1303               	bcf	3,6	;RP1=0, select bank0
  3934  0444  00A7               	movwf	??_make_custom_chars
  3935  0445  0827               	movf	??_make_custom_chars,w
  3936  0446  00A0               	movwf	lcd_set_custom_char@cg_address
  3937  0447  3005               	movlw	5
  3938  0448  00A1               	movwf	lcd_set_custom_char@port
  3939  0449  3000               	movlw	0
  3940  044A  00A2               	movwf	lcd_set_custom_char@port+1
  3941  044B  3021               	movlw	(low ((make_custom_chars@spade-__stringbase)| (0+32768)))& (0+255)
  3942  044C  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3943                           
  3944                           ;concentration.c: 148:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04
      +                          , 0x0E};;concentration.c: 149:     lcd_set_custom_char(club, 0x04, gameboard);
  3945  0451  3004               	movlw	4
  3946  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0454  00A7               	movwf	??_make_custom_chars
  3949  0455  0827               	movf	??_make_custom_chars,w
  3950  0456  00A0               	movwf	lcd_set_custom_char@cg_address
  3951  0457  3005               	movlw	5
  3952  0458  00A1               	movwf	lcd_set_custom_char@port
  3953  0459  3000               	movlw	0
  3954  045A  00A2               	movwf	lcd_set_custom_char@port+1
  3955  045B  3019               	movlw	(low ((make_custom_chars@club-__stringbase)| (0+32768)))& (0+255)
  3956  045C  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3957                           
  3958                           ;concentration.c: 150:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0
      +                          E, 0x00};;concentration.c: 151:     lcd_set_custom_char(skull, 0x05, gameboard);
  3959  0461  3005               	movlw	5
  3960  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0463  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0464  00A7               	movwf	??_make_custom_chars
  3963  0465  0827               	movf	??_make_custom_chars,w
  3964  0466  00A0               	movwf	lcd_set_custom_char@cg_address
  3965  0467  3005               	movlw	5
  3966  0468  00A1               	movwf	lcd_set_custom_char@port
  3967  0469  3000               	movlw	0
  3968  046A  00A2               	movwf	lcd_set_custom_char@port+1
  3969  046B  3011               	movlw	(low ((make_custom_chars@skull-__stringbase)| (0+32768)))& (0+255)
  3970  046C  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3971                           
  3972                           ;concentration.c: 152:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 
      +                          0x05};;concentration.c: 153:     lcd_set_custom_char(RH, 0x06, gameboard);
  3973  0471  3006               	movlw	6
  3974  0472  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0473  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0474  00A7               	movwf	??_make_custom_chars
  3977  0475  0827               	movf	??_make_custom_chars,w
  3978  0476  00A0               	movwf	lcd_set_custom_char@cg_address
  3979  0477  3005               	movlw	5
  3980  0478  00A1               	movwf	lcd_set_custom_char@port
  3981  0479  3000               	movlw	0
  3982  047A  00A2               	movwf	lcd_set_custom_char@port+1
  3983  047B  3009               	movlw	(low ((make_custom_chars@RH-__stringbase)| (0+32768)))& (0+255)
  3984  047C  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3985                           
  3986                           ;concentration.c: 154:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02,
      +                           0x03};;concentration.c: 155:     lcd_set_custom_char(PIC, 0x07, gameboard);
  3987  0481  3007               	movlw	7
  3988  0482  1283               	bcf	3,5	;RP0=0, select bank0
  3989  0483  1303               	bcf	3,6	;RP1=0, select bank0
  3990  0484  00A7               	movwf	??_make_custom_chars
  3991  0485  0827               	movf	??_make_custom_chars,w
  3992  0486  00A0               	movwf	lcd_set_custom_char@cg_address
  3993  0487  3005               	movlw	5
  3994  0488  00A1               	movwf	lcd_set_custom_char@port
  3995  0489  3000               	movlw	0
  3996  048A  00A2               	movwf	lcd_set_custom_char@port+1
  3997  048B  3001               	movlw	(low ((make_custom_chars@PIC-__stringbase)| (0+32768)))& (0+255)
  3998  048C  120A  118A  26DD  120A  118A  	fcall	_lcd_set_custom_char
  3999  0491                     l197:	
  4000  0491  0008               	return
  4001  0492                     __end_of_make_custom_chars:	
  4002                           
  4003                           	psect	text19
  4004  06DD                     __ptext19:	
  4005 ;; *************** function _lcd_set_custom_char *****************
  4006 ;; Defined at:
  4007 ;;		line 166 in file "lcd4bits.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  data            1    wreg     PTR const unsigned char 
  4010 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4011 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4012 ;;  cg_address      1    0[BANK0 ] unsigned char 
  4013 ;;  port            2    1[BANK0 ] PTR unsigned char 
  4014 ;;		 -> PORTA(1), 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  data            1    6[BANK0 ] PTR const unsigned char 
  4017 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4018 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4019 ;;  row             1    5[BANK0 ] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4029 ;;      Params:         0       3       0       0       0
  4030 ;;      Locals:         0       2       0       0       0
  4031 ;;      Temps:          0       2       0       0       0
  4032 ;;      Totals:         0       7       0       0       0
  4033 ;;Total ram usage:        7 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    3
  4036 ;; This function calls:
  4037 ;;		_lcd_write
  4038 ;; This function is called by:
  4039 ;;		_make_custom_chars
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _lcd_set_custom_char
  4045  06DD                     _lcd_set_custom_char:	
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4049                           ;lcd_set_custom_char@data stored from wreg
  4050  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  4051  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  4052  06DF  00A6               	movwf	lcd_set_custom_char@data
  4053  06E0                     l2115:	
  4054                           
  4055                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  4056  06E0  01A5               	clrf	lcd_set_custom_char@row
  4057  06E1                     l2121:	
  4058                           
  4059                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  4060  06E1  0820               	movf	lcd_set_custom_char@cg_address,w
  4061  06E2  00A3               	movwf	??_lcd_set_custom_char
  4062  06E3  3002               	movlw	2
  4063  06E4                     u1345:	
  4064  06E4  1003               	clrc
  4065  06E5  0DA3               	rlf	??_lcd_set_custom_char,f
  4066  06E6  3EFF               	addlw	-1
  4067  06E7  1D03               	skipz
  4068  06E8  2EE4               	goto	u1345
  4069  06E9  1003               	clrc
  4070  06EA  0D23               	rlf	??_lcd_set_custom_char,w
  4071  06EB  0425               	iorwf	lcd_set_custom_char@row,w
  4072  06EC  3840               	iorlw	64
  4073  06ED  00A4               	movwf	??_lcd_set_custom_char+1
  4074  06EE  0824               	movf	??_lcd_set_custom_char+1,w
  4075  06EF  00F4               	movwf	lcd_write@CmdChar
  4076  06F0  0821               	movf	lcd_set_custom_char@port,w
  4077  06F1  00F5               	movwf	lcd_write@port
  4078  06F2  0822               	movf	lcd_set_custom_char@port+1,w
  4079  06F3  00F6               	movwf	lcd_write@port+1
  4080  06F4  3000               	movlw	0
  4081  06F5  120A  118A  272F  120A  118A  	fcall	_lcd_write
  4082                           
  4083                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  4084  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  4085  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  4086  06FC  0826               	movf	lcd_set_custom_char@data,w
  4087  06FD  0084               	movwf	4
  4088  06FE  120A  118A  2300  120A  118A  	fcall	stringdir
  4089  0703  00A3               	movwf	??_lcd_set_custom_char
  4090  0704  0823               	movf	??_lcd_set_custom_char,w
  4091  0705  00F4               	movwf	lcd_write@CmdChar
  4092  0706  0821               	movf	lcd_set_custom_char@port,w
  4093  0707  00F5               	movwf	lcd_write@port
  4094  0708  0822               	movf	lcd_set_custom_char@port+1,w
  4095  0709  00F6               	movwf	lcd_write@port+1
  4096  070A  3010               	movlw	16
  4097  070B  120A  118A  272F  120A  118A  	fcall	_lcd_write
  4098  0710                     l2123:	
  4099                           
  4100                           ;lcd4bits.c: 171:         *data++;
  4101  0710  3001               	movlw	1
  4102  0711  1283               	bcf	3,5	;RP0=0, select bank0
  4103  0712  1303               	bcf	3,6	;RP1=0, select bank0
  4104  0713  00A3               	movwf	??_lcd_set_custom_char
  4105  0714  0823               	movf	??_lcd_set_custom_char,w
  4106  0715  07A6               	addwf	lcd_set_custom_char@data,f
  4107  0716                     l2125:	
  4108                           
  4109                           ;lcd4bits.c: 172:     }
  4110  0716  3001               	movlw	1
  4111  0717  00A3               	movwf	??_lcd_set_custom_char
  4112  0718  0823               	movf	??_lcd_set_custom_char,w
  4113  0719  07A5               	addwf	lcd_set_custom_char@row,f
  4114  071A                     l2127:	
  4115  071A  3008               	movlw	8
  4116  071B  0225               	subwf	lcd_set_custom_char@row,w
  4117  071C  1C03               	skipc
  4118  071D  2F1F               	goto	u1351
  4119  071E  2F20               	goto	u1350
  4120  071F                     u1351:	
  4121  071F  2EE1               	goto	l2121
  4122  0720                     u1350:	
  4123  0720                     l2129:	
  4124                           
  4125                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  4126  0720  3080               	movlw	128
  4127  0721  00A3               	movwf	??_lcd_set_custom_char
  4128  0722  0823               	movf	??_lcd_set_custom_char,w
  4129  0723  00F4               	movwf	lcd_write@CmdChar
  4130  0724  0821               	movf	lcd_set_custom_char@port,w
  4131  0725  00F5               	movwf	lcd_write@port
  4132  0726  0822               	movf	lcd_set_custom_char@port+1,w
  4133  0727  00F6               	movwf	lcd_write@port+1
  4134  0728  3000               	movlw	0
  4135  0729  120A  118A  272F  120A  118A  	fcall	_lcd_write
  4136  072E                     l345:	
  4137  072E  0008               	return
  4138  072F                     __end_of_lcd_set_custom_char:	
  4139                           
  4140                           	psect	text20
  4141  0F31                     __ptext20:	
  4142 ;; *************** function _lcd_goto *****************
  4143 ;; Defined at:
  4144 ;;		line 146 in file "lcd4bits.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  position        1    wreg     unsigned char 
  4147 ;;  port            2    0[BANK0 ] PTR unsigned char 
  4148 ;;		 -> PORTD(1), PORTA(1), 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  position        1    3[BANK0 ] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4160 ;;      Params:         0       2       0       0       0
  4161 ;;      Locals:         0       1       0       0       0
  4162 ;;      Temps:          0       1       0       0       0
  4163 ;;      Totals:         0       4       0       0       0
  4164 ;;Total ram usage:        4 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    3
  4167 ;; This function calls:
  4168 ;;		_DelayMs
  4169 ;;		_lcd_write
  4170 ;; This function is called by:
  4171 ;;		_startup
  4172 ;;		_display_scoreboard
  4173 ;;		_display_gameboard
  4174 ;;		_gameboard_init
  4175 ;;		_update_cursor
  4176 ;;		_toggle_cursor
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _lcd_goto
  4182  0F31                     _lcd_goto:	
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4186                           ;lcd_goto@position stored from wreg
  4187  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0F33  00A3               	movwf	lcd_goto@position
  4190  0F34                     l2089:	
  4191                           
  4192                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  4193  0F34  0823               	movf	lcd_goto@position,w
  4194  0F35  3E80               	addlw	128
  4195  0F36  00A2               	movwf	??_lcd_goto
  4196  0F37  0822               	movf	??_lcd_goto,w
  4197  0F38  00F4               	movwf	lcd_write@CmdChar
  4198  0F39  0820               	movf	lcd_goto@port,w
  4199  0F3A  00F5               	movwf	lcd_write@port
  4200  0F3B  0821               	movf	lcd_goto@port+1,w
  4201  0F3C  00F6               	movwf	lcd_write@port+1
  4202  0F3D  3000               	movlw	0
  4203  0F3E  120A  118A  272F  120A  158A  	fcall	_lcd_write
  4204  0F43                     l2091:	
  4205                           
  4206                           ;lcd4bits.c: 149:     DelayMs(2);
  4207  0F43  3002               	movlw	2
  4208  0F44  00F2               	movwf	DelayMs@millis
  4209  0F45  3000               	movlw	0
  4210  0F46  00F3               	movwf	DelayMs@millis+1
  4211  0F47  120A  158A  271A  120A  158A  	fcall	_DelayMs
  4212  0F4C                     l337:	
  4213  0F4C  0008               	return
  4214  0F4D                     __end_of_lcd_goto:	
  4215                           
  4216                           	psect	text21
  4217  02E6                     __ptext21:	
  4218 ;; *************** function _lcd_clear *****************
  4219 ;; Defined at:
  4220 ;;		line 123 in file "lcd4bits.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  port            2    0[BANK0 ] PTR unsigned char 
  4223 ;;		 -> PORTD(1), PORTA(1), 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         0       2       0       0       0
  4236 ;;      Locals:         0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0
  4238 ;;      Totals:         0       2       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    3
  4242 ;; This function calls:
  4243 ;;		_DelayMs
  4244 ;;		_lcd_write
  4245 ;; This function is called by:
  4246 ;;		_startup
  4247 ;;		_display_gameboard
  4248 ;;		_gameboard_init
  4249 ;;		_lcd_init
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           
  4254                           ;psect for function _lcd_clear
  4255  02E6                     _lcd_clear:	
  4256  02E6                     l2077:	
  4257                           ;incstack = 0
  4258                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4259                           
  4260                           
  4261                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  4262  02E6  01F4               	clrf	lcd_write@CmdChar
  4263  02E7  0AF4               	incf	lcd_write@CmdChar,f
  4264  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  4265  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  4266  02EA  0820               	movf	lcd_clear@port,w
  4267  02EB  00F5               	movwf	lcd_write@port
  4268  02EC  0821               	movf	lcd_clear@port+1,w
  4269  02ED  00F6               	movwf	lcd_write@port+1
  4270  02EE  3000               	movlw	0
  4271  02EF  120A  118A  272F  120A  118A  	fcall	_lcd_write
  4272  02F4                     l2079:	
  4273                           
  4274                           ;lcd4bits.c: 125:     DelayMs(2);
  4275  02F4  3002               	movlw	2
  4276  02F5  00F2               	movwf	DelayMs@millis
  4277  02F6  3000               	movlw	0
  4278  02F7  00F3               	movwf	DelayMs@millis+1
  4279  02F8  120A  158A  271A  120A  118A  	fcall	_DelayMs
  4280  02FD                     l325:	
  4281  02FD  0008               	return
  4282  02FE                     __end_of_lcd_clear:	
  4283                           
  4284                           	psect	text22
  4285  072F                     __ptext22:	
  4286 ;; *************** function _lcd_write *****************
  4287 ;; Defined at:
  4288 ;;		line 110 in file "lcd4bits.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  mode            1    wreg     unsigned char 
  4291 ;;  CmdChar         1    4[COMMON] unsigned char 
  4292 ;;  port            2    5[COMMON] PTR unsigned char 
  4293 ;;		 -> PORTD(1), PORTA(1), 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  mode            1    9[COMMON] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         3       0       0       0       0
  4306 ;;      Locals:         1       0       0       0       0
  4307 ;;      Temps:          2       0       0       0       0
  4308 ;;      Totals:         6       0       0       0       0
  4309 ;;Total ram usage:        6 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    2
  4312 ;; This function calls:
  4313 ;;		_Delay20us
  4314 ;; This function is called by:
  4315 ;;		_lcd_clear
  4316 ;;		_lcd_puts
  4317 ;;		_lcd_putch
  4318 ;;		_lcd_goto
  4319 ;;		_lcd_init
  4320 ;;		_lcd_set_custom_char
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function _lcd_write
  4326  072F                     _lcd_write:	
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4330                           ;lcd_write@mode stored from wreg
  4331  072F  00F9               	movwf	lcd_write@mode
  4332  0730                     l2067:	
  4333                           
  4334                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  4335  0730  0874               	movf	lcd_write@CmdChar,w
  4336  0731  00F7               	movwf	??_lcd_write
  4337  0732  3004               	movlw	4
  4338  0733                     u1305:	
  4339  0733  1003               	clrc
  4340  0734  0CF7               	rrf	??_lcd_write,f
  4341  0735  3EFF               	addlw	-1
  4342  0736  1D03               	skipz
  4343  0737  2F33               	goto	u1305
  4344  0738  0877               	movf	??_lcd_write,w
  4345  0739  3E20               	addlw	32
  4346  073A  0479               	iorwf	lcd_write@mode,w
  4347  073B  00F8               	movwf	??_lcd_write+1
  4348  073C  0875               	movf	lcd_write@port,w
  4349  073D  0084               	movwf	4
  4350  073E  1783               	bsf	3,7
  4351  073F  1C76               	btfss	lcd_write@port+1,0
  4352  0740  1383               	bcf	3,7
  4353  0741  0878               	movf	??_lcd_write+1,w
  4354  0742  0080               	movwf	0
  4355  0743                     l2069:	
  4356                           
  4357                           ;lcd4bits.c: 112:     Delay20us();
  4358  0743  120A  158A  26EA  120A  118A  	fcall	_Delay20us
  4359  0748                     l2071:	
  4360                           
  4361                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  4362  0748  0875               	movf	lcd_write@port,w
  4363  0749  0084               	movwf	4
  4364  074A  1783               	bsf	3,7
  4365  074B  1C76               	btfss	lcd_write@port+1,0
  4366  074C  1383               	bcf	3,7
  4367  074D  0800               	movf	0,w
  4368  074E  39DF               	andlw	223
  4369  074F  00F7               	movwf	??_lcd_write
  4370  0750  0875               	movf	lcd_write@port,w
  4371  0751  0084               	movwf	4
  4372  0752  1783               	bsf	3,7
  4373  0753  1C76               	btfss	lcd_write@port+1,0
  4374  0754  1383               	bcf	3,7
  4375  0755  0877               	movf	??_lcd_write,w
  4376  0756  0080               	movwf	0
  4377  0757                     l2073:	
  4378                           
  4379                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  4380  0757  0874               	movf	lcd_write@CmdChar,w
  4381  0758  390F               	andlw	15
  4382  0759  3E20               	addlw	32
  4383  075A  0479               	iorwf	lcd_write@mode,w
  4384  075B  00F7               	movwf	??_lcd_write
  4385  075C  0875               	movf	lcd_write@port,w
  4386  075D  0084               	movwf	4
  4387  075E  1783               	bsf	3,7
  4388  075F  1C76               	btfss	lcd_write@port+1,0
  4389  0760  1383               	bcf	3,7
  4390  0761  0877               	movf	??_lcd_write,w
  4391  0762  0080               	movwf	0
  4392  0763                     l2075:	
  4393                           
  4394                           ;lcd4bits.c: 116:     Delay20us();
  4395  0763  120A  158A  26EA  120A  118A  	fcall	_Delay20us
  4396                           
  4397                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  4398  0768  0875               	movf	lcd_write@port,w
  4399  0769  0084               	movwf	4
  4400  076A  1783               	bsf	3,7
  4401  076B  1C76               	btfss	lcd_write@port+1,0
  4402  076C  1383               	bcf	3,7
  4403  076D  0800               	movf	0,w
  4404  076E  39DF               	andlw	223
  4405  076F  00F7               	movwf	??_lcd_write
  4406  0770  0875               	movf	lcd_write@port,w
  4407  0771  0084               	movwf	4
  4408  0772  1783               	bsf	3,7
  4409  0773  1C76               	btfss	lcd_write@port+1,0
  4410  0774  1383               	bcf	3,7
  4411  0775  0877               	movf	??_lcd_write,w
  4412  0776  0080               	movwf	0
  4413  0777                     l322:	
  4414  0777  0008               	return
  4415  0778                     __end_of_lcd_write:	
  4416                           
  4417                           	psect	text23
  4418  0EEA                     __ptext23:	
  4419 ;; *************** function _Delay20us *****************
  4420 ;; Defined at:
  4421 ;;		line 99 in file "lcd4bits.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  next            1    3[COMMON] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         0       0       0       0       0
  4436 ;;      Locals:         1       0       0       0       0
  4437 ;;      Temps:          1       0       0       0       0
  4438 ;;      Totals:         2       0       0       0       0
  4439 ;;Total ram usage:        2 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_lcd_write
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function _Delay20us
  4451  0EEA                     _Delay20us:	
  4452  0EEA                     l2057:	
  4453                           ;incstack = 0
  4454                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  4455                           
  4456                           
  4457                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  4458  0EEA  01F3               	clrf	Delay20us@next
  4459  0EEB                     l2063:	
  4460  0EEB  3001               	movlw	1
  4461  0EEC  00F2               	movwf	??_Delay20us
  4462  0EED  0872               	movf	??_Delay20us,w
  4463  0EEE  07F3               	addwf	Delay20us@next,f
  4464  0EEF                     l2065:	
  4465  0EEF  3008               	movlw	8
  4466  0EF0  0273               	subwf	Delay20us@next,w
  4467  0EF1  1C03               	skipc
  4468  0EF2  2EF4               	goto	u1291
  4469  0EF3  2EF5               	goto	u1290
  4470  0EF4                     u1291:	
  4471  0EF4  2EEB               	goto	l2063
  4472  0EF5                     u1290:	
  4473  0EF5                     l319:	
  4474  0EF5  0008               	return
  4475  0EF6                     __end_of_Delay20us:	
  4476                           
  4477                           	psect	text24
  4478  0F1A                     __ptext24:	
  4479 ;; *************** function _DelayMs *****************
  4480 ;; Defined at:
  4481 ;;		line 86 in file "lcd4bits.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  millis          2    2[COMMON] unsigned int 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4495 ;;      Params:         2       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0
  4498 ;;      Totals:         2       0       0       0       0
  4499 ;;Total ram usage:        2 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_startup
  4506 ;;		_randomize_gameboard
  4507 ;;		_check_for_match
  4508 ;;		_update_gameboard_from_input
  4509 ;;		_lcd_clear
  4510 ;;		_lcd_goto
  4511 ;;		_lcd_init
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _DelayMs
  4517  0F1A                     _DelayMs:	
  4518  0F1A                     l1527:	
  4519                           ;incstack = 0
  4520                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  4521                           
  4522                           
  4523                           ;lcd4bits.c: 87:     while (millis != 0) {
  4524  0F1A  2F2A               	goto	l1535
  4525  0F1B                     l1529:	
  4526                           
  4527                           ;lcd4bits.c: 88:         TMR0 = 100;
  4528  0F1B  3064               	movlw	100
  4529  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  4530  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  4531  0F1E  0081               	movwf	1	;volatile
  4532  0F1F                     l1531:	
  4533                           
  4534                           ;lcd4bits.c: 89:         T0IF = 0;
  4535  0F1F  110B               	bcf	11,2	;volatile
  4536  0F20                     l310:	
  4537                           ;lcd4bits.c: 90:         while(T0IF == 0);
  4538                           
  4539  0F20  1D0B               	btfss	11,2	;volatile
  4540  0F21  2F23               	goto	u661
  4541  0F22  2F24               	goto	u660
  4542  0F23                     u661:	
  4543  0F23  2F20               	goto	l310
  4544  0F24                     u660:	
  4545  0F24                     l1533:	
  4546                           
  4547                           ;lcd4bits.c: 91:         millis--;
  4548  0F24  3001               	movlw	1
  4549  0F25  02F2               	subwf	DelayMs@millis,f
  4550  0F26  3000               	movlw	0
  4551  0F27  1C03               	skipc
  4552  0F28  03F3               	decf	DelayMs@millis+1,f
  4553  0F29  02F3               	subwf	DelayMs@millis+1,f
  4554  0F2A                     l1535:	
  4555                           
  4556                           ;lcd4bits.c: 87:     while (millis != 0) {
  4557  0F2A  0872               	movf	DelayMs@millis,w
  4558  0F2B  0473               	iorwf	DelayMs@millis+1,w
  4559  0F2C  1D03               	btfss	3,2
  4560  0F2D  2F2F               	goto	u671
  4561  0F2E  2F30               	goto	u670
  4562  0F2F                     u671:	
  4563  0F2F  2F1B               	goto	l1529
  4564  0F30                     u670:	
  4565  0F30                     l314:	
  4566  0F30  0008               	return
  4567  0F31                     __end_of_DelayMs:	
  4568                           
  4569                           	psect	text25
  4570  0EF6                     __ptext25:	
  4571 ;; *************** function _get_current_char *****************
  4572 ;; Defined at:
  4573 ;;		line 337 in file "concentration.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0
  4589 ;;      Temps:          1       0       0       0       0
  4590 ;;      Totals:         1       0       0       0       0
  4591 ;;Total ram usage:        1 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    2
  4594 ;; This function calls:
  4595 ;;		_get_cursor_index
  4596 ;; This function is called by:
  4597 ;;		_gameboard_init
  4598 ;;		_update_cursor
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function _get_current_char
  4604  0EF6                     _get_current_char:	
  4605  0EF6                     l1693:	
  4606                           ;incstack = 0
  4607                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4608                           
  4609                           
  4610                           ;concentration.c: 338:     current_char = visible[get_cursor_index(cursor_pos)];
  4611  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  4613  0EF8  085C               	movf	_cursor_pos,w
  4614  0EF9  120A  158A  26E0  120A  158A  	fcall	_get_cursor_index
  4615  0EFE  3EA0               	addlw	(low (_visible| 0))& (0+255)
  4616  0EFF  0084               	movwf	4
  4617  0F00  1383               	bcf	3,7	;select IRP bank1
  4618  0F01  0800               	movf	0,w
  4619  0F02  00F3               	movwf	??_get_current_char
  4620  0F03  0873               	movf	??_get_current_char,w
  4621  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  4623  0F06  00DB               	movwf	_current_char
  4624  0F07                     l280:	
  4625  0F07  0008               	return
  4626  0F08                     __end_of_get_current_char:	
  4627                           
  4628                           	psect	text26
  4629  0EE0                     __ptext26:	
  4630 ;; *************** function _get_cursor_index *****************
  4631 ;; Defined at:
  4632 ;;		line 181 in file "concentration.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  cursor          1    wreg     unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  cursor          1    2[COMMON] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      unsigned char 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4646 ;;      Params:         0       0       0       0       0
  4647 ;;      Locals:         1       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0
  4649 ;;      Totals:         1       0       0       0       0
  4650 ;;Total ram usage:        1 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_check_for_match
  4657 ;;		_update_gameboard_from_input
  4658 ;;		_get_current_char
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function _get_cursor_index
  4664  0EE0                     _get_cursor_index:	
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  4668                           ;get_cursor_index@cursor stored from wreg
  4669  0EE0  00F2               	movwf	get_cursor_index@cursor
  4670  0EE1                     l1565:	
  4671                           
  4672                           ;concentration.c: 182:     if(cursor&0x40) {
  4673  0EE1  1F72               	btfss	get_cursor_index@cursor,6
  4674  0EE2  2EE4               	goto	u701
  4675  0EE3  2EE5               	goto	u700
  4676  0EE4                     u701:	
  4677  0EE4  2EE8               	goto	l1571
  4678  0EE5                     u700:	
  4679  0EE5                     l1567:	
  4680                           
  4681                           ;concentration.c: 183:         return (cursor-0x30);
  4682  0EE5  0872               	movf	get_cursor_index@cursor,w
  4683  0EE6  3ED0               	addlw	208
  4684  0EE7  2EE9               	goto	l206
  4685  0EE8                     l1571:	
  4686                           
  4687                           ;concentration.c: 185:     return cursor;
  4688  0EE8  0872               	movf	get_cursor_index@cursor,w
  4689  0EE9                     l206:	
  4690  0EE9  0008               	return
  4691  0EEA                     __end_of_get_cursor_index:	
  4692                           
  4693                           	psect	text27
  4694  0FCD                     __ptext27:	
  4695 ;; *************** function _interrupt_handler *****************
  4696 ;; Defined at:
  4697 ;;		line 372 in file "concentration.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4711 ;;      Params:         0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0
  4713 ;;      Temps:          2       0       0       0       0
  4714 ;;      Totals:         2       0       0       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		Interrupt level 1
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function _interrupt_handler
  4726  0FCD                     _interrupt_handler:	
  4727  0FCD                     i1l1977:	
  4728                           
  4729                           ;concentration.c: 373:     if(ADIF) {
  4730  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  4731  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  4732  0FCF  1F0C               	btfss	12,6	;volatile
  4733  0FD0  2FD2               	goto	u125_21
  4734  0FD1  2FD3               	goto	u125_20
  4735  0FD2                     u125_21:	
  4736  0FD2  2FEB               	goto	i1l1991
  4737  0FD3                     u125_20:	
  4738  0FD3                     i1l1979:	
  4739                           
  4740                           ;concentration.c: 374:         if(CHS1 == 1) {
  4741  0FD3  1D9F               	btfss	31,3	;volatile
  4742  0FD4  2FD6               	goto	u126_21
  4743  0FD5  2FD7               	goto	u126_20
  4744  0FD6                     u126_21:	
  4745  0FD6  2FE1               	goto	i1l1985
  4746  0FD7                     u126_20:	
  4747  0FD7                     i1l1981:	
  4748                           
  4749                           ;concentration.c: 375:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  4750  0FD7  081E               	movf	30,w	;volatile
  4751  0FD8  00D2               	movwf	_joystick_x_pos+1
  4752  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  4753  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  4754  0FDB  081E               	movf	30,w	;volatile
  4755  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0FDE  00D1               	movwf	_joystick_x_pos
  4758  0FDF                     i1l1983:	
  4759                           
  4760                           ;concentration.c: 376:             CHS1 = 0;
  4761  0FDF  119F               	bcf	31,3	;volatile
  4762                           
  4763                           ;concentration.c: 377:         } else {
  4764  0FE0  2FEA               	goto	i1l1989
  4765  0FE1                     i1l1985:	
  4766                           
  4767                           ;concentration.c: 378:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  4768  0FE1  081E               	movf	30,w	;volatile
  4769  0FE2  00D0               	movwf	_joystick_y_pos+1
  4770  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  4771  0FE4  1303               	bcf	3,6	;RP1=0, select bank1
  4772  0FE5  081E               	movf	30,w	;volatile
  4773  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0FE8  00CF               	movwf	_joystick_y_pos
  4776  0FE9                     i1l1987:	
  4777                           
  4778                           ;concentration.c: 379:             CHS1 = 1;
  4779  0FE9  159F               	bsf	31,3	;volatile
  4780  0FEA                     i1l1989:	
  4781                           
  4782                           ;concentration.c: 381:         ADIF = 0;
  4783  0FEA  130C               	bcf	12,6	;volatile
  4784  0FEB                     i1l1991:	
  4785                           
  4786                           ;concentration.c: 383:     if(TMR2IF) {
  4787  0FEB  1C8C               	btfss	12,1	;volatile
  4788  0FEC  2FEE               	goto	u127_21
  4789  0FED  2FEF               	goto	u127_20
  4790  0FEE                     u127_21:	
  4791  0FEE  2FF9               	goto	i1l296
  4792  0FEF                     u127_20:	
  4793  0FEF                     i1l1993:	
  4794                           
  4795                           ;concentration.c: 384:         cursor_move_delay_count--;
  4796  0FEF  3001               	movlw	1
  4797  0FF0  02D8               	subwf	_cursor_move_delay_count,f
  4798                           
  4799                           ;concentration.c: 385:         if(cursor_move_delay_count == 0) {
  4800  0FF1  0858               	movf	_cursor_move_delay_count,w
  4801  0FF2  1D03               	btfss	3,2
  4802  0FF3  2FF5               	goto	u128_21
  4803  0FF4  2FF6               	goto	u128_20
  4804  0FF5                     u128_21:	
  4805  0FF5  2FF8               	goto	i1l295
  4806  0FF6                     u128_20:	
  4807  0FF6                     i1l1995:	
  4808                           
  4809                           ;concentration.c: 386:             cursor_movable = 1;
  4810  0FF6  01D7               	clrf	_cursor_movable
  4811  0FF7  0AD7               	incf	_cursor_movable,f
  4812  0FF8                     i1l295:	
  4813                           ;concentration.c: 387:         }
  4814                           
  4815                           
  4816                           ;concentration.c: 388:         TMR2IF = 0;
  4817  0FF8  108C               	bcf	12,1	;volatile
  4818  0FF9                     i1l296:	
  4819  0FF9  0871               	movf	??_interrupt_handler+1,w
  4820  0FFA  008A               	movwf	10
  4821  0FFB  0E70               	swapf	??_interrupt_handler^(0+4294967168),w
  4822  0FFC  0083               	movwf	3
  4823  0FFD  0EFE               	swapf	btemp,f
  4824  0FFE  0E7E               	swapf	btemp,w
  4825  0FFF  0009               	retfie
  4826  1000                     __end_of_interrupt_handler:	
  4827  007E                     btemp	set	126	;btemp
  4828  007E                     wtemp0	set	126
  4829                           
  4830                           	psect	intentry
  4831  0004                     __pintentry:	
  4832                           ;incstack = 0
  4833                           ; Regs used in _interrupt_handler: [wreg+status,2+status,0]
  4834                           
  4835  0004                     interrupt_function:	
  4836  007E                     saved_w	set	btemp
  4837  0004  00FE               	movwf	btemp
  4838  0005  0E03               	swapf	3,w
  4839  0006  00F0               	movwf	??_interrupt_handler
  4840  0007  080A               	movf	10,w
  4841  0008  00F1               	movwf	??_interrupt_handler+1
  4842  0009  120A  158A  2FCD   	ljmp	_interrupt_handler


Data Sizes:
    Strings     71
    Constant    64
    Data        5
    BSS         112
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     47      66
    BANK1            80      0      64
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    lcd_set_custom_char@data	PTR const unsigned char  size(1) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[17]), STR_1(CODE[16]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    _display_scoreboard->___awdiv
    _lcd_puts->_lcd_write
    _lcd_putch->___awdiv
    _lcd_putch->_lcd_write
    _lcd_init->_lcd_write
    _randomize_gameboard->___awdiv
    ___awdiv->___awmod
    _lcd_set_custom_char->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us
    _get_current_char->_get_cursor_index

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_gameboard_init
    _update_gameboard_from_input->_check_for_match
    _update_gameboard_from_input->_update_cursor
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_gameboard
    _check_for_match->_display_scoreboard
    _startup->_display_gameboard
    _startup->_display_scoreboard
    _display_scoreboard->_lcd_putch
    _display_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_init->_lcd_clear
    _gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    _make_custom_chars->_lcd_set_custom_char

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   99033
                     _gameboard_init
                      _joystick_init
                           _lcd_init
                            _startup
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0   47188
                                             16 BANK0      2     2      0
                            _DelayMs
                    _check_for_match
                  _display_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    7309
                                             12 BANK0      4     3      1
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    6641
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      2     2      0   22300
                                             14 BANK0      2     2      0
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0   32294
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _display_scoreboard                                   2     2      0   11331
                                             12 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (4) _lcd_puts                                             4     2      2    3030
                                              0 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     904
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _display_gameboard                                    2     2      0   10241
                                             12 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    3050
                                              8 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    6614
                                              2 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       2     2      0   12937
                                             45 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    1548
                                              8 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     756
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    4163
                                              7 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  7     4      3    4163
                                              0 BANK0      7     4      3
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    3591
                                              0 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            2     0      2    3470
                                              0 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    2178
                                              4 COMMON     6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     631
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0      66
                                              3 COMMON     1     1      0
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (4) _get_cursor_index                                     1     1      0      66
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gameboard_init
     _get_current_char
       _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
     _time_init
   _joystick_init
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _startup
     _DelayMs
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_scoreboard
       ___awdiv
         ___awmod (ARG)
       ___awmod
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _update_gameboard_from_input
     _DelayMs
     _check_for_match
       _DelayMs
       _display_gameboard
         _lcd_clear
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _display_scoreboard
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_current_char
         _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2F      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AE      12        0.0%
ABS                  0      0      AE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 17:03:36 2020

                    _joystick_pressed 0054                                     pc 0002  
 __end_of_update_gameboard_from_input 018C           _update_gameboard_from_input 004D  
                         __CFG_CP$OFF 0000                         _update_cursor 0253  
                                  _GO 00F9                          ___awdiv@sign 0025  
                                  fsr 0004                                   l202 05D2  
                                 l206 0EE9                                   l310 0F20  
                                 l230 00B4                                   l215 0631  
                                 l224 0509                                   l305 0ED7  
                                 l314 0F30                                   l322 0777  
                                 l250 0189                                   l234 00CB  
                                 l331 0F9E                                   l163 03D3  
                                 l227 0054                                   l340 06DC  
                                 l172 0252                                   l228 00AE  
                                 l325 02FD                                   l253 018B  
                                 l334 0F19                                   l166 03E2  
                                 l319 0EF5                                   l280 0F07  
                                 l272 02E5                                   l337 0F4C  
                                 l345 072E                                   l177 0796  
                                 l169 0415                                   l178 07BC  
                                 l283 07FE                                   l197 0491  
                                 l277 0FCC                                   l286 0F73  
                                 l584 0572                                   l597 068A  
                                 _GIE 005F                                   _RB5 0035  
                                 _PR2 0092                          __CFG_CPD$OFF 0000  
                                 u700 0EE5                                   u701 0EE4  
                                 u710 0511                                   u711 0510  
                                 u800 0569                                   u720 051C  
                                 u801 0568                                   u721 051B  
                                 u730 052D                                   u810 0637  
                                 u731 052C                                   u811 0636  
                                 u660 0F24                                   u820 0642  
                                 u661 0F23                                   u821 0641  
                                 _SCS 0478                                   u670 0F30  
                                 u750 053F                                   u830 064D  
                                 u671 0F2F                                   u751 053E  
                                 u831 064C                                   u745 0531  
                                 u770 0550                                   u850 065F  
                                 u771 054F                                   u851 065E  
                                 u940 05D7                                   u860 0669  
                                 u765 0540                                   u861 0668  
                                 u845 0651                                   u790 0564  
                                 u791 0563                                   u775 054C  
                                 u960 0608                                   u880 067C  
                                 u785 0558                                   u961 0607  
                                 u881 067B                                   u865 0665  
                                 u970 0631                                   u954 05E9  
                                 u890 0681                                   u971 0630  
                                 u955 05E7                                   u891 0680  
                                 u875 0670                                   fsr0 0004  
                                 indf 0000                          ___awmod@sign 0078  
                        __CFG_FOSC$HS 0000                          __CFG_LVP$OFF 0000  
                      ?_toggle_cursor 0070                         lcd_clear@port 0020  
                                l2111 07AC                                  l2121 06E1  
                                l1225 0ED0                                  l2113 07B2  
                                l2105 0786                                  l2201 02CF  
                                l2123 0710                                  l2115 06E0  
                                l2131 0416                                  l1227 0ED6  
                                l2107 078C                                  l2125 0716  
                                l2221 06A1                                  l2109 07A6  
                                l2141 04C2                                  l2133 0495  
                                l2301 0077                                  l2063 0EEB  
                                l2071 0748                                  l2127 071A  
                                l2231 0579                                  l2223 06B1  
                                l2215 068B                                  l2151 04DF  
                                l2143 04C7                                  l2135 049A  
                                l2311 00C9                                  l2303 00B2  
                                l2065 0EEF                                  l2057 0EEA  
                                l2073 0757                                  l2129 0720  
                                l1601 053F                                  l2241 0586  
                                l2233 057E                                  l2225 06C1  
                                l2217 0690                                  l2081 0F77  
                                l2153 04F0                                  l2145 04CB  
                                l2137 049F                                  l2161 0FA6  
                                l2321 00F9                                  l2313 00D9  
                                l2305 00BA                                  l1531 0F1F  
                                l2075 0763                                  l2067 0730  
                                l2091 0F43                                  l1603 0550  
                                l1611 0564                                  l2251 05A4  
                                l2243 058E                                  l2235 0583  
                                l2227 06CC                                  l2219 0698  
                                l2083 0F78                                  l2155 04FF  
                                l2139 04BD                                  l2147 04D1  
                                l2163 0FB0                                  l2171 0256  
                                l2331 0130                                  l2323 0108  
                                l2307 00BF                                  l2315 00DA  
                                l1533 0F24                                  l2069 0743  
                                l2077 02E6                                  l1613 0569  
                                l1605 0556                                  l1701 05DC  
                                l2261 05BF                                  l2253 05AA  
                                l2245 0592                                  l2229 0573  
                                l2093 0F0B                                  l1621 0633  
                                l2085 0F8C                                  l2149 04D6  
                                l2157 0503                                  l2165 0FB5  
                                l2181 026B                                  l2173 0257  
                                l2341 0167                                  l2333 013B  
                                l2325 010F                                  l2317 00E7  
                                l2309 00C3                                  l1535 0F2A  
                                l1527 0F1A                                  l2079 02F4  
                                l1615 056E                                  l1607 0557  
                                l1711 060D                                  l1703 05E0  
                                l2263 05C3                                  l2255 05AD  
                                l2247 0598                                  l1631 0647  
                                l1623 0637                                  l2087 0F92  
                                l2095 018C                                  l2271 038D  
                                l2167 0FBF                                  l2159 0F9F  
                                l2431 02A2                                  l2191 028A  
                                l2183 026E                                  l2175 025C  
                                l2343 016C                                  l2335 014A  
                                l2327 011A                                  l2319 00EE  
                                l2351 07BD                                  l1529 0F1B  
                                l2089 0F34                                  l1609 055E  
                                l1713 0627                                  l1705 05F8  
                                l2265 05C6                                  l2257 05AF  
                                l2249 05A1                                  l2097 0778  
                                l1641 065F                                  l1633 064D  
                                l1625 063C                                  l2281 0407  
                                l2273 03D9                                  l2169 0FC2  
                                l2185 027E                                  l2177 0261  
                                l2345 0175                                  l2337 0151  
                                l2329 0129                                  l2361 07E0  
                                l2353 07C0                                  l1571 0EE8  
                                l1707 05FF                                  l1715 062B  
                                l2267 05C9                                  l2259 05B9  
                                l2099 0783                                  l1651 0681  
                                l1643 0669                                  l1635 0650  
                                l1627 063E                                  l1619 0632  
                                l2283 0408                                  l2275 03E8  
                                l2187 0280                                  l2427 0276  
                                l2179 0266                                  l2195 029A  
                                l2347 017B                                  l2339 015C  
                                l2291 0053                                  l2363 07E5  
                                l2355 07C5                                  l1565 0EE1  
                                l1581 0516                                  l1709 0608  
                                l2269 05CD                                  l1821 0F5D  
                                l1813 0F4D                                  l1653 0686  
                                l1645 066F                                  l1637 0657  
                                l1629 0642                                  l2285 040B  
                                l2277 03F1                                  l2429 0292  
                                l2189 0285                                  l2197 02AD  
                                l2349 0180                                  l2293 0058  
                                l2365 07EA                                  l2357 07D0  
                                l1567 0EE5                                  l1591 0527  
                                l1583 0518                                  l1575 050A  
                                l1831 0F68                                  l1823 0F5F  
                                l1815 0F57                                  l1647 0676  
                                l1639 065B                                  l2287 0410  
                                l2279 03FC                                  l2199 02C8  
                                l2295 005D                                  l2359 07DB  
                                l1593 052D                                  l1585 051C  
                                l1577 050D                                  l1833 0F6B  
                                l1825 0F63                                  l1817 0F58  
                                l1649 067C                                  l2297 0066  
                                l2289 004D                                  l1595 0530  
                                l1587 0521                                  l1579 0511  
                                l1835 0F6D                                  l1827 0F64  
                                l1819 0F5B                                  l2299 0069  
                                l1693 0EF6                                  l1597 0537  
                                l1589 0525                                  l1837 0F71  
                                l1829 0F65                                  l1599 053B  
                                l1697 07F3                                  l1699 05D3  
                                _ADIE 0466                                  _ADIF 0066  
                                _CHS1 00FB                                  STR_1 0357  
                                STR_2 0346                                  STR_3 0367  
                                STR_4 0374                                  STR_5 0387  
                                STR_6 0380                                  _T0IF 005A  
                                u1310 0F9E                                  u1311 0F9D  
                                u1320 078C                                  u1400 02CF  
                                u1305 0733                                  u1321 078B  
                                u1401 02CE                                  u1410 0598  
                                u1330 07B2                                  u1411 0597  
                                u1331 07B1                                  u1420 03D9  
                                u1500 00BF                                  u1421 03D8  
                                u1501 00BE                                  u1350 0720  
                                u1430 03E8                                  u1510 00E7  
                                u1351 071F                                  u1431 03E7  
                                u1511 00E6                                  u1360 049A  
                                u1600 016C                                  u1520 00EE  
                                u1440 0053                                  u1345 06E4  
                                u1361 0499                                  u1601 016B  
                                u1521 00ED                                  u1441 0052  
                                u1290 0EF5                                  u1370 04BD  
                                u1610 017B                                  u1530 0108  
                                u1450 0058                                  u1291 0EF4  
                                u1371 04BC                                  u1611 017A  
                                u1531 0107                                  u1515 00E3  
                                u1451 0057                                  u1380 04C2  
                                u1620 0180                                  u1540 010F  
                                u1460 005D                                  u1381 04C1  
                                u1621 017F                                  u1541 010E  
                                u1461 005C                                  u1390 0FA6  
                                u1550 0129                                  u1470 0077  
                                u1391 0FA5                                  u1551 0128  
                                u1535 0104                                  u1471 0076  
                                u1560 0130                                  u1480 00B2  
                                u1561 012F                                  u1481 00B1  
                                u1570 014A                                  u1490 00BA  
                                u1571 0149                                  u1555 0125  
                                u1491 00B9                                  u1580 0151  
                                u1581 0150                                  u1590 0167  
                                u1591 0166                                  u1575 0146  
                                _PEIE 005E                                  _TMR0 0001  
                                _TMR1 000E                                  _TMR2 0011  
                                _WPUB 0095                 make_custom_chars@club 031E  
                        __CFG_WRT$OFF 0000                                  _main 07BD  
                                btemp 007E                       _check_for_match 0492  
                        lcd_init@port 0022                                  start 000C  
                        lcd_goto@port 0020                         __CFG_IESO$OFF 0000  
                     __end_of_DelayMs 0F31                         __CFG_MCLRE$ON 0000  
                      ?_update_cursor 002C                                 ?_main 0070  
                     __end_of___awdiv 0573                                 _CCPR1 0015  
                       __CFG_WDTE$OFF 0000                       __end_of___awmod 068B  
                               _ANSEL 0188                       ___awdiv@divisor 0020  
                               _T2CON 0012                                 i1l295 0FF8  
                               i1l296 0FF9                       ___awdiv@counter 0024  
        __size_of_randomize_gameboard 005F                                 _PORTA 0005  
                               _PORTB 0006                                 _PORTD 0008  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISD 0088                make_custom_chars@heart 032E  
              make_custom_chars@spade 0326                        __CFG_FCMEN$OFF 0000  
              make_custom_chars@smile 033E                make_custom_chars@skull 0316  
                               _nRBPU 040F                                 _board 00C0  
                        lcd_puts@port 0020                        __CFG_BOREN$OFF 0000  
                               pclath 000A                                 status 0003  
                     __end_of_startup 0416                                 wtemp0 007E  
                       DelayMs@millis 0072                       __initialization 000F  
                        __end_of_main 07F3                    __size_of_Delay20us 000C  
                              ??_main 007A                       ??_toggle_cursor 007A  
                              _ADCON0 001F                                _ADCON1 009F  
                              _CCP1M0 00B8                                _CCP1M1 00B9  
                              _CCP1M2 00BA                                _CCP1M3 00BB  
                              _CCP1IF 0062               __end_of_check_for_match 050A  
                              _ADRESH 001E                                _ADRESL 009E  
                    ___awdiv@dividend 0022           __end_ofmake_custom_chars@RH 0316  
                              _ANSELH 0189                update_cursor@direction 002C  
             __size_of_gameboard_init 0060                                i1l1981 0FD7  
                              i1l1983 0FDF                                i1l1991 0FEB  
                              i1l1993 0FEF                                i1l1985 0FE1  
                              i1l1977 0FCD                                i1l1995 0FF6  
                              i1l1987 0FE9                                i1l1979 0FD3  
                              i1l1989 0FEA                                u125_20 0FD3  
                              u125_21 0FD2                                u126_20 0FD7  
                              u126_21 0FD6                                u127_20 0FEF  
                              u127_21 0FEE                                u128_20 0FF6  
                              u128_21 0FF5                             ??_DelayMs 0074  
                              _TMR1GE 0086                                _TMR1CS 0081  
                              _TMR2IE 0461                                _TMR2IF 0061  
                              _TMR1ON 0080            __end_of_display_scoreboard 0253  
                 _lcd_set_custom_char 06DD                        __CFG_PWRTE$OFF 0000  
                     ??_update_cursor 002D                      __end_of_lcd_init 06DD  
                    __end_of_lcd_goto 0F4D                      __end_of_lcd_puts 0F9F  
                           ??___awdiv 0079                             ??___awmod 0076  
                              _id_num 0053                      ___awdiv@quotient 0026  
                     ___awmod@divisor 0072                         lcd_putch@port 0028  
                     ___awmod@counter 0077                  ?_lcd_set_custom_char 0020  
                              saved_w 007E             __size_of_get_current_char 0012  
                           ??_startup 007A                     __end_of_Delay20us 0EF6  
       update_cursor@move_delay_count 002F               __end_of__initialization 0049  
           __size_of_get_cursor_index 000A                         lcd_write@mode 0079  
                       lcd_write@port 0075                        __pcstackCOMMON 0070  
                        __pidataBANK0 0ECB                 check_for_match@player 002F  
               __end_of_joystick_init 0F74                 ??_lcd_set_custom_char 0023  
                  __size_of_lcd_clear 0018                    __size_of_lcd_putch 0012  
                  __size_of_lcd_write 0049                      ?_check_for_match 0070  
                          __pbssBANK0 004F                            __pbssBANK1 00A0  
                          __pbssBANK3 0190               _cursor_move_delay_count 0058  
                 _randomize_gameboard 05D3                            __pmaintext 07BD  
                          __pintentry 0004                    __size_of_tmr0_init 0008  
        __end_ofmake_custom_chars@PIC 030E                               _T1CKPS0 0084  
                             _T1CKPS1 0085                  ?_randomize_gameboard 0070  
                  __size_of_time_init 000C                    display_gameboard@i 002D  
                           ?_lcd_init 0022                             ?_lcd_goto 0020  
                           ?_lcd_puts 0020                            __stringtab 0300  
                      _gameboard_init 0573                lcd_set_custom_char@row 0025  
            make_custom_chars@diamond 0336                               _DelayMs 0F1A  
          randomize_gameboard@current 004B                     __end_of_lcd_clear 02FE  
           randomize_gameboard@random 004C                     __end_of_lcd_putch 0F1A  
                             ___awdiv 050A                               ___awmod 0632  
                   __end_of_lcd_write 0778        __end_ofmake_custom_chars@heart 0336  
      __end_ofmake_custom_chars@spade 032E        __end_ofmake_custom_chars@smile 0346  
      __end_ofmake_custom_chars@skull 031E                               __ptext1 004D  
                             __ptext2 0253                               __ptext3 0F9F  
                             __ptext4 0492                               __ptext5 038D  
                             __ptext6 018C                               __ptext7 0F74  
                             __ptext8 0632                               __ptext9 0778  
                          _cursor_pos 005C                 ??_randomize_gameboard 0028  
                    ___awmod@dividend 0074                      _get_current_char 0EF6  
                             _my_turn 0061                __end_of_gameboard_init 05D3  
              get_cursor_index@cursor 0072                               _visible 00A0  
                       _received_char 0056                               _startup 038D  
                             clrloop0 0ED9                            ??_lcd_init 0024  
                          ??_lcd_goto 0022                            ??_lcd_puts 0022  
                end_of_initialization 0049                     __end_of_tmr0_init 0ED8  
                      lcd_puts@string 0023                      _get_cursor_index 0EE0  
                   __end_of_time_init 07FF                            _scoreboard 005D  
                  _display_scoreboard 018C         lcd_set_custom_char@cg_address 0020  
                      _joystick_x_pos 0051                        _joystick_y_pos 004F  
                 ?_display_scoreboard 0070                       ?_gameboard_init 0070  
               __end_of_toggle_cursor 0FCD                             _Delay20us 0EEA  
                make_custom_chars@PIC 0306                  ??_display_scoreboard 002C  
               __end_of_update_cursor 02E6          ?_update_gameboard_from_input 0070  
                 start_initialization 000F                            ?_Delay20us 0070  
                     gameboard_init@i 004E           __end_of_lcd_set_custom_char 072F  
                         __pdataBANK0 005D         ??_update_gameboard_from_input 0030  
                         __pbssCOMMON 007A                             ___latbits 0002  
                       __pcstackBANK0 0020                         _selected_tile 007A  
                            ?_DelayMs 0072                __size_of_joystick_init 0027  
                   __size_of_lcd_init 0052                     __size_of_lcd_goto 001C  
                   __size_of_lcd_puts 002B                          _current_char 005B  
            __size_of_check_for_match 0078                           _delay_loops 0059  
            __end_of_get_current_char 0F08                             _gameboard 005F  
                            ?___awdiv 0020                              ?___awmod 0072  
                   _display_gameboard 0778                             _lcd_clear 02E6  
                        _cursor_solid 005A                             __pstrings 0300  
                           _lcd_putch 0F08                    ?_display_gameboard 0070  
                           _lcd_write 072F              __end_of_get_cursor_index 0EEA  
                   _interrupt_handler 0FCD                    ?_interrupt_handler 0070  
                 ??_display_gameboard 002C         __end_ofmake_custom_chars@club 0326  
                            ?_startup 0070  __size_of_update_gameboard_from_input 013F  
                 ??_interrupt_handler 0070                     interrupt_function 0004  
                      _cursor_movable 0057                           ??_Delay20us 0072  
                           clear_ram0 0ED8                             _tmr0_init 0ED0  
           __end_of_display_gameboard 07BD                             _time_init 07F3  
         __end_of_randomize_gameboard 0632                            ?_lcd_clear 0020  
           __end_of_interrupt_handler 1000                         _joystick_init 0F4D  
                          ?_lcd_putch 0028               lcd_set_custom_char@data 0026  
                         __stringbase 0305                            ?_lcd_write 0074  
                    ??_gameboard_init 004D               lcd_set_custom_char@port 0021  
                 make_custom_chars@RH 030E                      __size_of_DelayMs 0017  
                          ?_tmr0_init 0070                              _p1_score 007B  
                            _p2_score 0055                            ?_time_init 0070  
                   _make_custom_chars 0416                      __size_of___awdiv 0069  
                   ??_check_for_match 002E                      __size_of___awmod 0059  
                      ?_joystick_init 0070                    ?_make_custom_chars 0070  
                  __end_of__stringtab 0306      __end_ofmake_custom_chars@diamond 033E  
                 ??_make_custom_chars 0027                              __ptext10 0F08  
                            __ptext11 068B                              __ptext20 0F31  
                            __ptext12 0ED0                              __ptext21 02E6  
                            __ptext13 0F4D                              __ptext22 072F  
                            __ptext14 0573                              __ptext23 0EEA  
                            __ptext15 07F3                              __ptext24 0F1A  
                            __ptext16 05D3                              __ptext25 0EF6  
                            __ptext17 050A                              __ptext26 0EE0  
                            __ptext18 0416                              __ptext27 0FCD  
                            __ptext19 06DD                     __CFG_BOR4V$BOR21V 0000  
                            _lcd_init 068B                              _lcd_goto 0F31  
                            _lcd_puts 0F74                      __size_of_startup 0089  
                       __size_of_main 0036                    lcd_putch@character 002B  
           __end_of_make_custom_chars 0492           __size_of_display_scoreboard 00C7  
          __size_of_display_gameboard 0045                __size_of_toggle_cursor 002E  
                         ??_lcd_clear 007A            __size_of_interrupt_handler 0033  
            randomize_gameboard@F1346 0190                           ??_lcd_putch 002A  
                         ??_lcd_write 0077                              intlevel1 0000  
              __size_of_update_cursor 0093                         Delay20us@next 0073  
                         ??_tmr0_init 0072                             stringcode 0300  
                   ?_get_current_char 0070                       ??_joystick_init 0072  
                         ??_time_init 0072                    ??_get_current_char 0073  
             randomize_gameboard@used 002B                            _OPTION_REG 0081  
                    lcd_goto@position 0023                     ?_get_cursor_index 0070  
        __size_of_lcd_set_custom_char 0052                              stringdir 0300  
                            stringtab 0300                    ??_get_cursor_index 0072  
                       _toggle_cursor 0F9F                      lcd_write@CmdChar 0074  
          __size_of_make_custom_chars 007C  
