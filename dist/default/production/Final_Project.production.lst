

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 10:18:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312                           
   313                           	psect	idataCOMMON
   314  07FE                     __pidataCOMMON:	
   315                           
   316                           ;initializer for _gameboard
   317  07FE  3405               	retlw	5
   318  07FF  3400               	retlw	0
   319                           
   320                           	psect	idataBANK0
   321  0FEB                     __pidataBANK0:	
   322                           
   323                           ;initializer for _scoreboard
   324  0FEB  3408               	retlw	8
   325  0FEC  3400               	retlw	0
   326                           
   327                           	psect	strings
   328  0343                     __pstrings:	
   329  0343                     stringtab:	
   330  0343                     __stringtab:	
   331  0343                     stringcode:	
   332                           ;	String table - string pointers are 1 byte each
   333                           
   334  0343                     stringdir:	
   335  0343  3003               	movlw	high stringdir
   336  0344  008A               	movwf	10
   337  0345  0804               	movf	4,w
   338  0346  0A84               	incf	4,f
   339  0347  0782               	addwf	2,f
   340  0348                     __stringbase:	
   341  0348  3400               	retlw	0
   342  0349                     __end_of__stringtab:	
   343  0349                     make_custom_chars@PIC:	
   344  0349  3418               	retlw	24
   345  034A  3418               	retlw	24
   346  034B  3414               	retlw	20
   347  034C  3404               	retlw	4
   348  034D  3404               	retlw	4
   349  034E  3403               	retlw	3
   350  034F  3402               	retlw	2
   351  0350  3403               	retlw	3
   352  0351                     __end_ofmake_custom_chars@PIC:	
   353  0351                     make_custom_chars@RH:	
   354  0351  341C               	retlw	28
   355  0352  3414               	retlw	20
   356  0353  3418               	retlw	24
   357  0354  3414               	retlw	20
   358  0355  3400               	retlw	0
   359  0356  3405               	retlw	5
   360  0357  3407               	retlw	7
   361  0358  3405               	retlw	5
   362  0359                     __end_ofmake_custom_chars@RH:	
   363  0359                     make_custom_chars@skull:	
   364  0359  340E               	retlw	14
   365  035A  3415               	retlw	21
   366  035B  3415               	retlw	21
   367  035C  341F               	retlw	31
   368  035D  340A               	retlw	10
   369  035E  340E               	retlw	14
   370  035F  340E               	retlw	14
   371  0360  3400               	retlw	0
   372  0361                     __end_ofmake_custom_chars@skull:	
   373  0361                     make_custom_chars@club:	
   374  0361  3400               	retlw	0
   375  0362  340E               	retlw	14
   376  0363  340E               	retlw	14
   377  0364  341F               	retlw	31
   378  0365  341F               	retlw	31
   379  0366  341F               	retlw	31
   380  0367  3404               	retlw	4
   381  0368  340E               	retlw	14
   382  0369                     __end_ofmake_custom_chars@club:	
   383  0369                     make_custom_chars@spade:	
   384  0369  3400               	retlw	0
   385  036A  3404               	retlw	4
   386  036B  340E               	retlw	14
   387  036C  341F               	retlw	31
   388  036D  341F               	retlw	31
   389  036E  340E               	retlw	14
   390  036F  3404               	retlw	4
   391  0370  340E               	retlw	14
   392  0371                     __end_ofmake_custom_chars@spade:	
   393  0371                     make_custom_chars@heart:	
   394  0371  3400               	retlw	0
   395  0372  3400               	retlw	0
   396  0373  340A               	retlw	10
   397  0374  341F               	retlw	31
   398  0375  341F               	retlw	31
   399  0376  340E               	retlw	14
   400  0377  3404               	retlw	4
   401  0378  3400               	retlw	0
   402  0379                     __end_ofmake_custom_chars@heart:	
   403  0379                     make_custom_chars@diamond:	
   404  0379  3400               	retlw	0
   405  037A  3404               	retlw	4
   406  037B  340E               	retlw	14
   407  037C  341F               	retlw	31
   408  037D  340E               	retlw	14
   409  037E  3404               	retlw	4
   410  037F  3400               	retlw	0
   411  0380  3400               	retlw	0
   412  0381                     __end_ofmake_custom_chars@diamond:	
   413  0381                     make_custom_chars@smile:	
   414  0381  3400               	retlw	0
   415  0382  340A               	retlw	10
   416  0383  340A               	retlw	10
   417  0384  3400               	retlw	0
   418  0385  3415               	retlw	21
   419  0386  3411               	retlw	17
   420  0387  340E               	retlw	14
   421  0388  3400               	retlw	0
   422  0389                     __end_ofmake_custom_chars@smile:	
   423  0015                     _CCPR1	set	21
   424  000E                     _TMR1	set	14
   425  0001                     _TMR0	set	1
   426  001A                     _RCREG	set	26
   427  001E                     _ADRESH	set	30
   428  001F                     _ADCON0	set	31
   429  0006                     _PORTB	set	6
   430  0011                     _TMR2	set	17
   431  0012                     _T2CON	set	18
   432  0008                     _PORTD	set	8
   433  0005                     _PORTA	set	5
   434  005A                     _T0IF	set	90
   435  0065                     _RCIF	set	101
   436  00FB                     _CHS1	set	251
   437  0066                     _ADIF	set	102
   438  005E                     _PEIE	set	94
   439  005F                     _GIE	set	95
   440  0080                     _TMR1ON	set	128
   441  0086                     _TMR1GE	set	134
   442  0085                     _T1CKPS1	set	133
   443  0084                     _T1CKPS0	set	132
   444  0081                     _TMR1CS	set	129
   445  00B8                     _CCP1M0	set	184
   446  00B9                     _CCP1M1	set	185
   447  00BA                     _CCP1M2	set	186
   448  00BB                     _CCP1M3	set	187
   449  0032                     _RB2	set	50
   450  0031                     _RB1	set	49
   451  0062                     _CCP1IF	set	98
   452  00F9                     _GO	set	249
   453  0061                     _TMR2IF	set	97
   454  0035                     _RB5	set	53
   455  00C7                     _SPEN	set	199
   456  00C6                     _RX9	set	198
   457  00C4                     _CREN	set	196
   458  0081                     _OPTION_REG	set	129
   459  009E                     _ADRESL	set	158
   460  009F                     _ADCON1	set	159
   461  0086                     _TRISB	set	134
   462  0095                     _WPUB	set	149
   463  0092                     _PR2	set	146
   464  0099                     _SPBRG	set	153
   465  0087                     _TRISC	set	135
   466  0085                     _TRISA	set	133
   467  0088                     _TRISD	set	136
   468  0466                     _ADIE	set	1126
   469  040F                     _nRBPU	set	1039
   470  0461                     _TMR2IE	set	1121
   471  04C2                     _BRGH	set	1218
   472  04C4                     _SYNC	set	1220
   473  0465                     _RCIE	set	1125
   474  04C6                     _TX9	set	1222
   475  04C5                     _TXEN	set	1221
   476  0478                     _SCS	set	1144
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479  0C3B                     _BRG16	set	3131
   480  0389                     STR_2:	
   481  0389  3450               	retlw	80	;'P'
   482  038A  3472               	retlw	114	;'r'
   483  038B  3465               	retlw	101	;'e'
   484  038C  3473               	retlw	115	;'s'
   485  038D  3473               	retlw	115	;'s'
   486  038E  3420               	retlw	32	;' '
   487  038F  3474               	retlw	116	;'t'
   488  0390  3468               	retlw	104	;'h'
   489  0391  3465               	retlw	101	;'e'
   490  0392  3420               	retlw	32	;' '
   491  0393  3462               	retlw	98	;'b'
   492  0394  3475               	retlw	117	;'u'
   493  0395  3474               	retlw	116	;'t'
   494  0396  3474               	retlw	116	;'t'
   495  0397  346F               	retlw	111	;'o'
   496  0398  346E               	retlw	110	;'n'
   497  0399  3400               	retlw	0
   498  039A                     STR_1:	
   499  039A  3420               	retlw	32	;' '
   500  039B  3443               	retlw	67	;'C'
   501  039C  346F               	retlw	111	;'o'
   502  039D  346E               	retlw	110	;'n'
   503  039E  3463               	retlw	99	;'c'
   504  039F  3465               	retlw	101	;'e'
   505  03A0  346E               	retlw	110	;'n'
   506  03A1  3474               	retlw	116	;'t'
   507  03A2  3472               	retlw	114	;'r'
   508  03A3  3461               	retlw	97	;'a'
   509  03A4  3474               	retlw	116	;'t'
   510  03A5  3469               	retlw	105	;'i'
   511  03A6  346F               	retlw	111	;'o'
   512  03A7  346E               	retlw	110	;'n'
   513  03A8  3421               	retlw	33	;'!'
   514  03A9  3400               	retlw	0
   515  03AA                     STR_5:	
   516  03AA  3420               	retlw	32	;' '
   517  03AB  3450               	retlw	80	;'P'
   518  03AC  3431               	retlw	49	;'1'
   519  03AD  343A               	retlw	58	;':'
   520  03AE  3420               	retlw	32	;' '
   521  03AF  3430               	retlw	48	;'0'
   522  03B0  3430               	retlw	48	;'0'
   523  03B1  3420               	retlw	32	;' '
   524  03B2  3420               	retlw	32	;' '
   525  03B3  3450               	retlw	80	;'P'
   526  03B4  3432               	retlw	50	;'2'
   527  03B5  343A               	retlw	58	;':'
   528  03B6  3420               	retlw	32	;' '
   529  03B7  3430               	retlw	48	;'0'
   530  03B8  3430               	retlw	48	;'0'
   531  03B9  3400               	retlw	0
   532  03BA                     STR_3:	
   533  03BA  3420               	retlw	32	;' '
   534  03BB  3420               	retlw	32	;' '
   535  03BC  3420               	retlw	32	;' '
   536  03BD  3420               	retlw	32	;' '
   537  03BE  3474               	retlw	116	;'t'
   538  03BF  346F               	retlw	111	;'o'
   539  03C0  3420               	retlw	32	;' '
   540  03C1  3473               	retlw	115	;'s'
   541  03C2  3474               	retlw	116	;'t'
   542  03C3  3461               	retlw	97	;'a'
   543  03C4  3472               	retlw	114	;'r'
   544  03C5  3474               	retlw	116	;'t'
   545  03C6  3400               	retlw	0
   546  03C7                     STR_4:	
   547  03C7  3420               	retlw	32	;' '
   548  03C8  3420               	retlw	32	;' '
   549  03C9  3420               	retlw	32	;' '
   550  03CA  3420               	retlw	32	;' '
   551  03CB  3420               	retlw	32	;' '
   552  03CC  3453               	retlw	83	;'S'
   553  03CD  3463               	retlw	99	;'c'
   554  03CE  346F               	retlw	111	;'o'
   555  03CF  3472               	retlw	114	;'r'
   556  03D0  3465               	retlw	101	;'e'
   557  03D1  343A               	retlw	58	;':'
   558  03D2  3400               	retlw	0
   559                           
   560                           ; #config settings
   561  0000                     
   562                           	psect	cinit
   563  000F                     start_initialization:	
   564  000F                     __initialization:	
   565                           
   566                           ; Initialize objects allocated to BANK0
   567  000F  120A  158A  27EB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   568  0014  00D7               	movwf	__pdataBANK0& (0+127)
   569  0015  120A  158A  27EC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   570  001A  00D8               	movwf	(__pdataBANK0+1)& (0+127)
   571                           
   572                           ; Initialize objects allocated to COMMON
   573  001B  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   574  0020  00F8               	movwf	__pdataCOMMON& (0+127)
   575  0021  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   576  0026  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   577                           
   578                           ; Clear objects allocated to BANK3
   579  0027  1783               	bsf	3,7	;select IRP bank2
   580  0028  3090               	movlw	low __pbssBANK3
   581  0029  0084               	movwf	4
   582  002A  30B0               	movlw	low (__pbssBANK3+32)
   583  002B  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   584                           
   585                           ; Clear objects allocated to BANK1
   586  0030  1383               	bcf	3,7	;select IRP bank0
   587  0031  30A0               	movlw	low __pbssBANK1
   588  0032  0084               	movwf	4
   589  0033  30E0               	movlw	low (__pbssBANK1+64)
   590  0034  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   591                           
   592                           ; Clear objects allocated to BANK0
   593  0039  304C               	movlw	low __pbssBANK0
   594  003A  0084               	movwf	4
   595  003B  3057               	movlw	low (__pbssBANK0+11)
   596  003C  120A  118A  27F6  120A  118A  	fcall	clear_ram0
   597                           
   598                           ; Clear objects allocated to COMMON
   599  0041  01FA               	clrf	__pbssCOMMON& (0+127)
   600  0042                     end_of_initialization:	
   601                           ;End of C runtime variable initialization code
   602                           
   603  0042                     __end_of__initialization:	
   604  0042  0183               	clrf	3
   605  0043  120A  118A  29B0   	ljmp	_main	;jump to C main() function
   606                           
   607                           	psect	bssCOMMON
   608  007A                     __pbssCOMMON:	
   609  007A                     _cursor_fast:	
   610  007A                     	ds	1
   611                           
   612                           	psect	dataCOMMON
   613  0078                     __pdataCOMMON:	
   614  0078                     _gameboard:	
   615  0078                     	ds	2
   616                           
   617                           	psect	bssBANK0
   618  004C                     __pbssBANK0:	
   619  004C                     _joystick_y_pos:	
   620  004C                     	ds	2
   621  004E                     _joystick_x_pos:	
   622  004E                     	ds	2
   623  0050                     _recieved_char:	
   624  0050                     	ds	1
   625  0051                     _cursor_movable:	
   626  0051                     	ds	1
   627  0052                     _cursor_move_delay_count:	
   628  0052                     	ds	1
   629  0053                     _delay_loops:	
   630  0053                     	ds	1
   631  0054                     _cursor_solid:	
   632  0054                     	ds	1
   633  0055                     _current_char:	
   634  0055                     	ds	1
   635  0056                     _cursor_pos:	
   636  0056                     	ds	1
   637                           
   638                           	psect	dataBANK0
   639  0057                     __pdataBANK0:	
   640  0057                     _scoreboard:	
   641  0057                     	ds	2
   642                           
   643                           	psect	bssBANK1
   644  00A0                     __pbssBANK1:	
   645  00A0                     _visible:	
   646  00A0                     	ds	32
   647  00C0                     _board:	
   648  00C0                     	ds	32
   649                           
   650                           	psect	bssBANK3
   651  0190                     __pbssBANK3:	
   652  0190                     randomize_gameboard@F1335:	
   653  0190                     	ds	32
   654                           
   655                           	psect	clrtext
   656  07F6                     clear_ram0:	
   657                           ;	Called with FSR containing the base address, and
   658                           ;	W with the last address+1
   659                           
   660  07F6  0064               	clrwdt	;clear the watchdog before getting into this loop
   661  07F7                     clrloop0:	
   662  07F7  0180               	clrf	0	;clear RAM location pointed to by FSR
   663  07F8  0A84               	incf	4,f	;increment pointer
   664  07F9  0604               	xorwf	4,w	;XOR with final address
   665  07FA  1903               	btfsc	3,2	;have we reached the end yet?
   666  07FB  3400               	retlw	0	;all done for this memory range, return
   667  07FC  0604               	xorwf	4,w	;XOR again to restore value
   668  07FD  2FF7               	goto	clrloop0	;do the next byte
   669                           
   670                           	psect	cstackCOMMON
   671  0070                     __pcstackCOMMON:	
   672  0070                     ?_joystick_init:	
   673  0070                     ?_gameboard_init:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_display_gameboard:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_update_gameboard_from_input:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_get_cursor_index:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_time_init:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_get_current_char:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_randomize_gameboard:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_toggle_cursor:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_make_custom_chars:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_interrupt_handler:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_interrupt_handler:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_tmr0_init:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_Delay20us:	
   713                           ; 1 bytes @ 0x0
   714                           
   715                           
   716                           ; 1 bytes @ 0x0
   717  0070                     	ds	3
   718  0073                     ??_joystick_init:	
   719  0073                     ?_DelayMs:	
   720                           ; 1 bytes @ 0x3
   721                           
   722  0073                     ??_get_cursor_index:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     ??_time_init:	
   726                           ; 1 bytes @ 0x3
   727                           
   728  0073                     ??_get_current_char:	
   729                           ; 1 bytes @ 0x3
   730                           
   731  0073                     ??_tmr0_init:	
   732                           ; 1 bytes @ 0x3
   733                           
   734  0073                     ??_Delay20us:	
   735                           ; 1 bytes @ 0x3
   736                           
   737  0073                     ?___awdiv:	
   738                           ; 1 bytes @ 0x3
   739                           
   740  0073                     DelayMs@millis:	
   741                           ; 2 bytes @ 0x3
   742                           
   743  0073                     ___awdiv@divisor:	
   744                           ; 2 bytes @ 0x3
   745                           
   746                           
   747                           ; 2 bytes @ 0x3
   748  0073                     	ds	1
   749  0074                     Delay20us@next:	
   750                           
   751                           ; 1 bytes @ 0x4
   752  0074                     	ds	1
   753  0075                     ??_DelayMs:	
   754  0075                     ?_lcd_write:	
   755                           ; 1 bytes @ 0x5
   756                           
   757  0075                     lcd_write@CmdChar:	
   758                           ; 1 bytes @ 0x5
   759                           
   760  0075                     ___awdiv@dividend:	
   761                           ; 1 bytes @ 0x5
   762                           
   763                           
   764                           ; 2 bytes @ 0x5
   765  0075                     	ds	1
   766  0076                     lcd_write@port:	
   767                           
   768                           ; 2 bytes @ 0x6
   769  0076                     	ds	1
   770  0077                     ??___awdiv:	
   771                           
   772                           ; 1 bytes @ 0x7
   773  0077                     	ds	1
   774  0078                     ??_lcd_clear:	
   775  0078                     ??_toggle_cursor:	
   776                           ; 1 bytes @ 0x8
   777                           
   778  0078                     ??_main:	
   779                           ; 1 bytes @ 0x8
   780                           
   781                           
   782                           	psect	cstackBANK0
   783  0020                     __pcstackBANK0:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0020                     ??_lcd_write:	
   787  0020                     ___awdiv@counter:	
   788                           ; 1 bytes @ 0x0
   789                           
   790                           
   791                           ; 1 bytes @ 0x0
   792  0020                     	ds	1
   793  0021                     ___awdiv@sign:	
   794                           
   795                           ; 1 bytes @ 0x1
   796  0021                     	ds	1
   797  0022                     lcd_write@mode:	
   798  0022                     ___awdiv@quotient:	
   799                           ; 1 bytes @ 0x2
   800                           
   801                           
   802                           ; 2 bytes @ 0x2
   803  0022                     	ds	1
   804  0023                     ?_lcd_clear:	
   805  0023                     ?_lcd_puts:	
   806                           ; 1 bytes @ 0x3
   807                           
   808  0023                     ?_lcd_goto:	
   809                           ; 1 bytes @ 0x3
   810                           
   811  0023                     ?_lcd_putch:	
   812                           ; 1 bytes @ 0x3
   813                           
   814  0023                     ?_lcd_set_custom_char:	
   815                           ; 1 bytes @ 0x3
   816                           
   817  0023                     lcd_set_custom_char@cg_address:	
   818                           ; 1 bytes @ 0x3
   819                           
   820  0023                     lcd_clear@port:	
   821                           ; 1 bytes @ 0x3
   822                           
   823  0023                     lcd_puts@port:	
   824                           ; 2 bytes @ 0x3
   825                           
   826  0023                     lcd_putch@port:	
   827                           ; 2 bytes @ 0x3
   828                           
   829  0023                     lcd_goto@port:	
   830                           ; 2 bytes @ 0x3
   831                           
   832                           
   833                           ; 2 bytes @ 0x3
   834  0023                     	ds	1
   835  0024                     ??_randomize_gameboard:	
   836  0024                     lcd_set_custom_char@port:	
   837                           ; 1 bytes @ 0x4
   838                           
   839                           
   840                           ; 2 bytes @ 0x4
   841  0024                     	ds	1
   842  0025                     ?_lcd_init:	
   843  0025                     ??_lcd_puts:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0025                     ??_lcd_goto:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0025                     ??_lcd_putch:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0025                     lcd_init@port:	
   853                           ; 1 bytes @ 0x5
   854                           
   855                           
   856                           ; 2 bytes @ 0x5
   857  0025                     	ds	1
   858  0026                     ??_lcd_set_custom_char:	
   859  0026                     lcd_puts@string:	
   860                           ; 1 bytes @ 0x6
   861                           
   862  0026                     lcd_putch@character:	
   863                           ; 1 bytes @ 0x6
   864                           
   865  0026                     lcd_goto@position:	
   866                           ; 1 bytes @ 0x6
   867                           
   868                           
   869                           ; 1 bytes @ 0x6
   870  0026                     	ds	1
   871  0027                     ??_lcd_init:	
   872  0027                     ??_display_gameboard:	
   873                           ; 1 bytes @ 0x7
   874                           
   875  0027                     ?_update_cursor:	
   876                           ; 1 bytes @ 0x7
   877                           
   878  0027                     update_cursor@direction:	
   879                           ; 1 bytes @ 0x7
   880                           
   881  0027                     randomize_gameboard@used:	
   882                           ; 1 bytes @ 0x7
   883                           
   884                           
   885                           ; 32 bytes @ 0x7
   886  0027                     	ds	1
   887  0028                     ??_update_cursor:	
   888  0028                     display_gameboard@i:	
   889                           ; 1 bytes @ 0x8
   890                           
   891  0028                     lcd_set_custom_char@row:	
   892                           ; 1 bytes @ 0x8
   893                           
   894                           
   895                           ; 1 bytes @ 0x8
   896  0028                     	ds	1
   897  0029                     lcd_set_custom_char@data:	
   898                           
   899                           ; 1 bytes @ 0x9
   900  0029                     	ds	1
   901  002A                     ??_make_custom_chars:	
   902  002A                     update_cursor@move_delay_count:	
   903                           ; 1 bytes @ 0xA
   904                           
   905                           
   906                           ; 1 bytes @ 0xA
   907  002A                     	ds	1
   908  002B                     ??_update_gameboard_from_input:	
   909                           
   910                           ; 1 bytes @ 0xB
   911  002B                     	ds	28
   912  0047                     randomize_gameboard@current:	
   913                           
   914                           ; 1 bytes @ 0x27
   915  0047                     	ds	1
   916  0048                     randomize_gameboard@random:	
   917                           
   918                           ; 1 bytes @ 0x28
   919  0048                     	ds	1
   920  0049                     ??_gameboard_init:	
   921                           
   922                           ; 1 bytes @ 0x29
   923  0049                     	ds	1
   924  004A                     gameboard_init@cursor_init_pos:	
   925                           
   926                           ; 1 bytes @ 0x2A
   927  004A                     	ds	1
   928  004B                     gameboard_init@i:	
   929                           
   930                           ; 1 bytes @ 0x2B
   931  004B                     	ds	1
   932                           
   933                           	psect	maintext
   934  01B0                     __pmaintext:	
   935 ;;
   936 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   937 ;;
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 65 in file "concentration.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : B00/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels required when called:    6
   960 ;; This function calls:
   961 ;;		_DelayMs
   962 ;;		_display_gameboard
   963 ;;		_gameboard_init
   964 ;;		_joystick_init
   965 ;;		_lcd_clear
   966 ;;		_lcd_goto
   967 ;;		_lcd_init
   968 ;;		_lcd_puts
   969 ;;		_update_gameboard_from_input
   970 ;; This function is called by:
   971 ;;		Startup code after reset
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _main
   977  01B0                     _main:	
   978  01B0                     l2280:	
   979                           ;incstack = 0
   980                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   981                           
   982                           
   983                           ;concentration.c: 67:     SCS = 0;
   984  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   985  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   986  01B2  100F               	bcf	15,0	;volatile
   987  01B3                     l2282:	
   988                           
   989                           ;concentration.c: 69:     TRISD = 0;
   990  01B3  0188               	clrf	8	;volatile
   991                           
   992                           ;concentration.c: 70:     TRISA = 0;
   993  01B4  0185               	clrf	5	;volatile
   994                           
   995                           ;concentration.c: 71:     ANSEL = 0;
   996  01B5  1683               	bsf	3,5	;RP0=1, select bank3
   997  01B6  1703               	bsf	3,6	;RP1=1, select bank3
   998  01B7  0188               	clrf	8	;volatile
   999  01B8                     l2284:	
  1000                           
  1001                           ;concentration.c: 72:     lcd_init(gameboard);
  1002  01B8  3005               	movlw	5
  1003  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1004  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1005  01BB  00A5               	movwf	lcd_init@port
  1006  01BC  3000               	movlw	0
  1007  01BD  00A6               	movwf	lcd_init@port+1
  1008  01BE  120A  118A  257B  120A  118A  	fcall	_lcd_init
  1009  01C3                     l2286:	
  1010                           
  1011                           ;concentration.c: 73:     lcd_init(scoreboard);
  1012  01C3  3008               	movlw	8
  1013  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1014  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1015  01C6  00A5               	movwf	lcd_init@port
  1016  01C7  3000               	movlw	0
  1017  01C8  00A6               	movwf	lcd_init@port+1
  1018  01C9  120A  118A  257B  120A  118A  	fcall	_lcd_init
  1019  01CE                     l2288:	
  1020                           
  1021                           ;concentration.c: 75:     joystick_init();
  1022  01CE  120A  118A  274F  120A  118A  	fcall	_joystick_init
  1023  01D3                     l2290:	
  1024                           
  1025                           ;concentration.c: 76:     gameboard_init(0x00);
  1026  01D3  3000               	movlw	0
  1027  01D4  120A  118A  24B8  120A  118A  	fcall	_gameboard_init
  1028  01D9                     l2292:	
  1029                           
  1030                           ;concentration.c: 78:     recieved_char = 0x00;
  1031  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1032  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1033  01DB  01D0               	clrf	_recieved_char
  1034  01DC                     l2294:	
  1035                           
  1036                           ;concentration.c: 79:     TRISC = 0x80;
  1037  01DC  3080               	movlw	128
  1038  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  1039  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  1040  01DF  0087               	movwf	7	;volatile
  1041  01E0                     l2296:	
  1042                           
  1043                           ;concentration.c: 80:     TXEN = 1;
  1044  01E0  1698               	bsf	24,5	;volatile
  1045  01E1                     l2298:	
  1046                           
  1047                           ;concentration.c: 81:     TX9 = 1;
  1048  01E1  1718               	bsf	24,6	;volatile
  1049  01E2                     l2300:	
  1050                           
  1051                           ;concentration.c: 82:     CREN = 1;
  1052  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1053  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1054  01E4  1618               	bsf	24,4	;volatile
  1055  01E5                     l2302:	
  1056                           
  1057                           ;concentration.c: 83:     RX9 = 1;
  1058  01E5  1718               	bsf	24,6	;volatile
  1059  01E6                     l2304:	
  1060                           
  1061                           ;concentration.c: 84:     RCIE = 1;
  1062  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1063  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1064  01E8  168C               	bsf	12,5	;volatile
  1065  01E9                     l2306:	
  1066                           
  1067                           ;concentration.c: 85:     SYNC = 0;
  1068  01E9  1218               	bcf	24,4	;volatile
  1069  01EA                     l2308:	
  1070                           
  1071                           ;concentration.c: 86:     BRGH = 1;
  1072  01EA  1518               	bsf	24,2	;volatile
  1073  01EB                     l2310:	
  1074                           
  1075                           ;concentration.c: 87:     BRG16 = 0;
  1076  01EB  1683               	bsf	3,5	;RP0=1, select bank3
  1077  01EC  1703               	bsf	3,6	;RP1=1, select bank3
  1078  01ED  1187               	bcf	7,3	;volatile
  1079  01EE                     l2312:	
  1080                           
  1081                           ;concentration.c: 88:     SPBRG = 10;
  1082  01EE  300A               	movlw	10
  1083  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1084  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1085  01F1  0099               	movwf	25	;volatile
  1086  01F2                     l2314:	
  1087                           
  1088                           ;concentration.c: 89:     SPEN = 1;
  1089  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1090  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1091  01F4  1798               	bsf	24,7	;volatile
  1092  01F5                     l2316:	
  1093                           
  1094                           ;concentration.c: 90:     lcd_clear(gameboard);
  1095  01F5  3005               	movlw	5
  1096  01F6  00A3               	movwf	lcd_clear@port
  1097  01F7  3000               	movlw	0
  1098  01F8  00A4               	movwf	lcd_clear@port+1
  1099  01F9  120A  118A  2790  120A  118A  	fcall	_lcd_clear
  1100  01FE                     l2318:	
  1101                           
  1102                           ;concentration.c: 91:     lcd_clear(scoreboard);
  1103  01FE  3008               	movlw	8
  1104  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0201  00A3               	movwf	lcd_clear@port
  1107  0202  3000               	movlw	0
  1108  0203  00A4               	movwf	lcd_clear@port+1
  1109  0204  120A  118A  2790  120A  118A  	fcall	_lcd_clear
  1110  0209                     l2320:	
  1111                           
  1112                           ;concentration.c: 92:     lcd_puts(" Concentration!", scoreboard);
  1113  0209  3008               	movlw	8
  1114  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1115  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1116  020C  00A3               	movwf	lcd_puts@port
  1117  020D  3000               	movlw	0
  1118  020E  00A4               	movwf	lcd_puts@port+1
  1119  020F  3052               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1120  0210  120A  118A  2724  120A  118A  	fcall	_lcd_puts
  1121  0215                     l2322:	
  1122                           
  1123                           ;concentration.c: 93:     lcd_puts("Press the button", gameboard);
  1124  0215  3005               	movlw	5
  1125  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0218  00A3               	movwf	lcd_puts@port
  1128  0219  3000               	movlw	0
  1129  021A  00A4               	movwf	lcd_puts@port+1
  1130  021B  3041               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1131  021C  120A  118A  2724  120A  118A  	fcall	_lcd_puts
  1132  0221                     l2324:	
  1133                           
  1134                           ;concentration.c: 94:     lcd_goto(0x40, gameboard);
  1135  0221  3005               	movlw	5
  1136  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0224  00A3               	movwf	lcd_goto@port
  1139  0225  3000               	movlw	0
  1140  0226  00A4               	movwf	lcd_goto@port+1
  1141  0227  3040               	movlw	64
  1142  0228  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  1143  022D                     l2326:	
  1144                           
  1145                           ;concentration.c: 95:     lcd_puts("    to start", gameboard);
  1146  022D  3005               	movlw	5
  1147  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1148  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0230  00A3               	movwf	lcd_puts@port
  1150  0231  3000               	movlw	0
  1151  0232  00A4               	movwf	lcd_puts@port+1
  1152  0233  3072               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1153  0234  120A  118A  2724  120A  118A  	fcall	_lcd_puts
  1154  0239                     l175:	
  1155                           ;concentration.c: 96:     while(RB5);
  1156                           
  1157  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1158  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1159  023B  1A86               	btfsc	6,5	;volatile
  1160  023C  2A3E               	goto	u1611
  1161  023D  2A3F               	goto	u1610
  1162  023E                     u1611:	
  1163  023E  2A39               	goto	l175
  1164  023F                     u1610:	
  1165  023F                     l2328:	
  1166                           
  1167                           ;concentration.c: 97:     DelayMs(8);
  1168  023F  3008               	movlw	8
  1169  0240  00F3               	movwf	DelayMs@millis
  1170  0241  3000               	movlw	0
  1171  0242  00F4               	movwf	DelayMs@millis+1
  1172  0243  120A  118A  27A8  120A  118A  	fcall	_DelayMs
  1173  0248                     l178:	
  1174                           ;concentration.c: 98:     while(!RB5);
  1175                           
  1176  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1178  024A  1E86               	btfss	6,5	;volatile
  1179  024B  2A4D               	goto	u1621
  1180  024C  2A4E               	goto	u1620
  1181  024D                     u1621:	
  1182  024D  2A48               	goto	l178
  1183  024E                     u1620:	
  1184  024E                     l2330:	
  1185                           
  1186                           ;concentration.c: 99:     DelayMs(8);
  1187  024E  3008               	movlw	8
  1188  024F  00F3               	movwf	DelayMs@millis
  1189  0250  3000               	movlw	0
  1190  0251  00F4               	movwf	DelayMs@millis+1
  1191  0252  120A  118A  27A8  120A  118A  	fcall	_DelayMs
  1192  0257                     l2332:	
  1193                           
  1194                           ;concentration.c: 100:     lcd_clear(gameboard);
  1195  0257  3005               	movlw	5
  1196  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1198  025A  00A3               	movwf	lcd_clear@port
  1199  025B  3000               	movlw	0
  1200  025C  00A4               	movwf	lcd_clear@port+1
  1201  025D  120A  118A  2790  120A  118A  	fcall	_lcd_clear
  1202  0262                     l2334:	
  1203                           
  1204                           ;concentration.c: 101:     lcd_clear(scoreboard);
  1205  0262  3008               	movlw	8
  1206  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0265  00A3               	movwf	lcd_clear@port
  1209  0266  3000               	movlw	0
  1210  0267  00A4               	movwf	lcd_clear@port+1
  1211  0268  120A  118A  2790  120A  118A  	fcall	_lcd_clear
  1212  026D                     l2336:	
  1213                           
  1214                           ;concentration.c: 102:     lcd_puts("     Score:", scoreboard);
  1215  026D  3008               	movlw	8
  1216  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1217  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0270  00A3               	movwf	lcd_puts@port
  1219  0271  3000               	movlw	0
  1220  0272  00A4               	movwf	lcd_puts@port+1
  1221  0273  307F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1222  0274  120A  118A  2724  120A  118A  	fcall	_lcd_puts
  1223  0279                     l2338:	
  1224                           
  1225                           ;concentration.c: 103:     lcd_goto(0x40, scoreboard);
  1226  0279  3008               	movlw	8
  1227  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1228  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1229  027C  00A3               	movwf	lcd_goto@port
  1230  027D  3000               	movlw	0
  1231  027E  00A4               	movwf	lcd_goto@port+1
  1232  027F  3040               	movlw	64
  1233  0280  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  1234  0285                     l2340:	
  1235                           
  1236                           ;concentration.c: 104:     lcd_puts(" P1: 00  P2: 00", scoreboard);
  1237  0285  3008               	movlw	8
  1238  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0288  00A3               	movwf	lcd_puts@port
  1241  0289  3000               	movlw	0
  1242  028A  00A4               	movwf	lcd_puts@port+1
  1243  028B  3062               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1244  028C  120A  118A  2724  120A  118A  	fcall	_lcd_puts
  1245  0291                     l2342:	
  1246                           
  1247                           ;concentration.c: 105:     display_gameboard();
  1248  0291  120A  118A  266E  120A  118A  	fcall	_display_gameboard
  1249  0296                     l2344:	
  1250                           
  1251                           ;concentration.c: 107:         update_gameboard_from_input();
  1252  0296  120A  118A  2046  120A  118A  	fcall	_update_gameboard_from_input
  1253  029B  2A96               	goto	l2344
  1254  029C  120A  118A  280C   	ljmp	start
  1255  029F                     __end_of_main:	
  1256                           
  1257                           	psect	text1
  1258  0046                     __ptext1:	
  1259 ;; *************** function _update_gameboard_from_input *****************
  1260 ;; Defined at:
  1261 ;;		line 186 in file "concentration.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0
  1277 ;;      Temps:          0       2       0       0       0
  1278 ;;      Totals:         0       2       0       0       0
  1279 ;;Total ram usage:        2 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    5
  1282 ;; This function calls:
  1283 ;;		_display_gameboard
  1284 ;;		_get_cursor_index
  1285 ;;		_toggle_cursor
  1286 ;;		_update_cursor
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _update_gameboard_from_input
  1294  0046                     _update_gameboard_from_input:	
  1295  0046                     l2206:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1298                           
  1299                           
  1300                           ;concentration.c: 188:     if(GO == 0) {
  1301  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0048  189F               	btfsc	31,1	;volatile
  1304  0049  284B               	goto	u1361
  1305  004A  284C               	goto	u1360
  1306  004B                     u1361:	
  1307  004B  284D               	goto	l230
  1308  004C                     u1360:	
  1309  004C                     l2208:	
  1310                           
  1311                           ;concentration.c: 189:         GO = 1;
  1312  004C  149F               	bsf	31,1	;volatile
  1313  004D                     l230:	
  1314                           ;concentration.c: 190:     }
  1315                           
  1316                           
  1317                           ;concentration.c: 191:     if(RB5 == 0) {
  1318  004D  1A86               	btfsc	6,5	;volatile
  1319  004E  2850               	goto	u1371
  1320  004F  2851               	goto	u1370
  1321  0050                     u1371:	
  1322  0050  2870               	goto	l2216
  1323  0051                     u1370:	
  1324  0051                     l2210:	
  1325                           
  1326                           ;concentration.c: 192:         if(visible[cursor_pos] == 0xFF) {
  1327  0051  0856               	movf	_cursor_pos,w
  1328  0052  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1329  0053  0084               	movwf	4
  1330  0054  1383               	bcf	3,7	;select IRP bank1
  1331  0055  0A00               	incf	0,w
  1332  0056  1D03               	btfss	3,2
  1333  0057  2859               	goto	u1381
  1334  0058  285A               	goto	u1380
  1335  0059                     u1381:	
  1336  0059  2870               	goto	l2216
  1337  005A                     u1380:	
  1338  005A                     l2212:	
  1339                           
  1340                           ;concentration.c: 193:             visible[cursor_pos] = board[cursor_pos];
  1341  005A  0856               	movf	_cursor_pos,w
  1342  005B  3EC0               	addlw	(low (_board| 0))& (0+255)
  1343  005C  0084               	movwf	4
  1344  005D  0800               	movf	0,w
  1345  005E  00AB               	movwf	??_update_gameboard_from_input
  1346  005F  0856               	movf	_cursor_pos,w
  1347  0060  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1348  0061  0084               	movwf	4
  1349  0062  082B               	movf	??_update_gameboard_from_input,w
  1350  0063  0080               	movwf	0
  1351                           
  1352                           ;concentration.c: 194:             current_char = board[cursor_pos];
  1353  0064  0856               	movf	_cursor_pos,w
  1354  0065  3EC0               	addlw	(low (_board| 0))& (0+255)
  1355  0066  0084               	movwf	4
  1356  0067  0800               	movf	0,w
  1357  0068  00AB               	movwf	??_update_gameboard_from_input
  1358  0069  082B               	movf	??_update_gameboard_from_input,w
  1359  006A  00D5               	movwf	_current_char
  1360  006B                     l2214:	
  1361                           
  1362                           ;concentration.c: 195:             display_gameboard();
  1363  006B  120A  118A  266E  120A  118A  	fcall	_display_gameboard
  1364  0070                     l2216:	
  1365                           
  1366                           ;concentration.c: 199:     if(CCP1IF == 1) {
  1367  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0072  1D0C               	btfss	12,2	;volatile
  1370  0073  2875               	goto	u1391
  1371  0074  2876               	goto	u1390
  1372  0075                     u1391:	
  1373  0075  2896               	goto	l2228
  1374  0076                     u1390:	
  1375  0076                     l2218:	
  1376                           
  1377                           ;concentration.c: 200:         if(delay_loops == 0) {
  1378  0076  0853               	movf	_delay_loops,w
  1379  0077  1D03               	btfss	3,2
  1380  0078  287A               	goto	u1401
  1381  0079  287B               	goto	u1400
  1382  007A                     u1401:	
  1383  007A  2885               	goto	l2224
  1384  007B                     u1400:	
  1385  007B                     l2220:	
  1386                           
  1387                           ;concentration.c: 201:             delay_loops = 25;
  1388  007B  3019               	movlw	25
  1389  007C  00AB               	movwf	??_update_gameboard_from_input
  1390  007D  082B               	movf	??_update_gameboard_from_input,w
  1391  007E  00D3               	movwf	_delay_loops
  1392  007F                     l2222:	
  1393                           
  1394                           ;concentration.c: 202:             toggle_cursor();
  1395  007F  120A  118A  26F2  120A  118A  	fcall	_toggle_cursor
  1396                           
  1397                           ;concentration.c: 203:         } else {
  1398  0084  2887               	goto	l235
  1399  0085                     l2224:	
  1400                           
  1401                           ;concentration.c: 204:             delay_loops--;
  1402  0085  3001               	movlw	1
  1403  0086  02D3               	subwf	_delay_loops,f
  1404  0087                     l235:	
  1405                           ;concentration.c: 205:         }
  1406                           
  1407                           
  1408                           ;concentration.c: 206:         CCPR1 = TMR1+50000;
  1409  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0089  080E               	movf	14,w	;volatile
  1412  008A  3E50               	addlw	80
  1413  008B  00AB               	movwf	??_update_gameboard_from_input
  1414  008C  080F               	movf	15,w	;volatile
  1415  008D  1803               	skipnc
  1416  008E  3E01               	addlw	1
  1417  008F  3EC3               	addlw	195
  1418  0090  00AC               	movwf	??_update_gameboard_from_input+1
  1419  0091  082B               	movf	??_update_gameboard_from_input,w
  1420  0092  0095               	movwf	21	;volatile
  1421  0093  082C               	movf	??_update_gameboard_from_input+1,w
  1422  0094  0096               	movwf	22	;volatile
  1423  0095                     l2226:	
  1424                           
  1425                           ;concentration.c: 207:         CCP1IF = 0;
  1426  0095  110C               	bcf	12,2	;volatile
  1427  0096                     l2228:	
  1428                           
  1429                           ;concentration.c: 210:     if(joystick_x_pos > 900) {
  1430  0096  084F               	movf	_joystick_x_pos+1,w
  1431  0097  3A80               	xorlw	128
  1432  0098  00FF               	movwf	btemp+1
  1433  0099  3083               	movlw	131
  1434  009A  027F               	subwf	btemp+1,w
  1435  009B  1D03               	skipz
  1436  009C  289F               	goto	u1415
  1437  009D  3085               	movlw	133
  1438  009E  024E               	subwf	_joystick_x_pos,w
  1439  009F                     u1415:	
  1440  009F  1C03               	skipc
  1441  00A0  28A2               	goto	u1411
  1442  00A1  28A3               	goto	u1410
  1443  00A2                     u1411:	
  1444  00A2  28B5               	goto	l2234
  1445  00A3                     u1410:	
  1446  00A3                     l2230:	
  1447                           
  1448                           ;concentration.c: 211:         if(cursor_movable) {
  1449  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1450  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1451  00A5  0851               	movf	_cursor_movable,w
  1452  00A6  1903               	btfsc	3,2
  1453  00A7  28A9               	goto	u1421
  1454  00A8  28AA               	goto	u1420
  1455  00A9                     u1421:	
  1456  00A9  29AF               	goto	l259
  1457  00AA                     u1420:	
  1458  00AA                     l2232:	
  1459                           
  1460                           ;concentration.c: 212:             update_cursor(30, 2);
  1461  00AA  3002               	movlw	2
  1462  00AB  00AB               	movwf	??_update_gameboard_from_input
  1463  00AC  082B               	movf	??_update_gameboard_from_input,w
  1464  00AD  00A7               	movwf	update_cursor@direction
  1465  00AE  301E               	movlw	30
  1466  00AF  120A  118A  229F  120A  118A  	fcall	_update_cursor
  1467  00B4  29AF               	goto	l259
  1468  00B5                     l2234:	
  1469  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1470  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1471  00B7  084F               	movf	_joystick_x_pos+1,w
  1472  00B8  3A80               	xorlw	128
  1473  00B9  00FF               	movwf	btemp+1
  1474  00BA  3080               	movlw	128
  1475  00BB  027F               	subwf	btemp+1,w
  1476  00BC  1D03               	skipz
  1477  00BD  28C0               	goto	u1435
  1478  00BE  3064               	movlw	100
  1479  00BF  024E               	subwf	_joystick_x_pos,w
  1480  00C0                     u1435:	
  1481  00C0  1803               	skipnc
  1482  00C1  28C3               	goto	u1431
  1483  00C2  28C4               	goto	u1430
  1484  00C3                     u1431:	
  1485  00C3  28D6               	goto	l2240
  1486  00C4                     u1430:	
  1487  00C4                     l2236:	
  1488                           
  1489                           ;concentration.c: 215:         if(cursor_movable) {
  1490  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1491  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1492  00C6  0851               	movf	_cursor_movable,w
  1493  00C7  1903               	btfsc	3,2
  1494  00C8  28CA               	goto	u1441
  1495  00C9  28CB               	goto	u1440
  1496  00CA                     u1441:	
  1497  00CA  29AF               	goto	l259
  1498  00CB                     u1440:	
  1499  00CB                     l2238:	
  1500                           
  1501                           ;concentration.c: 216:             update_cursor(30, 3);
  1502  00CB  3003               	movlw	3
  1503  00CC  00AB               	movwf	??_update_gameboard_from_input
  1504  00CD  082B               	movf	??_update_gameboard_from_input,w
  1505  00CE  00A7               	movwf	update_cursor@direction
  1506  00CF  301E               	movlw	30
  1507  00D0  120A  118A  229F  120A  118A  	fcall	_update_cursor
  1508  00D5  29AF               	goto	l259
  1509  00D6                     l2240:	
  1510  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1511  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1512  00D8  084F               	movf	_joystick_x_pos+1,w
  1513  00D9  3A80               	xorlw	128
  1514  00DA  00FF               	movwf	btemp+1
  1515  00DB  3082               	movlw	130
  1516  00DC  027F               	subwf	btemp+1,w
  1517  00DD  1D03               	skipz
  1518  00DE  28E1               	goto	u1455
  1519  00DF  3059               	movlw	89
  1520  00E0  024E               	subwf	_joystick_x_pos,w
  1521  00E1                     u1455:	
  1522  00E1  1C03               	skipc
  1523  00E2  28E4               	goto	u1451
  1524  00E3  28E5               	goto	u1450
  1525  00E4                     u1451:	
  1526  00E4  28F7               	goto	l2246
  1527  00E5                     u1450:	
  1528  00E5                     l2242:	
  1529                           
  1530                           ;concentration.c: 219:         if(cursor_movable) {
  1531  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1532  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1533  00E7  0851               	movf	_cursor_movable,w
  1534  00E8  1903               	btfsc	3,2
  1535  00E9  28EB               	goto	u1461
  1536  00EA  28EC               	goto	u1460
  1537  00EB                     u1461:	
  1538  00EB  29AF               	goto	l259
  1539  00EC                     u1460:	
  1540  00EC                     l2244:	
  1541                           
  1542                           ;concentration.c: 220:             update_cursor(60, 2);
  1543  00EC  3002               	movlw	2
  1544  00ED  00AB               	movwf	??_update_gameboard_from_input
  1545  00EE  082B               	movf	??_update_gameboard_from_input,w
  1546  00EF  00A7               	movwf	update_cursor@direction
  1547  00F0  303C               	movlw	60
  1548  00F1  120A  118A  229F  120A  118A  	fcall	_update_cursor
  1549  00F6  29AF               	goto	l259
  1550  00F7                     l2246:	
  1551  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1552  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1553  00F9  084F               	movf	_joystick_x_pos+1,w
  1554  00FA  3A80               	xorlw	128
  1555  00FB  00FF               	movwf	btemp+1
  1556  00FC  3081               	movlw	129
  1557  00FD  027F               	subwf	btemp+1,w
  1558  00FE  1D03               	skipz
  1559  00FF  2902               	goto	u1475
  1560  0100  3090               	movlw	144
  1561  0101  024E               	subwf	_joystick_x_pos,w
  1562  0102                     u1475:	
  1563  0102  1803               	skipnc
  1564  0103  2905               	goto	u1471
  1565  0104  2906               	goto	u1470
  1566  0105                     u1471:	
  1567  0105  2918               	goto	l2252
  1568  0106                     u1470:	
  1569  0106                     l2248:	
  1570                           
  1571                           ;concentration.c: 223:         if(cursor_movable) {
  1572  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0108  0851               	movf	_cursor_movable,w
  1575  0109  1903               	btfsc	3,2
  1576  010A  290C               	goto	u1481
  1577  010B  290D               	goto	u1480
  1578  010C                     u1481:	
  1579  010C  29AF               	goto	l259
  1580  010D                     u1480:	
  1581  010D                     l2250:	
  1582                           
  1583                           ;concentration.c: 224:             update_cursor(60, 3);
  1584  010D  3003               	movlw	3
  1585  010E  00AB               	movwf	??_update_gameboard_from_input
  1586  010F  082B               	movf	??_update_gameboard_from_input,w
  1587  0110  00A7               	movwf	update_cursor@direction
  1588  0111  303C               	movlw	60
  1589  0112  120A  118A  229F  120A  118A  	fcall	_update_cursor
  1590  0117  29AF               	goto	l259
  1591  0118                     l2252:	
  1592  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1594  011A  084D               	movf	_joystick_y_pos+1,w
  1595  011B  3A80               	xorlw	128
  1596  011C  00FF               	movwf	btemp+1
  1597  011D  3082               	movlw	130
  1598  011E  027F               	subwf	btemp+1,w
  1599  011F  1D03               	skipz
  1600  0120  2923               	goto	u1495
  1601  0121  30BD               	movlw	189
  1602  0122  024C               	subwf	_joystick_y_pos,w
  1603  0123                     u1495:	
  1604  0123  1C03               	skipc
  1605  0124  2926               	goto	u1491
  1606  0125  2927               	goto	u1490
  1607  0126                     u1491:	
  1608  0126  2952               	goto	l2266
  1609  0127                     u1490:	
  1610  0127                     l2254:	
  1611                           
  1612                           ;concentration.c: 227:         if(cursor_movable) {
  1613  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0129  0851               	movf	_cursor_movable,w
  1616  012A  1903               	btfsc	3,2
  1617  012B  292D               	goto	u1501
  1618  012C  292E               	goto	u1500
  1619  012D                     u1501:	
  1620  012D  29AF               	goto	l259
  1621  012E                     u1500:	
  1622  012E                     l2256:	
  1623                           
  1624                           ;concentration.c: 228:             update_cursor(62, 1);
  1625  012E  01A7               	clrf	update_cursor@direction
  1626  012F  0AA7               	incf	update_cursor@direction,f
  1627  0130  303E               	movlw	62
  1628  0131  120A  118A  229F  120A  118A  	fcall	_update_cursor
  1629  0136                     l2258:	
  1630                           
  1631                           ;concentration.c: 229:             if(get_cursor_index() == 0x40) {
  1632  0136  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  1633  013B  3A40               	xorlw	64
  1634  013C  1D03               	skipz
  1635  013D  293F               	goto	u1511
  1636  013E  2940               	goto	u1510
  1637  013F                     u1511:	
  1638  013F  2943               	goto	l2262
  1639  0140                     u1510:	
  1640  0140                     l2260:	
  1641                           
  1642                           ;concentration.c: 230:                 RB1 = 1;
  1643  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0142  1486               	bsf	6,1	;volatile
  1646  0143                     l2262:	
  1647                           
  1648                           ;concentration.c: 232:             if(get_cursor_index() == 0x00) {
  1649  0143  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  1650  0148  3A00               	xorlw	0
  1651  0149  1D03               	skipz
  1652  014A  294C               	goto	u1521
  1653  014B  294D               	goto	u1520
  1654  014C                     u1521:	
  1655  014C  29AF               	goto	l259
  1656  014D                     u1520:	
  1657  014D                     l2264:	
  1658                           
  1659                           ;concentration.c: 233:                 RB2 = 1;
  1660  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1661  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1662  014F  1506               	bsf	6,2	;volatile
  1663  0150  29AF               	goto	l259
  1664  0151                     l249:	
  1665                           ;concentration.c: 235:         }
  1666                           
  1667                           
  1668                           ;concentration.c: 236:     } else if(joystick_y_pos < 300) {
  1669  0151  29AF               	goto	l259
  1670  0152                     l2266:	
  1671  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0154  084D               	movf	_joystick_y_pos+1,w
  1674  0155  3A80               	xorlw	128
  1675  0156  00FF               	movwf	btemp+1
  1676  0157  3081               	movlw	129
  1677  0158  027F               	subwf	btemp+1,w
  1678  0159  1D03               	skipz
  1679  015A  295D               	goto	u1535
  1680  015B  302C               	movlw	44
  1681  015C  024C               	subwf	_joystick_y_pos,w
  1682  015D                     u1535:	
  1683  015D  1803               	skipnc
  1684  015E  2960               	goto	u1531
  1685  015F  2961               	goto	u1530
  1686  0160                     u1531:	
  1687  0160  29AB               	goto	l253
  1688  0161                     u1530:	
  1689  0161                     l2268:	
  1690                           
  1691                           ;concentration.c: 237:         if(cursor_movable) {
  1692  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0163  0851               	movf	_cursor_movable,w
  1695  0164  1903               	btfsc	3,2
  1696  0165  2967               	goto	u1541
  1697  0166  2968               	goto	u1540
  1698  0167                     u1541:	
  1699  0167  29AF               	goto	l259
  1700  0168                     u1540:	
  1701  0168                     l2270:	
  1702                           
  1703                           ;concentration.c: 238:             update_cursor(62, 1);
  1704  0168  01A7               	clrf	update_cursor@direction
  1705  0169  0AA7               	incf	update_cursor@direction,f
  1706  016A  303E               	movlw	62
  1707  016B  120A  118A  229F  120A  118A  	fcall	_update_cursor
  1708  0170                     l2272:	
  1709                           
  1710                           ;concentration.c: 239:             if((get_cursor_index() == 0x40)&(RB1==0)) {
  1711  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0172  1C86               	btfss	6,1	;volatile
  1714  0173  2975               	goto	u1551
  1715  0174  2977               	goto	u1550
  1716  0175                     u1551:	
  1717  0175  3001               	movlw	1
  1718  0176  2978               	goto	u1552
  1719  0177                     u1550:	
  1720  0177  3000               	movlw	0
  1721  0178                     u1552:	
  1722  0178  00AB               	movwf	??_update_gameboard_from_input
  1723  0179  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  1724  017E  3A40               	xorlw	64
  1725  017F  1903               	skipnz
  1726  0180  2982               	goto	u1561
  1727  0181  2984               	goto	u1560
  1728  0182                     u1561:	
  1729  0182  3001               	movlw	1
  1730  0183  2985               	goto	u1562
  1731  0184                     u1560:	
  1732  0184  3000               	movlw	0
  1733  0185                     u1562:	
  1734  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0187  052B               	andwf	??_update_gameboard_from_input,w
  1737  0188  3800               	iorlw	0
  1738  0189  1903               	skipnz
  1739  018A  298C               	goto	u1571
  1740  018B  298D               	goto	u1570
  1741  018C                     u1571:	
  1742  018C  298F               	goto	l2276
  1743  018D                     u1570:	
  1744  018D                     l2274:	
  1745                           
  1746                           ;concentration.c: 240:                 RB1 = 1;
  1747  018D  1486               	bsf	6,1	;volatile
  1748                           
  1749                           ;concentration.c: 241:             } else if((get_cursor_index() == 0x00)&(RB1==0)) {
  1750  018E  29AF               	goto	l259
  1751  018F                     l2276:	
  1752  018F  1C86               	btfss	6,1	;volatile
  1753  0190  2992               	goto	u1581
  1754  0191  2994               	goto	u1580
  1755  0192                     u1581:	
  1756  0192  3001               	movlw	1
  1757  0193  2995               	goto	u1582
  1758  0194                     u1580:	
  1759  0194  3000               	movlw	0
  1760  0195                     u1582:	
  1761  0195  00AB               	movwf	??_update_gameboard_from_input
  1762  0196  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  1763  019B  3A00               	xorlw	0
  1764  019C  1903               	skipnz
  1765  019D  299F               	goto	u1591
  1766  019E  29A1               	goto	u1590
  1767  019F                     u1591:	
  1768  019F  3001               	movlw	1
  1769  01A0  29A2               	goto	u1592
  1770  01A1                     u1590:	
  1771  01A1  3000               	movlw	0
  1772  01A2                     u1592:	
  1773  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1774  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1775  01A4  052B               	andwf	??_update_gameboard_from_input,w
  1776  01A5  3800               	iorlw	0
  1777  01A6  1903               	skipnz
  1778  01A7  29A9               	goto	u1601
  1779  01A8  29AA               	goto	u1600
  1780  01A9                     u1601:	
  1781  01A9  2951               	goto	l249
  1782  01AA                     u1600:	
  1783  01AA  294D               	goto	l2264
  1784  01AB                     l253:	
  1785                           
  1786                           ;concentration.c: 246:         cursor_movable = 1;
  1787  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1788  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1789  01AD  01D1               	clrf	_cursor_movable
  1790  01AE  0AD1               	incf	_cursor_movable,f
  1791  01AF                     l259:	
  1792  01AF  0008               	return
  1793  01B0                     __end_of_update_gameboard_from_input:	
  1794                           
  1795                           	psect	text2
  1796  029F                     __ptext2:	
  1797 ;; *************** function _update_cursor *****************
  1798 ;; Defined at:
  1799 ;;		line 250 in file "concentration.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  move_delay_c    1    wreg     unsigned char 
  1802 ;;  direction       1    7[BANK0 ] unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  move_delay_c    1   10[BANK0 ] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       1       0       0       0
  1815 ;;      Locals:         0       1       0       0       0
  1816 ;;      Temps:          0       2       0       0       0
  1817 ;;      Totals:         0       4       0       0       0
  1818 ;;Total ram usage:        4 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    4
  1821 ;; This function calls:
  1822 ;;		_get_current_char
  1823 ;;		_get_cursor_index
  1824 ;;		_lcd_goto
  1825 ;;		_lcd_putch
  1826 ;; This function is called by:
  1827 ;;		_update_gameboard_from_input
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _update_cursor
  1833  029F                     _update_cursor:	
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1837                           ;update_cursor@move_delay_count stored from wreg
  1838  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1839  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1840  02A1  00AA               	movwf	update_cursor@move_delay_count
  1841  02A2                     l2094:	
  1842                           
  1843                           ;concentration.c: 251:     cursor_movable = 0;
  1844  02A2  01D1               	clrf	_cursor_movable
  1845  02A3                     l2096:	
  1846                           
  1847                           ;concentration.c: 252:     cursor_move_delay_count = move_delay_count;
  1848  02A3  082A               	movf	update_cursor@move_delay_count,w
  1849  02A4  00A8               	movwf	??_update_cursor
  1850  02A5  0828               	movf	??_update_cursor,w
  1851  02A6  00D2               	movwf	_cursor_move_delay_count
  1852                           
  1853                           ;concentration.c: 253:     switch(direction) {
  1854  02A7  2AEF               	goto	l2122
  1855  02A8                     l2098:	
  1856                           
  1857                           ;concentration.c: 255:             if(cursor_pos < 16) {
  1858  02A8  3010               	movlw	16
  1859  02A9  0256               	subwf	_cursor_pos,w
  1860  02AA  1803               	skipnc
  1861  02AB  2AAD               	goto	u1321
  1862  02AC  2AAE               	goto	u1320
  1863  02AD                     u1321:	
  1864  02AD  2AB3               	goto	l2102
  1865  02AE                     u1320:	
  1866  02AE                     l2100:	
  1867                           
  1868                           ;concentration.c: 256:                 cursor_pos += 16;
  1869  02AE  3010               	movlw	16
  1870  02AF  00A8               	movwf	??_update_cursor
  1871  02B0  0828               	movf	??_update_cursor,w
  1872  02B1  07D6               	addwf	_cursor_pos,f
  1873                           
  1874                           ;concentration.c: 257:             } else {
  1875  02B2  2B02               	goto	l2124
  1876  02B3                     l2102:	
  1877                           
  1878                           ;concentration.c: 258:                 cursor_pos -= 16;
  1879  02B3  3010               	movlw	16
  1880  02B4  02D6               	subwf	_cursor_pos,f
  1881  02B5  2B02               	goto	l2124
  1882  02B6                     l2104:	
  1883                           
  1884                           ;concentration.c: 264:                     cursor_pos = 31;
  1885  02B6  301F               	movlw	31
  1886  02B7  00A8               	movwf	??_update_cursor
  1887  02B8  0828               	movf	??_update_cursor,w
  1888  02B9  00D6               	movwf	_cursor_pos
  1889                           
  1890                           ;concentration.c: 265:                     break;
  1891  02BA  2B02               	goto	l2124
  1892  02BB                     l2106:	
  1893                           
  1894                           ;concentration.c: 267:                     cursor_pos = 15;
  1895  02BB  300F               	movlw	15
  1896  02BC  00A8               	movwf	??_update_cursor
  1897  02BD  0828               	movf	??_update_cursor,w
  1898  02BE  00D6               	movwf	_cursor_pos
  1899                           
  1900                           ;concentration.c: 268:                     break;
  1901  02BF  2B02               	goto	l2124
  1902  02C0                     l2108:	
  1903                           
  1904                           ;concentration.c: 270:                     cursor_pos--;
  1905  02C0  3001               	movlw	1
  1906  02C1  02D6               	subwf	_cursor_pos,f
  1907                           
  1908                           ;concentration.c: 271:             }
  1909  02C2  2B02               	goto	l2124
  1910  02C3                     l2110:	
  1911  02C3  0856               	movf	_cursor_pos,w
  1912  02C4  00A8               	movwf	??_update_cursor
  1913  02C5  01A9               	clrf	??_update_cursor+1
  1914                           
  1915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 1, Range of values is 0 to 0
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte            4     3 (average)
  1921                           ; direct_byte           11     8 (fixed)
  1922                           ; jumptable            260     6 (fixed)
  1923                           ;	Chosen strategy is simple_byte
  1924  02C6  0829               	movf	??_update_cursor+1,w
  1925  02C7  3A00               	xorlw	0	; case 0
  1926  02C8  1903               	skipnz
  1927  02C9  2ACB               	goto	l2406
  1928  02CA  2AC0               	goto	l2108
  1929  02CB                     l2406:	
  1930                           
  1931                           ; Switch size 1, requested type "simple"
  1932                           ; Number of cases is 2, Range of values is 0 to 16
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte            7     4 (average)
  1936                           ; direct_byte           59     8 (fixed)
  1937                           ; jumptable            260     6 (fixed)
  1938                           ;	Chosen strategy is simple_byte
  1939  02CB  0828               	movf	??_update_cursor,w
  1940  02CC  3A00               	xorlw	0	; case 0
  1941  02CD  1903               	skipnz
  1942  02CE  2ABB               	goto	l2106
  1943  02CF  3A10               	xorlw	16	; case 16
  1944  02D0  1903               	skipnz
  1945  02D1  2AB6               	goto	l2104
  1946  02D2  2AC0               	goto	l2108
  1947  02D3                     l2112:	
  1948                           
  1949                           ;concentration.c: 276:                     cursor_pos = 16;
  1950  02D3  3010               	movlw	16
  1951  02D4  00A8               	movwf	??_update_cursor
  1952  02D5  0828               	movf	??_update_cursor,w
  1953  02D6  00D6               	movwf	_cursor_pos
  1954                           
  1955                           ;concentration.c: 277:                     break;
  1956  02D7  2B02               	goto	l2124
  1957  02D8                     l2114:	
  1958                           
  1959                           ;concentration.c: 279:                     cursor_pos = 0;
  1960  02D8  01D6               	clrf	_cursor_pos
  1961                           
  1962                           ;concentration.c: 280:                     break;
  1963  02D9  2B02               	goto	l2124
  1964  02DA                     l2116:	
  1965                           
  1966                           ;concentration.c: 282:                     cursor_pos++;
  1967  02DA  3001               	movlw	1
  1968  02DB  00A8               	movwf	??_update_cursor
  1969  02DC  0828               	movf	??_update_cursor,w
  1970  02DD  07D6               	addwf	_cursor_pos,f
  1971                           
  1972                           ;concentration.c: 283:             }
  1973  02DE  2B02               	goto	l2124
  1974  02DF                     l2118:	
  1975  02DF  0856               	movf	_cursor_pos,w
  1976  02E0  00A8               	movwf	??_update_cursor
  1977  02E1  01A9               	clrf	??_update_cursor+1
  1978                           
  1979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1980                           ; Switch size 1, requested type "simple"
  1981                           ; Number of cases is 1, Range of values is 0 to 0
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte            4     3 (average)
  1985                           ; direct_byte           11     8 (fixed)
  1986                           ; jumptable            260     6 (fixed)
  1987                           ;	Chosen strategy is simple_byte
  1988  02E2  0829               	movf	??_update_cursor+1,w
  1989  02E3  3A00               	xorlw	0	; case 0
  1990  02E4  1903               	skipnz
  1991  02E5  2AE7               	goto	l2408
  1992  02E6  2ADA               	goto	l2116
  1993  02E7                     l2408:	
  1994                           
  1995                           ; Switch size 1, requested type "simple"
  1996                           ; Number of cases is 2, Range of values is 15 to 31
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte            7     4 (average)
  2000                           ; direct_byte           62    11 (fixed)
  2001                           ; jumptable            263     9 (fixed)
  2002                           ;	Chosen strategy is simple_byte
  2003  02E7  0828               	movf	??_update_cursor,w
  2004  02E8  3A0F               	xorlw	15	; case 15
  2005  02E9  1903               	skipnz
  2006  02EA  2AD8               	goto	l2114
  2007  02EB  3A10               	xorlw	16	; case 31
  2008  02EC  1903               	skipnz
  2009  02ED  2AD3               	goto	l2112
  2010  02EE  2ADA               	goto	l2116
  2011  02EF                     l2122:	
  2012  02EF  0827               	movf	update_cursor@direction,w
  2013  02F0  00A8               	movwf	??_update_cursor
  2014  02F1  01A9               	clrf	??_update_cursor+1
  2015                           
  2016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2017                           ; Switch size 1, requested type "simple"
  2018                           ; Number of cases is 1, Range of values is 0 to 0
  2019                           ; switch strategies available:
  2020                           ; Name         Instructions Cycles
  2021                           ; simple_byte            4     3 (average)
  2022                           ; direct_byte           11     8 (fixed)
  2023                           ; jumptable            260     6 (fixed)
  2024                           ;	Chosen strategy is simple_byte
  2025  02F2  0829               	movf	??_update_cursor+1,w
  2026  02F3  3A00               	xorlw	0	; case 0
  2027  02F4  1903               	skipnz
  2028  02F5  2AF7               	goto	l2410
  2029  02F6  2B02               	goto	l2124
  2030  02F7                     l2410:	
  2031                           
  2032                           ; Switch size 1, requested type "simple"
  2033                           ; Number of cases is 3, Range of values is 1 to 3
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte           10     6 (average)
  2037                           ; direct_byte           20    11 (fixed)
  2038                           ; jumptable            263     9 (fixed)
  2039                           ;	Chosen strategy is simple_byte
  2040  02F7  0828               	movf	??_update_cursor,w
  2041  02F8  3A01               	xorlw	1	; case 1
  2042  02F9  1903               	skipnz
  2043  02FA  2AA8               	goto	l2098
  2044  02FB  3A03               	xorlw	3	; case 2
  2045  02FC  1903               	skipnz
  2046  02FD  2AC3               	goto	l2110
  2047  02FE  3A01               	xorlw	1	; case 3
  2048  02FF  1903               	skipnz
  2049  0300  2ADF               	goto	l2118
  2050  0301  2B02               	goto	l2124
  2051  0302                     l2124:	
  2052                           
  2053                           ;concentration.c: 286:     lcd_putch(current_char, gameboard);
  2054  0302  3005               	movlw	5
  2055  0303  00A3               	movwf	lcd_putch@port
  2056  0304  3000               	movlw	0
  2057  0305  00A4               	movwf	lcd_putch@port+1
  2058  0306  0855               	movf	_current_char,w
  2059  0307  120A  118A  27BF  120A  118A  	fcall	_lcd_putch
  2060                           
  2061                           ;concentration.c: 291:     lcd_goto(get_cursor_index(), gameboard);
  2062  030C  3005               	movlw	5
  2063  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2064  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2065  030F  00A3               	movwf	lcd_goto@port
  2066  0310  3000               	movlw	0
  2067  0311  00A4               	movwf	lcd_goto@port+1
  2068  0312  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  2069  0317  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  2070                           
  2071                           ;concentration.c: 292:     get_current_char();
  2072  031C  120A  158A  27F5  120A  118A  	fcall	_get_current_char
  2073  0321                     l2126:	
  2074                           
  2075                           ;concentration.c: 293:     if(cursor_solid == 1) {
  2076  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0323  0354               	decf	_cursor_solid,w
  2079  0324  1D03               	btfss	3,2
  2080  0325  2B27               	goto	u1331
  2081  0326  2B28               	goto	u1330
  2082  0327                     u1331:	
  2083  0327  2B42               	goto	l280
  2084  0328                     u1330:	
  2085  0328                     l2128:	
  2086                           
  2087                           ;concentration.c: 294:         lcd_putch(0x20, gameboard);
  2088  0328  3005               	movlw	5
  2089  0329  00A3               	movwf	lcd_putch@port
  2090  032A  3000               	movlw	0
  2091  032B  00A4               	movwf	lcd_putch@port+1
  2092  032C  3020               	movlw	32
  2093  032D  120A  118A  27BF  120A  118A  	fcall	_lcd_putch
  2094                           
  2095                           ;concentration.c: 295:         lcd_goto(get_cursor_index(), gameboard);
  2096  0332  3005               	movlw	5
  2097  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0335  00A3               	movwf	lcd_goto@port
  2100  0336  3000               	movlw	0
  2101  0337  00A4               	movwf	lcd_goto@port+1
  2102  0338  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  2103  033D  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  2104  0342                     l280:	
  2105  0342  0008               	return
  2106  0343                     __end_of_update_cursor:	
  2107                           
  2108                           	psect	text3
  2109  06F2                     __ptext3:	
  2110 ;; *************** function _toggle_cursor *****************
  2111 ;; Defined at:
  2112 ;;		line 299 in file "concentration.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    4
  2133 ;; This function calls:
  2134 ;;		_get_cursor_index
  2135 ;;		_lcd_goto
  2136 ;;		_lcd_putch
  2137 ;; This function is called by:
  2138 ;;		_update_gameboard_from_input
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _toggle_cursor
  2144  06F2                     _toggle_cursor:	
  2145  06F2                     l2082:	
  2146                           ;incstack = 0
  2147                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2148                           
  2149                           
  2150                           ;concentration.c: 300:     if(cursor_solid == 0) {
  2151  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2152  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2153  06F4  0854               	movf	_cursor_solid,w
  2154  06F5  1D03               	btfss	3,2
  2155  06F6  2EF8               	goto	u1311
  2156  06F7  2EF9               	goto	u1310
  2157  06F8                     u1311:	
  2158  06F8  2F08               	goto	l2088
  2159  06F9                     u1310:	
  2160  06F9                     l2084:	
  2161                           
  2162                           ;concentration.c: 301:         lcd_putch(0x20, gameboard);
  2163  06F9  3005               	movlw	5
  2164  06FA  00A3               	movwf	lcd_putch@port
  2165  06FB  3000               	movlw	0
  2166  06FC  00A4               	movwf	lcd_putch@port+1
  2167  06FD  3020               	movlw	32
  2168  06FE  120A  118A  27BF  120A  118A  	fcall	_lcd_putch
  2169  0703                     l2086:	
  2170                           
  2171                           ;concentration.c: 302:         cursor_solid = 1;
  2172  0703  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0704  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0705  01D4               	clrf	_cursor_solid
  2175  0706  0AD4               	incf	_cursor_solid,f
  2176                           
  2177                           ;concentration.c: 303:     } else {
  2178  0707  2F15               	goto	l2092
  2179  0708                     l2088:	
  2180                           
  2181                           ;concentration.c: 304:         lcd_putch(current_char, gameboard);
  2182  0708  3005               	movlw	5
  2183  0709  00A3               	movwf	lcd_putch@port
  2184  070A  3000               	movlw	0
  2185  070B  00A4               	movwf	lcd_putch@port+1
  2186  070C  0855               	movf	_current_char,w
  2187  070D  120A  118A  27BF  120A  118A  	fcall	_lcd_putch
  2188  0712                     l2090:	
  2189                           
  2190                           ;concentration.c: 305:         cursor_solid = 0;
  2191  0712  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0713  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0714  01D4               	clrf	_cursor_solid
  2194  0715                     l2092:	
  2195                           
  2196                           ;concentration.c: 307:     lcd_goto(get_cursor_index(), gameboard);
  2197  0715  3005               	movlw	5
  2198  0716  00A3               	movwf	lcd_goto@port
  2199  0717  3000               	movlw	0
  2200  0718  00A4               	movwf	lcd_goto@port+1
  2201  0719  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  2202  071E  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  2203  0723                     l285:	
  2204  0723  0008               	return
  2205  0724                     __end_of_toggle_cursor:	
  2206                           
  2207                           	psect	text4
  2208  066E                     __ptext4:	
  2209 ;; *************** function _display_gameboard *****************
  2210 ;; Defined at:
  2211 ;;		line 111 in file "concentration.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  i               1    8[BANK0 ] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         0       1       0       0       0
  2227 ;;      Temps:          0       1       0       0       0
  2228 ;;      Totals:         0       2       0       0       0
  2229 ;;Total ram usage:        2 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    4
  2232 ;; This function calls:
  2233 ;;		_get_cursor_index
  2234 ;;		_lcd_clear
  2235 ;;		_lcd_goto
  2236 ;;		_lcd_putch
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;;		_update_gameboard_from_input
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           
  2244                           ;psect for function _display_gameboard
  2245  066E                     _display_gameboard:	
  2246  066E                     l2044:	
  2247                           ;incstack = 0
  2248                           ; Regs used in _display_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2249                           
  2250                           
  2251                           ;concentration.c: 112:     lcd_clear(gameboard);
  2252  066E  3005               	movlw	5
  2253  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0671  00A3               	movwf	lcd_clear@port
  2256  0672  3000               	movlw	0
  2257  0673  00A4               	movwf	lcd_clear@port+1
  2258  0674  120A  118A  2790  120A  118A  	fcall	_lcd_clear
  2259  0679                     l2046:	
  2260                           
  2261                           ;concentration.c: 113:     char i;;concentration.c: 114:     for(i=0;i<32;i++) {
  2262  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2263  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2264  067B  01A8               	clrf	display_gameboard@i
  2265  067C                     l2052:	
  2266                           
  2267                           ;concentration.c: 115:         if(i == 16) {
  2268  067C  3010               	movlw	16
  2269  067D  0628               	xorwf	display_gameboard@i,w
  2270  067E  1D03               	btfss	3,2
  2271  067F  2E81               	goto	u1251
  2272  0680  2E82               	goto	u1250
  2273  0681                     u1251:	
  2274  0681  2E8C               	goto	l189
  2275  0682                     u1250:	
  2276  0682                     l2054:	
  2277                           
  2278                           ;concentration.c: 116:             lcd_goto(0x40, gameboard);
  2279  0682  3005               	movlw	5
  2280  0683  00A3               	movwf	lcd_goto@port
  2281  0684  3000               	movlw	0
  2282  0685  00A4               	movwf	lcd_goto@port+1
  2283  0686  3040               	movlw	64
  2284  0687  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  2285  068C                     l189:	
  2286                           ;concentration.c: 117:         }
  2287                           
  2288                           
  2289                           ;concentration.c: 118:         lcd_putch(visible[i], gameboard);
  2290  068C  3005               	movlw	5
  2291  068D  1283               	bcf	3,5	;RP0=0, select bank0
  2292  068E  1303               	bcf	3,6	;RP1=0, select bank0
  2293  068F  00A3               	movwf	lcd_putch@port
  2294  0690  3000               	movlw	0
  2295  0691  00A4               	movwf	lcd_putch@port+1
  2296  0692  0828               	movf	display_gameboard@i,w
  2297  0693  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2298  0694  0084               	movwf	4
  2299  0695  1383               	bcf	3,7	;select IRP bank1
  2300  0696  0800               	movf	0,w
  2301  0697  120A  118A  27BF  120A  118A  	fcall	_lcd_putch
  2302  069C                     l2056:	
  2303                           
  2304                           ;concentration.c: 119:     }
  2305  069C  3001               	movlw	1
  2306  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2307  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2308  069F  00A7               	movwf	??_display_gameboard
  2309  06A0  0827               	movf	??_display_gameboard,w
  2310  06A1  07A8               	addwf	display_gameboard@i,f
  2311  06A2                     l2058:	
  2312  06A2  3020               	movlw	32
  2313  06A3  0228               	subwf	display_gameboard@i,w
  2314  06A4  1C03               	skipc
  2315  06A5  2EA7               	goto	u1261
  2316  06A6  2EA8               	goto	u1260
  2317  06A7                     u1261:	
  2318  06A7  2E7C               	goto	l2052
  2319  06A8                     u1260:	
  2320  06A8                     l2060:	
  2321                           
  2322                           ;concentration.c: 120:     lcd_goto(get_cursor_index(), gameboard);
  2323  06A8  3005               	movlw	5
  2324  06A9  00A3               	movwf	lcd_goto@port
  2325  06AA  3000               	movlw	0
  2326  06AB  00A4               	movwf	lcd_goto@port+1
  2327  06AC  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  2328  06B1  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  2329  06B6                     l190:	
  2330  06B6  0008               	return
  2331  06B7                     __end_of_display_gameboard:	
  2332                           
  2333                           	psect	text5
  2334  07BF                     __ptext5:	
  2335 ;; *************** function _lcd_putch *****************
  2336 ;; Defined at:
  2337 ;;		line 136 in file "lcd4bits.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  character       1    wreg     unsigned char 
  2340 ;;  port            2    3[BANK0 ] PTR unsigned char 
  2341 ;;		 -> PORTA(1), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  character       1    6[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2353 ;;      Params:         0       2       0       0       0
  2354 ;;      Locals:         0       1       0       0       0
  2355 ;;      Temps:          0       1       0       0       0
  2356 ;;      Totals:         0       4       0       0       0
  2357 ;;Total ram usage:        4 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    3
  2360 ;; This function calls:
  2361 ;;		_lcd_write
  2362 ;; This function is called by:
  2363 ;;		_display_gameboard
  2364 ;;		_update_cursor
  2365 ;;		_toggle_cursor
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _lcd_putch
  2371  07BF                     _lcd_putch:	
  2372                           
  2373                           ;incstack = 0
  2374                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2375                           ;lcd_putch@character stored from wreg
  2376  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2377  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2378  07C1  00A6               	movwf	lcd_putch@character
  2379  07C2                     l2026:	
  2380                           
  2381                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  2382  07C2  0826               	movf	lcd_putch@character,w
  2383  07C3  00A5               	movwf	??_lcd_putch
  2384  07C4  0825               	movf	??_lcd_putch,w
  2385  07C5  00F5               	movwf	lcd_write@CmdChar
  2386  07C6  0823               	movf	lcd_putch@port,w
  2387  07C7  00F6               	movwf	lcd_write@port
  2388  07C8  0824               	movf	lcd_putch@port+1,w
  2389  07C9  00F7               	movwf	lcd_write@port+1
  2390  07CA  3010               	movlw	16
  2391  07CB  120A  118A  261F  120A  118A  	fcall	_lcd_write
  2392  07D0                     l343:	
  2393  07D0  0008               	return
  2394  07D1                     __end_of_lcd_putch:	
  2395                           
  2396                           	psect	text6
  2397  0724                     __ptext6:	
  2398 ;; *************** function _lcd_puts *****************
  2399 ;; Defined at:
  2400 ;;		line 129 in file "lcd4bits.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  string          1    wreg     PTR const unsigned char 
  2403 ;;		 -> STR_5(16), STR_4(12), STR_3(13), STR_2(17), 
  2404 ;;		 -> STR_1(16), 
  2405 ;;  port            2    3[BANK0 ] PTR unsigned char 
  2406 ;;		 -> PORTD(1), PORTA(1), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  string          1    6[BANK0 ] PTR const unsigned char 
  2409 ;;		 -> STR_5(16), STR_4(12), STR_3(13), STR_2(17), 
  2410 ;;		 -> STR_1(16), 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       2       0       0       0
  2421 ;;      Locals:         0       1       0       0       0
  2422 ;;      Temps:          0       1       0       0       0
  2423 ;;      Totals:         0       4       0       0       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    3
  2427 ;; This function calls:
  2428 ;;		_lcd_write
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _lcd_puts
  2436  0724                     _lcd_puts:	
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2440                           ;lcd_puts@string stored from wreg
  2441  0724  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0725  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0726  00A6               	movwf	lcd_puts@string
  2444  0727                     l2198:	
  2445                           
  2446                           ;lcd4bits.c: 130:     while (*string != 0) {
  2447  0727  2F42               	goto	l2204
  2448  0728                     l2200:	
  2449                           
  2450                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  2451  0728  0826               	movf	lcd_puts@string,w
  2452  0729  0084               	movwf	4
  2453  072A  120A  118A  2343  120A  118A  	fcall	stringdir
  2454  072F  00A5               	movwf	??_lcd_puts
  2455  0730  0825               	movf	??_lcd_puts,w
  2456  0731  00F5               	movwf	lcd_write@CmdChar
  2457  0732  0823               	movf	lcd_puts@port,w
  2458  0733  00F6               	movwf	lcd_write@port
  2459  0734  0824               	movf	lcd_puts@port+1,w
  2460  0735  00F7               	movwf	lcd_write@port+1
  2461  0736  3010               	movlw	16
  2462  0737  120A  118A  261F  120A  118A  	fcall	_lcd_write
  2463  073C                     l2202:	
  2464  073C  3001               	movlw	1
  2465  073D  1283               	bcf	3,5	;RP0=0, select bank0
  2466  073E  1303               	bcf	3,6	;RP1=0, select bank0
  2467  073F  00A5               	movwf	??_lcd_puts
  2468  0740  0825               	movf	??_lcd_puts,w
  2469  0741  07A6               	addwf	lcd_puts@string,f
  2470  0742                     l2204:	
  2471                           
  2472                           ;lcd4bits.c: 130:     while (*string != 0) {
  2473  0742  0826               	movf	lcd_puts@string,w
  2474  0743  0084               	movwf	4
  2475  0744  120A  118A  2343  120A  118A  	fcall	stringdir
  2476  0749  3A00               	xorlw	0
  2477  074A  1D03               	skipz
  2478  074B  2F4D               	goto	u1351
  2479  074C  2F4E               	goto	u1350
  2480  074D                     u1351:	
  2481  074D  2F28               	goto	l2200
  2482  074E                     u1350:	
  2483  074E                     l340:	
  2484  074E  0008               	return
  2485  074F                     __end_of_lcd_puts:	
  2486                           
  2487                           	psect	text7
  2488  057B                     __ptext7:	
  2489 ;; *************** function _lcd_init *****************
  2490 ;; Defined at:
  2491 ;;		line 155 in file "lcd4bits.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  port            2    5[BANK0 ] PTR unsigned char 
  2494 ;;		 -> PORTD(1), PORTA(1), 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       2       0       0       0
  2507 ;;      Locals:         0       0       0       0       0
  2508 ;;      Temps:          0       1       0       0       0
  2509 ;;      Totals:         0       3       0       0       0
  2510 ;;Total ram usage:        3 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    4
  2513 ;; This function calls:
  2514 ;;		_DelayMs
  2515 ;;		_lcd_clear
  2516 ;;		_lcd_write
  2517 ;;		_tmr0_init
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _lcd_init
  2525  057B                     _lcd_init:	
  2526  057B                     l2142:	
  2527                           ;incstack = 0
  2528                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2529                           
  2530                           
  2531                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  2532  057B  120A  158A  27ED  120A  118A  	fcall	_tmr0_init
  2533  0580                     l2144:	
  2534                           
  2535                           ;lcd4bits.c: 158:     *port = 0;
  2536  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0582  0825               	movf	lcd_init@port,w
  2539  0583  0084               	movwf	4
  2540  0584  1783               	bsf	3,7
  2541  0585  1C26               	btfss	lcd_init@port+1,0
  2542  0586  1383               	bcf	3,7
  2543  0587  0180               	clrf	0
  2544  0588                     l2146:	
  2545                           
  2546                           ;lcd4bits.c: 159:     DelayMs(15);
  2547  0588  300F               	movlw	15
  2548  0589  00F3               	movwf	DelayMs@millis
  2549  058A  3000               	movlw	0
  2550  058B  00F4               	movwf	DelayMs@millis+1
  2551  058C  120A  118A  27A8  120A  118A  	fcall	_DelayMs
  2552  0591                     l2148:	
  2553                           
  2554                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  2555  0591  3028               	movlw	40
  2556  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0594  00A7               	movwf	??_lcd_init
  2559  0595  0827               	movf	??_lcd_init,w
  2560  0596  00F5               	movwf	lcd_write@CmdChar
  2561  0597  0825               	movf	lcd_init@port,w
  2562  0598  00F6               	movwf	lcd_write@port
  2563  0599  0826               	movf	lcd_init@port+1,w
  2564  059A  00F7               	movwf	lcd_write@port+1
  2565  059B  3000               	movlw	0
  2566  059C  120A  118A  261F  120A  118A  	fcall	_lcd_write
  2567  05A1                     l2150:	
  2568                           
  2569                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  2570  05A1  300C               	movlw	12
  2571  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2572  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2573  05A4  00A7               	movwf	??_lcd_init
  2574  05A5  0827               	movf	??_lcd_init,w
  2575  05A6  00F5               	movwf	lcd_write@CmdChar
  2576  05A7  0825               	movf	lcd_init@port,w
  2577  05A8  00F6               	movwf	lcd_write@port
  2578  05A9  0826               	movf	lcd_init@port+1,w
  2579  05AA  00F7               	movwf	lcd_write@port+1
  2580  05AB  3000               	movlw	0
  2581  05AC  120A  118A  261F  120A  118A  	fcall	_lcd_write
  2582  05B1                     l2152:	
  2583                           
  2584                           ;lcd4bits.c: 162:     lcd_clear(port);
  2585  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2586  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2587  05B3  0825               	movf	lcd_init@port,w
  2588  05B4  00A3               	movwf	lcd_clear@port
  2589  05B5  0826               	movf	lcd_init@port+1,w
  2590  05B6  00A4               	movwf	lcd_clear@port+1
  2591  05B7  120A  118A  2790  120A  118A  	fcall	_lcd_clear
  2592  05BC                     l2154:	
  2593                           
  2594                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  2595  05BC  3006               	movlw	6
  2596  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2597  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2598  05BF  00A7               	movwf	??_lcd_init
  2599  05C0  0827               	movf	??_lcd_init,w
  2600  05C1  00F5               	movwf	lcd_write@CmdChar
  2601  05C2  0825               	movf	lcd_init@port,w
  2602  05C3  00F6               	movwf	lcd_write@port
  2603  05C4  0826               	movf	lcd_init@port+1,w
  2604  05C5  00F7               	movwf	lcd_write@port+1
  2605  05C6  3000               	movlw	0
  2606  05C7  120A  118A  261F  120A  118A  	fcall	_lcd_write
  2607  05CC                     l349:	
  2608  05CC  0008               	return
  2609  05CD                     __end_of_lcd_init:	
  2610                           
  2611                           	psect	text8
  2612  0FED                     __ptext8:	
  2613 ;; *************** function _tmr0_init *****************
  2614 ;; Defined at:
  2615 ;;		line 72 in file "lcd4bits.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0
  2631 ;;      Temps:          1       0       0       0       0
  2632 ;;      Totals:         1       0       0       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_lcd_init
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _tmr0_init
  2645  0FED                     _tmr0_init:	
  2646  0FED                     l1684:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  2649                           
  2650                           
  2651                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  2652  0FED  30C0               	movlw	192
  2653  0FEE  00F3               	movwf	??_tmr0_init
  2654  0FEF  0873               	movf	??_tmr0_init,w
  2655  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  2656  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  2657  0FF2  0581               	andwf	1,f	;volatile
  2658  0FF3                     l1686:	
  2659                           
  2660                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  2661  0FF3  1501               	bsf	1,2	;volatile
  2662  0FF4                     l314:	
  2663  0FF4  0008               	return
  2664  0FF5                     __end_of_tmr0_init:	
  2665                           
  2666                           	psect	text9
  2667  074F                     __ptext9:	
  2668 ;; *************** function _joystick_init *****************
  2669 ;; Defined at:
  2670 ;;		line 328 in file "concentration.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0
  2687 ;;      Totals:         0       0       0       0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _joystick_init
  2700  074F                     _joystick_init:	
  2701  074F                     l1702:	
  2702                           ;incstack = 0
  2703                           ; Regs used in _joystick_init: [wreg+status,2]
  2704                           
  2705                           
  2706                           ;concentration.c: 329:     joystick_x_pos = 512;
  2707  074F  3000               	movlw	0
  2708  0750  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0751  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0752  00CE               	movwf	_joystick_x_pos
  2711  0753  3002               	movlw	2
  2712  0754  00CF               	movwf	_joystick_x_pos+1
  2713                           
  2714                           ;concentration.c: 330:     joystick_y_pos = 512;
  2715  0755  3000               	movlw	0
  2716  0756  00CC               	movwf	_joystick_y_pos
  2717  0757  3002               	movlw	2
  2718  0758  00CD               	movwf	_joystick_y_pos+1
  2719  0759                     l1704:	
  2720                           
  2721                           ;concentration.c: 331:     PORTB = 0;
  2722  0759  0186               	clrf	6	;volatile
  2723  075A                     l1706:	
  2724                           
  2725                           ;concentration.c: 332:     nRBPU = 0;
  2726  075A  1683               	bsf	3,5	;RP0=1, select bank1
  2727  075B  1303               	bcf	3,6	;RP1=0, select bank1
  2728  075C  1381               	bcf	1,7	;volatile
  2729  075D                     l1708:	
  2730                           
  2731                           ;concentration.c: 333:     WPUB = 0x20;
  2732  075D  3020               	movlw	32
  2733  075E  0095               	movwf	21	;volatile
  2734  075F                     l1710:	
  2735                           
  2736                           ;concentration.c: 334:     TRISB = 0x38;
  2737  075F  3038               	movlw	56
  2738  0760  0086               	movwf	6	;volatile
  2739  0761                     l1712:	
  2740                           
  2741                           ;concentration.c: 335:     ANSELH = 0x0A;
  2742  0761  300A               	movlw	10
  2743  0762  1683               	bsf	3,5	;RP0=1, select bank3
  2744  0763  1703               	bsf	3,6	;RP1=1, select bank3
  2745  0764  0089               	movwf	9	;volatile
  2746  0765                     l1714:	
  2747                           
  2748                           ;concentration.c: 336:     GIE = 1;
  2749  0765  178B               	bsf	11,7	;volatile
  2750  0766                     l1716:	
  2751                           
  2752                           ;concentration.c: 337:     PEIE = 1;
  2753  0766  170B               	bsf	11,6	;volatile
  2754  0767                     l1718:	
  2755                           
  2756                           ;concentration.c: 338:     ADIF = 0;
  2757  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0769  130C               	bcf	12,6	;volatile
  2760  076A                     l1720:	
  2761                           
  2762                           ;concentration.c: 339:     ADIE = 1;
  2763  076A  1683               	bsf	3,5	;RP0=1, select bank1
  2764  076B  1303               	bcf	3,6	;RP1=0, select bank1
  2765  076C  170C               	bsf	12,6	;volatile
  2766  076D                     l1722:	
  2767                           
  2768                           ;concentration.c: 340:     ADCON1 = 0x80;
  2769  076D  3080               	movlw	128
  2770  076E  009F               	movwf	31	;volatile
  2771  076F                     l1724:	
  2772                           
  2773                           ;concentration.c: 341:     ADCON0 = 0xA5;
  2774  076F  30A5               	movlw	165
  2775  0770  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0771  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0772  009F               	movwf	31	;volatile
  2778  0773                     l294:	
  2779  0773  0008               	return
  2780  0774                     __end_of_joystick_init:	
  2781                           
  2782                           	psect	text10
  2783  04B8                     __ptext10:	
  2784 ;; *************** function _gameboard_init *****************
  2785 ;; Defined at:
  2786 ;;		line 142 in file "concentration.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  cursor_init_    1    wreg     unsigned char 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  cursor_init_    1   42[BANK0 ] unsigned char 
  2791 ;;  i               1   43[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       0       0       0
  2802 ;;      Locals:         0       2       0       0       0
  2803 ;;      Temps:          0       1       0       0       0
  2804 ;;      Totals:         0       3       0       0       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    5
  2808 ;; This function calls:
  2809 ;;		_get_current_char
  2810 ;;		_get_cursor_index
  2811 ;;		_lcd_clear
  2812 ;;		_lcd_goto
  2813 ;;		_make_custom_chars
  2814 ;;		_randomize_gameboard
  2815 ;;		_time_init
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _gameboard_init
  2823  04B8                     _gameboard_init:	
  2824                           
  2825                           ;incstack = 0
  2826                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2827                           ;gameboard_init@cursor_init_pos stored from wreg
  2828  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2829  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2830  04BA  00CA               	movwf	gameboard_init@cursor_init_pos
  2831  04BB                     l2156:	
  2832                           
  2833                           ;concentration.c: 143:     time_init();
  2834  04BB  120A  118A  27DE  120A  118A  	fcall	_time_init
  2835  04C0                     l2158:	
  2836                           
  2837                           ;concentration.c: 144:     make_custom_chars();
  2838  04C0  120A  118A  23D3  120A  118A  	fcall	_make_custom_chars
  2839  04C5                     l2160:	
  2840                           
  2841                           ;concentration.c: 145:     char i;;concentration.c: 146:     for(i = 0; i < 32; i++) {
  2842  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2843  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2844  04C7  01CB               	clrf	gameboard_init@i
  2845  04C8                     l2166:	
  2846                           
  2847                           ;concentration.c: 147:         visible[i] = 0xFF;
  2848  04C8  30FF               	movlw	255
  2849  04C9  00C9               	movwf	??_gameboard_init
  2850  04CA  084B               	movf	gameboard_init@i,w
  2851  04CB  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2852  04CC  0084               	movwf	4
  2853  04CD  0849               	movf	??_gameboard_init,w
  2854  04CE  1383               	bcf	3,7	;select IRP bank1
  2855  04CF  0080               	movwf	0
  2856  04D0                     l2168:	
  2857                           
  2858                           ;concentration.c: 148:     }
  2859  04D0  3001               	movlw	1
  2860  04D1  00C9               	movwf	??_gameboard_init
  2861  04D2  0849               	movf	??_gameboard_init,w
  2862  04D3  07CB               	addwf	gameboard_init@i,f
  2863  04D4                     l2170:	
  2864  04D4  3020               	movlw	32
  2865  04D5  024B               	subwf	gameboard_init@i,w
  2866  04D6  1C03               	skipc
  2867  04D7  2CD9               	goto	u1341
  2868  04D8  2CDA               	goto	u1340
  2869  04D9                     u1341:	
  2870  04D9  2CC8               	goto	l2166
  2871  04DA                     u1340:	
  2872  04DA                     l2172:	
  2873                           
  2874                           ;concentration.c: 149:     lcd_clear(gameboard);
  2875  04DA  3005               	movlw	5
  2876  04DB  00A3               	movwf	lcd_clear@port
  2877  04DC  3000               	movlw	0
  2878  04DD  00A4               	movwf	lcd_clear@port+1
  2879  04DE  120A  118A  2790  120A  118A  	fcall	_lcd_clear
  2880  04E3                     l2174:	
  2881                           
  2882                           ;concentration.c: 150:     cursor_pos = cursor_init_pos;
  2883  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2884  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2885  04E5  084A               	movf	gameboard_init@cursor_init_pos,w
  2886  04E6  00C9               	movwf	??_gameboard_init
  2887  04E7  0849               	movf	??_gameboard_init,w
  2888  04E8  00D6               	movwf	_cursor_pos
  2889  04E9                     l2176:	
  2890                           
  2891                           ;concentration.c: 151:     cursor_solid = 0;
  2892  04E9  01D4               	clrf	_cursor_solid
  2893  04EA                     l2178:	
  2894                           
  2895                           ;concentration.c: 152:     get_current_char();
  2896  04EA  120A  158A  27F5  120A  118A  	fcall	_get_current_char
  2897  04EF                     l2180:	
  2898                           
  2899                           ;concentration.c: 153:     delay_loops = 0;
  2900  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2901  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2902  04F1  01D3               	clrf	_delay_loops
  2903  04F2                     l2182:	
  2904                           
  2905                           ;concentration.c: 154:     cursor_movable = 1;
  2906  04F2  01D1               	clrf	_cursor_movable
  2907  04F3  0AD1               	incf	_cursor_movable,f
  2908  04F4                     l2184:	
  2909                           
  2910                           ;concentration.c: 155:     lcd_goto(get_cursor_index(), gameboard);
  2911  04F4  3005               	movlw	5
  2912  04F5  00A3               	movwf	lcd_goto@port
  2913  04F6  3000               	movlw	0
  2914  04F7  00A4               	movwf	lcd_goto@port+1
  2915  04F8  120A  118A  27D1  120A  118A  	fcall	_get_cursor_index
  2916  04FD  120A  118A  2774  120A  118A  	fcall	_lcd_goto
  2917  0502                     l2186:	
  2918                           
  2919                           ;concentration.c: 156:     cursor_move_delay_count = 255;
  2920  0502  30FF               	movlw	255
  2921  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0505  00C9               	movwf	??_gameboard_init
  2924  0506  0849               	movf	??_gameboard_init,w
  2925  0507  00D2               	movwf	_cursor_move_delay_count
  2926  0508                     l2188:	
  2927                           
  2928                           ;concentration.c: 157:     PR2 = 250;
  2929  0508  30FA               	movlw	250
  2930  0509  1683               	bsf	3,5	;RP0=1, select bank1
  2931  050A  1303               	bcf	3,6	;RP1=0, select bank1
  2932  050B  0092               	movwf	18	;volatile
  2933  050C                     l2190:	
  2934                           
  2935                           ;concentration.c: 158:     TMR2IF = 0;
  2936  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2937  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2938  050E  108C               	bcf	12,1	;volatile
  2939  050F                     l2192:	
  2940                           
  2941                           ;concentration.c: 159:     TMR2IE = 1;
  2942  050F  1683               	bsf	3,5	;RP0=1, select bank1
  2943  0510  1303               	bcf	3,6	;RP1=0, select bank1
  2944  0511  148C               	bsf	12,1	;volatile
  2945  0512                     l2194:	
  2946                           
  2947                           ;concentration.c: 160:     T2CON = 0x56;
  2948  0512  3056               	movlw	86
  2949  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0514  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0515  0092               	movwf	18	;volatile
  2952  0516                     l2196:	
  2953                           
  2954                           ;concentration.c: 161:     randomize_gameboard();
  2955  0516  120A  118A  251C  120A  118A  	fcall	_randomize_gameboard
  2956  051B                     l214:	
  2957  051B  0008               	return
  2958  051C                     __end_of_gameboard_init:	
  2959                           
  2960                           	psect	text11
  2961  07DE                     __ptext11:	
  2962 ;; *************** function _time_init *****************
  2963 ;; Defined at:
  2964 ;;		line 316 in file "concentration.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		None
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_gameboard_init
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _time_init
  2994  07DE                     _time_init:	
  2995  07DE                     l1604:	
  2996                           ;incstack = 0
  2997                           ; Regs used in _time_init: []
  2998                           
  2999                           
  3000                           ;concentration.c: 317:     CCP1M3 = 1;
  3001  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3002  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  3003  07E0  1597               	bsf	23,3	;volatile
  3004                           
  3005                           ;concentration.c: 318:     CCP1M2 = 0;
  3006  07E1  1117               	bcf	23,2	;volatile
  3007                           
  3008                           ;concentration.c: 319:     CCP1M1 = 1;
  3009  07E2  1497               	bsf	23,1	;volatile
  3010                           
  3011                           ;concentration.c: 320:     CCP1M0 = 0;
  3012  07E3  1017               	bcf	23,0	;volatile
  3013                           
  3014                           ;concentration.c: 321:     TMR1CS = 0;
  3015  07E4  1090               	bcf	16,1	;volatile
  3016                           
  3017                           ;concentration.c: 322:     T1CKPS0 = 0;
  3018  07E5  1210               	bcf	16,4	;volatile
  3019                           
  3020                           ;concentration.c: 323:     T1CKPS1 = 0;
  3021  07E6  1290               	bcf	16,5	;volatile
  3022                           
  3023                           ;concentration.c: 324:     TMR1GE = 0;
  3024  07E7  1310               	bcf	16,6	;volatile
  3025                           
  3026                           ;concentration.c: 325:     TMR1ON = 1;
  3027  07E8  1410               	bsf	16,0	;volatile
  3028  07E9                     l291:	
  3029  07E9  0008               	return
  3030  07EA                     __end_of_time_init:	
  3031                           
  3032                           	psect	text12
  3033  051C                     __ptext12:	
  3034 ;; *************** function _randomize_gameboard *****************
  3035 ;; Defined at:
  3036 ;;		line 171 in file "concentration.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  used           32    7[BANK0 ] unsigned char [32]
  3041 ;;  random          1   40[BANK0 ] unsigned char 
  3042 ;;  current         1   39[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3052 ;;      Params:         0       0       0       0       0
  3053 ;;      Locals:         0      34       0       0       0
  3054 ;;      Temps:          0       3       0       0       0
  3055 ;;      Totals:         0      37       0       0       0
  3056 ;;Total ram usage:       37 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		_DelayMs
  3061 ;;		___awdiv
  3062 ;; This function is called by:
  3063 ;;		_gameboard_init
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _randomize_gameboard
  3069  051C                     _randomize_gameboard:	
  3070  051C                     l2064:	
  3071                           ;incstack = 0
  3072                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3073                           
  3074                           
  3075                           ;concentration.c: 172:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      +                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  3076  051C  3027               	movlw	randomize_gameboard@used& (0+255)
  3077  051D  0084               	movwf	4
  3078  051E  3020               	movlw	32
  3079  051F  00FF               	movwf	btemp+1
  3080  0520                     u1270:	
  3081  0520  1383               	bcf	3,7	;select IRP bank0
  3082  0521  0180               	clrf	0
  3083  0522  0A84               	incf	4,f
  3084  0523  0BFF               	decfsz	btemp+1,f
  3085  0524  2D20               	goto	u1270
  3086  0525                     l2066:	
  3087                           
  3088                           ;concentration.c: 173:     char current = 0;
  3089  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0527  01C7               	clrf	randomize_gameboard@current
  3092                           
  3093                           ;concentration.c: 174:     char random;;concentration.c: 175:     while(current != 32) {
  3094  0528  2D74               	goto	l2080
  3095  0529                     l2068:	
  3096                           
  3097                           ;concentration.c: 176:         DelayMs(TMR2>>(2+(TMR1%4)));
  3098  0529  0811               	movf	17,w	;volatile
  3099  052A  00A4               	movwf	??_randomize_gameboard
  3100  052B  080E               	movf	14,w	;volatile
  3101  052C  3903               	andlw	3
  3102  052D  3E02               	addlw	2
  3103  052E  3E01               	addlw	1
  3104  052F  2D32               	goto	u1284
  3105  0530                     u1285:	
  3106  0530  1003               	clrc
  3107  0531  0CA4               	rrf	??_randomize_gameboard,f
  3108  0532                     u1284:	
  3109  0532  3EFF               	addlw	-1
  3110  0533  1D03               	skipz
  3111  0534  2D30               	goto	u1285
  3112  0535  0824               	movf	??_randomize_gameboard,w
  3113  0536  00A5               	movwf	??_randomize_gameboard+1
  3114  0537  01A6               	clrf	??_randomize_gameboard+2
  3115  0538  0825               	movf	??_randomize_gameboard+1,w
  3116  0539  00F3               	movwf	DelayMs@millis
  3117  053A  0826               	movf	??_randomize_gameboard+2,w
  3118  053B  00F4               	movwf	DelayMs@millis+1
  3119  053C  120A  118A  27A8  120A  118A  	fcall	_DelayMs
  3120  0541                     l2070:	
  3121                           
  3122                           ;concentration.c: 177:         random = TMR1 % 32;
  3123  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0542  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0543  080E               	movf	14,w	;volatile
  3126  0544  391F               	andlw	31
  3127  0545  00A4               	movwf	??_randomize_gameboard
  3128  0546  0824               	movf	??_randomize_gameboard,w
  3129  0547  00C8               	movwf	randomize_gameboard@random
  3130  0548                     l2072:	
  3131                           
  3132                           ;concentration.c: 178:         if(used[random] == 0) {
  3133  0548  0848               	movf	randomize_gameboard@random,w
  3134  0549  3E27               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3135  054A  0084               	movwf	4
  3136  054B  1383               	bcf	3,7	;select IRP bank0
  3137  054C  0800               	movf	0,w
  3138  054D  1D03               	btfss	3,2
  3139  054E  2D50               	goto	u1291
  3140  054F  2D51               	goto	u1290
  3141  0550                     u1291:	
  3142  0550  2D74               	goto	l2080
  3143  0551                     u1290:	
  3144  0551                     l2074:	
  3145                           
  3146                           ;concentration.c: 179:             used[random] = 1;
  3147  0551  0848               	movf	randomize_gameboard@random,w
  3148  0552  3E27               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3149  0553  0084               	movwf	4
  3150  0554  0180               	clrf	0
  3151  0555  0A80               	incf	0,f
  3152  0556                     l2076:	
  3153                           
  3154                           ;concentration.c: 180:             board[random] = current/4;
  3155  0556  3004               	movlw	4
  3156  0557  00F3               	movwf	___awdiv@divisor
  3157  0558  3000               	movlw	0
  3158  0559  00F4               	movwf	___awdiv@divisor+1
  3159  055A  0847               	movf	randomize_gameboard@current,w
  3160  055B  00A4               	movwf	??_randomize_gameboard
  3161  055C  01A5               	clrf	??_randomize_gameboard+1
  3162  055D  0824               	movf	??_randomize_gameboard,w
  3163  055E  00F5               	movwf	___awdiv@dividend
  3164  055F  0825               	movf	??_randomize_gameboard+1,w
  3165  0560  00F6               	movwf	___awdiv@dividend+1
  3166  0561  120A  118A  244F  120A  118A  	fcall	___awdiv
  3167  0566  0873               	movf	?___awdiv,w
  3168  0567  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0568  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0569  00A6               	movwf	??_randomize_gameboard+2
  3171  056A  0848               	movf	randomize_gameboard@random,w
  3172  056B  3EC0               	addlw	(low (_board| 0))& (0+255)
  3173  056C  0084               	movwf	4
  3174  056D  0826               	movf	??_randomize_gameboard+2,w
  3175  056E  1383               	bcf	3,7	;select IRP bank1
  3176  056F  0080               	movwf	0
  3177  0570                     l2078:	
  3178                           
  3179                           ;concentration.c: 181:             current++;
  3180  0570  3001               	movlw	1
  3181  0571  00A4               	movwf	??_randomize_gameboard
  3182  0572  0824               	movf	??_randomize_gameboard,w
  3183  0573  07C7               	addwf	randomize_gameboard@current,f
  3184  0574                     l2080:	
  3185                           
  3186                           ;concentration.c: 175:     while(current != 32) {
  3187  0574  3020               	movlw	32
  3188  0575  0647               	xorwf	randomize_gameboard@current,w
  3189  0576  1D03               	btfss	3,2
  3190  0577  2D79               	goto	u1301
  3191  0578  2D7A               	goto	u1300
  3192  0579                     u1301:	
  3193  0579  2D29               	goto	l2068
  3194  057A                     u1300:	
  3195  057A                     l227:	
  3196  057A  0008               	return
  3197  057B                     __end_of_randomize_gameboard:	
  3198                           
  3199                           	psect	text13
  3200  044F                     __ptext13:	
  3201 ;; *************** function ___awdiv *****************
  3202 ;; Defined at:
  3203 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  divisor         2    3[COMMON] int 
  3206 ;;  dividend        2    5[COMMON] int 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  quotient        2    2[BANK0 ] int 
  3209 ;;  sign            1    1[BANK0 ] unsigned char 
  3210 ;;  counter         1    0[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  2    3[COMMON] int 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         4       0       0       0       0
  3221 ;;      Locals:         0       4       0       0       0
  3222 ;;      Temps:          1       0       0       0       0
  3223 ;;      Totals:         5       4       0       0       0
  3224 ;;Total ram usage:        9 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_randomize_gameboard
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function ___awdiv
  3236  044F                     ___awdiv:	
  3237  044F                     l1540:	
  3238                           ;incstack = 0
  3239                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3240                           
  3241  044F  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0450  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0451  01A1               	clrf	___awdiv@sign
  3244  0452                     l1542:	
  3245  0452  1FF4               	btfss	___awdiv@divisor+1,7
  3246  0453  2C55               	goto	u681
  3247  0454  2C56               	goto	u680
  3248  0455                     u681:	
  3249  0455  2C5D               	goto	l1548
  3250  0456                     u680:	
  3251  0456                     l1544:	
  3252  0456  09F3               	comf	___awdiv@divisor,f
  3253  0457  09F4               	comf	___awdiv@divisor+1,f
  3254  0458  0AF3               	incf	___awdiv@divisor,f
  3255  0459  1903               	skipnz
  3256  045A  0AF4               	incf	___awdiv@divisor+1,f
  3257  045B                     l1546:	
  3258  045B  01A1               	clrf	___awdiv@sign
  3259  045C  0AA1               	incf	___awdiv@sign,f
  3260  045D                     l1548:	
  3261  045D  1FF6               	btfss	___awdiv@dividend+1,7
  3262  045E  2C60               	goto	u691
  3263  045F  2C61               	goto	u690
  3264  0460                     u691:	
  3265  0460  2C6A               	goto	l1554
  3266  0461                     u690:	
  3267  0461                     l1550:	
  3268  0461  09F5               	comf	___awdiv@dividend,f
  3269  0462  09F6               	comf	___awdiv@dividend+1,f
  3270  0463  0AF5               	incf	___awdiv@dividend,f
  3271  0464  1903               	skipnz
  3272  0465  0AF6               	incf	___awdiv@dividend+1,f
  3273  0466                     l1552:	
  3274  0466  3001               	movlw	1
  3275  0467  00F7               	movwf	??___awdiv
  3276  0468  0877               	movf	??___awdiv,w
  3277  0469  06A1               	xorwf	___awdiv@sign,f
  3278  046A                     l1554:	
  3279  046A  01A2               	clrf	___awdiv@quotient
  3280  046B  01A3               	clrf	___awdiv@quotient+1
  3281  046C                     l1556:	
  3282  046C  0873               	movf	___awdiv@divisor,w
  3283  046D  0474               	iorwf	___awdiv@divisor+1,w
  3284  046E  1903               	btfsc	3,2
  3285  046F  2C71               	goto	u701
  3286  0470  2C72               	goto	u700
  3287  0471                     u701:	
  3288  0471  2CA9               	goto	l1576
  3289  0472                     u700:	
  3290  0472                     l1558:	
  3291  0472  01A0               	clrf	___awdiv@counter
  3292  0473  0AA0               	incf	___awdiv@counter,f
  3293  0474  2C80               	goto	l1564
  3294  0475                     l1560:	
  3295  0475  3001               	movlw	1
  3296  0476                     u715:	
  3297  0476  1003               	clrc
  3298  0477  0DF3               	rlf	___awdiv@divisor,f
  3299  0478  0DF4               	rlf	___awdiv@divisor+1,f
  3300  0479  3EFF               	addlw	-1
  3301  047A  1D03               	skipz
  3302  047B  2C76               	goto	u715
  3303  047C                     l1562:	
  3304  047C  3001               	movlw	1
  3305  047D  00F7               	movwf	??___awdiv
  3306  047E  0877               	movf	??___awdiv,w
  3307  047F  07A0               	addwf	___awdiv@counter,f
  3308  0480                     l1564:	
  3309  0480  1FF4               	btfss	___awdiv@divisor+1,7
  3310  0481  2C83               	goto	u721
  3311  0482  2C84               	goto	u720
  3312  0483                     u721:	
  3313  0483  2C75               	goto	l1560
  3314  0484                     u720:	
  3315  0484                     l1566:	
  3316  0484  3001               	movlw	1
  3317  0485                     u735:	
  3318  0485  1003               	clrc
  3319  0486  0DA2               	rlf	___awdiv@quotient,f
  3320  0487  0DA3               	rlf	___awdiv@quotient+1,f
  3321  0488  3EFF               	addlw	-1
  3322  0489  1D03               	skipz
  3323  048A  2C85               	goto	u735
  3324  048B  0874               	movf	___awdiv@divisor+1,w
  3325  048C  0276               	subwf	___awdiv@dividend+1,w
  3326  048D  1D03               	skipz
  3327  048E  2C91               	goto	u745
  3328  048F  0873               	movf	___awdiv@divisor,w
  3329  0490  0275               	subwf	___awdiv@dividend,w
  3330  0491                     u745:	
  3331  0491  1C03               	skipc
  3332  0492  2C94               	goto	u741
  3333  0493  2C95               	goto	u740
  3334  0494                     u741:	
  3335  0494  2C9C               	goto	l1572
  3336  0495                     u740:	
  3337  0495                     l1568:	
  3338  0495  0873               	movf	___awdiv@divisor,w
  3339  0496  02F5               	subwf	___awdiv@dividend,f
  3340  0497  0874               	movf	___awdiv@divisor+1,w
  3341  0498  1C03               	skipc
  3342  0499  03F6               	decf	___awdiv@dividend+1,f
  3343  049A  02F6               	subwf	___awdiv@dividend+1,f
  3344  049B                     l1570:	
  3345  049B  1422               	bsf	___awdiv@quotient,0
  3346  049C                     l1572:	
  3347  049C  3001               	movlw	1
  3348  049D                     u755:	
  3349  049D  1003               	clrc
  3350  049E  0CF4               	rrf	___awdiv@divisor+1,f
  3351  049F  0CF3               	rrf	___awdiv@divisor,f
  3352  04A0  3EFF               	addlw	-1
  3353  04A1  1D03               	skipz
  3354  04A2  2C9D               	goto	u755
  3355  04A3                     l1574:	
  3356  04A3  3001               	movlw	1
  3357  04A4  02A0               	subwf	___awdiv@counter,f
  3358  04A5  1D03               	btfss	3,2
  3359  04A6  2CA8               	goto	u761
  3360  04A7  2CA9               	goto	u760
  3361  04A8                     u761:	
  3362  04A8  2C84               	goto	l1566
  3363  04A9                     u760:	
  3364  04A9                     l1576:	
  3365  04A9  0821               	movf	___awdiv@sign,w
  3366  04AA  1903               	btfsc	3,2
  3367  04AB  2CAD               	goto	u771
  3368  04AC  2CAE               	goto	u770
  3369  04AD                     u771:	
  3370  04AD  2CB3               	goto	l1580
  3371  04AE                     u770:	
  3372  04AE                     l1578:	
  3373  04AE  09A2               	comf	___awdiv@quotient,f
  3374  04AF  09A3               	comf	___awdiv@quotient+1,f
  3375  04B0  0AA2               	incf	___awdiv@quotient,f
  3376  04B1  1903               	skipnz
  3377  04B2  0AA3               	incf	___awdiv@quotient+1,f
  3378  04B3                     l1580:	
  3379  04B3  0823               	movf	___awdiv@quotient+1,w
  3380  04B4  00F4               	movwf	?___awdiv+1
  3381  04B5  0822               	movf	___awdiv@quotient,w
  3382  04B6  00F3               	movwf	?___awdiv
  3383  04B7                     l593:	
  3384  04B7  0008               	return
  3385  04B8                     __end_of___awdiv:	
  3386                           
  3387                           	psect	text14
  3388  03D3                     __ptext14:	
  3389 ;; *************** function _make_custom_chars *****************
  3390 ;; Defined at:
  3391 ;;		line 123 in file "concentration.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0
  3407 ;;      Temps:          0       1       0       0       0
  3408 ;;      Totals:         0       1       0       0       0
  3409 ;;Total ram usage:        1 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    4
  3412 ;; This function calls:
  3413 ;;		_lcd_set_custom_char
  3414 ;; This function is called by:
  3415 ;;		_gameboard_init
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _make_custom_chars
  3421  03D3                     _make_custom_chars:	
  3422  03D3                     l2062:	
  3423                           ;incstack = 0
  3424                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3425                           
  3426                           
  3427                           ;concentration.c: 124:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0
      +                          E, 0x00};;concentration.c: 125:     lcd_set_custom_char(smile, 0x00, gameboard);
  3428  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3429  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3430  03D5  01A3               	clrf	lcd_set_custom_char@cg_address
  3431  03D6  3005               	movlw	5
  3432  03D7  00A4               	movwf	lcd_set_custom_char@port
  3433  03D8  3000               	movlw	0
  3434  03D9  00A5               	movwf	lcd_set_custom_char@port+1
  3435  03DA  3039               	movlw	(low ((make_custom_chars@smile-__stringbase)| (0+32768)))& (0+255)
  3436  03DB  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3437                           
  3438                           ;concentration.c: 126:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0
      +                          x00, 0x00};;concentration.c: 127:     lcd_set_custom_char(diamond, 0x01, gameboard);
  3439  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3440  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3441  03E2  01A3               	clrf	lcd_set_custom_char@cg_address
  3442  03E3  0AA3               	incf	lcd_set_custom_char@cg_address,f
  3443  03E4  3005               	movlw	5
  3444  03E5  00A4               	movwf	lcd_set_custom_char@port
  3445  03E6  3000               	movlw	0
  3446  03E7  00A5               	movwf	lcd_set_custom_char@port+1
  3447  03E8  3031               	movlw	(low ((make_custom_chars@diamond-__stringbase)| (0+32768)))& (0+255)
  3448  03E9  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3449                           
  3450                           ;concentration.c: 128:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x00};;concentration.c: 129:     lcd_set_custom_char(heart, 0x02, gameboard);
  3451  03EE  3002               	movlw	2
  3452  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  3453  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  3454  03F1  00AA               	movwf	??_make_custom_chars
  3455  03F2  082A               	movf	??_make_custom_chars,w
  3456  03F3  00A3               	movwf	lcd_set_custom_char@cg_address
  3457  03F4  3005               	movlw	5
  3458  03F5  00A4               	movwf	lcd_set_custom_char@port
  3459  03F6  3000               	movlw	0
  3460  03F7  00A5               	movwf	lcd_set_custom_char@port+1
  3461  03F8  3029               	movlw	(low ((make_custom_chars@heart-__stringbase)| (0+32768)))& (0+255)
  3462  03F9  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3463                           
  3464                           ;concentration.c: 130:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x0E};;concentration.c: 131:     lcd_set_custom_char(spade, 0x03, gameboard);
  3465  03FE  3003               	movlw	3
  3466  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0400  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0401  00AA               	movwf	??_make_custom_chars
  3469  0402  082A               	movf	??_make_custom_chars,w
  3470  0403  00A3               	movwf	lcd_set_custom_char@cg_address
  3471  0404  3005               	movlw	5
  3472  0405  00A4               	movwf	lcd_set_custom_char@port
  3473  0406  3000               	movlw	0
  3474  0407  00A5               	movwf	lcd_set_custom_char@port+1
  3475  0408  3021               	movlw	(low ((make_custom_chars@spade-__stringbase)| (0+32768)))& (0+255)
  3476  0409  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3477                           
  3478                           ;concentration.c: 132:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04
      +                          , 0x0E};;concentration.c: 133:     lcd_set_custom_char(club, 0x04, gameboard);
  3479  040E  3004               	movlw	4
  3480  040F  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0410  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0411  00AA               	movwf	??_make_custom_chars
  3483  0412  082A               	movf	??_make_custom_chars,w
  3484  0413  00A3               	movwf	lcd_set_custom_char@cg_address
  3485  0414  3005               	movlw	5
  3486  0415  00A4               	movwf	lcd_set_custom_char@port
  3487  0416  3000               	movlw	0
  3488  0417  00A5               	movwf	lcd_set_custom_char@port+1
  3489  0418  3019               	movlw	(low ((make_custom_chars@club-__stringbase)| (0+32768)))& (0+255)
  3490  0419  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3491                           
  3492                           ;concentration.c: 134:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0
      +                          E, 0x00};;concentration.c: 135:     lcd_set_custom_char(skull, 0x05, gameboard);
  3493  041E  3005               	movlw	5
  3494  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0421  00AA               	movwf	??_make_custom_chars
  3497  0422  082A               	movf	??_make_custom_chars,w
  3498  0423  00A3               	movwf	lcd_set_custom_char@cg_address
  3499  0424  3005               	movlw	5
  3500  0425  00A4               	movwf	lcd_set_custom_char@port
  3501  0426  3000               	movlw	0
  3502  0427  00A5               	movwf	lcd_set_custom_char@port+1
  3503  0428  3011               	movlw	(low ((make_custom_chars@skull-__stringbase)| (0+32768)))& (0+255)
  3504  0429  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3505                           
  3506                           ;concentration.c: 136:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 
      +                          0x05};;concentration.c: 137:     lcd_set_custom_char(RH, 0x06, gameboard);
  3507  042E  3006               	movlw	6
  3508  042F  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0430  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0431  00AA               	movwf	??_make_custom_chars
  3511  0432  082A               	movf	??_make_custom_chars,w
  3512  0433  00A3               	movwf	lcd_set_custom_char@cg_address
  3513  0434  3005               	movlw	5
  3514  0435  00A4               	movwf	lcd_set_custom_char@port
  3515  0436  3000               	movlw	0
  3516  0437  00A5               	movwf	lcd_set_custom_char@port+1
  3517  0438  3009               	movlw	(low ((make_custom_chars@RH-__stringbase)| (0+32768)))& (0+255)
  3518  0439  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3519                           
  3520                           ;concentration.c: 138:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02,
      +                           0x03};;concentration.c: 139:     lcd_set_custom_char(PIC, 0x07, gameboard);
  3521  043E  3007               	movlw	7
  3522  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0441  00AA               	movwf	??_make_custom_chars
  3525  0442  082A               	movf	??_make_custom_chars,w
  3526  0443  00A3               	movwf	lcd_set_custom_char@cg_address
  3527  0444  3005               	movlw	5
  3528  0445  00A4               	movwf	lcd_set_custom_char@port
  3529  0446  3000               	movlw	0
  3530  0447  00A5               	movwf	lcd_set_custom_char@port+1
  3531  0448  3001               	movlw	(low ((make_custom_chars@PIC-__stringbase)| (0+32768)))& (0+255)
  3532  0449  120A  118A  25CD  120A  118A  	fcall	_lcd_set_custom_char
  3533  044E                     l209:	
  3534  044E  0008               	return
  3535  044F                     __end_of_make_custom_chars:	
  3536                           
  3537                           	psect	text15
  3538  05CD                     __ptext15:	
  3539 ;; *************** function _lcd_set_custom_char *****************
  3540 ;; Defined at:
  3541 ;;		line 166 in file "lcd4bits.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  data            1    wreg     PTR const unsigned char 
  3544 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  3545 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  3546 ;;  cg_address      1    3[BANK0 ] unsigned char 
  3547 ;;  port            2    4[BANK0 ] PTR unsigned char 
  3548 ;;		 -> PORTA(1), 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  data            1    9[BANK0 ] PTR const unsigned char 
  3551 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  3552 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  3553 ;;  row             1    8[BANK0 ] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       3       0       0       0
  3564 ;;      Locals:         0       2       0       0       0
  3565 ;;      Temps:          0       2       0       0       0
  3566 ;;      Totals:         0       7       0       0       0
  3567 ;;Total ram usage:        7 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    3
  3570 ;; This function calls:
  3571 ;;		_lcd_write
  3572 ;; This function is called by:
  3573 ;;		_make_custom_chars
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           
  3578                           ;psect for function _lcd_set_custom_char
  3579  05CD                     _lcd_set_custom_char:	
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3583                           ;lcd_set_custom_char@data stored from wreg
  3584  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3585  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3586  05CF  00A9               	movwf	lcd_set_custom_char@data
  3587  05D0                     l2028:	
  3588                           
  3589                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  3590  05D0  01A8               	clrf	lcd_set_custom_char@row
  3591  05D1                     l2034:	
  3592                           
  3593                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  3594  05D1  0823               	movf	lcd_set_custom_char@cg_address,w
  3595  05D2  00A6               	movwf	??_lcd_set_custom_char
  3596  05D3  3002               	movlw	2
  3597  05D4                     u1235:	
  3598  05D4  1003               	clrc
  3599  05D5  0DA6               	rlf	??_lcd_set_custom_char,f
  3600  05D6  3EFF               	addlw	-1
  3601  05D7  1D03               	skipz
  3602  05D8  2DD4               	goto	u1235
  3603  05D9  1003               	clrc
  3604  05DA  0D26               	rlf	??_lcd_set_custom_char,w
  3605  05DB  0428               	iorwf	lcd_set_custom_char@row,w
  3606  05DC  3840               	iorlw	64
  3607  05DD  00A7               	movwf	??_lcd_set_custom_char+1
  3608  05DE  0827               	movf	??_lcd_set_custom_char+1,w
  3609  05DF  00F5               	movwf	lcd_write@CmdChar
  3610  05E0  0824               	movf	lcd_set_custom_char@port,w
  3611  05E1  00F6               	movwf	lcd_write@port
  3612  05E2  0825               	movf	lcd_set_custom_char@port+1,w
  3613  05E3  00F7               	movwf	lcd_write@port+1
  3614  05E4  3000               	movlw	0
  3615  05E5  120A  118A  261F  120A  118A  	fcall	_lcd_write
  3616                           
  3617                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  3618  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3619  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3620  05EC  0829               	movf	lcd_set_custom_char@data,w
  3621  05ED  0084               	movwf	4
  3622  05EE  120A  118A  2343  120A  118A  	fcall	stringdir
  3623  05F3  00A6               	movwf	??_lcd_set_custom_char
  3624  05F4  0826               	movf	??_lcd_set_custom_char,w
  3625  05F5  00F5               	movwf	lcd_write@CmdChar
  3626  05F6  0824               	movf	lcd_set_custom_char@port,w
  3627  05F7  00F6               	movwf	lcd_write@port
  3628  05F8  0825               	movf	lcd_set_custom_char@port+1,w
  3629  05F9  00F7               	movwf	lcd_write@port+1
  3630  05FA  3010               	movlw	16
  3631  05FB  120A  118A  261F  120A  118A  	fcall	_lcd_write
  3632  0600                     l2036:	
  3633                           
  3634                           ;lcd4bits.c: 171:         *data++;
  3635  0600  3001               	movlw	1
  3636  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0603  00A6               	movwf	??_lcd_set_custom_char
  3639  0604  0826               	movf	??_lcd_set_custom_char,w
  3640  0605  07A9               	addwf	lcd_set_custom_char@data,f
  3641  0606                     l2038:	
  3642                           
  3643                           ;lcd4bits.c: 172:     }
  3644  0606  3001               	movlw	1
  3645  0607  00A6               	movwf	??_lcd_set_custom_char
  3646  0608  0826               	movf	??_lcd_set_custom_char,w
  3647  0609  07A8               	addwf	lcd_set_custom_char@row,f
  3648  060A                     l2040:	
  3649  060A  3008               	movlw	8
  3650  060B  0228               	subwf	lcd_set_custom_char@row,w
  3651  060C  1C03               	skipc
  3652  060D  2E0F               	goto	u1241
  3653  060E  2E10               	goto	u1240
  3654  060F                     u1241:	
  3655  060F  2DD1               	goto	l2034
  3656  0610                     u1240:	
  3657  0610                     l2042:	
  3658                           
  3659                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  3660  0610  3080               	movlw	128
  3661  0611  00A6               	movwf	??_lcd_set_custom_char
  3662  0612  0826               	movf	??_lcd_set_custom_char,w
  3663  0613  00F5               	movwf	lcd_write@CmdChar
  3664  0614  0824               	movf	lcd_set_custom_char@port,w
  3665  0615  00F6               	movwf	lcd_write@port
  3666  0616  0825               	movf	lcd_set_custom_char@port+1,w
  3667  0617  00F7               	movwf	lcd_write@port+1
  3668  0618  3000               	movlw	0
  3669  0619  120A  118A  261F  120A  118A  	fcall	_lcd_write
  3670  061E                     l354:	
  3671  061E  0008               	return
  3672  061F                     __end_of_lcd_set_custom_char:	
  3673                           
  3674                           	psect	text16
  3675  0774                     __ptext16:	
  3676 ;; *************** function _lcd_goto *****************
  3677 ;; Defined at:
  3678 ;;		line 146 in file "lcd4bits.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  position        1    wreg     unsigned char 
  3681 ;;  port            2    3[BANK0 ] PTR unsigned char 
  3682 ;;		 -> PORTD(1), PORTA(1), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  position        1    6[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       2       0       0       0
  3695 ;;      Locals:         0       1       0       0       0
  3696 ;;      Temps:          0       1       0       0       0
  3697 ;;      Totals:         0       4       0       0       0
  3698 ;;Total ram usage:        4 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		_DelayMs
  3703 ;;		_lcd_write
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;;		_display_gameboard
  3707 ;;		_gameboard_init
  3708 ;;		_update_cursor
  3709 ;;		_toggle_cursor
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _lcd_goto
  3715  0774                     _lcd_goto:	
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3719                           ;lcd_goto@position stored from wreg
  3720  0774  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0775  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0776  00A6               	movwf	lcd_goto@position
  3723  0777                     l2022:	
  3724                           
  3725                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  3726  0777  0826               	movf	lcd_goto@position,w
  3727  0778  3E80               	addlw	128
  3728  0779  00A5               	movwf	??_lcd_goto
  3729  077A  0825               	movf	??_lcd_goto,w
  3730  077B  00F5               	movwf	lcd_write@CmdChar
  3731  077C  0823               	movf	lcd_goto@port,w
  3732  077D  00F6               	movwf	lcd_write@port
  3733  077E  0824               	movf	lcd_goto@port+1,w
  3734  077F  00F7               	movwf	lcd_write@port+1
  3735  0780  3000               	movlw	0
  3736  0781  120A  118A  261F  120A  118A  	fcall	_lcd_write
  3737  0786                     l2024:	
  3738                           
  3739                           ;lcd4bits.c: 149:     DelayMs(2);
  3740  0786  3002               	movlw	2
  3741  0787  00F3               	movwf	DelayMs@millis
  3742  0788  3000               	movlw	0
  3743  0789  00F4               	movwf	DelayMs@millis+1
  3744  078A  120A  118A  27A8  120A  118A  	fcall	_DelayMs
  3745  078F                     l346:	
  3746  078F  0008               	return
  3747  0790                     __end_of_lcd_goto:	
  3748                           
  3749                           	psect	text17
  3750  0790                     __ptext17:	
  3751 ;; *************** function _lcd_clear *****************
  3752 ;; Defined at:
  3753 ;;		line 123 in file "lcd4bits.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  port            2    3[BANK0 ] PTR unsigned char 
  3756 ;;		 -> PORTD(1), PORTA(1), 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       2       0       0       0
  3769 ;;      Locals:         0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0
  3771 ;;      Totals:         0       2       0       0       0
  3772 ;;Total ram usage:        2 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    3
  3775 ;; This function calls:
  3776 ;;		_DelayMs
  3777 ;;		_lcd_write
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;;		_display_gameboard
  3781 ;;		_gameboard_init
  3782 ;;		_lcd_init
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _lcd_clear
  3788  0790                     _lcd_clear:	
  3789  0790                     l2018:	
  3790                           ;incstack = 0
  3791                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3792                           
  3793                           
  3794                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  3795  0790  01F5               	clrf	lcd_write@CmdChar
  3796  0791  0AF5               	incf	lcd_write@CmdChar,f
  3797  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3798  0793  1303               	bcf	3,6	;RP1=0, select bank0
  3799  0794  0823               	movf	lcd_clear@port,w
  3800  0795  00F6               	movwf	lcd_write@port
  3801  0796  0824               	movf	lcd_clear@port+1,w
  3802  0797  00F7               	movwf	lcd_write@port+1
  3803  0798  3000               	movlw	0
  3804  0799  120A  118A  261F  120A  118A  	fcall	_lcd_write
  3805  079E                     l2020:	
  3806                           
  3807                           ;lcd4bits.c: 125:     DelayMs(2);
  3808  079E  3002               	movlw	2
  3809  079F  00F3               	movwf	DelayMs@millis
  3810  07A0  3000               	movlw	0
  3811  07A1  00F4               	movwf	DelayMs@millis+1
  3812  07A2  120A  118A  27A8  120A  118A  	fcall	_DelayMs
  3813  07A7                     l334:	
  3814  07A7  0008               	return
  3815  07A8                     __end_of_lcd_clear:	
  3816                           
  3817                           	psect	text18
  3818  061F                     __ptext18:	
  3819 ;; *************** function _lcd_write *****************
  3820 ;; Defined at:
  3821 ;;		line 110 in file "lcd4bits.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  mode            1    wreg     unsigned char 
  3824 ;;  CmdChar         1    5[COMMON] unsigned char 
  3825 ;;  port            2    6[COMMON] PTR unsigned char 
  3826 ;;		 -> PORTD(1), PORTA(1), 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  mode            1    2[BANK0 ] unsigned char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         3       0       0       0       0
  3839 ;;      Locals:         0       1       0       0       0
  3840 ;;      Temps:          0       2       0       0       0
  3841 ;;      Totals:         3       3       0       0       0
  3842 ;;Total ram usage:        6 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    2
  3845 ;; This function calls:
  3846 ;;		_Delay20us
  3847 ;; This function is called by:
  3848 ;;		_lcd_clear
  3849 ;;		_lcd_puts
  3850 ;;		_lcd_putch
  3851 ;;		_lcd_goto
  3852 ;;		_lcd_init
  3853 ;;		_lcd_set_custom_char
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _lcd_write
  3859  061F                     _lcd_write:	
  3860                           
  3861                           ;incstack = 0
  3862                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3863                           ;lcd_write@mode stored from wreg
  3864  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0621  00A2               	movwf	lcd_write@mode
  3867  0622                     l2008:	
  3868                           
  3869                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  3870  0622  0875               	movf	lcd_write@CmdChar,w
  3871  0623  00A0               	movwf	??_lcd_write
  3872  0624  3004               	movlw	4
  3873  0625                     u1225:	
  3874  0625  1003               	clrc
  3875  0626  0CA0               	rrf	??_lcd_write,f
  3876  0627  3EFF               	addlw	-1
  3877  0628  1D03               	skipz
  3878  0629  2E25               	goto	u1225
  3879  062A  0820               	movf	??_lcd_write,w
  3880  062B  3E20               	addlw	32
  3881  062C  0422               	iorwf	lcd_write@mode,w
  3882  062D  00A1               	movwf	??_lcd_write+1
  3883  062E  0876               	movf	lcd_write@port,w
  3884  062F  0084               	movwf	4
  3885  0630  1783               	bsf	3,7
  3886  0631  1C77               	btfss	lcd_write@port+1,0
  3887  0632  1383               	bcf	3,7
  3888  0633  0821               	movf	??_lcd_write+1,w
  3889  0634  0080               	movwf	0
  3890  0635                     l2010:	
  3891                           
  3892                           ;lcd4bits.c: 112:     Delay20us();
  3893  0635  120A  118A  27EA  120A  118A  	fcall	_Delay20us
  3894  063A                     l2012:	
  3895                           
  3896                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  3897  063A  0876               	movf	lcd_write@port,w
  3898  063B  0084               	movwf	4
  3899  063C  1783               	bsf	3,7
  3900  063D  1C77               	btfss	lcd_write@port+1,0
  3901  063E  1383               	bcf	3,7
  3902  063F  0800               	movf	0,w
  3903  0640  39DF               	andlw	223
  3904  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0643  00A0               	movwf	??_lcd_write
  3907  0644  0876               	movf	lcd_write@port,w
  3908  0645  0084               	movwf	4
  3909  0646  1783               	bsf	3,7
  3910  0647  1C77               	btfss	lcd_write@port+1,0
  3911  0648  1383               	bcf	3,7
  3912  0649  0820               	movf	??_lcd_write,w
  3913  064A  0080               	movwf	0
  3914  064B                     l2014:	
  3915                           
  3916                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  3917  064B  0875               	movf	lcd_write@CmdChar,w
  3918  064C  390F               	andlw	15
  3919  064D  3E20               	addlw	32
  3920  064E  0422               	iorwf	lcd_write@mode,w
  3921  064F  00A0               	movwf	??_lcd_write
  3922  0650  0876               	movf	lcd_write@port,w
  3923  0651  0084               	movwf	4
  3924  0652  1783               	bsf	3,7
  3925  0653  1C77               	btfss	lcd_write@port+1,0
  3926  0654  1383               	bcf	3,7
  3927  0655  0820               	movf	??_lcd_write,w
  3928  0656  0080               	movwf	0
  3929  0657                     l2016:	
  3930                           
  3931                           ;lcd4bits.c: 116:     Delay20us();
  3932  0657  120A  118A  27EA  120A  118A  	fcall	_Delay20us
  3933                           
  3934                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  3935  065C  0876               	movf	lcd_write@port,w
  3936  065D  0084               	movwf	4
  3937  065E  1783               	bsf	3,7
  3938  065F  1C77               	btfss	lcd_write@port+1,0
  3939  0660  1383               	bcf	3,7
  3940  0661  0800               	movf	0,w
  3941  0662  39DF               	andlw	223
  3942  0663  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0664  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0665  00A0               	movwf	??_lcd_write
  3945  0666  0876               	movf	lcd_write@port,w
  3946  0667  0084               	movwf	4
  3947  0668  1783               	bsf	3,7
  3948  0669  1C77               	btfss	lcd_write@port+1,0
  3949  066A  1383               	bcf	3,7
  3950  066B  0820               	movf	??_lcd_write,w
  3951  066C  0080               	movwf	0
  3952  066D                     l331:	
  3953  066D  0008               	return
  3954  066E                     __end_of_lcd_write:	
  3955                           
  3956                           	psect	text19
  3957  07EA                     __ptext19:	
  3958 ;; *************** function _Delay20us *****************
  3959 ;; Defined at:
  3960 ;;		line 99 in file "lcd4bits.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  next            1    4[COMMON] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3974 ;;      Params:         0       0       0       0       0
  3975 ;;      Locals:         1       0       0       0       0
  3976 ;;      Temps:          1       0       0       0       0
  3977 ;;      Totals:         2       0       0       0       0
  3978 ;;Total ram usage:        2 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_lcd_write
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _Delay20us
  3990  07EA                     _Delay20us:	
  3991  07EA                     l1998:	
  3992                           ;incstack = 0
  3993                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  3994                           
  3995                           
  3996                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  3997  07EA  01F4               	clrf	Delay20us@next
  3998  07EB                     l2004:	
  3999  07EB  3001               	movlw	1
  4000  07EC  00F3               	movwf	??_Delay20us
  4001  07ED  0873               	movf	??_Delay20us,w
  4002  07EE  07F4               	addwf	Delay20us@next,f
  4003  07EF                     l2006:	
  4004  07EF  3008               	movlw	8
  4005  07F0  0274               	subwf	Delay20us@next,w
  4006  07F1  1C03               	skipc
  4007  07F2  2FF4               	goto	u1211
  4008  07F3  2FF5               	goto	u1210
  4009  07F4                     u1211:	
  4010  07F4  2FEB               	goto	l2004
  4011  07F5                     u1210:	
  4012  07F5                     l328:	
  4013  07F5  0008               	return
  4014  07F6                     __end_of_Delay20us:	
  4015                           
  4016                           	psect	text20
  4017  07A8                     __ptext20:	
  4018 ;; *************** function _DelayMs *****************
  4019 ;; Defined at:
  4020 ;;		line 86 in file "lcd4bits.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  millis          2    3[COMMON] unsigned int 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         2       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         2       0       0       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_main
  4045 ;;		_randomize_gameboard
  4046 ;;		_lcd_clear
  4047 ;;		_lcd_goto
  4048 ;;		_lcd_init
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _DelayMs
  4054  07A8                     _DelayMs:	
  4055  07A8                     l1482:	
  4056                           ;incstack = 0
  4057                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  4058                           
  4059                           
  4060                           ;lcd4bits.c: 87:     while (millis != 0) {
  4061  07A8  2FB8               	goto	l1490
  4062  07A9                     l1484:	
  4063                           
  4064                           ;lcd4bits.c: 88:         TMR0 = 100;
  4065  07A9  3064               	movlw	100
  4066  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4067  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4068  07AC  0081               	movwf	1	;volatile
  4069  07AD                     l1486:	
  4070                           
  4071                           ;lcd4bits.c: 89:         T0IF = 0;
  4072  07AD  110B               	bcf	11,2	;volatile
  4073  07AE                     l319:	
  4074                           ;lcd4bits.c: 90:         while(T0IF == 0);
  4075                           
  4076  07AE  1D0B               	btfss	11,2	;volatile
  4077  07AF  2FB1               	goto	u621
  4078  07B0  2FB2               	goto	u620
  4079  07B1                     u621:	
  4080  07B1  2FAE               	goto	l319
  4081  07B2                     u620:	
  4082  07B2                     l1488:	
  4083                           
  4084                           ;lcd4bits.c: 91:         millis--;
  4085  07B2  3001               	movlw	1
  4086  07B3  02F3               	subwf	DelayMs@millis,f
  4087  07B4  3000               	movlw	0
  4088  07B5  1C03               	skipc
  4089  07B6  03F4               	decf	DelayMs@millis+1,f
  4090  07B7  02F4               	subwf	DelayMs@millis+1,f
  4091  07B8                     l1490:	
  4092                           
  4093                           ;lcd4bits.c: 87:     while (millis != 0) {
  4094  07B8  0873               	movf	DelayMs@millis,w
  4095  07B9  0474               	iorwf	DelayMs@millis+1,w
  4096  07BA  1D03               	btfss	3,2
  4097  07BB  2FBD               	goto	u631
  4098  07BC  2FBE               	goto	u630
  4099  07BD                     u631:	
  4100  07BD  2FA9               	goto	l1484
  4101  07BE                     u630:	
  4102  07BE                     l323:	
  4103  07BE  0008               	return
  4104  07BF                     __end_of_DelayMs:	
  4105                           
  4106                           	psect	text21
  4107  07D1                     __ptext21:	
  4108 ;; *************** function _get_cursor_index *****************
  4109 ;; Defined at:
  4110 ;;		line 164 in file "concentration.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      unsigned char 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_display_gameboard
  4135 ;;		_gameboard_init
  4136 ;;		_update_gameboard_from_input
  4137 ;;		_update_cursor
  4138 ;;		_toggle_cursor
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _get_cursor_index
  4144  07D1                     _get_cursor_index:	
  4145  07D1                     l1512:	
  4146                           ;incstack = 0
  4147                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  4148                           
  4149                           
  4150                           ;concentration.c: 165:     if(cursor_pos < 16) {
  4151  07D1  3010               	movlw	16
  4152  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4153  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  4154  07D4  0256               	subwf	_cursor_pos,w
  4155  07D5  1803               	skipnc
  4156  07D6  2FD8               	goto	u651
  4157  07D7  2FD9               	goto	u650
  4158  07D8                     u651:	
  4159  07D8  2FDB               	goto	l1518
  4160  07D9                     u650:	
  4161  07D9                     l1514:	
  4162                           
  4163                           ;concentration.c: 166:         return cursor_pos;
  4164  07D9  0856               	movf	_cursor_pos,w
  4165  07DA  2FDD               	goto	l218
  4166  07DB                     l1518:	
  4167                           
  4168                           ;concentration.c: 168:     return cursor_pos+0x30;
  4169  07DB  0856               	movf	_cursor_pos,w
  4170  07DC  3E30               	addlw	48
  4171  07DD                     l218:	
  4172  07DD  0008               	return
  4173  07DE                     __end_of_get_cursor_index:	
  4174                           
  4175                           	psect	text22
  4176  0FF5                     __ptext22:	
  4177 ;; *************** function _get_current_char *****************
  4178 ;; Defined at:
  4179 ;;		line 310 in file "concentration.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0
  4195 ;;      Temps:          1       0       0       0       0
  4196 ;;      Totals:         1       0       0       0       0
  4197 ;;Total ram usage:        1 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    1
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_gameboard_init
  4204 ;;		_update_cursor
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _get_current_char
  4210  0FF5                     _get_current_char:	
  4211  0FF5                     l1538:	
  4212                           ;incstack = 0
  4213                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0]
  4214                           
  4215                           
  4216                           ;concentration.c: 311:     current_char = visible[cursor_pos];
  4217  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0FF7  0856               	movf	_cursor_pos,w
  4220  0FF8  3EA0               	addlw	(low (_visible| 0))& (0+255)
  4221  0FF9  0084               	movwf	4
  4222  0FFA  1383               	bcf	3,7	;select IRP bank1
  4223  0FFB  0800               	movf	0,w
  4224  0FFC  00F3               	movwf	??_get_current_char
  4225  0FFD  0873               	movf	??_get_current_char,w
  4226  0FFE  00D5               	movwf	_current_char
  4227  0FFF                     l288:	
  4228  0FFF  0008               	return
  4229  1000                     __end_of_get_current_char:	
  4230                           
  4231                           	psect	text23
  4232  06B7                     __ptext23:	
  4233 ;; *************** function _interrupt_handler *****************
  4234 ;; Defined at:
  4235 ;;		line 344 in file "concentration.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;		None
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;		None
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         0       0       0       0       0
  4250 ;;      Locals:         0       0       0       0       0
  4251 ;;      Temps:          3       0       0       0       0
  4252 ;;      Totals:         3       0       0       0       0
  4253 ;;Total ram usage:        3 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		Interrupt level 1
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _interrupt_handler
  4264  06B7                     _interrupt_handler:	
  4265  06B7                     i1l1916:	
  4266                           
  4267                           ;concentration.c: 345:     if(ADIF) {
  4268  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  4269  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  4270  06B9  1F0C               	btfss	12,6	;volatile
  4271  06BA  2EBC               	goto	u116_21
  4272  06BB  2EBD               	goto	u116_20
  4273  06BC                     u116_21:	
  4274  06BC  2ED5               	goto	i1l1930
  4275  06BD                     u116_20:	
  4276  06BD                     i1l1918:	
  4277                           
  4278                           ;concentration.c: 346:         if(CHS1 == 1) {
  4279  06BD  1D9F               	btfss	31,3	;volatile
  4280  06BE  2EC0               	goto	u117_21
  4281  06BF  2EC1               	goto	u117_20
  4282  06C0                     u117_21:	
  4283  06C0  2ECB               	goto	i1l1924
  4284  06C1                     u117_20:	
  4285  06C1                     i1l1920:	
  4286                           
  4287                           ;concentration.c: 347:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  4288  06C1  081E               	movf	30,w	;volatile
  4289  06C2  00CF               	movwf	_joystick_x_pos+1
  4290  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  4291  06C4  1303               	bcf	3,6	;RP1=0, select bank1
  4292  06C5  081E               	movf	30,w	;volatile
  4293  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  4294  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  4295  06C8  00CE               	movwf	_joystick_x_pos
  4296  06C9                     i1l1922:	
  4297                           
  4298                           ;concentration.c: 348:             CHS1 = 0;
  4299  06C9  119F               	bcf	31,3	;volatile
  4300                           
  4301                           ;concentration.c: 349:         } else {
  4302  06CA  2ED4               	goto	i1l1928
  4303  06CB                     i1l1924:	
  4304                           
  4305                           ;concentration.c: 350:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  4306  06CB  081E               	movf	30,w	;volatile
  4307  06CC  00CD               	movwf	_joystick_y_pos+1
  4308  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  4309  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  4310  06CF  081E               	movf	30,w	;volatile
  4311  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  4312  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  4313  06D2  00CC               	movwf	_joystick_y_pos
  4314  06D3                     i1l1926:	
  4315                           
  4316                           ;concentration.c: 351:             CHS1 = 1;
  4317  06D3  159F               	bsf	31,3	;volatile
  4318  06D4                     i1l1928:	
  4319                           
  4320                           ;concentration.c: 353:         ADIF = 0;
  4321  06D4  130C               	bcf	12,6	;volatile
  4322  06D5                     i1l1930:	
  4323                           
  4324                           ;concentration.c: 355:     if(TMR2IF) {
  4325  06D5  1C8C               	btfss	12,1	;volatile
  4326  06D6  2ED8               	goto	u118_21
  4327  06D7  2ED9               	goto	u118_20
  4328  06D8                     u118_21:	
  4329  06D8  2EE3               	goto	i1l302
  4330  06D9                     u118_20:	
  4331  06D9                     i1l1932:	
  4332                           
  4333                           ;concentration.c: 356:         cursor_move_delay_count--;
  4334  06D9  3001               	movlw	1
  4335  06DA  02D2               	subwf	_cursor_move_delay_count,f
  4336                           
  4337                           ;concentration.c: 357:         if(cursor_move_delay_count == 0) {
  4338  06DB  0852               	movf	_cursor_move_delay_count,w
  4339  06DC  1D03               	btfss	3,2
  4340  06DD  2EDF               	goto	u119_21
  4341  06DE  2EE0               	goto	u119_20
  4342  06DF                     u119_21:	
  4343  06DF  2EE2               	goto	i1l303
  4344  06E0                     u119_20:	
  4345  06E0                     i1l1934:	
  4346                           
  4347                           ;concentration.c: 358:             cursor_movable = 1;
  4348  06E0  01D1               	clrf	_cursor_movable
  4349  06E1  0AD1               	incf	_cursor_movable,f
  4350  06E2                     i1l303:	
  4351                           ;concentration.c: 359:         }
  4352                           
  4353                           
  4354                           ;concentration.c: 360:         TMR2IF = 0;
  4355  06E2  108C               	bcf	12,1	;volatile
  4356  06E3                     i1l302:	
  4357                           ;concentration.c: 361:     }
  4358                           
  4359                           
  4360                           ;concentration.c: 362:     if(RCIF) {
  4361  06E3  1E8C               	btfss	12,5	;volatile
  4362  06E4  2EE6               	goto	u120_21
  4363  06E5  2EE7               	goto	u120_20
  4364  06E6                     u120_21:	
  4365  06E6  2EEB               	goto	i1l305
  4366  06E7                     u120_20:	
  4367  06E7                     i1l1936:	
  4368                           
  4369                           ;concentration.c: 363:         recieved_char = RCREG;
  4370  06E7  081A               	movf	26,w	;volatile
  4371  06E8  00F0               	movwf	??_interrupt_handler
  4372  06E9  0870               	movf	??_interrupt_handler,w
  4373  06EA  00D0               	movwf	_recieved_char
  4374  06EB                     i1l305:	
  4375  06EB  0872               	movf	??_interrupt_handler+2,w
  4376  06EC  008A               	movwf	10
  4377  06ED  0E71               	swapf	(??_interrupt_handler+1)^(0+4294967168),w
  4378  06EE  0083               	movwf	3
  4379  06EF  0EFE               	swapf	btemp,f
  4380  06F0  0E7E               	swapf	btemp,w
  4381  06F1  0009               	retfie
  4382  06F2                     __end_of_interrupt_handler:	
  4383  007E                     btemp	set	126	;btemp
  4384  007E                     wtemp0	set	126
  4385                           
  4386                           	psect	intentry
  4387  0004                     __pintentry:	
  4388                           ;incstack = 0
  4389                           ; Regs used in _interrupt_handler: [wreg+status,2+status,0]
  4390                           
  4391  0004                     interrupt_function:	
  4392  007E                     saved_w	set	btemp
  4393  0004  00FE               	movwf	btemp
  4394  0005  0E03               	swapf	3,w
  4395  0006  00F1               	movwf	??_interrupt_handler+1
  4396  0007  080A               	movf	10,w
  4397  0008  00F2               	movwf	??_interrupt_handler+2
  4398  0009  120A  118A  2EB7   	ljmp	_interrupt_handler


Data Sizes:
    Strings     74
    Constant    64
    Data        4
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     44      57
    BANK1            80      0      64
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    lcd_set_custom_char@data	PTR const unsigned char  size(1) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    _lcd_putch->_lcd_write
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_write
    _randomize_gameboard->___awdiv
    _lcd_set_custom_char->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_gameboard_init
    _update_gameboard_from_input->_update_cursor
    _update_cursor->_lcd_goto
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_goto
    _toggle_cursor->_lcd_putch
    _display_gameboard->_lcd_goto
    _display_gameboard->_lcd_putch
    _lcd_putch->_lcd_write
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_clear
    _gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   60683
                            _DelayMs
                  _display_gameboard
                     _gameboard_init
                      _joystick_init
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0   22437
                                             11 BANK0      2     2      0
                  _display_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    6731
                                              7 BANK0      4     3      1
                   _get_current_char
                   _get_cursor_index
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    6129
                   _get_cursor_index
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _display_gameboard                                    2     2      0    9577
                                              7 BANK0      2     2      0
                   _get_cursor_index
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    2690
                                              3 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             4     2      2    2904
                                              3 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    6310
                                              5 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       3     3      0   12219
                                             41 BANK0      3     3      0
                   _get_current_char
                   _get_cursor_index
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    1169
                                              4 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    4163
                                             10 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  7     4      3    4163
                                              3 BANK0      7     4      3
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    3439
                                              3 BANK0      4     2      2
                            _DelayMs
                   _get_cursor_index (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            2     0      2    3318
                                              3 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    2178
                                              5 COMMON     3     0      3
                                              0 BANK0      3     3      0
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     479
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _get_cursor_index                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                    3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _display_gameboard
     _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _get_cursor_index (ARG)
       _lcd_write (ARG)
         _Delay20us
     _lcd_putch
       _lcd_write
         _Delay20us
   _gameboard_init
     _get_current_char
     _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _get_cursor_index (ARG)
       _lcd_write (ARG)
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
     _time_init
   _joystick_init
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
   _lcd_goto
     _DelayMs
     _get_cursor_index (ARG)
     _lcd_write (ARG)
       _Delay20us
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _lcd_puts
     _lcd_write
       _Delay20us
   _update_gameboard_from_input
     _display_gameboard
       _get_cursor_index
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _get_cursor_index (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_putch
         _lcd_write
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _get_cursor_index
       _lcd_goto
         _DelayMs
         _get_cursor_index (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_putch
         _lcd_write
           _Delay20us
     _update_cursor
       _get_current_char
       _get_cursor_index
       _lcd_goto
         _DelayMs
         _get_cursor_index (ARG)
         _lcd_write (ARG)
           _Delay20us
       _lcd_putch
         _lcd_write
           _Delay20us

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      39       5       71.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A4      12        0.0%
ABS                  0      0      A4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 10:18:01 2020

                                   pc 0002   __end_of_update_gameboard_from_input 01B0  
         _update_gameboard_from_input 0046                           __CFG_CP$OFF 0000  
                       _update_cursor 029F                                    _GO 00F9  
                        ___awdiv@sign 0021                                    fsr 0004  
                                 l214 051B                                   l230 004D  
                                 l209 044E                                   l218 07DD  
                                 l314 0FF4                                   l323 07BE  
                                 l331 066D                                   l227 057A  
                                 l235 0087                                   l340 074E  
                                 l253 01AB                                   l334 07A7  
                                 l190 06B6                                   l319 07AE  
                                 l343 07D0                                   l175 0239  
                                 l328 07F5                                   l280 0342  
                                 l249 0151                                   l346 078F  
                                 l354 061E                                   l178 0248  
                                 l291 07E9                                   l259 01AF  
                                 l349 05CC                                   l189 068C  
                                 l285 0723                                   l294 0773  
                                 l288 0FFF                                   l593 04B7  
                                 _GIE 005F                                   _RB1 0031  
                                 _RB2 0032                                   _RB5 0035  
                                 _PR2 0092                          __CFG_CPD$OFF 0000  
                                 u620 07B2                                   u700 0472  
                                 u621 07B1                                   u701 0471  
                                 u630 07BE                                   u631 07BD  
                                 u720 0484                                   u721 0483  
                                 u650 07D9                                   u651 07D8  
                                 u715 0476                                   u740 0495  
                                 u741 0494                                   _SCS 0478  
                                 u735 0485                                   u760 04A9  
                                 u680 0456                                   u761 04A8  
                                 u745 0491                                   u681 0455  
                                 u770 04AE                                   u690 0461  
                                 u771 04AD                                   u755 049D  
                                 u691 0460                                   _RX9 00C6  
                                 _TX9 04C6                                   fsr0 0004  
                                 indf 0000                          __CFG_FOSC$HS 0000  
                        __CFG_LVP$OFF 0000                        ?_toggle_cursor 0070  
                       lcd_clear@port 0023                                  l2010 0635  
                                l2004 07EB                                  l2012 063A  
                                l2020 079E                                  l2100 02AE  
                                l2006 07EF                                  l2014 064B  
                                l2022 0777                                  l2110 02C3  
                                l2102 02B3                                  l2016 0657  
                                l2008 0622                                  l2024 0786  
                                l2040 060A                                  l2200 0728  
                                l2112 02D3                                  l2104 02B6  
                                l2018 0790                                  l2042 0610  
                                l2034 05D1                                  l2202 073C  
                                l2026 07C2                                  l2114 02D8  
                                l2106 02BB                                  l2122 02EF  
                                l2210 0051                                  l2036 0600  
                                l2028 05D0                                  l2204 0742  
                                l2060 06A8                                  l2052 067C  
                                l2044 066E                                  l2116 02DA  
                                l2108 02C0                                  l2124 0302  
                                l2220 007B                                  l2212 005A  
                                l2300 01E2                                  l2038 0606  
                                l2062 03D3                                  l2070 0541  
                                l2150 05A1                                  l2142 057B  
                                l2054 0682                                  l2046 0679  
                                l2126 0321                                  l2118 02DF  
                                l2230 00A3                                  l2222 007F  
                                l2214 006B                                  l2206 0046  
                                l2310 01EB                                  l2302 01E5  
                                l1512 07D1                                  l2072 0548  
                                l2080 0574                                  l2064 051C  
                                l2160 04C5                                  l2152 05B1  
                                l2144 0580                                  l2056 069C  
                                l2128 0328                                  l2240 00D6  
                                l2232 00AA                                  l2224 0085  
                                l2216 0070                                  l2208 004C  
                                l2320 0209                                  l2312 01EE  
                                l2304 01E6                                  l1514 07D9  
                                l2074 0551                                  l2066 0525  
                                l2170 04D4                                  l2154 05BC  
                                l2146 0588                                  l2058 06A2  
                                l2090 0712                                  l2082 06F2  
                                l2410 02F7                                  l2250 010D  
                                l2242 00E5                                  l2234 00B5  
                                l2226 0095                                  l2218 0076  
                                l2330 024E                                  l2322 0215  
                                l2314 01F2                                  l2306 01E9  
                                l1540 044F                                  l2076 0556  
                                l2068 0529                                  l1604 07DE  
                                l2180 04EF                                  l2172 04DA  
                                l2156 04BB                                  l2148 0591  
                                l2092 0715                                  l2084 06F9  
                                l2260 0140                                  l2252 0118  
                                l2244 00EC                                  l2236 00C4  
                                l2228 0096                                  l2340 0285  
                                l2332 0257                                  l2324 0221  
                                l2316 01F5                                  l2308 01EA  
                                l1518 07DB                                  l1550 0461  
                                l1542 0452                                  l2078 0570  
                                l2190 050C                                  l2182 04F2  
                                l2174 04E3                                  l2166 04C8  
                                l2158 04C0                                  l1710 075F  
                                l1702 074F                                  l2086 0703  
                                l2406 02CB                                  l2094 02A2  
                                l2270 0168                                  l2262 0143  
                                l2254 0127                                  l2246 00F7  
                                l2238 00CB                                  l2342 0291  
                                l2334 0262                                  l2326 022D  
                                l2318 01FE                                  l1560 0475  
                                l1552 0466                                  l1544 0456  
                                l2192 050F                                  l2184 04F4  
                                l2176 04E9                                  l2168 04D0  
                                l1720 076A                                  l1712 0761  
                                l1704 0759                                  l2088 0708  
                                l2408 02E7                                  l2096 02A3  
                                l2272 0170                                  l2264 014D  
                                l2256 012E                                  l2248 0106  
                                l2344 0296                                  l2336 026D  
                                l2328 023F                                  l2280 01B0  
                                l1538 0FF5                                  l1490 07B8  
                                l1482 07A8                                  l1570 049B  
                                l1562 047C                                  l1554 046A  
                                l1546 045B                                  l2194 0512  
                                l2186 0502                                  l2178 04EA  
                                l1722 076D                                  l1714 0765  
                                l1706 075A                                  l2098 02A8  
                                l2274 018D                                  l2258 0136  
                                l2266 0152                                  l2338 0279  
                                l2290 01D3                                  l2282 01B3  
                                l1484 07A9                                  l1580 04B3  
                                l1572 049C                                  l1564 0480  
                                l1556 046C                                  l1548 045D  
                                l2196 0516                                  l2188 0508  
                                l1724 076F                                  l1716 0766  
                                l1708 075D                                  l2276 018F  
                                l2268 0161                                  l2292 01D9  
                                l2284 01B8                                  l1486 07AD  
                                l1574 04A3                                  l1566 0484  
                                l1558 0472                                  l1718 0767  
                                l2198 0727                                  l2294 01DC  
                                l2286 01C3                                  l1488 07B2  
                                l1568 0495                                  l1576 04A9  
                                l2296 01E0                                  l2288 01CE  
                                l1578 04AE                                  l2298 01E1  
                                l1684 0FED                                  l1686 0FF3  
                                l1998 07EA                                  _ADIE 0466  
                                _ADIF 0066                                  _CHS1 00FB  
                                STR_1 039A                                  STR_2 0389  
                                STR_3 03BA                                  STR_4 03C7  
                                STR_5 03AA                                  _BRGH 04C2  
                                _CREN 00C4                                  _T0IF 005A  
                                u1210 07F5                                  u1211 07F4  
                                u1300 057A                                  u1301 0579  
                                u1310 06F9                                  u1311 06F8  
                                u1240 0610                                  u1320 02AE  
                                u1400 007B                                  u1225 0625  
                                u1241 060F                                  u1321 02AD  
                                u1401 007A                                  u1250 0682  
                                u1330 0328                                  u1410 00A3  
                                u1235 05D4                                  u1251 0681  
                                u1331 0327                                  u1411 00A2  
                                u1340 04DA                                  u1260 06A8  
                                u1500 012E                                  u1420 00AA  
                                u1341 04D9                                  u1261 06A7  
                                u1501 012D                                  u1421 00A9  
                                u1270 0520                                  u1350 074E  
                                u1510 0140                                  u1430 00C4  
                                u1351 074D                                  u1511 013F  
                                u1431 00C3                                  u1415 009F  
                                u1600 01AA                                  u1520 014D  
                                u1440 00CB                                  u1360 004C  
                                u1601 01A9                                  u1521 014C  
                                u1441 00CA                                  u1361 004B  
                                u1290 0551                                  u1530 0161  
                                u1450 00E5                                  u1370 0051  
                                u1610 023F                                  u1291 0550  
                                u1531 0160                                  u1451 00E4  
                                u1435 00C0                                  u1371 0050  
                                u1611 023E                                  u1284 0532  
                                u1540 0168                                  u1460 00EC  
                                u1380 005A                                  u1620 024E  
                                u1285 0530                                  u1541 0167  
                                u1461 00EB                                  u1381 0059  
                                u1621 024D                                  u1550 0177  
                                u1470 0106                                  u1390 0076  
                                u1551 0175                                  u1535 015D  
                                u1471 0105                                  u1455 00E1  
                                u1391 0075                                  u1560 0184  
                                u1552 0178                                  u1480 010D  
                                u1561 0182                                  u1481 010C  
                                u1570 018D                                  u1562 0185  
                                u1490 0127                                  u1571 018C  
                                u1491 0126                                  u1475 0102  
                                u1580 0194                                  u1581 0192  
                                u1590 01A1                                  u1582 0195  
                                u1591 019F                                  u1495 0123  
                                u1592 01A2                                  _PEIE 005E  
                                _RCIE 0465                                  _RCIF 0065  
                                _TMR0 0001                                  _TMR1 000E  
                                _TMR2 0011                                  _SPEN 00C7  
                                _TXEN 04C5                                  _SYNC 04C4  
                                _WPUB 0095                 make_custom_chars@club 0361  
                        __CFG_WRT$OFF 0000                                  _main 01B0  
                                btemp 007E                          lcd_init@port 0025  
                                start 000C                          lcd_goto@port 0023  
                       __CFG_IESO$OFF 0000                       __end_of_DelayMs 07BF  
                       __CFG_MCLRE$ON 0000                        ?_update_cursor 0027  
                               ?_main 0070                       __end_of___awdiv 04B8  
                               _CCPR1 0015                                 _BRG16 0C3B  
                       __CFG_WDTE$OFF 0000                                 _ANSEL 0188  
                     ___awdiv@divisor 0073                                 _T2CON 0012  
                               i1l302 06E3                                 i1l303 06E2  
                               i1l305 06EB                       ___awdiv@counter 0020  
                               _RCREG 001A          __size_of_randomize_gameboard 005F  
                               _SPBRG 0099                                 _PORTA 0005  
                               _PORTB 0006                                 _PORTD 0008  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
              make_custom_chars@heart 0371                make_custom_chars@spade 0369  
                      __CFG_FCMEN$OFF 0000                make_custom_chars@smile 0381  
              make_custom_chars@skull 0359                                 _nRBPU 040F  
                               _board 00C0                          lcd_puts@port 0023  
                      __CFG_BOREN$OFF 0000                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                       DelayMs@millis 0073                       __initialization 000F  
                        __end_of_main 029F                    __size_of_Delay20us 000C  
                              ??_main 0078                       ??_toggle_cursor 0078  
                              _ADCON0 001F                                _ADCON1 009F  
                              _CCP1M0 00B8                                _CCP1M1 00B9  
                              _CCP1M2 00BA                                _CCP1M3 00BB  
                              _CCP1IF 0062                                _ADRESH 001E  
                              _ADRESL 009E                      ___awdiv@dividend 0075  
         __end_ofmake_custom_chars@RH 0359                                _ANSELH 0189  
              update_cursor@direction 0027                                u120_20 06E7  
                              u120_21 06E6                                i1l1920 06C1  
             __size_of_gameboard_init 0064                                i1l1922 06C9  
                              i1l1930 06D5                                i1l1932 06D9  
                              i1l1924 06CB                                i1l1916 06B7  
                              i1l1934 06E0                                i1l1926 06D3  
                              i1l1918 06BD                                i1l1936 06E7  
                              i1l1928 06D4                                u116_20 06BD  
                              u116_21 06BC                                u117_20 06C1  
                              u117_21 06C0                                u118_20 06D9  
                              u118_21 06D8                                u119_20 06E0  
                              u119_21 06DF                             ??_DelayMs 0075  
                              _TMR1GE 0086                                _TMR1CS 0081  
                              _TMR2IE 0461                                _TMR2IF 0061  
                              _TMR1ON 0080                   _lcd_set_custom_char 05CD  
                      __CFG_PWRTE$OFF 0000                       ??_update_cursor 0028  
                    __end_of_lcd_init 05CD                      __end_of_lcd_goto 0790  
                    __end_of_lcd_puts 074F                             ??___awdiv 0077  
                    ___awdiv@quotient 0022                         lcd_putch@port 0023  
                ?_lcd_set_custom_char 0023                          __pdataCOMMON 0078  
                              saved_w 007E             __size_of_get_current_char 000B  
                   __end_of_Delay20us 07F6         update_cursor@move_delay_count 002A  
             __end_of__initialization 0042             __size_of_get_cursor_index 000D  
                       lcd_write@mode 0022                         lcd_write@port 0076  
                      __pcstackCOMMON 0070                          __pidataBANK0 0FEB  
               __end_of_joystick_init 0774                 ??_lcd_set_custom_char 0026  
                  __size_of_lcd_clear 0018                    __size_of_lcd_putch 0012  
                  __size_of_lcd_write 004F                            __pbssBANK0 004C  
                          __pbssBANK1 00A0                            __pbssBANK3 0190  
             _cursor_move_delay_count 0052                   _randomize_gameboard 051C  
                          __pmaintext 01B0                            __pintentry 0004  
                  __size_of_tmr0_init 0008          __end_ofmake_custom_chars@PIC 0351  
                             _T1CKPS0 0084                               _T1CKPS1 0085  
                ?_randomize_gameboard 0070                    __size_of_time_init 000C  
                  display_gameboard@i 0028                             ?_lcd_init 0025  
                           ?_lcd_goto 0023                             ?_lcd_puts 0023  
                          __stringtab 0343                        _gameboard_init 04B8  
              lcd_set_custom_char@row 0028              make_custom_chars@diamond 0379  
                             _DelayMs 07A8            randomize_gameboard@current 0047  
                   __end_of_lcd_clear 07A8             randomize_gameboard@random 0048  
                   __end_of_lcd_putch 07D1                               ___awdiv 044F  
                   __end_of_lcd_write 066E        __end_ofmake_custom_chars@heart 0379  
      __end_ofmake_custom_chars@spade 0371        __end_ofmake_custom_chars@smile 0389  
      __end_ofmake_custom_chars@skull 0361                               __ptext1 0046  
                             __ptext2 029F                               __ptext3 06F2  
                             __ptext4 066E                               __ptext5 07BF  
                             __ptext6 0724                               __ptext7 057B  
                             __ptext8 0FED                               __ptext9 074F  
                          _cursor_pos 0056                 ??_randomize_gameboard 0024  
                    _get_current_char 0FF5                __end_of_gameboard_init 051C  
                             _visible 00A0                               clrloop0 07F7  
                          ??_lcd_init 0027                            ??_lcd_goto 0025  
                          ??_lcd_puts 0025                  end_of_initialization 0042  
                   __end_of_tmr0_init 0FF5                        lcd_puts@string 0026  
                    _get_cursor_index 07D1                         _recieved_char 0050  
                   __end_of_time_init 07EA                            _scoreboard 0057  
       lcd_set_custom_char@cg_address 0023                        _joystick_x_pos 004E  
                      _joystick_y_pos 004C                       ?_gameboard_init 0070  
               __end_of_toggle_cursor 0724                             _Delay20us 07EA  
                make_custom_chars@PIC 0349                 __end_of_update_cursor 0343  
        ?_update_gameboard_from_input 0070                         __pidataCOMMON 07FE  
                 start_initialization 000F                            ?_Delay20us 0070  
                     gameboard_init@i 004B           __end_of_lcd_set_custom_char 061F  
                         __pdataBANK0 0057         ??_update_gameboard_from_input 002B  
                         __pbssCOMMON 007A                             ___latbits 0002  
                       __pcstackBANK0 0020                              ?_DelayMs 0073  
              __size_of_joystick_init 0025                     __size_of_lcd_init 0052  
                   __size_of_lcd_goto 001C                     __size_of_lcd_puts 002B  
                        _current_char 0055                           _delay_loops 0053  
            __end_of_get_current_char 1000                             _gameboard 0078  
                            ?___awdiv 0073                     _display_gameboard 066E  
                           _lcd_clear 0790                          _cursor_solid 0054  
                           __pstrings 0343                             _lcd_putch 07BF  
                  ?_display_gameboard 0070                             _lcd_write 061F  
            __end_of_get_cursor_index 07DE                     _interrupt_handler 06B7  
                  ?_interrupt_handler 0070                   ??_display_gameboard 0027  
       __end_ofmake_custom_chars@club 0369  __size_of_update_gameboard_from_input 016A  
                 ??_interrupt_handler 0070                     interrupt_function 0004  
                      _cursor_movable 0051                           ??_Delay20us 0073  
                           clear_ram0 07F6                             _tmr0_init 0FED  
           __end_of_display_gameboard 06B7                             _time_init 07DE  
         __end_of_randomize_gameboard 057B                            ?_lcd_clear 0023  
           __end_of_interrupt_handler 06F2                         _joystick_init 074F  
                          ?_lcd_putch 0023               lcd_set_custom_char@data 0029  
                         __stringbase 0348                            ?_lcd_write 0075  
                    ??_gameboard_init 0049               lcd_set_custom_char@port 0024  
                 make_custom_chars@RH 0351                      __size_of_DelayMs 0017  
                          ?_tmr0_init 0070                            ?_time_init 0070  
                   _make_custom_chars 03D3                      __size_of___awdiv 0069  
                      ?_joystick_init 0070                    ?_make_custom_chars 0070  
                  __end_of__stringtab 0349      __end_ofmake_custom_chars@diamond 0381  
                 ??_make_custom_chars 002A                              __ptext10 04B8  
                            __ptext11 07DE                              __ptext20 07A8  
                            __ptext12 051C                              __ptext21 07D1  
                            __ptext13 044F                              __ptext22 0FF5  
                            __ptext14 03D3                              __ptext23 06B7  
                            __ptext15 05CD                              __ptext16 0774  
                            __ptext17 0790                              __ptext18 061F  
                            __ptext19 07EA                           _cursor_fast 007A  
                   __CFG_BOR4V$BOR21V 0000                              _lcd_init 057B  
                            _lcd_goto 0774                              _lcd_puts 0724  
                       __size_of_main 00EF                    lcd_putch@character 0026  
           __end_of_make_custom_chars 044F            __size_of_display_gameboard 0049  
              __size_of_toggle_cursor 0032         gameboard_init@cursor_init_pos 004A  
                         ??_lcd_clear 0078            __size_of_interrupt_handler 003B  
            randomize_gameboard@F1335 0190                           ??_lcd_putch 0025  
                         ??_lcd_write 0020                              intlevel1 0000  
              __size_of_update_cursor 00A4                         Delay20us@next 0074  
                         ??_tmr0_init 0073                             stringcode 0343  
                   ?_get_current_char 0070                       ??_joystick_init 0073  
                         ??_time_init 0073                    ??_get_current_char 0073  
             randomize_gameboard@used 0027                            _OPTION_REG 0081  
                    lcd_goto@position 0026                     ?_get_cursor_index 0070  
        __size_of_lcd_set_custom_char 0052                              stringdir 0343  
                            stringtab 0343                    ??_get_cursor_index 0073  
                       _toggle_cursor 06F2                      lcd_write@CmdChar 0075  
          __size_of_make_custom_chars 007C  
