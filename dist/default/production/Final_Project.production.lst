

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 18 10:50:14 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319                           
   320                           	psect	idataBANK0
   321  0E49                     __pidataBANK0:	
   322                           
   323                           ;initializer for _scoreboard
   324  0E49  3408               	retlw	8
   325  0E4A  3400               	retlw	0
   326                           
   327                           ;initializer for _gameboard
   328  0E4B  3405               	retlw	5
   329  0E4C  3400               	retlw	0
   330                           
   331                           	psect	strings
   332  0200                     __pstrings:	
   333  0200                     stringtab:	
   334  0200                     __stringtab:	
   335  0200                     stringcode:	
   336                           ;	String table - string pointers are 1 byte each
   337                           
   338  0200                     stringdir:	
   339  0200  3002               	movlw	high stringdir
   340  0201  008A               	movwf	10
   341  0202  0804               	movf	4,w
   342  0203  0A84               	incf	4,f
   343  0204  0782               	addwf	2,f
   344  0205                     __stringbase:	
   345  0205  3400               	retlw	0
   346  0206                     __end_of__stringtab:	
   347  0206                     make_custom_chars@PIC:	
   348  0206  3418               	retlw	24
   349  0207  3418               	retlw	24
   350  0208  3414               	retlw	20
   351  0209  3404               	retlw	4
   352  020A  3404               	retlw	4
   353  020B  3403               	retlw	3
   354  020C  3402               	retlw	2
   355  020D  3403               	retlw	3
   356  020E                     __end_ofmake_custom_chars@PIC:	
   357  020E                     make_custom_chars@RH:	
   358  020E  341C               	retlw	28
   359  020F  3414               	retlw	20
   360  0210  3418               	retlw	24
   361  0211  3414               	retlw	20
   362  0212  3400               	retlw	0
   363  0213  3405               	retlw	5
   364  0214  3407               	retlw	7
   365  0215  3405               	retlw	5
   366  0216                     __end_ofmake_custom_chars@RH:	
   367  0216                     make_custom_chars@skull:	
   368  0216  340E               	retlw	14
   369  0217  3415               	retlw	21
   370  0218  3415               	retlw	21
   371  0219  341F               	retlw	31
   372  021A  340A               	retlw	10
   373  021B  340E               	retlw	14
   374  021C  340E               	retlw	14
   375  021D  3400               	retlw	0
   376  021E                     __end_ofmake_custom_chars@skull:	
   377  021E                     make_custom_chars@club:	
   378  021E  3400               	retlw	0
   379  021F  340E               	retlw	14
   380  0220  340E               	retlw	14
   381  0221  341F               	retlw	31
   382  0222  341F               	retlw	31
   383  0223  341F               	retlw	31
   384  0224  3404               	retlw	4
   385  0225  340E               	retlw	14
   386  0226                     __end_ofmake_custom_chars@club:	
   387  0226                     make_custom_chars@spade:	
   388  0226  3400               	retlw	0
   389  0227  3404               	retlw	4
   390  0228  340E               	retlw	14
   391  0229  341F               	retlw	31
   392  022A  341F               	retlw	31
   393  022B  340E               	retlw	14
   394  022C  3404               	retlw	4
   395  022D  340E               	retlw	14
   396  022E                     __end_ofmake_custom_chars@spade:	
   397  022E                     make_custom_chars@heart:	
   398  022E  3400               	retlw	0
   399  022F  3400               	retlw	0
   400  0230  340A               	retlw	10
   401  0231  341F               	retlw	31
   402  0232  341F               	retlw	31
   403  0233  340E               	retlw	14
   404  0234  3404               	retlw	4
   405  0235  3400               	retlw	0
   406  0236                     __end_ofmake_custom_chars@heart:	
   407  0236                     make_custom_chars@diamond:	
   408  0236  3400               	retlw	0
   409  0237  3404               	retlw	4
   410  0238  340E               	retlw	14
   411  0239  341F               	retlw	31
   412  023A  340E               	retlw	14
   413  023B  3404               	retlw	4
   414  023C  3400               	retlw	0
   415  023D  3400               	retlw	0
   416  023E                     __end_ofmake_custom_chars@diamond:	
   417  023E                     make_custom_chars@smile:	
   418  023E  3400               	retlw	0
   419  023F  340A               	retlw	10
   420  0240  340A               	retlw	10
   421  0241  3400               	retlw	0
   422  0242  3415               	retlw	21
   423  0243  3411               	retlw	17
   424  0244  340E               	retlw	14
   425  0245  3400               	retlw	0
   426  0246                     __end_ofmake_custom_chars@smile:	
   427  0015                     _CCPR1	set	21
   428  000E                     _TMR1	set	14
   429  0001                     _TMR0	set	1
   430  001A                     _RCREG	set	26
   431  001E                     _ADRESH	set	30
   432  001F                     _ADCON0	set	31
   433  0006                     _PORTB	set	6
   434  0011                     _TMR2	set	17
   435  0012                     _T2CON	set	18
   436  0008                     _PORTD	set	8
   437  0005                     _PORTA	set	5
   438  005A                     _T0IF	set	90
   439  0065                     _RCIF	set	101
   440  00FB                     _CHS1	set	251
   441  0066                     _ADIF	set	102
   442  005E                     _PEIE	set	94
   443  005F                     _GIE	set	95
   444  0080                     _TMR1ON	set	128
   445  0086                     _TMR1GE	set	134
   446  0085                     _T1CKPS1	set	133
   447  0084                     _T1CKPS0	set	132
   448  0081                     _TMR1CS	set	129
   449  00B8                     _CCP1M0	set	184
   450  00B9                     _CCP1M1	set	185
   451  00BA                     _CCP1M2	set	186
   452  00BB                     _CCP1M3	set	187
   453  0062                     _CCP1IF	set	98
   454  00F9                     _GO	set	249
   455  0061                     _TMR2IF	set	97
   456  0035                     _RB5	set	53
   457  00C7                     _SPEN	set	199
   458  00C6                     _RX9	set	198
   459  00C4                     _CREN	set	196
   460  0081                     _OPTION_REG	set	129
   461  009E                     _ADRESL	set	158
   462  009F                     _ADCON1	set	159
   463  0086                     _TRISB	set	134
   464  0095                     _WPUB	set	149
   465  0092                     _PR2	set	146
   466  0099                     _SPBRG	set	153
   467  0087                     _TRISC	set	135
   468  0085                     _TRISA	set	133
   469  0088                     _TRISD	set	136
   470  0466                     _ADIE	set	1126
   471  040F                     _nRBPU	set	1039
   472  0461                     _TMR2IE	set	1121
   473  04C2                     _BRGH	set	1218
   474  04C4                     _SYNC	set	1220
   475  0465                     _RCIE	set	1125
   476  04C6                     _TX9	set	1222
   477  04C5                     _TXEN	set	1221
   478  0478                     _SCS	set	1144
   479  0189                     _ANSELH	set	393
   480  0188                     _ANSEL	set	392
   481  0C3B                     _BRG16	set	3131
   482  0246                     STR_2:	
   483  0246  3450               	retlw	80	;'P'
   484  0247  3472               	retlw	114	;'r'
   485  0248  3465               	retlw	101	;'e'
   486  0249  3473               	retlw	115	;'s'
   487  024A  3473               	retlw	115	;'s'
   488  024B  3420               	retlw	32	;' '
   489  024C  3474               	retlw	116	;'t'
   490  024D  3468               	retlw	104	;'h'
   491  024E  3465               	retlw	101	;'e'
   492  024F  3420               	retlw	32	;' '
   493  0250  3462               	retlw	98	;'b'
   494  0251  3475               	retlw	117	;'u'
   495  0252  3474               	retlw	116	;'t'
   496  0253  3474               	retlw	116	;'t'
   497  0254  346F               	retlw	111	;'o'
   498  0255  346E               	retlw	110	;'n'
   499  0256  3400               	retlw	0
   500  0257                     STR_1:	
   501  0257  3420               	retlw	32	;' '
   502  0258  3443               	retlw	67	;'C'
   503  0259  346F               	retlw	111	;'o'
   504  025A  346E               	retlw	110	;'n'
   505  025B  3463               	retlw	99	;'c'
   506  025C  3465               	retlw	101	;'e'
   507  025D  346E               	retlw	110	;'n'
   508  025E  3474               	retlw	116	;'t'
   509  025F  3472               	retlw	114	;'r'
   510  0260  3461               	retlw	97	;'a'
   511  0261  3474               	retlw	116	;'t'
   512  0262  3469               	retlw	105	;'i'
   513  0263  346F               	retlw	111	;'o'
   514  0264  346E               	retlw	110	;'n'
   515  0265  3421               	retlw	33	;'!'
   516  0266  3400               	retlw	0
   517  0267                     STR_3:	
   518  0267  3420               	retlw	32	;' '
   519  0268  3420               	retlw	32	;' '
   520  0269  3420               	retlw	32	;' '
   521  026A  3420               	retlw	32	;' '
   522  026B  3474               	retlw	116	;'t'
   523  026C  346F               	retlw	111	;'o'
   524  026D  3420               	retlw	32	;' '
   525  026E  3473               	retlw	115	;'s'
   526  026F  3474               	retlw	116	;'t'
   527  0270  3461               	retlw	97	;'a'
   528  0271  3472               	retlw	114	;'r'
   529  0272  3474               	retlw	116	;'t'
   530  0273  3400               	retlw	0
   531  0274                     STR_4:	
   532  0274  3420               	retlw	32	;' '
   533  0275  3420               	retlw	32	;' '
   534  0276  3420               	retlw	32	;' '
   535  0277  3420               	retlw	32	;' '
   536  0278  3420               	retlw	32	;' '
   537  0279  3453               	retlw	83	;'S'
   538  027A  3463               	retlw	99	;'c'
   539  027B  346F               	retlw	111	;'o'
   540  027C  3472               	retlw	114	;'r'
   541  027D  3465               	retlw	101	;'e'
   542  027E  343A               	retlw	58	;':'
   543  027F  3400               	retlw	0
   544  0280                     STR_6:	
   545  0280  3420               	retlw	32	;' '
   546  0281  3420               	retlw	32	;' '
   547  0282  3450               	retlw	80	;'P'
   548  0283  3432               	retlw	50	;'2'
   549  0284  343A               	retlw	58	;':'
   550  0285  3420               	retlw	32	;' '
   551  0286  3400               	retlw	0
   552  0287                     STR_5:	
   553  0287  3420               	retlw	32	;' '
   554  0288  3450               	retlw	80	;'P'
   555  0289  3431               	retlw	49	;'1'
   556  028A  343A               	retlw	58	;':'
   557  028B  3420               	retlw	32	;' '
   558  028C  3400               	retlw	0
   559                           
   560                           ; #config settings
   561  0000                     
   562                           	psect	cinit
   563  0013                     start_initialization:	
   564  0013                     __initialization:	
   565                           
   566                           ; Initialize objects allocated to BANK0
   567  0013  120A  158A  2649  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   568  0018  00E7               	movwf	__pdataBANK0& (0+127)
   569  0019  120A  158A  264A  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   570  001E  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   571  001F  120A  158A  264B  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   572  0024  00E9               	movwf	(__pdataBANK0+2)& (0+127)
   573  0025  120A  158A  264C  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   574  002A  00EA               	movwf	(__pdataBANK0+3)& (0+127)
   575                           
   576                           ; Clear objects allocated to BANK3
   577  002B  1783               	bsf	3,7	;select IRP bank2
   578  002C  3090               	movlw	low __pbssBANK3
   579  002D  0084               	movwf	4
   580  002E  30B0               	movlw	low (__pbssBANK3+32)
   581  002F  120A  158A  264D  120A  118A  	fcall	clear_ram0
   582                           
   583                           ; Clear objects allocated to BANK1
   584  0034  1383               	bcf	3,7	;select IRP bank0
   585  0035  30A0               	movlw	low __pbssBANK1
   586  0036  0084               	movwf	4
   587  0037  30E0               	movlw	low (__pbssBANK1+64)
   588  0038  120A  158A  264D  120A  118A  	fcall	clear_ram0
   589                           
   590                           ; Clear objects allocated to BANK0
   591  003D  305B               	movlw	low __pbssBANK0
   592  003E  0084               	movwf	4
   593  003F  3067               	movlw	low (__pbssBANK0+12)
   594  0040  120A  158A  264D  120A  118A  	fcall	clear_ram0
   595                           
   596                           ; Clear objects allocated to COMMON
   597  0045  01FC               	clrf	__pbssCOMMON& (0+127)
   598  0046  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   599  0047                     end_of_initialization:	
   600                           ;End of C runtime variable initialization code
   601                           
   602  0047                     __end_of__initialization:	
   603  0047  0183               	clrf	3
   604  0048  120A  158A  2F80   	ljmp	_main	;jump to C main() function
   605                           
   606                           	psect	bssCOMMON
   607  007C                     __pbssCOMMON:	
   608  007C                     _recieved_char:	
   609  007C                     	ds	1
   610  007D                     _cursor_move_delay_count:	
   611  007D                     	ds	1
   612                           
   613                           	psect	bssBANK0
   614  005B                     __pbssBANK0:	
   615  005B                     _joystick_y_pos:	
   616  005B                     	ds	2
   617  005D                     _joystick_x_pos:	
   618  005D                     	ds	2
   619  005F                     _selected_tile:	
   620  005F                     	ds	1
   621  0060                     _p2_score:	
   622  0060                     	ds	1
   623  0061                     _p1_score:	
   624  0061                     	ds	1
   625  0062                     _cursor_movable:	
   626  0062                     	ds	1
   627  0063                     _delay_loops:	
   628  0063                     	ds	1
   629  0064                     _cursor_solid:	
   630  0064                     	ds	1
   631  0065                     _current_char:	
   632  0065                     	ds	1
   633  0066                     _cursor_pos:	
   634  0066                     	ds	1
   635                           
   636                           	psect	dataBANK0
   637  0067                     __pdataBANK0:	
   638  0067                     _scoreboard:	
   639  0067                     	ds	2
   640  0069                     _gameboard:	
   641  0069                     	ds	2
   642                           
   643                           	psect	bssBANK1
   644  00A0                     __pbssBANK1:	
   645  00A0                     _visible:	
   646  00A0                     	ds	32
   647  00C0                     _board:	
   648  00C0                     	ds	32
   649                           
   650                           	psect	bssBANK3
   651  0190                     __pbssBANK3:	
   652  0190                     randomize_gameboard@F1347:	
   653  0190                     	ds	32
   654                           
   655                           	psect	clrtext
   656  0E4D                     clear_ram0:	
   657                           ;	Called with FSR containing the base address, and
   658                           ;	W with the last address+1
   659                           
   660  0E4D  0064               	clrwdt	;clear the watchdog before getting into this loop
   661  0E4E                     clrloop0:	
   662  0E4E  0180               	clrf	0	;clear RAM location pointed to by FSR
   663  0E4F  0A84               	incf	4,f	;increment pointer
   664  0E50  0604               	xorwf	4,w	;XOR with final address
   665  0E51  1903               	btfsc	3,2	;have we reached the end yet?
   666  0E52  3400               	retlw	0	;all done for this memory range, return
   667  0E53  0604               	xorwf	4,w	;XOR again to restore value
   668  0E54  2E4E               	goto	clrloop0	;do the next byte
   669                           
   670                           	psect	cstackCOMMON
   671  0070                     __pcstackCOMMON:	
   672  0070                     ?_joystick_init:	
   673  0070                     ?_gameboard_init:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_serial_init:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_startup:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_update_gameboard_from_input:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_display_scoreboard:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_display_gameboard:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_time_init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_get_current_char:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_randomize_gameboard:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_toggle_cursor:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_main:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_make_custom_chars:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_get_cursor_index:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_check_for_match:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_interrupt_handler:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_tmr0_init:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_Delay20us:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?i1_Delay20us:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??i1_Delay20us:	
   728                           ; 1 bytes @ 0x0
   729                           
   730                           
   731                           ; 1 bytes @ 0x0
   732  0070                     	ds	1
   733  0071                     i1Delay20us@next:	
   734                           
   735                           ; 1 bytes @ 0x1
   736  0071                     	ds	1
   737  0072                     ?i1_lcd_write:	
   738  0072                     i1lcd_write@CmdChar:	
   739                           ; 1 bytes @ 0x2
   740                           
   741                           
   742                           ; 1 bytes @ 0x2
   743  0072                     	ds	1
   744  0073                     i1lcd_write@port:	
   745                           
   746                           ; 2 bytes @ 0x3
   747  0073                     	ds	2
   748  0075                     ??i1_lcd_write:	
   749                           
   750                           ; 1 bytes @ 0x5
   751  0075                     	ds	2
   752  0077                     i1lcd_write@mode:	
   753                           
   754                           ; 1 bytes @ 0x7
   755  0077                     	ds	1
   756  0078                     ?i1_lcd_putch:	
   757  0078                     i1lcd_putch@port:	
   758                           ; 1 bytes @ 0x8
   759                           
   760                           
   761                           ; 2 bytes @ 0x8
   762  0078                     	ds	2
   763  007A                     ??i1_lcd_putch:	
   764                           
   765                           ; 1 bytes @ 0xA
   766  007A                     	ds	1
   767  007B                     i1lcd_putch@character:	
   768                           
   769                           ; 1 bytes @ 0xB
   770  007B                     	ds	1
   771                           
   772                           	psect	cstackBANK0
   773  0020                     __pcstackBANK0:	
   774  0020                     ??_interrupt_handler:	
   775                           
   776                           ; 1 bytes @ 0x0
   777  0020                     	ds	4
   778  0024                     ??_joystick_init:	
   779  0024                     ??_serial_init:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0024                     ?_DelayMs:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0024                     ??_time_init:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0024                     ??_get_current_char:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0024                     ??_get_cursor_index:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0024                     ??_tmr0_init:	
   795                           ; 1 bytes @ 0x4
   796                           
   797  0024                     ??_Delay20us:	
   798                           ; 1 bytes @ 0x4
   799                           
   800  0024                     ?___awmod:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0024                     DelayMs@millis:	
   804                           ; 2 bytes @ 0x4
   805                           
   806  0024                     ___awmod@divisor:	
   807                           ; 2 bytes @ 0x4
   808                           
   809                           
   810                           ; 2 bytes @ 0x4
   811  0024                     	ds	1
   812  0025                     Delay20us@next:	
   813                           
   814                           ; 1 bytes @ 0x5
   815  0025                     	ds	1
   816  0026                     ??_DelayMs:	
   817  0026                     ?_lcd_write:	
   818                           ; 1 bytes @ 0x6
   819                           
   820  0026                     lcd_write@CmdChar:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0026                     ___awmod@dividend:	
   824                           ; 1 bytes @ 0x6
   825                           
   826                           
   827                           ; 2 bytes @ 0x6
   828  0026                     	ds	1
   829  0027                     lcd_write@port:	
   830                           
   831                           ; 2 bytes @ 0x7
   832  0027                     	ds	1
   833  0028                     ??___awmod:	
   834                           
   835                           ; 1 bytes @ 0x8
   836  0028                     	ds	1
   837  0029                     ??_lcd_write:	
   838  0029                     ___awmod@counter:	
   839                           ; 1 bytes @ 0x9
   840                           
   841                           
   842                           ; 1 bytes @ 0x9
   843  0029                     	ds	1
   844  002A                     ___awmod@sign:	
   845                           
   846                           ; 1 bytes @ 0xA
   847  002A                     	ds	1
   848  002B                     ?___awdiv:	
   849  002B                     lcd_write@mode:	
   850                           ; 2 bytes @ 0xB
   851                           
   852  002B                     ___awdiv@divisor:	
   853                           ; 1 bytes @ 0xB
   854                           
   855                           
   856                           ; 2 bytes @ 0xB
   857  002B                     	ds	1
   858  002C                     ?_lcd_clear:	
   859  002C                     ?_lcd_puts:	
   860                           ; 1 bytes @ 0xC
   861                           
   862  002C                     ?_lcd_goto:	
   863                           ; 1 bytes @ 0xC
   864                           
   865  002C                     ?_lcd_set_custom_char:	
   866                           ; 1 bytes @ 0xC
   867                           
   868  002C                     lcd_set_custom_char@cg_address:	
   869                           ; 1 bytes @ 0xC
   870                           
   871  002C                     lcd_clear@port:	
   872                           ; 1 bytes @ 0xC
   873                           
   874  002C                     lcd_puts@port:	
   875                           ; 2 bytes @ 0xC
   876                           
   877  002C                     lcd_goto@port:	
   878                           ; 2 bytes @ 0xC
   879                           
   880                           
   881                           ; 2 bytes @ 0xC
   882  002C                     	ds	1
   883  002D                     lcd_set_custom_char@port:	
   884  002D                     ___awdiv@dividend:	
   885                           ; 2 bytes @ 0xD
   886                           
   887                           
   888                           ; 2 bytes @ 0xD
   889  002D                     	ds	1
   890  002E                     ?_lcd_init:	
   891  002E                     ??_lcd_clear:	
   892                           ; 1 bytes @ 0xE
   893                           
   894  002E                     ??_lcd_puts:	
   895                           ; 1 bytes @ 0xE
   896                           
   897  002E                     ??_lcd_goto:	
   898                           ; 1 bytes @ 0xE
   899                           
   900  002E                     lcd_init@port:	
   901                           ; 1 bytes @ 0xE
   902                           
   903                           
   904                           ; 2 bytes @ 0xE
   905  002E                     	ds	1
   906  002F                     ??_lcd_set_custom_char:	
   907  002F                     ??___awdiv:	
   908                           ; 1 bytes @ 0xF
   909                           
   910  002F                     lcd_puts@string:	
   911                           ; 1 bytes @ 0xF
   912                           
   913  002F                     lcd_goto@position:	
   914                           ; 1 bytes @ 0xF
   915                           
   916                           
   917                           ; 1 bytes @ 0xF
   918  002F                     	ds	1
   919  0030                     ??_lcd_init:	
   920  0030                     ___awdiv@counter:	
   921                           ; 1 bytes @ 0x10
   922                           
   923                           
   924                           ; 1 bytes @ 0x10
   925  0030                     	ds	1
   926  0031                     lcd_set_custom_char@row:	
   927  0031                     ___awdiv@sign:	
   928                           ; 1 bytes @ 0x11
   929                           
   930                           
   931                           ; 1 bytes @ 0x11
   932  0031                     	ds	1
   933  0032                     lcd_set_custom_char@data:	
   934  0032                     ___awdiv@quotient:	
   935                           ; 1 bytes @ 0x12
   936                           
   937                           
   938                           ; 2 bytes @ 0x12
   939  0032                     	ds	1
   940  0033                     ??_make_custom_chars:	
   941                           
   942                           ; 1 bytes @ 0x13
   943  0033                     	ds	1
   944  0034                     ?_lcd_putch:	
   945  0034                     ??_randomize_gameboard:	
   946                           ; 1 bytes @ 0x14
   947                           
   948  0034                     lcd_putch@port:	
   949                           ; 1 bytes @ 0x14
   950                           
   951                           
   952                           ; 2 bytes @ 0x14
   953  0034                     	ds	2
   954  0036                     ??_lcd_putch:	
   955                           
   956                           ; 1 bytes @ 0x16
   957  0036                     	ds	1
   958  0037                     lcd_putch@character:	
   959  0037                     randomize_gameboard@used:	
   960                           ; 1 bytes @ 0x17
   961                           
   962                           
   963                           ; 32 bytes @ 0x17
   964  0037                     	ds	1
   965  0038                     ??_display_gameboard:	
   966  0038                     ?_lcd_display_char_as_num:	
   967                           ; 1 bytes @ 0x18
   968                           
   969  0038                     ??_toggle_cursor:	
   970                           ; 1 bytes @ 0x18
   971                           
   972  0038                     ?_update_cursor:	
   973                           ; 1 bytes @ 0x18
   974                           
   975  0038                     update_cursor@direction:	
   976                           ; 1 bytes @ 0x18
   977                           
   978  0038                     lcd_display_char_as_num@digits:	
   979                           ; 1 bytes @ 0x18
   980                           
   981                           
   982                           ; 1 bytes @ 0x18
   983  0038                     	ds	1
   984  0039                     ??_update_cursor:	
   985  0039                     display_gameboard@i:	
   986                           ; 1 bytes @ 0x19
   987                           
   988  0039                     lcd_display_char_as_num@port:	
   989                           ; 1 bytes @ 0x19
   990                           
   991                           
   992                           ; 2 bytes @ 0x19
   993  0039                     	ds	2
   994  003B                     ??_lcd_display_char_as_num:	
   995  003B                     update_cursor@move_delay_count:	
   996                           ; 1 bytes @ 0x1B
   997                           
   998                           
   999                           ; 1 bytes @ 0x1B
  1000  003B                     	ds	2
  1001  003D                     lcd_display_char_as_num@number:	
  1002                           
  1003                           ; 1 bytes @ 0x1D
  1004  003D                     	ds	1
  1005  003E                     ??_display_scoreboard:	
  1006                           
  1007                           ; 1 bytes @ 0x1E
  1008  003E                     	ds	1
  1009  003F                     ??_startup:	
  1010  003F                     ??_check_for_match:	
  1011                           ; 1 bytes @ 0x1F
  1012                           
  1013                           
  1014                           ; 1 bytes @ 0x1F
  1015  003F                     	ds	1
  1016  0040                     check_for_match@player:	
  1017                           
  1018                           ; 1 bytes @ 0x20
  1019  0040                     	ds	1
  1020  0041                     check_for_match@second_tile:	
  1021                           
  1022                           ; 1 bytes @ 0x21
  1023  0041                     	ds	1
  1024  0042                     check_for_match@temp_cursor_pos:	
  1025                           
  1026                           ; 1 bytes @ 0x22
  1027  0042                     	ds	1
  1028  0043                     ??_update_gameboard_from_input:	
  1029                           
  1030                           ; 1 bytes @ 0x23
  1031  0043                     	ds	20
  1032  0057                     randomize_gameboard@current:	
  1033                           
  1034                           ; 1 bytes @ 0x37
  1035  0057                     	ds	1
  1036  0058                     randomize_gameboard@random:	
  1037                           
  1038                           ; 1 bytes @ 0x38
  1039  0058                     	ds	1
  1040  0059                     ??_gameboard_init:	
  1041                           
  1042                           ; 1 bytes @ 0x39
  1043  0059                     	ds	1
  1044  005A                     gameboard_init@i:	
  1045                           
  1046                           ; 1 bytes @ 0x3A
  1047  005A                     	ds	1
  1048  005B                     ??_main:	
  1049                           
  1050                           	psect	maintext
  1051  0F80                     __pmaintext:	
  1052                           ; 1 bytes @ 0x3B
  1053 ;;
  1054 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1055 ;;
  1056 ;; *************** function _main *****************
  1057 ;; Defined at:
  1058 ;;		line 73 in file "concentration.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : B00/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels required when called:   11
  1078 ;; This function calls:
  1079 ;;		_gameboard_init
  1080 ;;		_joystick_init
  1081 ;;		_lcd_init
  1082 ;;		_serial_init
  1083 ;;		_startup
  1084 ;;		_update_gameboard_from_input
  1085 ;; This function is called by:
  1086 ;;		Startup code after reset
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _main
  1092  0F80                     _main:	
  1093  0F80                     l2111:	
  1094                           ;incstack = 0
  1095 ;; hardware stack exceeded
  1096                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1097                           
  1098                           
  1099                           ;concentration.c: 75:     SCS = 0;
  1100  0F80  1683               	bsf	3,5	;RP0=1, select bank1
  1101  0F81  1303               	bcf	3,6	;RP1=0, select bank1
  1102  0F82  100F               	bcf	15,0	;volatile
  1103  0F83                     l2113:	
  1104                           
  1105                           ;concentration.c: 77:     TRISD = 0;
  1106  0F83  0188               	clrf	8	;volatile
  1107                           
  1108                           ;concentration.c: 78:     TRISA = 0;
  1109  0F84  0185               	clrf	5	;volatile
  1110                           
  1111                           ;concentration.c: 79:     ANSEL = 0;
  1112  0F85  1683               	bsf	3,5	;RP0=1, select bank3
  1113  0F86  1703               	bsf	3,6	;RP1=1, select bank3
  1114  0F87  0188               	clrf	8	;volatile
  1115  0F88                     l2115:	
  1116                           
  1117                           ;concentration.c: 80:     lcd_init(gameboard);
  1118  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0F8A  0869               	movf	_gameboard,w
  1121  0F8B  00AE               	movwf	lcd_init@port
  1122  0F8C  086A               	movf	_gameboard+1,w
  1123  0F8D  00AF               	movwf	lcd_init@port+1
  1124  0F8E  120A  118A  2601  120A  158A  	fcall	_lcd_init
  1125  0F93                     l2117:	
  1126                           
  1127                           ;concentration.c: 81:     lcd_init(scoreboard);
  1128  0F93  3008               	movlw	8
  1129  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0F96  00AE               	movwf	lcd_init@port
  1132  0F97  3000               	movlw	0
  1133  0F98  00AF               	movwf	lcd_init@port+1
  1134  0F99  120A  118A  2601  120A  158A  	fcall	_lcd_init
  1135  0F9E                     l2119:	
  1136                           
  1137                           ;concentration.c: 83:     joystick_init();
  1138  0F9E  120A  158A  272D  120A  158A  	fcall	_joystick_init
  1139  0FA3                     l2121:	
  1140                           
  1141                           ;concentration.c: 84:     gameboard_init();
  1142  0FA3  120A  118A  24E7  120A  158A  	fcall	_gameboard_init
  1143  0FA8                     l2123:	
  1144                           
  1145                           ;concentration.c: 85:     serial_init();
  1146  0FA8  120A  158A  26F4  120A  158A  	fcall	_serial_init
  1147  0FAD                     l2125:	
  1148                           
  1149                           ;concentration.c: 86:     startup();
  1150  0FAD  120A  118A  228D  120A  158A  	fcall	_startup
  1151  0FB2                     l2127:	
  1152                           
  1153                           ;concentration.c: 89:         update_gameboard_from_input();
  1154  0FB2  120A  118A  204B  120A  158A  	fcall	_update_gameboard_from_input
  1155  0FB7  2FB2               	goto	l2127
  1156  0FB8  120A  118A  2810   	ljmp	start
  1157  0FBB                     __end_of_main:	
  1158                           
  1159                           	psect	text1
  1160  004B                     __ptext1:	
  1161 ;; *************** function _update_gameboard_from_input *****************
  1162 ;; Defined at:
  1163 ;;		line 237 in file "concentration.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0
  1179 ;;      Temps:          0       2       0       0       0
  1180 ;;      Totals:         0       2       0       0       0
  1181 ;;Total ram usage:        2 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:   10
  1184 ;; This function calls:
  1185 ;;		_check_for_match
  1186 ;;		_display_gameboard
  1187 ;;		_get_cursor_index
  1188 ;;		_toggle_cursor
  1189 ;;		_update_cursor
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _update_gameboard_from_input
  1197  004B                     _update_gameboard_from_input:	
  1198  004B                     l2053:	
  1199                           ;incstack = 0
  1200 ;; hardware stack exceeded
  1201                           ; Regs used in _update_gameboard_from_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1202                           
  1203                           
  1204                           ;concentration.c: 239:     if(GO == 0) {
  1205  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1206  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1207  004D  189F               	btfsc	31,1	;volatile
  1208  004E  2850               	goto	u1171
  1209  004F  2851               	goto	u1170
  1210  0050                     u1171:	
  1211  0050  2852               	goto	l254
  1212  0051                     u1170:	
  1213  0051                     l2055:	
  1214                           
  1215                           ;concentration.c: 240:         GO = 1;
  1216  0051  149F               	bsf	31,1	;volatile
  1217  0052                     l254:	
  1218                           ;concentration.c: 241:     }
  1219                           
  1220                           
  1221                           ;concentration.c: 242:     if(RB5 == 0) {
  1222  0052  1A86               	btfsc	6,5	;volatile
  1223  0053  2855               	goto	u1181
  1224  0054  2856               	goto	u1180
  1225  0055                     u1181:	
  1226  0055  2894               	goto	l2061
  1227  0056                     u1180:	
  1228  0056                     l2057:	
  1229                           
  1230                           ;concentration.c: 243:         if(visible[get_cursor_index()] == 0xFF) {
  1231  0056  120A  158A  265F  120A  118A  	fcall	_get_cursor_index
  1232  005B  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1233  005C  0084               	movwf	4
  1234  005D  1383               	bcf	3,7	;select IRP bank1
  1235  005E  0A00               	incf	0,w
  1236  005F  1D03               	btfss	3,2
  1237  0060  2862               	goto	u1191
  1238  0061  2863               	goto	u1190
  1239  0062                     u1191:	
  1240  0062  2894               	goto	l2061
  1241  0063                     u1190:	
  1242  0063                     l2059:	
  1243                           
  1244                           ;concentration.c: 244:             visible[get_cursor_index()] = board[get_cursor_index(
      +                          )];
  1245  0063  120A  158A  265F  120A  118A  	fcall	_get_cursor_index
  1246  0068  3EC0               	addlw	(low (_board| 0))& (0+255)
  1247  0069  0084               	movwf	4
  1248  006A  1383               	bcf	3,7	;select IRP bank1
  1249  006B  0800               	movf	0,w
  1250  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1251  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1252  006E  00C3               	movwf	??_update_gameboard_from_input
  1253  006F  120A  158A  265F  120A  118A  	fcall	_get_cursor_index
  1254  0074  3EA0               	addlw	(low (_visible| 0))& (0+255)
  1255  0075  0084               	movwf	4
  1256  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0078  0843               	movf	??_update_gameboard_from_input,w
  1259  0079  1383               	bcf	3,7	;select IRP bank1
  1260  007A  0080               	movwf	0
  1261                           
  1262                           ;concentration.c: 245:             current_char = board[get_cursor_index()];
  1263  007B  120A  158A  265F  120A  118A  	fcall	_get_cursor_index
  1264  0080  3EC0               	addlw	(low (_board| 0))& (0+255)
  1265  0081  0084               	movwf	4
  1266  0082  1383               	bcf	3,7	;select IRP bank1
  1267  0083  0800               	movf	0,w
  1268  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0086  00C3               	movwf	??_update_gameboard_from_input
  1271  0087  0843               	movf	??_update_gameboard_from_input,w
  1272  0088  00E5               	movwf	_current_char
  1273                           
  1274                           ;concentration.c: 247:             check_for_match(0);
  1275  0089  3000               	movlw	0
  1276  008A  120A  118A  2411  120A  118A  	fcall	_check_for_match
  1277                           
  1278                           ;concentration.c: 248:             display_gameboard();
  1279  008F  120A  158A  27BB  120A  118A  	fcall	_display_gameboard
  1280  0094                     l2061:	
  1281                           
  1282                           ;concentration.c: 252:     if(CCP1IF == 1) {
  1283  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0096  1D0C               	btfss	12,2	;volatile
  1286  0097  2899               	goto	u1201
  1287  0098  289A               	goto	u1200
  1288  0099                     u1201:	
  1289  0099  28BA               	goto	l2073
  1290  009A                     u1200:	
  1291  009A                     l2063:	
  1292                           
  1293                           ;concentration.c: 253:         if(delay_loops == 0) {
  1294  009A  0863               	movf	_delay_loops,w
  1295  009B  1D03               	btfss	3,2
  1296  009C  289E               	goto	u1211
  1297  009D  289F               	goto	u1210
  1298  009E                     u1211:	
  1299  009E  28A9               	goto	l2069
  1300  009F                     u1210:	
  1301  009F                     l2065:	
  1302                           
  1303                           ;concentration.c: 254:             delay_loops = 25;
  1304  009F  3019               	movlw	25
  1305  00A0  00C3               	movwf	??_update_gameboard_from_input
  1306  00A1  0843               	movf	??_update_gameboard_from_input,w
  1307  00A2  00E3               	movwf	_delay_loops
  1308  00A3                     l2067:	
  1309                           
  1310                           ;concentration.c: 255:             toggle_cursor();
  1311  00A3  120A  158A  2752  120A  118A  	fcall	_toggle_cursor
  1312                           
  1313                           ;concentration.c: 256:         } else {
  1314  00A8  28AB               	goto	l259
  1315  00A9                     l2069:	
  1316                           
  1317                           ;concentration.c: 257:             delay_loops--;
  1318  00A9  3001               	movlw	1
  1319  00AA  02E3               	subwf	_delay_loops,f
  1320  00AB                     l259:	
  1321                           ;concentration.c: 258:         }
  1322                           
  1323                           
  1324                           ;concentration.c: 259:         CCPR1 = TMR1+50000;
  1325  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1326  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1327  00AD  080E               	movf	14,w	;volatile
  1328  00AE  3E50               	addlw	80
  1329  00AF  00C3               	movwf	??_update_gameboard_from_input
  1330  00B0  080F               	movf	15,w	;volatile
  1331  00B1  1803               	skipnc
  1332  00B2  3E01               	addlw	1
  1333  00B3  3EC3               	addlw	195
  1334  00B4  00C4               	movwf	??_update_gameboard_from_input+1
  1335  00B5  0843               	movf	??_update_gameboard_from_input,w
  1336  00B6  0095               	movwf	21	;volatile
  1337  00B7  0844               	movf	??_update_gameboard_from_input+1,w
  1338  00B8  0096               	movwf	22	;volatile
  1339  00B9                     l2071:	
  1340                           
  1341                           ;concentration.c: 260:         CCP1IF = 0;
  1342  00B9  110C               	bcf	12,2	;volatile
  1343  00BA                     l2073:	
  1344                           
  1345                           ;concentration.c: 263:     if(joystick_x_pos > 900) {
  1346  00BA  085E               	movf	_joystick_x_pos+1,w
  1347  00BB  3A80               	xorlw	128
  1348  00BC  00FF               	movwf	btemp+1
  1349  00BD  3083               	movlw	131
  1350  00BE  027F               	subwf	btemp+1,w
  1351  00BF  1D03               	skipz
  1352  00C0  28C3               	goto	u1225
  1353  00C1  3085               	movlw	133
  1354  00C2  025D               	subwf	_joystick_x_pos,w
  1355  00C3                     u1225:	
  1356  00C3  1C03               	skipc
  1357  00C4  28C6               	goto	u1221
  1358  00C5  28C7               	goto	u1220
  1359  00C6                     u1221:	
  1360  00C6  28D9               	goto	l2079
  1361  00C7                     u1220:	
  1362  00C7                     l2075:	
  1363                           
  1364                           ;concentration.c: 264:         if(cursor_movable) {
  1365  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1366  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1367  00C9  0862               	movf	_cursor_movable,w
  1368  00CA  1903               	btfsc	3,2
  1369  00CB  28CD               	goto	u1231
  1370  00CC  28CE               	goto	u1230
  1371  00CD                     u1231:	
  1372  00CD  296B               	goto	l278
  1373  00CE                     u1230:	
  1374  00CE                     l2077:	
  1375                           
  1376                           ;concentration.c: 265:             update_cursor(30, 2);
  1377  00CE  3002               	movlw	2
  1378  00CF  00C3               	movwf	??_update_gameboard_from_input
  1379  00D0  0843               	movf	??_update_gameboard_from_input,w
  1380  00D1  00B8               	movwf	update_cursor@direction
  1381  00D2  301E               	movlw	30
  1382  00D3  120A  118A  216C  120A  118A  	fcall	_update_cursor
  1383  00D8  296B               	goto	l278
  1384  00D9                     l2079:	
  1385  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1386  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1387  00DB  085E               	movf	_joystick_x_pos+1,w
  1388  00DC  3A80               	xorlw	128
  1389  00DD  00FF               	movwf	btemp+1
  1390  00DE  3080               	movlw	128
  1391  00DF  027F               	subwf	btemp+1,w
  1392  00E0  1D03               	skipz
  1393  00E1  28E4               	goto	u1245
  1394  00E2  3064               	movlw	100
  1395  00E3  025D               	subwf	_joystick_x_pos,w
  1396  00E4                     u1245:	
  1397  00E4  1803               	skipnc
  1398  00E5  28E7               	goto	u1241
  1399  00E6  28E8               	goto	u1240
  1400  00E7                     u1241:	
  1401  00E7  28FA               	goto	l2085
  1402  00E8                     u1240:	
  1403  00E8                     l2081:	
  1404                           
  1405                           ;concentration.c: 268:         if(cursor_movable) {
  1406  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1407  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1408  00EA  0862               	movf	_cursor_movable,w
  1409  00EB  1903               	btfsc	3,2
  1410  00EC  28EE               	goto	u1251
  1411  00ED  28EF               	goto	u1250
  1412  00EE                     u1251:	
  1413  00EE  296B               	goto	l278
  1414  00EF                     u1250:	
  1415  00EF                     l2083:	
  1416                           
  1417                           ;concentration.c: 269:             update_cursor(30, 3);
  1418  00EF  3003               	movlw	3
  1419  00F0  00C3               	movwf	??_update_gameboard_from_input
  1420  00F1  0843               	movf	??_update_gameboard_from_input,w
  1421  00F2  00B8               	movwf	update_cursor@direction
  1422  00F3  301E               	movlw	30
  1423  00F4  120A  118A  216C  120A  118A  	fcall	_update_cursor
  1424  00F9  296B               	goto	l278
  1425  00FA                     l2085:	
  1426  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1427  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1428  00FC  085E               	movf	_joystick_x_pos+1,w
  1429  00FD  3A80               	xorlw	128
  1430  00FE  00FF               	movwf	btemp+1
  1431  00FF  3082               	movlw	130
  1432  0100  027F               	subwf	btemp+1,w
  1433  0101  1D03               	skipz
  1434  0102  2905               	goto	u1265
  1435  0103  3059               	movlw	89
  1436  0104  025D               	subwf	_joystick_x_pos,w
  1437  0105                     u1265:	
  1438  0105  1C03               	skipc
  1439  0106  2908               	goto	u1261
  1440  0107  2909               	goto	u1260
  1441  0108                     u1261:	
  1442  0108  291B               	goto	l2091
  1443  0109                     u1260:	
  1444  0109                     l2087:	
  1445                           
  1446                           ;concentration.c: 272:         if(cursor_movable) {
  1447  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1448  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1449  010B  0862               	movf	_cursor_movable,w
  1450  010C  1903               	btfsc	3,2
  1451  010D  290F               	goto	u1271
  1452  010E  2910               	goto	u1270
  1453  010F                     u1271:	
  1454  010F  296B               	goto	l278
  1455  0110                     u1270:	
  1456  0110                     l2089:	
  1457                           
  1458                           ;concentration.c: 273:             update_cursor(60, 2);
  1459  0110  3002               	movlw	2
  1460  0111  00C3               	movwf	??_update_gameboard_from_input
  1461  0112  0843               	movf	??_update_gameboard_from_input,w
  1462  0113  00B8               	movwf	update_cursor@direction
  1463  0114  303C               	movlw	60
  1464  0115  120A  118A  216C  120A  118A  	fcall	_update_cursor
  1465  011A  296B               	goto	l278
  1466  011B                     l2091:	
  1467  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1468  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1469  011D  085E               	movf	_joystick_x_pos+1,w
  1470  011E  3A80               	xorlw	128
  1471  011F  00FF               	movwf	btemp+1
  1472  0120  3081               	movlw	129
  1473  0121  027F               	subwf	btemp+1,w
  1474  0122  1D03               	skipz
  1475  0123  2926               	goto	u1285
  1476  0124  3090               	movlw	144
  1477  0125  025D               	subwf	_joystick_x_pos,w
  1478  0126                     u1285:	
  1479  0126  1803               	skipnc
  1480  0127  2929               	goto	u1281
  1481  0128  292A               	goto	u1280
  1482  0129                     u1281:	
  1483  0129  293C               	goto	l2097
  1484  012A                     u1280:	
  1485  012A                     l2093:	
  1486                           
  1487                           ;concentration.c: 276:         if(cursor_movable) {
  1488  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1489  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1490  012C  0862               	movf	_cursor_movable,w
  1491  012D  1903               	btfsc	3,2
  1492  012E  2930               	goto	u1291
  1493  012F  2931               	goto	u1290
  1494  0130                     u1291:	
  1495  0130  296B               	goto	l278
  1496  0131                     u1290:	
  1497  0131                     l2095:	
  1498                           
  1499                           ;concentration.c: 277:             update_cursor(60, 3);
  1500  0131  3003               	movlw	3
  1501  0132  00C3               	movwf	??_update_gameboard_from_input
  1502  0133  0843               	movf	??_update_gameboard_from_input,w
  1503  0134  00B8               	movwf	update_cursor@direction
  1504  0135  303C               	movlw	60
  1505  0136  120A  118A  216C  120A  118A  	fcall	_update_cursor
  1506  013B  296B               	goto	l278
  1507  013C                     l2097:	
  1508  013C  30FD               	movlw	253
  1509  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1510  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1511  013F  065B               	xorwf	_joystick_y_pos,w
  1512  0140  3003               	movlw	3
  1513  0141  1903               	skipnz
  1514  0142  065C               	xorwf	_joystick_y_pos+1,w
  1515  0143  1D03               	btfss	3,2
  1516  0144  2946               	goto	u1301
  1517  0145  2947               	goto	u1300
  1518  0146                     u1301:	
  1519  0146  2955               	goto	l2103
  1520  0147                     u1300:	
  1521  0147                     l2099:	
  1522                           
  1523                           ;concentration.c: 280:         if(cursor_movable) {
  1524  0147  0862               	movf	_cursor_movable,w
  1525  0148  1903               	btfsc	3,2
  1526  0149  294B               	goto	u1311
  1527  014A  294C               	goto	u1310
  1528  014B                     u1311:	
  1529  014B  296B               	goto	l278
  1530  014C                     u1310:	
  1531  014C                     l2101:	
  1532                           
  1533                           ;concentration.c: 281:             update_cursor(62, 1);
  1534  014C  01B8               	clrf	update_cursor@direction
  1535  014D  0AB8               	incf	update_cursor@direction,f
  1536  014E  303E               	movlw	62
  1537  014F  120A  118A  216C  120A  118A  	fcall	_update_cursor
  1538  0154  296B               	goto	l278
  1539  0155                     l2103:	
  1540  0155  085B               	movf	_joystick_y_pos,w
  1541  0156  045C               	iorwf	_joystick_y_pos+1,w
  1542  0157  1D03               	btfss	3,2
  1543  0158  295A               	goto	u1321
  1544  0159  295B               	goto	u1320
  1545  015A                     u1321:	
  1546  015A  2969               	goto	l275
  1547  015B                     u1320:	
  1548  015B                     l2105:	
  1549                           
  1550                           ;concentration.c: 284:         if(cursor_movable) {
  1551  015B  0862               	movf	_cursor_movable,w
  1552  015C  1903               	btfsc	3,2
  1553  015D  295F               	goto	u1331
  1554  015E  2960               	goto	u1330
  1555  015F                     u1331:	
  1556  015F  296B               	goto	l278
  1557  0160                     u1330:	
  1558  0160                     l2107:	
  1559                           
  1560                           ;concentration.c: 285:             update_cursor(62, 1);
  1561  0160  01B8               	clrf	update_cursor@direction
  1562  0161  0AB8               	incf	update_cursor@direction,f
  1563  0162  303E               	movlw	62
  1564  0163  120A  118A  216C  120A  118A  	fcall	_update_cursor
  1565  0168  296B               	goto	l278
  1566  0169                     l275:	
  1567                           
  1568                           ;concentration.c: 288:         cursor_movable = 1;
  1569  0169  01E2               	clrf	_cursor_movable
  1570  016A  0AE2               	incf	_cursor_movable,f
  1571  016B                     l278:	
  1572  016B  0008               	return
  1573  016C                     __end_of_update_gameboard_from_input:	
  1574                           
  1575                           	psect	text2
  1576  016C                     __ptext2:	
  1577 ;; *************** function _update_cursor *****************
  1578 ;; Defined at:
  1579 ;;		line 292 in file "concentration.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  move_delay_c    1    wreg     unsigned char 
  1582 ;;  direction       1   24[BANK0 ] unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  move_delay_c    1   27[BANK0 ] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       1       0       0       0
  1595 ;;      Locals:         0       1       0       0       0
  1596 ;;      Temps:          0       2       0       0       0
  1597 ;;      Totals:         0       4       0       0       0
  1598 ;;Total ram usage:        4 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    7
  1601 ;; This function calls:
  1602 ;;		_get_current_char
  1603 ;;		_lcd_goto
  1604 ;;		_lcd_putch
  1605 ;; This function is called by:
  1606 ;;		_update_gameboard_from_input
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _update_cursor
  1612  016C                     _update_cursor:	
  1613                           
  1614                           ;incstack = 0
  1615 ;; hardware stack exceeded
  1616                           ; Regs used in _update_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1617                           ;update_cursor@move_delay_count stored from wreg
  1618  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1619  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1620  016E  00BB               	movwf	update_cursor@move_delay_count
  1621  016F                     l1873:	
  1622                           
  1623                           ;concentration.c: 293:     cursor_movable = 0;
  1624  016F  01E2               	clrf	_cursor_movable
  1625  0170                     l1875:	
  1626                           
  1627                           ;concentration.c: 294:     cursor_move_delay_count = move_delay_count;
  1628  0170  083B               	movf	update_cursor@move_delay_count,w
  1629  0171  00B9               	movwf	??_update_cursor
  1630  0172  0839               	movf	??_update_cursor,w
  1631  0173  00FD               	movwf	_cursor_move_delay_count
  1632                           
  1633                           ;concentration.c: 295:     switch(direction) {
  1634  0174  29B3               	goto	l1897
  1635  0175                     l1877:	
  1636                           
  1637                           ;concentration.c: 297:             cursor_pos ^= 0x40;
  1638  0175  3040               	movlw	64
  1639  0176  00B9               	movwf	??_update_cursor
  1640  0177  0839               	movf	??_update_cursor,w
  1641  0178  06E6               	xorwf	_cursor_pos,f
  1642                           
  1643                           ;concentration.c: 298:             break;
  1644  0179  29C6               	goto	l1899
  1645  017A                     l1879:	
  1646                           
  1647                           ;concentration.c: 302:                     cursor_pos = 0x0F;
  1648  017A  300F               	movlw	15
  1649  017B  00B9               	movwf	??_update_cursor
  1650  017C  0839               	movf	??_update_cursor,w
  1651  017D  00E6               	movwf	_cursor_pos
  1652                           
  1653                           ;concentration.c: 303:                     break;
  1654  017E  29C6               	goto	l1899
  1655  017F                     l1881:	
  1656                           
  1657                           ;concentration.c: 305:                     cursor_pos = 0x4F;
  1658  017F  304F               	movlw	79
  1659  0180  00B9               	movwf	??_update_cursor
  1660  0181  0839               	movf	??_update_cursor,w
  1661  0182  00E6               	movwf	_cursor_pos
  1662                           
  1663                           ;concentration.c: 306:                     break;
  1664  0183  29C6               	goto	l1899
  1665  0184                     l1883:	
  1666                           
  1667                           ;concentration.c: 308:                     cursor_pos--;
  1668  0184  3001               	movlw	1
  1669  0185  02E6               	subwf	_cursor_pos,f
  1670                           
  1671                           ;concentration.c: 309:             }
  1672  0186  29C6               	goto	l1899
  1673  0187                     l1885:	
  1674  0187  0866               	movf	_cursor_pos,w
  1675  0188  00B9               	movwf	??_update_cursor
  1676  0189  01BA               	clrf	??_update_cursor+1
  1677                           
  1678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1679                           ; Switch size 1, requested type "simple"
  1680                           ; Number of cases is 1, Range of values is 0 to 0
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; simple_byte            4     3 (average)
  1684                           ; direct_byte           11     8 (fixed)
  1685                           ; jumptable            260     6 (fixed)
  1686                           ;	Chosen strategy is simple_byte
  1687  018A  083A               	movf	??_update_cursor+1,w
  1688  018B  3A00               	xorlw	0	; case 0
  1689  018C  1903               	skipnz
  1690  018D  298F               	goto	l2213
  1691  018E  2984               	goto	l1883
  1692  018F                     l2213:	
  1693                           
  1694                           ; Switch size 1, requested type "simple"
  1695                           ; Number of cases is 2, Range of values is 0 to 64
  1696                           ; switch strategies available:
  1697                           ; Name         Instructions Cycles
  1698                           ; simple_byte            7     4 (average)
  1699                           ; direct_byte          203     8 (fixed)
  1700                           ; jumptable            260     6 (fixed)
  1701                           ;	Chosen strategy is simple_byte
  1702  018F  0839               	movf	??_update_cursor,w
  1703  0190  3A00               	xorlw	0	; case 0
  1704  0191  1903               	skipnz
  1705  0192  297A               	goto	l1879
  1706  0193  3A40               	xorlw	64	; case 64
  1707  0194  1903               	skipnz
  1708  0195  297F               	goto	l1881
  1709  0196  2984               	goto	l1883
  1710  0197                     l1887:	
  1711                           
  1712                           ;concentration.c: 314:                     cursor_pos = 0x00;
  1713  0197  01E6               	clrf	_cursor_pos
  1714                           
  1715                           ;concentration.c: 315:                     break;
  1716  0198  29C6               	goto	l1899
  1717  0199                     l1889:	
  1718                           
  1719                           ;concentration.c: 317:                     cursor_pos = 0x40;
  1720  0199  3040               	movlw	64
  1721  019A  00B9               	movwf	??_update_cursor
  1722  019B  0839               	movf	??_update_cursor,w
  1723  019C  00E6               	movwf	_cursor_pos
  1724                           
  1725                           ;concentration.c: 318:                     break;
  1726  019D  29C6               	goto	l1899
  1727  019E                     l1891:	
  1728                           
  1729                           ;concentration.c: 320:                     cursor_pos++;
  1730  019E  3001               	movlw	1
  1731  019F  00B9               	movwf	??_update_cursor
  1732  01A0  0839               	movf	??_update_cursor,w
  1733  01A1  07E6               	addwf	_cursor_pos,f
  1734                           
  1735                           ;concentration.c: 321:             }
  1736  01A2  29C6               	goto	l1899
  1737  01A3                     l1893:	
  1738  01A3  0866               	movf	_cursor_pos,w
  1739  01A4  00B9               	movwf	??_update_cursor
  1740  01A5  01BA               	clrf	??_update_cursor+1
  1741                           
  1742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1743                           ; Switch size 1, requested type "simple"
  1744                           ; Number of cases is 1, Range of values is 0 to 0
  1745                           ; switch strategies available:
  1746                           ; Name         Instructions Cycles
  1747                           ; simple_byte            4     3 (average)
  1748                           ; direct_byte           11     8 (fixed)
  1749                           ; jumptable            260     6 (fixed)
  1750                           ;	Chosen strategy is simple_byte
  1751  01A6  083A               	movf	??_update_cursor+1,w
  1752  01A7  3A00               	xorlw	0	; case 0
  1753  01A8  1903               	skipnz
  1754  01A9  29AB               	goto	l2215
  1755  01AA  299E               	goto	l1891
  1756  01AB                     l2215:	
  1757                           
  1758                           ; Switch size 1, requested type "simple"
  1759                           ; Number of cases is 2, Range of values is 15 to 79
  1760                           ; switch strategies available:
  1761                           ; Name         Instructions Cycles
  1762                           ; simple_byte            7     4 (average)
  1763                           ; direct_byte          206    11 (fixed)
  1764                           ; jumptable            263     9 (fixed)
  1765                           ;	Chosen strategy is simple_byte
  1766  01AB  0839               	movf	??_update_cursor,w
  1767  01AC  3A0F               	xorlw	15	; case 15
  1768  01AD  1903               	skipnz
  1769  01AE  2997               	goto	l1887
  1770  01AF  3A40               	xorlw	64	; case 79
  1771  01B0  1903               	skipnz
  1772  01B1  2999               	goto	l1889
  1773  01B2  299E               	goto	l1891
  1774  01B3                     l1897:	
  1775  01B3  0838               	movf	update_cursor@direction,w
  1776  01B4  00B9               	movwf	??_update_cursor
  1777  01B5  01BA               	clrf	??_update_cursor+1
  1778                           
  1779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1780                           ; Switch size 1, requested type "simple"
  1781                           ; Number of cases is 1, Range of values is 0 to 0
  1782                           ; switch strategies available:
  1783                           ; Name         Instructions Cycles
  1784                           ; simple_byte            4     3 (average)
  1785                           ; direct_byte           11     8 (fixed)
  1786                           ; jumptable            260     6 (fixed)
  1787                           ;	Chosen strategy is simple_byte
  1788  01B6  083A               	movf	??_update_cursor+1,w
  1789  01B7  3A00               	xorlw	0	; case 0
  1790  01B8  1903               	skipnz
  1791  01B9  29BB               	goto	l2217
  1792  01BA  29C6               	goto	l1899
  1793  01BB                     l2217:	
  1794                           
  1795                           ; Switch size 1, requested type "simple"
  1796                           ; Number of cases is 3, Range of values is 1 to 3
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte           10     6 (average)
  1800                           ; direct_byte           20    11 (fixed)
  1801                           ; jumptable            263     9 (fixed)
  1802                           ;	Chosen strategy is simple_byte
  1803  01BB  0839               	movf	??_update_cursor,w
  1804  01BC  3A01               	xorlw	1	; case 1
  1805  01BD  1903               	skipnz
  1806  01BE  2975               	goto	l1877
  1807  01BF  3A03               	xorlw	3	; case 2
  1808  01C0  1903               	skipnz
  1809  01C1  2987               	goto	l1885
  1810  01C2  3A01               	xorlw	1	; case 3
  1811  01C3  1903               	skipnz
  1812  01C4  29A3               	goto	l1893
  1813  01C5  29C6               	goto	l1899
  1814  01C6                     l1899:	
  1815                           
  1816                           ;concentration.c: 324:     lcd_putch(current_char, gameboard);
  1817  01C6  0869               	movf	_gameboard,w
  1818  01C7  00B4               	movwf	lcd_putch@port
  1819  01C8  086A               	movf	_gameboard+1,w
  1820  01C9  00B5               	movwf	lcd_putch@port+1
  1821  01CA  0865               	movf	_current_char,w
  1822  01CB  120A  158A  26AF  120A  118A  	fcall	_lcd_putch
  1823                           
  1824                           ;concentration.c: 325:     lcd_goto(cursor_pos, gameboard);
  1825  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1826  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1827  01D2  0869               	movf	_gameboard,w
  1828  01D3  00AC               	movwf	lcd_goto@port
  1829  01D4  086A               	movf	_gameboard+1,w
  1830  01D5  00AD               	movwf	lcd_goto@port+1
  1831  01D6  0866               	movf	_cursor_pos,w
  1832  01D7  120A  158A  270F  120A  118A  	fcall	_lcd_goto
  1833                           
  1834                           ;concentration.c: 326:     get_current_char();
  1835  01DC  120A  158A  2690  120A  118A  	fcall	_get_current_char
  1836  01E1                     l1901:	
  1837                           
  1838                           ;concentration.c: 327:     if(cursor_solid == 1) {
  1839  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1840  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1841  01E3  0364               	decf	_cursor_solid,w
  1842  01E4  1D03               	btfss	3,2
  1843  01E5  29E7               	goto	u1121
  1844  01E6  29E8               	goto	u1120
  1845  01E7                     u1121:	
  1846  01E7  29FE               	goto	l297
  1847  01E8                     u1120:	
  1848  01E8                     l1903:	
  1849                           
  1850                           ;concentration.c: 328:         lcd_putch(0x20, gameboard);
  1851  01E8  0869               	movf	_gameboard,w
  1852  01E9  00B4               	movwf	lcd_putch@port
  1853  01EA  086A               	movf	_gameboard+1,w
  1854  01EB  00B5               	movwf	lcd_putch@port+1
  1855  01EC  3020               	movlw	32
  1856  01ED  120A  158A  26AF  120A  118A  	fcall	_lcd_putch
  1857                           
  1858                           ;concentration.c: 329:         lcd_goto(cursor_pos, gameboard);
  1859  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1860  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1861  01F4  0869               	movf	_gameboard,w
  1862  01F5  00AC               	movwf	lcd_goto@port
  1863  01F6  086A               	movf	_gameboard+1,w
  1864  01F7  00AD               	movwf	lcd_goto@port+1
  1865  01F8  0866               	movf	_cursor_pos,w
  1866  01F9  120A  158A  270F  120A  118A  	fcall	_lcd_goto
  1867  01FE                     l297:	
  1868  01FE  0008               	return
  1869  01FF                     __end_of_update_cursor:	
  1870                           
  1871                           	psect	text3
  1872  0F52                     __ptext3:	
  1873 ;; *************** function _toggle_cursor *****************
  1874 ;; Defined at:
  1875 ;;		line 333 in file "concentration.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    7
  1896 ;; This function calls:
  1897 ;;		_lcd_goto
  1898 ;;		_lcd_putch
  1899 ;; This function is called by:
  1900 ;;		_update_gameboard_from_input
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _toggle_cursor
  1906  0F52                     _toggle_cursor:	
  1907  0F52                     l1861:	
  1908                           ;incstack = 0
  1909 ;; hardware stack exceeded
  1910                           ; Regs used in _toggle_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1911                           
  1912                           
  1913                           ;concentration.c: 334:     if(cursor_solid == 0) {
  1914  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0F54  0864               	movf	_cursor_solid,w
  1917  0F55  1D03               	btfss	3,2
  1918  0F56  2F58               	goto	u1111
  1919  0F57  2F59               	goto	u1110
  1920  0F58                     u1111:	
  1921  0F58  2F68               	goto	l1867
  1922  0F59                     u1110:	
  1923  0F59                     l1863:	
  1924                           
  1925                           ;concentration.c: 335:         lcd_putch(0x20, gameboard);
  1926  0F59  0869               	movf	_gameboard,w
  1927  0F5A  00B4               	movwf	lcd_putch@port
  1928  0F5B  086A               	movf	_gameboard+1,w
  1929  0F5C  00B5               	movwf	lcd_putch@port+1
  1930  0F5D  3020               	movlw	32
  1931  0F5E  120A  158A  26AF  120A  158A  	fcall	_lcd_putch
  1932  0F63                     l1865:	
  1933                           
  1934                           ;concentration.c: 336:         cursor_solid = 1;
  1935  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0F65  01E4               	clrf	_cursor_solid
  1938  0F66  0AE4               	incf	_cursor_solid,f
  1939                           
  1940                           ;concentration.c: 337:     } else {
  1941  0F67  2F75               	goto	l1871
  1942  0F68                     l1867:	
  1943                           
  1944                           ;concentration.c: 338:         lcd_putch(current_char, gameboard);
  1945  0F68  0869               	movf	_gameboard,w
  1946  0F69  00B4               	movwf	lcd_putch@port
  1947  0F6A  086A               	movf	_gameboard+1,w
  1948  0F6B  00B5               	movwf	lcd_putch@port+1
  1949  0F6C  0865               	movf	_current_char,w
  1950  0F6D  120A  158A  26AF  120A  158A  	fcall	_lcd_putch
  1951  0F72                     l1869:	
  1952                           
  1953                           ;concentration.c: 339:         cursor_solid = 0;
  1954  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0F74  01E4               	clrf	_cursor_solid
  1957  0F75                     l1871:	
  1958                           
  1959                           ;concentration.c: 341:     lcd_goto(cursor_pos, gameboard);
  1960  0F75  0869               	movf	_gameboard,w
  1961  0F76  00AC               	movwf	lcd_goto@port
  1962  0F77  086A               	movf	_gameboard+1,w
  1963  0F78  00AD               	movwf	lcd_goto@port+1
  1964  0F79  0866               	movf	_cursor_pos,w
  1965  0F7A  120A  158A  270F  120A  158A  	fcall	_lcd_goto
  1966  0F7F                     l302:	
  1967  0F7F  0008               	return
  1968  0F80                     __end_of_toggle_cursor:	
  1969                           
  1970                           	psect	text4
  1971  0411                     __ptext4:	
  1972 ;; *************** function _check_for_match *****************
  1973 ;; Defined at:
  1974 ;;		line 212 in file "concentration.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  player          1    wreg     unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  player          1   32[BANK0 ] unsigned char 
  1979 ;;  temp_cursor_    1   34[BANK0 ] unsigned char 
  1980 ;;  second_tile     1   33[BANK0 ] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       0       0       0       0
  1991 ;;      Locals:         0       3       0       0       0
  1992 ;;      Temps:          0       1       0       0       0
  1993 ;;      Totals:         0       4       0       0       0
  1994 ;;Total ram usage:        4 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    9
  1997 ;; This function calls:
  1998 ;;		_display_scoreboard
  1999 ;;		_get_cursor_index
  2000 ;; This function is called by:
  2001 ;;		_update_gameboard_from_input
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _check_for_match
  2007  0411                     _check_for_match:	
  2008                           
  2009                           ;incstack = 0
  2010 ;; hardware stack exceeded
  2011                           ; Regs used in _check_for_match: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2012                           ;check_for_match@player stored from wreg
  2013  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0413  00C0               	movwf	check_for_match@player
  2016  0414                     l1831:	
  2017                           
  2018                           ;concentration.c: 213:     if(visible[cursor_pos] != 0xFF) {
  2019  0414  0866               	movf	_cursor_pos,w
  2020  0415  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2021  0416  0084               	movwf	4
  2022  0417  1383               	bcf	3,7	;select IRP bank1
  2023  0418  0A00               	incf	0,w
  2024  0419  1903               	btfsc	3,2
  2025  041A  2C1C               	goto	u1071
  2026  041B  2C1D               	goto	u1070
  2027  041C                     u1071:	
  2028  041C  2C7D               	goto	l251
  2029  041D                     u1070:	
  2030  041D                     l1833:	
  2031                           
  2032                           ;concentration.c: 214:         if(selected_tile == 0xFF) {
  2033  041D  0A5F               	incf	_selected_tile,w
  2034  041E  1D03               	btfss	3,2
  2035  041F  2C21               	goto	u1081
  2036  0420  2C22               	goto	u1080
  2037  0421                     u1081:	
  2038  0421  2C27               	goto	l1837
  2039  0422                     u1080:	
  2040  0422                     l1835:	
  2041                           
  2042                           ;concentration.c: 215:             selected_tile = cursor_pos;
  2043  0422  0866               	movf	_cursor_pos,w
  2044  0423  00BF               	movwf	??_check_for_match
  2045  0424  083F               	movf	??_check_for_match,w
  2046  0425  00DF               	movwf	_selected_tile
  2047                           
  2048                           ;concentration.c: 216:         } else {
  2049  0426  2C7D               	goto	l251
  2050  0427                     l1837:	
  2051                           
  2052                           ;concentration.c: 217:             char temp_cursor_pos = cursor_pos;
  2053  0427  0866               	movf	_cursor_pos,w
  2054  0428  00BF               	movwf	??_check_for_match
  2055  0429  083F               	movf	??_check_for_match,w
  2056  042A  00C2               	movwf	check_for_match@temp_cursor_pos
  2057  042B                     l1839:	
  2058                           
  2059                           ;concentration.c: 218:             char second_tile = board[get_cursor_index()];
  2060  042B  120A  158A  265F  120A  118A  	fcall	_get_cursor_index
  2061  0430  3EC0               	addlw	(low (_board| 0))& (0+255)
  2062  0431  0084               	movwf	4
  2063  0432  1383               	bcf	3,7	;select IRP bank1
  2064  0433  0800               	movf	0,w
  2065  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0436  00BF               	movwf	??_check_for_match
  2068  0437  083F               	movf	??_check_for_match,w
  2069  0438  00C1               	movwf	check_for_match@second_tile
  2070  0439                     l1841:	
  2071                           
  2072                           ;concentration.c: 219:             cursor_pos = selected_tile;
  2073  0439  085F               	movf	_selected_tile,w
  2074  043A  00BF               	movwf	??_check_for_match
  2075  043B  083F               	movf	??_check_for_match,w
  2076  043C  00E6               	movwf	_cursor_pos
  2077                           
  2078                           ;concentration.c: 220:             if(second_tile == board[get_cursor_index()]) {
  2079  043D  120A  158A  265F  120A  118A  	fcall	_get_cursor_index
  2080  0442  3EC0               	addlw	(low (_board| 0))& (0+255)
  2081  0443  0084               	movwf	4
  2082  0444  1383               	bcf	3,7	;select IRP bank1
  2083  0445  0800               	movf	0,w
  2084  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0448  0641               	xorwf	check_for_match@second_tile,w
  2087  0449  1D03               	skipz
  2088  044A  2C4C               	goto	u1091
  2089  044B  2C4D               	goto	u1090
  2090  044C                     u1091:	
  2091  044C  2C60               	goto	l1851
  2092  044D                     u1090:	
  2093  044D                     l1843:	
  2094                           
  2095                           ;concentration.c: 221:                 if(player == 0) {
  2096  044D  0840               	movf	check_for_match@player,w
  2097  044E  1D03               	btfss	3,2
  2098  044F  2C51               	goto	u1101
  2099  0450  2C52               	goto	u1100
  2100  0451                     u1101:	
  2101  0451  2C57               	goto	l1847
  2102  0452                     u1100:	
  2103  0452                     l1845:	
  2104                           
  2105                           ;concentration.c: 222:                     p1_score++;
  2106  0452  3001               	movlw	1
  2107  0453  00BF               	movwf	??_check_for_match
  2108  0454  083F               	movf	??_check_for_match,w
  2109  0455  07E1               	addwf	_p1_score,f
  2110                           
  2111                           ;concentration.c: 223:                 } else {
  2112  0456  2C5B               	goto	l1849
  2113  0457                     l1847:	
  2114                           
  2115                           ;concentration.c: 224:                     p2_score++;
  2116  0457  3001               	movlw	1
  2117  0458  00BF               	movwf	??_check_for_match
  2118  0459  083F               	movf	??_check_for_match,w
  2119  045A  07E0               	addwf	_p2_score,f
  2120  045B                     l1849:	
  2121                           
  2122                           ;concentration.c: 226:                 display_scoreboard();
  2123  045B  120A  118A  26A5  120A  118A  	fcall	_display_scoreboard
  2124  0460                     l1851:	
  2125                           
  2126                           ;concentration.c: 228:             visible[selected_tile] = 0xFF;
  2127  0460  30FF               	movlw	255
  2128  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0463  00BF               	movwf	??_check_for_match
  2131  0464  085F               	movf	_selected_tile,w
  2132  0465  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2133  0466  0084               	movwf	4
  2134  0467  083F               	movf	??_check_for_match,w
  2135  0468  1383               	bcf	3,7	;select IRP bank1
  2136  0469  0080               	movwf	0
  2137  046A                     l1853:	
  2138                           
  2139                           ;concentration.c: 229:             visible[temp_cursor_pos] = 0xFF;
  2140  046A  30FF               	movlw	255
  2141  046B  00BF               	movwf	??_check_for_match
  2142  046C  0842               	movf	check_for_match@temp_cursor_pos,w
  2143  046D  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2144  046E  0084               	movwf	4
  2145  046F  083F               	movf	??_check_for_match,w
  2146  0470  0080               	movwf	0
  2147  0471                     l1855:	
  2148                           
  2149                           ;concentration.c: 230:             current_char = 0xFF;
  2150  0471  30FF               	movlw	255
  2151  0472  00BF               	movwf	??_check_for_match
  2152  0473  083F               	movf	??_check_for_match,w
  2153  0474  00E5               	movwf	_current_char
  2154  0475                     l1857:	
  2155                           
  2156                           ;concentration.c: 231:             selected_tile = 0xFF;
  2157  0475  30FF               	movlw	255
  2158  0476  00BF               	movwf	??_check_for_match
  2159  0477  083F               	movf	??_check_for_match,w
  2160  0478  00DF               	movwf	_selected_tile
  2161  0479                     l1859:	
  2162                           
  2163                           ;concentration.c: 232:             cursor_pos = temp_cursor_pos;
  2164  0479  0842               	movf	check_for_match@temp_cursor_pos,w
  2165  047A  00BF               	movwf	??_check_for_match
  2166  047B  083F               	movf	??_check_for_match,w
  2167  047C  00E6               	movwf	_cursor_pos
  2168  047D                     l251:	
  2169  047D  0008               	return
  2170  047E                     __end_of_check_for_match:	
  2171                           
  2172                           	psect	text5
  2173  028D                     __ptext5:	
  2174 ;; *************** function _startup *****************
  2175 ;; Defined at:
  2176 ;;		line 108 in file "concentration.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    9
  2197 ;; This function calls:
  2198 ;;		_DelayMs
  2199 ;;		_display_gameboard
  2200 ;;		_display_scoreboard
  2201 ;;		_lcd_clear
  2202 ;;		_lcd_goto
  2203 ;;		_lcd_puts
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _startup
  2211  028D                     _startup:	
  2212  028D                     l2035:	
  2213                           ;incstack = 0
  2214 ;; hardware stack exceeded
  2215                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2216                           
  2217                           
  2218                           ;concentration.c: 109:     lcd_clear(gameboard);
  2219  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2220  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2221  028F  0869               	movf	_gameboard,w
  2222  0290  00AC               	movwf	lcd_clear@port
  2223  0291  086A               	movf	_gameboard+1,w
  2224  0292  00AD               	movwf	lcd_clear@port+1
  2225  0293  120A  158A  26DA  120A  118A  	fcall	_lcd_clear
  2226                           
  2227                           ;concentration.c: 110:     lcd_clear(scoreboard);
  2228  0298  3008               	movlw	8
  2229  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2230  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2231  029B  00AC               	movwf	lcd_clear@port
  2232  029C  3000               	movlw	0
  2233  029D  00AD               	movwf	lcd_clear@port+1
  2234  029E  120A  158A  26DA  120A  118A  	fcall	_lcd_clear
  2235                           
  2236                           ;concentration.c: 111:     lcd_puts(" Concentration!", scoreboard);
  2237  02A3  3008               	movlw	8
  2238  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2239  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2240  02A6  00AC               	movwf	lcd_puts@port
  2241  02A7  3000               	movlw	0
  2242  02A8  00AD               	movwf	lcd_puts@port+1
  2243  02A9  3052               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2244  02AA  120A  118A  27D5  120A  118A  	fcall	_lcd_puts
  2245                           
  2246                           ;concentration.c: 112:     lcd_puts("Press the button", gameboard);
  2247  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2248  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2249  02B1  0869               	movf	_gameboard,w
  2250  02B2  00AC               	movwf	lcd_puts@port
  2251  02B3  086A               	movf	_gameboard+1,w
  2252  02B4  00AD               	movwf	lcd_puts@port+1
  2253  02B5  3041               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2254  02B6  120A  118A  27D5  120A  118A  	fcall	_lcd_puts
  2255                           
  2256                           ;concentration.c: 113:     lcd_goto(0x40, gameboard);
  2257  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2258  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2259  02BD  0869               	movf	_gameboard,w
  2260  02BE  00AC               	movwf	lcd_goto@port
  2261  02BF  086A               	movf	_gameboard+1,w
  2262  02C0  00AD               	movwf	lcd_goto@port+1
  2263  02C1  3040               	movlw	64
  2264  02C2  120A  158A  270F  120A  118A  	fcall	_lcd_goto
  2265                           
  2266                           ;concentration.c: 114:     lcd_puts("    to start", gameboard);
  2267  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2268  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2269  02C9  0869               	movf	_gameboard,w
  2270  02CA  00AC               	movwf	lcd_puts@port
  2271  02CB  086A               	movf	_gameboard+1,w
  2272  02CC  00AD               	movwf	lcd_puts@port+1
  2273  02CD  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2274  02CE  120A  118A  27D5  120A  118A  	fcall	_lcd_puts
  2275  02D3                     l190:	
  2276                           ;concentration.c: 115:     while(RB5);
  2277                           
  2278  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2279  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2280  02D5  1A86               	btfsc	6,5	;volatile
  2281  02D6  2AD8               	goto	u1151
  2282  02D7  2AD9               	goto	u1150
  2283  02D8                     u1151:	
  2284  02D8  2AD3               	goto	l190
  2285  02D9                     u1150:	
  2286  02D9                     l2037:	
  2287                           
  2288                           ;concentration.c: 116:     DelayMs(8);
  2289  02D9  3008               	movlw	8
  2290  02DA  00A4               	movwf	DelayMs@millis
  2291  02DB  3000               	movlw	0
  2292  02DC  00A5               	movwf	DelayMs@millis+1
  2293  02DD  120A  158A  26C1  120A  118A  	fcall	_DelayMs
  2294  02E2                     l193:	
  2295                           ;concentration.c: 117:     while(!RB5);
  2296                           
  2297  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2298  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2299  02E4  1E86               	btfss	6,5	;volatile
  2300  02E5  2AE7               	goto	u1161
  2301  02E6  2AE8               	goto	u1160
  2302  02E7                     u1161:	
  2303  02E7  2AE2               	goto	l193
  2304  02E8                     u1160:	
  2305  02E8                     l2039:	
  2306                           
  2307                           ;concentration.c: 118:     DelayMs(8);
  2308  02E8  3008               	movlw	8
  2309  02E9  00A4               	movwf	DelayMs@millis
  2310  02EA  3000               	movlw	0
  2311  02EB  00A5               	movwf	DelayMs@millis+1
  2312  02EC  120A  158A  26C1  120A  118A  	fcall	_DelayMs
  2313  02F1                     l2041:	
  2314                           
  2315                           ;concentration.c: 119:     lcd_clear(gameboard);
  2316  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2317  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2318  02F3  0869               	movf	_gameboard,w
  2319  02F4  00AC               	movwf	lcd_clear@port
  2320  02F5  086A               	movf	_gameboard+1,w
  2321  02F6  00AD               	movwf	lcd_clear@port+1
  2322  02F7  120A  158A  26DA  120A  118A  	fcall	_lcd_clear
  2323  02FC                     l2043:	
  2324                           
  2325                           ;concentration.c: 120:     lcd_clear(scoreboard);
  2326  02FC  3008               	movlw	8
  2327  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2328  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2329  02FF  00AC               	movwf	lcd_clear@port
  2330  0300  3000               	movlw	0
  2331  0301  00AD               	movwf	lcd_clear@port+1
  2332  0302  120A  158A  26DA  120A  118A  	fcall	_lcd_clear
  2333  0307                     l2045:	
  2334                           
  2335                           ;concentration.c: 121:     p1_score = 0;
  2336  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0309  01E1               	clrf	_p1_score
  2339  030A                     l2047:	
  2340                           
  2341                           ;concentration.c: 122:     p2_score = 0;
  2342  030A  01E0               	clrf	_p2_score
  2343  030B                     l2049:	
  2344                           
  2345                           ;concentration.c: 123:     display_scoreboard();
  2346  030B  120A  118A  26A5  120A  118A  	fcall	_display_scoreboard
  2347  0310                     l2051:	
  2348                           
  2349                           ;concentration.c: 124:     display_gameboard();
  2350  0310  120A  158A  27BB  120A  118A  	fcall	_display_gameboard
  2351  0315                     l196:	
  2352  0315  0008               	return
  2353  0316                     __end_of_startup:	
  2354                           
  2355                           	psect	text6
  2356  06A5                     __ptext6:	
  2357 ;; *************** function _display_scoreboard *****************
  2358 ;; Defined at:
  2359 ;;		line 127 in file "concentration.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0
  2375 ;;      Temps:          0       1       0       0       0
  2376 ;;      Totals:         0       1       0       0       0
  2377 ;;Total ram usage:        1 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    8
  2380 ;; This function calls:
  2381 ;;		_lcd_display_char_as_num
  2382 ;;		_lcd_goto
  2383 ;;		_lcd_puts
  2384 ;; This function is called by:
  2385 ;;		_startup
  2386 ;;		_check_for_match
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _display_scoreboard
  2392  06A5                     _display_scoreboard:	
  2393  06A5                     l1761:	
  2394                           ;incstack = 0
  2395 ;; hardware stack exceeded
  2396                           ; Regs used in _display_scoreboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2397                           
  2398                           
  2399                           ;concentration.c: 128:     lcd_puts("     Score:", scoreboard);
  2400  06A5  3008               	movlw	8
  2401  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2402  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2403  06A8  00AC               	movwf	lcd_puts@port
  2404  06A9  3000               	movlw	0
  2405  06AA  00AD               	movwf	lcd_puts@port+1
  2406  06AB  306F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2407  06AC  120A  118A  27D5  120A  118A  	fcall	_lcd_puts
  2408                           
  2409                           ;concentration.c: 129:     lcd_goto(0x40, scoreboard);
  2410  06B1  3008               	movlw	8
  2411  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2412  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2413  06B4  00AC               	movwf	lcd_goto@port
  2414  06B5  3000               	movlw	0
  2415  06B6  00AD               	movwf	lcd_goto@port+1
  2416  06B7  3040               	movlw	64
  2417  06B8  120A  158A  270F  120A  118A  	fcall	_lcd_goto
  2418                           
  2419                           ;concentration.c: 130:     lcd_puts(" P1: ", scoreboard);
  2420  06BD  3008               	movlw	8
  2421  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2422  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2423  06C0  00AC               	movwf	lcd_puts@port
  2424  06C1  3000               	movlw	0
  2425  06C2  00AD               	movwf	lcd_puts@port+1
  2426  06C3  3082               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2427  06C4  120A  118A  27D5  120A  118A  	fcall	_lcd_puts
  2428                           
  2429                           ;concentration.c: 131:     lcd_display_char_as_num(p1_score, 2, scoreboard);
  2430  06C9  3002               	movlw	2
  2431  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2432  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2433  06CC  00BE               	movwf	??_display_scoreboard
  2434  06CD  083E               	movf	??_display_scoreboard,w
  2435  06CE  00B8               	movwf	lcd_display_char_as_num@digits
  2436  06CF  3008               	movlw	8
  2437  06D0  00B9               	movwf	lcd_display_char_as_num@port
  2438  06D1  3000               	movlw	0
  2439  06D2  00BA               	movwf	lcd_display_char_as_num@port+1
  2440  06D3  0861               	movf	_p1_score,w
  2441  06D4  120A  118A  2316  120A  118A  	fcall	_lcd_display_char_as_num
  2442                           
  2443                           ;concentration.c: 132:     lcd_puts("  P2: ", scoreboard);
  2444  06D9  3008               	movlw	8
  2445  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  2446  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  2447  06DC  00AC               	movwf	lcd_puts@port
  2448  06DD  3000               	movlw	0
  2449  06DE  00AD               	movwf	lcd_puts@port+1
  2450  06DF  307B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2451  06E0  120A  118A  27D5  120A  118A  	fcall	_lcd_puts
  2452                           
  2453                           ;concentration.c: 133:     lcd_display_char_as_num(p2_score, 2, scoreboard);
  2454  06E5  3002               	movlw	2
  2455  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2456  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2457  06E8  00BE               	movwf	??_display_scoreboard
  2458  06E9  083E               	movf	??_display_scoreboard,w
  2459  06EA  00B8               	movwf	lcd_display_char_as_num@digits
  2460  06EB  3008               	movlw	8
  2461  06EC  00B9               	movwf	lcd_display_char_as_num@port
  2462  06ED  3000               	movlw	0
  2463  06EE  00BA               	movwf	lcd_display_char_as_num@port+1
  2464  06EF  0860               	movf	_p2_score,w
  2465  06F0  120A  118A  2316  120A  118A  	fcall	_lcd_display_char_as_num
  2466  06F5                     l199:	
  2467  06F5  0008               	return
  2468  06F6                     __end_of_display_scoreboard:	
  2469                           
  2470                           	psect	text7
  2471  07D5                     __ptext7:	
  2472 ;; *************** function _lcd_puts *****************
  2473 ;; Defined at:
  2474 ;;		line 129 in file "lcd4bits.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  string          1    wreg     PTR const unsigned char 
  2477 ;;		 -> STR_6(7), STR_5(6), STR_4(12), STR_3(13), 
  2478 ;;		 -> STR_2(17), STR_1(16), 
  2479 ;;  port            2   12[BANK0 ] PTR unsigned char 
  2480 ;;		 -> PORTD(1), PORTA(1), 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  string          1   15[BANK0 ] PTR const unsigned char 
  2483 ;;		 -> STR_6(7), STR_5(6), STR_4(12), STR_3(13), 
  2484 ;;		 -> STR_2(17), STR_1(16), 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       2       0       0       0
  2495 ;;      Locals:         0       1       0       0       0
  2496 ;;      Temps:          0       1       0       0       0
  2497 ;;      Totals:         0       4       0       0       0
  2498 ;;Total ram usage:        4 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    6
  2501 ;; This function calls:
  2502 ;;		_lcd_write
  2503 ;; This function is called by:
  2504 ;;		_startup
  2505 ;;		_display_scoreboard
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _lcd_puts
  2511  07D5                     _lcd_puts:	
  2512                           
  2513                           ;incstack = 0
  2514 ;; hardware stack exceeded
  2515                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2516                           ;lcd_puts@string stored from wreg
  2517  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  2518  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  2519  07D7  00AF               	movwf	lcd_puts@string
  2520  07D8                     l1723:	
  2521                           
  2522                           ;lcd4bits.c: 130:     while (*string != 0) {
  2523  07D8  2FF3               	goto	l1729
  2524  07D9                     l1725:	
  2525                           
  2526                           ;lcd4bits.c: 131:         lcd_write(0x10, *string++, port);
  2527  07D9  082F               	movf	lcd_puts@string,w
  2528  07DA  0084               	movwf	4
  2529  07DB  120A  118A  2200  120A  118A  	fcall	stringdir
  2530  07E0  00AE               	movwf	??_lcd_puts
  2531  07E1  082E               	movf	??_lcd_puts,w
  2532  07E2  00A6               	movwf	lcd_write@CmdChar
  2533  07E3  082C               	movf	lcd_puts@port,w
  2534  07E4  00A7               	movwf	lcd_write@port
  2535  07E5  082D               	movf	lcd_puts@port+1,w
  2536  07E6  00A8               	movwf	lcd_write@port+1
  2537  07E7  3010               	movlw	16
  2538  07E8  120A  118A  26F6  120A  118A  	fcall	_lcd_write
  2539  07ED                     l1727:	
  2540  07ED  3001               	movlw	1
  2541  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  2542  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  2543  07F0  00AE               	movwf	??_lcd_puts
  2544  07F1  082E               	movf	??_lcd_puts,w
  2545  07F2  07AF               	addwf	lcd_puts@string,f
  2546  07F3                     l1729:	
  2547                           
  2548                           ;lcd4bits.c: 130:     while (*string != 0) {
  2549  07F3  082F               	movf	lcd_puts@string,w
  2550  07F4  0084               	movwf	4
  2551  07F5  120A  118A  2200  120A  118A  	fcall	stringdir
  2552  07FA  3A00               	xorlw	0
  2553  07FB  1D03               	skipz
  2554  07FC  2FFE               	goto	u931
  2555  07FD  2FFF               	goto	u930
  2556  07FE                     u931:	
  2557  07FE  2FD9               	goto	l1725
  2558  07FF                     u930:	
  2559  07FF                     l357:	
  2560  07FF  0008               	return
  2561  0800                     __end_of_lcd_puts:	
  2562                           
  2563                           	psect	text8
  2564  0316                     __ptext8:	
  2565 ;; *************** function _lcd_display_char_as_num *****************
  2566 ;; Defined at:
  2567 ;;		line 176 in file "lcd4bits.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  number          1    wreg     unsigned char 
  2570 ;;  digits          1   24[BANK0 ] unsigned char 
  2571 ;;  port            2   25[BANK0 ] PTR unsigned char 
  2572 ;;		 -> PORTD(1), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  number          1   29[BANK0 ] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2584 ;;      Params:         0       3       0       0       0
  2585 ;;      Locals:         0       1       0       0       0
  2586 ;;      Temps:          0       2       0       0       0
  2587 ;;      Totals:         0       6       0       0       0
  2588 ;;Total ram usage:        6 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    7
  2591 ;; This function calls:
  2592 ;;		___awdiv
  2593 ;;		___awmod
  2594 ;;		_lcd_putch
  2595 ;; This function is called by:
  2596 ;;		_display_scoreboard
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _lcd_display_char_as_num
  2602  0316                     _lcd_display_char_as_num:	
  2603                           
  2604                           ;incstack = 0
  2605 ;; hardware stack exceeded
  2606                           ; Regs used in _lcd_display_char_as_num: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2607                           ;lcd_display_char_as_num@number stored from wreg
  2608  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0318  00BD               	movwf	lcd_display_char_as_num@number
  2611  0319                     l1735:	
  2612                           
  2613                           ;lcd4bits.c: 177:     if(digits > 2) {
  2614  0319  3003               	movlw	3
  2615  031A  0238               	subwf	lcd_display_char_as_num@digits,w
  2616  031B  1C03               	skipc
  2617  031C  2B1E               	goto	u941
  2618  031D  2B1F               	goto	u940
  2619  031E                     u941:	
  2620  031E  2B3C               	goto	l1739
  2621  031F                     u940:	
  2622  031F                     l1737:	
  2623                           
  2624                           ;lcd4bits.c: 178:         lcd_putch((number/100)+0x30, port);
  2625  031F  0839               	movf	lcd_display_char_as_num@port,w
  2626  0320  00B4               	movwf	lcd_putch@port
  2627  0321  083A               	movf	lcd_display_char_as_num@port+1,w
  2628  0322  00B5               	movwf	lcd_putch@port+1
  2629  0323  3064               	movlw	100
  2630  0324  00AB               	movwf	___awdiv@divisor
  2631  0325  3000               	movlw	0
  2632  0326  00AC               	movwf	___awdiv@divisor+1
  2633  0327  083D               	movf	lcd_display_char_as_num@number,w
  2634  0328  00BB               	movwf	??_lcd_display_char_as_num
  2635  0329  01BC               	clrf	??_lcd_display_char_as_num+1
  2636  032A  083B               	movf	??_lcd_display_char_as_num,w
  2637  032B  00AD               	movwf	___awdiv@dividend
  2638  032C  083C               	movf	??_lcd_display_char_as_num+1,w
  2639  032D  00AE               	movwf	___awdiv@dividend+1
  2640  032E  120A  118A  247E  120A  118A  	fcall	___awdiv
  2641  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2643  0335  082B               	movf	?___awdiv,w
  2644  0336  3E30               	addlw	48
  2645  0337  120A  158A  26AF  120A  118A  	fcall	_lcd_putch
  2646  033C                     l1739:	
  2647                           
  2648                           ;lcd4bits.c: 180:     if(digits > 1) {
  2649  033C  3002               	movlw	2
  2650  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2651  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2652  033F  0238               	subwf	lcd_display_char_as_num@digits,w
  2653  0340  1C03               	skipc
  2654  0341  2B43               	goto	u951
  2655  0342  2B44               	goto	u950
  2656  0343                     u951:	
  2657  0343  2B70               	goto	l1743
  2658  0344                     u950:	
  2659  0344                     l1741:	
  2660                           
  2661                           ;lcd4bits.c: 181:         lcd_putch(((number%100)/10)+0x30, port);
  2662  0344  0839               	movf	lcd_display_char_as_num@port,w
  2663  0345  00B4               	movwf	lcd_putch@port
  2664  0346  083A               	movf	lcd_display_char_as_num@port+1,w
  2665  0347  00B5               	movwf	lcd_putch@port+1
  2666  0348  300A               	movlw	10
  2667  0349  00AB               	movwf	___awdiv@divisor
  2668  034A  3000               	movlw	0
  2669  034B  00AC               	movwf	___awdiv@divisor+1
  2670  034C  083D               	movf	lcd_display_char_as_num@number,w
  2671  034D  00BB               	movwf	??_lcd_display_char_as_num
  2672  034E  01BC               	clrf	??_lcd_display_char_as_num+1
  2673  034F  083B               	movf	??_lcd_display_char_as_num,w
  2674  0350  00A6               	movwf	___awmod@dividend
  2675  0351  083C               	movf	??_lcd_display_char_as_num+1,w
  2676  0352  00A7               	movwf	___awmod@dividend+1
  2677  0353  3064               	movlw	100
  2678  0354  00A4               	movwf	___awmod@divisor
  2679  0355  3000               	movlw	0
  2680  0356  00A5               	movwf	___awmod@divisor+1
  2681  0357  120A  118A  25A6  120A  118A  	fcall	___awmod
  2682  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2683  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2684  035E  0825               	movf	?___awmod+1,w
  2685  035F  00AE               	movwf	___awdiv@dividend+1
  2686  0360  0824               	movf	?___awmod,w
  2687  0361  00AD               	movwf	___awdiv@dividend
  2688  0362  120A  118A  247E  120A  118A  	fcall	___awdiv
  2689  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0369  082B               	movf	?___awdiv,w
  2692  036A  3E30               	addlw	48
  2693  036B  120A  158A  26AF  120A  118A  	fcall	_lcd_putch
  2694  0370                     l1743:	
  2695                           
  2696                           ;lcd4bits.c: 183:     if(digits > 0) {
  2697  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0372  0838               	movf	lcd_display_char_as_num@digits,w
  2700  0373  1903               	btfsc	3,2
  2701  0374  2B76               	goto	u961
  2702  0375  2B77               	goto	u960
  2703  0376                     u961:	
  2704  0376  2B94               	goto	l377
  2705  0377                     u960:	
  2706  0377                     l1745:	
  2707                           
  2708                           ;lcd4bits.c: 184:         lcd_putch((number%10)+0x30, port);
  2709  0377  0839               	movf	lcd_display_char_as_num@port,w
  2710  0378  00B4               	movwf	lcd_putch@port
  2711  0379  083A               	movf	lcd_display_char_as_num@port+1,w
  2712  037A  00B5               	movwf	lcd_putch@port+1
  2713  037B  300A               	movlw	10
  2714  037C  00A4               	movwf	___awmod@divisor
  2715  037D  3000               	movlw	0
  2716  037E  00A5               	movwf	___awmod@divisor+1
  2717  037F  083D               	movf	lcd_display_char_as_num@number,w
  2718  0380  00BB               	movwf	??_lcd_display_char_as_num
  2719  0381  01BC               	clrf	??_lcd_display_char_as_num+1
  2720  0382  083B               	movf	??_lcd_display_char_as_num,w
  2721  0383  00A6               	movwf	___awmod@dividend
  2722  0384  083C               	movf	??_lcd_display_char_as_num+1,w
  2723  0385  00A7               	movwf	___awmod@dividend+1
  2724  0386  120A  118A  25A6  120A  118A  	fcall	___awmod
  2725  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2726  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2727  038D  0824               	movf	?___awmod,w
  2728  038E  3E30               	addlw	48
  2729  038F  120A  158A  26AF  120A  118A  	fcall	_lcd_putch
  2730  0394                     l377:	
  2731  0394  0008               	return
  2732  0395                     __end_of_lcd_display_char_as_num:	
  2733                           
  2734                           	psect	text9
  2735  05A6                     __ptext9:	
  2736 ;; *************** function ___awmod *****************
  2737 ;; Defined at:
  2738 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  divisor         2    4[BANK0 ] int 
  2741 ;;  dividend        2    6[BANK0 ] int 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  sign            1   10[BANK0 ] unsigned char 
  2744 ;;  counter         1    9[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    4[BANK0 ] int 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       4       0       0       0
  2755 ;;      Locals:         0       2       0       0       0
  2756 ;;      Temps:          0       1       0       0       0
  2757 ;;      Totals:         0       7       0       0       0
  2758 ;;Total ram usage:        7 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    4
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_lcd_display_char_as_num
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___awmod
  2770  05A6                     ___awmod:	
  2771  05A6                     l1685:	
  2772                           ;incstack = 0
  2773 ;; hardware stack exceeded
  2774                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2775                           
  2776  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2777  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2778  05A8  01AA               	clrf	___awmod@sign
  2779  05A9                     l1687:	
  2780  05A9  1FA7               	btfss	___awmod@dividend+1,7
  2781  05AA  2DAC               	goto	u841
  2782  05AB  2DAD               	goto	u840
  2783  05AC                     u841:	
  2784  05AC  2DB4               	goto	l1693
  2785  05AD                     u840:	
  2786  05AD                     l1689:	
  2787  05AD  09A6               	comf	___awmod@dividend,f
  2788  05AE  09A7               	comf	___awmod@dividend+1,f
  2789  05AF  0AA6               	incf	___awmod@dividend,f
  2790  05B0  1903               	skipnz
  2791  05B1  0AA7               	incf	___awmod@dividend+1,f
  2792  05B2                     l1691:	
  2793  05B2  01AA               	clrf	___awmod@sign
  2794  05B3  0AAA               	incf	___awmod@sign,f
  2795  05B4                     l1693:	
  2796  05B4  1FA5               	btfss	___awmod@divisor+1,7
  2797  05B5  2DB7               	goto	u851
  2798  05B6  2DB8               	goto	u850
  2799  05B7                     u851:	
  2800  05B7  2DBD               	goto	l1697
  2801  05B8                     u850:	
  2802  05B8                     l1695:	
  2803  05B8  09A4               	comf	___awmod@divisor,f
  2804  05B9  09A5               	comf	___awmod@divisor+1,f
  2805  05BA  0AA4               	incf	___awmod@divisor,f
  2806  05BB  1903               	skipnz
  2807  05BC  0AA5               	incf	___awmod@divisor+1,f
  2808  05BD                     l1697:	
  2809  05BD  0824               	movf	___awmod@divisor,w
  2810  05BE  0425               	iorwf	___awmod@divisor+1,w
  2811  05BF  1903               	btfsc	3,2
  2812  05C0  2DC2               	goto	u861
  2813  05C1  2DC3               	goto	u860
  2814  05C2                     u861:	
  2815  05C2  2DF2               	goto	l1715
  2816  05C3                     u860:	
  2817  05C3                     l1699:	
  2818  05C3  01A9               	clrf	___awmod@counter
  2819  05C4  0AA9               	incf	___awmod@counter,f
  2820  05C5  2DD1               	goto	l1705
  2821  05C6                     l1701:	
  2822  05C6  3001               	movlw	1
  2823  05C7                     u875:	
  2824  05C7  1003               	clrc
  2825  05C8  0DA4               	rlf	___awmod@divisor,f
  2826  05C9  0DA5               	rlf	___awmod@divisor+1,f
  2827  05CA  3EFF               	addlw	-1
  2828  05CB  1D03               	skipz
  2829  05CC  2DC7               	goto	u875
  2830  05CD                     l1703:	
  2831  05CD  3001               	movlw	1
  2832  05CE  00A8               	movwf	??___awmod
  2833  05CF  0828               	movf	??___awmod,w
  2834  05D0  07A9               	addwf	___awmod@counter,f
  2835  05D1                     l1705:	
  2836  05D1  1FA5               	btfss	___awmod@divisor+1,7
  2837  05D2  2DD4               	goto	u881
  2838  05D3  2DD5               	goto	u880
  2839  05D4                     u881:	
  2840  05D4  2DC6               	goto	l1701
  2841  05D5                     u880:	
  2842  05D5                     l1707:	
  2843  05D5  0825               	movf	___awmod@divisor+1,w
  2844  05D6  0227               	subwf	___awmod@dividend+1,w
  2845  05D7  1D03               	skipz
  2846  05D8  2DDB               	goto	u895
  2847  05D9  0824               	movf	___awmod@divisor,w
  2848  05DA  0226               	subwf	___awmod@dividend,w
  2849  05DB                     u895:	
  2850  05DB  1C03               	skipc
  2851  05DC  2DDE               	goto	u891
  2852  05DD  2DDF               	goto	u890
  2853  05DE                     u891:	
  2854  05DE  2DE5               	goto	l1711
  2855  05DF                     u890:	
  2856  05DF                     l1709:	
  2857  05DF  0824               	movf	___awmod@divisor,w
  2858  05E0  02A6               	subwf	___awmod@dividend,f
  2859  05E1  0825               	movf	___awmod@divisor+1,w
  2860  05E2  1C03               	skipc
  2861  05E3  03A7               	decf	___awmod@dividend+1,f
  2862  05E4  02A7               	subwf	___awmod@dividend+1,f
  2863  05E5                     l1711:	
  2864  05E5  3001               	movlw	1
  2865  05E6                     u905:	
  2866  05E6  1003               	clrc
  2867  05E7  0CA5               	rrf	___awmod@divisor+1,f
  2868  05E8  0CA4               	rrf	___awmod@divisor,f
  2869  05E9  3EFF               	addlw	-1
  2870  05EA  1D03               	skipz
  2871  05EB  2DE6               	goto	u905
  2872  05EC                     l1713:	
  2873  05EC  3001               	movlw	1
  2874  05ED  02A9               	subwf	___awmod@counter,f
  2875  05EE  1D03               	btfss	3,2
  2876  05EF  2DF1               	goto	u911
  2877  05F0  2DF2               	goto	u910
  2878  05F1                     u911:	
  2879  05F1  2DD5               	goto	l1707
  2880  05F2                     u910:	
  2881  05F2                     l1715:	
  2882  05F2  082A               	movf	___awmod@sign,w
  2883  05F3  1903               	btfsc	3,2
  2884  05F4  2DF6               	goto	u921
  2885  05F5  2DF7               	goto	u920
  2886  05F6                     u921:	
  2887  05F6  2DFC               	goto	l1719
  2888  05F7                     u920:	
  2889  05F7                     l1717:	
  2890  05F7  09A6               	comf	___awmod@dividend,f
  2891  05F8  09A7               	comf	___awmod@dividend+1,f
  2892  05F9  0AA6               	incf	___awmod@dividend,f
  2893  05FA  1903               	skipnz
  2894  05FB  0AA7               	incf	___awmod@dividend+1,f
  2895  05FC                     l1719:	
  2896  05FC  0827               	movf	___awmod@dividend+1,w
  2897  05FD  00A5               	movwf	?___awmod+1
  2898  05FE  0826               	movf	___awmod@dividend,w
  2899  05FF  00A4               	movwf	?___awmod
  2900  0600                     l629:	
  2901  0600  0008               	return
  2902  0601                     __end_of___awmod:	
  2903                           
  2904                           	psect	text10
  2905  0FBB                     __ptext10:	
  2906 ;; *************** function _display_gameboard *****************
  2907 ;; Defined at:
  2908 ;;		line 136 in file "concentration.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  i               1   25[BANK0 ] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         0       0       0       0       0
  2923 ;;      Locals:         0       1       0       0       0
  2924 ;;      Temps:          0       1       0       0       0
  2925 ;;      Totals:         0       2       0       0       0
  2926 ;;Total ram usage:        2 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    7
  2929 ;; This function calls:
  2930 ;;		_lcd_clear
  2931 ;;		_lcd_goto
  2932 ;;		_lcd_putch
  2933 ;; This function is called by:
  2934 ;;		_startup
  2935 ;;		_update_gameboard_from_input
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           
  2940                           ;psect for function _display_gameboard
  2941  0FBB                     _display_gameboard:	
  2942  0FBB                     l1791:	
  2943                           ;incstack = 0
  2944 ;; hardware stack exceeded
  2945                           ; Regs used in _display_gameboard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2946                           
  2947                           
  2948                           ;concentration.c: 137:     lcd_clear(gameboard);
  2949  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0FBD  0869               	movf	_gameboard,w
  2952  0FBE  00AC               	movwf	lcd_clear@port
  2953  0FBF  086A               	movf	_gameboard+1,w
  2954  0FC0  00AD               	movwf	lcd_clear@port+1
  2955  0FC1  120A  158A  26DA  120A  158A  	fcall	_lcd_clear
  2956  0FC6                     l1793:	
  2957                           
  2958                           ;concentration.c: 138:     char i;;concentration.c: 139:     for(i=0;i<32;i++) {
  2959  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0FC8  01B9               	clrf	display_gameboard@i
  2962  0FC9                     l1799:	
  2963                           
  2964                           ;concentration.c: 140:         if(i == 16) {
  2965  0FC9  3010               	movlw	16
  2966  0FCA  0639               	xorwf	display_gameboard@i,w
  2967  0FCB  1D03               	btfss	3,2
  2968  0FCC  2FCE               	goto	u1011
  2969  0FCD  2FCF               	goto	u1010
  2970  0FCE                     u1011:	
  2971  0FCE  2FD9               	goto	l204
  2972  0FCF                     u1010:	
  2973  0FCF                     l1801:	
  2974                           
  2975                           ;concentration.c: 141:             lcd_goto(0x40, gameboard);
  2976  0FCF  0869               	movf	_gameboard,w
  2977  0FD0  00AC               	movwf	lcd_goto@port
  2978  0FD1  086A               	movf	_gameboard+1,w
  2979  0FD2  00AD               	movwf	lcd_goto@port+1
  2980  0FD3  3040               	movlw	64
  2981  0FD4  120A  158A  270F  120A  158A  	fcall	_lcd_goto
  2982  0FD9                     l204:	
  2983                           ;concentration.c: 142:         }
  2984                           
  2985                           
  2986                           ;concentration.c: 143:         lcd_putch(visible[i], gameboard);
  2987  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0FDB  0869               	movf	_gameboard,w
  2990  0FDC  00B4               	movwf	lcd_putch@port
  2991  0FDD  086A               	movf	_gameboard+1,w
  2992  0FDE  00B5               	movwf	lcd_putch@port+1
  2993  0FDF  0839               	movf	display_gameboard@i,w
  2994  0FE0  3EA0               	addlw	(low (_visible| 0))& (0+255)
  2995  0FE1  0084               	movwf	4
  2996  0FE2  1383               	bcf	3,7	;select IRP bank1
  2997  0FE3  0800               	movf	0,w
  2998  0FE4  120A  158A  26AF  120A  158A  	fcall	_lcd_putch
  2999  0FE9                     l1803:	
  3000                           
  3001                           ;concentration.c: 144:     }
  3002  0FE9  3001               	movlw	1
  3003  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0FEC  00B8               	movwf	??_display_gameboard
  3006  0FED  0838               	movf	??_display_gameboard,w
  3007  0FEE  07B9               	addwf	display_gameboard@i,f
  3008  0FEF                     l1805:	
  3009  0FEF  3020               	movlw	32
  3010  0FF0  0239               	subwf	display_gameboard@i,w
  3011  0FF1  1C03               	skipc
  3012  0FF2  2FF4               	goto	u1021
  3013  0FF3  2FF5               	goto	u1020
  3014  0FF4                     u1021:	
  3015  0FF4  2FC9               	goto	l1799
  3016  0FF5                     u1020:	
  3017  0FF5                     l1807:	
  3018                           
  3019                           ;concentration.c: 145:     lcd_goto(cursor_pos, gameboard);
  3020  0FF5  0869               	movf	_gameboard,w
  3021  0FF6  00AC               	movwf	lcd_goto@port
  3022  0FF7  086A               	movf	_gameboard+1,w
  3023  0FF8  00AD               	movwf	lcd_goto@port+1
  3024  0FF9  0866               	movf	_cursor_pos,w
  3025  0FFA  120A  158A  270F  120A  158A  	fcall	_lcd_goto
  3026  0FFF                     l205:	
  3027  0FFF  0008               	return
  3028  1000                     __end_of_display_gameboard:	
  3029                           
  3030                           	psect	text11
  3031  0EAF                     __ptext11:	
  3032 ;; *************** function _lcd_putch *****************
  3033 ;; Defined at:
  3034 ;;		line 136 in file "lcd4bits.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  character       1    wreg     unsigned char 
  3037 ;;  port            2   20[BANK0 ] PTR unsigned char 
  3038 ;;		 -> PORTD(1), PORTA(1), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  character       1   23[BANK0 ] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         0       2       0       0       0
  3051 ;;      Locals:         0       1       0       0       0
  3052 ;;      Temps:          0       1       0       0       0
  3053 ;;      Totals:         0       4       0       0       0
  3054 ;;Total ram usage:        4 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    6
  3057 ;; This function calls:
  3058 ;;		_lcd_write
  3059 ;; This function is called by:
  3060 ;;		_display_gameboard
  3061 ;;		_update_cursor
  3062 ;;		_toggle_cursor
  3063 ;;		_lcd_display_char_as_num
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _lcd_putch
  3069  0EAF                     _lcd_putch:	
  3070                           
  3071                           ;incstack = 0
  3072 ;; hardware stack exceeded
  3073                           ; Regs used in _lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3074                           ;lcd_putch@character stored from wreg
  3075  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0EB1  00B7               	movwf	lcd_putch@character
  3078  0EB2                     l1639:	
  3079                           
  3080                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  3081  0EB2  0837               	movf	lcd_putch@character,w
  3082  0EB3  00B6               	movwf	??_lcd_putch
  3083  0EB4  0836               	movf	??_lcd_putch,w
  3084  0EB5  00A6               	movwf	lcd_write@CmdChar
  3085  0EB6  0834               	movf	lcd_putch@port,w
  3086  0EB7  00A7               	movwf	lcd_write@port
  3087  0EB8  0835               	movf	lcd_putch@port+1,w
  3088  0EB9  00A8               	movwf	lcd_write@port+1
  3089  0EBA  3010               	movlw	16
  3090  0EBB  120A  118A  26F6  120A  158A  	fcall	_lcd_write
  3091  0EC0                     l360:	
  3092  0EC0  0008               	return
  3093  0EC1                     __end_of_lcd_putch:	
  3094                           
  3095                           	psect	text12
  3096  0EF4                     __ptext12:	
  3097 ;; *************** function _serial_init *****************
  3098 ;; Defined at:
  3099 ;;		line 93 in file "concentration.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0
  3116 ;;      Totals:         0       0       0       0       0
  3117 ;;Total ram usage:        0 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    4
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_main
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function _serial_init
  3129  0EF4                     _serial_init:	
  3130  0EF4                     l2011:	
  3131                           ;incstack = 0
  3132                           ; Regs used in _serial_init: [wreg+status,2]
  3133                           
  3134                           
  3135                           ;concentration.c: 94:     recieved_char = 0x00;
  3136  0EF4  01FC               	clrf	_recieved_char
  3137  0EF5                     l2013:	
  3138                           
  3139                           ;concentration.c: 95:     TRISC = 0x80;
  3140  0EF5  3080               	movlw	128
  3141  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3142  0EF7  1303               	bcf	3,6	;RP1=0, select bank1
  3143  0EF8  0087               	movwf	7	;volatile
  3144  0EF9                     l2015:	
  3145                           
  3146                           ;concentration.c: 96:     TXEN = 1;
  3147  0EF9  1698               	bsf	24,5	;volatile
  3148  0EFA                     l2017:	
  3149                           
  3150                           ;concentration.c: 97:     TX9 = 1;
  3151  0EFA  1718               	bsf	24,6	;volatile
  3152  0EFB                     l2019:	
  3153                           
  3154                           ;concentration.c: 98:     CREN = 1;
  3155  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0EFD  1618               	bsf	24,4	;volatile
  3158  0EFE                     l2021:	
  3159                           
  3160                           ;concentration.c: 99:     RX9 = 1;
  3161  0EFE  1718               	bsf	24,6	;volatile
  3162  0EFF                     l2023:	
  3163                           
  3164                           ;concentration.c: 100:     RCIE = 1;
  3165  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0F01  168C               	bsf	12,5	;volatile
  3168  0F02                     l2025:	
  3169                           
  3170                           ;concentration.c: 101:     SYNC = 0;
  3171  0F02  1218               	bcf	24,4	;volatile
  3172  0F03                     l2027:	
  3173                           
  3174                           ;concentration.c: 102:     BRGH = 1;
  3175  0F03  1518               	bsf	24,2	;volatile
  3176  0F04                     l2029:	
  3177                           
  3178                           ;concentration.c: 103:     BRG16 = 0;
  3179  0F04  1683               	bsf	3,5	;RP0=1, select bank3
  3180  0F05  1703               	bsf	3,6	;RP1=1, select bank3
  3181  0F06  1187               	bcf	7,3	;volatile
  3182  0F07                     l2031:	
  3183                           
  3184                           ;concentration.c: 104:     SPBRG = 10;
  3185  0F07  300A               	movlw	10
  3186  0F08  1683               	bsf	3,5	;RP0=1, select bank1
  3187  0F09  1303               	bcf	3,6	;RP1=0, select bank1
  3188  0F0A  0099               	movwf	25	;volatile
  3189  0F0B                     l2033:	
  3190                           
  3191                           ;concentration.c: 105:     SPEN = 1;
  3192  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0F0D  1798               	bsf	24,7	;volatile
  3195  0F0E                     l187:	
  3196  0F0E  0008               	return
  3197  0F0F                     __end_of_serial_init:	
  3198                           
  3199                           	psect	text13
  3200  0601                     __ptext13:	
  3201 ;; *************** function _lcd_init *****************
  3202 ;; Defined at:
  3203 ;;		line 155 in file "lcd4bits.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  port            2   14[BANK0 ] PTR unsigned char 
  3206 ;;		 -> PORTD(1), PORTA(1), 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         0       2       0       0       0
  3219 ;;      Locals:         0       0       0       0       0
  3220 ;;      Temps:          0       1       0       0       0
  3221 ;;      Totals:         0       3       0       0       0
  3222 ;;Total ram usage:        3 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    7
  3225 ;; This function calls:
  3226 ;;		_DelayMs
  3227 ;;		_lcd_clear
  3228 ;;		_lcd_write
  3229 ;;		_tmr0_init
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function _lcd_init
  3237  0601                     _lcd_init:	
  3238  0601                     l1931:	
  3239                           ;incstack = 0
  3240                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3241                           
  3242                           
  3243                           ;lcd4bits.c: 155: void lcd_init(char *port);lcd4bits.c: 156: {;lcd4bits.c: 157:     tmr0
      +                          _init();
  3244  0601  120A  158A  2655  120A  118A  	fcall	_tmr0_init
  3245  0606                     l1933:	
  3246                           
  3247                           ;lcd4bits.c: 158:     *port = 0;
  3248  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0607  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0608  082E               	movf	lcd_init@port,w
  3251  0609  0084               	movwf	4
  3252  060A  1783               	bsf	3,7
  3253  060B  1C2F               	btfss	lcd_init@port+1,0
  3254  060C  1383               	bcf	3,7
  3255  060D  0180               	clrf	0
  3256  060E                     l1935:	
  3257                           
  3258                           ;lcd4bits.c: 159:     DelayMs(15);
  3259  060E  300F               	movlw	15
  3260  060F  00A4               	movwf	DelayMs@millis
  3261  0610  3000               	movlw	0
  3262  0611  00A5               	movwf	DelayMs@millis+1
  3263  0612  120A  158A  26C1  120A  118A  	fcall	_DelayMs
  3264  0617                     l1937:	
  3265                           
  3266                           ;lcd4bits.c: 160:     lcd_write(0x00, 0x28, port);
  3267  0617  3028               	movlw	40
  3268  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3270  061A  00B0               	movwf	??_lcd_init
  3271  061B  0830               	movf	??_lcd_init,w
  3272  061C  00A6               	movwf	lcd_write@CmdChar
  3273  061D  082E               	movf	lcd_init@port,w
  3274  061E  00A7               	movwf	lcd_write@port
  3275  061F  082F               	movf	lcd_init@port+1,w
  3276  0620  00A8               	movwf	lcd_write@port+1
  3277  0621  3000               	movlw	0
  3278  0622  120A  118A  26F6  120A  118A  	fcall	_lcd_write
  3279  0627                     l1939:	
  3280                           
  3281                           ;lcd4bits.c: 161:     lcd_write(0x00, 0x0C, port);
  3282  0627  300C               	movlw	12
  3283  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3285  062A  00B0               	movwf	??_lcd_init
  3286  062B  0830               	movf	??_lcd_init,w
  3287  062C  00A6               	movwf	lcd_write@CmdChar
  3288  062D  082E               	movf	lcd_init@port,w
  3289  062E  00A7               	movwf	lcd_write@port
  3290  062F  082F               	movf	lcd_init@port+1,w
  3291  0630  00A8               	movwf	lcd_write@port+1
  3292  0631  3000               	movlw	0
  3293  0632  120A  118A  26F6  120A  118A  	fcall	_lcd_write
  3294  0637                     l1941:	
  3295                           
  3296                           ;lcd4bits.c: 162:     lcd_clear(port);
  3297  0637  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0638  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0639  082E               	movf	lcd_init@port,w
  3300  063A  00AC               	movwf	lcd_clear@port
  3301  063B  082F               	movf	lcd_init@port+1,w
  3302  063C  00AD               	movwf	lcd_clear@port+1
  3303  063D  120A  158A  26DA  120A  118A  	fcall	_lcd_clear
  3304  0642                     l1943:	
  3305                           
  3306                           ;lcd4bits.c: 163:     lcd_write(0x00, 0x06, port);
  3307  0642  3006               	movlw	6
  3308  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0645  00B0               	movwf	??_lcd_init
  3311  0646  0830               	movf	??_lcd_init,w
  3312  0647  00A6               	movwf	lcd_write@CmdChar
  3313  0648  082E               	movf	lcd_init@port,w
  3314  0649  00A7               	movwf	lcd_write@port
  3315  064A  082F               	movf	lcd_init@port+1,w
  3316  064B  00A8               	movwf	lcd_write@port+1
  3317  064C  3000               	movlw	0
  3318  064D  120A  118A  26F6  120A  118A  	fcall	_lcd_write
  3319  0652                     l366:	
  3320  0652  0008               	return
  3321  0653                     __end_of_lcd_init:	
  3322                           
  3323                           	psect	text14
  3324  0E55                     __ptext14:	
  3325 ;; *************** function _tmr0_init *****************
  3326 ;; Defined at:
  3327 ;;		line 72 in file "lcd4bits.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0
  3343 ;;      Temps:          0       1       0       0       0
  3344 ;;      Totals:         0       1       0       0       0
  3345 ;;Total ram usage:        1 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    4
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_lcd_init
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function _tmr0_init
  3357  0E55                     _tmr0_init:	
  3358  0E55                     l1917:	
  3359                           ;incstack = 0
  3360                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  3361                           
  3362                           
  3363                           ;lcd4bits.c: 76:     OPTION_REG &= 0xC0;
  3364  0E55  30C0               	movlw	192
  3365  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0E58  00A4               	movwf	??_tmr0_init
  3368  0E59  0824               	movf	??_tmr0_init,w
  3369  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  3371  0E5C  0581               	andwf	1,f	;volatile
  3372  0E5D                     l1919:	
  3373                           
  3374                           ;lcd4bits.c: 78:     OPTION_REG |= 0x04;
  3375  0E5D  1501               	bsf	1,2	;volatile
  3376  0E5E                     l331:	
  3377  0E5E  0008               	return
  3378  0E5F                     __end_of_tmr0_init:	
  3379                           
  3380                           	psect	text15
  3381  0F2D                     __ptext15:	
  3382 ;; *************** function _joystick_init *****************
  3383 ;; Defined at:
  3384 ;;		line 362 in file "concentration.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    4
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _joystick_init
  3414  0F2D                     _joystick_init:	
  3415  0F2D                     l1945:	
  3416                           ;incstack = 0
  3417                           ; Regs used in _joystick_init: [wreg+status,2]
  3418                           
  3419                           
  3420                           ;concentration.c: 363:     joystick_x_pos = 512;
  3421  0F2D  3000               	movlw	0
  3422  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0F30  00DD               	movwf	_joystick_x_pos
  3425  0F31  3002               	movlw	2
  3426  0F32  00DE               	movwf	_joystick_x_pos+1
  3427                           
  3428                           ;concentration.c: 364:     joystick_y_pos = 512;
  3429  0F33  3000               	movlw	0
  3430  0F34  00DB               	movwf	_joystick_y_pos
  3431  0F35  3002               	movlw	2
  3432  0F36  00DC               	movwf	_joystick_y_pos+1
  3433  0F37                     l1947:	
  3434                           
  3435                           ;concentration.c: 365:     PORTB = 0;
  3436  0F37  0186               	clrf	6	;volatile
  3437  0F38                     l1949:	
  3438                           
  3439                           ;concentration.c: 366:     nRBPU = 0;
  3440  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  3442  0F3A  1381               	bcf	1,7	;volatile
  3443  0F3B                     l1951:	
  3444                           
  3445                           ;concentration.c: 367:     WPUB = 0x20;
  3446  0F3B  3020               	movlw	32
  3447  0F3C  0095               	movwf	21	;volatile
  3448  0F3D                     l1953:	
  3449                           
  3450                           ;concentration.c: 368:     TRISB = 0x38;
  3451  0F3D  3038               	movlw	56
  3452  0F3E  0086               	movwf	6	;volatile
  3453  0F3F                     l1955:	
  3454                           
  3455                           ;concentration.c: 369:     ANSELH = 0x0A;
  3456  0F3F  300A               	movlw	10
  3457  0F40  1683               	bsf	3,5	;RP0=1, select bank3
  3458  0F41  1703               	bsf	3,6	;RP1=1, select bank3
  3459  0F42  0089               	movwf	9	;volatile
  3460  0F43                     l1957:	
  3461                           
  3462                           ;concentration.c: 370:     GIE = 1;
  3463  0F43  178B               	bsf	11,7	;volatile
  3464  0F44                     l1959:	
  3465                           
  3466                           ;concentration.c: 371:     PEIE = 1;
  3467  0F44  170B               	bsf	11,6	;volatile
  3468  0F45                     l1961:	
  3469                           
  3470                           ;concentration.c: 372:     ADIF = 0;
  3471  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0F47  130C               	bcf	12,6	;volatile
  3474  0F48                     l1963:	
  3475                           
  3476                           ;concentration.c: 373:     ADIE = 1;
  3477  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  3478  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  3479  0F4A  170C               	bsf	12,6	;volatile
  3480  0F4B                     l1965:	
  3481                           
  3482                           ;concentration.c: 374:     ADCON1 = 0x80;
  3483  0F4B  3080               	movlw	128
  3484  0F4C  009F               	movwf	31	;volatile
  3485  0F4D                     l1967:	
  3486                           
  3487                           ;concentration.c: 375:     ADCON0 = 0xA5;
  3488  0F4D  30A5               	movlw	165
  3489  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0F50  009F               	movwf	31	;volatile
  3492  0F51                     l311:	
  3493  0F51  0008               	return
  3494  0F52                     __end_of_joystick_init:	
  3495                           
  3496                           	psect	text16
  3497  04E7                     __ptext16:	
  3498 ;; *************** function _gameboard_init *****************
  3499 ;; Defined at:
  3500 ;;		line 167 in file "concentration.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  i               1   58[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       1       0       0       0
  3516 ;;      Temps:          0       1       0       0       0
  3517 ;;      Totals:         0       2       0       0       0
  3518 ;;Total ram usage:        2 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    8
  3521 ;; This function calls:
  3522 ;;		_get_current_char
  3523 ;;		_lcd_clear
  3524 ;;		_lcd_goto
  3525 ;;		_make_custom_chars
  3526 ;;		_randomize_gameboard
  3527 ;;		_time_init
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           
  3534                           ;psect for function _gameboard_init
  3535  04E7                     _gameboard_init:	
  3536  04E7                     l1969:	
  3537                           ;incstack = 0
  3538 ;; hardware stack exceeded
  3539                           ; Regs used in _gameboard_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3540                           
  3541                           
  3542                           ;concentration.c: 168:     selected_tile = 0xFF;
  3543  04E7  30FF               	movlw	255
  3544  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3545  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  3546  04EA  00D9               	movwf	??_gameboard_init
  3547  04EB  0859               	movf	??_gameboard_init,w
  3548  04EC  00DF               	movwf	_selected_tile
  3549  04ED                     l1971:	
  3550                           
  3551                           ;concentration.c: 169:     time_init();
  3552  04ED  120A  158A  2676  120A  118A  	fcall	_time_init
  3553  04F2                     l1973:	
  3554                           
  3555                           ;concentration.c: 170:     make_custom_chars();
  3556  04F2  120A  118A  2395  120A  118A  	fcall	_make_custom_chars
  3557  04F7                     l1975:	
  3558                           
  3559                           ;concentration.c: 171:     char i;;concentration.c: 172:     for(i = 0; i < 32; i++) {
  3560  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  3561  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  3562  04F9  01DA               	clrf	gameboard_init@i
  3563  04FA                     l1981:	
  3564                           
  3565                           ;concentration.c: 173:         visible[i] = 0xFF;
  3566  04FA  30FF               	movlw	255
  3567  04FB  00D9               	movwf	??_gameboard_init
  3568  04FC  085A               	movf	gameboard_init@i,w
  3569  04FD  3EA0               	addlw	(low (_visible| 0))& (0+255)
  3570  04FE  0084               	movwf	4
  3571  04FF  0859               	movf	??_gameboard_init,w
  3572  0500  1383               	bcf	3,7	;select IRP bank1
  3573  0501  0080               	movwf	0
  3574  0502                     l1983:	
  3575                           
  3576                           ;concentration.c: 174:     }
  3577  0502  3001               	movlw	1
  3578  0503  00D9               	movwf	??_gameboard_init
  3579  0504  0859               	movf	??_gameboard_init,w
  3580  0505  07DA               	addwf	gameboard_init@i,f
  3581  0506                     l1985:	
  3582  0506  3020               	movlw	32
  3583  0507  025A               	subwf	gameboard_init@i,w
  3584  0508  1C03               	skipc
  3585  0509  2D0B               	goto	u1141
  3586  050A  2D0C               	goto	u1140
  3587  050B                     u1141:	
  3588  050B  2CFA               	goto	l1981
  3589  050C                     u1140:	
  3590  050C                     l1987:	
  3591                           
  3592                           ;concentration.c: 175:     lcd_clear(gameboard);
  3593  050C  0869               	movf	_gameboard,w
  3594  050D  00AC               	movwf	lcd_clear@port
  3595  050E  086A               	movf	_gameboard+1,w
  3596  050F  00AD               	movwf	lcd_clear@port+1
  3597  0510  120A  158A  26DA  120A  118A  	fcall	_lcd_clear
  3598  0515                     l1989:	
  3599                           
  3600                           ;concentration.c: 176:     cursor_pos = 0x00;
  3601  0515  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0516  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0517  01E6               	clrf	_cursor_pos
  3604  0518                     l1991:	
  3605                           
  3606                           ;concentration.c: 177:     cursor_solid = 0;
  3607  0518  01E4               	clrf	_cursor_solid
  3608                           
  3609                           ;concentration.c: 178:     get_current_char();
  3610  0519  120A  158A  2690  120A  118A  	fcall	_get_current_char
  3611  051E                     l1993:	
  3612                           
  3613                           ;concentration.c: 179:     delay_loops = 0;
  3614  051E  1283               	bcf	3,5	;RP0=0, select bank0
  3615  051F  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0520  01E3               	clrf	_delay_loops
  3617  0521                     l1995:	
  3618                           
  3619                           ;concentration.c: 180:     cursor_movable = 1;
  3620  0521  01E2               	clrf	_cursor_movable
  3621  0522  0AE2               	incf	_cursor_movable,f
  3622  0523                     l1997:	
  3623                           
  3624                           ;concentration.c: 181:     lcd_goto(cursor_pos, gameboard);
  3625  0523  0869               	movf	_gameboard,w
  3626  0524  00AC               	movwf	lcd_goto@port
  3627  0525  086A               	movf	_gameboard+1,w
  3628  0526  00AD               	movwf	lcd_goto@port+1
  3629  0527  0866               	movf	_cursor_pos,w
  3630  0528  120A  158A  270F  120A  118A  	fcall	_lcd_goto
  3631  052D                     l1999:	
  3632                           
  3633                           ;concentration.c: 182:     cursor_move_delay_count = 255;
  3634  052D  30FF               	movlw	255
  3635  052E  1283               	bcf	3,5	;RP0=0, select bank0
  3636  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0530  00D9               	movwf	??_gameboard_init
  3638  0531  0859               	movf	??_gameboard_init,w
  3639  0532  00FD               	movwf	_cursor_move_delay_count
  3640  0533                     l2001:	
  3641                           
  3642                           ;concentration.c: 183:     PR2 = 250;
  3643  0533  30FA               	movlw	250
  3644  0534  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0535  1303               	bcf	3,6	;RP1=0, select bank1
  3646  0536  0092               	movwf	18	;volatile
  3647  0537                     l2003:	
  3648                           
  3649                           ;concentration.c: 184:     TMR2IF = 0;
  3650  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0539  108C               	bcf	12,1	;volatile
  3653  053A                     l2005:	
  3654                           
  3655                           ;concentration.c: 185:     TMR2IE = 1;
  3656  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3657  053B  1303               	bcf	3,6	;RP1=0, select bank1
  3658  053C  148C               	bsf	12,1	;volatile
  3659  053D                     l2007:	
  3660                           
  3661                           ;concentration.c: 186:     T2CON = 0x56;
  3662  053D  3056               	movlw	86
  3663  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3664  053F  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0540  0092               	movwf	18	;volatile
  3666  0541                     l2009:	
  3667                           
  3668                           ;concentration.c: 187:     randomize_gameboard();
  3669  0541  120A  118A  2547  120A  118A  	fcall	_randomize_gameboard
  3670  0546                     l229:	
  3671  0546  0008               	return
  3672  0547                     __end_of_gameboard_init:	
  3673                           
  3674                           	psect	text17
  3675  0E76                     __ptext17:	
  3676 ;; *************** function _time_init *****************
  3677 ;; Defined at:
  3678 ;;		line 350 in file "concentration.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		None
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0
  3695 ;;      Totals:         0       0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    4
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_gameboard_init
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _time_init
  3708  0E76                     _time_init:	
  3709  0E76                     l1811:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _time_init: []
  3712                           
  3713                           
  3714                           ;concentration.c: 351:     CCP1M3 = 1;
  3715  0E76  1283               	bcf	3,5	;RP0=0, select bank0
  3716  0E77  1303               	bcf	3,6	;RP1=0, select bank0
  3717  0E78  1597               	bsf	23,3	;volatile
  3718                           
  3719                           ;concentration.c: 352:     CCP1M2 = 0;
  3720  0E79  1117               	bcf	23,2	;volatile
  3721                           
  3722                           ;concentration.c: 353:     CCP1M1 = 1;
  3723  0E7A  1497               	bsf	23,1	;volatile
  3724                           
  3725                           ;concentration.c: 354:     CCP1M0 = 0;
  3726  0E7B  1017               	bcf	23,0	;volatile
  3727                           
  3728                           ;concentration.c: 355:     TMR1CS = 0;
  3729  0E7C  1090               	bcf	16,1	;volatile
  3730                           
  3731                           ;concentration.c: 356:     T1CKPS0 = 0;
  3732  0E7D  1210               	bcf	16,4	;volatile
  3733                           
  3734                           ;concentration.c: 357:     T1CKPS1 = 0;
  3735  0E7E  1290               	bcf	16,5	;volatile
  3736                           
  3737                           ;concentration.c: 358:     TMR1GE = 0;
  3738  0E7F  1310               	bcf	16,6	;volatile
  3739                           
  3740                           ;concentration.c: 359:     TMR1ON = 1;
  3741  0E80  1410               	bsf	16,0	;volatile
  3742  0E81                     l308:	
  3743  0E81  0008               	return
  3744  0E82                     __end_of_time_init:	
  3745                           
  3746                           	psect	text18
  3747  0547                     __ptext18:	
  3748 ;; *************** function _randomize_gameboard *****************
  3749 ;; Defined at:
  3750 ;;		line 197 in file "concentration.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  used           32   23[BANK0 ] unsigned char [32]
  3755 ;;  random          1   56[BANK0 ] unsigned char 
  3756 ;;  current         1   55[BANK0 ] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3766 ;;      Params:         0       0       0       0       0
  3767 ;;      Locals:         0      34       0       0       0
  3768 ;;      Temps:          0       3       0       0       0
  3769 ;;      Totals:         0      37       0       0       0
  3770 ;;Total ram usage:       37 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    5
  3773 ;; This function calls:
  3774 ;;		_DelayMs
  3775 ;;		___awdiv
  3776 ;; This function is called by:
  3777 ;;		_gameboard_init
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _randomize_gameboard
  3783  0547                     _randomize_gameboard:	
  3784  0547                     l1813:	
  3785                           ;incstack = 0
  3786                           ; Regs used in _randomize_gameboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3787                           
  3788                           
  3789                           ;concentration.c: 198:     char used[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      +                           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  3790  0547  3037               	movlw	randomize_gameboard@used& (0+255)
  3791  0548  0084               	movwf	4
  3792  0549  3020               	movlw	32
  3793  054A  00FF               	movwf	btemp+1
  3794  054B                     u1030:	
  3795  054B  1383               	bcf	3,7	;select IRP bank0
  3796  054C  0180               	clrf	0
  3797  054D  0A84               	incf	4,f
  3798  054E  0BFF               	decfsz	btemp+1,f
  3799  054F  2D4B               	goto	u1030
  3800  0550                     l1815:	
  3801                           
  3802                           ;concentration.c: 199:     char current = 0;
  3803  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0552  01D7               	clrf	randomize_gameboard@current
  3806                           
  3807                           ;concentration.c: 200:     char random;;concentration.c: 201:     while(current != 32) {
  3808  0553  2D9F               	goto	l1829
  3809  0554                     l1817:	
  3810                           
  3811                           ;concentration.c: 202:         DelayMs(TMR2>>(2+(TMR1%4)));
  3812  0554  0811               	movf	17,w	;volatile
  3813  0555  00B4               	movwf	??_randomize_gameboard
  3814  0556  080E               	movf	14,w	;volatile
  3815  0557  3903               	andlw	3
  3816  0558  3E02               	addlw	2
  3817  0559  3E01               	addlw	1
  3818  055A  2D5D               	goto	u1044
  3819  055B                     u1045:	
  3820  055B  1003               	clrc
  3821  055C  0CB4               	rrf	??_randomize_gameboard,f
  3822  055D                     u1044:	
  3823  055D  3EFF               	addlw	-1
  3824  055E  1D03               	skipz
  3825  055F  2D5B               	goto	u1045
  3826  0560  0834               	movf	??_randomize_gameboard,w
  3827  0561  00B5               	movwf	??_randomize_gameboard+1
  3828  0562  01B6               	clrf	??_randomize_gameboard+2
  3829  0563  0835               	movf	??_randomize_gameboard+1,w
  3830  0564  00A4               	movwf	DelayMs@millis
  3831  0565  0836               	movf	??_randomize_gameboard+2,w
  3832  0566  00A5               	movwf	DelayMs@millis+1
  3833  0567  120A  158A  26C1  120A  118A  	fcall	_DelayMs
  3834  056C                     l1819:	
  3835                           
  3836                           ;concentration.c: 203:         random = TMR1 % 32;
  3837  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3838  056D  1303               	bcf	3,6	;RP1=0, select bank0
  3839  056E  080E               	movf	14,w	;volatile
  3840  056F  391F               	andlw	31
  3841  0570  00B4               	movwf	??_randomize_gameboard
  3842  0571  0834               	movf	??_randomize_gameboard,w
  3843  0572  00D8               	movwf	randomize_gameboard@random
  3844  0573                     l1821:	
  3845                           
  3846                           ;concentration.c: 204:         if(used[random] == 0) {
  3847  0573  0858               	movf	randomize_gameboard@random,w
  3848  0574  3E37               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3849  0575  0084               	movwf	4
  3850  0576  1383               	bcf	3,7	;select IRP bank0
  3851  0577  0800               	movf	0,w
  3852  0578  1D03               	btfss	3,2
  3853  0579  2D7B               	goto	u1051
  3854  057A  2D7C               	goto	u1050
  3855  057B                     u1051:	
  3856  057B  2D9F               	goto	l1829
  3857  057C                     u1050:	
  3858  057C                     l1823:	
  3859                           
  3860                           ;concentration.c: 205:             used[random] = 1;
  3861  057C  0858               	movf	randomize_gameboard@random,w
  3862  057D  3E37               	addlw	(low (randomize_gameboard@used| 0))& (0+255)
  3863  057E  0084               	movwf	4
  3864  057F  0180               	clrf	0
  3865  0580  0A80               	incf	0,f
  3866  0581                     l1825:	
  3867                           
  3868                           ;concentration.c: 206:             board[random] = current/4;
  3869  0581  3004               	movlw	4
  3870  0582  00AB               	movwf	___awdiv@divisor
  3871  0583  3000               	movlw	0
  3872  0584  00AC               	movwf	___awdiv@divisor+1
  3873  0585  0857               	movf	randomize_gameboard@current,w
  3874  0586  00B4               	movwf	??_randomize_gameboard
  3875  0587  01B5               	clrf	??_randomize_gameboard+1
  3876  0588  0834               	movf	??_randomize_gameboard,w
  3877  0589  00AD               	movwf	___awdiv@dividend
  3878  058A  0835               	movf	??_randomize_gameboard+1,w
  3879  058B  00AE               	movwf	___awdiv@dividend+1
  3880  058C  120A  118A  247E  120A  118A  	fcall	___awdiv
  3881  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3882  0592  1303               	bcf	3,6	;RP1=0, select bank0
  3883  0593  082B               	movf	?___awdiv,w
  3884  0594  00B6               	movwf	??_randomize_gameboard+2
  3885  0595  0858               	movf	randomize_gameboard@random,w
  3886  0596  3EC0               	addlw	(low (_board| 0))& (0+255)
  3887  0597  0084               	movwf	4
  3888  0598  0836               	movf	??_randomize_gameboard+2,w
  3889  0599  1383               	bcf	3,7	;select IRP bank1
  3890  059A  0080               	movwf	0
  3891  059B                     l1827:	
  3892                           
  3893                           ;concentration.c: 207:             current++;
  3894  059B  3001               	movlw	1
  3895  059C  00B4               	movwf	??_randomize_gameboard
  3896  059D  0834               	movf	??_randomize_gameboard,w
  3897  059E  07D7               	addwf	randomize_gameboard@current,f
  3898  059F                     l1829:	
  3899                           
  3900                           ;concentration.c: 201:     while(current != 32) {
  3901  059F  3020               	movlw	32
  3902  05A0  0657               	xorwf	randomize_gameboard@current,w
  3903  05A1  1D03               	btfss	3,2
  3904  05A2  2DA4               	goto	u1061
  3905  05A3  2DA5               	goto	u1060
  3906  05A4                     u1061:	
  3907  05A4  2D54               	goto	l1817
  3908  05A5                     u1060:	
  3909  05A5                     l242:	
  3910  05A5  0008               	return
  3911  05A6                     __end_of_randomize_gameboard:	
  3912                           
  3913                           	psect	text19
  3914  047E                     __ptext19:	
  3915 ;; *************** function ___awdiv *****************
  3916 ;; Defined at:
  3917 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  divisor         2   11[BANK0 ] int 
  3920 ;;  dividend        2   13[BANK0 ] int 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  quotient        2   18[BANK0 ] int 
  3923 ;;  sign            1   17[BANK0 ] unsigned char 
  3924 ;;  counter         1   16[BANK0 ] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  2   11[BANK0 ] int 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       4       0       0       0
  3935 ;;      Locals:         0       4       0       0       0
  3936 ;;      Temps:          0       1       0       0       0
  3937 ;;      Totals:         0       9       0       0       0
  3938 ;;Total ram usage:        9 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    4
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_randomize_gameboard
  3945 ;;		_lcd_display_char_as_num
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function ___awdiv
  3951  047E                     ___awdiv:	
  3952  047E                     l1641:	
  3953                           ;incstack = 0
  3954 ;; hardware stack exceeded
  3955                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3956                           
  3957  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3958  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3959  0480  01B1               	clrf	___awdiv@sign
  3960  0481                     l1643:	
  3961  0481  1FAC               	btfss	___awdiv@divisor+1,7
  3962  0482  2C84               	goto	u741
  3963  0483  2C85               	goto	u740
  3964  0484                     u741:	
  3965  0484  2C8C               	goto	l1649
  3966  0485                     u740:	
  3967  0485                     l1645:	
  3968  0485  09AB               	comf	___awdiv@divisor,f
  3969  0486  09AC               	comf	___awdiv@divisor+1,f
  3970  0487  0AAB               	incf	___awdiv@divisor,f
  3971  0488  1903               	skipnz
  3972  0489  0AAC               	incf	___awdiv@divisor+1,f
  3973  048A                     l1647:	
  3974  048A  01B1               	clrf	___awdiv@sign
  3975  048B  0AB1               	incf	___awdiv@sign,f
  3976  048C                     l1649:	
  3977  048C  1FAE               	btfss	___awdiv@dividend+1,7
  3978  048D  2C8F               	goto	u751
  3979  048E  2C90               	goto	u750
  3980  048F                     u751:	
  3981  048F  2C99               	goto	l1655
  3982  0490                     u750:	
  3983  0490                     l1651:	
  3984  0490  09AD               	comf	___awdiv@dividend,f
  3985  0491  09AE               	comf	___awdiv@dividend+1,f
  3986  0492  0AAD               	incf	___awdiv@dividend,f
  3987  0493  1903               	skipnz
  3988  0494  0AAE               	incf	___awdiv@dividend+1,f
  3989  0495                     l1653:	
  3990  0495  3001               	movlw	1
  3991  0496  00AF               	movwf	??___awdiv
  3992  0497  082F               	movf	??___awdiv,w
  3993  0498  06B1               	xorwf	___awdiv@sign,f
  3994  0499                     l1655:	
  3995  0499  01B2               	clrf	___awdiv@quotient
  3996  049A  01B3               	clrf	___awdiv@quotient+1
  3997  049B                     l1657:	
  3998  049B  082B               	movf	___awdiv@divisor,w
  3999  049C  042C               	iorwf	___awdiv@divisor+1,w
  4000  049D  1903               	btfsc	3,2
  4001  049E  2CA0               	goto	u761
  4002  049F  2CA1               	goto	u760
  4003  04A0                     u761:	
  4004  04A0  2CD8               	goto	l1677
  4005  04A1                     u760:	
  4006  04A1                     l1659:	
  4007  04A1  01B0               	clrf	___awdiv@counter
  4008  04A2  0AB0               	incf	___awdiv@counter,f
  4009  04A3  2CAF               	goto	l1665
  4010  04A4                     l1661:	
  4011  04A4  3001               	movlw	1
  4012  04A5                     u775:	
  4013  04A5  1003               	clrc
  4014  04A6  0DAB               	rlf	___awdiv@divisor,f
  4015  04A7  0DAC               	rlf	___awdiv@divisor+1,f
  4016  04A8  3EFF               	addlw	-1
  4017  04A9  1D03               	skipz
  4018  04AA  2CA5               	goto	u775
  4019  04AB                     l1663:	
  4020  04AB  3001               	movlw	1
  4021  04AC  00AF               	movwf	??___awdiv
  4022  04AD  082F               	movf	??___awdiv,w
  4023  04AE  07B0               	addwf	___awdiv@counter,f
  4024  04AF                     l1665:	
  4025  04AF  1FAC               	btfss	___awdiv@divisor+1,7
  4026  04B0  2CB2               	goto	u781
  4027  04B1  2CB3               	goto	u780
  4028  04B2                     u781:	
  4029  04B2  2CA4               	goto	l1661
  4030  04B3                     u780:	
  4031  04B3                     l1667:	
  4032  04B3  3001               	movlw	1
  4033  04B4                     u795:	
  4034  04B4  1003               	clrc
  4035  04B5  0DB2               	rlf	___awdiv@quotient,f
  4036  04B6  0DB3               	rlf	___awdiv@quotient+1,f
  4037  04B7  3EFF               	addlw	-1
  4038  04B8  1D03               	skipz
  4039  04B9  2CB4               	goto	u795
  4040  04BA  082C               	movf	___awdiv@divisor+1,w
  4041  04BB  022E               	subwf	___awdiv@dividend+1,w
  4042  04BC  1D03               	skipz
  4043  04BD  2CC0               	goto	u805
  4044  04BE  082B               	movf	___awdiv@divisor,w
  4045  04BF  022D               	subwf	___awdiv@dividend,w
  4046  04C0                     u805:	
  4047  04C0  1C03               	skipc
  4048  04C1  2CC3               	goto	u801
  4049  04C2  2CC4               	goto	u800
  4050  04C3                     u801:	
  4051  04C3  2CCB               	goto	l1673
  4052  04C4                     u800:	
  4053  04C4                     l1669:	
  4054  04C4  082B               	movf	___awdiv@divisor,w
  4055  04C5  02AD               	subwf	___awdiv@dividend,f
  4056  04C6  082C               	movf	___awdiv@divisor+1,w
  4057  04C7  1C03               	skipc
  4058  04C8  03AE               	decf	___awdiv@dividend+1,f
  4059  04C9  02AE               	subwf	___awdiv@dividend+1,f
  4060  04CA                     l1671:	
  4061  04CA  1432               	bsf	___awdiv@quotient,0
  4062  04CB                     l1673:	
  4063  04CB  3001               	movlw	1
  4064  04CC                     u815:	
  4065  04CC  1003               	clrc
  4066  04CD  0CAC               	rrf	___awdiv@divisor+1,f
  4067  04CE  0CAB               	rrf	___awdiv@divisor,f
  4068  04CF  3EFF               	addlw	-1
  4069  04D0  1D03               	skipz
  4070  04D1  2CCC               	goto	u815
  4071  04D2                     l1675:	
  4072  04D2  3001               	movlw	1
  4073  04D3  02B0               	subwf	___awdiv@counter,f
  4074  04D4  1D03               	btfss	3,2
  4075  04D5  2CD7               	goto	u821
  4076  04D6  2CD8               	goto	u820
  4077  04D7                     u821:	
  4078  04D7  2CB3               	goto	l1667
  4079  04D8                     u820:	
  4080  04D8                     l1677:	
  4081  04D8  0831               	movf	___awdiv@sign,w
  4082  04D9  1903               	btfsc	3,2
  4083  04DA  2CDC               	goto	u831
  4084  04DB  2CDD               	goto	u830
  4085  04DC                     u831:	
  4086  04DC  2CE2               	goto	l1681
  4087  04DD                     u830:	
  4088  04DD                     l1679:	
  4089  04DD  09B2               	comf	___awdiv@quotient,f
  4090  04DE  09B3               	comf	___awdiv@quotient+1,f
  4091  04DF  0AB2               	incf	___awdiv@quotient,f
  4092  04E0  1903               	skipnz
  4093  04E1  0AB3               	incf	___awdiv@quotient+1,f
  4094  04E2                     l1681:	
  4095  04E2  0833               	movf	___awdiv@quotient+1,w
  4096  04E3  00AC               	movwf	?___awdiv+1
  4097  04E4  0832               	movf	___awdiv@quotient,w
  4098  04E5  00AB               	movwf	?___awdiv
  4099  04E6                     l616:	
  4100  04E6  0008               	return
  4101  04E7                     __end_of___awdiv:	
  4102                           
  4103                           	psect	text20
  4104  0395                     __ptext20:	
  4105 ;; *************** function _make_custom_chars *****************
  4106 ;; Defined at:
  4107 ;;		line 148 in file "concentration.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      void 
  4114 ;; Registers used:
  4115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4121 ;;      Params:         0       0       0       0       0
  4122 ;;      Locals:         0       0       0       0       0
  4123 ;;      Temps:          0       1       0       0       0
  4124 ;;      Totals:         0       1       0       0       0
  4125 ;;Total ram usage:        1 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    7
  4128 ;; This function calls:
  4129 ;;		_lcd_set_custom_char
  4130 ;; This function is called by:
  4131 ;;		_gameboard_init
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _make_custom_chars
  4137  0395                     _make_custom_chars:	
  4138  0395                     l1809:	
  4139                           ;incstack = 0
  4140 ;; hardware stack exceeded
  4141                           ; Regs used in _make_custom_chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4142                           
  4143                           
  4144                           ;concentration.c: 149:     const char smile[] = {0x00, 0x0A, 0x0A, 0x00, 0x15, 0x11, 0x0
      +                          E, 0x00};;concentration.c: 150:     lcd_set_custom_char(smile, 0x00, gameboard);
  4145  0395  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0396  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0397  01AC               	clrf	lcd_set_custom_char@cg_address
  4148  0398  0869               	movf	_gameboard,w
  4149  0399  00AD               	movwf	lcd_set_custom_char@port
  4150  039A  086A               	movf	_gameboard+1,w
  4151  039B  00AE               	movwf	lcd_set_custom_char@port+1
  4152  039C  3039               	movlw	(low ((make_custom_chars@smile-__stringbase)| (0+32768)))& (0+255)
  4153  039D  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4154                           
  4155                           ;concentration.c: 151:     const char diamond[] = {0x00, 0x04, 0x0E, 0x1F, 0x0E, 0x04, 0
      +                          x00, 0x00};;concentration.c: 152:     lcd_set_custom_char(diamond, 0x01, gameboard);
  4156  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  4157  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  4158  03A4  01AC               	clrf	lcd_set_custom_char@cg_address
  4159  03A5  0AAC               	incf	lcd_set_custom_char@cg_address,f
  4160  03A6  0869               	movf	_gameboard,w
  4161  03A7  00AD               	movwf	lcd_set_custom_char@port
  4162  03A8  086A               	movf	_gameboard+1,w
  4163  03A9  00AE               	movwf	lcd_set_custom_char@port+1
  4164  03AA  3031               	movlw	(low ((make_custom_chars@diamond-__stringbase)| (0+32768)))& (0+255)
  4165  03AB  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4166                           
  4167                           ;concentration.c: 153:     const char heart[] = {0x00, 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x00};;concentration.c: 154:     lcd_set_custom_char(heart, 0x02, gameboard);
  4168  03B0  3002               	movlw	2
  4169  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  4170  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  4171  03B3  00B3               	movwf	??_make_custom_chars
  4172  03B4  0833               	movf	??_make_custom_chars,w
  4173  03B5  00AC               	movwf	lcd_set_custom_char@cg_address
  4174  03B6  0869               	movf	_gameboard,w
  4175  03B7  00AD               	movwf	lcd_set_custom_char@port
  4176  03B8  086A               	movf	_gameboard+1,w
  4177  03B9  00AE               	movwf	lcd_set_custom_char@port+1
  4178  03BA  3029               	movlw	(low ((make_custom_chars@heart-__stringbase)| (0+32768)))& (0+255)
  4179  03BB  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4180                           
  4181                           ;concentration.c: 155:     const char spade[] = {0x00, 0x04, 0x0E, 0x1F, 0x1F, 0x0E, 0x0
      +                          4, 0x0E};;concentration.c: 156:     lcd_set_custom_char(spade, 0x03, gameboard);
  4182  03C0  3003               	movlw	3
  4183  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  4184  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  4185  03C3  00B3               	movwf	??_make_custom_chars
  4186  03C4  0833               	movf	??_make_custom_chars,w
  4187  03C5  00AC               	movwf	lcd_set_custom_char@cg_address
  4188  03C6  0869               	movf	_gameboard,w
  4189  03C7  00AD               	movwf	lcd_set_custom_char@port
  4190  03C8  086A               	movf	_gameboard+1,w
  4191  03C9  00AE               	movwf	lcd_set_custom_char@port+1
  4192  03CA  3021               	movlw	(low ((make_custom_chars@spade-__stringbase)| (0+32768)))& (0+255)
  4193  03CB  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4194                           
  4195                           ;concentration.c: 157:     const char club[] = {0x00, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0x04
      +                          , 0x0E};;concentration.c: 158:     lcd_set_custom_char(club, 0x04, gameboard);
  4196  03D0  3004               	movlw	4
  4197  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  4198  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  4199  03D3  00B3               	movwf	??_make_custom_chars
  4200  03D4  0833               	movf	??_make_custom_chars,w
  4201  03D5  00AC               	movwf	lcd_set_custom_char@cg_address
  4202  03D6  0869               	movf	_gameboard,w
  4203  03D7  00AD               	movwf	lcd_set_custom_char@port
  4204  03D8  086A               	movf	_gameboard+1,w
  4205  03D9  00AE               	movwf	lcd_set_custom_char@port+1
  4206  03DA  3019               	movlw	(low ((make_custom_chars@club-__stringbase)| (0+32768)))& (0+255)
  4207  03DB  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4208                           
  4209                           ;concentration.c: 159:     const char skull[] = {0x0E, 0x15, 0x15, 0x1F, 0x0A, 0x0E, 0x0
      +                          E, 0x00};;concentration.c: 160:     lcd_set_custom_char(skull, 0x05, gameboard);
  4210  03E0  3005               	movlw	5
  4211  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  4212  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  4213  03E3  00B3               	movwf	??_make_custom_chars
  4214  03E4  0833               	movf	??_make_custom_chars,w
  4215  03E5  00AC               	movwf	lcd_set_custom_char@cg_address
  4216  03E6  0869               	movf	_gameboard,w
  4217  03E7  00AD               	movwf	lcd_set_custom_char@port
  4218  03E8  086A               	movf	_gameboard+1,w
  4219  03E9  00AE               	movwf	lcd_set_custom_char@port+1
  4220  03EA  3011               	movlw	(low ((make_custom_chars@skull-__stringbase)| (0+32768)))& (0+255)
  4221  03EB  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4222                           
  4223                           ;concentration.c: 161:     const char RH[] = {0x1C, 0x14, 0x18, 0x14, 0x00, 0x05, 0x07, 
      +                          0x05};;concentration.c: 162:     lcd_set_custom_char(RH, 0x06, gameboard);
  4224  03F0  3006               	movlw	6
  4225  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4226  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  4227  03F3  00B3               	movwf	??_make_custom_chars
  4228  03F4  0833               	movf	??_make_custom_chars,w
  4229  03F5  00AC               	movwf	lcd_set_custom_char@cg_address
  4230  03F6  0869               	movf	_gameboard,w
  4231  03F7  00AD               	movwf	lcd_set_custom_char@port
  4232  03F8  086A               	movf	_gameboard+1,w
  4233  03F9  00AE               	movwf	lcd_set_custom_char@port+1
  4234  03FA  3009               	movlw	(low ((make_custom_chars@RH-__stringbase)| (0+32768)))& (0+255)
  4235  03FB  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4236                           
  4237                           ;concentration.c: 163:     const char PIC[] = {0x18, 0x18, 0x14, 0x04, 0x04, 0x03, 0x02,
      +                           0x03};;concentration.c: 164:     lcd_set_custom_char(PIC, 0x07, gameboard);
  4238  0400  3007               	movlw	7
  4239  0401  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0402  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0403  00B3               	movwf	??_make_custom_chars
  4242  0404  0833               	movf	??_make_custom_chars,w
  4243  0405  00AC               	movwf	lcd_set_custom_char@cg_address
  4244  0406  0869               	movf	_gameboard,w
  4245  0407  00AD               	movwf	lcd_set_custom_char@port
  4246  0408  086A               	movf	_gameboard+1,w
  4247  0409  00AE               	movwf	lcd_set_custom_char@port+1
  4248  040A  3001               	movlw	(low ((make_custom_chars@PIC-__stringbase)| (0+32768)))& (0+255)
  4249  040B  120A  118A  2653  120A  118A  	fcall	_lcd_set_custom_char
  4250  0410                     l224:	
  4251  0410  0008               	return
  4252  0411                     __end_of_make_custom_chars:	
  4253                           
  4254                           	psect	text21
  4255  0653                     __ptext21:	
  4256 ;; *************** function _lcd_set_custom_char *****************
  4257 ;; Defined at:
  4258 ;;		line 166 in file "lcd4bits.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  data            1    wreg     PTR const unsigned char 
  4261 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4262 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4263 ;;  cg_address      1   12[BANK0 ] unsigned char 
  4264 ;;  port            2   13[BANK0 ] PTR unsigned char 
  4265 ;;		 -> PORTA(1), 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  data            1   18[BANK0 ] PTR const unsigned char 
  4268 ;;		 -> make_custom_chars@PIC(8), make_custom_chars@RH(8), make_custom_chars@skull(8), make_custom_chars@club(8), 
  4269 ;;		 -> make_custom_chars@spade(8), make_custom_chars@heart(8), make_custom_chars@diamond(8), make_custom_chars@smile(8)
      +, 
  4270 ;;  row             1   17[BANK0 ] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4280 ;;      Params:         0       3       0       0       0
  4281 ;;      Locals:         0       2       0       0       0
  4282 ;;      Temps:          0       2       0       0       0
  4283 ;;      Totals:         0       7       0       0       0
  4284 ;;Total ram usage:        7 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    6
  4287 ;; This function calls:
  4288 ;;		_lcd_write
  4289 ;; This function is called by:
  4290 ;;		_make_custom_chars
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _lcd_set_custom_char
  4296  0653                     _lcd_set_custom_char:	
  4297                           
  4298                           ;incstack = 0
  4299 ;; hardware stack exceeded
  4300                           ; Regs used in _lcd_set_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4301                           ;lcd_set_custom_char@data stored from wreg
  4302  0653  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0654  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0655  00B2               	movwf	lcd_set_custom_char@data
  4305  0656                     l1763:	
  4306                           
  4307                           ;lcd4bits.c: 167:     char row;;lcd4bits.c: 168:     for(row = 0; row<8; row++) {
  4308  0656  01B1               	clrf	lcd_set_custom_char@row
  4309  0657                     l1769:	
  4310                           
  4311                           ;lcd4bits.c: 169:         lcd_write(0x00, 0x40|(cg_address<<3)|row, port);
  4312  0657  082C               	movf	lcd_set_custom_char@cg_address,w
  4313  0658  00AF               	movwf	??_lcd_set_custom_char
  4314  0659  3002               	movlw	2
  4315  065A                     u985:	
  4316  065A  1003               	clrc
  4317  065B  0DAF               	rlf	??_lcd_set_custom_char,f
  4318  065C  3EFF               	addlw	-1
  4319  065D  1D03               	skipz
  4320  065E  2E5A               	goto	u985
  4321  065F  1003               	clrc
  4322  0660  0D2F               	rlf	??_lcd_set_custom_char,w
  4323  0661  0431               	iorwf	lcd_set_custom_char@row,w
  4324  0662  3840               	iorlw	64
  4325  0663  00B0               	movwf	??_lcd_set_custom_char+1
  4326  0664  0830               	movf	??_lcd_set_custom_char+1,w
  4327  0665  00A6               	movwf	lcd_write@CmdChar
  4328  0666  082D               	movf	lcd_set_custom_char@port,w
  4329  0667  00A7               	movwf	lcd_write@port
  4330  0668  082E               	movf	lcd_set_custom_char@port+1,w
  4331  0669  00A8               	movwf	lcd_write@port+1
  4332  066A  3000               	movlw	0
  4333  066B  120A  118A  26F6  120A  118A  	fcall	_lcd_write
  4334                           
  4335                           ;lcd4bits.c: 170:         lcd_write(0x10, *data, port);
  4336  0670  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0671  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0672  0832               	movf	lcd_set_custom_char@data,w
  4339  0673  0084               	movwf	4
  4340  0674  120A  118A  2200  120A  118A  	fcall	stringdir
  4341  0679  00AF               	movwf	??_lcd_set_custom_char
  4342  067A  082F               	movf	??_lcd_set_custom_char,w
  4343  067B  00A6               	movwf	lcd_write@CmdChar
  4344  067C  082D               	movf	lcd_set_custom_char@port,w
  4345  067D  00A7               	movwf	lcd_write@port
  4346  067E  082E               	movf	lcd_set_custom_char@port+1,w
  4347  067F  00A8               	movwf	lcd_write@port+1
  4348  0680  3010               	movlw	16
  4349  0681  120A  118A  26F6  120A  118A  	fcall	_lcd_write
  4350  0686                     l1771:	
  4351                           
  4352                           ;lcd4bits.c: 171:         *data++;
  4353  0686  3001               	movlw	1
  4354  0687  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0688  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0689  00AF               	movwf	??_lcd_set_custom_char
  4357  068A  082F               	movf	??_lcd_set_custom_char,w
  4358  068B  07B2               	addwf	lcd_set_custom_char@data,f
  4359  068C                     l1773:	
  4360                           
  4361                           ;lcd4bits.c: 172:     }
  4362  068C  3001               	movlw	1
  4363  068D  00AF               	movwf	??_lcd_set_custom_char
  4364  068E  082F               	movf	??_lcd_set_custom_char,w
  4365  068F  07B1               	addwf	lcd_set_custom_char@row,f
  4366  0690                     l1775:	
  4367  0690  3008               	movlw	8
  4368  0691  0231               	subwf	lcd_set_custom_char@row,w
  4369  0692  1C03               	skipc
  4370  0693  2E95               	goto	u991
  4371  0694  2E96               	goto	u990
  4372  0695                     u991:	
  4373  0695  2E57               	goto	l1769
  4374  0696                     u990:	
  4375  0696                     l1777:	
  4376                           
  4377                           ;lcd4bits.c: 173:     lcd_write(0x00, 0x80, port);
  4378  0696  3080               	movlw	128
  4379  0697  00AF               	movwf	??_lcd_set_custom_char
  4380  0698  082F               	movf	??_lcd_set_custom_char,w
  4381  0699  00A6               	movwf	lcd_write@CmdChar
  4382  069A  082D               	movf	lcd_set_custom_char@port,w
  4383  069B  00A7               	movwf	lcd_write@port
  4384  069C  082E               	movf	lcd_set_custom_char@port+1,w
  4385  069D  00A8               	movwf	lcd_write@port+1
  4386  069E  3000               	movlw	0
  4387  069F  120A  118A  26F6  120A  118A  	fcall	_lcd_write
  4388  06A4                     l371:	
  4389  06A4  0008               	return
  4390  06A5                     __end_of_lcd_set_custom_char:	
  4391                           
  4392                           	psect	text22
  4393  0F0F                     __ptext22:	
  4394 ;; *************** function _lcd_goto *****************
  4395 ;; Defined at:
  4396 ;;		line 146 in file "lcd4bits.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  position        1    wreg     unsigned char 
  4399 ;;  port            2   12[BANK0 ] PTR unsigned char 
  4400 ;;		 -> PORTD(1), PORTA(1), 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  position        1   15[BANK0 ] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         0       2       0       0       0
  4413 ;;      Locals:         0       1       0       0       0
  4414 ;;      Temps:          0       1       0       0       0
  4415 ;;      Totals:         0       4       0       0       0
  4416 ;;Total ram usage:        4 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    6
  4419 ;; This function calls:
  4420 ;;		_DelayMs
  4421 ;;		_lcd_write
  4422 ;; This function is called by:
  4423 ;;		_startup
  4424 ;;		_display_scoreboard
  4425 ;;		_display_gameboard
  4426 ;;		_gameboard_init
  4427 ;;		_update_cursor
  4428 ;;		_toggle_cursor
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function _lcd_goto
  4434  0F0F                     _lcd_goto:	
  4435                           
  4436                           ;incstack = 0
  4437 ;; hardware stack exceeded
  4438                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4439                           ;lcd_goto@position stored from wreg
  4440  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0F11  00AF               	movwf	lcd_goto@position
  4443  0F12                     l1731:	
  4444                           
  4445                           ;lcd4bits.c: 147:     lcd_write(0x00, 0x80 + position, port);
  4446  0F12  082F               	movf	lcd_goto@position,w
  4447  0F13  3E80               	addlw	128
  4448  0F14  00AE               	movwf	??_lcd_goto
  4449  0F15  082E               	movf	??_lcd_goto,w
  4450  0F16  00A6               	movwf	lcd_write@CmdChar
  4451  0F17  082C               	movf	lcd_goto@port,w
  4452  0F18  00A7               	movwf	lcd_write@port
  4453  0F19  082D               	movf	lcd_goto@port+1,w
  4454  0F1A  00A8               	movwf	lcd_write@port+1
  4455  0F1B  3000               	movlw	0
  4456  0F1C  120A  118A  26F6  120A  158A  	fcall	_lcd_write
  4457  0F21                     l1733:	
  4458                           
  4459                           ;lcd4bits.c: 149:     DelayMs(2);
  4460  0F21  3002               	movlw	2
  4461  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  4463  0F24  00A4               	movwf	DelayMs@millis
  4464  0F25  3000               	movlw	0
  4465  0F26  00A5               	movwf	DelayMs@millis+1
  4466  0F27  120A  158A  26C1  120A  158A  	fcall	_DelayMs
  4467  0F2C                     l363:	
  4468  0F2C  0008               	return
  4469  0F2D                     __end_of_lcd_goto:	
  4470                           
  4471                           	psect	text23
  4472  0EDA                     __ptext23:	
  4473 ;; *************** function _lcd_clear *****************
  4474 ;; Defined at:
  4475 ;;		line 123 in file "lcd4bits.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  port            2   12[BANK0 ] PTR unsigned char 
  4478 ;;		 -> PORTD(1), PORTA(1), 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4490 ;;      Params:         0       2       0       0       0
  4491 ;;      Locals:         0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0
  4493 ;;      Totals:         0       2       0       0       0
  4494 ;;Total ram usage:        2 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    6
  4497 ;; This function calls:
  4498 ;;		_DelayMs
  4499 ;;		_lcd_write
  4500 ;; This function is called by:
  4501 ;;		_startup
  4502 ;;		_display_gameboard
  4503 ;;		_gameboard_init
  4504 ;;		_lcd_init
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _lcd_clear
  4510  0EDA                     _lcd_clear:	
  4511  0EDA                     l1757:	
  4512                           ;incstack = 0
  4513 ;; hardware stack exceeded
  4514                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4515                           
  4516                           
  4517                           ;lcd4bits.c: 124:     lcd_write(0x00, 0x01, port);
  4518  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4519  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4520  0EDC  01A6               	clrf	lcd_write@CmdChar
  4521  0EDD  0AA6               	incf	lcd_write@CmdChar,f
  4522  0EDE  082C               	movf	lcd_clear@port,w
  4523  0EDF  00A7               	movwf	lcd_write@port
  4524  0EE0  082D               	movf	lcd_clear@port+1,w
  4525  0EE1  00A8               	movwf	lcd_write@port+1
  4526  0EE2  3000               	movlw	0
  4527  0EE3  120A  118A  26F6  120A  158A  	fcall	_lcd_write
  4528  0EE8                     l1759:	
  4529                           
  4530                           ;lcd4bits.c: 125:     DelayMs(2);
  4531  0EE8  3002               	movlw	2
  4532  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0EEB  00A4               	movwf	DelayMs@millis
  4535  0EEC  3000               	movlw	0
  4536  0EED  00A5               	movwf	DelayMs@millis+1
  4537  0EEE  120A  158A  26C1  120A  158A  	fcall	_DelayMs
  4538  0EF3                     l351:	
  4539  0EF3  0008               	return
  4540  0EF4                     __end_of_lcd_clear:	
  4541                           
  4542                           	psect	text24
  4543  06F6                     __ptext24:	
  4544 ;; *************** function _lcd_write *****************
  4545 ;; Defined at:
  4546 ;;		line 110 in file "lcd4bits.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  mode            1    wreg     unsigned char 
  4549 ;;  CmdChar         1    6[BANK0 ] unsigned char 
  4550 ;;  port            2    7[BANK0 ] PTR unsigned char 
  4551 ;;		 -> PORTD(1), PORTA(1), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  mode            1   11[BANK0 ] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4563 ;;      Params:         0       3       0       0       0
  4564 ;;      Locals:         0       1       0       0       0
  4565 ;;      Temps:          0       2       0       0       0
  4566 ;;      Totals:         0       6       0       0       0
  4567 ;;Total ram usage:        6 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    5
  4570 ;; This function calls:
  4571 ;;		_Delay20us
  4572 ;; This function is called by:
  4573 ;;		_lcd_clear
  4574 ;;		_lcd_puts
  4575 ;;		_lcd_putch
  4576 ;;		_lcd_goto
  4577 ;;		_lcd_init
  4578 ;;		_lcd_set_custom_char
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _lcd_write
  4584  06F6                     _lcd_write:	
  4585                           
  4586                           ;incstack = 0
  4587 ;; hardware stack exceeded
  4588                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4589                           ;lcd_write@mode stored from wreg
  4590  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  4591  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  4592  06F8  00AB               	movwf	lcd_write@mode
  4593  06F9                     l1619:	
  4594                           
  4595                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  4596  06F9  0826               	movf	lcd_write@CmdChar,w
  4597  06FA  00A9               	movwf	??_lcd_write
  4598  06FB  3004               	movlw	4
  4599  06FC                     u715:	
  4600  06FC  1003               	clrc
  4601  06FD  0CA9               	rrf	??_lcd_write,f
  4602  06FE  3EFF               	addlw	-1
  4603  06FF  1D03               	skipz
  4604  0700  2EFC               	goto	u715
  4605  0701  0829               	movf	??_lcd_write,w
  4606  0702  3E20               	addlw	32
  4607  0703  042B               	iorwf	lcd_write@mode,w
  4608  0704  00AA               	movwf	??_lcd_write+1
  4609  0705  0827               	movf	lcd_write@port,w
  4610  0706  0084               	movwf	4
  4611  0707  1783               	bsf	3,7
  4612  0708  1C28               	btfss	lcd_write@port+1,0
  4613  0709  1383               	bcf	3,7
  4614  070A  082A               	movf	??_lcd_write+1,w
  4615  070B  0080               	movwf	0
  4616  070C                     l1621:	
  4617                           
  4618                           ;lcd4bits.c: 112:     Delay20us();
  4619  070C  120A  158A  2682  120A  118A  	fcall	_Delay20us
  4620  0711                     l1623:	
  4621                           
  4622                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  4623  0711  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0712  1303               	bcf	3,6	;RP1=0, select bank0
  4625  0713  0827               	movf	lcd_write@port,w
  4626  0714  0084               	movwf	4
  4627  0715  1783               	bsf	3,7
  4628  0716  1C28               	btfss	lcd_write@port+1,0
  4629  0717  1383               	bcf	3,7
  4630  0718  0800               	movf	0,w
  4631  0719  39DF               	andlw	223
  4632  071A  00A9               	movwf	??_lcd_write
  4633  071B  0827               	movf	lcd_write@port,w
  4634  071C  0084               	movwf	4
  4635  071D  1783               	bsf	3,7
  4636  071E  1C28               	btfss	lcd_write@port+1,0
  4637  071F  1383               	bcf	3,7
  4638  0720  0829               	movf	??_lcd_write,w
  4639  0721  0080               	movwf	0
  4640  0722                     l1625:	
  4641                           
  4642                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  4643  0722  0826               	movf	lcd_write@CmdChar,w
  4644  0723  390F               	andlw	15
  4645  0724  3E20               	addlw	32
  4646  0725  042B               	iorwf	lcd_write@mode,w
  4647  0726  00A9               	movwf	??_lcd_write
  4648  0727  0827               	movf	lcd_write@port,w
  4649  0728  0084               	movwf	4
  4650  0729  1783               	bsf	3,7
  4651  072A  1C28               	btfss	lcd_write@port+1,0
  4652  072B  1383               	bcf	3,7
  4653  072C  0829               	movf	??_lcd_write,w
  4654  072D  0080               	movwf	0
  4655  072E                     l1627:	
  4656                           
  4657                           ;lcd4bits.c: 116:     Delay20us();
  4658  072E  120A  158A  2682  120A  118A  	fcall	_Delay20us
  4659                           
  4660                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  4661  0733  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0734  1303               	bcf	3,6	;RP1=0, select bank0
  4663  0735  0827               	movf	lcd_write@port,w
  4664  0736  0084               	movwf	4
  4665  0737  1783               	bsf	3,7
  4666  0738  1C28               	btfss	lcd_write@port+1,0
  4667  0739  1383               	bcf	3,7
  4668  073A  0800               	movf	0,w
  4669  073B  39DF               	andlw	223
  4670  073C  00A9               	movwf	??_lcd_write
  4671  073D  0827               	movf	lcd_write@port,w
  4672  073E  0084               	movwf	4
  4673  073F  1783               	bsf	3,7
  4674  0740  1C28               	btfss	lcd_write@port+1,0
  4675  0741  1383               	bcf	3,7
  4676  0742  0829               	movf	??_lcd_write,w
  4677  0743  0080               	movwf	0
  4678  0744                     l348:	
  4679  0744  0008               	return
  4680  0745                     __end_of_lcd_write:	
  4681                           
  4682                           	psect	text25
  4683  0E82                     __ptext25:	
  4684 ;; *************** function _Delay20us *****************
  4685 ;; Defined at:
  4686 ;;		line 99 in file "lcd4bits.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  next            1    5[BANK0 ] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4700 ;;      Params:         0       0       0       0       0
  4701 ;;      Locals:         0       1       0       0       0
  4702 ;;      Temps:          0       1       0       0       0
  4703 ;;      Totals:         0       2       0       0       0
  4704 ;;Total ram usage:        2 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    4
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_lcd_write
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _Delay20us
  4716  0E82                     _Delay20us:	
  4717  0E82                     l1609:	
  4718                           ;incstack = 0
  4719 ;; hardware stack exceeded
  4720                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  4721                           
  4722                           
  4723                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  4724  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0E84  01A5               	clrf	Delay20us@next
  4727  0E85                     l1615:	
  4728  0E85  3001               	movlw	1
  4729  0E86  00A4               	movwf	??_Delay20us
  4730  0E87  0824               	movf	??_Delay20us,w
  4731  0E88  07A5               	addwf	Delay20us@next,f
  4732  0E89                     l1617:	
  4733  0E89  3008               	movlw	8
  4734  0E8A  0225               	subwf	Delay20us@next,w
  4735  0E8B  1C03               	skipc
  4736  0E8C  2E8E               	goto	u701
  4737  0E8D  2E8F               	goto	u700
  4738  0E8E                     u701:	
  4739  0E8E  2E85               	goto	l1615
  4740  0E8F                     u700:	
  4741  0E8F                     l345:	
  4742  0E8F  0008               	return
  4743  0E90                     __end_of_Delay20us:	
  4744                           
  4745                           	psect	text26
  4746  0EC1                     __ptext26:	
  4747 ;; *************** function _DelayMs *****************
  4748 ;; Defined at:
  4749 ;;		line 86 in file "lcd4bits.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  millis          2    4[BANK0 ] unsigned int 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4763 ;;      Params:         0       2       0       0       0
  4764 ;;      Locals:         0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0
  4766 ;;      Totals:         0       2       0       0       0
  4767 ;;Total ram usage:        2 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    4
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_startup
  4774 ;;		_randomize_gameboard
  4775 ;;		_lcd_clear
  4776 ;;		_lcd_goto
  4777 ;;		_lcd_init
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           
  4782                           ;psect for function _DelayMs
  4783  0EC1                     _DelayMs:	
  4784  0EC1                     l1629:	
  4785                           ;incstack = 0
  4786                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  4787                           
  4788                           
  4789                           ;lcd4bits.c: 87:     while (millis != 0) {
  4790  0EC1  2ED1               	goto	l1637
  4791  0EC2                     l1631:	
  4792                           
  4793                           ;lcd4bits.c: 88:         TMR0 = 100;
  4794  0EC2  3064               	movlw	100
  4795  0EC3  0081               	movwf	1	;volatile
  4796  0EC4                     l1633:	
  4797                           
  4798                           ;lcd4bits.c: 89:         T0IF = 0;
  4799  0EC4  110B               	bcf	11,2	;volatile
  4800  0EC5                     l336:	
  4801                           ;lcd4bits.c: 90:         while(T0IF == 0);
  4802                           
  4803  0EC5  1D0B               	btfss	11,2	;volatile
  4804  0EC6  2EC8               	goto	u721
  4805  0EC7  2EC9               	goto	u720
  4806  0EC8                     u721:	
  4807  0EC8  2EC5               	goto	l336
  4808  0EC9                     u720:	
  4809  0EC9                     l1635:	
  4810                           
  4811                           ;lcd4bits.c: 91:         millis--;
  4812  0EC9  3001               	movlw	1
  4813  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  4814  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  4815  0ECC  02A4               	subwf	DelayMs@millis,f
  4816  0ECD  3000               	movlw	0
  4817  0ECE  1C03               	skipc
  4818  0ECF  03A5               	decf	DelayMs@millis+1,f
  4819  0ED0  02A5               	subwf	DelayMs@millis+1,f
  4820  0ED1                     l1637:	
  4821                           
  4822                           ;lcd4bits.c: 87:     while (millis != 0) {
  4823  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  4824  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  4825  0ED3  0824               	movf	DelayMs@millis,w
  4826  0ED4  0425               	iorwf	DelayMs@millis+1,w
  4827  0ED5  1D03               	btfss	3,2
  4828  0ED6  2ED8               	goto	u731
  4829  0ED7  2ED9               	goto	u730
  4830  0ED8                     u731:	
  4831  0ED8  2EC2               	goto	l1631
  4832  0ED9                     u730:	
  4833  0ED9                     l340:	
  4834  0ED9  0008               	return
  4835  0EDA                     __end_of_DelayMs:	
  4836                           
  4837                           	psect	text27
  4838  0E90                     __ptext27:	
  4839 ;; *************** function _get_current_char *****************
  4840 ;; Defined at:
  4841 ;;		line 344 in file "concentration.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4855 ;;      Params:         0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0
  4857 ;;      Temps:          0       1       0       0       0
  4858 ;;      Totals:         0       1       0       0       0
  4859 ;;Total ram usage:        1 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    5
  4862 ;; This function calls:
  4863 ;;		_get_cursor_index
  4864 ;; This function is called by:
  4865 ;;		_gameboard_init
  4866 ;;		_update_cursor
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _get_current_char
  4872  0E90                     _get_current_char:	
  4873  0E90                     l1779:	
  4874                           ;incstack = 0
  4875                           ; Regs used in _get_current_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4876                           
  4877                           
  4878                           ;concentration.c: 345:     current_char = visible[get_cursor_index()];
  4879  0E90  120A  158A  265F  120A  158A  	fcall	_get_cursor_index
  4880  0E95  3EA0               	addlw	(low (_visible| 0))& (0+255)
  4881  0E96  0084               	movwf	4
  4882  0E97  1383               	bcf	3,7	;select IRP bank1
  4883  0E98  0800               	movf	0,w
  4884  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0E9B  00A4               	movwf	??_get_current_char
  4887  0E9C  0824               	movf	??_get_current_char,w
  4888  0E9D  00E5               	movwf	_current_char
  4889  0E9E                     l305:	
  4890  0E9E  0008               	return
  4891  0E9F                     __end_of_get_current_char:	
  4892                           
  4893                           	psect	text28
  4894  0E5F                     __ptext28:	
  4895 ;; *************** function _get_cursor_index *****************
  4896 ;; Defined at:
  4897 ;;		line 190 in file "concentration.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      unsigned char 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0
  4914 ;;      Totals:         0       0       0       0       0
  4915 ;;Total ram usage:        0 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    4
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_check_for_match
  4922 ;;		_update_gameboard_from_input
  4923 ;;		_get_current_char
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           
  4928                           ;psect for function _get_cursor_index
  4929  0E5F                     _get_cursor_index:	
  4930  0E5F                     l1747:	
  4931                           ;incstack = 0
  4932                           ; Regs used in _get_cursor_index: [wreg+status,2+status,0]
  4933                           
  4934                           
  4935                           ;concentration.c: 191:     if(cursor_pos&0x40) {
  4936  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0E61  1F66               	btfss	_cursor_pos,6
  4939  0E62  2E64               	goto	u971
  4940  0E63  2E65               	goto	u970
  4941  0E64                     u971:	
  4942  0E64  2E68               	goto	l1753
  4943  0E65                     u970:	
  4944  0E65                     l1749:	
  4945                           
  4946                           ;concentration.c: 192:         return (cursor_pos-0x30);
  4947  0E65  0866               	movf	_cursor_pos,w
  4948  0E66  3ED0               	addlw	208
  4949  0E67  2E69               	goto	l233
  4950  0E68                     l1753:	
  4951                           
  4952                           ;concentration.c: 194:     return cursor_pos;
  4953  0E68  0866               	movf	_cursor_pos,w
  4954  0E69                     l233:	
  4955  0E69  0008               	return
  4956  0E6A                     __end_of_get_cursor_index:	
  4957                           
  4958                           	psect	text29
  4959  078E                     __ptext29:	
  4960 ;; *************** function _interrupt_handler *****************
  4961 ;; Defined at:
  4962 ;;		line 378 in file "concentration.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0
  4978 ;;      Temps:          0       4       0       0       0
  4979 ;;      Totals:         0       4       0       0       0
  4980 ;;Total ram usage:        4 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    3
  4983 ;; This function calls:
  4984 ;;		i1_lcd_putch
  4985 ;; This function is called by:
  4986 ;;		Interrupt level 1
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           
  4991                           ;psect for function _interrupt_handler
  4992  078E                     _interrupt_handler:	
  4993  078E                     i1l2129:	
  4994                           
  4995                           ;concentration.c: 379:     if(ADIF) {
  4996  078E  1F0C               	btfss	12,6	;volatile
  4997  078F  2F91               	goto	u134_21
  4998  0790  2F92               	goto	u134_20
  4999  0791                     u134_21:	
  5000  0791  2FAA               	goto	i1l2143
  5001  0792                     u134_20:	
  5002  0792                     i1l2131:	
  5003                           
  5004                           ;concentration.c: 380:         if(CHS1 == 1) {
  5005  0792  1D9F               	btfss	31,3	;volatile
  5006  0793  2F95               	goto	u135_21
  5007  0794  2F96               	goto	u135_20
  5008  0795                     u135_21:	
  5009  0795  2FA0               	goto	i1l2137
  5010  0796                     u135_20:	
  5011  0796                     i1l2133:	
  5012                           
  5013                           ;concentration.c: 381:             joystick_x_pos = (((int)ADRESH)<<8)+ADRESL;
  5014  0796  081E               	movf	30,w	;volatile
  5015  0797  00DE               	movwf	_joystick_x_pos+1
  5016  0798  1683               	bsf	3,5	;RP0=1, select bank1
  5017  0799  1303               	bcf	3,6	;RP1=0, select bank1
  5018  079A  081E               	movf	30,w	;volatile
  5019  079B  1283               	bcf	3,5	;RP0=0, select bank0
  5020  079C  1303               	bcf	3,6	;RP1=0, select bank0
  5021  079D  00DD               	movwf	_joystick_x_pos
  5022  079E                     i1l2135:	
  5023                           
  5024                           ;concentration.c: 382:             CHS1 = 0;
  5025  079E  119F               	bcf	31,3	;volatile
  5026                           
  5027                           ;concentration.c: 383:         } else {
  5028  079F  2FA9               	goto	i1l2141
  5029  07A0                     i1l2137:	
  5030                           
  5031                           ;concentration.c: 384:             joystick_y_pos = (((int)ADRESH)<<8)+ADRESL;
  5032  07A0  081E               	movf	30,w	;volatile
  5033  07A1  00DC               	movwf	_joystick_y_pos+1
  5034  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  5035  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  5036  07A4  081E               	movf	30,w	;volatile
  5037  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  5038  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  5039  07A7  00DB               	movwf	_joystick_y_pos
  5040  07A8                     i1l2139:	
  5041                           
  5042                           ;concentration.c: 385:             CHS1 = 1;
  5043  07A8  159F               	bsf	31,3	;volatile
  5044  07A9                     i1l2141:	
  5045                           
  5046                           ;concentration.c: 387:         ADIF = 0;
  5047  07A9  130C               	bcf	12,6	;volatile
  5048  07AA                     i1l2143:	
  5049                           
  5050                           ;concentration.c: 389:     if(TMR2IF) {
  5051  07AA  1C8C               	btfss	12,1	;volatile
  5052  07AB  2FAD               	goto	u136_21
  5053  07AC  2FAE               	goto	u136_20
  5054  07AD                     u136_21:	
  5055  07AD  2FB8               	goto	i1l319
  5056  07AE                     u136_20:	
  5057  07AE                     i1l2145:	
  5058                           
  5059                           ;concentration.c: 390:         cursor_move_delay_count--;
  5060  07AE  3001               	movlw	1
  5061  07AF  02FD               	subwf	_cursor_move_delay_count,f
  5062                           
  5063                           ;concentration.c: 391:         if(cursor_move_delay_count == 0) {
  5064  07B0  087D               	movf	_cursor_move_delay_count,w
  5065  07B1  1D03               	btfss	3,2
  5066  07B2  2FB4               	goto	u137_21
  5067  07B3  2FB5               	goto	u137_20
  5068  07B4                     u137_21:	
  5069  07B4  2FB7               	goto	i1l320
  5070  07B5                     u137_20:	
  5071  07B5                     i1l2147:	
  5072                           
  5073                           ;concentration.c: 392:             cursor_movable = 1;
  5074  07B5  01E2               	clrf	_cursor_movable
  5075  07B6  0AE2               	incf	_cursor_movable,f
  5076  07B7                     i1l320:	
  5077                           ;concentration.c: 393:         }
  5078                           
  5079                           
  5080                           ;concentration.c: 394:         TMR2IF = 0;
  5081  07B7  108C               	bcf	12,1	;volatile
  5082  07B8                     i1l319:	
  5083                           ;concentration.c: 395:     }
  5084                           
  5085                           
  5086                           ;concentration.c: 396:     if(RCIF) {
  5087  07B8  1E8C               	btfss	12,5	;volatile
  5088  07B9  2FBB               	goto	u138_21
  5089  07BA  2FBC               	goto	u138_20
  5090  07BB                     u138_21:	
  5091  07BB  2FCA               	goto	i1l322
  5092  07BC                     u138_20:	
  5093  07BC                     i1l2149:	
  5094                           
  5095                           ;concentration.c: 397:         recieved_char = RCREG;
  5096  07BC  081A               	movf	26,w	;volatile
  5097  07BD  00A0               	movwf	??_interrupt_handler
  5098  07BE  0820               	movf	??_interrupt_handler,w
  5099  07BF  00FC               	movwf	_recieved_char
  5100  07C0                     i1l2151:	
  5101                           
  5102                           ;concentration.c: 398:         lcd_putch(recieved_char, gameboard);
  5103  07C0  0869               	movf	_gameboard,w
  5104  07C1  00F8               	movwf	i1lcd_putch@port
  5105  07C2  086A               	movf	_gameboard+1,w
  5106  07C3  00F9               	movwf	i1lcd_putch@port+1
  5107  07C4  087C               	movf	_recieved_char,w
  5108  07C5  120A  158A  269F  120A  118A  	fcall	i1_lcd_putch
  5109  07CA                     i1l322:	
  5110  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  5111  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  5112  07CC  0823               	movf	??_interrupt_handler+3,w
  5113  07CD  008A               	movwf	10
  5114  07CE  0822               	movf	??_interrupt_handler+2,w
  5115  07CF  0084               	movwf	4
  5116  07D0  0E21               	swapf	(??_interrupt_handler+1)^0,w
  5117  07D1  0083               	movwf	3
  5118  07D2  0EFE               	swapf	btemp,f
  5119  07D3  0E7E               	swapf	btemp,w
  5120  07D4  0009               	retfie
  5121  07D5                     __end_of_interrupt_handler:	
  5122                           
  5123                           	psect	intentry
  5124  0004                     __pintentry:	
  5125                           ;incstack = 0
  5126 ;; hardware stack exceeded
  5127                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5128                           
  5129  0004                     interrupt_function:	
  5130  007E                     saved_w	set	btemp
  5131  0004  00FE               	movwf	btemp
  5132  0005  0E03               	swapf	3,w
  5133  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0008  00A1               	movwf	??_interrupt_handler+1
  5136  0009  0804               	movf	4,w
  5137  000A  00A2               	movwf	??_interrupt_handler+2
  5138  000B  080A               	movf	10,w
  5139  000C  00A3               	movwf	??_interrupt_handler+3
  5140  000D  120A  118A  2F8E   	ljmp	_interrupt_handler
  5141                           
  5142                           	psect	text30
  5143  0E9F                     __ptext30:	
  5144 ;; *************** function i1_lcd_putch *****************
  5145 ;; Defined at:
  5146 ;;		line 136 in file "lcd4bits.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  character       1    wreg     unsigned char 
  5149 ;;  port            2    8[COMMON] PTR unsigned char 
  5150 ;;		 -> PORTD(1), PORTA(1), 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  character       1   11[COMMON] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5162 ;;      Params:         2       0       0       0       0
  5163 ;;      Locals:         1       0       0       0       0
  5164 ;;      Temps:          1       0       0       0       0
  5165 ;;      Totals:         4       0       0       0       0
  5166 ;;Total ram usage:        4 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    2
  5169 ;; This function calls:
  5170 ;;		i1_lcd_write
  5171 ;; This function is called by:
  5172 ;;		_interrupt_handler
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function i1_lcd_putch
  5178  0E9F                     i1_lcd_putch:	
  5179                           
  5180                           ;incstack = 0
  5181 ;; hardware stack exceeded
  5182                           ; Regs used in i1_lcd_putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5183                           ;i1lcd_putch@character stored from wreg
  5184  0E9F  00FB               	movwf	i1lcd_putch@character
  5185  0EA0                     i1l2109:	
  5186                           
  5187                           ;lcd4bits.c: 137:     lcd_write(0x10, character, port);
  5188  0EA0  087B               	movf	i1lcd_putch@character,w
  5189  0EA1  00FA               	movwf	??i1_lcd_putch
  5190  0EA2  087A               	movf	??i1_lcd_putch,w
  5191  0EA3  00F2               	movwf	i1lcd_write@CmdChar
  5192  0EA4  0878               	movf	i1lcd_putch@port,w
  5193  0EA5  00F3               	movwf	i1lcd_write@port
  5194  0EA6  0879               	movf	i1lcd_putch@port+1,w
  5195  0EA7  00F4               	movwf	i1lcd_write@port+1
  5196  0EA8  3010               	movlw	16
  5197  0EA9  120A  118A  2745  120A  158A  	fcall	i1_lcd_write
  5198  0EAE                     i1l360:	
  5199  0EAE  0008               	return
  5200  0EAF                     __end_ofi1_lcd_putch:	
  5201                           
  5202                           	psect	text31
  5203  0745                     __ptext31:	
  5204 ;; *************** function i1_lcd_write *****************
  5205 ;; Defined at:
  5206 ;;		line 110 in file "lcd4bits.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  mode            1    wreg     unsigned char 
  5209 ;;  CmdChar         1    2[COMMON] unsigned char 
  5210 ;;  port            2    3[COMMON] PTR unsigned char 
  5211 ;;		 -> PORTD(1), PORTA(1), 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  mode            1    7[COMMON] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         3       0       0       0       0
  5224 ;;      Locals:         1       0       0       0       0
  5225 ;;      Temps:          2       0       0       0       0
  5226 ;;      Totals:         6       0       0       0       0
  5227 ;;Total ram usage:        6 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    1
  5230 ;; This function calls:
  5231 ;;		i1_Delay20us
  5232 ;; This function is called by:
  5233 ;;		i1_lcd_putch
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           
  5238                           ;psect for function i1_lcd_write
  5239  0745                     i1_lcd_write:	
  5240                           
  5241                           ;incstack = 0
  5242 ;; hardware stack exceeded
  5243                           ; Regs used in i1_lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5244                           ;i1lcd_write@mode stored from wreg
  5245  0745  00F7               	movwf	i1lcd_write@mode
  5246  0746                     i1l1921:	
  5247                           
  5248                           ;lcd4bits.c: 111:     *port = (mode|((CmdChar>>4)+0x20));
  5249  0746  0872               	movf	i1lcd_write@CmdChar,w
  5250  0747  00F5               	movwf	??i1_lcd_write
  5251  0748  3004               	movlw	4
  5252  0749                     u113_25:	
  5253  0749  1003               	clrc
  5254  074A  0CF5               	rrf	??i1_lcd_write,f
  5255  074B  3EFF               	addlw	-1
  5256  074C  1D03               	skipz
  5257  074D  2F49               	goto	u113_25
  5258  074E  0875               	movf	??i1_lcd_write,w
  5259  074F  3E20               	addlw	32
  5260  0750  0477               	iorwf	i1lcd_write@mode,w
  5261  0751  00F6               	movwf	??i1_lcd_write+1
  5262  0752  0873               	movf	i1lcd_write@port,w
  5263  0753  0084               	movwf	4
  5264  0754  1783               	bsf	3,7
  5265  0755  1C74               	btfss	i1lcd_write@port+1,0
  5266  0756  1383               	bcf	3,7
  5267  0757  0876               	movf	??i1_lcd_write+1,w
  5268  0758  0080               	movwf	0
  5269  0759                     i1l1923:	
  5270                           
  5271                           ;lcd4bits.c: 112:     Delay20us();
  5272  0759  120A  158A  266A  120A  118A  	fcall	i1_Delay20us
  5273  075E                     i1l1925:	
  5274                           
  5275                           ;lcd4bits.c: 113:     *port = (*port)&(~0x20);
  5276  075E  0873               	movf	i1lcd_write@port,w
  5277  075F  0084               	movwf	4
  5278  0760  1783               	bsf	3,7
  5279  0761  1C74               	btfss	i1lcd_write@port+1,0
  5280  0762  1383               	bcf	3,7
  5281  0763  0800               	movf	0,w
  5282  0764  39DF               	andlw	223
  5283  0765  00F5               	movwf	??i1_lcd_write
  5284  0766  0873               	movf	i1lcd_write@port,w
  5285  0767  0084               	movwf	4
  5286  0768  1783               	bsf	3,7
  5287  0769  1C74               	btfss	i1lcd_write@port+1,0
  5288  076A  1383               	bcf	3,7
  5289  076B  0875               	movf	??i1_lcd_write,w
  5290  076C  0080               	movwf	0
  5291  076D                     i1l1927:	
  5292                           
  5293                           ;lcd4bits.c: 115:     *port = (mode|((CmdChar&0x0F)+0x20));
  5294  076D  0872               	movf	i1lcd_write@CmdChar,w
  5295  076E  390F               	andlw	15
  5296  076F  3E20               	addlw	32
  5297  0770  0477               	iorwf	i1lcd_write@mode,w
  5298  0771  00F5               	movwf	??i1_lcd_write
  5299  0772  0873               	movf	i1lcd_write@port,w
  5300  0773  0084               	movwf	4
  5301  0774  1783               	bsf	3,7
  5302  0775  1C74               	btfss	i1lcd_write@port+1,0
  5303  0776  1383               	bcf	3,7
  5304  0777  0875               	movf	??i1_lcd_write,w
  5305  0778  0080               	movwf	0
  5306  0779                     i1l1929:	
  5307                           
  5308                           ;lcd4bits.c: 116:     Delay20us();
  5309  0779  120A  158A  266A  120A  118A  	fcall	i1_Delay20us
  5310                           
  5311                           ;lcd4bits.c: 117:     *port = (*port)&(~0x20);
  5312  077E  0873               	movf	i1lcd_write@port,w
  5313  077F  0084               	movwf	4
  5314  0780  1783               	bsf	3,7
  5315  0781  1C74               	btfss	i1lcd_write@port+1,0
  5316  0782  1383               	bcf	3,7
  5317  0783  0800               	movf	0,w
  5318  0784  39DF               	andlw	223
  5319  0785  00F5               	movwf	??i1_lcd_write
  5320  0786  0873               	movf	i1lcd_write@port,w
  5321  0787  0084               	movwf	4
  5322  0788  1783               	bsf	3,7
  5323  0789  1C74               	btfss	i1lcd_write@port+1,0
  5324  078A  1383               	bcf	3,7
  5325  078B  0875               	movf	??i1_lcd_write,w
  5326  078C  0080               	movwf	0
  5327  078D                     i1l348:	
  5328  078D  0008               	return
  5329  078E                     __end_ofi1_lcd_write:	
  5330                           
  5331                           	psect	text32
  5332  0E6A                     __ptext32:	
  5333 ;; *************** function i1_Delay20us *****************
  5334 ;; Defined at:
  5335 ;;		line 99 in file "lcd4bits.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  Delay20us       1    1[COMMON] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5349 ;;      Params:         0       0       0       0       0
  5350 ;;      Locals:         1       0       0       0       0
  5351 ;;      Temps:          1       0       0       0       0
  5352 ;;      Totals:         2       0       0       0       0
  5353 ;;Total ram usage:        2 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; This function calls:
  5356 ;;		Nothing
  5357 ;; This function is called by:
  5358 ;;		i1_lcd_write
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function i1_Delay20us
  5364  0E6A                     i1_Delay20us:	
  5365  0E6A                     i1l1781:	
  5366                           ;incstack = 0
  5367 ;; hardware stack exceeded
  5368                           ; Regs used in i1_Delay20us: [wreg+status,2+status,0]
  5369                           
  5370                           
  5371                           ;lcd4bits.c: 100:     unsigned char next;;lcd4bits.c: 101:     for (next = 0; next < 8; 
      +                          next++);
  5372  0E6A  01F1               	clrf	i1Delay20us@next
  5373  0E6B                     i1l1787:	
  5374  0E6B  3001               	movlw	1
  5375  0E6C  00F0               	movwf	??i1_Delay20us
  5376  0E6D  0870               	movf	??i1_Delay20us,w
  5377  0E6E  07F1               	addwf	i1Delay20us@next,f
  5378  0E6F                     i1l1789:	
  5379  0E6F  3008               	movlw	8
  5380  0E70  0271               	subwf	i1Delay20us@next,w
  5381  0E71  1C03               	skipc
  5382  0E72  2E74               	goto	u100_21
  5383  0E73  2E75               	goto	u100_20
  5384  0E74                     u100_21:	
  5385  0E74  2E6B               	goto	i1l1787
  5386  0E75                     u100_20:	
  5387  0E75                     i1l345:	
  5388  0E75  0008               	return
  5389  0E76                     __end_ofi1_Delay20us:	
  5390  007E                     btemp	set	126	;btemp
  5391  007E                     wtemp0	set	126


Data Sizes:
    Strings     71
    Constant    64
    Data        4
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     59      75
    BANK1            80      0      64
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    lcd_display_char_as_num@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    lcd_set_custom_char@data	PTR const unsigned char  size(1) Largest target is 8
		 -> make_custom_chars@PIC(CODE[8]), make_custom_chars@RH(CODE[8]), make_custom_chars@skull(CODE[8]), make_custom_chars@club(CODE[8]), 
		 -> make_custom_chars@spade(CODE[8]), make_custom_chars@heart(CODE[8]), make_custom_chars@diamond(CODE[8]), make_custom_chars@smile(CODE[8]), 

    lcd_set_custom_char@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    lcd_init@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_goto@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_putch@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_puts@string	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[17]), STR_1(CODE[16]), 

    lcd_clear@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    lcd_write@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), PORTA(SFR0[1]), 

    scoreboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    gameboard	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handler in COMMON

    _interrupt_handler->i1_lcd_putch
    i1_lcd_putch->i1_lcd_write
    i1_lcd_write->i1_Delay20us

Critical Paths under _main in BANK0

    _main->_gameboard_init
    _update_gameboard_from_input->_check_for_match
    _update_cursor->_lcd_putch
    _toggle_cursor->_lcd_putch
    _check_for_match->_display_scoreboard
    _startup->_display_scoreboard
    _display_scoreboard->_lcd_display_char_as_num
    _lcd_puts->_lcd_write
    _lcd_display_char_as_num->_lcd_putch
    _display_gameboard->_lcd_putch
    _lcd_putch->___awdiv
    _lcd_init->_lcd_clear
    _gameboard_init->_randomize_gameboard
    _randomize_gameboard->___awdiv
    ___awdiv->___awmod
    _make_custom_chars->_lcd_set_custom_char
    _lcd_set_custom_char->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_clear->_lcd_write
    _lcd_write->_Delay20us

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   72281
                     _gameboard_init
                      _joystick_init
                           _lcd_init
                        _serial_init
                            _startup
        _update_gameboard_from_input
 ---------------------------------------------------------------------------------
 (1) _update_gameboard_from_input                          2     2      0   29484
                                             35 BANK0      2     2      0
                    _check_for_match
                  _display_gameboard
                   _get_cursor_index
                      _toggle_cursor
                      _update_cursor
 ---------------------------------------------------------------------------------
 (2) _update_cursor                                        4     3      1    5905
                                             24 BANK0      4     3      1
                   _get_current_char
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _toggle_cursor                                        0     0      0    5405
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _check_for_match                                      4     4      0    9860
                                             31 BANK0      4     4      0
                 _display_scoreboard
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0   26806
                            _DelayMs
                  _display_gameboard
                 _display_scoreboard
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _display_scoreboard                                   1     1      0    9770
                                             30 BANK0      1     1      0
            _lcd_display_char_as_num
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (4) _lcd_puts                                             4     2      2    2507
                                             12 BANK0      4     2      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_display_char_as_num                              6     3      3    4346
                                             24 BANK0      6     3      3
                            ___awdiv
                            ___awmod
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     600
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _display_gameboard                                    2     2      0    8314
                                             24 BANK0      2     2      0
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (3) _lcd_putch                                            4     2      2    2488
                                             20 BANK0      4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     1      2    5346
                                             14 BANK0      3     1      2
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _joystick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameboard_init                                       2     2      0   10645
                                             57 BANK0      2     2      0
                   _get_current_char
                          _lcd_clear
                           _lcd_goto
                  _make_custom_chars
                _randomize_gameboard
                          _time_init
 ---------------------------------------------------------------------------------
 (2) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomize_gameboard                                 37    37      0    1396
                                             20 BANK0     37    37      0
                            _DelayMs
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     756
                                             11 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _make_custom_chars                                    1     1      0    3445
                                             19 BANK0      1     1      0
                _lcd_set_custom_char
 ---------------------------------------------------------------------------------
 (3) _lcd_set_custom_char                                  7     4      3    3445
                                             12 BANK0      7     4      3
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_goto                                             4     2      2    2917
                                             12 BANK0      4     2      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            2     0      2    2819
                                             12 BANK0      2     0      2
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            6     3      3    1786
                                              6 BANK0      6     3      3
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      46
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     479
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _get_current_char                                     1     1      0       0
                                              4 BANK0      1     1      0
                   _get_cursor_index
 ---------------------------------------------------------------------------------
 (4) _get_cursor_index                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _interrupt_handler                                    4     4      0     388
                                              0 BANK0      4     4      0
                        i1_lcd_putch
 ---------------------------------------------------------------------------------
 (9) i1_lcd_putch                                          4     2      2     388
                                              8 COMMON     4     2      2
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (10) i1_lcd_write                                         6     3      3     318
                                              2 COMMON     6     3      3
                        i1_Delay20us
 ---------------------------------------------------------------------------------
 (11) i1_Delay20us                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gameboard_init
     _get_current_char
       _get_cursor_index
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _make_custom_chars
       _lcd_set_custom_char
         _lcd_write
           _Delay20us
     _randomize_gameboard
       _DelayMs
       ___awdiv
         ___awmod (ARG)
     _time_init
   _joystick_init
   _lcd_init
     _DelayMs
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_write
       _Delay20us
     _tmr0_init
   _serial_init
   _startup
     _DelayMs
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _display_scoreboard
       _lcd_display_char_as_num
         ___awdiv
           ___awmod (ARG)
         ___awmod
         _lcd_putch
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           _lcd_write (ARG)
             _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_puts
         _lcd_write
           _Delay20us
     _lcd_clear
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_goto
       _DelayMs
       _lcd_write
         _Delay20us
     _lcd_puts
       _lcd_write
         _Delay20us
   _update_gameboard_from_input
     _check_for_match
       _display_scoreboard
         _lcd_display_char_as_num
           ___awdiv
             ___awmod (ARG)
           ___awmod
           _lcd_putch
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             _lcd_write (ARG)
               _Delay20us
         _lcd_goto
           _DelayMs
           _lcd_write
             _Delay20us
         _lcd_puts
           _lcd_write
             _Delay20us
       _get_cursor_index
     _display_gameboard
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _get_cursor_index
     _toggle_cursor
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us
     _update_cursor
       _get_current_char
         _get_cursor_index
       _lcd_goto
         _DelayMs
         _lcd_write
           _Delay20us
       _lcd_putch
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         _lcd_write (ARG)
           _Delay20us

 _interrupt_handler (ROOT)
   i1_lcd_putch
     i1_lcd_write
       i1_Delay20us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3B      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B9      12        0.0%
ABS                  0      0      B9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 18 10:50:14 2020

                                   pc 0002   __end_of_update_gameboard_from_input 016C  
         _update_gameboard_from_input 004B                           __CFG_CP$OFF 0000  
                       _update_cursor 016C                                    _GO 00F9  
                        ___awdiv@sign 0031                                    fsr 0004  
                                 l204 0FD9                                   l205 0FFF  
                                 l302 0F7F                                   l311 0F51  
                                 l224 0410                                   l233 0E69  
                                 l305 0E9E                                   l242 05A5  
                                 l331 0E5E                                   l251 047D  
                                 l340 0ED9                                   l308 0E81  
                                 l229 0546                                   l190 02D3  
                                 l254 0052                                   l351 0EF3  
                                 l336 0EC5                                   l360 0EC0  
                                 l345 0E8F                                   l193 02E2  
                                 l363 0F2C                                   l371 06A4  
                                 l187 0F0E                                   l275 0169  
                                 l259 00AB                                   l348 0744  
                                 l196 0315                                   l357 07FF  
                                 l366 0652                                   l278 016B  
                                 l199 06F5                                   l616 04E6  
                                 l377 0394                                   l297 01FE  
                                 l629 0600                                   _GIE 005F  
                                 _RB5 0035                                   _PR2 0092  
                        __CFG_CPD$OFF 0000                                   u700 0E8F  
                                 u701 0E8E                                   u720 0EC9  
                                 u800 04C4                                   u721 0EC8  
                                 u801 04C3                                   u730 0ED9  
                                 u731 0ED8                                   u715 06FC  
                                 u820 04D8                                   u740 0485  
                                 u821 04D7                                   u805 04C0  
                                 u741 0484                                   _SCS 0478  
                                 u830 04DD                                   u750 0490  
                                 u910 05F2                                   u831 04DC  
                                 u815 04CC                                   u751 048F  
                                 u911 05F1                                   u760 04A1  
                                 u920 05F7                                   u840 05AD  
                                 u761 04A0                                   u921 05F6  
                                 u905 05E6                                   u841 05AC  
                                 u850 05B8                                   u930 07FF  
                                 u851 05B7                                   u931 07FE  
                                 u780 04B3                                   u860 05C3  
                                 u940 031F                                   u781 04B2  
                                 u861 05C2                                   u941 031E  
                                 u950 0344                                   u775 04A5  
                                 u951 0343                                   u880 05D5  
                                 u960 0377                                   u881 05D4  
                                 u961 0376                                   _RX9 00C6  
                                 u970 0E65                                   u890 05DF  
                                 u971 0E64                                   u795 04B4  
                                 u891 05DE                                   u875 05C7  
                                 u990 0696                                   u991 0695  
                                 u895 05DB                                   u985 065A  
                                 _TX9 04C6                                   fsr0 0004  
                                 indf 0000                          ___awmod@sign 002A  
                        __CFG_FOSC$HS 0000                          __CFG_LVP$OFF 0000  
                      ?_toggle_cursor 0070                         lcd_clear@port 002C  
                                l2001 0533                                  l2003 0537  
                                l2011 0EF4                                  l2005 053A  
                                l2021 0EFE                                  l2013 0EF5  
                                l2101 014C                                  l2007 053D  
                                l2031 0F07                                  l2023 0EFF  
                                l2015 0EF9                                  l2103 0155  
                                l2111 0F80                                  l2009 0541  
                                l2033 0F0B                                  l2025 0F02  
                                l2017 0EFA                                  l2041 02F1  
                                l2105 015B                                  l2121 0FA3  
                                l2113 0F83                                  l2027 0F03  
                                l2019 0EFB                                  l2051 0310  
                                l2043 02FC                                  l2035 028D  
                                l2107 0160                                  l2123 0FA8  
                                l2115 0F88                                  l2029 0F04  
                                l2045 0307                                  l2037 02D9  
                                l2213 018F                                  l2061 0094  
                                l2053 004B                                  l2125 0FAD  
                                l2117 0F93                                  l2047 030A  
                                l2039 02E8                                  l2215 01AB  
                                l2071 00B9                                  l2063 009A  
                                l2055 0051                                  l2127 0FB2  
                                l2119 0F9E                                  l2049 030B  
                                l2217 01BB                                  l2081 00E8  
                                l2065 009F                                  l2073 00BA  
                                l2057 0056                                  l2091 011B  
                                l2083 00EF                                  l2075 00C7  
                                l2067 00A3                                  l2059 0063  
                                l1621 070C                                  l1701 05C6  
                                l2093 012A                                  l2085 00FA  
                                l2077 00CE                                  l2069 00A9  
                                l1631 0EC2                                  l1615 0E85  
                                l1623 0711                                  l1711 05E5  
                                l1703 05CD                                  l2095 0131  
                                l2087 0109                                  l2079 00D9  
                                l1633 0EC4                                  l1617 0E89  
                                l1609 0E82                                  l1625 0722  
                                l1641 047E                                  l1801 0FCF  
                                l1713 05EC                                  l1705 05D1  
                                l2097 013C                                  l2089 0110  
                                l1635 0EC9                                  l1627 072E  
                                l1619 06F9                                  l1731 0F12  
                                l1651 0490                                  l1643 0481  
                                l1811 0E76                                  l1803 0FE9  
                                l1707 05D5                                  l1715 05F2  
                                l1723 07D8                                  l2099 0147  
                                l1637 0ED1                                  l1629 0EC1  
                                l1733 0F21                                  l1661 04A4  
                                l1653 0495                                  l1645 0485  
                                l1821 0573                                  l1813 0547  
                                l1805 0FEF                                  l1717 05F7  
                                l1709 05DF                                  l1741 0344  
                                l1725 07D9                                  l1901 01E1  
                                l1671 04CA                                  l1663 04AB  
                                l1655 0499                                  l1647 048A  
                                l1823 057C                                  l1815 0550  
                                l1639 0EB2                                  l1807 0FF5  
                                l1719 05FC                                  l1743 0370  
                                l1735 0319                                  l1727 07ED  
                                l1831 0414                                  l1903 01E8  
                                l1753 0E68                                  l1809 0395  
                                l1681 04E2                                  l1673 04CB  
                                l1665 04AF                                  l1657 049B  
                                l1649 048C                                  l1825 0581  
                                l1817 0554                                  l1745 0377  
                                l1737 031F                                  l1729 07F3  
                                l1761 06A5                                  l1841 0439  
                                l1833 041D                                  l1747 0E5F  
                                l1771 0686                                  l1763 0656  
                                l1675 04D2                                  l1667 04B3  
                                l1659 04A1                                  l1827 059B  
                                l1819 056C                                  l1931 0601  
                                l1691 05B2                                  l1739 033C  
                                l1843 044D                                  l1851 0460  
                                l1835 0422                                  l1749 0E65  
                                l1757 0EDA                                  l1773 068C  
                                l1669 04C4                                  l1677 04D8  
                                l1829 059F                                  l1917 0E55  
                                l1941 0637                                  l1933 0606  
                                l1693 05B4                                  l1685 05A6  
                                l1853 046A                                  l1845 0452  
                                l1837 0427                                  l1861 0F52  
                                l1759 0EE8                                  l1775 0690  
                                l1679 04DD                                  l1951 0F3B  
                                l1919 0E5D                                  l1943 0642  
                                l1935 060E                                  l1791 0FBB  
                                l1695 05B8                                  l1687 05A9  
                                l1855 0471                                  l1847 0457  
                                l1839 042B                                  l1871 0F75  
                                l1863 0F59                                  l1777 0696  
                                l1769 0657                                  l1961 0F45  
                                l1953 0F3D                                  l1945 0F2D  
                                l1937 0617                                  l1793 0FC6  
                                l1697 05BD                                  l1689 05AD  
                                l1857 0475                                  l1849 045B  
                                l1865 0F63                                  l1881 017F  
                                l1873 016F                                  l1779 0E90  
                                l1971 04ED                                  l1963 0F48  
                                l1955 0F3F                                  l1947 0F37  
                                l1939 0627                                  l1699 05C3  
                                l1859 0479                                  l1867 0F68  
                                l1891 019E                                  l1883 0184  
                                l1875 0170                                  l1981 04FA  
                                l1973 04F2                                  l1965 0F4B  
                                l1957 0F43                                  l1949 0F38  
                                l1869 0F72                                  l1893 01A3  
                                l1885 0187                                  l1877 0175  
                                l1991 0518                                  l1983 0502  
                                l1975 04F7                                  l1967 0F4D  
                                l1959 0F44                                  l1799 0FC9  
                                l1887 0197                                  l1879 017A  
                                l1993 051E                                  l1985 0506  
                                l1969 04E7                                  l1889 0199  
                                l1897 01B3                                  l1995 0521  
                                l1987 050C                                  l1899 01C6  
                                l1997 0523                                  l1989 0515  
                                l1999 052D                                  _ADIE 0466  
                                _ADIF 0066                                  _CHS1 00FB  
                                STR_1 0257                                  STR_2 0246  
                                STR_3 0267                                  STR_4 0274  
                                STR_5 0287                                  STR_6 0280  
                                _BRGH 04C2                                  _CREN 00C4  
                                _T0IF 005A                                  u1010 0FCF  
                                u1011 0FCE                                  u1020 0FF5  
                                u1100 0452                                  u1021 0FF4  
                                u1101 0451                                  u1030 054B  
                                u1110 0F59                                  u1111 0F58  
                                u1120 01E8                                  u1200 009A  
                                u1121 01E7                                  u1201 0099  
                                u1050 057C                                  u1210 009F  
                                u1051 057B                                  u1211 009E  
                                u1060 05A5                                  u1044 055D  
                                u1140 050C                                  u1300 0147  
                                u1220 00C7                                  u1061 05A4  
                                u1045 055B                                  u1141 050B  
                                u1301 0146                                  u1221 00C6  
                                u1150 02D9                                  u1070 041D  
                                u1310 014C                                  u1230 00CE  
                                u1151 02D8                                  u1071 041C  
                                u1311 014B                                  u1231 00CD  
                                u1160 02E8                                  u1080 0422  
                                u1320 015B                                  u1240 00E8  
                                u1161 02E7                                  u1081 0421  
                                u1321 015A                                  u1241 00E7  
                                u1225 00C3                                  u1090 044D  
                                u1330 0160                                  u1250 00EF  
                                u1170 0051                                  u1091 044C  
                                u1331 015F                                  u1251 00EE  
                                u1171 0050                                  u1260 0109  
                                u1180 0056                                  u1261 0108  
                                u1245 00E4                                  u1181 0055  
                                u1270 0110                                  u1190 0063  
                                u1271 010F                                  u1191 0062  
                                u1280 012A                                  u1281 0129  
                                u1265 0105                                  u1290 0131  
                                u1291 0130                                  u1285 0126  
                                _PEIE 005E                                  _RCIE 0465  
                                _RCIF 0065                                  _TMR0 0001  
                                _TMR1 000E                                  _TMR2 0011  
                                _SPEN 00C7                                  _TXEN 04C5  
                                _SYNC 04C4                                  _WPUB 0095  
               make_custom_chars@club 021E                          __CFG_WRT$OFF 0000  
                                _main 0F80                                  btemp 007E  
                     _check_for_match 0411                          lcd_init@port 002E  
                                start 0010                          lcd_goto@port 002C  
                       __CFG_IESO$OFF 0000                       i1Delay20us@next 0071  
                     __end_of_DelayMs 0EDA                         __CFG_MCLRE$ON 0000  
                         i1_lcd_putch 0E9F                           i1_lcd_write 0745  
                      ?_update_cursor 0038                                 ?_main 0070  
                     __end_of___awdiv 04E7                                 _CCPR1 0015  
                               _BRG16 0C3B                         __CFG_WDTE$OFF 0000  
                     __end_of___awmod 0601                                 _ANSEL 0188  
                     ___awdiv@divisor 002B                                 _T2CON 0012  
                               i1l320 07B7                                 i1l322 07CA  
                               i1l319 07B8                                 i1l360 0EAE  
                               i1l345 0E75                                 i1l348 078D  
                     ___awdiv@counter 0030                                 _RCREG 001A  
        __size_of_randomize_gameboard 005F                                 _SPBRG 0099  
                               _PORTA 0005                                 _PORTB 0006  
                               _PORTD 0008                                 _TRISA 0085  
                               _TRISB 0086                                 _TRISC 0087  
                               _TRISD 0088                make_custom_chars@heart 022E  
              make_custom_chars@spade 0226                        __CFG_FCMEN$OFF 0000  
              make_custom_chars@smile 023E                make_custom_chars@skull 0216  
                               _nRBPU 040F               _lcd_display_char_as_num 0316  
                               _board 00C0                          lcd_puts@port 002C  
                      __CFG_BOREN$OFF 0000                                 pclath 000A  
                               status 0003                       __end_of_startup 0316  
                               wtemp0 007E                         DelayMs@millis 0024  
                     __initialization 0013                          __end_of_main 0FBB  
                  __size_of_Delay20us 000E                                ??_main 005B  
                     ??_toggle_cursor 0038                          ?i1_Delay20us 0070  
                              _ADCON0 001F                                _ADCON1 009F  
                              _CCP1M0 00B8                                _CCP1M1 00B9  
                              _CCP1M2 00BA                                _CCP1M3 00BB  
                              _CCP1IF 0062               __end_of_check_for_match 047E  
                              _ADRESH 001E                                _ADRESL 009E  
                    ___awdiv@dividend 002D           __end_ofmake_custom_chars@RH 0216  
                              _ANSELH 0189                update_cursor@direction 0038  
                  i1lcd_write@CmdChar 0072                                u100_20 0E75  
                              u100_21 0E74                                i1l2131 0792  
                              i1l2109 0EA0                                i1l2141 07A9  
                              i1l2133 0796                                i1l2151 07C0  
                              i1l2135 079E                                i1l2143 07AA  
                              i1l2145 07AE                                i1l2137 07A0  
                              i1l2129 078E                                i1l2147 07B5  
                              i1l2139 07A8                                i1l2149 07BC  
                              u113_25 0749                                i1l1921 0746  
             __size_of_gameboard_init 0060                                i1l1923 0759  
                              i1l1781 0E6A                                i1l1925 075E  
                              i1l1927 076D                                i1l1929 0779  
                              i1l1787 0E6B                                i1l1789 0E6F  
                              u134_20 0792                                u134_21 0791  
                              u135_20 0796                                u135_21 0795  
                              u136_20 07AE                                u136_21 07AD  
                              u137_20 07B5                                u137_21 07B4  
                              u138_20 07BC                                u138_21 07BB  
                           ??_DelayMs 0026                                _TMR1GE 0086  
                              _TMR1CS 0081                                _TMR2IE 0461  
                              _TMR2IF 0061                                _TMR1ON 0080  
          __end_of_display_scoreboard 06F6                   _lcd_set_custom_char 0653  
                      __CFG_PWRTE$OFF 0000                       ??_update_cursor 0039  
                        ?_serial_init 0070                      __end_of_lcd_init 0653  
                    __end_of_lcd_goto 0F2D                      __end_of_lcd_puts 0800  
                           ??___awdiv 002F                             ??___awmod 0028  
                    ___awdiv@quotient 0032                       ___awmod@divisor 0024  
                       lcd_putch@port 0034                       ___awmod@counter 0029  
           ??_lcd_display_char_as_num 003B                  ?_lcd_set_custom_char 002C  
                              saved_w 007E             __size_of_get_current_char 000F  
                           ??_startup 003F                     __end_of_Delay20us 0E90  
       update_cursor@move_delay_count 003B               __end_of__initialization 0047  
           __size_of_get_cursor_index 000B                         lcd_write@mode 002B  
                       lcd_write@port 0027                        __pcstackCOMMON 0070  
                        __pidataBANK0 0E49                 check_for_match@player 0040  
               __end_of_joystick_init 0F52                 ??_lcd_set_custom_char 002F  
                  __size_of_lcd_clear 001A                    __size_of_lcd_putch 0012  
                  __size_of_lcd_write 004F                      ?_check_for_match 0070  
                          __pbssBANK0 005B                            __pbssBANK1 00A0  
                          __pbssBANK3 0190               _cursor_move_delay_count 007D  
     __end_of_lcd_display_char_as_num 0395                   _randomize_gameboard 0547  
                          __pmaintext 0F80                          ?i1_lcd_putch 0078  
                        ?i1_lcd_write 0072                            __pintentry 0004  
                  __size_of_tmr0_init 000A          __end_ofmake_custom_chars@PIC 020E  
                             _T1CKPS0 0084                               _T1CKPS1 0085  
                ?_randomize_gameboard 0070                    __size_of_time_init 000C  
                  display_gameboard@i 0039                       i1lcd_putch@port 0078  
                           ?_lcd_init 002E                             ?_lcd_goto 002C  
                           ?_lcd_puts 002C                            __stringtab 0200  
                      _gameboard_init 04E7                lcd_set_custom_char@row 0031  
            make_custom_chars@diamond 0236                  __size_ofi1_Delay20us 000C  
                             _DelayMs 0EC1            randomize_gameboard@current 0057  
                   __end_of_lcd_clear 0EF4             randomize_gameboard@random 0058  
                     i1lcd_write@mode 0077                       i1lcd_write@port 0073  
                   __end_of_lcd_putch 0EC1                               ___awdiv 047E  
                             ___awmod 05A6                     __end_of_lcd_write 0745  
                __size_of_serial_init 001B        __end_ofmake_custom_chars@heart 0236  
      __end_ofmake_custom_chars@spade 022E        __end_ofmake_custom_chars@smile 0246  
      __end_ofmake_custom_chars@skull 021E                               __ptext1 004B  
                             __ptext2 016C                               __ptext3 0F52  
                             __ptext4 0411                               __ptext5 028D  
                             __ptext6 06A5                               __ptext7 07D5  
                             __ptext8 0316                               __ptext9 05A6  
                          _cursor_pos 0066                 ??_randomize_gameboard 0034  
                    ___awmod@dividend 0026                      _get_current_char 0E90  
              __end_of_gameboard_init 0547                               _visible 00A0  
                             _startup 028D                               clrloop0 0E4E  
                          ??_lcd_init 0030                            ??_lcd_goto 002E  
                          ??_lcd_puts 002E                  end_of_initialization 0047  
                   __end_of_tmr0_init 0E5F                        lcd_puts@string 002F  
                    _get_cursor_index 0E5F                         _recieved_char 007C  
                   __end_of_time_init 0E82                            _scoreboard 0067  
          check_for_match@second_tile 0041                    _display_scoreboard 06A5  
       lcd_set_custom_char@cg_address 002C                        _joystick_x_pos 005D  
                      _joystick_y_pos 005B                   ?_display_scoreboard 0070  
                     ?_gameboard_init 0070                 __end_of_toggle_cursor 0F80  
                           _Delay20us 0E82                  make_custom_chars@PIC 0206  
                ??_display_scoreboard 003E                 __end_of_update_cursor 01FF  
        ?_update_gameboard_from_input 0070                  __size_ofi1_lcd_putch 0010  
                __size_ofi1_lcd_write 0049                   start_initialization 0013  
                          ?_Delay20us 0070                       gameboard_init@i 005A  
                i1lcd_putch@character 007B         lcd_display_char_as_num@digits 0038  
         __end_of_lcd_set_custom_char 06A5                           __pdataBANK0 0067  
            ?_lcd_display_char_as_num 0038         lcd_display_char_as_num@number 003D  
       ??_update_gameboard_from_input 0043                           __pbssCOMMON 007C  
                           ___latbits 0002                         __pcstackBANK0 0020  
                       _selected_tile 005F                              ?_DelayMs 0024  
              __size_of_joystick_init 0025                     __size_of_lcd_init 0052  
                   __size_of_lcd_goto 001E                     __size_of_lcd_puts 002B  
                        _current_char 0065              __size_of_check_for_match 006D  
                         _delay_loops 0063              __end_of_get_current_char 0E9F  
                           _gameboard 0069        check_for_match@temp_cursor_pos 0042  
                            ?___awdiv 002B                              ?___awmod 0024  
                   _display_gameboard 0FBB                             _lcd_clear 0EDA  
                        _cursor_solid 0064                             __pstrings 0200  
                           _lcd_putch 0EAF                    ?_display_gameboard 0070  
                           _lcd_write 06F6              __end_of_get_cursor_index 0E6A  
                   _interrupt_handler 078E                    ?_interrupt_handler 0070  
                       ??i1_Delay20us 0070                   ??_display_gameboard 0038  
       __end_ofmake_custom_chars@club 0226                              ?_startup 0070  
__size_of_update_gameboard_from_input 0121                   ??_interrupt_handler 0020  
                   interrupt_function 0004                        _cursor_movable 0062  
                         ??_Delay20us 0024                             clear_ram0 0E4D  
                           _tmr0_init 0E55                         ??_serial_init 0024  
           __end_of_display_gameboard 1000                             _time_init 0E76  
         __end_of_randomize_gameboard 05A6                            ?_lcd_clear 002C  
           __end_of_interrupt_handler 07D5                         _joystick_init 0F2D  
                          ?_lcd_putch 0034               lcd_set_custom_char@data 0032  
                         __stringbase 0205                            ?_lcd_write 0026  
                    ??_gameboard_init 0059               lcd_set_custom_char@port 002D  
         lcd_display_char_as_num@port 0039                   make_custom_chars@RH 020E  
                    __size_of_DelayMs 0019                   __end_ofi1_Delay20us 0E76  
                          ?_tmr0_init 0070                              _p1_score 0061  
                            _p2_score 0060                            ?_time_init 0070  
                   _make_custom_chars 0395                      __size_of___awdiv 0069  
                   ??_check_for_match 003F                      __size_of___awmod 005B  
                      ?_joystick_init 0070                   __end_of_serial_init 0F0F  
                  ?_make_custom_chars 0070                    __end_of__stringtab 0206  
    __end_ofmake_custom_chars@diamond 023E                   ??_make_custom_chars 0033  
                            __ptext10 0FBB                              __ptext11 0EAF  
                            __ptext20 0395                              __ptext12 0EF4  
                            __ptext21 0653                              __ptext13 0601  
                            __ptext30 0E9F                              __ptext22 0F0F  
                            __ptext14 0E55                              __ptext31 0745  
                            __ptext23 0EDA                              __ptext15 0F2D  
                            __ptext32 0E6A                              __ptext24 06F6  
                            __ptext16 04E7                              __ptext25 0E82  
                            __ptext17 0E76                              __ptext26 0EC1  
                            __ptext18 0547                              __ptext27 0E90  
                            __ptext19 047E                              __ptext28 0E5F  
                            __ptext29 078E                     __CFG_BOR4V$BOR21V 0000  
                            _lcd_init 0601                              _lcd_goto 0F0F  
                            _lcd_puts 07D5                      __size_of_startup 0089  
                       __size_of_main 003B                    lcd_putch@character 0037  
                       ??i1_lcd_putch 007A             __end_of_make_custom_chars 0411  
                       ??i1_lcd_write 0075           __size_of_display_scoreboard 0051  
          __size_of_display_gameboard 0045                __size_of_toggle_cursor 002E  
                         ??_lcd_clear 002E            __size_of_interrupt_handler 0047  
            randomize_gameboard@F1347 0190                           ??_lcd_putch 0036  
                         ??_lcd_write 0029                           i1_Delay20us 0E6A  
    __size_of_lcd_display_char_as_num 007F                              intlevel1 0000  
              __size_of_update_cursor 0093                         Delay20us@next 0025  
                         ??_tmr0_init 0024                             stringcode 0200  
                         _serial_init 0EF4                     ?_get_current_char 0070  
                     ??_joystick_init 0024                           ??_time_init 0024  
                  ??_get_current_char 0024                   __end_ofi1_lcd_putch 0EAF  
                 __end_ofi1_lcd_write 078E               randomize_gameboard@used 0037  
                          _OPTION_REG 0081                      lcd_goto@position 002F  
                   ?_get_cursor_index 0070          __size_of_lcd_set_custom_char 0052  
                            stringdir 0200                              stringtab 0200  
                  ??_get_cursor_index 0024                         _toggle_cursor 0F52  
                    lcd_write@CmdChar 0026            __size_of_make_custom_chars 007C  
